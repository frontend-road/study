{"id":10216,"title":"79 | 程序员练级攻略：Java底层知识","content":"<p>你好，我是陈皓，网名左耳朵耗子。</p><p>前两篇文章分享的是系统底层方面的内容，今天我们进入高手成长篇的第二部分——Java底层知识。</p><h1>Java 字节码相关</h1><p>首先，Java最黑科技的玩法就是字节码编程，也就是动态修改或是动态生成Java字节码。Java的字节码相当于汇编，其中的一些细节你可以从下面的这几个教程中学习。</p><ul>\n<li>\n<p><a href=\"https://dzone.com/articles/introduction-to-java-bytecode\">Java Zone: Introduction to Java Bytecode</a> ，这篇文章图文并茂地向你讲述了Java字节码的一些细节，是一篇很不错的入门文章。</p>\n</li>\n<li>\n<p><a href=\"https://www.ibm.com/developerworks/library/it-haggar_bytecode/index.html\">IBM DeveloperWorks: Java bytecode</a> ，虽然这篇文章很老了，但是这篇文章是一篇非常好的讲Java 字节码的文章。</p>\n</li>\n<li>\n<p><a href=\"https://github.com/jon-bell/bytecode-examples\">Java Bytecode and JVMTI Examples</a>，这是一些使用 <a href=\"http://docs.oracle.com/javase/7/docs/platform/jvmti/jvmti.html\">JVM Tool Interface</a> 操作字节码的比较实用的例子。包括方法调用统计、静态字节码修改、Heap Taggin和Heap Walking。</p>\n</li>\n</ul><p>当然，一般来说，我们不使用JVMTI操作字节码，而是用一些更好用的库。这里有三个库可以帮你比较容易地做这个事。</p><ul>\n<li><a href=\"https://wiki.openjdk.java.net/display/CodeTools/asmtools\">asmtools</a> - 用于生产环境的Java .class文件开发工具。</li>\n<li><a href=\"http://bytebuddy.net/\">Byte Buddy</a> - 代码生成库：运行时创建Class文件而不需要编译器帮助。</li>\n<li><a href=\"https://github.com/qmx/jitescript\">Jitescript</a> - 和 <a href=\"https://github.com/headius/bitescript\">BiteScript</a> 类似的字节码生成库。</li>\n</ul><!-- [[[read_end]]] --><p>就我而言，我更喜欢Byte Buddy，它在2015年还获了Oracle的 “<a href=\"https://www.oracle.com/corporate/pressrelease/dukes-award-102815.html\">Duke’s Choice</a>”大奖，其中说Byte Buddy极大地发展了Java的技术。</p><p>使用字节码编程可以玩出很多高级玩法，最高级的还是在Java程序运行时进行字节码修改和代码注入。听起来是不是一些很黑客，也很黑科技的事？是的，这个方式使用Java这门静态语言在运行时可以进行各种动态的代码修改，而且可以进行无侵入的编程。</p><p>比如， 我们不需要在代码中埋点做统计或监控，可以使用这种技术把我们的监控代码直接以字节码的方式注入到别人的代码中，从而实现对实际程序运行情况进行统计和监控。如果你看过我的《编程范式游记》，你就知道这种技术的威力了，其可以很魔法地把业务逻辑和代码控制分离开来。</p><p>要做到这个事，你还需要学习一个叫Java Agent的技术。Java Agent使用的是 “<a href=\"https://stackoverflow.com/questions/11898566/tutorials-about-javaagents\">Java Instrumentation API</a>”，其主要方法是实现一个叫 <code>premain()</code> 的方法（嗯，一个比 <code>main()</code> 函数还要超前执行的 main 函数），然后把你的代码编译成一个jar文件。</p><p>在JVM启动时，使用这样的命令行来引入你的jar文件：<code>java -javaagent:yourAwesomeAgent.jar -jar App.jar</code>。更为详细的文章你可以参看：“<a href=\"https://www.javacodegeeks.com/2015/09/java-agents.html\">Java Code Geeks: Java Agents</a>”，你还可以看一下这个示例项目：<a href=\"https://github.com/toptal/jvm-monitoring-agent\">jvm-monitoring-agent</a> 或是 <a href=\"https://gist.github.com/EntryPointKR/152f089f6f3884047abcd19d39297c9e\">EntryPointKR/Agent.java</a>。如果想用ByteBuddy来玩，你可以看看这篇文章 “<a href=\"http://www.infoq.com/cn/articles/Easily-Create-Java-Agents-with-ByteBuddy\">通过使用Byte Buddy，便捷地创建Java Agent</a>”。如果你想学习如何用Java Agent做监控，你可以看一下这个项目 <a href=\"http://www.stagemonitor.org/\">Stage Monitor</a>。</p><h1>JVM 相关</h1><p>接下来讲讲Java底层知识中另一个非常重要的内容——JVM。</p><p>说起JVM，你有必要读一下JVM的规格说明书，我在这里放一个Java 8的， <a href=\"https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf\">The Java Virtual Machine Specification Java SE 8 Edition</a> 。对于规格说明书的阅读，我认为是系统了解JVM规范的最佳文档，这个文档可以让你对于搞不清楚或是诡异的问题恍然大悟。关于中文翻译，有人在GitHub上开了个Repo - “<a href=\"https://github.com/waylau/java-virtual-machine-specification\">java-virtual-machine-specification</a>”。</p><p>另外，也推荐一下 <a href=\"https://shipilev.net/jvm-anatomy-park/\">JVM Anatomy Park</a> JVM解剖公园，这是一个系列的文章，每篇文章都不长，但是都很精彩，带你一点一点地把JVM中的一些技术解开。</p><p>学习Java底层原理还有Java的内存模型，官方文章是 <a href=\"http://www.jcp.org/en/jsr/detail?id=133\">JSR 133</a>。还有马里兰大学的威廉·皮尤（William Pugh）教授收集的和Java内存模型相关的文献 - <a href=\"http://www.cs.umd.edu/~pugh/java/memoryModel/\">The Java Memory Model</a> ，你可以前往浏览。</p><p>对于内存方面，道格·利（Doug Lea）有两篇文章也是很有价值的。</p><ul>\n<li>\n<p><a href=\"http://gee.cs.oswego.edu/dl/jmm/cookbook.html\">The JSR-133 Cookbook for Compiler Writers</a>，解释了怎样实现Java内存模型，特别是在考虑到多处理器（或多核）系统的情况下，多线程和读写屏障的实现。</p>\n</li>\n<li>\n<p><a href=\"http://gee.cs.oswego.edu/dl/html/j9mm.html\">Using JDK 9 Memory Order Modes</a>，讲了怎样通过VarHandle来使用plain、opaque、release/acquire和volatile四种共享内存的访问模式，并剖析了底层的原理。</p>\n</li>\n</ul><p>垃圾回收机制也是需要好好学习的，在这里推荐一本书 《<a href=\"https://book.douban.com/subject/6809987/\">The Garbage Collection Handbook</a>》，在豆瓣上的得分居然是9.9（当然，评价人数不多）。这本书非常全面地介绍了垃圾收集的原理、设计和算法。但是这本书也是相当难啃的。中文翻译《<a href=\"https://book.douban.com/subject/26740958/\">垃圾回收算法手册</a>》翻译得很一般，有人说翻译得很烂。所以，如果可能，还是读英文版的。如果你对从事垃圾回收相关的工作有兴趣，那么你需要好好看一下这本书。</p><p>当然，更多的人可能只需要知道怎么调优垃圾回收， 那么推荐读读 <a href=\"http://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/\">Garbage Collection Tuning Guide</a> ，它是Hotspot Java虚拟机的垃圾回收调优指南，对你很有帮助。</p><p><a href=\"https://gist.github.com/djspiewak/464c11307cabc80171c90397d4ec34ef\">Quick Tips for Fast Code on the JVM</a> 也是一篇很不错的文章，里面有写出更快的Java代码的几个小提示，值得一读。</p><h1>小结</h1><p>好了，总结一下今天学到的内容。Java最黑科技的玩法就是字节码编程，也就是动态修改或是动态生成Java字节码。Java的字节码相当于汇编，学习其中的细节很有意思，为此我精心挑选了3篇文章，供你学习。我们一般不使用JVMTI操作字节码，而是用一些更好用的库，如asmtools、Byte Buddy和BiteScript等。使用字节码编程可以玩出很多高级玩法，其中最高级的玩法是在Java程序运行时进行字节码修改和代码注入。同时，我介绍了Java Agent技术，帮助你更好地实现这种高级玩法。</p><p>JVM也是学习Java过程中非常重要的一部分内容。我推荐阅读一下JVM的规格说明书，我认为，它是系统了解JVM规范的最佳文档，可以让你对于搞不清楚或是诡异的问题恍然大悟。同时推荐了 <a href=\"https://shipilev.net/jvm-anatomy-park/\">JVM Anatomy Park</a> 系列文章，也非常值得一读。</p><p>随后介绍的是Java的内存模型和垃圾回收机制，尤其给出了如何调优垃圾回收方面的资料。这些内容都很底层，但也都很重要。对于想成为高手的你来说，还是有必要花时间来啃一啃的。</p><p>下篇文章是数据库方面的内容，我们将探讨各种类型的数据库，非常有意思。敬请期待。</p><p>下面是《程序员练级攻略》系列文章的目录。</p><ul>\n<li><a href=\"https://time.geekbang.org/column/article/8136\">开篇词</a></li>\n<li>入门篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/8216\">零基础启蒙</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/8217\">正式入门</a></li>\n</ul>\n</li>\n<li>修养篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/8700\">程序员修养</a></li>\n</ul>\n</li>\n<li>专业基础篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/8701\">编程语言</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/8887\">理论学科</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/8888\">系统知识</a></li>\n</ul>\n</li>\n<li>软件设计篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/9369\">软件设计</a></li>\n</ul>\n</li>\n<li>高手成长篇\n<ul>\n<li><a href=\"https://time.geekbang.org/column/article/9759\">Linux系统、内存和网络（系统底层知识）</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/9851\">异步I/O模型和Lock-Free编程（系统底层知识）</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/10216\">Java底层知识</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/10301\">数据库</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/10603\">分布式架构入门（分布式架构）</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/10604\">分布式架构经典图书和论文（分布式架构）</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/11232\">分布式架构工程设计(分布式架构)</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/11116\">微服务</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/11665\">容器化和自动化运维</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/11669\">机器学习和人工智能</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/12271\">前端基础和底层原理（前端方向）</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/12389\">前端性能优化和框架（前端方向）</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/12486\">UI/UX设计（前端方向）</a></li>\n<li><a href=\"https://time.geekbang.org/column/article/12561\">技术资源集散地</a></li>\n</ul>\n</li>\n</ul>","comments":[{"had_liked":false,"id":16413,"user_name":"二进制之路","can_delete":false,"product_type":"c1","uid":1008395,"ip_address":"","ucode":"67C84B013147B1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/0b/ad56aeb4.jpg","comment_is_top":false,"comment_ctime":1531930466,"is_pvip":false,"replies":[{"id":"5828","content":"谢谢理解","user_name":"作者回复","user_name_real":"左耳朵","uid":"1001269","ctime":1532178258,"ip_address":"","comment_id":16413,"utype":1}],"discussion_count":1,"race_medal":0,"score":"422438725474","product_id":100002201,"comment_content":"有同学认为这种介绍文章没用，一大堆引用。我觉得吧，这文章价值很大。如果只是要写一篇关于字节码或JVM的详细使用，那很多书籍或网站可能有了，反而不值得写。耗子叔这系列文章，在我看来很有大局观，自顶向下梳理了各种技术脉络。授人以渔其实更重要，好的老师是给你指出明路，让你少走弯路，而不是给你讲解几道题。不过这也许要工作几年后才能更深刻的体会到吧，这些总结的资源是一笔财富，至少不用走弯路，可以有选择性的去挑选适合你的认为有价值有兴趣的内容去学习。","like_count":99,"discussions":[{"author":{"id":1001269,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/35/89726f5f.jpg","nickname":"左耳朵","note":"","ucode":"8A4741D677702E","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420789,"discussion_content":"谢谢理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532178258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18393,"user_name":"吃桔子的攻城狮","can_delete":false,"product_type":"c1","uid":1016564,"ip_address":"","ucode":"0EFDBAE749F675","user_header":"https://static001.geekbang.org/account/avatar/00/0f/82/f4/c23b1dd7.jpg","comment_is_top":false,"comment_ctime":1533289008,"is_pvip":true,"replies":[{"id":"6441","content":"谢谢","user_name":"作者回复","user_name_real":"左耳朵","uid":"1001269","ctime":1533306350,"ip_address":"","comment_id":18393,"utype":1}],"discussion_count":2,"race_medal":0,"score":"186216882736","product_id":100002201,"comment_content":"第一次评论。这个专栏看了这么久，第一次觉得有必要说几句，这种风格的专栏真的非常赞。看到有些同学说链接太多缺少耗子哥自己的东西，我想说这个系列随便一篇文章拿出来，如果纯自己写都能单独写成一个系列甚至一本书。这就像重复造轮子，明明已经有了优秀的文献资料，为什么要重新写一套？相反，能把这些优质资源做整合，串联，归纳，提供学习的路径和思路才是受益无穷的！<br><br>有同学说这些都是网上可以找到的，那不妨请想一下，如果只给你本系列某篇文章的题目，凭自己你真的可以找得到这些资料吗？不会陷入现在互相抄来抄去的劣质博客里迷惘困惑，百思不得其解吗？<br><br>支持这种风格，我认为订阅专栏的钱花的很超值！","like_count":44,"discussions":[{"author":{"id":1001269,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/35/89726f5f.jpg","nickname":"左耳朵","note":"","ucode":"8A4741D677702E","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421506,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533306350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013097,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/69/791d0f5e.jpg","nickname":"rocedu","note":"","ucode":"E46E29CBBB94A9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291273,"discussion_content":"顺藤摸瓜是主动学习必备技能，皓哥给藤，我们摸瓜","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594761459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14690,"user_name":"怪盗キッド","can_delete":false,"product_type":"c1","uid":1048065,"ip_address":"","ucode":"D96BC268F5FB6C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/01/3f3ae95e.jpg","comment_is_top":false,"comment_ctime":1530598209,"is_pvip":false,"replies":[{"id":"4921","content":"👍那些统计，你用到了蓄水池算法了吗？","user_name":"作者回复","user_name_real":"左耳朵","uid":"1001269","ctime":1530612770,"ip_address":"","comment_id":14690,"utype":1}],"discussion_count":1,"race_medal":0,"score":"108904780609","product_id":100002201,"comment_content":"Hi，我利用ASM写了一个简单、快速且无侵入的Java方法监控工具MyPerf4J，通过JavaAgent方式对Java方法进行字节码注入，可以统计出方法的执行性能指标，包括RPS、Avg、TP50、TP90、TP99、TP999等，Github地址：https:&#47;&#47;github.com&#47;ThinkpadNC5&#47;MyPerf4J","like_count":26,"discussions":[{"author":{"id":1001269,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/35/89726f5f.jpg","nickname":"左耳朵","note":"","ucode":"8A4741D677702E","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420094,"discussion_content":"👍那些统计，你用到了蓄水池算法了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530612770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159025,"user_name":"lion_fly","can_delete":false,"product_type":"c1","uid":1060242,"ip_address":"","ucode":"FCFD6B66C01B83","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/92/287f99db.jpg","comment_is_top":false,"comment_ctime":1575517072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53115124624","product_id":100002201,"comment_content":"看这么多书，耗子叔居然没有掉头发","like_count":13},{"had_liked":false,"id":14694,"user_name":"ruby","can_delete":false,"product_type":"c1","uid":1046310,"ip_address":"","ucode":"2B58F0B5056109","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/26/3a10924a.jpg","comment_is_top":false,"comment_ctime":1530599521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35890337889","product_id":100002201,"comment_content":"皓哥，后面有大数据文章，怎么学spark.hadoop等吗？","like_count":8},{"had_liked":false,"id":14741,"user_name":"superryanguo","can_delete":false,"product_type":"c1","uid":1147885,"ip_address":"","ucode":"AFC1C67A1D7864","user_header":"https://static001.geekbang.org/account/avatar/00/11/83/ed/8dfd6981.jpg","comment_is_top":false,"comment_ctime":1530625905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27300429681","product_id":100002201,"comment_content":"java有必要单独抽一篇来讲吗？而且都是引用","like_count":6},{"had_liked":false,"id":183303,"user_name":"待时而发","can_delete":false,"product_type":"c1","uid":1158705,"ip_address":"","ucode":"92104F88D537F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/31/2c8a3a66.jpg","comment_is_top":false,"comment_ctime":1582990410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18762859594","product_id":100002201,"comment_content":"耗子叔，实在是太厉害了，这种资源整合真的是服了，那天看你直播发现你头发还是那么多，这么多的东西你是怎么看完的.....太佩服了","like_count":4},{"had_liked":false,"id":14758,"user_name":"鹤鸣","can_delete":false,"product_type":"c1","uid":1007838,"ip_address":"","ucode":"3E9D0A9D10E392","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/de/d752c204.jpg","comment_is_top":false,"comment_ctime":1530636339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18710505523","product_id":100002201,"comment_content":"C++程序员问个问题:怎样对一个已有的基于spring的项目优化性能?目前我这边首先要做的事情是测试出性能瓶颈，但是目前为止我还在使用那种很土的办法，纯体力活的那种，我觉得这个路子不大对头。","like_count":4},{"had_liked":false,"id":14653,"user_name":"ZYCHD(子玉)","can_delete":false,"product_type":"c1","uid":1109815,"ip_address":"","ucode":"32B2ED529450C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/37/4b12b4cc.jpg","comment_is_top":false,"comment_ctime":1530584177,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14415486065","product_id":100002201,"comment_content":"读耗子书的文章总给人带来新鲜的感觉。视野很开阔。前后穿插纵横千里！","like_count":3},{"had_liked":false,"id":14659,"user_name":"Rolin","can_delete":false,"product_type":"c1","uid":1155124,"ip_address":"","ucode":"912D3BB9A8E5C7","user_header":"","comment_is_top":false,"comment_ctime":1530586457,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10120521049","product_id":100002201,"comment_content":"Android 程序猿好好学！","like_count":2},{"had_liked":false,"id":14619,"user_name":"葛阳","can_delete":false,"product_type":"c1","uid":1129902,"ip_address":"","ucode":"DDC6D5CF151C23","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/ae/5eede757.jpg","comment_is_top":false,"comment_ctime":1530578237,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10120512829","product_id":100002201,"comment_content":"赞","like_count":2},{"had_liked":false,"id":224834,"user_name":"货赛阔xliu","can_delete":false,"product_type":"c1","uid":2005833,"ip_address":"","ucode":"EE60C463A14396","user_header":"https://static001.geekbang.org/account/avatar/00/1e/9b/49/42d3d70c.jpg","comment_is_top":false,"comment_ctime":1591560195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5886527491","product_id":100002201,"comment_content":"左耳朵老师， <br>Aleksey的那个blog叫JVM Anatomy Quarks，不是park是夸克。 <br>我觉得他就是想对jvm做量子维度的分析。 ","like_count":1},{"had_liked":false,"id":211938,"user_name":"土豆小小","can_delete":false,"product_type":"c1","uid":1457246,"ip_address":"","ucode":"5621EEDE50EA48","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVZRHorm7z67yJxOCpYWJESPfhia00RDg4oicvPuyCwTKln2BFRMiahOKz9z22RnnEmickA64bHdB7pA/132","comment_is_top":false,"comment_ctime":1588039121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883006417","product_id":100002201,"comment_content":"突然的感受，国外程序员的简历上都有很多底层语言，就很好奇他们在自己的项目中是如何涉及到这么多不同的技术","like_count":1},{"had_liked":false,"id":198377,"user_name":"CodeAllen","can_delete":false,"product_type":"c1","uid":1436590,"ip_address":"","ucode":"DC479F9F7845CA","user_header":"https://static001.geekbang.org/account/avatar/00/15/eb/ae/e4752b7e.jpg","comment_is_top":false,"comment_ctime":1585448526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880415822","product_id":100002201,"comment_content":"打卡第79篇，感谢耗子叔","like_count":1},{"had_liked":false,"id":100022,"user_name":"庞雨青_Alice","can_delete":false,"product_type":"c1","uid":1547857,"ip_address":"","ucode":"CE7518B883FB1C","user_header":"https://static001.geekbang.org/account/avatar/00/17/9e/51/4bded5f2.jpg","comment_is_top":false,"comment_ctime":1559392882,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5854360178","product_id":100002201,"comment_content":"非常感谢左耳皓哥的分享。<br><br>读精品的技术文章真是一件很爽快的事情。我个人是喜欢刨根究底的类型，之前在学习编程的过程中一直都没能找到多少成就感。现在看来一是没有找到最精品的文章，二是没有找到适合自己的方式。<br><br>这几天耐着性子慢慢读英文的文章，自己的英语能力也有所提高。<br><br>感谢皓哥🙏","like_count":1},{"had_liked":false,"id":58074,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1546993394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841960690","product_id":100002201,"comment_content":"恩，认同这种风格的文章，感觉很导师风格，指明路线自己去玩，每个人的收获取决于每个人的付出。","like_count":1},{"had_liked":false,"id":14766,"user_name":"中山浪子","can_delete":false,"product_type":"c1","uid":1055296,"ip_address":"","ucode":"25D0F8462473D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/40/f10493ef.jpg","comment_is_top":false,"comment_ctime":1530659627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5825626923","product_id":100002201,"comment_content":"耗叔有专门讲c++对象模型方面和内存分配的篇章嚒？","like_count":1},{"had_liked":false,"id":335299,"user_name":"范特西","can_delete":false,"product_type":"c1","uid":1359210,"ip_address":"","ucode":"6F57092D832D7F","user_header":"https://static001.geekbang.org/account/avatar/00/14/bd/6a/abe84a16.jpg","comment_is_top":false,"comment_ctime":1645444278,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645444278","product_id":100002201,"comment_content":"耗子书文章点赞，现在计算机只是体系已经非常庞大。想要学习的人也会太多东西，容易东打一枪西打一枪。别人都是贩卖焦虑转我的快钱。耗子叔的东西提纲挈领，让人心里他是。更适合愿意沉下心来学习的人。我自己是平时在浩瀚的知识海洋中常常迷失，所以感谢大佬指点！","like_count":0},{"had_liked":false,"id":328682,"user_name":"wxlbear","can_delete":false,"product_type":"c1","uid":1145447,"ip_address":"","ucode":"D35622050C086C","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/67/2c43bb7a.jpg","comment_is_top":false,"comment_ctime":1640840587,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640840587","product_id":100002201,"comment_content":"能把老师提供的都消化掉，那绝对已经是很厉害的","like_count":0},{"had_liked":false,"id":323935,"user_name":"方勇(gopher)","can_delete":false,"product_type":"c1","uid":1290625,"ip_address":"","ucode":"D199911C4CFEF5","user_header":"https://static001.geekbang.org/account/avatar/00/13/b1/81/13f23d1e.jpg","comment_is_top":false,"comment_ctime":1638234630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638234630","product_id":100002201,"comment_content":"目前java监控采用agent注入的模式！","like_count":0},{"had_liked":false,"id":278240,"user_name":"允","can_delete":false,"product_type":"c1","uid":2427892,"ip_address":"","ucode":"EC867E7575F0E8","user_header":"https://static001.geekbang.org/account/avatar/00/25/0b/f4/9c092c47.jpg","comment_is_top":false,"comment_ctime":1612841153,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612841153","product_id":100002201,"comment_content":"Java 虚拟机那儿提供的中文翻译 REPO 我去看了，是翻译的 Java11 说明书，不知道为啥作者说是 `Chinese translation of The Java® Virtual Machine Specification.` 。","like_count":0},{"had_liked":false,"id":267546,"user_name":"陈晨","can_delete":false,"product_type":"c1","uid":1079525,"ip_address":"","ucode":"DB156033CDA1B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/e5/92bd90d9.jpg","comment_is_top":false,"comment_ctime":1607824632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607824632","product_id":100002201,"comment_content":"非常有用","like_count":0},{"had_liked":false,"id":209681,"user_name":"Geek_dwq","can_delete":false,"product_type":"c1","uid":1817279,"ip_address":"","ucode":"7DC6BFCF746787","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wI2LwgvwseNqXwkF67zicD9UXBSle9DPhmL6uyKG9Nib6NLfU3OuKYuSQ4DHCWxIQecnqell2vKVvNX8boox0B8w/132","comment_is_top":false,"comment_ctime":1587600773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587600773","product_id":100002201,"comment_content":"这篇文章的信息量太大了，受益非浅，谢谢啦！","like_count":0},{"had_liked":false,"id":184687,"user_name":"o0oi1i","can_delete":false,"product_type":"c1","uid":1132312,"ip_address":"","ucode":"D1F6AD4AAEAFBE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/18/293cd24d.jpg","comment_is_top":false,"comment_ctime":1583382164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583382164","product_id":100002201,"comment_content":"打卡79","like_count":0},{"had_liked":false,"id":15713,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1006234,"ip_address":"","ucode":"FA75BF5FDF1BFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5a/9a/a64f21f2.jpg","comment_is_top":false,"comment_ctime":1531406635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1531406635","product_id":100002201,"comment_content":"耗子哥，我记得你以前写过一篇关于java进阶的比较全面的文章，怎么找不到了？","like_count":0},{"had_liked":false,"id":14791,"user_name":"天蓝隐湘","can_delete":false,"product_type":"c1","uid":1032903,"ip_address":"","ucode":"7D4ABF07DF3F21","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/c7/35e66074.jpg","comment_is_top":false,"comment_ctime":1530666549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530666549","product_id":100002201,"comment_content":"好","like_count":0},{"had_liked":false,"id":14726,"user_name":"Len","can_delete":false,"product_type":"c1","uid":1022767,"ip_address":"","ucode":"53C623CE17973F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/2f/b7a3625e.jpg","comment_is_top":false,"comment_ctime":1530621186,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1530621186","product_id":100002201,"comment_content":"动态生成的代码 debug 起来挺费劲的，尤其是用 IDE。耗叔有什么工具或方法推荐吗？","like_count":0},{"had_liked":false,"id":14722,"user_name":"怪盗キッド","can_delete":false,"product_type":"c1","uid":1048065,"ip_address":"","ucode":"D96BC268F5FB6C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/01/3f3ae95e.jpg","comment_is_top":false,"comment_ctime":1530619144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530619144","product_id":100002201,"comment_content":"没有使用蓄水池算法，我是通过数组+Map的方式存储数据：<br>对于数组来说，下标代表方法的响应时间，下标对应的值代表该响应时间的数量；<br>对于Map来说，Key代表方法的响应时间，Value代表该响应时间的数量；（Accurate模式）","like_count":0}]}