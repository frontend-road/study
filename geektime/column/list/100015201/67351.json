{"id":67351,"title":"34 | Kubernetes网络模型与CNI网络插件","content":"<p>你好，我是张磊。今天我和你分享的主题是：Kubernetes网络模型与CNI网络插件。</p><p>在上一篇文章中，我以Flannel项目为例，为你详细讲解了容器跨主机网络的两种实现方法：UDP和VXLAN。</p><p>不难看到，这些例子有一个共性，那就是用户的容器都连接在docker0网桥上。而网络插件则在宿主机上创建了一个特殊的设备（UDP模式创建的是TUN设备，VXLAN模式创建的则是VTEP设备），docker0与这个设备之间，通过IP转发（路由表）进行协作。</p><p>然后，网络插件真正要做的事情，则是通过某种方法，把不同宿主机上的特殊设备连通，从而达到容器跨主机通信的目的。</p><p>实际上，上面这个流程，也正是Kubernetes对容器网络的主要处理方法。只不过，Kubernetes是通过一个叫作CNI的接口，维护了一个单独的网桥来代替docker0。这个网桥的名字就叫作：CNI网桥，它在宿主机上的设备名称默认是：cni0。</p><p>以Flannel的VXLAN模式为例，在Kubernetes环境里，它的工作方式跟我们在上一篇文章中讲解的没有任何不同。只不过，docker0网桥被替换成了CNI网桥而已，如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/9f/8c/9f11d8716f6d895ff6d1c813d460488c.jpg?wh=1767*933\" alt=\"\"></p><p>在这里，Kubernetes为Flannel分配的子网范围是10.244.0.0/16。这个参数可以在部署的时候指定，比如：</p><!-- [[[read_end]]] --><pre><code>$ kubeadm init --pod-network-cidr=10.244.0.0/16\n</code></pre><p>也可以在部署完成后，通过修改kube-controller-manager的配置文件来指定。</p><p>这时候，假设Infra-container-1要访问Infra-container-2（也就是Pod-1要访问Pod-2），这个IP包的源地址就是10.244.0.2，目的IP地址是10.244.1.3。而此时，Infra-container-1里的eth0设备，同样是以Veth Pair的方式连接在Node 1的cni0网桥上。所以这个IP包就会经过cni0网桥出现在宿主机上。</p><p>此时，Node 1上的路由表，如下所示：</p><pre><code># 在Node 1上\n$ route -n\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n...\n10.244.0.0      0.0.0.0         255.255.255.0   U     0      0        0 cni0\n10.244.1.0      10.244.1.0      255.255.255.0   UG    0      0        0 flannel.1\n172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 docker0\n</code></pre><p>因为我们的IP包的目的IP地址是10.244.1.3，所以它只能匹配到第二条规则，也就是10.244.1.0对应的这条路由规则。</p><p>可以看到，这条规则指定了本机的flannel.1设备进行处理。并且，flannel.1在处理完后，要将IP包转发到的网关（Gateway），正是“隧道”另一端的VTEP设备，也就是Node 2的flannel.1设备。所以，接下来的流程，就跟上一篇文章中介绍过的Flannel VXLAN模式完全一样了。</p><p>需要注意的是，CNI网桥只是接管所有CNI插件负责的、即Kubernetes创建的容器（Pod）。而此时，如果你用docker run单独启动一个容器，那么Docker项目还是会把这个容器连接到docker0网桥上。所以这个容器的IP地址，一定是属于docker0网桥的172.17.0.0/16网段。</p><p>Kubernetes之所以要设置这样一个与docker0网桥功能几乎一样的CNI网桥，主要原因包括两个方面：</p><ul>\n<li>一方面，Kubernetes项目并没有使用Docker的网络模型（CNM），所以它并不希望、也不具备配置docker0网桥的能力；</li>\n<li>另一方面，这还与Kubernetes如何配置Pod，也就是Infra容器的Network Namespace密切相关。</li>\n</ul><p>我们知道，Kubernetes创建一个Pod的第一步，就是创建并启动一个Infra容器，用来“hold”住这个Pod的Network Namespace（这里，你可以再回顾一下专栏第13篇文章<a href=\"https://time.geekbang.org/column/article/40092\">《为什么我们需要Pod？》</a>中的相关内容）。</p><p>所以，CNI的设计思想，就是：<strong>Kubernetes在启动Infra容器之后，就可以直接调用CNI网络插件，为这个Infra容器的Network Namespace，配置符合预期的网络栈。</strong></p><blockquote>\n<p>备注：在前面第32篇文章<a href=\"https://time.geekbang.org/column/article/64948\">《浅谈容器网络》</a>中，我讲解单机容器网络时，已经和你分享过，一个Network Namespace的网络栈包括：网卡（Network Interface）、回环设备（Loopback Device）、路由表（Routing Table）和iptables规则。</p>\n</blockquote><p>那么，这个网络栈的配置工作又是如何完成的呢？</p><p>为了回答这个问题，我们就需要从CNI插件的部署和实现方式谈起了。</p><p>我们在部署Kubernetes的时候，有一个步骤是安装kubernetes-cni包，它的目的就是在宿主机上安装<strong>CNI插件所需的基础可执行文件</strong>。</p><p>在安装完成后，你可以在宿主机的/opt/cni/bin目录下看到它们，如下所示：</p><pre><code>$ ls -al /opt/cni/bin/\ntotal 73088\n-rwxr-xr-x 1 root root  3890407 Aug 17  2017 bridge\n-rwxr-xr-x 1 root root  9921982 Aug 17  2017 dhcp\n-rwxr-xr-x 1 root root  2814104 Aug 17  2017 flannel\n-rwxr-xr-x 1 root root  2991965 Aug 17  2017 host-local\n-rwxr-xr-x 1 root root  3475802 Aug 17  2017 ipvlan\n-rwxr-xr-x 1 root root  3026388 Aug 17  2017 loopback\n-rwxr-xr-x 1 root root  3520724 Aug 17  2017 macvlan\n-rwxr-xr-x 1 root root  3470464 Aug 17  2017 portmap\n-rwxr-xr-x 1 root root  3877986 Aug 17  2017 ptp\n-rwxr-xr-x 1 root root  2605279 Aug 17  2017 sample\n-rwxr-xr-x 1 root root  2808402 Aug 17  2017 tuning\n-rwxr-xr-x 1 root root  3475750 Aug 17  2017 vlan\n</code></pre><p>这些CNI的基础可执行文件，按照功能可以分为三类：</p><p><strong>第一类，叫作Main插件，它是用来创建具体网络设备的二进制文件</strong>。比如，bridge（网桥设备）、ipvlan、loopback（lo设备）、macvlan、ptp（Veth Pair设备），以及vlan。</p><p>我在前面提到过的Flannel、Weave等项目，都属于“网桥”类型的CNI插件。所以在具体的实现中，它们往往会调用bridge这个二进制文件。这个流程，我马上就会详细介绍到。</p><p><strong>第二类，叫作IPAM（IP Address Management）插件，它是负责分配IP地址的二进制文件</strong>。比如，dhcp，这个文件会向DHCP服务器发起请求；host-local，则会使用预先配置的IP地址段来进行分配。</p><p><strong>第三类，是由CNI社区维护的内置CNI插件</strong>。比如：flannel，就是专门为Flannel项目提供的CNI插件；tuning，是一个通过sysctl调整网络设备参数的二进制文件；portmap，是一个通过iptables配置端口映射的二进制文件；bandwidth，是一个使用Token Bucket Filter (TBF) 来进行限流的二进制文件。</p><p>从这些二进制文件中，我们可以看到，如果要实现一个给Kubernetes用的容器网络方案，其实需要做两部分工作，以Flannel项目为例：</p><p><strong>首先，实现这个网络方案本身</strong>。这一部分需要编写的，其实就是flanneld进程里的主要逻辑。比如，创建和配置flannel.1设备、配置宿主机路由、配置ARP和FDB表里的信息等等。</p><p><strong>然后，实现该网络方案对应的CNI插件</strong>。这一部分主要需要做的，就是配置Infra容器里面的网络栈，并把它连接在CNI网桥上。</p><p>由于Flannel项目对应的CNI插件已经被内置了，所以它无需再单独安装。而对于Weave、Calico等其他项目来说，我们就必须在安装插件的时候，把对应的CNI插件的可执行文件放在/opt/cni/bin/目录下。</p><blockquote>\n<p>实际上，对于Weave、Calico这样的网络方案来说，它们的DaemonSet只需要挂载宿主机的/opt/cni/bin/，就可以实现插件可执行文件的安装了。你可以想一下具体应该怎么做，就当作一个课后小问题留给你去实践了。</p>\n</blockquote><p>接下来，你就需要在宿主机上安装flanneld（网络方案本身）。而在这个过程中，flanneld启动后会在每台宿主机上生成它对应的<strong>CNI配置文件</strong>（它其实是一个ConfigMap），从而告诉Kubernetes，这个集群要使用Flannel作为容器网络方案。</p><p>这个CNI配置文件的内容如下所示：</p><pre><code>$ cat /etc/cni/net.d/10-flannel.conflist \n{\n  &quot;name&quot;: &quot;cbr0&quot;,\n  &quot;plugins&quot;: [\n    {\n      &quot;type&quot;: &quot;flannel&quot;,\n      &quot;delegate&quot;: {\n        &quot;hairpinMode&quot;: true,\n        &quot;isDefaultGateway&quot;: true\n      }\n    },\n    {\n      &quot;type&quot;: &quot;portmap&quot;,\n      &quot;capabilities&quot;: {\n        &quot;portMappings&quot;: true\n      }\n    }\n  ]\n}\n</code></pre><p>需要注意的是，在Kubernetes中，处理容器网络相关的逻辑并不会在kubelet主干代码里执行，而是会在具体的CRI（Container Runtime Interface，容器运行时接口）实现里完成。对于Docker项目来说，它的CRI实现叫作dockershim，你可以在kubelet的代码里找到它。</p><p>所以，接下来dockershim会加载上述的CNI配置文件。</p><p>需要注意，Kubernetes目前不支持多个CNI插件混用。如果你在CNI配置目录（/etc/cni/net.d）里放置了多个CNI配置文件的话，dockershim只会加载按字母顺序排序的第一个插件。</p><p>但另一方面，CNI允许你在一个CNI配置文件里，通过plugins字段，定义多个插件进行协作。</p><p>比如，在我们上面这个例子里，Flannel项目就指定了flannel和portmap这两个插件。</p><p><strong>这时候，dockershim会把这个CNI配置文件加载起来，并且把列表里的第一个插件、也就是flannel插件，设置为默认插件</strong>。而在后面的执行过程中，flannel和portmap插件会按照定义顺序被调用，从而依次完成“配置容器网络”和“配置端口映射”这两步操作。</p><p>接下来，我就来为你讲解一下这样一个CNI插件的工作原理。</p><p>当kubelet组件需要创建Pod的时候，它第一个创建的一定是Infra容器。所以在这一步，dockershim就会先调用Docker API创建并启动Infra容器，紧接着执行一个叫作SetUpPod的方法。这个方法的作用就是：为CNI插件准备参数，然后调用CNI插件为Infra容器配置网络。</p><p>这里要调用的CNI插件，就是/opt/cni/bin/flannel；而调用它所需要的参数，分为两部分。</p><p><strong>第一部分，是由dockershim设置的一组CNI环境变量。</strong></p><p>其中，最重要的环境变量参数叫作：CNI_COMMAND。它的取值只有两种：ADD和DEL。</p><p><strong>这个ADD和DEL操作，就是CNI插件唯一需要实现的两个方法。</strong></p><p>其中ADD操作的含义是：把容器添加到CNI网络里；DEL操作的含义则是：把容器从CNI网络里移除掉。</p><p>而对于网桥类型的CNI插件来说，这两个操作意味着把容器以Veth Pair的方式“插”到CNI网桥上，或者从网桥上“拔”掉。</p><p>接下来，我以ADD操作为重点进行讲解。</p><p>CNI的ADD操作需要的参数包括：容器里网卡的名字eth0（CNI_IFNAME）、Pod的Network Namespace文件的路径（CNI_NETNS）、容器的ID（CNI_CONTAINERID）等。这些参数都属于上述环境变量里的内容。其中，Pod（Infra容器）的Network Namespace文件的路径，我在前面讲解容器基础的时候提到过，即：/proc/&lt;容器进程的PID&gt;/ns/net。</p><blockquote>\n<p>备注：这里你也可以再回顾下专栏第8篇文章<a href=\"https://time.geekbang.org/column/article/18119\">《白话容器基础（四）：重新认识Docker容器》</a>中的相关内容。</p>\n</blockquote><p>除此之外，在 CNI 环境变量里，还有一个叫作CNI_ARGS的参数。通过这个参数，CRI实现（比如dockershim）就可以以Key-Value的格式，传递自定义信息给网络插件。这是用户将来自定义CNI协议的一个重要方法。</p><p><strong>第二部分，则是dockershim从CNI配置文件里加载到的、默认插件的配置信息。</strong></p><p>这个配置信息在CNI中被叫作Network Configuration，它的完整定义你可以参考<a href=\"https://github.com/containernetworking/cni/blob/master/SPEC.md#network-configuration\">这个文档</a>。dockershim会把Network Configuration以JSON数据的格式，通过标准输入（stdin）的方式传递给Flannel CNI插件。</p><p>而有了这两部分参数，Flannel CNI插件实现ADD操作的过程就非常简单了。</p><p>不过，需要注意的是，Flannel的CNI配置文件（ /etc/cni/net.d/10-flannel.conflist）里有这么一个字段，叫作delegate：</p><pre><code>...\n     &quot;delegate&quot;: {\n        &quot;hairpinMode&quot;: true,\n        &quot;isDefaultGateway&quot;: true\n      }\n</code></pre><p>Delegate字段的意思是，这个CNI插件并不会自己做事儿，而是会调用Delegate指定的某种CNI内置插件来完成。对于Flannel来说，它调用的Delegate插件，就是前面介绍到的CNI bridge插件。</p><p>所以说，dockershim对Flannel CNI插件的调用，其实就是走了个过场。Flannel CNI插件唯一需要做的，就是对dockershim传来的Network Configuration进行补充。比如，将Delegate的Type字段设置为bridge，将Delegate的IPAM字段设置为host-local等。</p><p>经过Flannel CNI插件补充后的、完整的Delegate字段如下所示：</p><pre><code>{\n    &quot;hairpinMode&quot;:true,\n    &quot;ipMasq&quot;:false,\n    &quot;ipam&quot;:{\n        &quot;routes&quot;:[\n            {\n                &quot;dst&quot;:&quot;10.244.0.0/16&quot;\n            }\n        ],\n        &quot;subnet&quot;:&quot;10.244.1.0/24&quot;,\n        &quot;type&quot;:&quot;host-local&quot;\n    },\n    &quot;isDefaultGateway&quot;:true,\n    &quot;isGateway&quot;:true,\n    &quot;mtu&quot;:1410,\n    &quot;name&quot;:&quot;cbr0&quot;,\n    &quot;type&quot;:&quot;bridge&quot;\n}\n</code></pre><p>其中，ipam字段里的信息，比如10.244.1.0/24，读取自Flannel在宿主机上生成的Flannel配置文件，即：宿主机上的/run/flannel/subnet.env文件。</p><p>接下来，Flannel CNI插件就会调用CNI bridge插件，也就是执行：/opt/cni/bin/bridge二进制文件。</p><p>这一次，调用CNI bridge插件需要的两部分参数的第一部分、也就是CNI环境变量，并没有变化。所以，它里面的CNI_COMMAND参数的值还是“ADD”。</p><p>而第二部分Network Configration，正是上面补充好的Delegate字段。Flannel CNI插件会把Delegate字段的内容以标准输入（stdin）的方式传递给CNI bridge插件。</p><blockquote>\n<p>此外，Flannel CNI插件还会把Delegate字段以JSON文件的方式，保存在/var/lib/cni/flannel目录下。这是为了给后面删除容器调用DEL操作时使用的。</p>\n</blockquote><p>有了这两部分参数，接下来CNI bridge插件就可以“代表”Flannel，进行“将容器加入到CNI网络里”这一步操作了。而这一部分内容，与容器Network Namespace密切相关，所以我要为你详细讲解一下。</p><p>首先，CNI bridge插件会在宿主机上检查CNI网桥是否存在。如果没有的话，那就创建它。这相当于在宿主机上执行：</p><pre><code># 在宿主机上\n$ ip link add cni0 type bridge\n$ ip link set cni0 up\n</code></pre><p>接下来，CNI bridge插件会通过Infra容器的Network Namespace文件，进入到这个Network Namespace里面，然后创建一对Veth Pair设备。</p><p>紧接着，它会把这个Veth Pair的其中一端，“移动”到宿主机上。这相当于在容器里执行如下所示的命令：</p><pre><code>#在容器里\n\n# 创建一对Veth Pair设备。其中一个叫作eth0，另一个叫作vethb4963f3\n$ ip link add eth0 type veth peer name vethb4963f3\n\n# 启动eth0设备\n$ ip link set eth0 up \n\n# 将Veth Pair设备的另一端（也就是vethb4963f3设备）放到宿主机（也就是Host Namespace）里\n$ ip link set vethb4963f3 netns $HOST_NS\n\n# 通过Host Namespace，启动宿主机上的vethb4963f3设备\n$ ip netns exec $HOST_NS ip link set vethb4963f3 up \n</code></pre><p>这样，vethb4963f3就出现在了宿主机上，而且这个Veth Pair设备的另一端，就是容器里面的eth0。</p><p>当然，你可能已经想到，上述创建Veth Pair设备的操作，其实也可以先在宿主机上执行，然后再把该设备的一端放到容器的Network Namespace里，这个原理是一样的。</p><p>不过，CNI插件之所以要“反着”来，是因为CNI里对Namespace操作函数的设计就是如此，如下所示：</p><pre><code>err := containerNS.Do(func(hostNS ns.NetNS) error {\n  ...\n  return nil\n})\n</code></pre><p>这个设计其实很容易理解。在编程时，容器的Namespace是可以直接通过Namespace文件拿到的；而Host Namespace，则是一个隐含在上下文的参数。所以，像上面这样，先通过容器Namespace进入容器里面，然后再反向操作Host Namespace，对于编程来说要更加方便。</p><p>接下来，CNI bridge插件就可以把vethb4963f3设备连接在CNI网桥上。这相当于在宿主机上执行：</p><pre><code># 在宿主机上\n$ ip link set vethb4963f3 master cni0\n</code></pre><p>在将vethb4963f3设备连接在CNI网桥之后，CNI bridge插件还会为它设置<strong>Hairpin Mode（发夹模式）</strong>。这是因为，在默认情况下，网桥设备是不允许一个数据包从一个端口进来后，再从这个端口发出去的。但是，它允许你为这个端口开启Hairpin Mode，从而取消这个限制。</p><p>这个特性，主要用在容器需要通过<a href=\"https://en.wikipedia.org/wiki/Network_address_translation\">NAT</a>（即：端口映射）的方式，“自己访问自己”的场景下。</p><p>举个例子，比如我们执行docker run -p 8080:80，就是在宿主机上通过iptables设置了一条<a href=\"http://linux-ip.net/html/nat-dnat.html\">DNAT</a>（目的地址转换）转发规则。这条规则的作用是，当宿主机上的进程访问“&lt;宿主机的IP地址&gt;:8080”时，iptables会把该请求直接转发到“&lt;容器的IP地址&gt;:80”上。也就是说，这个请求最终会经过docker0网桥进入容器里面。</p><p>但如果你是在容器里面访问宿主机的8080端口，那么这个容器里发出的IP包会经过vethb4963f3设备（端口）和docker0网桥，来到宿主机上。此时，根据上述DNAT规则，这个IP包又需要回到docker0网桥，并且还是通过vethb4963f3端口进入到容器里。所以，这种情况下，我们就需要开启vethb4963f3端口的Hairpin Mode了。</p><p>所以说，Flannel插件要在CNI配置文件里声明hairpinMode=true。这样，将来这个集群里的Pod才可以通过它自己的Service访问到自己。</p><p>接下来，CNI bridge插件会调用CNI ipam插件，从ipam.subnet字段规定的网段里为容器分配一个可用的IP地址。然后，CNI bridge插件就会把这个IP地址添加在容器的eth0网卡上，同时为容器设置默认路由。这相当于在容器里执行：</p><pre><code># 在容器里\n$ ip addr add 10.244.0.2/24 dev eth0\n$ ip route add default via 10.244.0.1 dev eth0\n</code></pre><p>最后，CNI bridge插件会为CNI网桥添加IP地址。这相当于在宿主机上执行：</p><pre><code># 在宿主机上\n$ ip addr add 10.244.0.1/24 dev cni0\n</code></pre><p>在执行完上述操作之后，CNI插件会把容器的IP地址等信息返回给dockershim，然后被kubelet添加到Pod的Status字段。</p><p>至此，CNI插件的ADD方法就宣告结束了。接下来的流程，就跟我们上一篇文章中容器跨主机通信的过程完全一致了。</p><p>需要注意的是，对于非网桥类型的CNI插件，上述“将容器添加到CNI网络”的操作流程，以及网络方案本身的工作原理，就都不太一样了。我将会在后续文章中，继续为你分析这部分内容。</p><h2>总结</h2><p>在本篇文章中，我为你详细讲解了Kubernetes中CNI网络的实现原理。根据这个原理，你其实就很容易理解所谓的“Kubernetes网络模型”了：</p><ol>\n<li>\n<p>所有容器都可以直接使用IP地址与其他容器通信，而无需使用NAT。</p>\n</li>\n<li>\n<p>所有宿主机都可以直接使用IP地址与所有容器通信，而无需使用NAT。反之亦然。</p>\n</li>\n<li>\n<p>容器自己“看到”的自己的IP地址，和别人（宿主机或者容器）看到的地址是完全一样的。</p>\n</li>\n</ol><p>可以看到，这个网络模型，其实可以用一个字总结，那就是“通”。</p><p>容器与容器之间要“通”，容器与宿主机之间也要“通”。并且，Kubernetes要求这个“通”，还必须是直接基于容器和宿主机的IP地址来进行的。</p><p>当然，考虑到不同用户之间的隔离性，在很多场合下，我们还要求容器之间的网络“不通”。这个问题，我会在后面的文章中会为你解决。</p><h2>思考题</h2><p>请你思考一下，为什么Kubernetes项目不自己实现容器网络，而是要通过 CNI 做一个如此简单的假设呢？</p><p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p>","comments":[{"had_liked":false,"id":38136,"user_name":"blackpiglet","can_delete":false,"product_type":"c1","uid":1032928,"ip_address":"","ucode":"58AA8329C91767","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/e0/7188aa0a.jpg","comment_is_top":false,"comment_ctime":1541951920,"is_pvip":false,"replies":[{"id":"13734","content":"分析的很不错","user_name":"作者回复","comment_id":38136,"uid":"1218095","ip_address":"","utype":1,"ctime":1542000606,"user_name_real":"Geek_6ef93d"}],"discussion_count":7,"race_medal":0,"score":"770341097904","product_id":100015201,"comment_content":"思考题：为什么 Kubernetes 项目不自己实现容器网络，而是要通过 CNI 做一个如此简单的假设呢？<br><br>解答：没有亲历 Kubernetes 网络标准化的这个阶段，以下内容都是基于猜测，大家见笑了。<br>最开始我觉得这就是为了提供更多的便利选择，有了 CNI，那么只要符合规则，什么插件都可以用，用户的自由度更高，这是 Google 和 Kubernetes 开放性的体现。但转念一想，如果 Kubernetes 一开始就有官方的解决方案，恐怕也不会有什么不妥，感觉要理解的更深，得追溯到 Kubernetes 创建之初的外部环境和 Google 的开源策略了。Github 上最早的 Kubernetes 版本是 0.4，其中的网络部分，最开始官方的实现方式就是 GCE 执行 salt 脚本创建 bridge，其他环境的推荐的方案是 Flannel 和 OVS。<br>所以我猜测：<br>首先给 Kubernetes 发展的时间是不多的（Docker 已经大红大紫了，再不赶紧就一统天下了），给开发团队的时间只够专心实现编排这种最核心的功能，网络功能恰好盟友 CoreOS 的 Flannel 可以拿过来用，所以也可以认为 Flannel 就是最初 Kubernetes 的官方网络插件。Kubernetes 发展起来之后，Flannel 在有些情况下就不够用了，15 年左右社区里 Calico 和  Weave 冒了出来，基本解决了网络问题，Kubernetes 就更不需要自己花精力来做这件事了，所以推出了 CNI，来做网络插件的标准化。我觉得假如社区里网络一直没有好的解决方案的话，Kubernetes 肯定还是会亲自上阵的。<br>其次，Google 开源项目毕竟也不是做慈善，什么都做的面面俱到，那要消耗更多的成本，当然是越多的外部资源为我所用越好了。感觉推出核心功能，吸引开发者过来做贡献的搞法，也算是巨头们开源的一种套路吧。","like_count":180,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428618,"discussion_content":"分析的很不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542000606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019302,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/a6/22c37c91.jpg","nickname":"楊_宵夜","note":"","ucode":"7BA0CADC5F23BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382824,"discussion_content":"你是不是k8s的contributor跑来布道的 [狗头","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625733220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970516,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLK4NPyaFDl4rzrd4A9z42tQDibFLdCicbrAdyUa5P2B5u8UCUBenpHX7VgUCibvHvhpza4icMBKVnhmA/132","nickname":"学无止境","note":"","ucode":"2C28E8E54DAB4E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390313,"discussion_content":"说的真心不错，分析的很到位，厉害了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629774267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2378009,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKicUgL8bc6EDj2w7GG8UjxRFYicmXlAdUHaSRdAT798ibpfOgF9OWFku5jad5ezWFGkCWXnoqFgSWlw/132","nickname":"iamcaptain","note":"","ucode":"868D95D47E033E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377369,"discussion_content":"在说下其它方面的内容就可以出书了哟！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622618496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308505,"discussion_content":"隐藏的大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600963657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433247,"avatar":"https://static001.geekbang.org/account/avatar/00/15/de/9f/b6c59a75.jpg","nickname":"dust！","note":"","ucode":"7ADCCC7985B381","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143460,"discussion_content":"吸引你参与进来，然后割韭菜，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579508452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1095819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b8/8b/68555cbf.jpg","nickname":"Geek_122dd9","note":"","ucode":"12BDEF1FC06633","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1433247,"avatar":"https://static001.geekbang.org/account/avatar/00/15/de/9f/b6c59a75.jpg","nickname":"dust！","note":"","ucode":"7ADCCC7985B381","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586214,"discussion_content":"韭菜：我乐意，哈哈哈😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662043500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":143460,"ip_address":"广东"},"score":586214,"extra":""}]}]},{"had_liked":false,"id":103702,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1560494591,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"173359186431","product_id":100015201,"comment_content":"其实本章难点在于实现网络方案对应的CNI插件，即配置Infra容器的网络栈，并连到网桥上。整体流程是：kubelet创建Pod-&gt;创建Infra容器-&gt;调用SetUpPod（）方法，该方法需要为CNI准备参数，然后调用CNI插件（flannel)为Infra配置网络；其中参数来源于1、dockershim设置的一组CNI环境变量；2、dockershim从CNI配置文件里（有flanneld启动后生成，类型为configmap）加载到的、默认插件的配置信息（network configuration)，这里对CNI插件的调用，实际是network configuration进行补充。参数准备好后，调用Flannel CNI-&gt;调用CNI bridge（所需参数即为上面：设置的CNI环境变量和补充的network configuation）来执行具体的操作流程。","like_count":41,"discussions":[{"author":{"id":1088303,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9b/2f/db466c67.jpg","nickname":"HD","note":"","ucode":"3F61B901BB9245","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349054,"discussion_content":"要是有一张流程图来辅助理解的话，会好很多","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1612862487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2621412,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","nickname":"无名无姓","note":"","ucode":"487BD5AA2CD305","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573969,"discussion_content":"确实期待图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653751412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2582020,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/yc4g6qyr8FgzRQmoOKSVHoZYDBiaXDLLEwibmNnmRwsQDg7z87C12CAY3jgRXNIYfEkUPLpZFIp53dLbTwaqVqVQ/132","nickname":"行走的阿叔","note":"","ucode":"055C6E3496927D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382338,"discussion_content":"确实，有张图解释会更好理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625537400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41297,"user_name":"阿棠","can_delete":false,"product_type":"c1","uid":1222354,"ip_address":"","ucode":"4C62FF98BCD925","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/d2/ebe20bb5.jpg","comment_is_top":false,"comment_ctime":1542764758,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"160456554710","product_id":100015201,"comment_content":"前几章都很好理解，一到网络这块，就蒙了，没耐心看下去了","like_count":38,"discussions":[{"author":{"id":2930234,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KqZeIjNOVQJnsIFkDBWl5wfaxWDGLpIMUdFbF7SQhXFavmxgpwQPj9FrGAV4xNrqd733qicT4IZVibELyziaLokDQ/132","nickname":"罗艺","note":"","ucode":"9D4E1A377BCF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568010,"discussion_content":"网络才是整个体系最有意思的，因为他有逻辑性，其他的很多的是概念性的，其实就是net namespace 里面的 创建网桥  天加veth peer  和绑定。然后就是二层的网桥互通，跨Node就是用到三层的网络路由了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1651043227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1055810,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/42/d3a0e33a.jpg","nickname":"希德小子","note":"","ucode":"0F3DA846858DBD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2930234,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KqZeIjNOVQJnsIFkDBWl5wfaxWDGLpIMUdFbF7SQhXFavmxgpwQPj9FrGAV4xNrqd733qicT4IZVibELyziaLokDQ/132","nickname":"罗艺","note":"","ucode":"9D4E1A377BCF23","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577889,"discussion_content":"哈哈，我也觉得网络这块最吸引我，这块其实算比较基础。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656404155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":568010,"ip_address":""},"score":577889,"extra":""}]},{"author":{"id":2291160,"avatar":"https://static001.geekbang.org/account/avatar/00/22/f5/d8/121e4b68.jpg","nickname":"Woa 🤞","note":"","ucode":"6033F496082F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547176,"discussion_content":"我觉得网络这里最好玩了😜","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1642568197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970516,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLK4NPyaFDl4rzrd4A9z42tQDibFLdCicbrAdyUa5P2B5u8UCUBenpHX7VgUCibvHvhpza4icMBKVnhmA/132","nickname":"学无止境","note":"","ucode":"2C28E8E54DAB4E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390314,"discussion_content":"持久化自定义存储 都挺过来了，这块你说难。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1629774328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1095819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b8/8b/68555cbf.jpg","nickname":"Geek_122dd9","note":"","ucode":"12BDEF1FC06633","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1970516,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLK4NPyaFDl4rzrd4A9z42tQDibFLdCicbrAdyUa5P2B5u8UCUBenpHX7VgUCibvHvhpza4icMBKVnhmA/132","nickname":"学无止境","note":"","ucode":"2C28E8E54DAB4E","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":586215,"discussion_content":"我是先看的网络，狗头，😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662043614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":390314,"ip_address":"广东"},"score":586215,"extra":""}]},{"author":{"id":2651519,"avatar":"https://static001.geekbang.org/account/avatar/00/28/75/7f/ff5dd565.jpg","nickname":"Cantevenl","note":"","ucode":"F5A62BA4355F6A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378875,"discussion_content":"真的好难 网络这几章 翻来覆去看了三四遍了 还是不怎么懂","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623481218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1335273,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5f/e9/510fa022.jpg","nickname":"吕小荣","note":"","ucode":"9CB18695616330","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2651519,"avatar":"https://static001.geekbang.org/account/avatar/00/28/75/7f/ff5dd565.jpg","nickname":"Cantevenl","note":"","ucode":"F5A62BA4355F6A","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":571686,"discussion_content":"说出来怕丢人，我已经看了3个月了。从 Ethenet 网络协议开始补起，然后是 Linux Bridge，现在 CNI 这一块，还是看不懂，估计还得3个月。不过反正是业余爱好，就慢慢啃吧。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652347184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378875,"ip_address":""},"score":571686,"extra":""}]},{"author":{"id":2217004,"avatar":"https://static001.geekbang.org/account/avatar/00/21/d4/2c/d8f626f3.jpg","nickname":"hyx","note":"","ucode":"7987F771C78357","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552545,"discussion_content":"最好动手试一下，推荐一个简单的实践https://www.cnblogs.com/bakari/p/10443484.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645506913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2155490,"avatar":"https://static001.geekbang.org/account/avatar/00/20/e3/e2/476563d5.jpg","nickname":"飘叶","note":"","ucode":"8BA994FE15EBBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309836,"discussion_content":"编程你都挺过来了，倒在这里？ 不合算啊，加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601457460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2155490,"avatar":"https://static001.geekbang.org/account/avatar/00/20/e3/e2/476563d5.jpg","nickname":"飘叶","note":"","ucode":"8BA994FE15EBBD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350832,"discussion_content":"编程会啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614046803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309836,"ip_address":""},"score":350832,"extra":""}]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308506,"discussion_content":"编排都挺过来了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600963679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273459,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1610604084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"91804917300","product_id":100015201,"comment_content":"把握几个核心，然后串起来，其它需要的东西再去拿就可以了。<br>问题牵引：<br>网络方案是谁？它和“CNI标准”的关系（实现）是？kubernetes网络配置由谁来完成？（或者说我要怎么做才能实现它？？）<br><br>核心支撑点：<br>1、flannel网络方案本身<br>2、CNI插件，这里是内置的Flannel插件<br>3、dockershim(DRI)<br><br>两个背景知识：<br>1、CNI 的设计思想：Kubernetes 在启动 Infra 容器之后，就可以直接调用 CNI 网络插件，为这个 Infra 容器的 Network Namespace，配置符合预期的网络栈。<br>2、建立网络的“三类”基础组件&#47;可执行文件。<br><br>串线（着重描述三个核心点之间的串联关系）：<br>kubelet 创建 Pod -&gt;创建 Infra 容器。主要是由（CRI）**dockershim **调用 Docker API 创建并启动 Infra 容器-&gt; SetUpPod方法。方法的作用是：1.为 CNI 插件准备参数，2.然后调用 CNI 插件为 Infra 容器配置网络。<br>1.所需参数-&gt;实现ADD&#47;DEL方法-&gt;CNI插件（*flannel插件*)实现。：<br>1.1参数一：由 dockershim 设置的一组 CNI 环境变量，ADD&#47;DEL方法参数。<br>1.2参数二：是 dockershim 从 CNI “配置文件”里加载到的、默认插件的配置信息；由*flannel网络方案本身*安装时生成。<br>2.调用 CNI 插件:<br>引：&quot;dockershim 对 *Flannel CNI 插件*的调用，其实就是走了个过场。Flannel CNI 插件唯一需要做的，就是对 dockershim 传来的 Network Configuration (CNI配置文件）进行补充。&quot;<br>接下来，Flannel CNI 插件-&gt;调用 CNI bridge 插件(参数一：“CNI环境变量&#47;ADD&quot;, 参数二：”Network Confiuration&#47;Delegate&quot;)，--&gt;“代表”Flannel，将容器加入CNI网络（cni0网桥）。","like_count":22},{"had_liked":false,"id":52078,"user_name":"LÉON","can_delete":false,"product_type":"c1","uid":1233565,"ip_address":"","ucode":"EFD104BDD76DBE","user_header":"https://static001.geekbang.org/account/avatar/00/12/d2/9d/5839e490.jpg","comment_is_top":false,"comment_ctime":1545305969,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53084913521","product_id":100015201,"comment_content":"一直在苦苦自学，在容器的存储还有网络一直困扰。一直在拜读不拜听 受益匪浅 继续努力","like_count":12,"discussions":[{"author":{"id":1119116,"avatar":"https://static001.geekbang.org/account/avatar/00/11/13/8c/c86340ca.jpg","nickname":"巴西","note":"","ucode":"6E68AA02011541","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":117398,"discussion_content":"头像一样哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578113131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196488,"user_name":"bus801","can_delete":false,"product_type":"c1","uid":1777680,"ip_address":"","ucode":"7BBF63E76DC395","user_header":"https://static001.geekbang.org/account/avatar/00/1b/20/10/5786e0d8.jpg","comment_is_top":false,"comment_ctime":1585285453,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44534958413","product_id":100015201,"comment_content":"要是再来一篇calico的就完美了","like_count":11,"discussions":[{"author":{"id":1269156,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5d/a4/2e4b6d33.jpg","nickname":"素还真","note":"","ucode":"9ABA456355F7E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346175,"discussion_content":"期待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611884785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37748,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1010056,"ip_address":"","ucode":"DD4717C06E417D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/88/528442b0.jpg","comment_is_top":false,"comment_ctime":1541723951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40196429615","product_id":100015201,"comment_content":"我认为是在大规模的集群环境中，网络方案是最复杂的，针对不同的的环境和场景，网络需要灵活配置。k8s集群里只关心最终网络可以连通，而不需要在内部去实现各种复杂的网络模块，使用CNI可以方便灵活地自定义网络插件，网络可以独立。","like_count":9},{"had_liked":false,"id":58787,"user_name":"毛玉明","can_delete":false,"product_type":"c1","uid":1318580,"ip_address":"","ucode":"626A6BC5023B2D","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/b4/7f1e7e20.jpg","comment_is_top":false,"comment_ctime":1547193102,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"14432094990","product_id":100015201,"comment_content":"k8s里可以不使用cni直接使用docker0的网桥吗，看了下目前公司的集群没有找到cni0的这个设备","like_count":3,"discussions":[{"author":{"id":1009501,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELq0icfdsBjscdVLkDa2ylibjtENIfmusojcm48KLgyu1xOaY90eEibBwibraBZuPYcIKaGekialqFQKbQ/132","nickname":"overflow","note":"","ucode":"60C943CC9F6F52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401478,"discussion_content":"master节点应该没有cni0，因为不需要部署业务pod","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1633680212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2254917,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/45/ddf89612.jpg","nickname":"bestgopher","note":"","ucode":"D89735C8CA9C6E","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1009501,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELq0icfdsBjscdVLkDa2ylibjtENIfmusojcm48KLgyu1xOaY90eEibBwibraBZuPYcIKaGekialqFQKbQ/132","nickname":"overflow","note":"","ucode":"60C943CC9F6F52","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545014,"discussion_content":"谁说的master没有的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641801712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":401478,"ip_address":""},"score":545014,"extra":""}]},{"author":{"id":1199969,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4f/61/00083e41.jpg","nickname":"小白","note":"","ucode":"7ACE14C0C4AE61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217385,"discussion_content":"可以，不过需要给docker传递配置参数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585552972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42312,"user_name":"燕岭听涛","can_delete":false,"product_type":"c1","uid":1228123,"ip_address":"","ucode":"0358ECCAB39258","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/5b/94bb1036.jpg","comment_is_top":false,"comment_ctime":1542939416,"is_pvip":false,"replies":[{"id":"15270","content":"给个大点的range啊，还有看看ipam用的是啥配置？","user_name":"作者回复","comment_id":42312,"uid":"1218095","ip_address":"","utype":1,"ctime":1542986794,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"14427841304","product_id":100015201,"comment_content":"老师，您好，咨询一个问题：flannel经常出现 no ip address available in range，出现后就只能重置节点。这个是什么原因造成的，为什么pod删除后不回收ip地址？或者还有别的解决办法吗？希望能收到您的回复。","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430042,"discussion_content":"给个大点的range啊，还有看看ipam用的是啥配置？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542986794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228967,"discussion_content":"之前在阿里云k8s集群上就遇到了该错误.\n由于创建k8s集群时,选择每个节点可分配64个IP,结果启动了64个pod后, 新的pod就无法获取到IP地址了.\n后来我也是把k8s集群重建了, 选择每个节点可分配256个IP地址.\n暂时就没遇到该问题了.\n\n你说的IP地址未被回收,倒是很奇怪的现象.","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586596025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37745,"user_name":"DJH","can_delete":false,"product_type":"c1","uid":1256740,"ip_address":"","ucode":"2BDEF123B3DB6A","user_header":"https://static001.geekbang.org/account/avatar/00/13/2d/24/28acca15.jpg","comment_is_top":false,"comment_ctime":1541723395,"is_pvip":false,"replies":[{"id":"13632","content":"对","user_name":"作者回复","comment_id":37745,"uid":"1218095","ip_address":"","utype":1,"ctime":1541767156,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"14426625283","product_id":100015201,"comment_content":"&quot;实际上，对于 Weave、Calico 这样的网络方案来说，它们的 DaemonSet 只需要挂载宿主机的 &#47;opt&#47;cni&#47;bin&#47;，就可以实现插件可执行文件的安装了。&quot;这个是用hostpath类型的卷实现吗？","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428475,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541767156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245993,"user_name":"大G来了呦","can_delete":false,"product_type":"c1","uid":1610260,"ip_address":"","ucode":"97711D9CCA73B0","user_header":"https://static001.geekbang.org/account/avatar/00/18/92/14/6ca50b3b.jpg","comment_is_top":false,"comment_ctime":1599126676,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10189061268","product_id":100015201,"comment_content":"存储和网络需要好好吸收才行","like_count":2},{"had_liked":false,"id":242598,"user_name":"冬冬","can_delete":false,"product_type":"c1","uid":1180054,"ip_address":"","ucode":"B673E6482B5C93","user_header":"https://static001.geekbang.org/account/avatar/00/12/01/96/afcb6174.jpg","comment_is_top":false,"comment_ctime":1597794424,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"10187729016","product_id":100015201,"comment_content":"kubernetes使用cni作为pod的容器间通信的网桥（与docker0功能相同）<br>初始化pod网络流程：创建Infra容器 调用cni插件初始化infra容器网络（插件位置：&#47;opt&#47;cni&#47;bin&#47;flannel），开始 dockershim 设置的一组 CNI 环境变量（枚举值ADD、DELETE），用于表示将容器的VethPair插入或从cni0网桥移除。<br>与此同时，cni bridge插件检查cni网桥在宿主机上是否存在，若不存在则进行创建。接着，cni bridge插件在network namespace创建VethPair，将其中一端插入到宿主机的cni0网桥，另一端直接赋予容器实例eth0，cni插件把容器ip提供给dockershim 被kubelet用于添加到pod的status字段。接下来，cni bridge调用cni ipam插件 从ipam.subnet子网中给容器eth0网卡分配ip地址 同时设置default route配置，最后cni bridge插件为cni网桥设置ip地址。","like_count":2},{"had_liked":false,"id":209262,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1587525726,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10177460318","product_id":100015201,"comment_content":"精彩！老师不但教知其然，而且完全详细的讲解所以然。谢谢。学习了。","like_count":2},{"had_liked":false,"id":198667,"user_name":"vincent","can_delete":false,"product_type":"c1","uid":1796234,"ip_address":"","ucode":"9FAD09D87C1E42","user_header":"","comment_is_top":false,"comment_ctime":1585463096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10175397688","product_id":100015201,"comment_content":"Kubernetes是否可以给Pod创建多张网卡，分配多个IP？","like_count":2},{"had_liked":false,"id":153040,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1574145266,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10164079858","product_id":100015201,"comment_content":"因为现实中的容器网络太多样、太复杂，为了解耦、可扩展性，设计了CNI接口，这个接口实现了共同的功能：为infra容器的network namespace配置网络栈","like_count":2,"discussions":[{"author":{"id":1055810,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/42/d3a0e33a.jpg","nickname":"希德小子","note":"","ucode":"0F3DA846858DBD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577890,"discussion_content":"这个总结很到位。简单说：就是为容器配置可互通的网络","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656404405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334842,"user_name":"嘿！我的gakki","can_delete":false,"product_type":"c1","uid":1375996,"ip_address":"","ucode":"86ABC9754D287B","user_header":"https://static001.geekbang.org/account/avatar/00/14/fe/fc/e56c9c4a.jpg","comment_is_top":false,"comment_ctime":1645153692,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5940120988","product_id":100015201,"comment_content":"https:&#47;&#47;github.com&#47;y805939188&#47;k8s-cni-test<br>从 0 实现的简单 cni 插件，内附教学，感兴趣的同学可以瞅瞅","like_count":1},{"had_liked":false,"id":325044,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1638785195,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5933752491","product_id":100015201,"comment_content":"K8S 太强了  比虚拟机解决方案 先进了很多   用更少的存储 做更多的事情","like_count":1,"discussions":[{"author":{"id":1117738,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/2a/e6b443f0.jpg","nickname":"孙荣辛.py","note":"","ucode":"70A9DCE005E7C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574986,"discussion_content":"容器化和虚拟化，本来就是两个方向，互有利弊吧。当涉及到任务之间的强隔离，就会意识到虚拟机的必要性了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654508622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325042,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1638785150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5933752446","product_id":100015201,"comment_content":"所有容器都可以直接使用 IP 地址与其他容器通信，而无需使用 NAT。所有宿主机都可以直接使用 IP 地址与所有容器通信，而无需使用 NAT。反之亦然。容器自己“看到”的自己的 IP 地址，和别人（宿主机或者容器）看到的地址是完全一样的。","like_count":1},{"had_liked":false,"id":168242,"user_name":"巴西","can_delete":false,"product_type":"c1","uid":1119116,"ip_address":"","ucode":"6E68AA02011541","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/8c/c86340ca.jpg","comment_is_top":false,"comment_ctime":1578036566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5873003862","product_id":100015201,"comment_content":"网络篇确实难度上来了,需要多看几遍","like_count":1},{"had_liked":false,"id":164762,"user_name":"Geek_81c7c9","can_delete":false,"product_type":"c1","uid":1638611,"ip_address":"","ucode":"60E7FA04D44CB5","user_header":"https://static001.geekbang.org/account/avatar/00/19/00/d3/ef5d2af0.jpg","comment_is_top":false,"comment_ctime":1577087635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872054931","product_id":100015201,"comment_content":"老师你好，请问在CNI方案出现之前，有其它的容器固定IP方案吗？","like_count":1},{"had_liked":false,"id":158728,"user_name":"叫我天才好了","can_delete":false,"product_type":"c1","uid":1449175,"ip_address":"","ucode":"4EC69FB09E3435","user_header":"https://static001.geekbang.org/account/avatar/00/16/1c/d7/a53dad9e.jpg","comment_is_top":false,"comment_ctime":1575443057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870410353","product_id":100015201,"comment_content":"思考题，高内聚，低耦合？<br>","like_count":1},{"had_liked":false,"id":37741,"user_name":"Tim Zhang","can_delete":false,"product_type":"c1","uid":1214499,"ip_address":"","ucode":"4956AC5FE45EE1","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/23/a0966b4d.jpg","comment_is_top":false,"comment_ctime":1541722951,"is_pvip":false,"replies":[{"id":"13633","content":"不要急","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1541767181,"ip_address":"","comment_id":37741,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5836690247","product_id":100015201,"comment_content":"上一章节不是说介绍flannel的hostgw模式吗？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428472,"discussion_content":"不要急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541767181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351801,"user_name":"7","can_delete":false,"product_type":"c1","uid":1804043,"ip_address":"","ucode":"3107B9740AFCB5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/87/0b/07778302.jpg","comment_is_top":false,"comment_ctime":1658200796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658200796","product_id":100015201,"comment_content":"如果编排中开启了hostNetwork:true, 是不是就不需要flannel这类cni插件了？ 因为linux的network namespace打通就已经做到和宿主机共享网络空间了？","like_count":0},{"had_liked":false,"id":348213,"user_name":"john","can_delete":false,"product_type":"c1","uid":1349519,"ip_address":"","ucode":"CE4991BEF991BA","user_header":"https://static001.geekbang.org/account/avatar/00/14/97/8f/c091d4f3.jpg","comment_is_top":false,"comment_ctime":1654849106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654849106","product_id":100015201,"comment_content":"为什么 Kubernetes 项目不自己实现容器网络，而是要通过 CNI 做一个如此简单的假设呢？<br><br>应该是不同的网络环境，网络拓扑、公有云&#47;私有云、规模、网络可靠性要求都不一样（延迟、吞吐量等），需要不同的网络方案适应不同的场景。","like_count":0},{"had_liked":false,"id":342645,"user_name":"悟二空","can_delete":false,"product_type":"c1","uid":1128549,"ip_address":"","ucode":"BF3B8BA6E49B1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/65/edf48816.jpg","comment_is_top":false,"comment_ctime":1650380628,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650380628","product_id":100015201,"comment_content":"不能不佩服k8s和linux内核工程师们了，能将一个系统设计的如此绝妙，并实现了它","like_count":0},{"had_liked":false,"id":332513,"user_name":"NulI","can_delete":false,"product_type":"c1","uid":1491276,"ip_address":"","ucode":"BF8C3B18FE2D2A","user_header":"https://static001.geekbang.org/account/avatar/00/16/c1/4c/e72d3360.jpg","comment_is_top":false,"comment_ctime":1643286226,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1643286226","product_id":100015201,"comment_content":"两款比较实用的CNI插件，可以试试：<br>（1）轻量级kube-ipam帮你轻松实现K8S容器的IP地址永久固定不变   https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;JLEPko0dN0f7bdmCwvuljA<br>（2）基于Multus与Kube-ipam实现Web和数据库分层网络安全访问  https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;8x8B_qhK4Y1JlkXkYpD6ng","like_count":0,"discussions":[{"author":{"id":2621412,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","nickname":"无名无姓","note":"","ucode":"487BD5AA2CD305","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573971,"discussion_content":"拜读一下哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653751740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325045,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1638785302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638785302","product_id":100015201,"comment_content":"高内聚 低耦合","like_count":0},{"had_liked":false,"id":250940,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1601286016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601286016","product_id":100015201,"comment_content":"CNCF一直遵循的开放的,交给使用者自定义的插件 原则,方便提供更多的便利选择,有了CNI,就可以自定义插件,方便应对不同的,复杂的网络环境","like_count":0},{"had_liked":false,"id":226160,"user_name":"君哥聊技术","can_delete":false,"product_type":"c1","uid":1325816,"ip_address":"","ucode":"2C9A22BCE4C79E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","comment_is_top":false,"comment_ctime":1591967545,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591967545","product_id":100015201,"comment_content":"老师，我现在的集群是一个master,一个worker,部署应用后调度到worker节点，但是进入应用容器内部，发现ping不通master的ip,master上也部署flannel了。请问这个一般是什么原因呢？<br><br>","like_count":0,"discussions":[{"author":{"id":1325816,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","nickname":"君哥聊技术","note":"","ucode":"2C9A22BCE4C79E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282699,"discussion_content":"解决了，原因是master部署的时候没有加--pod-network-cidr=10.244.0.0/16","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592049825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214527,"user_name":"张克菲","can_delete":false,"product_type":"c1","uid":1304742,"ip_address":"","ucode":"F89495F04DAD5D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/a6/e74ecf7d.jpg","comment_is_top":false,"comment_ctime":1588761836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588761836","product_id":100015201,"comment_content":"请问老师,dockershim调用CNI的时候，假设是dockershim-&gt;macvlan-&gt;dhcp 这种自建的二进制插件，dockershim的log可以通过journalctl -u kubelet看到，那macvlan，dhcp这些插件的log在哪里看呢？","like_count":0},{"had_liked":false,"id":198670,"user_name":"vincent","can_delete":false,"product_type":"c1","uid":1796234,"ip_address":"","ucode":"9FAD09D87C1E42","user_header":"","comment_is_top":false,"comment_ctime":1585463158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585463158","product_id":100015201,"comment_content":"实验上看进入容器后无法在容器里修改ip或者设置路由","like_count":0},{"had_liked":false,"id":198668,"user_name":"vincent","can_delete":false,"product_type":"c1","uid":1796234,"ip_address":"","ucode":"9FAD09D87C1E42","user_header":"","comment_is_top":false,"comment_ctime":1585463114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585463114","product_id":100015201,"comment_content":"在Pod里是否可以实现VPN等功能","like_count":0},{"had_liked":false,"id":158137,"user_name":"徐海浪","can_delete":false,"product_type":"c1","uid":1078528,"ip_address":"","ucode":"21801C420D0610","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/00/618b20da.jpg","comment_is_top":false,"comment_ctime":1575337109,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1575337109","product_id":100015201,"comment_content":"kubeadm initiative --pod-network-cidr=10.244.0.0&#47;16可以成功创建k8s集群，换一下地址则不行(如10.12.0.0&#47;16)，不知道为啥😂","like_count":0},{"had_liked":false,"id":152342,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1573978750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573978750","product_id":100015201,"comment_content":"为了效率吧，cni网桥完全复用了linux的网络栈，如果自己弄容器网络，肯定又要增加内核调用","like_count":0},{"had_liked":false,"id":93509,"user_name":"昀溪","can_delete":false,"product_type":"c1","uid":1493286,"ip_address":"","ucode":"BFAF31542BC24A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoCl6Nxf9oW9sDOoibA7p8lKf0jqjPeDszqI4e7iavicQHtbtyibHIhLibyXYAaT02l7GRQvM9BJUxh6yQ/132","comment_is_top":false,"comment_ctime":1557483762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557483762","product_id":100015201,"comment_content":"CNI bridge插件会通过Infra容器的Network Namespace文件，进入网络名称空间，然后创建一对Veth Pair设备。<br><br>那我的环境是使用的docker0网桥，没有使用CNI插件。那这个Veth Pair设备是谁创建的呢？我是不是可以这么理解，如果Infra这个容器是POD的第一个容器，那么docker就会为Infra这个容器分配地址，通过docker的CNM模型的某些机制来完成为Infra这个容器创建虚拟网卡对的工作，使用的IP地址就是从docker0网桥的bip中获得的。而POD的容器共享Infra的网络应该是K8S的一种机制可网络插件没有关系。是这个意思么","like_count":0},{"had_liked":false,"id":71532,"user_name":"Booty Monster","can_delete":false,"product_type":"c1","uid":1198995,"ip_address":"","ucode":"D4915EAE180D15","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/93/a7b09103.jpg","comment_is_top":false,"comment_ctime":1551363735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551363735","product_id":100015201,"comment_content":"service 如果是iptables 做实际转发的确有这个问题，我们遇到过的：1 使用headless svc，2 使用ipvs ","like_count":0},{"had_liked":false,"id":41464,"user_name":"居然是飞哥","can_delete":false,"product_type":"c1","uid":1174874,"ip_address":"","ucode":"D97809C03A697D","user_header":"https://static001.geekbang.org/account/avatar/00/11/ed/5a/96cd78e8.jpg","comment_is_top":false,"comment_ctime":1542787357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542787357","product_id":100015201,"comment_content":"如果分配的子网是10.244.0.0&#47;16，那么这个集群里node节点最大的数目不是只能到254台？","like_count":0},{"had_liked":false,"id":40845,"user_name":"freeman","can_delete":false,"product_type":"c1","uid":1296242,"ip_address":"","ucode":"B766B91AFC3398","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZwGweFhVUTfOrrYRk6Dic1IBxFyj2ZgsI1UXQeic2B5uJFdjicsIicnKrJts9v7nGUTCQlSKNUpmvYULq5KjqWjU4g/132","comment_is_top":false,"comment_ctime":1542681366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542681366","product_id":100015201,"comment_content":"老师，能介绍下ipvlan吗。","like_count":0},{"had_liked":false,"id":39398,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1542265052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542265052","product_id":100015201,"comment_content":"老师，在实际使用过程中，遇到一个问题。k8s版本1.12.2，kube-proxy开启了ipvs后，部署最新的ingress-controller服务（daemenset部署，开启了hostnetwork: true）的时候,会报错监控检查失败。而去掉之后，是没有问题的。排除官方不推荐使用hostnetwork这种方式，是有什么原因引起的呢？测试过增加健康检查的时间和镜像的版本，都不能解决。","like_count":0},{"had_liked":false,"id":38038,"user_name":"萧箫萧","can_delete":false,"product_type":"c1","uid":1218358,"ip_address":"","ucode":"B8259F3CDFCCAD","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/36/6addd2b6.jpg","comment_is_top":false,"comment_ctime":1541902857,"is_pvip":false,"replies":[{"id":"13673","content":"见service部分","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1541938211,"ip_address":"","comment_id":38038,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541902857","product_id":100015201,"comment_content":"可以谈一下在pod内 请求一个域名的完整流程吗？ 比如说我最近遇到一个问题，reslove.conf这些文件内容都是正常的情况下，在某个image内为什么nslookup kuberenetes.default.svc.cluster.local 解析结果正常。<br>nslookup kubernetes.default 解析到外网。像这类问题如何从理论角度分析？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428571,"discussion_content":"见service部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541938211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37986,"user_name":"or0or1","can_delete":false,"product_type":"c1","uid":1218147,"ip_address":"","ucode":"E7B63C666302C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/63/64f62020.jpg","comment_is_top":false,"comment_ctime":1541839972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541839972","product_id":100015201,"comment_content":"把网络插件使用docker镜像的方式有什么优点和缺点？","like_count":0},{"had_liked":false,"id":37972,"user_name":"Len","can_delete":false,"product_type":"c1","uid":1022767,"ip_address":"","ucode":"53C623CE17973F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/2f/b7a3625e.jpg","comment_is_top":false,"comment_ctime":1541832365,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1541832365","product_id":100015201,"comment_content":"之所以选择 CNI，是因为 kubernetes 希望更广泛的支持不同的网络方案吧","like_count":0},{"had_liked":false,"id":37935,"user_name":"慕世勋","can_delete":false,"product_type":"c1","uid":1218188,"ip_address":"","ucode":"816C11C34A3494","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/8c/48a4d0a0.jpg","comment_is_top":false,"comment_ctime":1541815670,"is_pvip":false,"replies":[{"id":"13660","content":"容器网络其实很简单，开源主流方案成熟度已经可以。而且更多情况下，其实都是复用下层宿主机网络。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1541841649,"ip_address":"","comment_id":37935,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541815670","product_id":100015201,"comment_content":"请教下目前有相对成熟的k8s商业网络解决方案吗，用于大规模集群使用,主要避免雪崩造成大规模故障，你也知道，网络是个很敏感的课题","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428530,"discussion_content":"容器网络其实很简单，开源主流方案成熟度已经可以。而且更多情况下，其实都是复用下层宿主机网络。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541841649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37751,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1010056,"ip_address":"","ucode":"DD4717C06E417D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/88/528442b0.jpg","comment_is_top":false,"comment_ctime":1541724081,"is_pvip":false,"replies":[{"id":"13635","content":"肯定有","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1541767228,"ip_address":"","comment_id":37751,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541724081","product_id":100015201,"comment_content":"老师啥时候讲解一下calico，对比flannel网络优缺点哈","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428477,"discussion_content":"肯定有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541767228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}