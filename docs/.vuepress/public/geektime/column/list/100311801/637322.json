{"id":637322,"title":"结束语｜DDD，是技术也是艺术","content":"<p>你好，我是钟敬。</p><p>在不知不觉间，我们的课程已经接近尾声了。几个月来编写这门课的经历，既是对智力的淬炼，也是对体能的挑战。能够坚持至今，少不了你和其他小伙伴的支持。</p><p>在课程即将结束的时候，我又想起了开篇词里说过的这句话——“DDD 不仅是一门技术，更是一门艺术”。今天，我们就来聊聊技术和艺术吧。</p><p>“技”和“艺”有时不容易严格区分。不过相对而言，技术更偏重逻辑和套路。要么可以通过逻辑推导出来，要么可以通过套路一步一步地做出来；而艺术更侧重于经验、洞察、甚至审美。</p><p>不过，软件开发的审美不是与生俱来的，而是要经过后天的训练习得。就好比，一个数学家看到欧拉公式（见下图），会觉得很美，但没有经过数学训练的话，可能就无感了。</p><p>$$<br>\ne^{i \\pi}+1=0<br>\n$$</p><p>能够把技术和艺术结合起来，是优秀架构师的基本素养，也是学好 DDD 的关键。软件开发作为一门“技术”比较好理解，那么怎么理解其中的“艺术”呢？咱们就说三个方面吧：权衡的艺术、抽象的艺术、抓住本质的艺术。</p><h2>权衡的艺术</h2><p>我发现有些小伙伴对于软件开发中的不同选择，常常抱有非黑即白的思想。用Java还是PHP？当然是Java。用面向对象还是贫血模型？当然是面向对象。用JPA还是Mybatis?当然是 Mybatis……</p><!-- [[[read_end]]] --><p>然而，一个成熟的架构师却好像开了一双慧眼。他会看到，同样的业务，可以有不同的模型；同样的模型，可以用不同的代码风格实现；同样的技术需求，可以用不同的策略。</p><p>事实上，软件开发的全过程，几乎每一步，都可以有不同的做法，每种做法都有各自的优劣，常常没有绝对的对错。架构师总是秉持谦卑的心态，小心翼翼地分析和权衡，才能做出更好的决策。而很多决策，都存在“艺术”的成分。没有人能保证架构师的每一次决策都是正确的，但是更有经验、更擅于学习的架构师，做出正确决策的概率会更大一些。</p><p>怎样才能更清晰地审视自己的决策呢？最好能够把开发过程中每个架构决策的理由都记录下来，以便进一步地优化和演进。一个可以落地的方法是架构决策记录（architectural decision record ），简称ADR。相关信息你可以参考<a href=\"https://github.com/joelparkerhenderson/architecture-decision-record\">这个链接</a>，也可以通过网络找到更多详细的介绍。</p><h2>抽象的艺术</h2><p>再说说抽象的艺术。软件开发是个建模过程，而建模过程又是一个抽象过程。没有经过抽象的原始需求只是“形似”，经过抽象的领域模型才能“神似”。这也就是我们要建领域模型的一个重要原因。</p><p>同样一个业务，可能有不同的抽象方式，而且都是正确的。如何选择？有时候又是一个艺术问题。</p><p>抽象能够更准确地理解业务，也能带来更灵活的软件设计，代价则是理解的难度提高了。例如，在领域建模的过程中，遇到以下情况，抽象程度就会提高。</p><ul>\n<li>多对多关联</li>\n<li>指向自身的关联</li>\n<li>泛化</li>\n<li>三元关联（ternary association，我们的课程目前只遇到过二元关联）</li>\n</ul><p>如果这些因素混合在一起，抽象程度就会进一步增加。</p><p>是不是越抽象越好呢？不是。那么抽象到什么程度合适呢？你可能又遇到一个艺术问题了。</p><h2>抓住本质的艺术</h2><p>我们再来聊聊“抓住本质”的艺术。</p><p>所谓“抓住本质”有不同层面的含义。我在这里想说的是，DDD 解决的是软件开发的本质问题。</p><p>我们不妨先思考两个有趣的事情。一个是前两年兴起的“低代码”。低代码会让程序员失业吗？</p><p>另一个是在这门课程编写过程中，横空出世的 ChatGPT，这是一个会写论文，会编程序的人工智能。可怕的是这一切还刚刚开始。那么，人工智能会让程序员失业吗？</p><p>从某个角度来说，软件开发的历史，就是代码越来越“低”的历史。C语言比汇编语言“低”；Java比C语言“低”，现在的“低代码”不过是这个过程的延续。而ChatGPT写程序，是从另一个层面，使软件开发的难度更低。</p><p>在这个越来越“低”的过程中，也曾经有若干次宣称取代程序员的技术。60年代的COBOL语言，70年代的 SQL，90年代的“第四代语言”，直到今天的低代码和人工智能。有些程序员在这个过程中真的失业了，有些没有。</p><p>没有失业的程序员有两种，一种是不断拥抱新技能的；另一种是学会解决软件开发本质问题的。</p><p>我们这里的本质问题不是随便说说，而是来源于大家耳熟能详的“没有银弹”理论。这个思想是图灵奖得主Brooks提出的，怹老人家也是软件工程名著《人月神话》的作者。</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/b8/a8162831d566d574ac3c1cd82c7f48b8.jpg?wh=3962x2957\" alt=\"\"></p><p>没有银弹指的是，没有任何一种单一的软件开发技术，能在短期内大幅度提高软件开发效率。理由是什么呢？</p><p>Brooks 把软件开发所面临的困难分为本质问题（essence）和非本质问题(accident)。这里说的本质和非本质，又来源于亚里士多德的理论。本质问题，是关于事物中内在不变的属性的。比如一般而言人都有两只手。非本质问题是关于外在变化的属性的，比如人的年龄。</p><p>Brooks 认为，软件开发工具的革新，硬件效率的提升，解决的都是软件开发的非本质问题。而由于无法解决本质问题，所以工具的发展对软件开发效率的影响只是渐进的。</p><p>那么什么是软件开发的本质问题呢？这包括业务的复杂性、业务的可变性、以及软件的不透明性。</p><p>低代码，人工智能编程，目前解决的仍然是软件开发的非本质问题。为什么它们还不能解决本质问题呢？其中一个原因，就是问题中的“艺术”成分。</p><p>而你正在学习的 DDD，解决的恰恰是软件开发的本质问题。通过可视化、抽象化、严格化的方法建立领域模型的艺术，仍然无法被人工智能取代。所以你学会了这个本事，暂时应该还没有失业的危险。听到这，是不是觉得开心一些了？</p><p>人工智能未来能够掌握这门“艺术”吗？我也不知道。或许将来的某一天，它能掌握。不过那时候，人类面临的就不只是程序员是否失业的问题了。</p><p>既然已经到了科幻领域，咱们的讨论还是就此打住吧。</p><p>学到现在，你已经站在技术和艺术的十字路口上了。这说明你是一个有追求的程序员。探索的历程虽然艰辛，但是你总能在路途中发现一颗颗“璀璨宝石”。</p><p>现在，你已经把 DDD 收入囊中了。追风赶月莫停留，平芜尽处是春山。让我们继续前行，探索前路更多的风景！</p><p>我知道有很多同学都在努力学习，默默潜水。在专栏结束的今天，不妨在留言区里聊聊学习这门课的感受和收获。我还准备了一份<a href=\"https://jinshuju.net/f/YZJHrI\">毕业问卷</a>，希望你能花两三分钟填写一下。</p><p><a href=\"https://jinshuju.net/f/YZJHrI\"><img src=\"https://static001.geekbang.org/resource/image/9a/8f/9a94cf22a7c9bc58676a03c1b4e6a28f.jpg?wh=1142x801\" alt=\"\"></a></p><p>再次感谢你选择这门课，我们江湖再见！</p>","neighbors":{"left":{"article_title":"特别策划｜AI时代程序员生存之道","id":661963},"right":{"article_title":"结课测试｜来赴一场满分之约！","id":637412}},"comments":[{"had_liked":false,"id":378626,"user_name":"扶程星云","can_delete":false,"product_type":"c1","uid":2889861,"ip_address":"江苏","ucode":"55B419836C3EB3","user_header":"https://static001.geekbang.org/account/avatar/00/2c/18/85/f993330d.jpg","comment_is_top":false,"comment_ctime":1690513700,"is_pvip":false,"replies":[{"id":138086,"content":"共同进步！","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1691069927,"ip_address":"广东","comment_id":378626,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"非常感谢老师的分享，第一次读完，很多地方懵懂，我会不断重复拜读佳作！","like_count":2,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624927,"discussion_content":"共同进步！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691069927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376762,"user_name":"无问","can_delete":false,"product_type":"c1","uid":1546586,"ip_address":"上海","ucode":"F841A16374CC84","user_header":"https://static001.geekbang.org/account/avatar/00/17/99/5a/32f3df3c.jpg","comment_is_top":false,"comment_ctime":1687330605,"is_pvip":false,"replies":[{"id":137367,"content":"我对Go不是很熟，可以参考下面的文章：\nhttps:&#47;&#47;mehdihadeli.github.io&#47;awesome-go-education&#47;ddd&#47;\nhttps:&#47;&#47;programmingpercy.tech&#47;blog&#47;how-to-domain-driven-design-ddd-golang&#47;\nhttps:&#47;&#47;www.calhoun.io&#47;moving-towards-domain-driven-design-in-go&#47;","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1687584548,"ip_address":"广东","comment_id":376762,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"钟老师 golang有什么参考的ddd项目吗","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621737,"discussion_content":"我对Go不是很熟，可以参考下面的文章：\nhttps://mehdihadeli.github.io/awesome-go-education/ddd/\nhttps://programmingpercy.tech/blog/how-to-domain-driven-design-ddd-golang/\nhttps://www.calhoun.io/moving-towards-domain-driven-design-in-go/","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1687584548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1546586,"avatar":"https://static001.geekbang.org/account/avatar/00/17/99/5a/32f3df3c.jpg","nickname":"无问","note":"","ucode":"F841A16374CC84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622127,"discussion_content":"谢谢 英文的我尝试看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687938792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370264,"user_name":"Sam Jiang","can_delete":false,"product_type":"c1","uid":3067009,"ip_address":"上海","ucode":"C9B0173A161175","user_header":"https://static001.geekbang.org/account/avatar/00/2e/cc/81/9514a363.jpg","comment_is_top":false,"comment_ctime":1678627386,"is_pvip":false,"replies":[{"id":135025,"content":"共同进步！","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678674403,"ip_address":"广东","comment_id":370264,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"技术也需要洞察力，但是艺术需要想象力。\n\n学这门课让我开了眼界，发现曾经困扰自己的问题，已经有人想出了解决方法。并不是人类一思考，上帝就发笑。感谢钟老师。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608807,"discussion_content":"共同进步！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678674403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370213,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"北京","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1678539017,"is_pvip":false,"replies":[{"id":135085,"content":"这个理解是正确的。企业，用户，角色，三者构成了三元关系","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678842844,"ip_address":"广东","comment_id":370213,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"老师能加餐讲讲三元关联吗？\n我说说我的猜测：比如一个用户在一个系统里，可以访问两个不同的企业里的数据，在一个企业里的角色是管理员，在另一个企业里的角色客户。这里的业务逻辑就是三元关联，一个用户在不同的企业下，角色不一样。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609111,"discussion_content":"这个理解是正确的。企业，用户，角色，三者构成了三元关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678842844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370111,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"浙江","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1678406172,"is_pvip":false,"replies":[{"id":134938,"content":"你的学习态度和学习方法都很棒，在实践中遇到什么问题可以继续在群里或者留言区探讨。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678506616,"ip_address":"广东","comment_id":370111,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"收获很大，看了钟老师在之前文章中提到的「低配版」DDD，对坚持学习起到了很大帮助。在工作中恰好遇到了「项目管理」的问题，正在使用 DDD 开发一个项目，帮助解决问题。这是一个练习项目，等第一版完成后，分享出来和大家一起讨论。\n\n感谢钟老师带我入门 DDD ！","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608538,"discussion_content":"你的学习态度和学习方法都很棒，在实践中遇到什么问题可以继续在群里或者留言区探讨。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678506616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":608671,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678597761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":608538,"ip_address":"浙江","group_id":0},"score":608671,"extra":""}]}]},{"had_liked":false,"id":370110,"user_name":"灵活工作","can_delete":false,"product_type":"c1","uid":1017296,"ip_address":"湖北","ucode":"41F0870C832ECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/d0/56602a43.jpg","comment_is_top":false,"comment_ctime":1678405466,"is_pvip":false,"replies":[{"id":134940,"content":"这个问题，可能是限界上下文拆分问题，也可能是同一个上下文内的建模技巧问题，还可能是代码实现技巧问题。只能对着具体案例才能聊清楚了。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678507113,"ip_address":"广东","comment_id":370110,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"实际项目不会只有一个应用，在自己的项目中实践这门课时遇到的问题是有2个应用，一个是微信小程序，一个是后台管理系统，不知道怎么组织代码目录结构了，2个应用都有自己的restful和repository实现类，2个应用的功能有相同的有不同的，领域模型建模时建了一个包含从两个应用来的所有逻辑，但是repository接口只在domain层，导致两个应用的repository实现类里面的方法有的是空方法，而如果为2个应用在domain层建立自己的repository接口，又会导致领域逻辑不包括来自2个应用的所有逻辑，这样领域逻辑就不完整来，导致不知道怎么建模了？是每个应用单独建模吗？可是它们是一个系统里面的2个应用啊，怎么能单独建模呢？","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608541,"discussion_content":"这个问题，可能是限界上下文拆分问题，也可能是同一个上下文内的建模技巧问题，还可能是代码实现技巧问题。只能对着具体案例才能聊清楚了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678507113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370084,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":1752092,"ip_address":"北京","ucode":"DB449B298004DE","user_header":"https://static001.geekbang.org/account/avatar/00/1a/bc/1c/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1678356551,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"默默潜水学习，感谢作者分享！","like_count":1}]}