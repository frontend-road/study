{"id":275752,"title":"12｜语法加亮和配色方案：颜即正义","content":"<p>你好，我是吴咏炜。</p><p>语法加亮这个功能，我们都非常熟悉。和 vi 刚出现的时代不同，它现在已经成为编程的基本功能了。在我们使用的各种代码编辑器中，都有语法加亮的功能。我们甚至可以拿一句俗语反过来说：没见过猪跑，还能没吃过猪肉么？</p><p>但是，你有没有想过，语法加亮到底是怎么实现的呢？今天，我们就不仅要尝尝不同“风味”的猪肉，还要进一步看看猪到底是怎么跑的——这样，我们才能选择，然后调整出，最符合自己口味的大菜。</p><h2>语法加亮</h2><p>在<a href=\"https://time.geekbang.org/column/article/271208\">第 8 讲</a>里，我们已经提到，Vim 的语法加亮依靠的是在 syntax 目录下的运行支持文件。今天，我就通过例子给你解说一下，Vim 里如何实现语法加亮，然后语法加亮又如何映射到屏幕上的颜色和字体。</p><p>我们先来看一个比较简单的例子，xxd。</p><p>xxd 这个名字看起来，是不是有点陌生又有点熟悉？其实，我们在第 11 讲还刚讲过 xxd：它是一个把二进制文件转换成地址加十六进制数值再加可读 ASCII 文本的工具，它的输出格式在 Vim 里也被称作 xxd。不过，在用菜单项或 <code>:%!xxd</code> 命令转换之后，Vim 并不会自动使用 xxd 格式。要应用 xxd 格式的语法加亮，我们需要使用自动命令（可以参考 <a href=\"https://yianwillis.github.io/vimcdoc/doc/tips.html#using-xxd\"><code>:help using-xxd</code></a>），或者手工使用命令 <code>:setf xxd</code>。下图是对上次的二进制文件使用了 xxd 语法加亮的效果：</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/9c/25/9c4d080fd180c560757305d4a1645225.png?wh=1140*1000\" alt=\"Fig13.1\" title=\"使用了 xxd 语法加亮的效果\"></p><p>这个格式的语法加亮足够简单，我们就拿它来分析一下。不过，我有个小建议，你在看具体的语法加亮代码前，先花几秒钟的时间看一下图，自己分析一下里面有几种不同的语法加亮效果。</p><p>下面我们就来逐步看一下 syntax/xxd.vim 的内容。首先是开头和结尾部分：</p><pre><code class=\"language-vim\">\" quit when a syntax file was already loaded\nif exists(\"b:current_syntax\")\n  finish\nendif\n\n…\n\nlet b:current_syntax = \"xxd\"\n\n\" vim: ts=4\n</code></pre><p>最后一行的模式行，设定了这个文件使用的 tab 宽度。剩余部分基本上算是语法文件的固定格式了，有一个检查缓冲区变量（使用前缀 <code>b:</code>）、防止语法文件重复载入的条件判断，并在结尾设定这个缓冲区变量为语法的名称。</p><p>剩余部分可以分为两段。第一段是语法匹配：</p><pre><code class=\"language-vim\">syn match xxdAddress            \"^[0-9a-f]\\+:\"      contains=xxdSep\nsyn match xxdSep    contained   \":\"\nsyn match xxdAscii              \"  .\\{,16\\}\\r\\=$\"hs=s+2 contains=xxdDot\nsyn match xxdDot    contained   \"[.\\r]\"\n</code></pre><p>这儿定义了 4 种不同的“语法项目”，其中 1、2 和 3、4 还互相有包含（“contains”）和被包含（“contained”）的关系。</p><ol>\n<li><strong>xxdAddress。</strong>它是地址匹配，所以匹配条件是从行首开始的一个或更多的十六进制字符后面跟一个冒号。</li>\n<li><strong>xxdSep。</strong>它是分隔符，仅匹配 xxdAddress 中的冒号部分，也算是地址的一部分。</li>\n<li><strong>xxdAscii。</strong>它是右边的 ASCII 字符部分，条件是两个空格后面跟最多 16 个字符，然后是可选的 CR 字符（<code>\\=</code> 和 <code>\\?</code> 效果相同），然后必须是一行结束。</li>\n<li><strong>xxdDot。</strong>它是对“.”和 CR 字符的特殊匹配，可以留意一下上面图里“.”和其他字符的加亮效果的不同之处。同样，这个句点也属于 ASCII 字符部分。</li>\n</ol><p>上面的正则表达式都比较简单，唯一之前没出现过的是第 3 个正则表达式后面的 <code>hs=s+2</code>：它的含义是语法加亮的起始位置是模式匹配部分的开始位置再加 2（可查看 <a href=\"https://yianwillis.github.io/vimcdoc/doc/syntax.html#:syn-pattern-offset\"><code>:help :syn-pattern-offset</code></a>），这是在语法加亮文件里的常用特殊语法。</p><p>上面的代码可以从 xxd 格式的内容中找出 4 种不同的语法格式。如何展示这些语法，就要看下面的第二段代码了：</p><pre><code class=\"language-vim\">\" Define the default highlighting.\nif !exists(\"skip_xxd_syntax_inits\")\n\n hi def link xxdAddress Constant\n hi def link xxdSep     Identifier\n hi def link xxdAscii   Statement\n\nendif\n</code></pre><p>外面的条件语句不是惯用法，我们可以忽略。里面重要的是三个 <code>hi def link</code> 语句，拼写完整的话是 <code>highlight default link</code>（可参见帮助 <a href=\"https://yianwillis.github.io/vimcdoc/doc/syntax.html#:highlight-link\"><code>:help :highlight-link</code></a>）。这三个语句建立了默认的语法加亮链接组，也就是，在用户没有自己在 vimrc 配置文件中使用 <code>highlight link</code> 来修改语法加亮时，默认的语法项目和加亮组之间的关系。目前，地址 xxdAddress 使用常数 Constant 的加亮方式，冒号分隔符 xxdSep 使用标识符 Identifier 的加亮方式，ASCII 文本 xxdAscii 使用语句 Statement 的加亮方式。</p><p>那 xxdDot 到哪儿去了呢？答案是，它没有加亮组，因为我们不需要对其进行特殊加亮。虽然 Vim 会认出它使用了特殊的语法格式，在显示上它和中间的十六进制数值一样，没有任何语法加亮效果。</p><p>Constant、Identifier、Statement 这些加亮组，又应该以何种方式展示呢？这就是配色方案要做的事情了。如果说语法加亮是逻辑问题的话，那配色方案就是个审美问题。你要个性化的话，就靠配色方案了。</p><h2>配色方案</h2><p>类似地，配色方案里包含的也是一些模板语句加上色彩的定义。比如，在配色方案 koehler 里，跟 xxd 相关的核心色彩定义是：</p><pre><code class=\"language-vim\">set background=dark\nhi Normal\t\t  guifg=white  guibg=black\nhi Constant       term=underline  cterm=bold ctermfg=magenta  guifg=#ffa0a0\nhi Identifier     term=underline   ctermfg=brown  guifg=#40ffff\nhi Statement      term=bold  cterm=bold ctermfg=yellow  gui=bold  guifg=#ffff60\n</code></pre><p>首先，这个配色方案设定背景为 <code>dark</code>，深色（允许的另外一个值是 <code>light</code>，浅色背景）。这会调整缺省的颜色组，使得文字色彩在深色背景上显示比较友好。但这不会在终端里真正改变背景（仍要靠下面的背景色设定），因此，如果你在浅色背景的终端里使用这个配色方案，会显得不太友好。有些比较好的配色方案会采用相反的做法，根据目前是深色还是浅色背景，采用不同的配色。</p><p>对于“正常”（Normal）的加亮组，这个配色方案采用了最直截了当的前景白、背景黑。可以预见，这个配色会比较醒（cì）目（yǎn）。</p><p>对于 Constant 加亮组，这个配色方案就稍微复杂点了，分了单色终端、色彩终端和图形界面的不同配色。古老的单色终端里使用下划线（应该已经没人用吧，所以以后我就忽略这种设定了）；色彩终端下使用粗体和紫色前景；图形界面指定了前景色为 RGB 色彩 #ffa0a0，亮棕色。</p><p>Identifier 加亮组也类似，色彩终端下使用棕色前景，图形界面下前景色则是 RGB 色彩 #40ffff，亮青色。</p><p>Statement 加亮组在色彩终端和图形界面下都使用粗体，色彩终端使用黄色前景色，图形界面使用前景色是 RGB 色彩 #ffff60，亮黄色。</p><p>使用这个配色方案在图形界面和色彩终端下的效果，如下面的截图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/83/3b/832e5d45ca49423208yy20742458fc3b.png?wh=1142*134\" alt=\"Fig13.2\" title=\"图形界面下 koehler 配色方案的效果\"></p><p><img src=\"https://static001.geekbang.org/resource/image/86/c6/86402e7b171a00dac3b35945e89c4bc6.png?wh=1142*122\" alt=\"Fig13.3\" title=\"色彩终端下 koehler 配色方案的效果\"></p><h3>配色方案在终端下的优化</h3><p>说到这里，我们有必要来讨论一下 Vim 里允许使用的色彩数量。在图形界面 Vim 里，色彩是 Vim 本身调用系统的编程接口来控制的，可以使用 RGB 的所有 16,777,216 种不同颜色。但在终端里，Vim 会受到终端能力的限制，只能根据终端的能力来显示色彩。根据终端的类型，我们可以分为 4 种情况：</p><p>第 1 种是最古老的是单色终端，没有颜色，只能使用下划线、粗体等效果。效果定义使用 <code>term=…</code> 的形式。今天，我们应该基本碰不到这样的环境了。</p><p>第 2 种是 8/16 色终端，允许使用最基本的八种颜色（黑、红、绿、黄、蓝、紫、青、白），以及这些颜色的较亮变体（即使 8 色终端一般也能在前景色上使用加亮的变体）。我们可以使用 <code>cterm=…</code> 定义粗体等效果（由于兼容性问题，不常用），用 <code>ctermfg=…</code> 和 <code>ctermbg=…</code> 定义前景和背景色，其中可以使用英文色彩名称或序号（见 <a href=\"https://yianwillis.github.io/vimcdoc/doc/syntax.html#cterm-colors\"><code>:help cterm-colors</code></a>）。鉴于序号在不同的环境里可能是不同的，我们一般使用色彩名称。如果你使用非图形界面终端，可能会遇到这种情况，但这应当也很不常见了吧。</p><p>这些颜色虽然是标准的，但很多终端允许用户调整这些颜色，以达到最好的色彩组合效果。比如，下图是 macOS 里终端应用的一个设置界面，其中的“ANSI 颜色”就是用户可以调整的 16 种“标准色”：</p><p><img src=\"https://static001.geekbang.org/resource/image/a9/ae/a9ea06f1895yy47154a5630970ae2aae.png?wh=898*952\" alt=\"Fig13.4\" title=\"macOS 终端应用的文本设置界面\"></p><p>第 3 种是 256 色终端，用户可以选择预先定义的 256 种颜色之一，这在目前的终端里是非常主流的方式了。你可以在网上很方便地找到<a href=\"https://github.com/eikenb/terminal-colors\">脚本</a>来输出这些颜色，效果如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c7/cb/c70b3875f2f3dc563401d555152867cb.png?wh=1058*686\" alt=\"Fig13.5\" title=\"在 iTerm2 下使用脚本输出的 256 种颜色\"></p><p>要选择这 256 种颜色中的一种，方式不太直观：你需要使用 <code>ctermfg=…</code> 和 <code>ctermbg=…</code>，并直接写出这 256 种颜色之一的编号。</p><p>这 256 种颜色都可以算是标准的，它们的标准 RGB 值有明确的定义。头 16 种颜色就是上面的“ANSI 颜色”，在终端里常常可以直接调整，图中也可以看到和前面图里的颜色已经有明显的不同。虽然界面只提供了头 16 种颜色的调整，但为了达到最佳的显示效果，你也可以编程修改这 256 种颜色的调色板。</p><p>第 4 种是支持真彩（truecolor）的终端，跟编程修改 256 色的调色板相比，这是更简单的做法。下面是部分比较常见的支持 RGB 真彩的终端（<a href=\"https://gist.github.com/XVilka/8346728\">此处</a>是一个更完整的列表）：</p><ul>\n<li>GNOME-Terminal（Linux）</li>\n<li>iTerm2（macOS）</li>\n<li>mintty（Windows）</li>\n<li>命令提示符（Windows 10 版本 1703 及以后；在命令提示符里使用 Vim，如果不启用真彩支持，颜色可能完全错误！）</li>\n</ul><p>在这些终端里，终端 Vim 就能显示跟图形界面 Vim 同样多的颜色数，因而能达到最佳色彩效果。你仍需手工打开（默认关闭的）Vim 选项 <code>termguicolors</code>。此后，Vim 就会使用你在  <code>guifg</code> 和 <code>guibg</code> 中写的 RGB 色彩，也就是说，把终端当图形界面一样看待（在色彩方面）。</p><p>鉴于真彩终端的一个惯例是设置环境变量 COLORTERM 为 <code>truecolor</code> 或 <code>24bit</code>，我们可以在 vimrc 配置文件中进行检查：</p><pre><code class=\"language-vim\">if has('termguicolors') &amp;&amp;\n      \\($COLORTERM == 'truecolor' || $COLORTERM == '24bit')\n  set termguicolors\nendif\n</code></pre><p>不过，这个检查方式仅限于类 Unix 平台。对于 Windows，Vim 提供了另外一个专门的特性检查项：</p><pre><code class=\"language-vim\">if has('vcon')\n  set termguicolors\nendif\n</code></pre><h3>推荐配色方案</h3><p>上面我们分析的 koehler，算是 Vim 内置的配色方案中比较中规中矩的一个，可用，但不那么好看。如果你想要一个漂亮的配色方案，还是不应该在内置配色方案里寻找。</p><p>一个广受好评的 Vim 配色方案是 <a href=\"https://github.com/morhetz/gruvbox\">gruvbox</a>（包管理器中的安装名称是“morhetz/gruvbox”）。它不仅是一个支持深色背景和浅色背景的配色方案，而且还特意确保自己能和 Vim 的一些最流行插件兼容。下面是这个配色方案的示意截图：</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/ed/e9c9cb2c6ff4bf1e4efe2c11352df1ed.png?wh=1252*830\" alt=\"Fig13.6\" title=\"浅色背景下的 gruvbox 效果图\"></p><p><img src=\"https://static001.geekbang.org/resource/image/69/7f/6915526e3e28877a8ecf58600ffdc77f.png?wh=1252*830\" alt=\"Fig13.7\" title=\"深色背景下的 gruvbox 效果图\"></p><p>我觉得 gruvbox 在深色背景下还是挺漂亮的。它的颜色总体偏暖，而你如果喜欢深色背景下较为清冷的色彩，我觉得 <a href=\"https://github.com/nanotech/jellybeans.vim\">jellybeans</a>（包管理器中的安装名称是“nanotech/jellybeans.vim”）还不错：</p><p><img src=\"https://static001.geekbang.org/resource/image/e1/22/e1ebd6a01641eeedbaa8d7d6890d2d22.png?wh=1252*830\" alt=\"Fig13.8\" title=\"使用深色背景的 jellybeans 效果图\"></p><p>不过，这两种方案我都是偶尔使用，我使用更多的还是明白（mbbill）设计的 <a href=\"https://github.com/mbbill/desertEx\">desertEx</a>（包管理器中的安装名称是“mbbill/desertEx”）的一个版本。它的特点是无加亮的普通文字对比度设得比较低，读起来比较轻松（但加亮部分效果仍然比较强烈）。如果你想试试这个方案的话，可以自己安装尝试一下：</p><p><img src=\"https://static001.geekbang.org/resource/image/6e/6c/6e0aa1889cba9e8e17fd50224d0c276c.png?wh=1252*830\" alt=\"Fig13.9\" title=\"我用的 desertEx 效果图（非最新版本）\"></p><h3>检查/调试配色方案</h3><p>如果你想自己对配色方案进行调整的话，有一个小工具肯定会非常有用，那就是 vim-scripts/SyntaxAttr.vim。不过，这个插件不会自己添加键映射，需要你在用包管理器安装之后，自己在 vimrc 配置文件中加入类似下面的语句：</p><pre><code class=\"language-vim\">nnoremap &lt;Leader&gt;a :call SyntaxAttr()&lt;CR&gt;\n</code></pre><p>这样，我们就能用 <code>\\a</code> 来检查光标下面的语法高亮详情了。下面是一个示例：</p><p><img src=\"https://static001.geekbang.org/resource/image/6b/01/6bf1c5b8a5d8c43e68540d29944c5a01.png?wh=1252*524\" alt=\"Fig13.10\" title=\"检查光标下文本的加亮组\"></p><p>从上面可以看到，<code>constexpr</code> 属于 cppStorageClass 语法加亮组（这是在 syntax/cpp.vim 中定义的），并且被链接到了 Type 加亮组。后面的 guifg 和 gui 设定就是 Type 加亮组的内容：使用色彩 tan1（RGB 值为 #ffa54f），特殊效果为粗体（bold）。</p><p>在你自己设计、调试语法文件或配色方案时，你会发现这个工具非常有用。</p><h2>输出加亮效果</h2><p>作为一个文本编辑器，Vim 只接受文本的复制和粘贴。如果你想要在一个（非 Markdown）文档中展示有语法加亮的代码，Vim 也是可以用来产生这样的代码的——通过 HTML 输出。</p><p>Vim 默认就提供了 <code>:TOhtml</code> 命令（参见<a href=\"https://time.geekbang.org/column/article/267765\">第 4 讲</a>中讨论的系统内置插件），可以把当前展示的语法加亮效果输出为一个 HTML 文件。你可以根据最终文档的要求，选择合适的深色或浅色配色方案，然后使用该命令来输出 HTML。这个命令默认输出整个文件，你也可以自己在可视模式下选定范围，或者用逗号隔开的行号选定范围，这样 <code>:TOhtml</code> 命令就只会输出选定范围的 HTML 代码。</p><p>这个方式灵活是挺灵活，但不能直接把带色彩加亮的文本贴到文档里去，终究还是不太方便。令人欣慰的是，早就有人找到了在各个平台上把 HTML 代码转成剪贴板富文本的方法。我最近对一个 Vim 插件 <a href=\"https://github.com/adah1972/vim-copy-as-rtf\">vim-copy-as-rtf</a> 作了点改造，使其可以在我们现在讲的三大主流平台（macOS、Linux 和 Windows）上都可以直接复制出带语法加亮的代码。在 macOS 和 Windows 上，没有特别的配置要求；在 Linux 桌面环境下，我们要求系统必须装有 xclip 工具。这样，我们只需要在使用 <code>TOhtml</code> 的地方，把命令改成 <code>CopyRTF</code> 就能把加亮的代码复制到系统的剪贴板中。</p><h2>内容小结</h2><p>好了，我们现在来总结一下今天学到的内容：</p><ul>\n<li>Vim 使用正则表达式来匹配代码，把代码分到不同的“语法项目”里。</li>\n<li>语法项目可以跟加亮组进行链接，加亮组可以针对终端和图形界面定义不同的显示方式。</li>\n<li>主流的终端可以显示 256 色，某些终端已经可以跟图形界面一样显示 RGB 真彩。</li>\n<li>我推荐了 gruvbox、jellybeans 和 desertEx 三个配色方案；当然，你也可以自己在网上找其他好的配色方案。</li>\n<li>SyntaxAttr.vim 可以显示语法加亮组的细节，可以用来帮助调试语法加亮和配色方案。</li>\n<li>Vim 的加亮效果可以输出成 HTML 文件，也可以复制到剪贴板中成为带语法加亮的富文本，方便在办公文档中使用。</li>\n</ul><p>本讲我们的配置文件有一些改动，对应的标签是 <code>l12-unix</code> 和 <code>l12-windows</code>。</p><h2>课后练习</h2><p>想一想，如果希望颜色在 8/16 色终端下和 256 色终端下都有效，并且在 256 色终端下使用 256 色的配置，该怎么做？</p><p>在自己尝试解决这个问题之后，可以看一下 jellybeans 里面的颜色定义，了解它是如何解决在不同终端下面的颜色一致性问题的。</p><p>如果有任何问题，欢迎留言和我交流。</p><p>我是吴咏炜，我们下一讲再见！</p>","comments":[{"had_liked":false,"id":243170,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1597980872,"is_pvip":false,"replies":[{"id":"89699","content":"一直坐沙发……:-)","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1598095876,"ip_address":"","comment_id":243170,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18777850056","product_id":100055801,"comment_content":"今天收获最大的就是这个`termguicolors`参数了.<br>有了它,vim的显示效果立马提升了好几个档次.������<br><br>最近也折腾过256色,但总感觉配置的颜色跟实际显示的有些偏差.<br><br>对于在tmux中使用vim的同学来说,这篇文章可能会有帮助.<br>[How to use true colors in vim under tmux?](https:&#47;&#47;github.com&#47;tmux&#47;tmux&#47;issues&#47;1246)<br>","like_count":5,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504207,"discussion_content":"一直坐沙发……:-)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598095876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1232859,"avatar":"https://static001.geekbang.org/account/avatar/00/12/cf/db/9693d08f.jpg","nickname":"YouCompleteMe","note":"","ucode":"89B5A75DA85E0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300261,"discussion_content":"找了半天，发现$TERM不是xterm时，需要手动设置t_8f t_8b (:h xterm-true-color","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598002908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243233,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1597999380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5892966676","product_id":100055801,"comment_content":"课后思考题:<br>与想象的差不多,根据当前环境来调整配色的参数.<br><br>[jellybeans](https:&#47;&#47;github.com&#47;nanotech&#47;jellybeans.vim&#47;blob&#47;master&#47;colors&#47;jellybeans.vim)<br>中的代码如下:<br>```<br>if s:true_color || &amp;t_Co &gt;= 88<br>　let s:low_color = 0<br>else<br>　let s:low_color = 1<br>endif<br><br>&quot; sets the highlighting for the given group<br>fun! s:X(group, fg, bg, attr, lcfg, lcbg)<br>　if s:low_color<br>　　let l:cmd = &quot;hi &quot;.a:group.<br>　　\\ &quot; ctermfg=&quot;.s:prefix_highlight_value_with(&quot;&quot;, a:lcfg).<br>　　\\ &quot; ctermbg=&quot;.s:prefix_highlight_value_with(&quot;&quot;, a:lcbg)<br>　else<br>　　let l:cmd = &quot;hi &quot;.a:group.<br>　　\\ &quot; guifg=&quot;.s:prefix_highlight_value_with(&quot;#&quot;, a:fg).<br>　　\\ &quot; guibg=&quot;.s:prefix_highlight_value_with(&quot;#&quot;, a:bg)<br>　　if !s:true_color<br>　　　let l:cmd = l:cmd.<br>　　　\\ &quot; ctermfg=&quot;.s:rgb(a:fg).<br>　　　\\ &quot; ctermbg=&quot;.s:rgb(a:bg)<br>　　endif<br>　endif<br>　...<br>endfun<br>```<br>","like_count":1},{"had_liked":false,"id":250533,"user_name":"瀚海星尘","can_delete":false,"product_type":"c1","uid":1024461,"ip_address":"","ucode":"90F418299EA3BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/cd/2c513481.jpg","comment_is_top":false,"comment_ctime":1601119114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601119114","product_id":100055801,"comment_content":"如果之前的课程是“酷”话，这节课后就开始“炫”了😄。终端的色彩实现方案，感觉很有意思啊~","like_count":0},{"had_liked":false,"id":247287,"user_name":"YouCompleteMe","can_delete":false,"product_type":"c1","uid":1232859,"ip_address":"","ucode":"89B5A75DA85E0A","user_header":"https://static001.geekbang.org/account/avatar/00/12/cf/db/9693d08f.jpg","comment_is_top":false,"comment_ctime":1599648817,"is_pvip":false,"replies":[{"id":"90823","content":"OK，你现在可以设：<br><br>let g:copy_as_rtf_silence_on_errors = 1<br>","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1599659347,"ip_address":"","comment_id":247287,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599648817","product_id":100055801,"comment_content":"老师，vim-copy-as-rtf在不支持的平台上会 echomsg &#39;Cannot load copy-as-rtf plugin: unsupported platform&#39;,比如我使用的WSL。我在多个平台共用的一份vimrc，如果在vimrc里判断平台，会增加很多代码。可不可以增加一个option，在不支持的平台，直接finish。","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505366,"discussion_content":"OK，你现在可以设：\n\nlet g:copy_as_rtf_silence_on_errors = 1\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599659347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244606,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1598592631,"is_pvip":false,"replies":[{"id":"90081","content":"在你的 vimrc 中用 colorscheme 命令选择配色方案了吗？可以先直接在 Vim 里手敲命令试验效果，用“colorscheme desertEx”、“colorscheme gruvbox”这样的命令。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1598693188,"ip_address":"","comment_id":244606,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1598592631","product_id":100055801,"comment_content":"老师给的这 3 个配色方案是直接用插件下载安装后就可以生效吗？我试了一下，下载了第 3 个插件（mbbill&#47;desertEx）下来，Mac 下的图形界面的配色还是没有改变。试着在配置文件里加了 set bg=dark 还有 syntax on，但是不起作用。<br><br>用 vim-scripts&#47;SyntaxAttr.vim 插件查看 .vimrc 文件中的关键字，输出是<br><br>group: vimCommand-&gt;Statement guifg=#ffff60(#ffff60) gui=bold<br><br>主要是 Mac 图形界面的关键字是深紫色，高亮和不高亮区别不是特别明显。还是想弄个清晰一点的配色，望老师指点������","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504633,"discussion_content":"在你的 vimrc 中用 colorscheme 命令选择配色方案了吗？可以先直接在 Vim 里手敲命令试验效果，用“colorscheme desertEx”、“colorscheme gruvbox”这样的命令。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598693188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302034,"discussion_content":"原来要设定方案，感谢老师指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598767669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243708,"user_name":"AirY","can_delete":false,"product_type":"c1","uid":1193938,"ip_address":"","ucode":"54E8F7E55BDEA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/d2/945fa276.jpg","comment_is_top":false,"comment_ctime":1598253721,"is_pvip":false,"replies":[{"id":"89801","content":"建议你先去查阅一下，怎样问问题……<br><br>我完全不知道你的问题出在哪里，怎么回答你？我只能说的，我的 sudo vim 是没问题的。<br><br>但我一般也不这么用，因为容易出权限问题。如果我需要用 root 权限编辑的话，我更愿意先 sudo su -l，再进行编辑。","user_name":"作者回复","user_name_real":"吴咏炜","uid":"1645639","ctime":1598282892,"ip_address":"","comment_id":243708,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1598253721","product_id":100055801,"comment_content":"大佬，求帮助，我配置Vundle插件后，sudo vim会报错","like_count":0,"discussions":[{"author":{"id":1645639,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/47/53c48284.jpg","nickname":"吴咏炜","note":"","ucode":"8C24C10AEC779F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504370,"discussion_content":"建议你先去查阅一下，怎样问问题……\n\n我完全不知道你的问题出在哪里，怎么回答你？我只能说的，我的 sudo vim 是没问题的。\n\n但我一般也不这么用，因为容易出权限问题。如果我需要用 root 权限编辑的话，我更愿意先 sudo su -l，再进行编辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598282892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193938,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/d2/945fa276.jpg","nickname":"AirY","note":"","ucode":"54E8F7E55BDEA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300857,"discussion_content":"呃呃呃，我的问题，抱歉，可以加个微信不，求教很多问题，买了两个您的课程了，求个好友位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598283160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}