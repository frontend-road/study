{"id":83461,"title":"24 | 快速反馈：为什么你们公司总是做不好持续集成？","content":"<p>你好，我是郑晔。</p><p>在“以终为始”那个模块，我们留下了一个巨大的尾巴。在“<a href=\"http://time.geekbang.org/column/article/75977\">持续集成：集成本身就是写代码的一个环节</a>”这篇文章中，我们是站在“以终为始”的角度阐述了集成，尤其是持续集成的重要性。</p><p>但怎么做好持续集成，才是很多人真正关心的内容。今天，我们就来谈谈如何做好持续集成。</p><p>既然我们打算讨论持续集成，不妨停下来先思考一个问题：你对持续集成的第一印象是什么。</p><p>持续集成？Jenkins？没错，很多人对持续集成第一印象都是持续集成服务器，也就是 CI 服务器，当年是 CruiseControl，今天换成了 Jenkins。</p><p>也正是因为如此，很多人就把 CI 服务器理解成了持续集成。我就曾经接触过这样的团队，他们恨不得把所有的事情都放在 CI 服务器上做：在 CI 服务器上做了编译，跑了代码检查，运行了单元测试，做了测试覆盖率的统计等等。</p><p>或许你会疑问，这有什么不对的吗？</p><p>在做软件这件事上，我们不会用对与错去衡量，我只能说，这种做法是可行的，但它不是最佳实践。我希望你去思考，有没有比这更好的做法呢？</p><p>想要回答这个问题，我们还是要回到持续集成的本质上去。持续集成的诞生，就是人们尝试缩短集成周期的结果。为什么要缩短周期呢？因为我们希望尽早得到反馈，知道自己的工作结果是否有效。</p><!-- [[[read_end]]] --><p>所以，想要做好持续集成，就需要顺应持续集成的本质：尽快得到工作反馈。</p><p>由此，我们便得到持续集成的关键点，你只要记住一句话，<strong>快速反馈。</strong></p><p>快速反馈，这句分成两个部分，快速和反馈，这也就引出了持续集成的两个重要目标：<strong>怎样快速地得到反馈，以及什么样的反馈是有效的。</strong></p><h2>快速得到反馈</h2><p>我们回到前面的例子上，把各种检查放到 CI 服务器上执行，它可以让我们知道代码是不是有问题，这是一个有效的反馈，但它的反馈够快速吗？虽然比起没有持续集成的状态，它是好很多。但是，我们需要问一个问题，能不能更快地得到反馈呢？</p><p>显然，我们还可以做得更快。在自己的开发机上执行这些检查，就会比在 CI 服务器快。也就是说，<strong>执行同样的操作，本地环境会快于 CI 服务器环境。</strong></p><p>为什么会这样呢？我们先来看看所有检查在 CI 服务器上执行，每个程序员的动作是什么样的。</p><p>我们写好代码，然后需要提交代码，等待 CI 服务器运行检查结果，然后，用 CI 监视器查看执行结果。如果没问题，继续做下一个任务，如果有错误，修复错误，再执行同样的过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/31/cc/318016501ec6de73ac39ae9392c5eecc.jpg?wh=2284*1069\" alt=\"\"></p><p>再来看看本地执行的动作。运行构建脚本，如果一切正确，你可以选择提交代码或是继续下一个任务，如果失败，立即修复。</p><p><img src=\"https://static001.geekbang.org/resource/image/99/c1/99294ff1d2b2c25c5433ca653d4ffcc1.jpg?wh=2284*1410\" alt=\"\"></p><p>对比之下，在本地运行这些检查，你不需要提交，不需要等 CI 服务器开始执行，不需要跑到额外的地方查看检查结果。所以，这个操作比提交到服务器上会快很多。</p><p>另外，这里还有一个关键点，我们的操作是连续的。一旦检查结果出错了，我们立刻进入修复环节。作为程序员，我们太了解连续操作的重要性了。这就像打游戏时，我们感觉不到时间流逝一般，有人把这种状态称之为“心流”。</p><p>而提交代码，等待 CI 服务器的检查结果，就等于强迫你停下来，你的心流就被打断了。</p><p>如果你对心流的概念感兴趣，可以去读米哈里·契克森米哈赖的著作<a href=\"http://book.douban.com/subject/27186106/\">《心流》</a>，这位作者就是心流概念的提出者。</p><p>前面我们只是在说，你作为程序员个体，使用持续集成的效果，这只是为了简化讨论。接下来，我们向更真实的世界靠拢，引入另一个重要的因素：团队协作。</p><p>假设你的团队就是在 CI 服务器上执行检查。你兴高采烈地写完一段代码准备提交，结果，此时你隔壁的同事手快一筹，先提交了，你不得不停下来等他。如果很不幸，你同事的检查失败的话，那么他又要把它修复好，你等的时间就更长了。</p><p>一个小问题也就罢了，如果是个大问题，他可能要修很长一段时间。这个时候，你除了等待，也没有更好的选择。如此一来，大把的时间就被浪费掉了。</p><p>这里我们要“插播”持续集成中重要的一个提交纪律：<strong>只有 CI 服务器处于绿色的状态才能提交代码。</strong>有检查在运行不能提交，有错误不能提交。原因很简单，如果这个时候多个人提交了代码，检查失败了，那问题到底算谁的呢？</p><p>反之，如果一次只有一个人提交代码，责任是明确的。如果团队不大，这个纪律相对还好执行，提交之前看一眼，或是喊一声就可以了。</p><p>如果团队稍微有一点规模，可以用一个小东西当作令牌，谁拿到了谁来提交。如果真的有人在 CI 服务器还在运行的时候，提交了代码怎么办？很简单，谁提交谁负责，错了就他修，谁让他违反纪律了。</p><p>好，你已经理解了我说的重点：<strong>不能把检查只放到 CI 服务器上执行。</strong>那该怎么做呢？答案已经呼之欲出了，那就是在本地开发环境上执行。</p><p>想做好持续集成的一个关键点是，<strong>用好本地构建脚本（build script），保证各种各样的检查都可以在本地环境执行。</strong></p><p>一旦有了构建脚本，你在 CI 服务器上的动作也简单了，就是调用这个脚本。也就是说，本地检查和 CI 服务器上的动作是一致的。</p><p>至于什么样的内容适合放在构建脚本里，这个话题我们先放一放，把它留到后续“自动化”模块再做讨论。</p><p>在“任务分解”模块中，我与你讨论了“小”动作在工作中的重要性，“小”动作完成得越快，工作反馈得到也越快，所以说，也只有坚持不懈地做“小”动作，才能缩短反馈周期。</p><p>现在我们把这个道理与持续集成结合起来理解，我们的工作流程就变成了这样：</p><p>每完成一个任务，在本地运行构建脚本，如果有问题，就修复；没问题，则可以同步代码。如果 CI 服务器上没有正在运行的服务，就可以提交代码了。</p><p><img src=\"https://static001.geekbang.org/resource/image/85/43/8589e69a2774c1f7c9553afb4d644843.jpg?wh=2284*1190\" alt=\"\"></p><p>提交代码中最麻烦的动作，其实是合并代码。不过，因为我们做的是小任务，改动的代码量并不大，所以，即便有需要合并的代码，量也不会很大，所需的脑力以及工作时间都会少很多。如此一来，我们的开发效率才可能能真正得到提高。</p><p>当团队真正地实施起持续集成，你会发现随着时间增加，本地检查的时间会越来越长。原因有很多，比如，代码越来越多，测试也越来越多。总之，检查的时间长了，就会对集成的速度造成影响。</p><p>这个时候，本着快速反馈的理念，我们就必须想办法。比如，有的团队做了分布式测试运行，有的团队将测试分类，就是我们在测试金字塔中讲到的分类，在本地执行单元测试和集成测试，而把更复杂的系统测试放到 CI 服务器上运行。</p><p><strong>简单来说，我们的目的就是快速地得到反馈。</strong></p><h2>得到有效的反馈</h2><p>说完了“快速”，我们再来看看做好持续集成的第二个重点：<strong>反馈，也就是怎么得到有效的反馈。</strong></p><p>为什么需要反馈，道理很简单，我们得知道自己做得对不对。你可能会问，根据前面的说法，如果本地和 CI 服务器上执行的是一样的脚本，我在本地通过了，还用关心 CI 服务器的反馈吗？</p><p>当然要。因为还会出现很多其他问题，比如说最简单的一种情况是，你漏提交了一个文件。</p><p>好，既然我们要关注CI 服务器的反馈，下一个问题就是，它怎么反馈给我们呢？</p><p>我们还是从一种常见的错误入手。有些团队做持续集成用的反馈方式是什么呢？答案是邮件。</p><p>以邮件进行反馈，问题出在哪里呢？很明显，邮件不是一种即时反馈的工具。</p><p>我不知道有多少人会把邮件客户端当作日常的工具，就我个人习惯而言，一天查看几次邮件就算不错了，如果以邮件作为反馈方式，很有可能是出错了很长时间，我都无知无觉。</p><p>我们前面一直在强调快速，需要的是即时反馈，一旦邮件成了持续集成链条中的一环，无论如何都快不起来。</p><p>那你可以怎么做呢？在前面各种讨论中，我其实已经透露了答案：持续集成监视器，也是 CI 监视器。</p><p><img src=\"https://static001.geekbang.org/resource/image/e0/03/e0971c121dbce75487d4033131711603.png?wh=1884*1073\" alt=\"\"><br>\n（图片来源：<a href=\"http://github.com/pivotal-legacy/projectmonitor\">CI 监视器的示例 projectmonitor</a>）</p><p>CI 监视器的原理很简单，CI 服务器在构建完之后，会把结果以API的方式暴露出来，早期有RSS和ATOM格式，后来有JSON的格式。得到的结果就可以用不同的方式进行展现了。市面上有很多CI 监视器的软件，有的是拿到结果之后，做一个视觉呈现，有的是做桌面通知。</p><p>现在，我们终于要讲到这个部分的重点了：<strong>怎么呈现是有效的？</strong></p><p>答案很简单：<strong>怎么引人注目，怎么呈现。</strong></p><p>比如，很多团队的做法是，用一个大屏幕将持续集成的结果展示出来，这样一来，持续集成的结果所有人都能看到，一旦出错了，即便你一时疏忽，也会有人来提醒你。</p><p>还有一些感官刺激的做法，比如，有人用上了红绿灯，测试失败则红灯闪烁；还有人甚至配上了语音，用喇叭高喊：“测试失败了，请赶紧修复。”我在一个视频里见过一个更夸张的做法：有人用玩具枪，出错了，就瞄准提交者开上一枪。</p><p>你是聪明的程序员，你应该能想到更多有趣的玩法。</p><p>为什么要这么做呢？这里的重点是，想做好持续集成，需要整个团队都关注持续集成。</p><p>这些引人注目的做法，就是要提高持续集成的关注度。否则，即便持续集成的技术环节做得再出色，人的注意力不在，持续集成也很难起到作用。</p><p>所以，你看到了，持续集成的反馈，尤其是出错之后的反馈方式，几乎是所有实践中最为高调的，它的目的就是要引人注目。</p><p>这里再插播一条持续集成的纪律：<strong>CI 服务器一旦检查出错，要立即修复。</strong>原因很简单，你不修，别人就不能提交，很多人的工作就会因此停顿下来，团队的工作流就会被打断，耽误的是整个团队的工作。</p><p>如果你一时半会修不好怎么办，撤销你的提交。更关键的原因是，团队对于持续集成的重视度，长时间不修复，持续集成就失去了意义，人们就会放弃它，持续集成在你的项目中，也就发挥不出任何作用了。</p><h2>总结时刻</h2><p>持续集成是软件开发中的重要实践，做好持续集成的关键在于，快速反馈。这里面有两个目标，怎样快速地得到反馈，以及什么样的反馈是有效的。</p><p>做好快速反馈，要把本地能做好的事情，在本地做好；也要通过小步提交的方式，加快代码开发的节奏。什么是有效的反馈？一是即时的反馈，二是引人注目的反馈。有很多种持续集成相关的工具可以帮助我们达成有效的反馈。</p><p>想要做好持续集成，还要有一些纪律要遵循：</p><ul>\n<li>只有 CI 服务器处于绿色的状态才能提交代码；</li>\n<li>CI 服务器一旦检查出错，要立即修复。</li>\n</ul><p>如果今天的内容你只能记住一件事，那请记住：<strong>做好持续集成的关键在于，快速反馈。</strong></p><p>最后，我想请你分享一下，你的团队做持续集成吗？遇到过哪些困难呢？欢迎留言与我们分享。</p><p>感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":161422,"user_name":"操盘手爱德华","can_delete":false,"product_type":"c1","uid":1366402,"ip_address":"","ucode":"CAAF3E6DC9D5FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIFicK7Bn88Lqte7rURlw3Lf53oAu1jhiciaVlKLib48dlIAOAF03L7tjQcx1ia5AJI26S7HIxwx780Qzw/132","comment_is_top":false,"comment_ctime":1576203485,"is_pvip":false,"replies":[{"id":"70221","content":"很好的关注点","user_name":"作者回复","comment_id":161422,"uid":"1258861","ip_address":"","utype":1,"ctime":1582462046,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"91770516701","product_id":100022301,"comment_content":"诸位看的时候别忘了，虽然老师说了别人修复之前不能提交。但是后面还有一句，如果一时半会儿修不好，应该撤掉提交","like_count":21,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477717,"discussion_content":"很好的关注点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582462046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70868,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1551198193,"is_pvip":true,"replies":[{"id":"25433","content":"能花钱解决的事都是小事，一个程序员比一台机器贵多了。","user_name":"作者回复","comment_id":70868,"uid":"1258861","ip_address":"","utype":1,"ctime":1551239922,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"35910936561","product_id":100022301,"comment_content":"有启发。常遇到的问题是，项目多了以后CI资源吃紧要排队。虽然可以自己用本地多做事，但这有点像“公地悲剧”，只是自己节约还不够，会被别人挤占资源，所以大家抢着上，结果大家都慢。如果有智能CI可以依据以往占用资源的多少来分配CI优先级，或许可以缓解。当然，不差钱的话，增加机器可能更简单","like_count":8,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440874,"discussion_content":"能花钱解决的事都是小事，一个程序员比一台机器贵多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551239922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71131,"user_name":"孤星可","can_delete":false,"product_type":"c1","uid":1057440,"ip_address":"","ucode":"1DE673A8E2253B","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/a0/0e8d56df.jpg","comment_is_top":false,"comment_ctime":1551270596,"is_pvip":false,"replies":[{"id":"25477","content":"如果你的本地检查可以在几分钟内完成，那就是可以在本地做的，因为你把它放到 CI 服务器上执行，效果只会更差，而且几分钟时间，稍作调整也并无不可。<br><br>如果时间很长，比如，超过十分钟，根据快速反馈的原则，就要考虑是不是考虑按照测试金字塔划分一下，在本地只跑单元测试。<br><br>但实际情况是，很多团队没有真正的单元测试，造成本地只能运行集成测试，甚至是验收测试，所以，会占据很长时间。","user_name":"作者回复","comment_id":71131,"uid":"1258861","ip_address":"","utype":1,"ctime":1551276662,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"31616041668","product_id":100022301,"comment_content":"快速反馈这个观点是很赞同的  本地验证这个个人不太看好  以普通 JAVA 项目为例  本地跑一次  耗时以分钟计  这个间隔有点长了 ","like_count":7,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441005,"discussion_content":"如果你的本地检查可以在几分钟内完成，那就是可以在本地做的，因为你把它放到 CI 服务器上执行，效果只会更差，而且几分钟时间，稍作调整也并无不可。\n\n如果时间很长，比如，超过十分钟，根据快速反馈的原则，就要考虑是不是考虑按照测试金字塔划分一下，在本地只跑单元测试。\n\n但实际情况是，很多团队没有真正的单元测试，造成本地只能运行集成测试，甚至是验收测试，所以，会占据很长时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551276662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298654,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1004462,"ip_address":"","ucode":"8F7DE6E7B3D74F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/ae/a08024b2.jpg","comment_is_top":false,"comment_ctime":1624251448,"is_pvip":false,"replies":[{"id":"110661","content":"很好的补充","user_name":"作者回复","comment_id":298654,"uid":"1258861","ip_address":"","utype":1,"ctime":1628173386,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"27394055224","product_id":100022301,"comment_content":"郑大文中提到工作中「心流」，在这里想要补充一下：Bob 大叔（Robot. C. Martin）认为「心流」仅适用于练习，而非正式的工作中的编码。「代码整洁之道—程序员的职业素养」中曾提到，开发人员在开发时应该避免进入这种状态，「心流」仅适用于练习，因为它会「将视野收拢到狭窄的状态」。<br><br>抄录原文如下：<br><br>一些曾经进入这种状态但最终又从中摆脱出来的人给出了一点儿忠告：避免进入流态区。这种意识状态并非真的极为高效，也绝非毫无错误。这其实只是一种「浅层冥想」状态，在这种状态下，为了追求所谓的速度，理性思考的能力会下降。... ... 如果你当时正在做 TDD，你会快速地重复「红&#47;绿&#47;重构」循环。你会收获一种愉悦感或征服感。问题在于，在流态区状态下，你其实放弃了顾及全局，因此，你很可能会做出一些后来不得不推倒重来的决策。在流态区写代码可能会快些，但是后面你将不得不更多地回头重新审视这些代码。","like_count":6,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522199,"discussion_content":"很好的补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628173386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70948,"user_name":"eyeandroid","can_delete":false,"product_type":"c1","uid":1136395,"ip_address":"","ucode":"F6BC4961628A87","user_header":"https://static001.geekbang.org/account/avatar/00/11/57/0b/8b2465d6.jpg","comment_is_top":false,"comment_ctime":1551231961,"is_pvip":false,"replies":[{"id":"25434","content":"谁破坏谁修复，CI 红的时候，除了修复的人，任何人不允许提交。这时如果有人已经完成代码准备提交，破坏 CI 的人就是阻塞了它人的工作，所以，要尽快修复。","user_name":"作者回复","comment_id":70948,"uid":"1258861","ip_address":"","utype":1,"ctime":1551240003,"user_name_real":"dreamhead"}],"discussion_count":2,"race_medal":0,"score":"14436133849","product_id":100022301,"comment_content":"老师，我的意思是其它人的提交被CI检查出错后只会影响他这笔提交，并不会block其它人的提交，所以并不会存在等待其它人修复这个说法，请教下我的理解对吗？因为我工作中遇到的情况是这样","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440913,"discussion_content":"谁破坏谁修复，CI 红的时候，除了修复的人，任何人不允许提交。这时如果有人已经完成代码准备提交，破坏 CI 的人就是阻塞了它人的工作，所以，要尽快修复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551240003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1126557,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/9d/1f3a9c7f.jpg","nickname":"扶摇羊角","note":"","ucode":"6D42D0751D3672","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54728,"discussion_content":"我在工作中的情况是首先在本地编译并验证通过，然后提交到gerrit上面，进而会触发各种规则的检测以及预编译，等待规则检测及预编译通过会有verify +1，然后自己review一遍进行+1，最终由+2的人入库。但整个过程中，比如预编译出错，也不会阻塞别人的工作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574311441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70934,"user_name":"eyeandroid","can_delete":false,"product_type":"c1","uid":1136395,"ip_address":"","ucode":"F6BC4961628A87","user_header":"https://static001.geekbang.org/account/avatar/00/11/57/0b/8b2465d6.jpg","comment_is_top":false,"comment_ctime":1551229753,"is_pvip":false,"replies":[{"id":"25390","content":"一次一个提交，出错了容易修复，等这次 CI 通过了，下个人再来提交。强调本地检查，就是说，CI 的运行不会影响你在本地工作。把事情做小，做简单，这是我们在任务分解模块的主要观点，前面学的原则，后面也要用啊！","user_name":"作者回复","comment_id":70934,"uid":"1258861","ip_address":"","utype":1,"ctime":1551231650,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"14436131641","product_id":100022301,"comment_content":"CI 服务器一旦检查出错，要立即修复。原因很简单，你不修，别人就不能提交，很多人的工作就会因此停顿下来，团队的工作流就会被打断，耽误的是整个团队的工作。<br><br>老师，请教下上面这句话我不太理解。我在工作中遇到的CI是针对某笔提交的，某笔提交被CI服务器检查出错只会影响他这笔的提交，其它人可以继续做检查提交。<br><br>","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440906,"discussion_content":"一次一个提交，出错了容易修复，等这次 CI 通过了，下个人再来提交。强调本地检查，就是说，CI 的运行不会影响你在本地工作。把事情做小，做简单，这是我们在任务分解模块的主要观点，前面学的原则，后面也要用啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551231650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71853,"user_name":"行与修","can_delete":false,"product_type":"c1","uid":1241842,"ip_address":"","ucode":"11F21B663EF6D3","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/f2/2a9a6e9a.jpg","comment_is_top":false,"comment_ctime":1551451288,"is_pvip":false,"replies":[{"id":"26047","content":"说得没错，测试是基础，自动化是基础，CI是一根主线，将诸多实践贯穿起来。<br><br>CI强调自动化，测试人员不需要参与到其中。但测试人员可以拿到生成物去测试，找到的问题以测试的形式补充进来。","user_name":"作者回复","comment_id":71853,"uid":"1258861","ip_address":"","utype":1,"ctime":1551489421,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"10141385880","product_id":100022301,"comment_content":"如果单元测试做的不到位，或者不满足A-TRIP，是不是执行CI的效果就会弱很多？<br>另外在持续集成的过程中，测试人员或者QA有可能参与其中吗？如果能参与的话，对他们的意义以及他们的贡献会是什么？","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441361,"discussion_content":"说得没错，测试是基础，自动化是基础，CI是一根主线，将诸多实践贯穿起来。\n\nCI强调自动化，测试人员不需要参与到其中。但测试人员可以拿到生成物去测试，找到的问题以测试的形式补充进来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551489421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342765,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1650451201,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"5945418497","product_id":100022301,"comment_content":"持续集成要快速有效反馈。本地检查后在提交ci服务器检查。ci服务器绿色时才可以提交，ci运行报错，必须尽快修复。报错可以高调明显，引起人们的注意。","like_count":1},{"had_liked":false,"id":224449,"user_name":"笨猪","can_delete":false,"product_type":"c1","uid":1006212,"ip_address":"","ucode":"25A18AC9AE7B38","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/I9hE8mC1d1s7WicOLbE00vH4FUzNjH764kJHEdQwPLmLyZyYeubQQdmlCwLRhpRd0eibicqnWH2YP2Cqb2vbfPubg/132","comment_is_top":false,"comment_ctime":1591404434,"is_pvip":false,"replies":[{"id":"82638","content":"本着“快速反馈”为原则，本地测试执行慢，我们就要分析执行慢的缘由是什么。<br><br>常见的问题有，集成测试太多，那就要增加单元测试的量，把集成测试的运行放在 CI 服务器上；“单元”测试不是单元测试，可以参考前面关于测试应该写成什么样；模块太大，里面包含了太多的内容，可以考虑做模块的拆分等等。<br><br>只有当你知道了问题是什么，才能有效地解决问题。","user_name":"作者回复","comment_id":224449,"uid":"1258861","ip_address":"","utype":1,"ctime":1591437008,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"5886371730","product_id":100022301,"comment_content":"本地执行所有测试有点慢怎么办？<br>郑老师好，您在文章中提到在本地执行CI服务器相同的动作，那么当执行所有的检查花费时间较久时（比如超过5分钟），那么是不是也是打断了心流呢？这种问题怎么破？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497479,"discussion_content":"本着“快速反馈”为原则，本地测试执行慢，我们就要分析执行慢的缘由是什么。\n\n常见的问题有，集成测试太多，那就要增加单元测试的量，把集成测试的运行放在 CI 服务器上；“单元”测试不是单元测试，可以参考前面关于测试应该写成什么样；模块太大，里面包含了太多的内容，可以考虑做模块的拆分等等。\n\n只有当你知道了问题是什么，才能有效地解决问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591437008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97123,"user_name":"butterfly","can_delete":false,"product_type":"c1","uid":1392924,"ip_address":"","ucode":"1B724973303FB0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rRCSdTPyqWcW6U8DO9xL55ictNPlbQ38VAcaBNgibqaAhcH7mn1W9ddxIJLlMiaA5sngBicMX02w2HP5pAWpBAJsag/132","comment_is_top":false,"comment_ctime":1558592122,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5853559418","product_id":100022301,"comment_content":"公司没有CI的，表示瑟瑟发抖","like_count":1,"discussions":[{"author":{"id":2071802,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/9c/fa/0b9d9832.jpg","nickname":"松鼠工作室","note":"","ucode":"1B3C858399FE53","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592163,"discussion_content":"表示我们公司也是没有，瑟瑟发抖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667182467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72415,"user_name":"Xunqf","can_delete":false,"product_type":"c1","uid":1003577,"ip_address":"","ucode":"8E629BB0B446B5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/39/371c9918.jpg","comment_is_top":false,"comment_ctime":1551618234,"is_pvip":false,"replies":[{"id":"26246","content":"其实，CI 不应该占用那么长时间，在构建脚本里写好打包过程，在 CI 服务器上调用一下就好了。至于 CI 监视器，网上有很多，找一个现成的拿来用就好了。","user_name":"作者回复","comment_id":72415,"uid":"1258861","ip_address":"","utype":1,"ctime":1551655335,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"5846585530","product_id":100022301,"comment_content":"我们团队比较小，开发流程比较野路子，都是刚毕业的大学生，没多少开发经验，我们目前的开发流程是: 代码用GitHub托管，然后我们也用到了Jenkins，但是作为一个移动开发来说，对Jenkins的了解还仅限于自动打包工具，由于一开始使用的是手动打包，每次打一个包都要费好长时间，后来了解到自动打包，就很公司申请了一台电脑，用Jenkins搭建了一个自动打包服务器，然后定时去GitHub拉取代码打包，打包成功后上传蒲公英，然后发邮件通知下载，还不存在老师说的出错了就影响其他人提交的问题，感觉我们的持续集成是在GitHub上，缺失了测试环节。听老师讲完感觉我们做的太简单了，但是老师说的这些服务公司根本就没有，现有的这么简单的东西还是我们自己抽时间搞的，但是我们的主要任务毕竟是开发公司的业务产品，而Jenkins持续集成服务也非我专长，不太可能花太多精力去做这个。这个时候我该怎么办？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441581,"discussion_content":"其实，CI 不应该占用那么长时间，在构建脚本里写好打包过程，在 CI 服务器上调用一下就好了。至于 CI 监视器，网上有很多，找一个现成的拿来用就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551655335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70923,"user_name":"清菊","can_delete":false,"product_type":"c1","uid":1169545,"ip_address":"","ucode":"DFF4782CAC8117","user_header":"https://static001.geekbang.org/account/avatar/00/11/d8/89/96375178.jpg","comment_is_top":false,"comment_ctime":1551228700,"is_pvip":false,"replies":[{"id":"25388","content":"难道不是把测试修好，让它稳定下来吗？关于测试应该是什么样，我们在前面讲过。","user_name":"作者回复","comment_id":70923,"uid":"1258861","ip_address":"","utype":1,"ctime":1551231147,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"5846195996","product_id":100022301,"comment_content":"我们遇到的问题是UI测试结果不稳定，这样的话是直接去掉这部分的测试吗？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440901,"discussion_content":"难道不是把测试修好，让它稳定下来吗？关于测试应该是什么样，我们在前面讲过。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551231147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361070,"user_name":"松鼠工作室","can_delete":false,"product_type":"c1","uid":2071802,"ip_address":"四川","ucode":"1B3C858399FE53","user_header":"https://static001.geekbang.org/account/avatar/00/1f/9c/fa/0b9d9832.jpg","comment_is_top":false,"comment_ctime":1667182332,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1667182332","product_id":100022301,"comment_content":"老师你好，我们团队做的项目很烂很一般，没有用到持续集成这个东西，那么持续集成对我们来说还有必要嘛？如果我想用这个东西来提高我自身的开发效率又应当如何做呢？","like_count":0},{"had_liked":false,"id":350444,"user_name":"蜘蛛别过来","can_delete":false,"product_type":"c1","uid":1979191,"ip_address":"","ucode":"D579C1F5AC8F09","user_header":"https://static001.geekbang.org/account/avatar/00/1e/33/37/6088a9a2.jpg","comment_is_top":false,"comment_ctime":1656917716,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656917716","product_id":100022301,"comment_content":"我是做游戏开发的，绿色状态才提交这个可太对了😂<br>配置表各传各的，红上加红，一卡就是一下午","like_count":0},{"had_liked":false,"id":322497,"user_name":"kougazhang","can_delete":false,"product_type":"c1","uid":1200650,"ip_address":"","ucode":"E9AD678FCEC75D","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/0a/65976e95.jpg","comment_is_top":false,"comment_ctime":1637421485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637421485","product_id":100022301,"comment_content":"最悲剧的是，CI 服务器配置还不行，经常莫名其妙地卡住。","like_count":0},{"had_liked":false,"id":277572,"user_name":"rocedu","can_delete":false,"product_type":"c1","uid":1013097,"ip_address":"","ucode":"E46E29CBBB94A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/69/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1612478548,"is_pvip":true,"replies":[{"id":"100752","content":"很好的补充","user_name":"作者回复","comment_id":277572,"uid":"1258861","ip_address":"","utype":1,"ctime":1612571810,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"1612478548","product_id":100022301,"comment_content":"https:&#47;&#47;weread.qq.com&#47;web&#47;reader&#47;65e328b05e10e265eb76e03  《心流》，微信读书可以免费阅读。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515099,"discussion_content":"很好的补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612571810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261714,"user_name":"灯火阑珊","can_delete":false,"product_type":"c1","uid":1289991,"ip_address":"","ucode":"D07A1D2101B9A9","user_header":"https://static001.geekbang.org/account/avatar/00/13/af/07/a32e3f4e.jpg","comment_is_top":false,"comment_ctime":1605502164,"is_pvip":false,"replies":[{"id":"95082","content":"恭喜你，中招了。","user_name":"作者回复","comment_id":261714,"uid":"1258861","ip_address":"","utype":1,"ctime":1605600188,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"1605502164","product_id":100022301,"comment_content":"我目前的公司就是用邮件反馈持续集成结果😅","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509578,"discussion_content":"恭喜你，中招了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605600188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241595,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1597366916,"is_pvip":false,"replies":[{"id":"89205","content":"本地和服务器都要做，本地保证快速，服务器保证必须做。","user_name":"作者回复","comment_id":241595,"uid":"1258861","ip_address":"","utype":1,"ctime":1597391648,"user_name_real":"郑晔"}],"discussion_count":2,"race_medal":0,"score":"1597366916","product_id":100022301,"comment_content":"本地验证最大的问题，在于不是每个人都能自觉执行，放在ci上可以流程上确保检查执行。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503783,"discussion_content":"本地和服务器都要做，本地保证快速，服务器保证必须做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597391648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571165,"discussion_content":"本地确保快速反馈、快速修复，服务器保证提交的代码能通过构建脚本的检查。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652095233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195499,"user_name":"时代先锋","can_delete":false,"product_type":"c1","uid":1856411,"ip_address":"","ucode":"956E3E6A6A4F30","user_header":"https://static001.geekbang.org/account/avatar/00/1c/53/9b/d0a21378.jpg","comment_is_top":false,"comment_ctime":1585191556,"is_pvip":false,"replies":[{"id":"74383","content":"公司越小，越要防坑。","user_name":"作者回复","comment_id":195499,"uid":"1258861","ip_address":"","utype":1,"ctime":1585264426,"user_name_real":"dreamhead"}],"discussion_count":1,"race_medal":0,"score":"1585191556","product_id":100022301,"comment_content":"项目小，开发项目流程不规范","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489090,"discussion_content":"公司越小，越要防坑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585264426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195498,"user_name":"时代先锋","can_delete":false,"product_type":"c1","uid":1856411,"ip_address":"","ucode":"956E3E6A6A4F30","user_header":"https://static001.geekbang.org/account/avatar/00/1c/53/9b/d0a21378.jpg","comment_is_top":false,"comment_ctime":1585191523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585191523","product_id":100022301,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":160018,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1575858049,"is_pvip":false,"replies":[{"id":"71398","content":"后面还讲了持续交付和验收测试，结合在一起看，就是一个完整的过程要包含部署。<br><br>如果资源够，就都监控。","user_name":"作者回复","user_name_real":"dreamhead","uid":"1258861","ctime":1583379477,"ip_address":"","comment_id":160018,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575858049","product_id":100022301,"comment_content":"我一直有一个疑问！很多专栏都提到了持续集成，都表达了持续集成中包含自动化测试，我很想知道如果包含了接口和ui的测试，那么持续集成其实也是包括部署环节的。再就是持续集成服务器是监控主干还是分支和主干同时监控？","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477235,"discussion_content":"后面还讲了持续交付和验收测试，结合在一起看，就是一个完整的过程要包含部署。\n\n如果资源够，就都监控。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583379477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151183,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1573661821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573661821","product_id":100022301,"comment_content":"我每天在公司强调的，热手性","like_count":0},{"had_liked":false,"id":151181,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1573661709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573661709","product_id":100022301,"comment_content":"本质是尽早得到反馈，早发现问题。","like_count":0},{"had_liked":false,"id":99154,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1559172471,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559172471","product_id":100022301,"comment_content":"今天这节课老师真的是解决了我一个在工作上一直在思考的大问题，就是之前一直有个执念，想推程序员使用CI服务器来进行构建，但是发现很吃力，现在才知道，其实更好的方法是让他们先在本地进行构建，等代码检查无误再推到ci服务器上，这样子更加科学。","like_count":0},{"had_liked":false,"id":89287,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1556149694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556149694","product_id":100022301,"comment_content":"可视化CI监视器可以了解下","like_count":0},{"had_liked":false,"id":83310,"user_name":"虢國技醬","can_delete":false,"product_type":"c1","uid":1056807,"ip_address":"","ucode":"5A192262AA037E","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/27/a6932fbe.jpg","comment_is_top":false,"comment_ctime":1554527991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554527991","product_id":100022301,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":82588,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1554254988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554254988","product_id":100022301,"comment_content":"持续集成和持续发布是绑定的，这样只要你发布就必须解决集成问题。<br>持续集成之前的代码合并倒是需要更多的约定和规范，好多时候有人强制提交。<br><br>是git分支策略选择，以及代码合并方法也对持续集成有重大影响","like_count":0},{"had_liked":false,"id":74594,"user_name":"like_jun","can_delete":false,"product_type":"c1","uid":1195771,"ip_address":"","ucode":"3D72B215774E1B","user_header":"https://static001.geekbang.org/account/avatar/00/12/3e/fb/51f8dfe7.jpg","comment_is_top":false,"comment_ctime":1552264306,"is_pvip":false,"replies":[{"id":"27229","content":"可执行的方案是定期回顾，做多了就懂了。","user_name":"作者回复","user_name_real":"dreamhead","uid":"1258861","ctime":1552272274,"ip_address":"","comment_id":74594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552264306","product_id":100022301,"comment_content":"要让团队认识到复盘的重要性。<br>让每个人都深入思考项目运作过程中遇到了哪些问题。才能做好复盘。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442608,"discussion_content":"可执行的方案是定期回顾，做多了就懂了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552272274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}