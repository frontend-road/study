{"id":335204,"title":"01 | etcd的前世今生：为什么Kubernetes使用etcd？","content":"<p>你好，我是唐聪。</p><p>今天是专栏课程的第一讲，我们就从etcd的前世今生讲起。让我们一起穿越回2013年，看看etcd最初是在什么业务场景下被设计出来的？</p><p>2013年，有一个叫CoreOS的创业团队，他们构建了一个产品，Container Linux，它是一个开源、轻量级的操作系统，侧重自动化、快速部署应用服务，并要求应用程序都在容器中运行，同时提供集群化的管理方案，用户管理服务就像单机一样方便。</p><p>他们希望在重启任意一节点的时候，用户的服务不会因此而宕机，导致无法提供服务，因此需要运行多个副本。但是多个副本之间如何协调，如何避免变更的时候所有副本不可用呢？</p><p>为了解决这个问题，CoreOS团队需要一个协调服务来存储服务配置信息、提供分布式锁等能力。怎么办呢？当然是分析业务场景、痛点、核心目标，然后是基于目标进行方案选型，评估是选择社区开源方案还是自己造轮子。这其实就是我们遇到棘手问题时的通用解决思路，CoreOS团队同样如此。</p><p>假设你是CoreOS团队成员，你认为在这样的业务场景下，理想中的解决方案应满足哪些目标呢？</p><p>如果你有过一些开发经验，应该能想到一些关键点了，我根据自己的经验来总结一下，一个协调服务，理想状态下大概需要满足以下五个目标：</p><!-- [[[read_end]]] --><ol>\n<li><strong>可用性角度：高可用</strong>。协调服务作为集群的控制面存储，它保存了各个服务的部署、运行信息。若它故障，可能会导致集群无法变更、服务副本数无法协调。业务服务若此时出现故障，无法创建新的副本，可能会影响用户数据面。</li>\n<li><strong>数据一致性角度：提供读取“最新”数据的机制</strong>。既然协调服务必须具备高可用的目标，就必然不能存在单点故障（single point of failure），而多节点又引入了新的问题，即多个节点之间的数据一致性如何保障？比如一个集群3个节点A、B、C，从节点A、B获取服务镜像版本是新的，但节点C因为磁盘 I/O异常导致数据更新缓慢，若控制端通过C节点获取数据，那么可能会导致读取到过期数据，服务镜像无法及时更新。</li>\n<li><strong>容量角度：低容量、仅存储关键元数据配置。</strong>协调服务保存的仅仅是服务、节点的配置信息（属于控制面配置），而不是与用户相关的数据。所以存储上不需要考虑数据分片，无需过度设计。</li>\n<li><strong>功能：增删改查，监听数据变化的机制</strong>。协调服务保存了服务的状态信息，若服务有变更或异常，相比控制端定时去轮询检查一个个服务状态，若能快速推送变更事件给控制端，则可提升服务可用性、减少协调服务不必要的性能开销。</li>\n<li><strong>运维复杂度：可维护性。</strong>在分布式系统中往往会遇到硬件Bug、软件Bug、人为操作错误导致节点宕机，以及新增、替换节点等运维场景，都需要对协调服务成员进行变更。若能提供API实现平滑地变更成员节点信息，就可以大大降低运维复杂度，减少运维成本，同时可避免因人工变更不规范可能导致的服务异常。</li>\n</ol><p>了解完理想中的解决方案目标，我们再来看CoreOS团队当时为什么选择了从0到1开发一个新的协调服务呢？</p><p>如果使用开源软件，当时其实是有ZooKeeper的，但是他们为什么不用ZooKeeper呢？我们来分析一下。</p><p>从高可用性、数据一致性、功能这三个角度来说，ZooKeeper是满足CoreOS诉求的。然而当时的ZooKeeper不支持通过API安全地变更成员，需要人工修改一个个节点的配置，并重启进程。</p><p>若变更姿势不正确，则有可能出现脑裂等严重故障。适配云环境、可平滑调整集群规模、在线变更运行时配置是CoreOS的期望目标，而ZooKeeper在这块的可维护成本相对较高。</p><p>其次ZooKeeper是用 Java 编写的，部署较繁琐，占用较多的内存资源，同时ZooKeeper RPC的序列化机制用的是Jute，自己实现的RPC API。无法使用curl之类的常用工具与之互动，CoreOS期望使用比较简单的HTTP + JSON。</p><p>因此，CoreOS决定自己造轮子，那CoreOS团队是如何根据系统目标进行技术方案选型的呢？</p><h2>etcd v1和v2诞生</h2><p>首先我们来看服务高可用及数据一致性。前面我们提到单副本存在单点故障，而多副本又引入数据一致性问题。</p><p>因此为了解决数据一致性问题，需要引入一个共识算法，确保各节点数据一致性，并可容忍一定节点故障。常见的共识算法有Paxos、ZAB、Raft等。CoreOS团队选择了易理解实现的Raft算法，它将复杂的一致性问题分解成Leader选举、日志同步、安全性三个相对独立的子问题，只要集群一半以上节点存活就可提供服务，具备良好的可用性。</p><p>其次我们再来看数据模型（Data Model）和API。数据模型参考了ZooKeeper，使用的是基于目录的层次模式。API相比ZooKeeper来说，使用了简单、易用的REST API，提供了常用的Get/Set/Delete/Watch等API，实现对key-value数据的查询、更新、删除、监听等操作。</p><p>key-value存储引擎上，ZooKeeper使用的是Concurrent HashMap，而etcd使用的是则是简单内存树，它的节点数据结构精简后如下，含节点路径、值、孩子节点信息。这是一个典型的低容量设计，数据全放在内存，无需考虑数据分片，只能保存key的最新版本，简单易实现。</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/41/ff4ee032739b9b170af1b2e2ba530e41.png?wh=1024*904\" alt=\"\"></p><pre><code>type node struct {\n   Path string  //节点路径\n   Parent *node //关联父亲节点\n   Value      string     //key的value值\n   ExpireTime time.Time //过期时间\n   Children   map[string]*node //此节点的孩子节点\n}\n</code></pre><p>最后我们再来看可维护性。Raft算法提供了成员变更算法，可基于此实现成员在线、安全变更，同时此协调服务使用Go语言编写，无依赖，部署简单。</p><p><img src=\"https://static001.geekbang.org/resource/image/dd/70/dd253e4fc19885fa6f00c278762ba270.png?wh=1920*1402\" alt=\"\"></p><p>基于以上技术方案和架构图，CoreOS团队在2013年8月对外发布了第一个测试版本v0.1，API v1版本，命名为etcd。</p><p>那么etcd这个名字是怎么来的呢？其实它源于两个方面，unix的“/etc”文件夹和分布式系统(“D”istribute system)的D，组合在一起表示etcd是用于存储分布式配置的信息存储服务。</p><p>v0.1版本实现了简单的HTTP Get/Set/Delete/Watch API，但读数据一致性无法保证。v0.2版本，支持通过指定consistent模式，从Leader读取数据，并将Test And Set机制修正为CAS(Compare And Swap)，解决原子更新的问题，同时发布了新的API版本v2，这就是大家熟悉的etcd v2版本，第一个非stable版本。</p><p>下面，我用一幅时间轴图，给你总结一下etcd v1/v2关键特性。</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/0e/d0af3537c0eef89b499a82693da23f0e.png?wh=1920*727\" alt=\"\"></p><h2>为什么Kubernetes使用etcd?</h2><p>这张图里，我特别标注出了Kubernetes的发布时间点，这个非常关键。我们必须先来说说这个事儿，也就是Kubernetes和etcd的故事。</p><p>2014年6月，Google的Kubernetes项目诞生了，我们前面所讨论到Go语言编写、etcd高可用、Watch机制、CAS、TTL等特性正是Kubernetes所需要的，它早期的0.4版本，使用的正是etcd v0.2版本。</p><p>Kubernetes是如何使用etcd v2这些特性的呢？举几个简单小例子。</p><p>当你使用Kubernetes声明式API部署服务的时候，Kubernetes的控制器通过etcd Watch机制，会实时监听资源变化事件，对比实际状态与期望状态是否一致，并采取协调动作使其一致。Kubernetes更新数据的时候，通过CAS机制保证并发场景下的原子更新，并通过对key设置TTL来存储Event事件，提升Kubernetes集群的可观测性，基于TTL特性，Event事件key到期后可自动删除。</p><p>Kubernetes项目使用etcd，除了技术因素也与当时的商业竞争有关。CoreOS是Kubernetes容器生态圈的核心成员之一。</p><p>当时Docker容器浪潮正席卷整个开源技术社区，CoreOS也将容器集成到自家产品中。一开始与Docker公司还是合作伙伴，然而Docker公司不断强化Docker的PaaS平台能力，强势控制Docker社区，这与CoreOS核心商业战略出现了冲突，也损害了Google、RedHat等厂商的利益。</p><p>最终CoreOS与Docker分道扬镳，并推出了rkt项目来对抗Docker，然而此时Docker已深入人心，CoreOS被Docker全面压制。</p><p>以Google、RedHat为首的阵营，基于Google多年的大规模容器管理系统Borg经验，结合社区的建议和实践，构建以Kubernetes为核心的容器生态圈。相比Docker的垄断、独裁，Kubernetes社区推行的是民主、开放原则，Kubernetes每一层都可以通过插件化扩展，在Google、RedHat的带领下不断发展壮大，etcd也进入了快速发展期。</p><p>在2015年1月，CoreOS发布了etcd第一个稳定版本2.0，支持了quorum read，提供了严格的线性一致性读能力。7月，基于etcd 2.0的Kubernetes第一个生产环境可用版本v1.0.1发布了，Kubernetes开始了新的里程碑的发展。</p><p>etcd v2在社区获得了广泛关注，GitHub star数在2015年6月就高达6000+，超过500个项目使用，被广泛应用于配置存储、服务发现、主备选举等场景。</p><p>下图我从构建分布式系统的核心要素角度，给你总结了etcd v2核心技术点。无论是NoSQL存储还是SQL存储、文档存储，其实大家要解决的问题都是类似的，基本就是图中总结的数据模型、复制、共识算法、API、事务、一致性、成员故障检测等方面。</p><p>希望通过此图帮助你了解从0到1如何构建、学习一个分布式系统，要解决哪些技术点，在心中有个初步认识，后面的课程中我会再深入介绍。</p><p><img src=\"https://static001.geekbang.org/resource/image/cd/f0/cde3f155f51bfd3d7fd78fe8e7ac9bf0.png?wh=1920*943\" alt=\"\"></p><h2>etcd v3诞生</h2><p>然而随着Kubernetes项目不断发展，v2版本的瓶颈和缺陷逐渐暴露，遇到了若干性能和稳定性问题，Kubernetes社区呼吁支持新的存储、批评etcd不可靠的声音开始不断出现。</p><p>具体有哪些问题呢？我给你总结了如下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/88/d1/881db1b7d05dc40771e9737f3117f5d1.png?wh=1920*577\" alt=\"\"></p><p>下面我分别从功能局限性、Watch事件的可靠性、性能、内存开销来分别给你剖析etcd v2的问题。</p><p>首先是<strong>功能局限性问题。</strong>它主要是指etcd v2不支持范围和分页查询、不支持多key事务。</p><p>第一，etcd v2不支持范围查询和分页。分页对于数据较多的场景是必不可少的。在Kubernetes中，在集群规模增大后，Pod、Event等资源可能会出现数千个以上，但是etcd v2不支持分页，不支持范围查询，大包等expensive request会导致严重的性能乃至雪崩问题。</p><p>第二，etcd v2不支持多key事务。在实际转账等业务场景中，往往我们需要在一个事务中同时更新多个key。</p><p>然后是<strong>Watch机制可靠性问题</strong>。Kubernetes项目严重依赖etcd Watch机制，然而etcd v2是内存型、不支持保存key历史版本的数据库，只在内存中使用滑动窗口保存了最近的1000条变更事件，当etcd server写请求较多、网络波动时等场景，很容易出现事件丢失问题，进而又触发client数据全量拉取，产生大量expensive request，甚至导致etcd雪崩。</p><p>其次是<strong>性能瓶颈问题</strong>。etcd v2早期使用了简单、易调试的HTTP/1.x API，但是随着Kubernetes支撑的集群规模越来越大，HTTP/1.x协议的瓶颈逐渐暴露出来。比如集群规模大时，由于HTTP/1.x协议没有压缩机制，批量拉取较多Pod时容易导致APIServer和etcd出现CPU高负载、OOM、丢包等问题。</p><p>另一方面，etcd v2 client会通过HTTP长连接轮询Watch事件，当watcher较多的时候，因HTTP/1.x不支持多路复用，会创建大量的连接，消耗server端过多的socket和内存资源。</p><p>同时etcd v2支持为每个key设置TTL过期时间，client为了防止key的TTL过期后被删除，需要周期性刷新key的TTL。</p><p>实际业务中很有可能若干key拥有相同的TTL，可是在etcd v2中，即使大量key TTL一样，你也需要分别为每个key发起续期操作，当key较多的时候，这会显著增加集群负载、导致集群性能显著下降。</p><p>最后是<strong>内存开销问题。</strong>etcd v2在内存维护了一颗树来保存所有节点key及value。在数据量场景略大的场景，如配置项较多、存储了大量Kubernetes Events， 它会导致较大的内存开销，同时etcd需要定时把全量内存树持久化到磁盘。这会消耗大量的CPU和磁盘 I/O资源，对系统的稳定性造成一定影响。</p><p>为什么etcd v2有以上若干问题，Consul等其他竞品依然没有被Kubernetes支持呢？</p><p>一方面当时包括Consul在内，没有一个开源项目是十全十美完全满足Kubernetes需求。而CoreOS团队一直在聆听社区的声音并积极改进，解决社区的痛点。用户吐槽etcd不稳定，他们就设计实现自动化的测试方案，模拟、注入各类故障场景，及时发现修复Bug，以提升etcd稳定性。</p><p>另一方面，用户吐槽性能问题，针对etcd v2各种先天性缺陷问题，他们从2015年就开始设计、实现新一代etcd v3方案去解决以上痛点，并积极参与Kubernetes项目，负责etcd v2到v3的存储引擎切换，推动Kubernetes项目的前进。同时，设计开发通用压测工具、输出Consul、ZooKeeper、etcd性能测试报告，证明etcd的优越性。</p><p>etcd v3就是为了解决以上稳定性、扩展性、性能问题而诞生的。</p><p>在内存开销、Watch事件可靠性、功能局限上，它通过引入B-tree、boltdb实现一个MVCC数据库，数据模型从层次型目录结构改成扁平的key-value，提供稳定可靠的事件通知，实现了事务，支持多key原子更新，同时基于boltdb的持久化存储，显著降低了etcd的内存占用、避免了etcd v2定期生成快照时的昂贵的资源开销。</p><p>性能上，首先etcd v3使用了gRPC API，使用protobuf定义消息，消息编解码性能相比JSON超过2倍以上，并通过HTTP/2.0多路复用机制，减少了大量watcher等场景下的连接数。</p><p>其次使用Lease优化TTL机制，每个Lease具有一个TTL，相同的TTL的key关联一个Lease，Lease过期的时候自动删除相关联的所有key，不再需要为每个key单独续期。</p><p>最后是etcd v3支持范围、分页查询，可避免大包等expensive request。</p><p>2016年6月，etcd 3.0诞生，随后Kubernetes 1.6发布，默认启用etcd v3，助力Kubernetes支撑5000节点集群规模。</p><p>下面的时间轴图，我给你总结了etcd3重要特性及版本发布时间。从图中你可以看出，从3.0到未来的3.5，更稳、更快是etcd的追求目标。</p><p><img src=\"https://static001.geekbang.org/resource/image/5f/6d/5f1bf807db06233ed51d142917798b6d.png?wh=1920*826\" alt=\"\"></p><p>从2013年发布第一个版本v0.1到今天的3.5.0-pre，从v2到v3，etcd走过了7年的历程，etcd的稳定性、扩展性、性能不断提升。</p><p>发展到今天，在GitHub上star数超过34K。在Kubernetes的业务场景磨炼下它不断成长，走向稳定和成熟，成为技术圈众所周知的开源产品，而<strong>v3方案的发布，也标志着etcd进入了技术成熟期，成为云原生时代的首选元数据存储产品。</strong></p><h2>小结</h2><p>最后我们来小结下今天的内容，我们从如下几个方面介绍了etcd的前世今生，并在过程中详细解读了为什么Kubernetes使用etcd：</p><ul>\n<li>etcd诞生背景， etcd v2源自CoreOS团队遇到的服务协调问题。</li>\n<li>etcd目标，我们通过实际业务场景分析，得到理想中的协调服务核心目标：高可用、数据一致性、Watch、良好的可维护性等。而在CoreOS团队看来，高可用、可维护性、适配云、简单的API、良好的性能对他们而言是非常重要的，ZooKeeper无法满足所有诉求，因此决定自己构建一个分布式存储服务。</li>\n<li>介绍了v2基于目录的层级数据模型和API，并从分布式系统的角度给你详细总结了etcd v2技术点。etcd的高可用、Watch机制与Kubernetes期望中的元数据存储是匹配的。etcd v2在Kubernetes的带动下，获得了广泛的应用，但也出现若干性能和稳定性、功能不足问题，无法满足Kubernetes项目发展的需求。</li>\n<li>CoreOS团队未雨绸缪，从问题萌芽时期就开始构建下一代etcd v3存储模型，分别从性能、稳定性、功能上等成功解决了Kubernetes发展过程中遇到的瓶颈，也捍卫住了作为Kubernetes存储组件的地位。</li>\n</ul><p>希望通过今天的介绍， 让你对etcd为什么有v2和v3两个大版本，etcd如何从HTTP/1.x API到gRPC API、单版本数据库到多版本数据库、内存树到boltdb、TTL到Lease、单key原子更新到支持多key事务的演进过程有个清晰了解。希望你能有所收获，在后续的课程中我会和你深入讨论各个模块的细节。</p><h2>思考题</h2><p>最后，我给你留了一个思考题。分享一下在你的项目中，你主要使用的是哪个etcd版本来解决什么问题呢？使用的etcd v2 API还是v3 API呢？在这过程中是否遇到过什么问题？</p><p>感谢你的阅读，欢迎你把思考和观点写在留言区，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p>","comments":[{"had_liked":false,"id":274783,"user_name":"jeffery","can_delete":false,"product_type":"c1","uid":1219972,"ip_address":"","ucode":"35E2DAA386FB86","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/84/171b2221.jpg","comment_is_top":false,"comment_ctime":1611155367,"is_pvip":false,"replies":[{"id":"99725","content":"Redis是吧，区别挺大的，文章中我用了一副思维导图从数据复制、数据分片、存储引擎、API等方面总结etcd v2技术点，我简单从这些方面给你对比一下，数据复制上Redis是主备异步复制、etcd使用的是Raft，前者可能会丢数据，为了保证读写一致性，etcd读写性能相比Redis差距比较大。数据分片上Redis有各种集群版解决方案，可以承载上T数据，存储的一般是用户数据，而etcd定位是个低容量的关键元数据存储，db大小一般不超过8g。存储引擎和API上Redis内存实现了各种丰富数据结构，而etcd仅是kv API, 使用的是持久化存储boltdb。","user_name":"作者回复","comment_id":274783,"uid":"1009582","ip_address":"","utype":1,"ctime":1611199203,"user_name_real":"唐聪"}],"discussion_count":4,"race_medal":0,"score":"207769585575","product_id":100069901,"comment_content":"1.6版本默认自带v3版本，etcd 云原生的数据首选存储产品，老师能说下etcd 和reids 的区别吗？谢谢","like_count":48,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514124,"discussion_content":"Redis是吧，区别挺大的，文章中我用了一副思维导图从数据复制、数据分片、存储引擎、API等方面总结etcd v2技术点，我简单从这些方面给你对比一下，数据复制上Redis是主备异步复制、etcd使用的是Raft，前者可能会丢数据，为了保证读写一致性，etcd读写性能相比Redis差距比较大。数据分片上Redis有各种集群版解决方案，可以承载上T数据，存储的一般是用户数据，而etcd定位是个低容量的关键元数据存储，db大小一般不超过8g。存储引擎和API上Redis内存实现了各种丰富数据结构，而etcd仅是kv API, 使用的是持久化存储boltdb。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1611199203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350159,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","nickname":"芒果少侠","note":"","ucode":"98D0BBB52BB80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352229,"discussion_content":"数据复制上Redis是主备异步复制、etcd使用的是Raft，前者可能会丢数据，为了保证读写一致性，etcd读写性能相比Redis差距比较大。数据分片上Redis有各种集群版解决方案，可以承载上T数据，存储的一般是用户数据，而etcd定位是个低容量的关键元数据存储，db大小一般不超过8g\n\n-- 这段话，获益匪浅","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1614657677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1350159,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","nickname":"芒果少侠","note":"","ucode":"98D0BBB52BB80F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":352981,"discussion_content":"任何分布式系统之间比较、选型，我们都可以从分布式系统的核心要素，API、数据复制及共识算法、数据分片算法、数据模型及存储引擎、事务实现、CAP等维度来进行比较。这是个通用的方法论，希望以后能帮助你解决更多问题。\n","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1614935478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":352229,"ip_address":""},"score":352981,"extra":""}]},{"author":{"id":1879262,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/ac/de/68f35320.jpg","nickname":"小来子","note":"","ucode":"4EDAF31E43B211","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350506,"discussion_content":"期待老师的 etcd/redis 做分布式锁的文章~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613897486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277366,"user_name":"[小狗]","can_delete":false,"product_type":"c1","uid":1237070,"ip_address":"","ucode":"090AEAC8A86134","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/4e/c266bdb4.jpg","comment_is_top":false,"comment_ctime":1612376284,"is_pvip":false,"replies":[{"id":"101008","content":"感谢对专栏的支持，正如你所看到的，专栏27讲，每讲内容特别丰富，大部分5000到6000字，整个专栏至少15万字，写作不易，我也是在工作日的凌晨、周末业余时间为大家呈现一个etcd全方位特性解读，更新是固定的1周3篇，春节都在加班加点创作了，麻烦稍等哈，基础篇春节期间会更新完毕，你把基础篇的内容踏踏实实学完，动手做几个小实验，我相信面试哪个大厂，都无压力了哈。","user_name":"作者回复","comment_id":277366,"uid":"1009582","ip_address":"","utype":1,"ctime":1612827792,"user_name_real":"唐聪"}],"discussion_count":3,"race_medal":0,"score":"91806689500","product_id":100069901,"comment_content":"大佬，可以1周4期吗？ 等着面试用呢","like_count":22,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515023,"discussion_content":"感谢对专栏的支持，正如你所看到的，专栏27讲，每讲内容特别丰富，大部分5000到6000字，整个专栏至少15万字，写作不易，我也是在工作日的凌晨、周末业余时间为大家呈现一个etcd全方位特性解读，更新是固定的1周3篇，春节都在加班加点创作了，麻烦稍等哈，基础篇春节期间会更新完毕，你把基础篇的内容踏踏实实学完，动手做几个小实验，我相信面试哪个大厂，都无压力了哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612827792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057843,"avatar":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","nickname":"阿甘","note":"","ucode":"BC93175B70E05D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378122,"discussion_content":"哈哈哈，笑死~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623060097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237070,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/4e/c266bdb4.jpg","nickname":"[小狗]","note":"","ucode":"090AEAC8A86134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348975,"discussion_content":"辛苦，辛苦。 祝您新年快乐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612832493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275164,"user_name":"hxy","can_delete":false,"product_type":"c1","uid":1248553,"ip_address":"","ucode":"431327E8CA4364","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/29/18272af9.jpg","comment_is_top":false,"comment_ctime":1611367881,"is_pvip":true,"replies":[{"id":"99876","content":"感谢你的细心和反馈，我查阅etcd官方资料写得也是的确有误，之前以为是很久之前zk使用的rpc api，看了下commit记录貌似一直都是juite，后面我们修正下，谢谢","user_name":"作者回复","comment_id":275164,"uid":"1009582","ip_address":"","utype":1,"ctime":1611403580,"user_name_real":"唐聪"}],"discussion_count":1,"race_medal":0,"score":"78920779209","product_id":100069901,"comment_content":"zookeeper的rpc api是thrift，这个感觉说错了吧，zk用的应该是jute","like_count":18,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514237,"discussion_content":"感谢你的细心和反馈，我查阅etcd官方资料写得也是的确有误，之前以为是很久之前zk使用的rpc api，看了下commit记录貌似一直都是juite，后面我们修正下，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611403580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274829,"user_name":"Young","can_delete":false,"product_type":"c1","uid":1130374,"ip_address":"","ucode":"D38F17998E2D3C","user_header":"https://static001.geekbang.org/account/avatar/00/11/3f/86/1b02c298.jpg","comment_is_top":false,"comment_ctime":1611192292,"is_pvip":false,"replies":[{"id":"99726","content":"也有可能在部分场景出现不一致哈，后面实践篇会和大家分析。异地容灾建议使用raft learner特性，添加learner节点，make mirror是基于watch机制的，稳定性、可靠性等相比learner要差点，但是目前社区对learner限制太多，不支持快照等，我们自己做了定制化，大家使用上要等等，估计3.5版本才比较好用","user_name":"作者回复","comment_id":274829,"uid":"1009582","ip_address":"","utype":1,"ctime":1611206679,"user_name_real":"唐聪"}],"discussion_count":3,"race_medal":0,"score":"40265897956","product_id":100069901,"comment_content":"目前在使用etcd v3, 高可用，强一致性键值存储。关于etcd集群异地容灾同步目前用的make mirror，有更好的方案吗？ 哈哈😃","like_count":9,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514137,"discussion_content":"也有可能在部分场景出现不一致哈，后面实践篇会和大家分析。异地容灾建议使用raft learner特性，添加learner节点，make mirror是基于watch机制的，稳定性、可靠性等相比learner要差点，但是目前社区对learner限制太多，不支持快照等，我们自己做了定制化，大家使用上要等等，估计3.5版本才比较好用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611206679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108924,"avatar":"https://static001.geekbang.org/account/avatar/00/10/eb/bc/6ccac4bb.jpg","nickname":"武文文武","note":"","ucode":"5288366646A15B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393423,"discussion_content":"老师您好，learner的功能目前来看只能作为数据同步节点，对外提供读服务，无法对集群的可用性起到明显作用，比如:  上海和北京两地，希望当多数派的上海整体不可用了，北京能通过learner自动晋升为follower，从而达到异地多活的效果，如何能实现此效果呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631426176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130374,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3f/86/1b02c298.jpg","nickname":"Young","note":"","ucode":"D38F17998E2D3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343890,"discussion_content":"好嘞，期待后面精彩内容。嘿嘿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611207795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275773,"user_name":"mckee","can_delete":false,"product_type":"c1","uid":1066511,"ip_address":"","ucode":"E4DEBB462B93A1","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/0f/f6cfc659.jpg","comment_is_top":false,"comment_ctime":1611664099,"is_pvip":false,"replies":[{"id":"100190","content":"嗯，list pod太恐怖了，哈哈，线上大部分异常一般都是list pod，configmap，crd","user_name":"作者回复","comment_id":275773,"uid":"1009582","ip_address":"","utype":1,"ctime":1611736876,"user_name_real":"唐聪"}],"discussion_count":2,"race_medal":0,"score":"27381467875","product_id":100069901,"comment_content":"k8s list pod不带rev情况下，etcdserver key range会造成cpu和mem瞬间飙高，需要读取所有kv并排序","like_count":6,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514470,"discussion_content":"嗯，list pod太恐怖了，哈哈，线上大部分异常一般都是list pod，configmap，crd","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611736876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1167430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d0/46/7f9af8de.jpg","nickname":"寻","note":"","ucode":"473B2CC14158A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414968,"discussion_content":"kubectl get pod 就是list pod吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636948250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274876,"user_name":"Coder","can_delete":false,"product_type":"c1","uid":2243398,"ip_address":"","ucode":"170190542A5A9C","user_header":"https://static001.geekbang.org/account/avatar/00/22/3b/46/3701e908.jpg","comment_is_top":false,"comment_ctime":1611201945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27381005721","product_id":100069901,"comment_content":"精彩，读起来生动有趣，一文就让我了解了etcd的发展历史与k8s关系，为老师打call！","like_count":6},{"had_liked":false,"id":274765,"user_name":"SecKiki","can_delete":false,"product_type":"c1","uid":1146647,"ip_address":"","ucode":"21FE9CF4819BD4","user_header":"https://static001.geekbang.org/account/avatar/00/11/7f/17/6da0b387.jpg","comment_is_top":false,"comment_ctime":1611151304,"is_pvip":false,"replies":[{"id":"99695","content":"嗯，etcd与k8s相互影响、促进，etcd社区任何核心特性首先也是考虑是否有益于k8s场景等，新版本发布，也是拿k8s做性能稳定性测试","user_name":"作者回复","comment_id":274765,"uid":"1009582","ip_address":"","utype":1,"ctime":1611156480,"user_name_real":"tangcong"}],"discussion_count":1,"race_medal":0,"score":"18791020488","product_id":100069901,"comment_content":"学习了，etcd与k8s 绝配","like_count":4,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514118,"discussion_content":"嗯，etcd与k8s相互影响、促进，etcd社区任何核心特性首先也是考虑是否有益于k8s场景等，新版本发布，也是拿k8s做性能稳定性测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611156480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274832,"user_name":"chapin","can_delete":false,"product_type":"c1","uid":1070020,"ip_address":"","ucode":"BB1800A771A8E9","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/c4/dea5d7f3.jpg","comment_is_top":false,"comment_ctime":1611193328,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10201127920","product_id":100069901,"comment_content":"头排看戏。","like_count":2},{"had_liked":false,"id":274723,"user_name":"爪哇夜未眠","can_delete":false,"product_type":"c1","uid":1006025,"ip_address":"","ucode":"BBEB80EB670770","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/c9/f44cb7f3.jpg","comment_is_top":false,"comment_ctime":1611136428,"is_pvip":false,"replies":[{"id":"99693","content":"感谢你的留言与支持","user_name":"作者回复","comment_id":274723,"uid":"1009582","ip_address":"","utype":1,"ctime":1611156048,"user_name_real":"tangcong"}],"discussion_count":1,"race_medal":0,"score":"10201071020","product_id":100069901,"comment_content":"挺好的文章","like_count":2,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514101,"discussion_content":"感谢你的留言与支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611156048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319863,"user_name":"瓜牛","can_delete":false,"product_type":"c1","uid":2273620,"ip_address":"","ucode":"5EB7D2F4400A70","user_header":"https://static001.geekbang.org/account/avatar/00/22/b1/54/6d663b95.jpg","comment_is_top":false,"comment_ctime":1635992251,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"5930959547","product_id":100069901,"comment_content":"多路复用为啥能减少连接数？多路复用只是提高了socket监听效率，支持更大的连接数，何来的减少连接数，连接数取决于client数啊。不能理解，请老师回复。","like_count":1,"discussions":[{"author":{"id":1521568,"avatar":"https://static001.geekbang.org/account/avatar/00/17/37/a0/032d0828.jpg","nickname":"上杉夏香","note":"","ucode":"9FDDE0979BCC8C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581656,"discussion_content":"第一个知识点：HTTP协议运行在TCP协议之上，也就是说，需要首先建立TCP链接，然后发送HTTP请求和响应。\n\n第二个知识点：HTTP/1.1存在队头阻塞问题，即在同一个TCP连接上，只能req1对应的resp1返回，才能发送req2，以此类推req3、req4...，也就是不具备多路复用能力。所以为了加快并发，可以开启多条tcp连接，比如浏览器打卡一个网页，因为网页的内容很多，浏览器其实开启了多个tcp连接嘛。\n\n综上，如果有多路复用就可以减少连接数咯。HTTP/2就是这么干的哈。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658910078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250775,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/d7/96e77edd.jpg","nickname":"问心","note":"","ucode":"6808568D61CE36","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559509,"discussion_content":"多个请求用同一个连接吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648801833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2254917,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/45/ddf89612.jpg","nickname":"bestgopher","note":"","ucode":"D89735C8CA9C6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555079,"discussion_content":"多个client用一个连接，http1有队头阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646736232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1740267,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epb7ibhPYSCNoTqLnmThBia76ic78ZicLNwxE8iaForsLQNUJSTLla5RibNtiaTVIaalBeoDyMUjkBicF7dWg/132","nickname":"Geek_8898d4","note":"","ucode":"1A63D043725B7B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550980,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644834210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279669,"user_name":"小来子","can_delete":false,"product_type":"c1","uid":1879262,"ip_address":"","ucode":"4EDAF31E43B211","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ac/de/68f35320.jpg","comment_is_top":false,"comment_ctime":1613897719,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5908865015","product_id":100069901,"comment_content":"其次使用 Lease 优化 TTL 机制，每个 Lease 具有一个 TTL，相同的 TTL 的 key 关联一个 Lease，Lease 过期的时候自动删除相关联的所有 key，不再需要为每个 key 单独续期。<br>老师,请问下, Lease过期后, 通过什么手段删除关联的所有Key呢?","like_count":1,"discussions":[{"author":{"id":1136164,"avatar":"https://static001.geekbang.org/account/avatar/00/11/56/24/36d4c9a5.jpg","nickname":"巧言乱德","note":"","ucode":"1A73CE295BF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388683,"discussion_content":"我是这么理解的，一个简单的模型就可以实现。比方说，一个 Lease 中有一个 keyList属性，当TTL时间到了，就对 KeyList 发起通知，或者 Lease 直接调用 delKey 之类的 API","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628909955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279467,"user_name":"恰同学少年。","can_delete":false,"product_type":"c1","uid":1928162,"ip_address":"","ucode":"4D4BC29421A245","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6b/e2/f02e45df.jpg","comment_is_top":false,"comment_ctime":1613793604,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5908760900","product_id":100069901,"comment_content":"1. etcd 3.4 + v3API<br>2. 主要遇到以下问题：<br>    - 在使用k8s部署集群时，如何应对多数派、少数派、数据备份与恢复、数据搬迁的运维问题。<br>    - 如何测试watch可靠性<br>    - db size为8GB，项目需要更大运行会存在哪些风险？","like_count":1},{"had_liked":false,"id":275841,"user_name":"bearlu","can_delete":false,"product_type":"c1","uid":1030862,"ip_address":"","ucode":"14F260C8B24E27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/ce/fd45714f.jpg","comment_is_top":false,"comment_ctime":1611701052,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5906668348","product_id":100069901,"comment_content":"学到了学到了","like_count":1},{"had_liked":false,"id":274974,"user_name":"ZHU～JM","can_delete":false,"product_type":"c1","uid":1590912,"ip_address":"","ucode":"1B29556D705C0B","user_header":"https://static001.geekbang.org/account/avatar/00/18/46/80/45d989e5.jpg","comment_is_top":false,"comment_ctime":1611239321,"is_pvip":false,"replies":[{"id":"99811","content":"这就涉及troubleshooting，通过etcd metric，trace特性，etcd log等各种工具分析才行，后面会有介绍，你可以看看超时时etcd的metric监控和日志","user_name":"作者回复","comment_id":274974,"uid":"1009582","ip_address":"","utype":1,"ctime":1611312289,"user_name_real":"唐聪"}],"discussion_count":0,"race_medal":0,"score":"5906206617","product_id":100069901,"comment_content":"老师，我们在使用K8s和etcd的时候经常出现注册和发现超时的情况，这是为什么啊","like_count":1},{"had_liked":false,"id":274859,"user_name":"atom","can_delete":false,"product_type":"c1","uid":1200822,"ip_address":"","ucode":"7A754C4EA3C3E4","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/b6/d065c05f.jpg","comment_is_top":false,"comment_ctime":1611197481,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5906164777","product_id":100069901,"comment_content":"非常喜欢后面etcd局限性的分析 觉得很不错","like_count":1},{"had_liked":false,"id":274844,"user_name":"Acter","can_delete":false,"product_type":"c1","uid":1082561,"ip_address":"","ucode":"EF747BEAD2A797","user_header":"https://static001.geekbang.org/account/avatar/00/10/84/c1/dfcad82a.jpg","comment_is_top":false,"comment_ctime":1611194524,"is_pvip":true,"replies":[{"id":"99844","content":"后面实践篇会介绍大value风险，容易导致apiserver和etcd oom，超时，雪崩等，建议创建几千个这样的大对象，通过client-go模拟用户list，按标签get，修改等操作","user_name":"作者回复","comment_id":274844,"uid":"1009582","ip_address":"","utype":1,"ctime":1611355058,"user_name_real":"唐聪"}],"discussion_count":1,"race_medal":0,"score":"5906161820","product_id":100069901,"comment_content":"请问老师，k8s场景etcd v3.3.10版本。由于业务的workflow yaml对象很大，近期已把etcd的max-request-bytes从1.5MiB提高到了5MiB，这对k8s master组件稳定性有何风险吗？该怎么压测呢？","like_count":1,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514141,"discussion_content":"后面实践篇会介绍大value风险，容易导致apiserver和etcd oom，超时，雪崩等，建议创建几千个这样的大对象，通过client-go模拟用户list，按标签get，修改等操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611355058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274752,"user_name":"后端进阶","can_delete":false,"product_type":"c1","uid":1125656,"ip_address":"","ucode":"480F48F5378307","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/18/918eaecf.jpg","comment_is_top":false,"comment_ctime":1611148433,"is_pvip":false,"replies":[{"id":"99694","content":"一起持续学习与进步，后续有什么不清楚的，欢迎继续留言交流","user_name":"作者回复","comment_id":274752,"uid":"1009582","ip_address":"","utype":1,"ctime":1611156119,"user_name_real":"tangcong"}],"discussion_count":1,"race_medal":0,"score":"5906115729","product_id":100069901,"comment_content":"给唐大佬疯狂打Call，以后学习ETCD就跟着唐大佬的课程走就完了！","like_count":1,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514112,"discussion_content":"一起持续学习与进步，后续有什么不清楚的，欢迎继续留言交流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611156119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274748,"user_name":"a...Z","can_delete":false,"product_type":"c1","uid":1293877,"ip_address":"","ucode":"5A5A44903785FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/be/35/dd79037e.jpg","comment_is_top":false,"comment_ctime":1611145640,"is_pvip":false,"replies":[{"id":"99697","content":"一起加油，有任何疑问，欢迎随时留言交流!","user_name":"作者回复","comment_id":274748,"uid":"1009582","ip_address":"","utype":1,"ctime":1611156542,"user_name_real":"tangcong"}],"discussion_count":1,"race_medal":0,"score":"5906112936","product_id":100069901,"comment_content":"等真美久  终于有了etcd的讲解,期待","like_count":1,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514110,"discussion_content":"一起加油，有任何疑问，欢迎随时留言交流!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611156542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354874,"user_name":"greatliu","can_delete":false,"product_type":"c1","uid":1137386,"ip_address":"湖北","ucode":"267832F4BD10CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/ea/70589340.jpg","comment_is_top":false,"comment_ctime":1660835507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660835507","product_id":100069901,"comment_content":"请教一个问题: 三实例的etcd集群开启https，如果挂载slb的情况下客户端无法访问，不用slb是可以的","like_count":0},{"had_liked":false,"id":353506,"user_name":"陈麒文","can_delete":false,"product_type":"c1","uid":2187256,"ip_address":"福建","ucode":"41475885FA5AD5","user_header":"https://static001.geekbang.org/account/avatar/00/21/5f/f8/1d16434b.jpg","comment_is_top":false,"comment_ctime":1659509114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659509114","product_id":100069901,"comment_content":"目前项目中只用到资金扣减锁的作用","like_count":0},{"had_liked":false,"id":353193,"user_name":"码小呆","can_delete":false,"product_type":"c1","uid":2055809,"ip_address":"广东","ucode":"44532D6ABF9340","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","comment_is_top":false,"comment_ctime":1659249622,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659249622","product_id":100069901,"comment_content":"项目还没有用到过etcd 不过间接有使用到.如 k8s,apisix 希望学习本专栏对 etcd 有一个完整的认识","like_count":0},{"had_liked":false,"id":350798,"user_name":"YanChuan","can_delete":false,"product_type":"c1","uid":1033208,"ip_address":"","ucode":"2647EAC2829176","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/f8/0d22a564.jpg","comment_is_top":false,"comment_ctime":1657204078,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657204078","product_id":100069901,"comment_content":"etcd is pronounced &#47;ˈɛtsiːdiː&#47;, and means “distributed etc directory.”","like_count":0},{"had_liked":false,"id":343275,"user_name":"saltedfish","can_delete":false,"product_type":"c1","uid":1946257,"ip_address":"","ucode":"936571E1AC4139","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b2/91/cf0de36e.jpg","comment_is_top":false,"comment_ctime":1650759335,"is_pvip":false,"replies":[{"id":"125739","content":"嗯，感谢支持，想深入了解更多的，可以翻一番早期etcd&#47;kubernetes issue&#47;pr","user_name":"作者回复","user_name_real":"编辑","uid":"1009582","ctime":1651623697,"ip_address":"","comment_id":343275,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650759335","product_id":100069901,"comment_content":"爽啊，这种从诞生背景顺着发展路线讲下来的思路能让人真正理解为什么现在的etcd是这个样子的，感谢作者！","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569957,"discussion_content":"嗯，感谢支持，想深入了解更多的，可以翻一番早期etcd/kubernetes issue/pr","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651623698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334265,"user_name":"Geek_8898d4","can_delete":false,"product_type":"c1","uid":1740267,"ip_address":"","ucode":"1A63D043725B7B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epb7ibhPYSCNoTqLnmThBia76ic78ZicLNwxE8iaForsLQNUJSTLla5RibNtiaTVIaalBeoDyMUjkBicF7dWg/132","comment_is_top":false,"comment_ctime":1644834164,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644834164","product_id":100069901,"comment_content":"老师，“因 HTTP&#47;1.x 不支持多路复用，会创建大量的连接，消耗 server 端过多的 socket 和内存资源”，这个不是直接关系吧。 感觉多路复用解决的时效率问题。 支持多路复用，也会产生大量连接和大量socket占用。不知道理解的对不对。  ","like_count":0},{"had_liked":false,"id":326863,"user_name":"阿甘","can_delete":false,"product_type":"c1","uid":1057843,"ip_address":"","ucode":"BC93175B70E05D","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","comment_is_top":false,"comment_ctime":1639725556,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1639725556","product_id":100069901,"comment_content":"4. 功能：增删改查，监听数据变化的机制。这个ZK不是有watch机制吗？难道那时候还不支持？","like_count":0},{"had_liked":false,"id":326855,"user_name":"曼施坦因","can_delete":false,"product_type":"c1","uid":2108889,"ip_address":"","ucode":"03A791821941BB","user_header":"https://static001.geekbang.org/account/avatar/00/20/2d/d9/8b993f5e.jpg","comment_is_top":false,"comment_ctime":1639722742,"is_pvip":false,"replies":[{"id":"119293","content":"嗯，这是文字专栏","user_name":"作者回复","user_name_real":"编辑","uid":"1009582","ctime":1640240883,"ip_address":"","comment_id":326855,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639722742","product_id":100069901,"comment_content":"请问这个是没有视频的吗？","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541041,"discussion_content":"嗯，这是文字专栏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640240883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325988,"user_name":"乔纳森","can_delete":false,"product_type":"c1","uid":1045107,"ip_address":"","ucode":"51EC9FAE071388","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/73/1c7bceae.jpg","comment_is_top":false,"comment_ctime":1639296867,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1639296867","product_id":100069901,"comment_content":"为什么说v2 不支持范围查询呢？ 内存树，是因为无序的是吗？","like_count":0},{"had_liked":false,"id":321445,"user_name":"豆花羹","can_delete":false,"product_type":"c1","uid":1522220,"ip_address":"","ucode":"57D8F64988C305","user_header":"https://static001.geekbang.org/account/avatar/00/17/3a/2c/683ae4af.jpg","comment_is_top":false,"comment_ctime":1636879828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636879828","product_id":100069901,"comment_content":"v2不支持保存key的所有版本，通过滑动窗口机制来保存最近1000条记录。请教下为什么不能保持所有版本呢，v2不是也会进行持久化吗？","like_count":0},{"had_liked":false,"id":321440,"user_name":"豆花羹","can_delete":false,"product_type":"c1","uid":1522220,"ip_address":"","ucode":"57D8F64988C305","user_header":"https://static001.geekbang.org/account/avatar/00/17/3a/2c/683ae4af.jpg","comment_is_top":false,"comment_ctime":1636879191,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636879191","product_id":100069901,"comment_content":"对于专栏中提到的HTTP&#47;1.x不支持压缩，这个是指header压缩吗？因为HTTP1.1的body是可以通过Accept-Encoding的Header指定支持的压缩方式的，比如br, gzip等。","like_count":0},{"had_liked":false,"id":319423,"user_name":"Geek6392","can_delete":false,"product_type":"c1","uid":2830936,"ip_address":"","ucode":"2786492C1DCCB7","user_header":"","comment_is_top":false,"comment_ctime":1635812179,"is_pvip":false,"replies":[{"id":"115820","content":"非常有必要哈，比如操作etcd的时候不小心误删数据、业务operator误删数据、多个节点同时断电导致数据损坏等，都可能会遇到","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1635861656,"ip_address":"","comment_id":319423,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635812179","product_id":100069901,"comment_content":"老师，etcd本来就是分布式存储了，还有必要对其数据进行定期备份么？","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529631,"discussion_content":"非常有必要哈，比如操作etcd的时候不小心误删数据、业务operator误删数据、多个节点同时断电导致数据损坏等，都可能会遇到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635861656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315132,"user_name":"过客","can_delete":false,"product_type":"c1","uid":2364361,"ip_address":"","ucode":"8E63453A0C150E","user_header":"https://static001.geekbang.org/account/avatar/00/24/13/c9/68839e9b.jpg","comment_is_top":false,"comment_ctime":1633696826,"is_pvip":false,"replies":[{"id":"114588","content":"你好，续约的对象是lease, 一旦对lease续约，在lease未过期前，etcd server就不会删除与它关联的各个key。","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1634310859,"ip_address":"","comment_id":315132,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1633696826","product_id":100069901,"comment_content":"唐老师，问您个问题，多个key关联一个lease，那么一个key续约了，所有关联到这个lease的key就都不能删除了吧，即使这些key没有任何关联","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527876,"discussion_content":"你好，续约的对象是lease, 一旦对lease续约，在lease未过期前，etcd server就不会删除与它关联的各个key。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634310859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311722,"user_name":"武文文武","can_delete":false,"product_type":"c1","uid":1108924,"ip_address":"","ucode":"5288366646A15B","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/bc/6ccac4bb.jpg","comment_is_top":false,"comment_ctime":1631426200,"is_pvip":false,"replies":[{"id":"113037","content":"多数派不可用的这种场景下，只能从learner上执行snapshot, 快速重建一个新的etcd集群，如果写请求比较多，可能会丢失少量数据。还有一种方案，北京一套主集群，上海一套主集群，两者通过同步服务进行数据同步（基于watch+mvcc、raft等），主写一地，读根据业务对一致性要求就近选择，也可能会存在一点数据不一致，这是我们我们最近在搞的。","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1631546935,"ip_address":"","comment_id":311722,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631426200","product_id":100069901,"comment_content":"<br>老师您好，learner的功能目前来看只能作为数据同步节点，对外提供读服务，无法对集群的可用性起到明显作用，比如: 上海和北京两地，希望当多数派的上海整体不可用了，北京能通过learner自动晋升为follower，从而达到异地多活的效果，如何能实现此效果呢？<br>","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526716,"discussion_content":"多数派不可用的这种场景下，只能从learner上执行snapshot, 快速重建一个新的etcd集群，如果写请求比较多，可能会丢失少量数据。还有一种方案，北京一套主集群，上海一套主集群，两者通过同步服务进行数据同步（基于watch+mvcc、raft等），主写一地，读根据业务对一致性要求就近选择，也可能会存在一点数据不一致，这是我们我们最近在搞的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631546935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310791,"user_name":"江山如画","can_delete":false,"product_type":"c1","uid":1188280,"ip_address":"","ucode":"BEB6228E6135B5","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/b8/aca814dd.jpg","comment_is_top":false,"comment_ctime":1630912403,"is_pvip":false,"replies":[{"id":"112682","content":"嗯，部分场景下可能会出现watch事件推送缓慢，比如节点出现带宽瓶颈、网络波动等，你可以通过观察etcd_debugging_mvcc_pending_events_total指标来快速发现问题，还有磁盘io抖动也会导致部分节点数据落后，导致watc事件推送缓慢。","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1631014935,"ip_address":"","comment_id":310791,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630912403","product_id":100069901,"comment_content":"主要用的 v3，使用 watch 机制保证不同节点执行相同的任务，使用过程中遇到的主要问题是害怕 watch 事件丢失","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526354,"discussion_content":"嗯，部分场景下可能会出现watch事件推送缓慢，比如节点出现带宽瓶颈、网络波动等，你可以通过观察etcd_debugging_mvcc_pending_events_total指标来快速发现问题，还有磁盘io抖动也会导致部分节点数据落后，导致watc事件推送缓慢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631014935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296796,"user_name":"batman","can_delete":false,"product_type":"c1","uid":1266482,"ip_address":"","ucode":"73C30ACFC0D612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IIkdC2gohpcibib0AJvSdnJQefAuQYGlLySQOticThpF7Ck9WuDUQLJlgZ7ic13LIFnGBXXbMsSP3nZsbibBN98ZjGA/132","comment_is_top":false,"comment_ctime":1623163566,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623163566","product_id":100069901,"comment_content":"和redis比，可不可以理解为除了数据一致性的问题，其他的都没redis好用","like_count":0},{"had_liked":false,"id":293147,"user_name":"大大很二","can_delete":false,"product_type":"c1","uid":1306140,"ip_address":"","ucode":"E3B80C31E43D53","user_header":"https://static001.geekbang.org/account/avatar/00/13/ee/1c/e4a82c25.jpg","comment_is_top":false,"comment_ctime":1621242912,"is_pvip":false,"replies":[{"id":"106156","content":"可以哈","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1621336448,"ip_address":"","comment_id":293147,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621242912","product_id":100069901,"comment_content":"看了第一讲，感觉写的很有趣且不枯燥，请问老师某些片段可以引用到个人的博客吗","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520097,"discussion_content":"可以哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621336448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277635,"user_name":"K菌无惨","can_delete":false,"product_type":"c1","uid":2194764,"ip_address":"","ucode":"97A532D588FD49","user_header":"","comment_is_top":false,"comment_ctime":1612498081,"is_pvip":false,"replies":[{"id":"100729","content":"Lease是为了优化部分key TTL相同，但还需要为各个key发起续期请求而设计的概念，如果部分key, 它们的TTL都为10秒，那么只需要创建一个TTL为10秒的Lease资源，这样就实现了TTL都为10秒的key只需要关联一个Lease，续期对象也是这个Lease资源，而不是一系列key，大大减少续期的请求数。Lease详细解读你可以看看06<br>","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1612511951,"ip_address":"","comment_id":277635,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1612498081","product_id":100069901,"comment_content":"老师, 请问&quot;相同的 TTL 的 key 关联一个 Lease&quot;这句话是不是说错了,按我的理解是&quot;持有相同Lease的key关联一个TTL&quot;","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515122,"discussion_content":"Lease是为了优化部分key TTL相同，但还需要为各个key发起续期请求而设计的概念，如果部分key, 它们的TTL都为10秒，那么只需要创建一个TTL为10秒的Lease资源，这样就实现了TTL都为10秒的key只需要关联一个Lease，续期对象也是这个Lease资源，而不是一系列key，大大减少续期的请求数。Lease详细解读你可以看看06\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612511951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2364361,"avatar":"https://static001.geekbang.org/account/avatar/00/24/13/c9/68839e9b.jpg","nickname":"过客","note":"","ucode":"8E63453A0C150E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401593,"discussion_content":"唐老师，问您个问题，多个key关联一个lease，那么一个key续约了，所有关联到这个lease的key就都不能删除了吧，即使这些key没有任何关联","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633696766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2194764,"avatar":"","nickname":"K菌无惨","note":"","ucode":"97A532D588FD49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348740,"discussion_content":"感谢唐老师的答疑解惑 我大概明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612699743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277310,"user_name":"mckee","can_delete":false,"product_type":"c1","uid":1066511,"ip_address":"","ucode":"E4DEBB462B93A1","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/0f/f6cfc659.jpg","comment_is_top":false,"comment_ctime":1612351139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612351139","product_id":100069901,"comment_content":"k8s场景 一般选择 你们选择静态部署 还是动态发现部署？ <br>静态部署scale要更新apiserver参数；动态发现部署又多了一个依赖","like_count":0},{"had_liked":false,"id":275887,"user_name":"po","can_delete":false,"product_type":"c1","uid":1023905,"ip_address":"","ucode":"7DB36C278F34D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/a1/d75219ee.jpg","comment_is_top":false,"comment_ctime":1611712756,"is_pvip":true,"replies":[{"id":"100194","content":"有持久化的，定时做快照，把内存树序列号成json保存到磁盘快照文件，启动的时候会加载快照文件，重建","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1611740645,"ip_address":"","comment_id":275887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611712756","product_id":100069901,"comment_content":"etcd v2是没有对数据持久化只在内存？那么etcd重启数据就没了？之前在极客时间张磊的kubernetes上面他说因为raft不需要对etcd持久化，提问了没解答，疑惑中。","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514520,"discussion_content":"有持久化的，定时做快照，把内存树序列号成json保存到磁盘快照文件，启动的时候会加载快照文件，重建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611740645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275411,"user_name":"mckee","can_delete":false,"product_type":"c1","uid":1066511,"ip_address":"","ucode":"E4DEBB462B93A1","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/0f/f6cfc659.jpg","comment_is_top":false,"comment_ctime":1611512515,"is_pvip":false,"replies":[{"id":"100036","content":"嗯，3.4版本才使用round robin负载均衡算法","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1611639114,"ip_address":"","comment_id":275411,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611512515","product_id":100069901,"comment_content":"老版本的etcd client只维护一个etcd member连接，对于heavy usage会造成负载不均衡","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514335,"discussion_content":"嗯，3.4版本才使用round robin负载均衡算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611639114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275207,"user_name":"Geek_1337","can_delete":false,"product_type":"c1","uid":1803245,"ip_address":"","ucode":"6A8F40EF1F79B8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLz44WGtTHNfB7GGTQgZGJqPDzhfqiaUkmSRtZUkgjuQ7dqJibx5HBp6icOfWLicCUvMTC7ltq5DzTLxw/132","comment_is_top":false,"comment_ctime":1611389445,"is_pvip":false,"replies":[{"id":"99873","content":"watch篇时我会从设计实现思路上详解，麻烦稍等","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1611401810,"ip_address":"","comment_id":275207,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611389445","product_id":100069901,"comment_content":"老师好！想知道在没有像etcd这样watch机制以前，一般数据库是怎么获取数据的更新的，除了不断的轮询还有其他解决思路吗？谢谢。","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514261,"discussion_content":"watch篇时我会从设计实现思路上详解，麻烦稍等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611401810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275015,"user_name":"范闲","can_delete":false,"product_type":"c1","uid":1073125,"ip_address":"","ucode":"F21FD7DF6BA53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/e5/54325854.jpg","comment_is_top":false,"comment_ctime":1611278027,"is_pvip":false,"replies":[{"id":"99846","content":"是的，我们使用raft learner节点，跨城容灾，进行了一些定制化改造","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1611355279,"ip_address":"","comment_id":275015,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611278027","product_id":100069901,"comment_content":"etcd用来做服务发现，治理，分布式锁，还有配置信息存储很好用。<br>缺点是异地多活不好用，延迟有点大。","like_count":1,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514187,"discussion_content":"是的，我们使用raft learner节点，跨城容灾，进行了一些定制化改造","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611355279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274929,"user_name":"🌈","can_delete":false,"product_type":"c1","uid":2057756,"ip_address":"","ucode":"8C9146CC5AB88C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/66/1c/b154a90f.jpg","comment_is_top":false,"comment_ctime":1611219813,"is_pvip":false,"replies":[{"id":"99845","content":"k8s使用的是v3，能贴下你说的默认API版本为2的代码吗","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1611355170,"ip_address":"","comment_id":274929,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1611219813","product_id":100069901,"comment_content":"为什么k8s里默认的etcd API版本还是2?","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514162,"discussion_content":"k8s使用的是v3，能贴下你说的默认API版本为2的代码吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611355170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2057756,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/66/1c/b154a90f.jpg","nickname":"🌈","note":"","ucode":"8C9146CC5AB88C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344491,"discussion_content":"我表述错了，我的k8s里安装的etcd默认的api总是v2，每次使用要export到v3。我的意思是为什么不直接默认v3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611476882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1206982,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6a/c6/9f2fbc17.jpg","nickname":"wswcfan","note":"","ucode":"9D09EBB77A381B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2057756,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/66/1c/b154a90f.jpg","nickname":"🌈","note":"","ucode":"8C9146CC5AB88C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344869,"discussion_content":"3.4版本etcdctl已经默认v3了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611593034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":344491,"ip_address":""},"score":344869,"extra":""}]}]},{"had_liked":false,"id":274911,"user_name":"GAC·DU","can_delete":false,"product_type":"c1","uid":1385403,"ip_address":"","ucode":"7847FBE1C13740","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/bb/a1a61f7c.jpg","comment_is_top":false,"comment_ctime":1611217282,"is_pvip":true,"replies":[{"id":"99847","content":"我认为最主要的是还是Go语言和容器生态，zookeeper当时也没好用的go client库，watch特性也没etcd好用，核心还是文中说得，当时没一个项目满足k8s需求，只有coreos团队不停的推动etcd与k8s相互适配改造，维护k8s etcd代码，让k8s核心开发者有更多精力去开发更重要的特性开发。","user_name":"作者回复","user_name_real":"唐聪","uid":"1009582","ctime":1611355648,"ip_address":"","comment_id":274911,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611217282","product_id":100069901,"comment_content":"读了两遍还是感觉很吃力，需要去恶补一下不懂的知识。有个疑问想让老师解惑一下，etcdV1和V2版本并没有ZK社区成熟功能也没有ZK强大，为什么K8S选择了和etcd一起成长，而不是等着etcd各方面完善和强大起来再从ZK切换到etcd？","like_count":0,"discussions":[{"author":{"id":1009582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/ae/37b492db.jpg","nickname":"唐聪","note":"","ucode":"99CB061EDF35EA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514156,"discussion_content":"我认为最主要的是还是Go语言和容器生态，zookeeper当时也没好用的go client库，watch特性也没etcd好用，核心还是文中说得，当时没一个项目满足k8s需求，只有coreos团队不停的推动etcd与k8s相互适配改造，维护k8s etcd代码，让k8s核心开发者有更多精力去开发更重要的特性开发。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611355648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274770,"user_name":"YWW୧( ̮ )୨✧ᐦ","can_delete":false,"product_type":"c1","uid":2230643,"ip_address":"","ucode":"1BB63753321DF8","user_header":"https://static001.geekbang.org/account/avatar/00/22/09/73/02921723.jpg","comment_is_top":false,"comment_ctime":1611153075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611153075","product_id":100069901,"comment_content":"不错不错","like_count":0},{"had_liked":false,"id":274767,"user_name":"Trouble man","can_delete":false,"product_type":"c1","uid":1198976,"ip_address":"","ucode":"20FEA52BFA5C4B","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/80/27be4a80.jpg","comment_is_top":false,"comment_ctime":1611151920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611151920","product_id":100069901,"comment_content":"讲得太好！","like_count":0}]}