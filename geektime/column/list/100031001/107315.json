{"id":107315,"title":"08 | 综合案例：掌握Dart核心特性","content":"<p>你好，我是陈航。</p><p>在前两篇文章中，我首先与你一起学习了Dart程序的基本结构和语法，认识了Dart语言世界的基本构成要素，也就是类型系统，以及它们是怎么表示信息的。然后，我带你学习了Dart面向对象设计的基本思路，知道了函数、类与运算符这些其他编程语言中常见的概念，在Dart中的差异及典型用法，理解了Dart是怎么处理信息的。</p><p>可以看到，Dart吸纳了其他编程语言的优点，在关于如何表达以及处理信息上，既简单又简洁，而且又不失强大。俗话说，纸上得来终觉浅，绝知此事要躬行。那么今天，我就用一个综合案例，把前面学习的关于Dart的零散知识串起来，希望你可以动手试验一下这个案例，借此掌握如何用Dart编程。</p><p>有了前面学习的知识点，再加上今天的综合案例练习，我认为你已经掌握了Dart最常用的80%的特性，可以在基本没有语言障碍的情况下去使用Flutter了。至于剩下的那20%的特性，因为使用较少，所以我不会在本专栏做重点讲解。如果你对这部分内容感兴趣的话，可以访问<a href=\"https://dart.dev/tutorials\">官方文档</a>去做进一步了解。</p><p>此外，关于Dart中的异步和并发，我会在后面的第23篇文章“单线程模型怎么保证UI运行流畅？”中进行深入介绍。</p><h2>案例介绍</h2><!-- [[[read_end]]] --><p>今天，我选择的案例是，先用Dart写一段购物车程序，但先不使用Dart独有的特性。然后，我们再以这段程序为起点，逐步加入Dart语言特性，将其改造为一个符合Dart设计思想的程序。你可以在这个改造过程中，进一步体会到Dart的魅力所在。</p><p>首先，我们来看看在不使用任何Dart语法特性的情况下，一个有着基本功能的购物车程序长什么样子。</p><pre><code>//定义商品Item类\nclass Item {\n  double price;\n  String name;\n  Item(name, price) {\n    this.name = name;\n    this.price = price;\n  }\n}\n\n//定义购物车类\nclass ShoppingCart {\n  String name;\n  DateTime date;\n  String code;\n  List&lt;Item&gt; bookings;\n\n  price() {\n    double sum = 0.0;\n    for(var i in bookings) {\n      sum += i.price;\n    }\n    return sum;\n  }\n\n  ShoppingCart(name, code) {\n    this.name = name;\n    this.code = code;\n    this.date = DateTime.now();\n  }\n\n  getInfo() {\n    return '购物车信息:' +\n          '\\n-----------------------------' +\n          '\\n用户名: ' + name+ \n          '\\n优惠码: ' + code + \n          '\\n总价: ' + price().toString() +\n          '\\n日期: ' + date.toString() +\n          '\\n-----------------------------';\n  }\n}\n\nvoid main() {\n  ShoppingCart sc = ShoppingCart('张三', '123456');\n  sc.bookings = [Item('苹果',10.0), Item('鸭梨',20.0)];\n  print(sc.getInfo());\n}\n</code></pre><p>在这段程序中，我定义了商品Item类，以及购物车ShoppingCart类。它们分别包含了一个初始化构造方法，将main函数传入的参数信息赋值给对象内部属性。而购物车的基本信息，则通过ShoppingCart类中的getInfo方法输出。在这个方法中，我采用字符串拼接的方式，将各类信息进行格式化组合后，返回给调用者。</p><p>运行这段程序，不出意外，购物车对象sc包括的用户名、优惠码、总价与日期在内的基本信息都会被打印到命令行中。</p><pre><code>购物车信息:\n-----------------------------\n用户名: 张三\n优惠码: 123456\n总价: 30.0\n日期: 2019-06-01 17:17:57.004645\n-----------------------------\n</code></pre><p>这段程序的功能非常简单：我们初始化了一个购物车对象，然后给购物车对象进行加购操作，最后打印出基本信息。可以看到，在不使用Dart语法任何特性的情况下，这段代码与Java、C++甚至JavaScript没有明显的语法差异。</p><p>在关于如何表达以及处理信息上，Dart保持了既简单又简洁的风格。那接下来，<strong>我们就先从表达信息入手，看看Dart是如何优化这段代码的。</strong></p><h2>类抽象改造</h2><p>我们先来看看Item类与ShoppingCart类的初始化部分。它们在构造函数中的初始化工作，仅仅是将main函数传入的参数进行属性赋值。</p><p>在其他编程语言中，在构造函数的函数体内，将初始化参数赋值给实例变量的方式非常常见。而在Dart里，我们可以利用语法糖以及初始化列表，来简化这样的赋值过程，从而直接省去构造函数的函数体：</p><pre><code>class Item {\n  double price;\n  String name;\n  Item(this.name, this.price);\n}\n\nclass ShoppingCart {\n  String name;\n  DateTime date;\n  String code;\n  List&lt;Item&gt; bookings;\n  price() {...}\n  //删掉了构造函数函数体\n  ShoppingCart(this.name, this.code) : date = DateTime.now();\n...\n}\n</code></pre><p>这一下就省去了7行代码！通过这次改造，我们有两个新的发现：</p><ul>\n<li>首先，Item类与ShoppingCart类中都有一个name属性，在Item中表示商品名称，在ShoppingCart中则表示用户名；</li>\n<li>然后，Item类中有一个price属性，ShoppingCart中有一个price方法，它们都表示当前的价格。</li>\n</ul><p>考虑到name属性与price属性（方法）的名称与类型完全一致，在信息表达上的作用也几乎一致，因此我可以在这两个类的基础上，再抽象出一个新的基类Meta，用于存放price属性与name属性。</p><p>同时，考虑到在ShoppingCart类中，price属性仅用做计算购物车中商品的价格（而不是像Item类那样用于数据存取），因此在继承了Meta类后，我改写了ShoppingCart类中price属性的get方法：</p><pre><code>class Meta {\n  double price;\n  String name;\n  Meta(this.name, this.price);\n}\nclass Item extends Meta{\n  Item(name, price) : super(name, price);\n}\n\nclass ShoppingCart extends Meta{\n  DateTime date;\n  String code;\n  List&lt;Item&gt; bookings;\n  \n  double get price {...}\n  ShoppingCart(name, this.code) : date = DateTime.now(),super(name,0);\n  getInfo() {...}\n}\n</code></pre><p>通过这次类抽象改造，程序中各个类的依赖关系变得更加清晰了。不过，目前这段程序中还有两个冗长的方法显得格格不入，即ShoppingCart类中计算价格的price属性get方法，以及提供购物车基本信息的getInfo方法。接下来，我们分别来改造这两个方法。</p><h2>方法改造</h2><p>我们先看看price属性的get方法：</p><pre><code>double get price {\n  double sum = 0.0;\n  for(var i in bookings) {\n    sum += i.price;\n  }\n  return sum;\n} \n</code></pre><p>在这个方法里，我采用了其他语言常见的求和算法，依次遍历bookings列表中的Item对象，累积相加求和。</p><p>而在Dart中，这样的求和运算我们只需重载Item类的“+”运算符，并通过对列表对象进行归纳合并操作即可实现（你可以想象成，把购物车中的所有商品都合并成了一个商品套餐对象）。</p><p>另外，由于函数体只有一行，所以我们可以使用Dart的箭头函数来进一步简化实现函数：</p><pre><code>class Item extends Meta{\n  ...\n  //重载了+运算符，合并商品为套餐商品\n  Item operator+(Item item) =&gt; Item(name + item.name, price + item.price); \n}\n\nclass ShoppingCart extends Meta{\n  ...\n  //把迭代求和改写为归纳合并\n  double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;\n  ...\n  getInfo() {...}\n}\n</code></pre><p>可以看到，这段代码又简洁了很多！接下来，我们再看看getInfo方法如何优化。</p><p>在getInfo方法中，我们将ShoppingCart类的基本信息通过字符串拼接的方式，进行格式化组合，这在其他编程语言中非常常见。而在Dart中，我们可以通过对字符串插入变量或表达式，并使用多行字符串声明的方式，来完全抛弃不优雅的字符串拼接，实现字符串格式化组合。</p><pre><code>getInfo () =&gt; '''\n购物车信息:\n-----------------------------\n  用户名: $name\n  优惠码: $code\n  总价: $price\n  Date: $date\n-----------------------------\n''';\n</code></pre><p>在去掉了多余的字符串转义和拼接代码后，getInfo方法看着就清晰多了。</p><p>在优化完了ShoppingCart类与Item类的内部实现后，我们再来看看main函数，从调用方的角度去分析程序还能在哪些方面做优化。</p><h2>对象初始化方式的优化</h2><p>在main函数中，我们使用</p><pre><code>ShoppingCart sc = ShoppingCart('张三', '123456') ;\n</code></pre><p>初始化了一个使用‘123456’优惠码、名为‘张三’的用户所使用的购物车对象。而这段初始化方法的调用，我们可以从两个方面优化：</p><ul>\n<li>首先，在对ShoppingCart的构造函数进行了大量简写后，我们希望能够提供给调用者更明确的初始化方法调用方式，让调用者以“参数名:参数键值对”的方式指定调用参数，让调用者明确传递的初始化参数的意义。在Dart中，这样的需求，我们在声明函数时，可以通过给参数增加{}实现。</li>\n<li>其次，对一个购物车对象来说，一定会有一个有用户名，但不一定有优惠码的用户。因此，对于购物车对象的初始化，我们还需要提供一个不含优惠码的初始化方法，并且需要确定多个初始化方法与父类的初始化方法之间的正确调用顺序。</li>\n</ul><p>按照这样的思路，我们开始对ShoppingCart进行改造。</p><p>需要注意的是，由于优惠码可以为空，我们还需要对getInfo方法进行兼容处理。在这里，我用到了a??b运算符，这个运算符能够大量简化在其他语言中三元表达式(a != null)? a : b的写法：</p><pre><code>class ShoppingCart extends Meta{\n  ...\n  //默认初始化方法，转发到withCode里\n  ShoppingCart({name}) : this.withCode(name:name, code:null);\n  //withCode初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法\n  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0);\n\n  //??运算符表示为code不为null，则用原值，否则使用默认值&quot;没有&quot;\n  getInfo () =&gt; '''\n购物车信息:\n-----------------------------\n  用户名: $name\n  优惠码: ${code??&quot;没有&quot;}\n  总价: $price\n  Date: $date\n-----------------------------\n''';\n}\n\nvoid main() {\n  ShoppingCart sc = ShoppingCart.withCode(name:'张三', code:'123456');\n  sc.bookings = [Item('苹果',10.0), Item('鸭梨',20.0)];\n  print(sc.getInfo());\n\n  ShoppingCart sc2 = ShoppingCart(name:'李四');\n  sc2.bookings = [Item('香蕉',15.0), Item('西瓜',40.0)];\n  print(sc2.getInfo());\n}\n</code></pre><p>运行这段程序，张三和李四的购物车信息都会被打印到命令行中：</p><pre><code>购物车信息:\n-----------------------------\n  用户名: 张三\n  优惠码: 123456\n  总价: 30.0\n  Date: 2019-06-01 19:59:30.443817\n-----------------------------\n\n购物车信息:\n-----------------------------\n  用户名: 李四\n  优惠码: 没有\n  总价: 55.0\n  Date: 2019-06-01 19:59:30.451747\n-----------------------------\n</code></pre><p>关于购物车信息的打印，我们是通过在main函数中获取到购物车对象的信息后，使用全局的print函数打印的，我们希望把打印信息的行为封装到ShoppingCart类中。而对于打印信息的行为而言，这是一个非常通用的功能，不止ShoppingCart类需要，Item对象也可能需要。</p><p>因此，我们需要把打印信息的能力单独封装成一个单独的类PrintHelper。但，ShoppingCart类本身已经继承自Meta类，考虑到Dart并不支持多继承，我们怎样才能实现PrintHelper类的复用呢？</p><p>这就用到了我在上一篇文章中提到的“混入”（Mixin），相信你还记得只要在使用时加上with关键字即可。</p><p>我们来试着增加PrintHelper类，并调整ShoppingCart的声明：</p><pre><code>abstract class PrintHelper {\n  printInfo() =&gt; print(getInfo());\n  getInfo();\n}\n\nclass ShoppingCart extends Meta with PrintHelper{\n...\n}\n</code></pre><p>经过Mixin的改造，我们终于把所有购物车的行为都封装到ShoppingCart内部了。而对于调用方而言，还可以使用级联运算符“..”，在同一个对象上连续调用多个函数以及访问成员变量。使用级联操作符可以避免创建临时变量，让代码看起来更流畅：</p><pre><code>void main() {\n  ShoppingCart.withCode(name:'张三', code:'123456')\n  ..bookings = [Item('苹果',10.0), Item('鸭梨',20.0)]\n  ..printInfo();\n\n  ShoppingCart(name:'李四')\n  ..bookings = [Item('香蕉',15.0), Item('西瓜',40.0)]\n  ..printInfo();\n}\n</code></pre><p>很好！通过Dart独有的语法特性，我们终于把这段购物车代码改造成了简洁、直接而又强大的Dart风格程序。</p><h2>总结</h2><p>这就是今天分享的全部内容了。在今天，我们以一个与Java、C++甚至JavaScript没有明显语法差异的购物车雏形为起步，逐步将它改造成了一个符合Dart设计思想的程序。</p><p>首先，我们使用构造函数语法糖及初始化列表，简化了成员变量的赋值过程。然后，我们重载了“+”运算符，并采用归纳合并的方式实现了价格计算，并且使用多行字符串和内嵌表达式的方式，省去了无谓的字符串拼接。最后，我们重新梳理了类之间的继承关系，通过mixin、多构造函数，可选命名参数等手段，优化了对象初始化调用方式。</p><p>下面是今天购物车综合案例的完整代码，希望你在IDE中多多练习，体会这次的改造过程，从而对Dart那些使代码变得更简洁、直接而强大的关键语法特性产生更深刻的印象。同时，改造前后的代码，你也可以在GitHub的<a href=\"https://github.com/cyndibaby905/08_Dart_Sample\">Dart_Sample</a>中找到：</p><pre><code>class Meta {\n  double price;\n  String name;\n  //成员变量初始化语法糖\n  Meta(this.name, this.price);\n}\n\nclass Item extends Meta{\n  Item(name, price) : super(name, price);\n  //重载+运算符，将商品对象合并为套餐商品\n  Item operator+(Item item) =&gt; Item(name + item.name, price + item.price); \n}\n\nabstract class PrintHelper {\n  printInfo() =&gt; print(getInfo());\n  getInfo();\n}\n\n//with表示以非继承的方式复用了另一个类的成员变量及函数\nclass ShoppingCart extends Meta with PrintHelper{\n  DateTime date;\n  String code;\n  List&lt;Item&gt; bookings;\n  //以归纳合并方式求和\n  double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;\n  //默认初始化函数，转发至withCode函数\n  ShoppingCart({name}) : this.withCode(name:name, code:null);\n  //withCode初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法\n  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0);\n\n  //??运算符表示为code不为null，则用原值，否则使用默认值&quot;没有&quot;\n  @override\n  getInfo() =&gt; '''\n购物车信息:\n-----------------------------\n  用户名: $name\n  优惠码: ${code??&quot;没有&quot;}\n  总价: $price\n  Date: $date\n-----------------------------\n''';\n}\n\nvoid main() {\n  ShoppingCart.withCode(name:'张三', code:'123456')\n  ..bookings = [Item('苹果',10.0), Item('鸭梨',20.0)]\n  ..printInfo();\n\n  ShoppingCart(name:'李四')\n  ..bookings = [Item('香蕉',15.0), Item('西瓜',40.0)]\n  ..printInfo();\n}\n</code></pre><h2>思考题</h2><p>请你扩展购物车程序的实现，使得我们的购物车可以支持：</p><ol>\n<li>商品数量属性；</li>\n<li>购物车信息增加商品列表信息（包括商品名称，数量及单价）输出，实现小票的基本功能。</li>\n</ol><p>欢迎你在评论区给我留言分享你的观点，我会在下一篇文章中等待你！感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><p></p>","comments":[{"had_liked":false,"id":123689,"user_name":"relax","can_delete":false,"product_type":"c1","uid":1050877,"ip_address":"","ucode":"5D84F35248A2F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/fd/3f3dca30.jpg","comment_is_top":true,"comment_ctime":1565743891,"is_pvip":false,"replies":[{"id":"45355","content":"代码还是要分开放的，因为每节分享都是独立的一个可运行工程，不只是代码，还有CI和单测一堆工程相关的东西，集中放就没法管理了。<br>我单起了一个仓库，用submodule的方式把这些demo都收进去了，可以自取<br>https:&#47;&#47;github.com&#47;cyndibaby905&#47;flutter_core_demo","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565753050,"ip_address":"","comment_id":123689,"utype":1}],"discussion_count":3,"race_medal":0,"score":"9.2233720556004004e+18","product_id":100031001,"comment_content":"能不能所有的示例代码放到一个git下面","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462770,"discussion_content":"代码还是要分开放的，因为每节分享都是独立的一个可运行工程，不只是代码，还有CI和单测一堆工程相关的东西，集中放就没法管理了。\n我单起了一个仓库，用submodule的方式把这些demo都收进去了，可以自取\nhttps://github.com/cyndibaby905/flutter_core_demo","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565753050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1737387,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUqvktkiaB0phUVBlFzUG3UxULVYicdxia4KIkyoIXY0PF4S8XDWibMqWtPw585ToESqSrgGee4V0K9A/132","nickname":"Geek_d22461","note":"","ucode":"342423F6B2B5A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367221,"discussion_content":"我也是，代码下载下来了，目录里面全是空的！！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618297883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1514191,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1a/cf/00e23ba8.jpg","nickname":"是八月","note":"","ucode":"B0A9645B8E2292","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":173498,"discussion_content":"git clone 到本地 目录里面 都是空的 ？？？？在WEB 上可以看到有文件。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581856821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114228,"user_name":"Ω","can_delete":false,"product_type":"c1","uid":1603583,"ip_address":"","ucode":"6117ADE46C6FC3","user_header":"https://static001.geekbang.org/account/avatar/00/18/77/ff/4ce0aa51.jpg","comment_is_top":false,"comment_ctime":1563257369,"is_pvip":false,"replies":[{"id":"41679","content":"operator+：把两个Item对象合并为一个。新Item对象的name为这两个对象的name拼接而成，price为他们的price相加而成。<br><br>get price：对列表数据采用累加的方式进行求和。这里用到了reduce方法。reduce是函数迭代方法，需要传递一个二元函数进行列表的合并工作。list[0...n].reduce(f)等于：<br>a0 = list[0]<br>a1 = f(a0,list[1])<br>a2 = f(a1,list[2])<br>an = f(an-1,list[n])<br>在这里我们的f是求和函数f(x,y)=x+y，可以理解成an=list[0]+list[1]+list[n-1]+list[n]","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563270759,"ip_address":"","comment_id":114228,"utype":1}],"discussion_count":2,"race_medal":0,"score":"139002210841","product_id":100031001,"comment_content":"Item operator+(Item item) =&gt; I...<br>double get price =&gt; bookings...<br><br>这个改造+号的代码还是无法看懂<br>","like_count":33,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458569,"discussion_content":"operator+：把两个Item对象合并为一个。新Item对象的name为这两个对象的name拼接而成，price为他们的price相加而成。\n\nget price：对列表数据采用累加的方式进行求和。这里用到了reduce方法。reduce是函数迭代方法，需要传递一个二元函数进行列表的合并工作。list[0...n].reduce(f)等于：\na0 = list[0]\na1 = f(a0,list[1])\na2 = f(a1,list[2])\nan = f(an-1,list[n])\n在这里我们的f是求和函数f(x,y)=x+y，可以理解成an=list[0]+list[1]+list[n-1]+list[n]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563270759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006668,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/4c/6f7aa280.jpg","nickname":"小飞的小小飞","note":"","ucode":"4E99249F73D0B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2114,"discussion_content":"运算符重载 两个item相加的结果是 name+name price+price \n按照栗子里的结果就是 (苹果,10)+(鸭梨,20) = (苹果鸭梨,30)\nprice那里就是reduce合并相加 然后取回最终的item的price=30","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1563266589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114084,"user_name":"bytecode","can_delete":false,"product_type":"c1","uid":1123335,"ip_address":"","ucode":"0BE585036E259F","user_header":"https://static001.geekbang.org/account/avatar/00/11/24/07/380666e3.jpg","comment_is_top":false,"comment_ctime":1563237222,"is_pvip":false,"replies":[{"id":"41638","content":"感谢提醒","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563250027,"ip_address":"","comment_id":114084,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53102844774","product_id":100031001,"comment_content":"double get price() {<br>  double sum = 0.0;<br>  for(var i in bookings) {<br>    sum += i.price;<br>  }<br>  return sum;<br>} <br><br>文中这里的price()是多了括号()，要去掉()","like_count":12,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458508,"discussion_content":"感谢提醒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563250027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117032,"user_name":"jia58960","can_delete":false,"product_type":"c1","uid":1485065,"ip_address":"","ucode":"DA8D947BABBD8A","user_header":"https://static001.geekbang.org/account/avatar/00/16/a9/09/fd67d691.jpg","comment_is_top":false,"comment_ctime":1563957392,"is_pvip":true,"replies":[{"id":"42789","content":"类的实例变量：1.是声明时定义的，可以用this语法糖赋值；2.是继承来的，不能用this，需要把这个值交给super让父类赋值","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563964418,"ip_address":"","comment_id":117032,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44513630352","product_id":100031001,"comment_content":"大概能看懂并实现代码，但构造函数中的属性什么时候用this.属性，什么时候不用this，希望老师能回答下。","like_count":10,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459786,"discussion_content":"类的实例变量：1.是声明时定义的，可以用this语法糖赋值；2.是继承来的，不能用this，需要把这个值交给super让父类赋值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563964418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1459388,"avatar":"https://static001.geekbang.org/account/avatar/00/16/44/bc/0bb265a7.jpg","nickname":"克尔苏加德","note":"","ucode":"E35A6DFA012F37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555366,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646883522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114187,"user_name":"Paradise","can_delete":false,"product_type":"c1","uid":1456728,"ip_address":"","ucode":"BF960407E87878","user_header":"https://static001.geekbang.org/account/avatar/00/16/3a/58/494a6aca.jpg","comment_is_top":false,"comment_ctime":1563247541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27333051317","product_id":100031001,"comment_content":"这种结合代码的方式很友好，可以一边听一边上手，更容易理解...😀","like_count":6},{"had_liked":false,"id":118075,"user_name":"灰灰","can_delete":false,"product_type":"c1","uid":1217408,"ip_address":"","ucode":"E33546A64B2CC3","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/80/ccf2f428.jpg","comment_is_top":false,"comment_ctime":1564231409,"is_pvip":false,"replies":[{"id":"43502","content":"赞","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564422834,"ip_address":"","comment_id":118075,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18744100593","product_id":100031001,"comment_content":"abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>class Meta {<br>  double price;<br>  String name;<br>  Meta(this.name, this.price);<br>}<br><br>&#47;&#47; 定义商品Item类<br>class Item extends Meta {<br>  int count;<br>  Item(name, price, this.count): super(name, price);<br>  Item operator+(Item item) =&gt; Item(name + item.name, price * count + (item.price * item.count), 1);<br>}<br><br>&#47;&#47;定义购物车类<br>class ShoppingCart extends Meta with PrintHelper {<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br><br>  double get price =&gt; bookings.reduce((value, element) =&gt; (value + element)).price;<br>&#47;&#47;  ShoppingCart(name, this.code): date = DateTime.now(), super(name,0);<br>  ShoppingCart({name}): this.withCode(name: name, code: null);<br>  ShoppingCart.withCode({name, this.code}): date = DateTime.now(), super(name, 0);<br>  getInfo () =&gt; &#39;&#39;&#39;<br>     购物车信息:<br>     <br>     ----------------<br>     商品名    单价    数量    总价<br>     ----------------<br>     ${bookings.map((item) =&gt; &#39;${item.name}  ${item.price}  ${item.count}  ${item.price * item.count}&#39;).join(&#39;\\n     &#39;)}<br>     <br>     ================<br>     用户名： $name<br>     优惠码： ${code ?? &quot;没有&quot;}<br>     总价： $price<br>     日期： $date<br>  &#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name: &#39;张三&#39;, code: &#39;123456&#39;)<br>  ..bookings = [Item(&#39;苹果&#39;, 10.0, 3), Item(&#39;鸭梨&#39;, 20.0, 1)]<br>  ..printInfo();<br><br>  ShoppingCart(name: &#39;李四&#39;)<br>  ..bookings = [Item(&#39;香蕉&#39;, 2.4, 2), Item(&#39;芒果&#39;, 6.8, 4)]<br>  ..printInfo();<br>}","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460254,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564422834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1535242,"avatar":"https://static001.geekbang.org/account/avatar/00/17/6d/0a/8e7f0f04.jpg","nickname":"刘洪林","note":"","ucode":"1FDBB425191CA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371590,"discussion_content":"名字重复的商品数量需要合并吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619858416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125716,"user_name":"Uncle.Wang","can_delete":false,"product_type":"c1","uid":1456955,"ip_address":"","ucode":"9A4F646CFC237F","user_header":"https://static001.geekbang.org/account/avatar/00/16/3b/3b/b8c00291.jpg","comment_is_top":false,"comment_ctime":1566232292,"is_pvip":false,"replies":[{"id":"46289","content":"非常棒！","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566281799,"ip_address":"","comment_id":125716,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14451134180","product_id":100031001,"comment_content":"class Meta {<br>  double price;<br>  String name;<br>  &#47;&#47; 成员变量初始化语法糖<br>  Meta(this.name, this.price);<br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>class Item extends Meta with PrintHelper {<br>  int count;<br>  Item(name, price, {int count = 1}): super(name, price) {<br>    this.count = count;<br>  }<br>  &#47;&#47; 重载 + 运算符，将商品对象合并为套餐商品<br>  Item operator+(Item item) =&gt; Item(name + item.name, price + item.price); <br>    @override<br>  getInfo() =&gt; &#39;&#39;&#39;<br>    商品名: $name<br>    单价: $price<br>    数量: $count<br>    ---------------<br>&#39;&#39;&#39;;<br>}<br><br>&#47;&#47;with 表示以非继承的方式复用了另一个类的成员变量及函数<br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  &#47;&#47; 以归纳合并方式求和<br>  double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;<br>  &#47;&#47; 默认初始化函数，转发至 withCode 函数<br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br>  &#47;&#47;withCode 初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0);<br><br>  getBookingInfo() {<br>    String str = &quot;&quot;;<br>    for (Item item in bookings) {<br>      str += item.getInfo();<br>    }<br>    return str;<br>  }<br><br>  &#47;&#47;?? 运算符表示为 code 不为 null，则用原值，否则使用默认值 &quot; 没有 &quot;<br>  @override<br>  getInfo() =&gt; &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code??&quot; 没有 &quot;}<br>  总价: $price<br>  Date: $date<br>  商品列表：<br>    ---------------<br>${ getBookingInfo() }<br>-----------------------------<br>&#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;, code:&#39;123456&#39;)<br>  ..bookings = [Item(&#39;苹果&#39;,10.0, count: 10), Item(&#39;鸭梨&#39;,20.0, count: 5)]<br>  ..printInfo();<br><br>  ShoppingCart(name:&#39;李四&#39;)<br>  ..bookings = [Item(&#39;香蕉&#39;,15.0), Item(&#39;西瓜&#39;,40.0)]<br>  ..printInfo();<br>}<br>","like_count":3,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463670,"discussion_content":"非常棒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566281799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115306,"user_name":"江宁彭于晏","can_delete":false,"product_type":"c1","uid":1587442,"ip_address":"","ucode":"248C7BB01921F3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epxMjZcn8LFy6PIT7uGzUOHTCZosTwh39jBKlyW3Ffzyscm14PQGh3QZ1GrEGF4UWxwKZrAib8AXCA/132","comment_is_top":false,"comment_ctime":1563528603,"is_pvip":false,"replies":[{"id":"42124","content":"赞👍<br><br>不过数量作为Item的属性会更好一点。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563539115,"ip_address":"","comment_id":115306,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14448430491","product_id":100031001,"comment_content":"class Meta {<br>  double price;<br>  String name;<br>  &#47;&#47; 成员变量初始化语法糖<br>  Meta(this.name, this.price);<br>}<br><br>class Item extends Meta{<br>  Item(name, price) : super(name, price);<br>  &#47;&#47; 重载 + 运算符，将商品对象合并为套餐商品<br>  Item operator+(Item item) =&gt; Item(name + item.name, price + item.price); <br>}<br><br>class Items {<br>  Item item;<br>  double num;<br>  Items(this.item, this.num);<br>  double get totalPrice =&gt; item.price * num; <br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;with 表示以非继承的方式复用了另一个类的成员变量及函数<br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Items&gt; bookings;<br>  &#47;&#47; 以归纳合并方式求和<br>  double get shopPrice {<br>     double result = 0.0;<br>     bookings.forEach((element) =&gt; result+=element.totalPrice);<br>     return result;<br>  }<br><br>  &#47;&#47; 默认初始化函数，转发至 withCode 函数<br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br>  &#47;&#47;withCode 初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0);<br><br>  &#47;&#47;?? 运算符表示为 code 不为 null，则用原值，否则使用默认值 &quot; 没有 &quot;<br>  @override<br>  String getInfo() {<br>  String bookingsResult = &#39;商品明细: \\n&#39;;<br>  bookings.forEach((item) =&gt; bookingsResult += &#39;  商品名称：${item.item.name}  单价：${item.item.price} 数量 ：${item.num}  总价：${item.totalPrice}\\n&#39;);<br><br>  return &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code??&quot; 没有 &quot;}<br>  $bookingsResult<br>  总价: $shopPrice<br>  Date: $date<br>-----------------------------<br>&#39;&#39;&#39;;<br>  }<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;, code:&#39;123456&#39;)<br>  ..bookings = [Items(Item(&#39;苹果&#39;,10.0),5.0), Items(Item(&#39;鸭梨&#39;,20.0),10.0)]<br>  ..printInfo();<br><br>  ShoppingCart(name:&#39;李四&#39;)<br>  ..bookings = [Items(Item(&#39;香蕉&#39;,15.0),10.0), Items(Item(&#39;西瓜&#39;,40.0),1.0)]<br>  ..printInfo();<br>}<br>","like_count":3,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459050,"discussion_content":"赞👍\n\n不过数量作为Item的属性会更好一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563539115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313643,"user_name":"于小鱼","can_delete":false,"product_type":"c1","uid":1538004,"ip_address":"","ucode":"92491E041831FB","user_header":"https://static001.geekbang.org/account/avatar/00/17/77/d4/fc5d50cf.jpg","comment_is_top":false,"comment_ctime":1632578326,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10222512918","product_id":100031001,"comment_content":"Dart 2.12 之后 Enabling null safety ， 文中的例子就有了问题。 <br>booking 也需要 Initialize<br>String code 需改为 String? code","like_count":2,"discussions":[{"author":{"id":2601552,"avatar":"https://static001.geekbang.org/account/avatar/00/27/b2/50/cca93111.jpg","nickname":"对方正在偷人...","note":"","ucode":"F43C0C9FE41D23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535107,"discussion_content":"var code;也行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638353666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297110,"user_name":"gk","can_delete":false,"product_type":"c1","uid":1251970,"ip_address":"","ucode":"0E1E81FEED2E86","user_header":"https://static001.geekbang.org/account/avatar/00/13/1a/82/f039ae08.jpg","comment_is_top":false,"comment_ctime":1623314699,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5918281995","product_id":100031001,"comment_content":"19年的课，才看，忍不住回复下，主要是太妙了，作者的课程安排很好，另外这堂课的例子，从重载运算符，reduce妙用，级联运算符，一个比一个精彩，给个赞。","like_count":1,"discussions":[{"author":{"id":2885698,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/08/42/0733c7bd.jpg","nickname":"丙戌","note":"","ucode":"7955E34900FBFE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581706,"discussion_content":"2022看的也是一样觉得好，超级好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658930767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140913,"user_name":"Carlo","can_delete":false,"product_type":"c1","uid":1001557,"ip_address":"","ucode":"7C3FF23B597506","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/55/48de9a24.jpg","comment_is_top":false,"comment_ctime":1571081342,"is_pvip":false,"replies":[{"id":"56208","content":"给你展开一下你就明白了：<br>funcThatThrows()<br>  .then(successCallback, onError: (e) {<br>    handleError(e);          &#47;&#47; Original error.<br>    anotherFuncThatThrows(); &#47;&#47; new error.<br>  })<br>  .catchError(handleError);  &#47;&#47; Error from within then() handled.","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1572323031,"ip_address":"","comment_id":140913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866048638","product_id":100031001,"comment_content":"看到一段代码：<br>firebaseService.login().then(<br>                        (value) {<br>                          print(value.toJson());<br>                        },<br>                        onError: (err) {<br>                          print(err);<br>                        },<br>                      );<br><br>请问这个onError是怎么回事啊。为什么会被执行呢？  这是dart特有的语法么？<br>我所知道的一般sync function的语法是<br><br>thisFunction()<br>    .catch(console.error)<br>    .then(() =&gt; console.log(&#39;We do cleanup here&#39;));","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470623,"discussion_content":"给你展开一下你就明白了：\nfuncThatThrows()\n  .then(successCallback, onError: (e) {\n    handleError(e);          // Original error.\n    anotherFuncThatThrows(); // new error.\n  })\n  .catchError(handleError);  // Error from within then() handled.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572323031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124015,"user_name":"和小胖","can_delete":false,"product_type":"c1","uid":1180727,"ip_address":"","ucode":"406BD7AB987EBF","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/37/aa04f997.jpg","comment_is_top":false,"comment_ctime":1565791788,"is_pvip":false,"replies":[{"id":"46708","content":"结果倒是对，但是这个购物车与我们理解的购物车还是有差异：<br>1.count属性应该是Item对象的：一个Item对象有count个，而不是一直往购物车内加同样的对象count次；<br>2.由于你的count属性无法拆分到Item类，导致getGoodsInfo的计算异常繁琐了。如果count属性在Item类，getGoodsInfo计算可以收敛到Item对象类内部。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566381995,"ip_address":"","comment_id":124015,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860759084","product_id":100031001,"comment_content":"老师您的第二个题目，我理解是要做每一种商品的分类，但是我还是用了以前语言的思路来做了。麻烦老师，看看是否正确。<br><br>关键代码如下：<br>&#47;&#47;定义购物车类<br>class ShoppingCar extends Meta with PrintHelper {<br>  DateTime date; &#47;&#47;购物日期<br>  String code; &#47;&#47;优惠券<br>  List&lt;Item&gt; _bookings; &#47;&#47;定义私有属性<br>  num count; &#47;&#47;商品数量<br><br>  &#47;&#47;求出总价<br>  double get price =&gt;<br>      books.reduce((value, element) =&gt; value + element).price;<br><br>  List&lt;Item&gt; get books =&gt; _bookings;<br><br>  &#47;&#47;给bookings定义set方法<br>  set book(List&lt;Item&gt; bookings) {<br>    this._bookings = bookings;<br>    this.count = bookings.length;<br>  }<br><br>  &#47;&#47;获取分类产品信息<br>  String getGoodsInfo() {<br>    StringBuffer temp = new StringBuffer();<br>    Map map = new Map&lt;String, List&lt;Item&gt;&gt;();<br>    books.forEach((item) {<br>      if (!map.containsKey(item.name)) {<br>        List list = new List&lt;Item&gt;();<br>        list.add(item);<br>        map[item.name] = list;<br>      } else {<br>        (map[item.name] as List&lt;Item&gt;).add(item);<br>      }<br>    });<br>    map.forEach((k, v) {<br>      temp.write(&quot;商品名称：$k,该种商品数量：${(v as List).length},该种商品单价：${(v as List&lt;Item&gt;)[0].price}元\\n&quot;);<br>      print(&quot;$k,$v&quot;);<br>    });<br>    return temp.toString();<br>  }<br><br>  &#47;&#47;这种表达式赋值还是挺方便的<br>  ShoppingCar.withCode({name, this.code}): this.date = DateTime.now(),super(name, 0.0);<br><br>  ShoppingCar({name}) : this.withCode(name: name, code: null);<br><br>  @override<br>  getInfo() {<br>    return &#39;&#39;&#39;<br>      购物车信息：<br>      ----------------------<br>      用户名：$name<br>      优惠码：${code ?? &quot;没有优惠券啊&quot;}<br>      商品总量：$count<br>      总价：$price  <br>      日期：$date<br>      ${getGoodsInfo()}<br>      ----------------------<br>  &#39;&#39;&#39;;<br>  }<br>}<br><br>运行后信息如下：购物车信息：<br>      ----------------------<br>      用户名：小李<br>      优惠码：没有优惠券啊<br>      商品总量：3<br>      总价：29.0  <br>      日期：2019-08-14 22:01:24.437085<br>      商品名称：苹果,该种商品数量：2,该种商品单价：10.0元<br>      商品名称：梨,该种商品数量：1,该种商品单价：9.0元<br>      ----------------------","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462959,"discussion_content":"结果倒是对，但是这个购物车与我们理解的购物车还是有差异：\n1.count属性应该是Item对象的：一个Item对象有count个，而不是一直往购物车内加同样的对象count次；\n2.由于你的count属性无法拆分到Item类，导致getGoodsInfo的计算异常繁琐了。如果count属性在Item类，getGoodsInfo计算可以收敛到Item对象类内部。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566381995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120163,"user_name":"刘荣清","can_delete":false,"product_type":"c1","uid":1231158,"ip_address":"","ucode":"5F32CD9F58025D","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/36/8e7aec6c.jpg","comment_is_top":false,"comment_ctime":1564801616,"is_pvip":false,"replies":[{"id":"44420","content":"把dart命令所在的目录设置成环境变量PATH","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565017277,"ip_address":"","comment_id":120163,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859768912","product_id":100031001,"comment_content":"在vs code已经安装dart、code runner插件，本地也安装完dart SDK，然后通过vs code运行dart 提示：dart : 无法将“dart”项识别为 cmdlet、函数...<br>但在cmd 控制板中就可以正常运行，这是为咋啊，vs code需要额外配置咋吗","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461223,"discussion_content":"把dart命令所在的目录设置成环境变量PATH","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565017277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357026,"user_name":"利姆露·坦派斯特","can_delete":false,"product_type":"c1","uid":2017193,"ip_address":"美国","ucode":"CAF7ED4A123973","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c7/a9/19aad8d6.jpg","comment_is_top":false,"comment_ctime":1662867674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662867674","product_id":100031001,"comment_content":"因为dart的null安全，现在要正常执行上面的代码的话。需要在ShoppingCart中对code属性以及bookings的那个属性做一些声明上的更改。使其空值安全才能通过编译。建议各位尝试 ? 跟 late 这两种方式使其空值安全。","like_count":0},{"had_liked":false,"id":345035,"user_name":"土豆土豆泥","can_delete":false,"product_type":"c1","uid":2291196,"ip_address":"","ucode":"EDB79E84DA2852","user_header":"https://static001.geekbang.org/account/avatar/00/22/f5/fc/90c92bcc.jpg","comment_is_top":false,"comment_ctime":1651966738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651966738","product_id":100031001,"comment_content":"干货满满","like_count":0},{"had_liked":false,"id":344234,"user_name":"兔斯基","can_delete":false,"product_type":"c1","uid":1061320,"ip_address":"","ucode":"146A5FE2D8B301","user_header":"https://static001.geekbang.org/account/avatar/00/10/31/c8/a64e4aef.jpg","comment_is_top":false,"comment_ctime":1651386032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651386032","product_id":100031001,"comment_content":"新版本可控字段需要标识（Dart 2.10.5）<br>String? code;<br>否则会编译不通过","like_count":0},{"had_liked":false,"id":315978,"user_name":"杰瑞","can_delete":false,"product_type":"c1","uid":1149270,"ip_address":"","ucode":"8BE822D16788A2","user_header":"https://static001.geekbang.org/account/avatar/00/11/89/56/6c1a6f22.jpg","comment_is_top":false,"comment_ctime":1634092040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634092040","product_id":100031001,"comment_content":"class Meta{<br>  String name;<br>  double price;<br>  Meta(this.name,this.price);<br>}<br><br>abstract class PrintHelper{<br>  printInfo() =&gt; print(getPrintInfo());<br><br>  String getPrintInfo();<br>}<br><br>&#47;&#47;定义商品Item类<br>class Item extends Meta with PrintHelper{<br>  int count;<br><br>  Item({name, price}) : this.withCount(name:name,price:price,count:1);<br><br>  Item.withCount({name, price, this.count}):super(name,price);<br><br>  Item operator+(Item item) =&gt; Item(name:name+item.name, price:price*count+item.price*item.count);<br><br>  @override<br>  String getPrintInfo(){<br>    return &#39;\\t  $name \\t\\t $price \\t  $count \\t ${price*count}&#39;;<br>  }<br>}<br><br>&#47;&#47;定义购物车类<br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br><br>  ShoppingCart({String name}):this.withCode(name:name, code:null);<br><br>  ShoppingCart.withCode({String name, this.code}):date = DateTime.now(),super(name,0);<br><br>  double get price =&gt; bookings.reduce((value,element) =&gt; value + element).price;<br><br>  @override<br>  String getPrintInfo(){<br>    String itemDetailPrintInfo = &#39;&#39;;<br>    bookings.forEach((item)=&gt;{<br>    itemDetailPrintInfo = itemDetailPrintInfo+item.getPrintInfo() + &#39;\\n&#39;<br>    });<br>    return &#39;&#39;&#39;<br>  购物车信息：<br>  -----------------------------<br>      用户名：$name<br>      优惠码：${code??&quot;无&quot;}<br>      总价：  $price<br>      日期：  $date<br>  -----------------------------<br><br>  商品详情：<br>  -----------------------------<br>      商品名 \\t 单价 \\t 数量 \\t 总价<br>  $itemDetailPrintInfo<br>  -----------------------------<br>  &#39;&#39;&#39;;<br>  }<br>}<br><br>void main(){<br>  ShoppingCart(name:&#39;张三&#39;)<br>  ..bookings = [Item(name:&#39;苹果&#39;,price:10.0), Item.withCount(name:&#39;鸭梨&#39;,price:50.0,count:3)]<br>  ..printInfo();<br><br>  ShoppingCart.withCode(name:&#39;李四&#39;,code:&#39;123456&#39;) <br>  ..bookings = [Item.withCount(name:&#39;香蕉&#39;,price:15.0,count:2), Item(name:&#39;西瓜&#39;,price:40.0)] <br>  ..printInfo();<br>}","like_count":0},{"had_liked":false,"id":304680,"user_name":"董鹏宇","can_delete":false,"product_type":"c1","uid":1233054,"ip_address":"","ucode":"8A722083682C8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/9e/eda4bcef.jpg","comment_is_top":false,"comment_ctime":1627547887,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627547887","product_id":100031001,"comment_content":"PrintHelper 与 ShoppingCart的关系为什么是“混入“ 而不是组合呢？感觉 是has-a的关系而不是 is-a","like_count":0},{"had_liked":false,"id":300684,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1242602,"ip_address":"","ucode":"AD19A33FE5EEDF","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/ea/5f046856.jpg","comment_is_top":false,"comment_ctime":1625303160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625303160","product_id":100031001,"comment_content":"a. 静态方法没有办法使用 this 关键字；<br>b. 构造函数或普通的实例方法里面，this 指向当前操作的实例;<br>c. 构造函数的 “:” 后面初始化那一部分，this 指向当前类。<br>--------------------------<br>不知道这个理解对不对？","like_count":0},{"had_liked":false,"id":288747,"user_name":"路口台灯","can_delete":false,"product_type":"c1","uid":1332347,"ip_address":"","ucode":"A76EB9118D5482","user_header":"https://static001.geekbang.org/account/avatar/00/14/54/7b/1b85c629.jpg","comment_is_top":false,"comment_ctime":1618652903,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618652903","product_id":100031001,"comment_content":"&#47;&#47; 针对通用字段，但是不同含义的提取到父类<br>class Mate{<br>\tdouble price;<br>\tString name;<br>\tint count;<br>\tMate(this.name,this.price,[this.count=0]);<br>}<br><br>abstract class PrintHelper{<br>\tprintInfo() =&gt; print(getInfo());<br>\tgetInfo();<br>}<br><br>&#47;&#47;定义商品Item类<br>class Item extends Mate{<br>  Item({name,price,count = 1}):super(name,price,count);<br>\t&#47;&#47; 定义商品汇总数据<br>\tItem operator + (Item item) =&gt; Item(<br>\tname:&quot;$info\\n  ${item.info}&quot;,<br>\tprice:price*count+item.price*item.count,<br>\tcount : count+item.count);<br><br>\tString get info =&gt; &quot;$name ---------- $price * $count = ${price*count}&quot;;<br>}<br><br>&#47;&#47;定义购物车类<br>class ShoppingCart extends Mate with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  &#47;&#47; 商品汇总<br>  Item get result =&gt; bookings.reduce((value,element)=&gt; value+element);<br><br>  ShoppingCart({name}) : this.withCode(name:name,code:null);<br><br>  ShoppingCart.withCode({name,this.code}):date = DateTime.now(),super(name,0);<br><br>  getInfo() =&gt; <br>&#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code ?? &quot;无&quot;} <br>  商品数量：${result.count}<br>  商品明细：<br>  ${result.name}<br>  总价:${result.price}<br>  日期:$date<br>-----------------------------<br>&#39;&#39;&#39;;<br>  <br>}<br><br><br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;,code:&#39;123456&#39;)<br>\t..bookings = [Item(name:&#39;苹果&#39;,price:10.0), Item(name:&#39;鸭梨&#39;,price:20.0)]<br>\t..printInfo();<br><br>\tShoppingCart(name:&quot;李四&quot;)<br>\t..bookings = [Item(name:&#39;香蕉&#39;,price:15.0,count:20),Item(name:&#39;西瓜&#39;,price:20.0,count:5)]<br>\t..printInfo();<br>}<br><br><br><br> run-project<br>购物车信息:<br>-----------------------------<br>  用户名: 张三<br>  优惠码: 123456 <br>  商品数量：2<br>  商品明细：<br>  苹果 ---------- 10.0 * 1 = 10.0<br>  鸭梨 ---------- 20.0 * 1 = 20.0<br>  总价:30.0<br>  日期:2021-04-17 09:48:05.424473<br>-----------------------------<br><br>购物车信息:<br>-----------------------------<br>  用户名: 李四<br>  优惠码: 无 <br>  商品数量：25<br>  商品明细：<br>  香蕉 ---------- 15.0 * 20 = 300.0<br>  西瓜 ---------- 20.0 * 5 = 100.0<br>  总价:400.0<br>  日期:2021-04-17 09:48:05.430248<br>-----------------------------<br><br>","like_count":0},{"had_liked":false,"id":280429,"user_name":"Mickey","can_delete":false,"product_type":"c1","uid":1059845,"ip_address":"","ucode":"548E950F57D2A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/05/b8e769fa.jpg","comment_is_top":false,"comment_ctime":1614215262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614215262","product_id":100031001,"comment_content":"我感觉 PrintHelper 的这个类，不是那么的原子通用，哈哈哈","like_count":0},{"had_liked":false,"id":276404,"user_name":"Q.E.D","can_delete":false,"product_type":"c1","uid":1640062,"ip_address":"","ucode":"618DD1EB30220D","user_header":"https://static001.geekbang.org/account/avatar/00/19/06/7e/daa187da.jpg","comment_is_top":false,"comment_ctime":1611911217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611911217","product_id":100031001,"comment_content":"还是要动手敲.在敲的过程中,慢慢理解了优化思路.虽然有些地方还是有些糊涂,但是我相信随着学习,肯定会掌握.","like_count":0},{"had_liked":false,"id":268210,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1334338,"ip_address":"","ucode":"3B7DFEE8686C8A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJwq3fML8licHLxk4NRJQFyuLRraKm1besOTk8yygr0KkjPfahxHtkg81UbaXFOWLCm7ichpPAXXicfw/132","comment_is_top":false,"comment_ctime":1608101532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608101532","product_id":100031001,"comment_content":"class Base {<br>  double price;<br>  String name;<br>  &#47;&#47;商品数量<br>  num commodities;<br>  Base.withCommodities({this.name, this.price, this.commodities});<br>  Base({name, price})<br>      : this.withCommodities(name: name, price: price, commodities: 0);<br>}<br><br>&#47;&#47;定义商品Item类<br>class Item extends Base with PrinterHelper {<br>  Item(name, price, commodities)<br>      : super.withCommodities(<br>            name: name, price: price, commodities: commodities);<br>  Item operator +(Item item) =&gt; Item(<br>      name + item.name,<br>      (price * commodities) + (item.price * item.commodities),<br>      item.commodities);<br><br>  getInfo() =&gt; &#39;&#39;&#39;<br>         商品名字：$name<br>         商品数量：$commodities<br>         商品单价：${price}<br>         商品总价：${commodities * price}<br>         &#39;&#39;&#39;;<br>}<br><br>abstract class PrinterHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;定义购物车类<br>class ShoppingCart extends Base with PrinterHelper {<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  double get price =&gt;<br>      bookings.reduce((value, element) =&gt; value + element).price;<br><br>  printItemInfo() =&gt; bookings.forEach((item) =&gt; print(item.getInfo()));<br><br>  &#47;&#47;打印每件商品名字，价格，数量<br><br>  ShoppingCart({name}) : this.withCode(name: name, code: null);<br>  ShoppingCart.withCode({name, this.code})<br>      : date = DateTime.now(),<br>        super(name: name, price: 0);<br><br>  getInfo() =&gt; &#39;&#39;&#39;<br>      购物车信息: <br>        -----------------------------<br>        用户名 :$name <br>        优惠码:${code ?? &quot;没有&quot;}<br>         ${(bookings.map((item) =&gt; &#39;${item.getInfo()}&#39;)).join(&#39;\\n&#39;)}<br>        总价:  $price<br>        日期: $date<br>        &#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name: &#39;张三&#39;, code: &#39;123456&#39;)<br>    ..bookings = [Item(&#39;苹果&#39;, 10.0, 10), Item(&#39;鸭梨&#39;, 20.0, 10)]<br>    ..printInfo();<br>}<br>","like_count":0},{"had_liked":false,"id":268202,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1334338,"ip_address":"","ucode":"3B7DFEE8686C8A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJwq3fML8licHLxk4NRJQFyuLRraKm1besOTk8yygr0KkjPfahxHtkg81UbaXFOWLCm7ichpPAXXicfw/132","comment_is_top":false,"comment_ctime":1608100512,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608100512","product_id":100031001,"comment_content":"class Base {<br>  double price;<br>  String name;<br>  &#47;&#47;商品数量<br>  num commodities;<br>  Base.withCommodities({this.name, this.price, this.commodities});<br>  Base({name, price})<br>      : this.withCommodities(name: name, price: price, commodities: 0);<br>}<br><br>&#47;&#47;定义商品Item类<br>class Item extends Base with PrinterHelper {<br>  Item(name, price, commodities)<br>      : super.withCommodities(<br>            name: name, price: price, commodities: commodities);<br>  Item operator +(Item item) =&gt;<br>      Item(name + item.name, price + item.price, item.commodities);<br><br>  getInfo() =&gt; &#39;&#39;&#39;<br>         商品名字：$name<br>         商品数量：$commodities<br>         商品价格：$price<br>         &#39;&#39;&#39;;<br>}<br><br>abstract class PrinterHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;定义购物车类<br>class ShoppingCart extends Base with PrinterHelper {<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  double get price =&gt;<br>      bookings.reduce((value, element) =&gt; value + element).price;<br>  <br>  <br>   printItemInfo()=&gt;<br>     bookings.forEach((item) =&gt;print(item.getInfo()));<br>    <br>  <br>  &#47;&#47;打印每件商品名字，价格，数量<br><br>  ShoppingCart({name}) : this.withCode(name: name, code: null);<br>  ShoppingCart.withCode({name, this.code})<br>      : date = DateTime.now(),<br>        super(name: name, price: 0);<br>  <br>  getInfo() =&gt; <br>    &#39;&#39;&#39;<br>      购物车信息: <br>        -----------------------------<br>        用户名 :$name <br>        优惠码:${code ?? &quot;没有&quot;}<br>         ${(bookings.map((item)=&gt;&#39;${item.getInfo()}&#39;)).join(&#39;\\n&#39;)}<br>        总价:  $price<br>        日期: $date<br>        &#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name: &#39;张三&#39;, code: &#39;123456&#39;)<br>    ..bookings = [Item(&#39;苹果&#39;, 10.0, 10), Item(&#39;鸭梨&#39;, 20.0, 10)]<br>    ..printInfo();<br>}<br>","like_count":0},{"had_liked":false,"id":261942,"user_name":"哈哈newlife","can_delete":false,"product_type":"c1","uid":1647257,"ip_address":"","ucode":"F059B05466A6F3","user_header":"https://static001.geekbang.org/account/avatar/00/19/22/99/3853424f.jpg","comment_is_top":false,"comment_ctime":1605584562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605584562","product_id":100031001,"comment_content":" ShoppingCart({name}) : this.withCode(name:name, code:null);<br>请问下老师，我看到有很多地方用这种冒号后面赋值参数或者调用方法，不是很理解这是什么用法。","like_count":0},{"had_liked":false,"id":257138,"user_name":"尼丘士多","can_delete":false,"product_type":"c1","uid":1652071,"ip_address":"","ucode":"234FAD63EB7E49","user_header":"https://static001.geekbang.org/account/avatar/00/19/35/67/725354db.jpg","comment_is_top":false,"comment_ctime":1603857678,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603857678","product_id":100031001,"comment_content":"class Meta with PrintHelper {<br>  double price;<br>  String name;<br>  Meta(this.name, this.price);<br>}<br><br>mixin PrintHelper {<br>  info(String str) =&gt; print(str);<br>}<br><br>class Cart extends Meta {<br>  double coupon;<br>  List&lt;Goods&gt; list = [];<br>  DateTime createTime;<br>  Cart({name, this.coupon = 0.0})<br>      : createTime = DateTime.now(),<br>        super(name, 0);<br>  append(List&lt;Goods&gt; data) {<br>    this.list.addAll(data);<br>  }<br><br>  double get price =&gt;<br>      this.list.reduce((value, element) =&gt; value + element).price;<br><br>  getInfo() {<br>    info(&#39;&#39;&#39;<br>      -----------订单信息-----------<br><br>      用户名：$name<br>      订单总额：$price<br>      优惠金额：$coupon<br>      实付金额：${price - coupon}<br><br>      -----------商品信息-----------<br>      &#39;&#39;&#39;);<br>    this.list.forEach((goods) =&gt; goods.getInfo());<br>  }<br>}<br><br>class Goods extends Meta {<br>  int count;<br>  String desc;<br>  Goods({name, price, this.desc, this.count = 1}) : super(name, price);<br>  Goods operator +(Goods goods) =&gt; Goods(name: &quot;&quot;, price: price + goods.price);<br>  getInfo() {<br>    info(&#39;&#39;&#39;<br>      商品名称：$name<br>      商品描述：$desc<br>      商品数量：$count<br>      商品单价：$price<br>      商品总价：${price * count}<br>    &#39;&#39;&#39;);<br>  }<br>}<br><br>main() {<br>  final cart = Cart(name: &quot;zhuyaqi&quot;, coupon: 110);<br>  cart.append([<br>    Goods(name: &quot;旺财(英国短毛猫)&quot;, price: 10000000000.00, desc: &quot;不卖只是秀一下胖财财～&quot;),<br>    Goods(<br>        name: &quot;翠花(华为蓝牙耳机freelacePro)&quot;,<br>        price: 549.00,<br>        desc: &quot;二手耳机，原价出售！&quot;,<br>        count: 3),<br>    Goods(name: &quot;路虎(石头扫地机器人)&quot;, price: 1599.00, desc: &quot;旺财座驾，低价甩卖！&quot;, count: 8),<br>  ]);<br>  cart.getInfo();<br>}<br><br>运行结果：<br><br>      -----------订单信息-----------<br><br>      用户名：zhuyaqi<br>      订单总额：10000002148.0<br>      优惠金额：110.0<br>      实付金额：10000002038.0<br><br>      -----------商品信息-----------<br>      <br>      商品名称：旺财(英国短毛猫)<br>      商品描述：不卖只是秀一下胖财财～<br>      商品数量：1<br>      商品单价：10000000000.0<br>      商品总价：10000000000.0<br>    <br>      商品名称：翠花(华为蓝牙耳机freelacePro)<br>      商品描述：二手耳机，原价出售！<br>      商品数量：3<br>      商品单价：549.0<br>      商品总价：1647.0<br>    <br>      商品名称：路虎(石头扫地机器人)<br>      商品描述：旺财座驾，低价甩卖！<br>      商品数量：8<br>      商品单价：1599.0<br>      商品总价：12792.0","like_count":0},{"had_liked":false,"id":247871,"user_name":"SeanZ","can_delete":false,"product_type":"c1","uid":1198916,"ip_address":"","ucode":"4A70464B7D6E42","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/44/ebf83cdc.jpg","comment_is_top":false,"comment_ctime":1599899198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599899198","product_id":100031001,"comment_content":"<br>class Meta {<br>  double price;<br>  String name;<br>  &#47;&#47;成员变量初始化语法糖<br>  Meta(this.name, this.price);<br>}<br><br>class Item extends Meta{<br>  int count;<br>  Item(name, price, this.count) : super(name, price);<br>  &#47;&#47;重载+运算符，将商品对象合并为套餐商品<br>  Item operator+(Item item) =&gt; Item(name + item.name, price*count + item.price*item.count, count + item.count);<br>  printInfo() =&gt; &#39;&#39;&#39;<br>  $name  $count 单价：$price 小计：${price*count}<br>  &#39;&#39;&#39;;<br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;with表示以非继承的方式复用了另一个类的成员变量及函数<br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  &#47;&#47;以归纳合并方式求和<br>  double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;<br>  &#47;&#47;默认初始化函数，转发至withCode函数<br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br>  &#47;&#47;withCode初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0);<br><br>  getItemInfo(){<br>    String itemsInfo=&#39;&#39;;<br>    for (var item in bookings) {<br>      itemsInfo += item.printInfo();<br>    }<br>    return itemsInfo;<br>  }<br><br>  &#47;&#47;??运算符表示为code不为null，则用原值，否则使用默认值&quot;没有&quot;<br>  @override<br>  getInfo() =&gt; &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code??&quot;没有&quot;}<br>  ${getItemInfo()}<br>  总价: $price<br>  Date: $date<br>-----------------------------<br>&#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;, code:&#39;123456&#39;)<br>    ..bookings = [Item(&#39;苹果&#39;,10.0,1), Item(&#39;鸭梨&#39;,20.0,2)]<br>    ..printInfo();<br><br>  ShoppingCart(name:&#39;李四&#39;)<br>    ..bookings = [Item(&#39;香蕉&#39;,15.0,5), Item(&#39;西瓜&#39;,40.0,1)]<br>    ..printInfo();<br>}","like_count":0},{"had_liked":false,"id":245460,"user_name":"许先森","can_delete":false,"product_type":"c1","uid":1795371,"ip_address":"","ucode":"1F42D4A6B5C6AF","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","comment_is_top":false,"comment_ctime":1598948946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598948946","product_id":100031001,"comment_content":"class Item extends Meta {<br>&#47;&#47;  double price;<br>&#47;&#47;  String name;<br><br>&#47;&#47;  Item(name, price) {<br>&#47;&#47;    this.name = name;<br>&#47;&#47;    this.price = price;<br>&#47;&#47;  }<br>&#47;&#47;改造后<br>  int count;<br><br>  Item(name, price, this.count) : super(name, price);<br><br>&#47;&#47;改造后<br>  Item operator +(Item i) =&gt;<br>      Item(name + i.name, price * count + i.price * count, count + i.count);<br><br>  @override<br>  String toString() {<br>    return &#39;Item{name: $name price: $price count: $count}&#39;;<br>  }<br>}<br>@override<br>  getInfo() {<br>    return &quot;&quot;&quot;<br>    购物车信息:<br>    -----------------------------<br>    用户名: $name<br>    优惠码: ${code ?? &quot;没有&quot;}<br>    商品：$bookings<br>    总价: $price<br>    日期: $date<br>    -----------------------------&quot;&quot;&quot;;","like_count":0},{"had_liked":false,"id":235973,"user_name":"伊利丹怒风","can_delete":false,"product_type":"c1","uid":1042222,"ip_address":"","ucode":"D4C3DC84E7020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/2e/f317f6ad.jpg","comment_is_top":false,"comment_ctime":1595258743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595258743","product_id":100031001,"comment_content":"用重构的方式来讲解Dart这门到处都是语法糖的语言很合适，赞👍话说，Dart让我想到了Ruby...","like_count":0},{"had_liked":false,"id":222288,"user_name":"奚新海","can_delete":false,"product_type":"c1","uid":2018568,"ip_address":"","ucode":"51EF9CEB8AF9C1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9cgDYOXqkjhu4mFbmaeS6EYRo9wBibb4ib9sZo7pZ8djIZ9BMuyNmB3C67XmoMzSBShr8sF3ibA9VA/132","comment_is_top":false,"comment_ctime":1590738660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590738660","product_id":100031001,"comment_content":"void main() {<br>  ShoppingCart.withCode(name: &#39;xxh&#39;, code: &#39;111111&#39;)<br>  ..bookings = [Item(&#39;AAAA&#39;, 15.0, 1), Item(&#39;bbbb&#39;, 1.0, 2), Item(&#39;CCCC&#39;, 1.0, 3)]<br>  ..printIofo();<br>}<br><br>class Meta {<br>  double price;<br>  String name;<br>  int count;<br>  Meta(this.name, this.price, this.count);<br>}<br><br>&#47;&#47;定义商品Item类<br>class Item extends Meta {<br>  Item(name, price, count) : super (name, price, count);<br>  &#47;&#47;重载运算符<br>  Item operator + (Item item) =&gt; Item(name + item.name, price + (item.price * item.count), count + item.count);<br>}<br><br>abstract class PrintHelper{<br>  printIofo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;定义购物车类<br>class ShoppingCart extends Meta with PrintHelper {<br>  DateTime date;<br>  String code;<br>  String items;<br>  List&lt;Item&gt; bookings;<br>  &#47;&#47;归纳合并<br>  double get price =&gt; bookings.reduce((valbe, element) =&gt; valbe + element).price;<br>  int get count =&gt; bookings.reduce((valbe, element) =&gt; valbe + element).count;<br><br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br><br>  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0,0);<br>  <br>  @override<br>  String getInfo() {<br>    String bookingsResult = &#39;     &#39;;<br>    bookings.forEach((item) =&gt; bookingsResult += &#39;  商品名称：${item.name} 单价：${item.price} 数量 ：${item.count} 总价：${item.price*item.count}\\n&#39;);<br>    return &#39;&#39;&#39;<br>      购物车信息:<br>  -----------------------------<br>  用户名: $name<br>  优惠码: ${code??&quot;没有&quot;}<br>  商品明细:<br>  $bookingsResult<br>  总价: $price<br>  数量: $count<br>  Date: $date<br>  -----------------------------<br>  &#39;&#39;&#39;;<br>  }<br>}","like_count":0},{"had_liked":false,"id":216963,"user_name":"dstweihao","can_delete":false,"product_type":"c1","uid":1089469,"ip_address":"","ucode":"6542E27AC85C7A","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/bd/48e8b958.jpg","comment_is_top":false,"comment_ctime":1589378047,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589378047","product_id":100031001,"comment_content":"边学边敲才有用的。","like_count":0},{"had_liked":false,"id":216420,"user_name":"Geek_7ec181","can_delete":false,"product_type":"c1","uid":1981769,"ip_address":"","ucode":"A739EC6E056175","user_header":"","comment_is_top":false,"comment_ctime":1589256274,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589256274","product_id":100031001,"comment_content":"ShoppingCart(this.name, this.code) : date = DateTime.now(); 这句怎么解释啊 那个：date 啥意思","like_count":0},{"had_liked":false,"id":214436,"user_name":"Geek_d7ea11","can_delete":false,"product_type":"c1","uid":1603717,"ip_address":"","ucode":"0FEF691CF21C79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIBC94guaFqiaSlFhyibfo6kySHPqJCfQKzzz8JwumEMGiaVDfXJTbFAMK4vS6t9UJib4S8icmtsd7NAsg/132","comment_is_top":false,"comment_ctime":1588749363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588749363","product_id":100031001,"comment_content":"operator操作符 和reduce这里讲的不是太明确，自己去补习了下。<br>这里重载了Item 的+ 运算符，和后面reduce的操作合并来看<br>Item operator+(Item item) =&gt; Item(this.name + item.name, this.price + item.price);<br>double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;<br><br>这里的value 就是item的this   element就是item   即前一个是调用对象   后一个是传入的参数","like_count":0},{"had_liked":false,"id":214233,"user_name":"Eli","can_delete":false,"product_type":"c1","uid":1598571,"ip_address":"","ucode":"EC0B0F658A3DE0","user_header":"https://static001.geekbang.org/account/avatar/00/18/64/6b/fc343e70.jpg","comment_is_top":false,"comment_ctime":1588681551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588681551","product_id":100031001,"comment_content":"dart的数组也支持map filter? 网上很少讲到dart内置哪些fp. 老师空闲可不可以分享一下:)","like_count":0},{"had_liked":false,"id":210673,"user_name":"九亿","can_delete":false,"product_type":"c1","uid":1484925,"ip_address":"","ucode":"911BEAE4C9837E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqc99tk0dSHjUGLoZgNI8EFNVeT7kfz9B3p91ztiaMxFaWiciaMUaPt3GSiaYu0ARcAJtylNicj3GQs4rg/132","comment_is_top":false,"comment_ctime":1587805886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587805886","product_id":100031001,"comment_content":"class Meta {<br>  double price;<br>  String name;<br>  &#47;&#47;成员变量初始化语法糖<br>  Meta(this.name, this.price);<br>}<br><br>class Item extends Meta{<br>  int count;<br><br>  Item(name, price,this.count) : super(name, price);<br>  &#47;&#47;重载+运算符，将商品对象合并为套餐商品<br>  Item operator+(Item item) =&gt; Item(name + item.name, price*count + (item.price*item.count),count+item.count); <br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;with表示以非继承的方式复用了另一个类的成员变量及函数<br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  &#47;&#47;以归纳合并方式求和<br>  double get price =&gt; bookings.reduce((value, element) =&gt;<br>  value + element).price;<br>  int get count=&gt;bookings.reduce((value, element) =&gt; value + element).count;<br>  &#47;&#47;默认初始化函数，转发至withCode函数<br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br>  &#47;&#47;withCode初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0);<br><br>  &#47;&#47;??运算符表示为code不为null，则用原值，否则使用默认值&quot;没有&quot;<br>  @override<br>  getInfo() =&gt; &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code??&quot;没有&quot;}<br>  数量:$count<br>  总价: $price<br>  Date: $date<br>-----------------------------<br>&#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;, code:&#39;123456&#39;)<br>  ..bookings = [Item(&#39;苹果&#39;,10.0,20), Item(&#39;鸭梨&#39;,20.0,10)]<br>  ..printInfo();<br><br>  ShoppingCart(name:&#39;李四&#39;)<br>  ..bookings = [Item(&#39;香蕉&#39;,15.0,2), Item(&#39;西瓜&#39;,40.0,2)]<br>  ..printInfo();<br>}","like_count":0},{"had_liked":false,"id":178958,"user_name":"Geek_473879","can_delete":false,"product_type":"c1","uid":1843920,"ip_address":"","ucode":"D7F4C74F6D0030","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7h2t7ZmOZEpzazicoHF0ricTvaObicQCYZpolMz38tnPzcV1KywglcTibf6yPY0JLc4PWA3LtapgJKg/132","comment_is_top":false,"comment_ctime":1581863606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581863606","product_id":100031001,"comment_content":"交作业了<br><br><br>class Meta {<br>  double price;<br>  String name;<br>  num number;<br>  &#47;&#47;成员变量初始化语法糖<br>  Meta(this.name, this.price,this.number);<br>}<br><br>class Item extends Meta{<br>  Item(name, price,number) : super(name, price,number);<br>  &#47;&#47;重载+运算符，将商品对象合并为套餐商品<br>  Item operator+(Item item) =&gt; Item(name + item.name, price + item.price,number+item.number);<br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;with表示以非继承的方式复用了另一个类的成员变量及函数<br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br><br>  String code;<br>  List&lt;Item&gt; bookings;<br><br><br><br>  &#47;&#47;以归纳合并方式求和<br>  double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;<br><br>  num get number =&gt; bookings.reduce((value, element) =&gt; value + element).number;&#47;&#47;商品的总数量<br>  &#47;&#47;默认初始化函数，转发至withCode函数<br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br>  &#47;&#47;withCode初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0,0);<br><br>  &#47;&#47;??运算符表示为code不为null，则用原值，否则使用默认值&quot;没有&quot;<br>  @override<br>  getInfo() {<br>    String shopListInfo = &#39;商品明细 \\n  &#39;;<br><br>    bookings.forEach((item){<br>      shopListInfo +=&#39; 商品名称: ${item.name} 数量：${item.number} 单价:${item.price} \\n  &#39;;<br>    });<br>    shopListInfo = shopListInfo.substring(0, shopListInfo.lastIndexOf(&#39;\\n&#39;));<br>    return<br>  &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code??&quot;没有&quot;}<br>  总价: $price<br>  $shopListInfo<br>  总数量:$number<br>  Date: $date<br>-----------------------------<br>&#39;&#39;&#39;;<br>  }<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;, code:&#39;123456&#39;)<br>    ..bookings = [Item(&#39;苹果&#39;,10.0,1), Item(&#39;鸭梨&#39;,20.0,2)]<br>    ..printInfo();<br><br>  ShoppingCart(name:&#39;李四&#39;)<br>      ..bookings = [Item(&#39;香蕉&#39;,15.0,3), Item(&#39;西瓜&#39;,40.0,4)]<br>    ..printInfo();<br>}","like_count":0},{"had_liked":false,"id":178201,"user_name":"Geek_310119","can_delete":false,"product_type":"c1","uid":1861748,"ip_address":"","ucode":"D67BC62CEF753F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyNezT33TyZVX46z0ZSKpc5yqfyMlLndfRYRlq4qDn0MMVenaQsMib1hyQX2vX3ZHLORP0nFuss8w/132","comment_is_top":false,"comment_ctime":1581606978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581606978","product_id":100031001,"comment_content":"使用reduce和运算符重载会实例化很多次Item对象吧?","like_count":0},{"had_liked":false,"id":169537,"user_name":"jianwei","can_delete":false,"product_type":"c1","uid":1621006,"ip_address":"","ucode":"B62E46E862AF6D","user_header":"https://static001.geekbang.org/account/avatar/00/18/bc/0e/c76861eb.jpg","comment_is_top":false,"comment_ctime":1578374189,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578374189","product_id":100031001,"comment_content":"```<br>abstract class PrintHelper {<br>  printItemInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>class Meta {<br>  double price;<br>  String name;<br>  int count;<br>  Meta(this.name, this.price, this.count);<br>}<br><br>&#47;&#47; 定义商品类<br>class Item extends Meta {<br>  &#47;&#47; 商品名称、商品价格、商品数量<br>  Item(name, price, count) : super(name, price, count);<br><br>  Item operator+(Item item) =&gt; Item(name + item.name, price + item.price, count + item.count);<br>}<br><br>&#47;&#47; 定义购物车类<br>class ShoppingCart extends Meta with PrintHelper {<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br><br>  &#47;&#47; 计算总价格<br>  double get price {<br>    double totalPrice = 0;<br>    bookings.forEach((item)=&gt; totalPrice += (item.price * item.count));<br>    return totalPrice;<br>  }<br>  &#47;&#47; 计算商品总数量<br>  int get count =&gt; bookings.reduce((cur, next) =&gt; cur + next).count;<br><br>  &#47;&#47; 构造函数<br>  ShoppingCart({name}) : this.withCode(name: name, code: null);<br>  ShoppingCart.withCode({name, this.code, count}) : date = DateTime.now(), super(name, 0, 0);<br><br>  &#47;&#47; 打印信息<br><br>  getInfo() {<br>    String bookingsResult = &quot;商品详情\\n&quot;;<br>    bookings.forEach((item) =&gt; bookingsResult += &#39;商品名：${item.name} 商品单价：${item.price} 商品数量：${item.count} \\n&#39;);<br><br>    return &#39;&#39;&#39;<br>    购物车信息:<br>    ----------------------------- <br>    用户名: $name<br>    优惠码: ${code??&quot;没有&quot;}<br>    商品详情: $bookingsResult<br>    总价: $price<br>    总数量: $count<br>    Date: $date<br>    -----------------------------<br>    &#39;&#39;&#39;;<br>  }<br>}<br>```","like_count":0},{"had_liked":false,"id":164698,"user_name":"加温后的啤酒","can_delete":false,"product_type":"c1","uid":1344488,"ip_address":"","ucode":"5F30978CDB1606","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/e8/f726c635.jpg","comment_is_top":false,"comment_ctime":1577075914,"is_pvip":false,"replies":[{"id":"63408","content":"赞","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1577439931,"ip_address":"","comment_id":164698,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577075914","product_id":100031001,"comment_content":"直接通过mixin关键字定义PrintHelper也比较简单：<br>mixin  PrintHelper {<br>  void printInfo() =&gt; print(getInfo());<br>  String getInfo();<br>}<br><br>","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478868,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577439931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164593,"user_name":"庆","can_delete":false,"product_type":"c1","uid":1070453,"ip_address":"","ucode":"9ACB2EC0F4CE08","user_header":"https://static001.geekbang.org/account/avatar/00/10/55/75/7045c225.jpg","comment_is_top":false,"comment_ctime":1577042392,"is_pvip":false,"replies":[{"id":"63414","content":"你这段代码没计算数量啊","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1577445498,"ip_address":"","comment_id":164593,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577042392","product_id":100031001,"comment_content":"<br>class Meta {<br>  double price;<br>  String name;<br>  &#47;&#47;成员变量初始化语法糖<br>  Meta(this.name, this.price);<br>}<br><br>class Item extends Meta{<br>  Item(name, price) : super(name, price);<br>  &#47;&#47;重载+运算符，将商品对象合并为套餐商品<br>  Item operator+(Item item) =&gt; Item(name + item.name, price + item.price); <br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;with表示以非继承的方式复用了另一个类的成员变量及函数<br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  &#47;&#47;以归纳合并方式求和<br>  double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;<br>  &#47;&#47;默认初始化函数，转发至withCode函数<br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br>  &#47;&#47;withCode初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0);<br><br>  &#47;&#47;??运算符表示为code不为null，则用原值，否则使用默认值&quot;没有&quot;<br>  @override<br>  getInfo() =&gt; &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code??&quot;没有&quot;}<br>  总价: $price<br>  Date: $date<br>  物品数量: ${bookings.length}<br>&#39;&#39;&#39;;<br><br>printDetails(){<br>   bookings.forEach((item){<br>     print(&quot;物品 &quot;+item.name + &quot; 价格 ${item.price}&quot;);<br>   });<br><br>   print(&quot;-----------------------------&quot;);<br><br>}<br><br>}<br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;, code:&#39;123456&#39;)<br>  ..bookings = [Item(&#39;苹果&#39;,10.0), Item(&#39;鸭梨&#39;,20.0)]<br>  ..printInfo()<br>  ..printDetails();<br><br>  ShoppingCart(name:&#39;李四&#39;)<br>  ..bookings = [Item(&#39;香蕉&#39;,15.0), Item(&#39;西瓜&#39;,40.0)]<br>  ..printInfo()<br>  ..printDetails();<br>}","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478831,"discussion_content":"你这段代码没计算数量啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577445498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160178,"user_name":"DERUWE","can_delete":false,"product_type":"c1","uid":1399643,"ip_address":"","ucode":"5A675D0D81FC3B","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/5b/6980ae63.jpg","comment_is_top":false,"comment_ctime":1575886018,"is_pvip":false,"replies":[{"id":"61953","content":"这只是一个加号运算符，最后bookings变为1还需要使用reduce来做迭代累计额","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1576665726,"ip_address":"","comment_id":160178,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575886018","product_id":100031001,"comment_content":"使用了这个Item operator+(Item item) =&gt; Item(name + item.name, price + item.price);最后的bookings就变为长度为1的吗","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477282,"discussion_content":"这只是一个加号运算符，最后bookings变为1还需要使用reduce来做迭代累计额","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576665726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154282,"user_name":"信仰年轻","can_delete":false,"product_type":"c1","uid":1329011,"ip_address":"","ucode":"B2BD881D25FCDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/47/73/63a3cb41.jpg","comment_is_top":false,"comment_ctime":1574403508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574403508","product_id":100031001,"comment_content":"操作符重载，在kotlin  c++里面都有的，用法跟dart一模一样啊","like_count":0},{"had_liked":false,"id":153091,"user_name":"icer","can_delete":false,"product_type":"c1","uid":1123900,"ip_address":"","ucode":"51A1734F68900D","user_header":"https://static001.geekbang.org/account/avatar/00/11/26/3c/9ef80bfe.jpg","comment_is_top":false,"comment_ctime":1574155674,"is_pvip":false,"replies":[{"id":"59801","content":"赞👍","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574755616,"ip_address":"","comment_id":153091,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574155674","product_id":100031001,"comment_content":"class Meta {<br>  double price;<br>  String name;<br>  Meta(this.name,this.price);<br>}<br><br>class Item2 extends Meta {<br>  int num;<br>  Item2(String name, double price,{this.num=1}) :super(name, price);<br>  Item2 operator + (Item2 item) =&gt; Item2(name + item.name,price * num + item.price * item.num);<br>}<br><br>abstract class printHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>class ShoppingCart2 extends Meta with printHelper {<br>  DateTime date;<br>  String code;<br>  List&lt;Item2&gt; bookings;<br><br>  ShoppingCart2({name}) : this.withCode(name:name,code:null);<br>  ShoppingCart2.withCode({name,this.code}) : date = DateTime.now(),super(name, 0);<br><br>  double get price =&gt; bookings.reduce((value,element) =&gt; value + element).price;<br><br>  String get cardInfo {<br>    String str = &quot;&quot;;<br>    bookings.forEach((v) =&gt;<br>    str +=&#39;${v.name} ----- ${v.num}\\n&#39;);<br>    return str;<br>  }<br><br>  getInfo() {<br>    return<br>          &quot;&quot;&quot;<br>        购物车信息:<br>        -----------------------------<br>        用户名: $name<br>        优惠码: ${code??&quot;没有&quot;}<br>        $cardInfo<br>        总价:   $price<br>        日期:   $date<br>        -----------------------------<br>        &quot;&quot;&quot;;<br>  }<br>","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475040,"discussion_content":"赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574755616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150284,"user_name":"一个工匠","can_delete":false,"product_type":"c1","uid":1038449,"ip_address":"","ucode":"2168BA6F926074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/71/d6f79534.jpg","comment_is_top":false,"comment_ctime":1573501291,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573501291","product_id":100031001,"comment_content":"666","like_count":0},{"had_liked":false,"id":148925,"user_name":"入夜、渐微凉","can_delete":false,"product_type":"c1","uid":1728818,"ip_address":"","ucode":"5DF20DE7EC67B4","user_header":"https://static001.geekbang.org/account/avatar/00/1a/61/32/e9046955.jpg","comment_is_top":false,"comment_ctime":1573111081,"is_pvip":false,"replies":[{"id":"59794","content":"计算价格的时候，商品单价要乘以数量；商品合并的时候，数量要置为1<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1574754915,"ip_address":"","comment_id":148925,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573111081","product_id":100031001,"comment_content":"在一个道友的回答上稍加改动，加了一个商品总数和购物车为空的情况，老师帮忙看看有没有可以优化的地方。<br>class Meta {<br>  double price;<br>  String name;<br>  String info;<br>  &#47;&#47;成员变量初始化语法糖<br>  Meta(this.name, this.price);<br>}<br>class Item extends Meta {<br>  int count;<br>  Item(name, price, {int count = 1}) : super(name, price) {<br>    this.count = count;<br>    this.info = &#39;&#39;&#39;<br> 商品名: $name<br>   单价: $price<br>   数量: $count<br>   ---------------<br>  &#39;&#39;&#39;;<br>  }<br>  <br>  Item operator +(Item item) =&gt;<br>      Item(name + item.name, price + item.price, count: count + item.count);<br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;with表示以非继承的方式复用了另一个类的成员变量及函数<br>class ShoppingCart extends Meta with PrintHelper {<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  &#47;&#47;以归纳合并方式求和<br>  double get price =&gt;bookings != null ?<br>      bookings.reduce((value, element) =&gt; value + element).price : 0.00;<br>  int get count =&gt; bookings != null ? bookings.reduce((value, element) =&gt; value + element).count : 0;<br>  &#47;&#47;默认初始化函数，转发至withCode函数<br>  ShoppingCart({name, List&lt;Item&gt; bookings})<br>      : this.withCode(name: name, code: null, bookings: bookings);<br>  &#47;&#47;withCode初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code, this.bookings})<br>      : date = DateTime.now(),<br>        super(name, 0) {<br>        if (bookings != null) {<br>            String str = &quot;&quot;;<br>            for (Item item in bookings) {<br>              str += item.info;<br>            }<br>            info = str;<br>        }<br>  }<br><br>  &#47;&#47;??运算符表示为code不为null，则用原值，否则使用默认值&quot;没有&quot;<br>  @override<br>  getInfo() =&gt; &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code ?? &quot;没有&quot;}<br>  商品总数: $count<br>  总价: $price<br>  Date: $date<br>  商品列表: <br>  ${info ?? &quot;购物车为空&quot;}<br>-----------------------------<br>&#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(<br>      name: &#39;张三&#39;,<br>      code: &#39;123456&#39;,<br>      bookings: [Item(&#39;苹果&#39;, 10.0, count: 1), Item(&#39;鸭梨&#39;, 20.0, count: 2)])<br>    ..printInfo();<br><br>  ShoppingCart(<br>      name: &#39;李四&#39;, bookings: [Item(&#39;香蕉&#39;, 15.0), Item(&#39;西瓜&#39;, 40.0, count: 4)])<br>    ..printInfo();<br><br>  ShoppingCart(name: &#39;王五&#39;)..printInfo();<br>}","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473669,"discussion_content":"计算价格的时候，商品单价要乘以数量；商品合并的时候，数量要置为1\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574754915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145069,"user_name":"狗子不要喝奶茶","can_delete":false,"product_type":"c1","uid":1348475,"ip_address":"","ucode":"CFA6E96B5F9D0C","user_header":"https://static001.geekbang.org/account/avatar/00/14/93/7b/97d45363.jpg","comment_is_top":false,"comment_ctime":1572179601,"is_pvip":false,"replies":[{"id":"56192","content":"会有的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1572321397,"ip_address":"","comment_id":145069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572179601","product_id":100031001,"comment_content":"如果方便的话 能否附上课后问题的 解法。方便对一下~自己的思路","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472230,"discussion_content":"会有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572321397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141217,"user_name":"菜头","can_delete":false,"product_type":"c1","uid":1456964,"ip_address":"","ucode":"C5E95519F9EA21","user_header":"https://static001.geekbang.org/account/avatar/00/16/3b/44/dd534c9b.jpg","comment_is_top":false,"comment_ctime":1571129846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571129846","product_id":100031001,"comment_content":"多构造函数？","like_count":0},{"had_liked":false,"id":135408,"user_name":"JW","can_delete":false,"product_type":"c1","uid":1180823,"ip_address":"","ucode":"1078B9415C1176","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/97/80740db0.jpg","comment_is_top":false,"comment_ctime":1569149438,"is_pvip":false,"replies":[{"id":"52126","content":"查下你的构造方法声明","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1569337607,"ip_address":"","comment_id":135408,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569149438","product_id":100031001,"comment_content":"老师好！我运行代码出现这个错误，是环境的问题吗？<br><br>Unhandled exception:<br>NoSuchMethodError: No static method &#39;withCode&#39; declared in class &#39;ShoppingCart&#39;.<br>Receiver: ShoppingCart<br>Tried calling: withCode(name: &quot;张三&quot;, code: &quot;123456&quot;)<br>#0      NoSuchMethodError._throwNew (dart:core-patch&#47;dart:core&#47;errors_patch.dart:203)<br>#1      main (file:&#47;&#47;&#47;Users&#47;jw&#47;flutter_app&#47;lib&#47;dart_sample.dart:55:16)<br>#2      _startIsolate.&lt;anonymous closure&gt; (dart:isolate-patch&#47;dart:isolate&#47;isolate_patch.dart:279)<br>#3      _RawReceivePortImpl._handleMessage (dart:isolate-patch&#47;dart:isolate&#47;isolate_patch.dart:165)","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468176,"discussion_content":"查下你的构造方法声明","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569337607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129485,"user_name":"Lihyper","can_delete":false,"product_type":"c1","uid":1640695,"ip_address":"","ucode":"77B6F9D695C610","user_header":"https://static001.geekbang.org/account/avatar/00/19/08/f7/2c3238bd.jpg","comment_is_top":false,"comment_ctime":1567136901,"is_pvip":false,"replies":[{"id":"49834","content":"有两个问题：<br>1.商品合并后，count需要置为1，而不能做累加。比如五斤苹果和三盒巧克力做合并，结果是一份巧克力苹果套餐，而不是8份巧克力苹果套餐。<br>2.为什么ShopCart的两个初始化方法提供的参数一模一样呢？","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1567751898,"ip_address":"","comment_id":129485,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567136901","product_id":100031001,"comment_content":"交作业了,老师<br><br>main() {<br>  ShopCart.withCode(&quot;张三&quot;, &quot;123456&quot;)<br>    ..bookings = [Item(&quot;苹果&quot;, 10.0, 3), Item(&quot;樱桃&quot;, 100.0, 1)]<br>    ..printInfo();<br>}<br><br>class Meta {<br>  double price;<br>  String name;<br>  int count;<br><br>  Meta(this.name, this.price, this.count);<br>}<br><br>class Item extends Meta {<br>  Item(name, price, count) : super(name, price, count);<br><br>  Item operator +(Item other) =&gt; Item(name + other.name,<br>      price * count + other.price * other.count, count + other.count);<br>}<br><br>class ShopCart extends Meta with PrintHelper {<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  DateTime date;<br><br>  &#47;&#47; 没有重载,所以出现了可选参数<br>  &#47;&#47;ShopCart(String name) : this.withCode(name,null);<br><br>  ShopCart(String name, String code) : this.withCode(name, code);<br><br>  ShopCart.withCode(String name, this.code)<br>      : date = DateTime.now(),<br>        super(name, 0, 0);<br><br>  get price {<br>    &#47;&#47;a??b运算符a!=null ? a:b;<br>    if (bookings == null || bookings.isEmpty) {<br>      return 0;<br>    }<br>    return bookings.reduce((value, element) =&gt; value + element).price;<br>  }<br><br>  get count {<br>    if (bookings == null || bookings.isEmpty) {<br>      return 0;<br>    }<br>    return bookings.reduce((value, element) =&gt; value + element).count;<br>  }<br><br>  getListInfo() {<br>    String bookInfo = &quot;&quot;;<br>    if (bookings == null || bookings.isEmpty) {<br>      return bookInfo;<br>    }<br>    bookings.forEach((item) =&gt;<br>        bookInfo += &quot;商品名称:${item.name} 单价:${item.price} 数量:${item.count}\\n&quot;);<br>    return bookInfo;<br>  }<br><br>  getInfo() =&gt; &#39;&#39;&#39;<br>  购物车信息:<br>  ---------------------<br>  用户名: $name <br>  优惠码: ${code ?? &quot;没有&quot;}<br>  商品明细:\\n ${getListInfo()}<br>  总价: $price<br>  总数量: $count<br>  Date: $date<br>  ---------------------<br>  <br>  &#39;&#39;&#39;;<br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br><br>  getInfo();<br>}","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465500,"discussion_content":"有两个问题：\n1.商品合并后，count需要置为1，而不能做累加。比如五斤苹果和三盒巧克力做合并，结果是一份巧克力苹果套餐，而不是8份巧克力苹果套餐。\n2.为什么ShopCart的两个初始化方法提供的参数一模一样呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567751898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127103,"user_name":"Geek_614299","can_delete":false,"product_type":"c1","uid":1565894,"ip_address":"","ucode":"6006B801D5A4C6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK95MP7iatc1WcDdusl6mWibiaGXQebI2WFbfTjANfH2eaQX07u7nTnQ6JGOaYKibXYOjPwXDT2FBhUXg/132","comment_is_top":false,"comment_ctime":1566553868,"is_pvip":false,"replies":[{"id":"47055","content":"1.是的<br>2.对；重写属性的读方法必须要带get","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566581044,"ip_address":"","comment_id":127103,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566553868","product_id":100031001,"comment_content":"ShoppingCart类中的 double get price {...}看不懂，意思是重写Meta类中price属性？一定要带get（或者get的意思）？来自js开发者的二连问号<br>","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464321,"discussion_content":"1.是的\n2.对；重写属性的读方法必须要带get","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566581044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123841,"user_name":"🌙","can_delete":false,"product_type":"c1","uid":1606578,"ip_address":"","ucode":"D70F6C3AF8AA1B","user_header":"https://static001.geekbang.org/account/avatar/00/18/83/b2/e83dd93c.jpg","comment_is_top":false,"comment_ctime":1565769700,"is_pvip":false,"replies":[{"id":"45384","content":"对，注意看重载的+运算符，是商品对象的合并","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565775750,"ip_address":"","comment_id":123841,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565769700","product_id":100031001,"comment_content":"double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;这个name也会拼接起来？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462837,"discussion_content":"对，注意看重载的+运算符，是商品对象的合并","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565775750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123477,"user_name":"曹昆","can_delete":false,"product_type":"c1","uid":1137062,"ip_address":"","ucode":"C45A2D716B291C","user_header":"https://static001.geekbang.org/account/avatar/00/11/59/a6/4e185fcb.jpg","comment_is_top":false,"comment_ctime":1565684458,"is_pvip":false,"replies":[{"id":"45308","content":"get表示属性的读方法。<br>普通函数如果没有返回值，函数声明时可以写void，也可以省略","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565695347,"ip_address":"","comment_id":123477,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565684458","product_id":100031001,"comment_content":"老师，double get price {...}这个语法是什么意思啊？还有dart方法不用写返回值得吗？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462692,"discussion_content":"get表示属性的读方法。\n普通函数如果没有返回值，函数声明时可以写void，也可以省略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565695347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123190,"user_name":"Bryan","can_delete":false,"product_type":"c1","uid":1037208,"ip_address":"","ucode":"BA9D6A278609F3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/98/60d13550.jpg","comment_is_top":false,"comment_ctime":1565622959,"is_pvip":true,"replies":[{"id":"46703","content":"先说结论：完全没影响。客户端的性能问题通常发生在渲染、大量CPU密集型运算和大型对象的内存分配上，而我们这个demo是一个控制台程序。耗费不超过50个字节的内存资源、10个时钟周期的CPU，这些对于单片机而言都是微乎其微的资源损耗，就能够把运算符重载和归纳合并这两个知识点讲清楚，是值得的，代码结构也更清晰了，可读性也更强了，不是么？不要浪费时间在不重要的事情上：）","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566381199,"ip_address":"","comment_id":123190,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565622959","product_id":100031001,"comment_content":"get price 利用 reduce 的方法那里，每次 reduce 都会调用重载的 + 造成一个新类的实例化，这样不会影响性能吗？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462573,"discussion_content":"先说结论：完全没影响。客户端的性能问题通常发生在渲染、大量CPU密集型运算和大型对象的内存分配上，而我们这个demo是一个控制台程序。耗费不超过50个字节的内存资源、10个时钟周期的CPU，这些对于单片机而言都是微乎其微的资源损耗，就能够把运算符重载和归纳合并这两个知识点讲清楚，是值得的，代码结构也更清晰了，可读性也更强了，不是么？不要浪费时间在不重要的事情上：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566381199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003097,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4e/59/cdd842b2.jpg","nickname":"zhengfc","note":"","ucode":"9DBB9F6F11D3C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54855,"discussion_content":"mapreduce这种函数式编程可读性还真不如原始的直接累加求和方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574319717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122650,"user_name":"Todd","can_delete":false,"product_type":"c1","uid":1266101,"ip_address":"","ucode":"6D9E032A649244","user_header":"https://wx.qlogo.cn/mmopen/vi_32/pYVcoj11tKBribn2L05X16icJ4hkMg7fh0iaAnZjGfiawunst0a7mRQiaI5unFy3PUZdY9a1u1IXicOw4muedQGrubibQ/132","comment_is_top":false,"comment_ctime":1565451880,"is_pvip":false,"replies":[{"id":"45240","content":"商品合并成套餐商品后，数量得变成1，不能累加。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565626971,"ip_address":"","comment_id":122650,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565451880","product_id":100031001,"comment_content":"abstract class printHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>class Meta {<br>  double price;<br>  String name;<br>  &#47;&#47; 1.商品数量属性；<br>  int quantity;<br>  Meta(this.name, this.price, this.quantity);<br>}<br><br>&#47;&#47; 定义商品 Item 类<br>class Item extends Meta {<br>  Item(name, price, quantity) : super(name, price, quantity);<br>  &#47;&#47; 重载了 + 运算符，合并商品为套餐商品<br>  Item operator +(Item item) =&gt; Item(name + item.name,<br>      price * quantity + item.price * item.quantity, quantity + item.quantity);<br><br>  @override<br>  String toString() {<br>    &#47;&#47; 2.购物车信息增加商品列表信息（包括商品名称，数量及单价）输出，实现小票的基本功能。<br>    return &#39;${name}, ${price}, ${quantity}&#39;;<br>  }<br>}<br><br>&#47;&#47; 定义购物车类<br>class ShoppingCart extends Meta with printHelper {<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br><br>  double get price =&gt; bookings.reduce((v, e) =&gt; v + e).price;<br>  int get quantity =&gt; bookings.reduce((v, e) =&gt; v + e).quantity;<br><br>  &#47;&#47; 默认初始化方法，转发到 withCode 里<br>  ShoppingCart({name}) : this.withCode(name: name, code: null);<br>  &#47;&#47;withCode 初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code})<br>      : date = DateTime.now(),<br>        super(name, 0, 0);<br>  &#47;&#47;?? 运算符表示为 code 不为 null，则用原值，否则使用默认值 &quot; 没有 &quot;<br>  getInfo() =&gt; &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>用户名: $name<br>优惠码: ${code ?? &quot; 没有 &quot;}<br>总价格: $price<br>总件数: $quantity<br>Date: $date<br>-----------------------------<br>商品列表信息：<br>名称, 价格, 数量<br>${bookings.join(&#39;\\n&#39;)}<br>-----------------------------<br>  &#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name: &#39;张三&#39;, code: &#39;123&#39;)<br>    ..bookings = [Item(&#39;苹果&#39;, 10.0, 3), Item(&#39;鸭梨&#39;, 20.0, 5)]<br>    ..printInfo();<br><br>  ShoppingCart.withCode(name: &#39;张q&#39;)<br>    ..bookings = [Item(&#39;苹果&#39;, 10.0, 7), Item(&#39;鸭梨&#39;, 20.0, 4)]<br>    ..printInfo();<br>}<br>","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462344,"discussion_content":"商品合并成套餐商品后，数量得变成1，不能累加。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565626971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266101,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/pYVcoj11tKBribn2L05X16icJ4hkMg7fh0iaAnZjGfiawunst0a7mRQiaI5unFy3PUZdY9a1u1IXicOw4muedQGrubibQ/132","nickname":"Todd","note":"","ucode":"6D9E032A649244","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4935,"discussion_content":"OK，感谢review，不过code样式太差了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565845162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118722,"user_name":"jimzqw","can_delete":false,"product_type":"c1","uid":1245534,"ip_address":"","ucode":"407B9050E86846","user_header":"https://wx.qlogo.cn/mmopen/vi_32/qoEev6CRRTKAlHibxGcfbFIBaUbLS6XUQ5cRylZI6hYV66m4PSOMQo5vmv1GUiaicLUn9oouQb74tJ26JI88oSq5g/132","comment_is_top":false,"comment_ctime":1564440671,"is_pvip":false,"replies":[{"id":"43929","content":"Item合并，count不需要加了，否则会多算价格。<br>比如五斤苹果和4盒巧克力，合并出来的商品套餐应该是“一份苹果巧克力”","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564676878,"ip_address":"","comment_id":118722,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564440671","product_id":100031001,"comment_content":"class Meta {<br>  double price;<br>  String name;<br>  &#47;&#47; 成员变量初始化语法糖<br>  Meta(this.name, this.price);<br>}<br><br>class Item extends Meta{<br>int count;<br>  Item(name, price, this.count) : super(name, price);<br>  &#47;&#47; 重载 + 运算符，将商品对象合并为套餐商品<br>  Item operator+(Item item) =&gt; Item(name + item.name, price*count + item.price*item.count, count + item.count); <br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;with 表示以非继承的方式复用了另一个类的成员变量及函数<br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  &#47;&#47; 以归纳合并方式求和<br>  double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;<br><br>  int get count =&gt; bookings.reduce((value, element) =&gt; value + element).count;<br>  &#47;&#47; 默认初始化函数，转发至 withCode 函数<br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br>  &#47;&#47;withCode 初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0);<br><br>  &#47;&#47;?? 运算符表示为 code 不为 null，则用原值，否则使用默认值 &quot; 没有 &quot;<br>  @override<br>  getInfo() =&gt; &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code??&quot; 没有 &quot;}<br>  总价: $price<br>  数量： $count<br>  Date: $date<br>-----------------------------<br>&#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;, code:&#39;123456&#39;)<br>  ..bookings = [Item(&#39;苹果&#39;,10.0, 2), Item(&#39;鸭梨&#39;,20.0, 1)]<br>  ..printInfo();<br><br>  ShoppingCart(name:&#39;李四&#39;)<br>  ..bookings = [Item(&#39;香蕉&#39;,15.0, 2), Item(&#39;西瓜&#39;,40.0, 1)]<br>  ..printInfo();<br>}<br>","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460546,"discussion_content":"Item合并，count不需要加了，否则会多算价格。\n比如五斤苹果和4盒巧克力，合并出来的商品套餐应该是“一份苹果巧克力”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564676878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117878,"user_name":"神经蛙","can_delete":false,"product_type":"c1","uid":1604240,"ip_address":"","ucode":"0511F6E6B30440","user_header":"https://static001.geekbang.org/account/avatar/00/18/7a/90/dc3537e7.jpg","comment_is_top":false,"comment_ctime":1564159849,"is_pvip":false,"replies":[{"id":"43498","content":"  Item operator+(Item item) =&gt; Item(name + item.name, price + item.price*item.total);<br>--------------<br>这里少*了total","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564422476,"ip_address":"","comment_id":117878,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564159849","product_id":100031001,"comment_content":"class Meta {<br>  double price;<br>  String name;<br>  Meta(this.name, this.price);<br>}<br><br>abstract class PrintHelper{<br>  printInfo()=&gt;print(getInfo());<br>  getInfo();<br>}<br><br>class Item extends Meta {<br>  &#47;&#47; 商品数量<br>  int total;<br>  &#47;&#47; total可选，默认1<br>  Item(name, price, {this.total=1}):super(name,price) ;<br>  Item operator+(Item item) =&gt; Item(name + item.name, price + item.price*item.total);<br>}<br><br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br><br>  double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;<br>  &#47;&#47; 获取购物车列表<br>  String get _info =&gt; bookings.fold(&#39;商品\\t数量\\t单价&#39;,(value, element) =&gt; <br>                                    &#39;$value\\n    ${element.name}\\t${element.total}\\t${element.price}&#39;);<br>  ShoppingCart({name}): this.withCode(name: name, code: null);<br>  ShoppingCart.withCode({name, this.code}): date=DateTime.now(), super(name, 0);<br>  <br>  @override<br>  getInfo() {<br>    return &#39;&#39;&#39;<br>    购物车信息:<br>    用户名: $name<br>    优惠码: ${code??&quot;无&quot;}<br>    -----------------------------<br>    $_info<br>    -----------------------------<br>    总价: $price<br>    日期: ${date.toString()}<br>    &#39;&#39;&#39;;<br>  }<br>}<br><br>void main() {<br>  ShoppingCart(name:&#39;张三&#39;)<br>    ..bookings = [Item(&#39;苹果&#39;, 10.0), Item(&#39;草莓&#39;,16.0, total: 3),  Item(&#39;鸭梨&#39;, 20.0, total: 2)]<br>    ..printInfo();<br>}","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460156,"discussion_content":"  Item operator+(Item item) =&amp;gt; Item(name + item.name, price + item.price*item.total);\n--------------\n这里少*了total","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564422476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116148,"user_name":"top_founder","can_delete":false,"product_type":"c1","uid":1595063,"ip_address":"","ucode":"8A23E044C3F503","user_header":"https://static001.geekbang.org/account/avatar/00/18/56/b7/4258025c.jpg","comment_is_top":false,"comment_ctime":1563793482,"is_pvip":false,"replies":[{"id":"42443","content":"name是Meta的属性，不是ShoppingCart的，所以没法用构造函数语法糖优化，只能把这个参数交给super","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563794878,"ip_address":"","comment_id":116148,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563793482","product_id":100031001,"comment_content":"withcode中的name，前面是不是少写了this. ？如果不加，输出的name无值","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459409,"discussion_content":"name是Meta的属性，不是ShoppingCart的，所以没法用构造函数语法糖优化，只能把这个参数交给super","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563794878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116054,"user_name":"keep","can_delete":false,"product_type":"c1","uid":1159132,"ip_address":"","ucode":"0E66D4803579F3","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/dc/88c34436.jpg","comment_is_top":false,"comment_ctime":1563779132,"is_pvip":false,"replies":[{"id":"42651","content":"理论上通过C++这一层是可以中转的，实际上也有人这么干了：https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;V-H3pF9ytfXRhZG0PGIKsw","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563895575,"ip_address":"","comment_id":116054,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563779132","product_id":100031001,"comment_content":"老师，为什么dart不可以直接调用其他语言的动态库？是dart没提供这个功能？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459368,"discussion_content":"理论上通过C++这一层是可以中转的，实际上也有人这么干了：https://mp.weixin.qq.com/s/V-H3pF9ytfXRhZG0PGIKsw","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563895575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115353,"user_name":"徐西文","can_delete":false,"product_type":"c1","uid":1455496,"ip_address":"","ucode":"87BCE6534CE2CF","user_header":"https://static001.geekbang.org/account/avatar/00/16/35/88/4dfad2fd.jpg","comment_is_top":false,"comment_ctime":1563539550,"is_pvip":false,"replies":[{"id":"42184","content":"这里有个问题：在合并成新的套餐对象时，数量应该变成1。比如三斤苹果和四斤梨合并，应该是一份苹果梨套餐；而不是7份苹果梨，否则价格就算错啦。<br><br>另外你这段代码好像没法编译通过吧","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563554132,"ip_address":"","comment_id":115353,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563539550","product_id":100031001,"comment_content":"&#47;&#47; 思考题<br>class Meta {<br>  String name;<br>  double price;<br>  double count;<br>  &#47;&#47; 成员变量初始化语法糖<br>  Meta(this.name, this.price, this count);<br>}<br><br>class Item extends Meta{<br>  Item(name, price, count) : super(name, price, count);<br>  &#47;&#47; 重载 + 运算符，将商品对象合并为套餐商品<br>  Item operator+(Item item) =&gt; Item(name + item.name, count + item.count, price * count + item.price * item.count); <br>}<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  getInfo();<br>}<br><br>&#47;&#47;with 表示以非继承的方式复用了另一个类的成员变量及函数<br>class ShoppingCart extends Meta with PrintHelper{<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; bookings;<br>  &#47;&#47; 以归纳合并方式求和<br>  double get price =&gt; bookings.reduce((value, element) =&gt; value + element).price;<br>  double get countNum =&gt; bookings.reduce((value, element) =&gt; value + element).count;<br>  &#47;&#47; 默认初始化函数，转发至 withCode 函数<br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br>  &#47;&#47;withCode 初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法<br>  ShoppingCart.withCode({name, this.code}) : date = DateTime.now(), super(name,0);<br><br>  &#47;&#47;?? 运算符表示为 code 不为 null，则用原值，否则使用默认值 &quot; 没有 &quot;<br>  @override<br>  getInfo() =&gt; &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>  用户名: $name<br>  优惠码: ${code??&quot; 没有 &quot;}<br>  总价: $price<br>  总数量: $countNum<br>  Date: $date<br>-----------------------------<br>&#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;, code:&#39;123456&#39;)<br>  ..bookings = [Item(&#39;苹果&#39;,10.0,3), Item(&#39;鸭梨&#39;,20.0,2)]<br>  ..printInfo();<br><br>  ShoppingCart(name:&#39;李四&#39;)<br>  ..bookings = [Item(&#39;香蕉&#39;,15.0, 1), Item(&#39;西瓜&#39;,40.0, 4)]<br>  ..printInfo();<br>}<br>","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459069,"discussion_content":"这里有个问题：在合并成新的套餐对象时，数量应该变成1。比如三斤苹果和四斤梨合并，应该是一份苹果梨套餐；而不是7份苹果梨，否则价格就算错啦。\n\n另外你这段代码好像没法编译通过吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563554132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114887,"user_name":"大神留条命","can_delete":false,"product_type":"c1","uid":1594704,"ip_address":"","ucode":"AB15248006E96D","user_header":"","comment_is_top":false,"comment_ctime":1563423786,"is_pvip":false,"replies":[{"id":"42022","content":"可以使用类型约束，让T必须继承自某个类<br><br>class Foo&lt;T extends SomeBaseClass&gt; {}<br><br>T foo&lt;T extends SomeBaseClass&gt;(T ts) {}","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563470329,"ip_address":"","comment_id":114887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563423786","product_id":100031001,"comment_content":"我想用泛型来取后台 data 中的数据。我知道限制继承了某个类的是可以的。我想传入的类限制为实现了fromJsonMap这个工厂方法的可以吗。","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458866,"discussion_content":"可以使用类型约束，让T必须继承自某个类\n\nclass Foo&amp;lt;T extends SomeBaseClass&amp;gt; {}\n\nT foo&amp;lt;T extends SomeBaseClass&amp;gt;(T ts) {}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563470329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114610,"user_name":"allen","can_delete":false,"product_type":"c1","uid":1121439,"ip_address":"","ucode":"987EB66C1E2528","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/9f/9f9f02c3.jpg","comment_is_top":false,"comment_ctime":1563349094,"is_pvip":false,"replies":[{"id":"41884","content":"上一节讲过这个知识点哈，命名构造函数","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563380581,"ip_address":"","comment_id":114610,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563349094","product_id":100031001,"comment_content":"ShoppingCart.withCode这个withCode方法是自己定义的么，还是系统自带的，我没见到这个方法，还是说直接能类名加方法名定义的","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458746,"discussion_content":"上一节讲过这个知识点哈，命名构造函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563380581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114596,"user_name":"大米不剩了","can_delete":false,"product_type":"c1","uid":1300421,"ip_address":"","ucode":"95C6EAE068390D","user_header":"https://static001.geekbang.org/account/avatar/00/13/d7/c5/78aea8b7.jpg","comment_is_top":false,"comment_ctime":1563347674,"is_pvip":false,"replies":[{"id":"41876","content":"赞","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563380127,"ip_address":"","comment_id":114596,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563347674","product_id":100031001,"comment_content":"ShoppingCart.withCode({name, this.code}):date = DateTime.now(),super(name,0);<br>疑惑了好久，后来发现如果在构造函数的初始化列表中使用super()，需要把它放到最后。<br>参考http:&#47;&#47;dart.goodev.org&#47;guides&#47;language&#47;effective-dart&#47;usage#do-place-the-super-call-last-in-a-constructor-initialization-list","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458740,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563380127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114583,"user_name":"Geek_rvg","can_delete":false,"product_type":"c1","uid":1540499,"ip_address":"","ucode":"1DBCD4B0868BD9","user_header":"https://static001.geekbang.org/account/avatar/00/17/81/93/fcf244b3.jpg","comment_is_top":false,"comment_ctime":1563345571,"is_pvip":false,"replies":[{"id":"41877","content":"你的price没算对哦，总price=求和（单价*count）","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563380242,"ip_address":"","comment_id":114583,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563345571","product_id":100031001,"comment_content":"作业：<br>1. 抽象类PrintHelper添加printGoodsInfo方法定义，然后在ShoppingCart类中实现getGoodsInfo方法（用户获取小票信息）；<br>2. 由于需要获取各个商品的数量，Item类添加count属性（用于表示每个商品数量），ShoppingCart类的bookings变更为私有属性，同时添加add方法用于想Shopping类中添加商品;<br>3. ShoppingCart类添加count属性的getter，用于表示商品总数<br><br>改造后，代码如下：<br><br>abstract class PrintHelper {<br>  printInfo() =&gt; print(getInfo());<br>  printGoodsInfo() =&gt; print(getGoodsInfo());<br>  getInfo();<br>  getGoodsInfo();<br>}<br>class Meta {<br>  String name;<br>  double price;<br>  Meta(this.name, this.price);<br>}<br><br>class Item extends Meta {<br>  int count = 0;<br>  Item(name, price) : count = 1, super(name, price);<br>  Item operator +(Item item) =&gt; Item(name + item.name, price + item.price);<br>}<br><br>class ShoppingCart extends Meta with PrintHelper {<br>  DateTime date;<br>  String code;<br>  List&lt;Item&gt; _bookings;<br><br>  double get price =&gt; _bookings.reduce((v, e) =&gt; v + e).price;<br>  int get count {<br>    int r = 0;<br>    _bookings.forEach((item) {<br>      r += item.count;<br>    });<br>    return r;<br>  }<br>  ShoppingCart({name}) : this.withCode(name:name, code:null);<br>  ShoppingCart.withCode({name, this.code}) : _bookings = [],date = DateTime.now(), super(name, 0.0);<br><br>  add(Item item) {<br>    for (Item v in _bookings) {<br>      if (v.name == item.name) {<br>        v.count++;<br>        return;<br>      }<br>    }<br>    _bookings.add(item);<br>  }<br>  getGoodsInfo() {<br>    String s = &#39;小票信息:\\n&#39;;<br>    _bookings.forEach( (item) {<br>      s += &#39;名称:${item.name}, 单价:${item.price}, 数量: ${item.count}\\n&#39;;<br>    });<br>    return s;<br>  }<br>  getInfo() =&gt; &#39;&#39;&#39;<br>购物车信息:<br>-----------------------------<br>用户名: $name<br>优惠码: ${code ?? &#39;没有&#39;}<br>总价: $price<br>总数: $count<br>日期: $date<br>-----------------------------<br>&#39;&#39;&#39;;<br>}<br><br>void main() {<br>  ShoppingCart.withCode(name:&#39;张三&#39;, code:&#39;123456&#39;)<br>    ..add(Item(&#39;苹果&#39;,10.0))<br>    ..add(Item(&#39;鸭梨&#39;,20.0))<br>    ..add(Item(&#39;苹果&#39;,10.0))<br>    ..printInfo()<br>    ..printGoodsInfo();<br><br>  ShoppingCart(name:&#39;李四&#39;)<br>    ..add(Item(&#39;香蕉&#39;,15.0))<br>    ..add(Item(&#39;西瓜&#39;,40.0))<br>    ..printInfo()<br>    ..printGoodsInfo();<br>}","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458732,"discussion_content":"你的price没算对哦，总price=求和（单价*count）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563380242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114538,"user_name":"Geek__759ee2c98fce","can_delete":false,"product_type":"c1","uid":1449307,"ip_address":"","ucode":"010961429513E4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM6guT2BaGudTTlc3FoOblVJdacibR3XbsL6JSG0gCtdibLQY77qC0uNYmhGG6LRc8a417Uh5QtzSg7w/132","comment_is_top":false,"comment_ctime":1563330471,"is_pvip":false,"replies":[{"id":"41805","content":"业务含义理解成是把Item商品打包成一个大商品套餐就可以了。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563334404,"ip_address":"","comment_id":114538,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563330471","product_id":100031001,"comment_content":"我感觉这个例子中 用 reduce+ item 重载云算符似乎不太好， 毕竟item相加是说不出来业务含义的。<br>price 求和我觉得用 fold 比较合理，这里也是dart和一般其他语言reduce 的一个差异点。","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458713,"discussion_content":"业务含义理解成是把Item商品打包成一个大商品套餐就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563334404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114370,"user_name":"小师弟","can_delete":false,"product_type":"c1","uid":1604954,"ip_address":"","ucode":"33FCC0E8879906","user_header":"https://static001.geekbang.org/account/avatar/00/18/7d/5a/0709cc86.jpg","comment_is_top":false,"comment_ctime":1563284988,"is_pvip":false,"replies":[{"id":"41878","content":"这里有个问题：在合并成新的套餐对象时，数量应该变成1。比如三斤苹果和四斤梨合并，应该是一份苹果梨套餐；而不是7份苹果梨","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563380350,"ip_address":"","comment_id":114370,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563284988","product_id":100031001,"comment_content":"思考题：<br>&#47;&#47; Meta类加入变量count<br>class Meta {<br><br>  double price;<br><br>  String name;<br><br>  double count;<br><br>  Meta(this.name, this.price, this.count);<br><br>}<br><br>&#47;&#47; Item类混入PrintHelper<br>class Item extends Meta with PrintHelper{<br><br>  Item(name, price, count) : super(name, price, count);<br><br>  Item operator+(Item item) =&gt; Item(name + item.name, price * count + item<br>      .price * item.count, count + item.count);<br><br>  @override<br>  getInfo() =&gt; &#39;&#39;&#39;<br>     名称：$name     数量：$count      单价：$price<br>  &#39;&#39;&#39;;<br>}","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458629,"discussion_content":"这里有个问题：在合并成新的套餐对象时，数量应该变成1。比如三斤苹果和四斤梨合并，应该是一份苹果梨套餐；而不是7份苹果梨","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563380350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114243,"user_name":"文心雕龙","can_delete":false,"product_type":"c1","uid":1162246,"ip_address":"","ucode":"A8A77297E6DFE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/06/d01b419f.jpg","comment_is_top":false,"comment_ctime":1563260439,"is_pvip":false,"replies":[{"id":"41879","content":"这里有个问题：在合并成套餐时，数量应该变成1，而不能直接相加。比如三斤苹果和五盒巧克力，合并完应该是一份苹果巧克力，而不是八份苹果巧克力。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563380451,"ip_address":"","comment_id":114243,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563260439","product_id":100031001,"comment_content":"思考题：<br>&#47;&#47; 定义商品 Item 类<br>class Item extends Meta {<br>  double quantity;<br>  Item({name, price, this.quantity = 1.0}) : super(name, price);<br>  &#47;&#47; 重载 + 运算符，将商品对象合并为套餐商品<br>  Item operator+(Item item) =&gt; Item(name: name + item.name,<br>      price: price * quantity + item.price * item.quantity,<br>      quantity: quantity + item.quantity);<br>}<br><br>&#47;&#47;购物车类 增加<br>double get quantity =&gt; bookings.reduce((value, element) =&gt; value + element).quantity;<br>String get itemDetail{<br>    String detail = &#39;&#39;;<br>    for(var i in bookings){<br>      detail += &#39;{商品名称：${i.name},商品价格：${i.price},商品数量：${i.quantity}} &#39;;<br>    }<br>    return detail;<br>getInfo() =&gt; &#39;&#39;&#39;<br>    购物车信息：<br>    -----------------------------<br>    用户名：$name<br>    优惠码：${code??&#39; 没有 &#39;}<br>    商品明细： ${itemDetail}<br>    总数量： $quantity<br>    总价：$price<br>    日期：$date<br>    -----------------------------<br>  &#39;&#39;&#39;;","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458576,"discussion_content":"这里有个问题：在合并成套餐时，数量应该变成1，而不能直接相加。比如三斤苹果和五盒巧克力，合并完应该是一份苹果巧克力，而不是八份苹果巧克力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563380451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}