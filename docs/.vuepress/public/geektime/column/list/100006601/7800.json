{"id":7800,"title":"11 | 架构设计流程：设计备选方案","content":"<p>上一期我讲了架构设计流程第1步识别复杂度，确定了系统面临的主要复杂度问题后，方案设计就有了明确的目标，我们就可以开始真正进行架构方案设计了。今天我来讲讲<span class=\"orange\">架构设计流程第2步：设计备选方案</span>，同样还会结合上期“前浪微博”的场景，谈谈消息队列设计备选方案的实战。</p>\n<h2 id=\"-2-\">架构设计第2步：设计备选方案</h2>\n<p>架构师的工作并不神秘，成熟的架构师需要对已经存在的技术非常熟悉，对已经经过验证的架构模式烂熟于心，然后根据自己对业务的理解，挑选合适的架构模式进行组合，再对组合后的方案进行修改和调整。</p>\n<p>虽然软件技术经过几十年的发展，新技术层出不穷，但是经过时间考验，已经被各种场景验证过的成熟技术其实更多。例如，高可用的主备方案、集群方案，高性能的负载均衡、多路复用，可扩展的分层、插件化等技术，绝大部分时候我们有了明确的目标后，按图索骥就能够找到可选的解决方案。</p>\n<p>只有当这种方式完全无法满足需求的时候，才会考虑进行方案的创新，而事实上方案的创新绝大部分情况下也都是基于已有的成熟技术。</p>\n<ul>\n<li><p>NoSQL：Key-Value的存储和数据库的索引其实是类似的，Memcache只是把数据库的索引独立出来做成了一个缓存系统。</p>\n</li>\n<li><p>Hadoop大文件存储方案，基础其实是集群方案+ 数据复制方案。</p>\n</li>\n<li><p>Docker虚拟化，基础是LXC（Linux Containers）。</p>\n</li>\n<li><p>LevelDB的文件存储结构是Skip List。</p>\n</li>\n</ul>\n<p>在《技术的本质》一书中，对技术的组合有清晰的阐述：</p>\n<blockquote>\n<p>新技术都是在现有技术的基础上发展起来的，现有技术又来源于先前的技术。将技术进行功能性分组，可以大大简化设计过程，这是技术“模块化”的首要原因。技术的“组合”和“递归”特征，将彻底改变我们对技术本质的认识。</p>\n</blockquote>\n<p>虽说基于已有的技术或者架构模式进行组合，然后调整，大部分情况下就能够得到我们需要的方案，但并不意味着架构设计是一件很简单的事情。因为可选的模式有很多，组合的方案更多，往往一个问题的解决方案有很多个；如果再在组合的方案上进行一些创新，解决方案会更多。因此，如何设计最终的方案，并不是一件容易的事情，这个阶段也是很多架构师容易犯错的地方。</p>\n<p>第一种常见的错误：设计最优秀的方案。</p>\n<p>很多架构师在设计架构方案时，心里会默认有一种技术情结：我要设计一个优秀的架构，才能体现我的技术能力！例如，高可用的方案中，集群方案明显比主备方案要优秀和强大；高性能的方案中，淘宝的XX方案是业界领先的方案……</p>\n<p>根据架构设计原则中“合适原则”和“简单原则“的要求，挑选合适自己业务、团队、技术能力的方案才是好方案；否则要么浪费大量资源开发了无用的系统（例如，之前提过的“亿级用户平台”的案例，设计了TPS 50000的系统，实际TPS只有500），要么根本无法实现（例如，10个人的团队要开发现在的整个淘宝系统）。</p>\n<p>第二种常见的错误：只做一个方案。</p>\n<p>很多架构师在做方案设计时，可能心里会简单地对几个方案进行初步的设想，再简单地判断哪个最好，然后就基于这个判断开始进行详细的架构设计了。</p>\n<p>这样做有很多弊端：</p>\n<ul>\n<li><p>心里评估过于简单，可能没有想得全面，只是因为某一个缺点就把某个方案给否决了，而实际上没有哪个方案是完美的，某个地方有缺点的方案可能是综合来看最好的方案。</p>\n</li>\n<li><p>架构师再怎么牛，经验知识和技能也有局限，有可能某个评估的标准或者经验是不正确的，或者是老的经验不适合新的情况，甚至有的评估标准是架构师自己原来就理解错了。</p>\n</li>\n<li><p>单一方案设计会出现过度辩护的情况，即架构评审时，针对方案存在的问题和疑问，架构师会竭尽全力去为自己的设计进行辩护，经验不足的设计人员可能会强词夺理。</p>\n</li>\n</ul>\n<p>因此，架构师需要设计多个备选方案，但方案的数量可以说是无穷无尽的，架构师也不可能穷举所有方案，那合理的做法应该是什么样的呢？</p>\n<ul>\n<li><p><strong>备选方案的数量以3 ~ 5个为最佳</strong>。少于3个方案可能是因为思维狭隘，考虑不周全；多于5个则需要耗费大量的精力和时间，并且方案之间的差别可能不明显。</p>\n</li>\n<li><p><strong>备选方案的差异要比较明显</strong>。例如，主备方案和集群方案差异就很明显，或者同样是主备方案，用ZooKeeper做主备决策和用Keepalived做主备决策的差异也很明显。但是都用ZooKeeper做主备决策，一个检测周期是1分钟，一个检测周期是5分钟，这就不是架构上的差异，而是细节上的差异了，不适合做成两个方案。</p>\n</li>\n<li><p><strong>备选方案的技术不要只局限于已经熟悉的技术</strong>。设计架构时，架构师需要将视野放宽，考虑更多可能性。很多架构师或者设计师积累了一些成功的经验，出于快速完成任务和降低风险的目的，可能自觉或者不自觉地倾向于使用自己已经熟悉的技术，对于新的技术有一种不放心的感觉。就像那句俗语说的：“如果你手里有一把锤子，所有的问题在你看来都是钉子”。例如，架构师对MySQL很熟悉，因此不管什么存储都基于MySQL去设计方案，系统性能不够了，首先考虑的就是MySQL分库分表，而事实上也许引入一个Memcache缓存就能够解决问题。</p>\n</li>\n</ul>\n<!-- [[[read_end]]] -->\n<p>第三种常见的错误：备选方案过于详细。</p>\n<p>有的架构师或者设计师在写备选方案时，错误地将备选方案等同于最终的方案，每个备选方案都写得很细。这样做的弊端显而易见：</p>\n<ul>\n<li><p>耗费了大量的时间和精力。</p>\n</li>\n<li><p>将注意力集中到细节中，忽略了整体的技术设计，导致备选方案数量不够或者差异不大。</p>\n</li>\n<li><p>评审的时候其他人会被很多细节给绕进去，评审效果很差。例如，评审的时候针对某个定时器应该是1分钟还是30秒，争论得不可开交。</p>\n</li>\n</ul>\n<p>正确的做法是备选阶段关注的是技术选型，而不是技术细节，技术选型的差异要比较明显。例如，采用ZooKeeper和Keepalived两种不同的技术来实现主备，差异就很大；而同样都采用ZooKeeper，一个方案的节点设计是/service/node/master，另一个方案的节点设计是/company/service/master，这两个方案并无明显差异，无须在备选方案设计阶段作为两个不同的备选方案，至于节点路径究竟如何设计，只要在最终的方案中挑选一个进行细化即可。</p>\n<h2 id=\"-\">设计备选方案实战</h2>\n<p>还是回到“前浪微博”的场景，上期我们通过“排查法”识别了消息队列的复杂性主要体现在：高性能消息读取、高可用消息写入、高可用消息存储、高可用消息读取。接下来进行第2步，设计备选方案。</p>\n<p>1.备选方案1：采用开源的Kafka</p>\n<p>Kafka是成熟的开源消息队列方案，功能强大，性能非常高，而且已经比较成熟，很多大公司都在使用。</p>\n<p>2.备选方案2：集群 + MySQL存储</p>\n<p>首先考虑单服务器高性能。高性能消息读取属于“计算高可用”的范畴，单服务器高性能备选方案有很多种。考虑到团队的开发语言是Java，虽然有人觉得C/C++语言更加适合写高性能的中间件系统，但架构师综合来看，认为无须为了语言的性能优势而让整个团队切换语言，消息队列系统继续用Java开发。由于Netty是Java领域成熟的高性能网络库，因此架构师选择基于Netty开发消息队列系统。</p>\n<p>由于系统设计的QPS是13800，即使单机采用Netty来构建高性能系统，单台服务器支撑这么高的QPS还是有很大风险的，因此架构师选择采取集群方式来满足高性能消息读取，集群的负载均衡算法采用简单的轮询即可。</p>\n<p>同理，“高可用写入”和“高性能读取”一样，可以采取集群的方式来满足。因为消息只要写入集群中一台服务器就算成功写入，因此“高可用写入”的集群分配算法和“高性能读取”也一样采用轮询，即正常情况下，客户端将消息依次写入不同的服务器；某台服务器异常的情况下，客户端直接将消息写入下一台正常的服务器即可。</p>\n<p>整个系统中最复杂的是“高可用存储”和“高可用读取”，“高可用存储”要求已经写入的消息在单台服务器宕机的情况下不丢失；“高可用读取”要求已经写入的消息在单台服务器宕机的情况下可以继续读取。架构师第一时间想到的就是可以利用MySQL的主备复制功能来达到“高可用存储“的目的，通过服务器的主备方案来达到“高可用读取”的目的。</p>\n<p>具体方案：</p>\n<p> <img src=\"https://static001.geekbang.org/resource/image/7b/8a/7b224715dc8efe67faa2af94922f948a.png?wh=699*459\" alt=\"\"></p>\n<p>简单描述一下方案：</p>\n<ul>\n<li><p>采用数据分散集群的架构，集群中的服务器进行分组，每个分组存储一部分消息数据。</p>\n</li>\n<li><p>每个分组包含一台主MySQL和一台备MySQL，分组内主备数据复制，分组间数据不同步。</p>\n</li>\n<li><p>正常情况下，分组内的主服务器对外提供消息写入和消息读取服务，备服务器不对外提供服务；主服务器宕机的情况下，备服务器对外提供消息读取的服务。</p>\n</li>\n<li><p>客户端采取轮询的策略写入和读取消息。</p>\n</li>\n</ul>\n<p>3.备选方案3：集群 + 自研存储方案</p>\n<p>在备选方案2的基础上，将MySQL存储替换为自研实现存储方案，因为MySQL的关系型数据库的特点并不是很契合消息队列的数据特点，参考Kafka的做法，可以自己实现一套文件存储和复制方案（此处省略具体的方案描述，实际设计时需要给出方案）。</p>\n<p>可以看出，高性能消息读取单机系统设计这部分时并没有多个备选方案可选，备选方案2和备选方案3都采取基于Netty的网络库，用Java语言开发，原因就在于团队的Java背景约束了备选的范围。通常情况下，成熟的团队不会轻易改变技术栈，反而是新成立的技术团队更加倾向于采用新技术。</p>\n<p>上面简单地给出了3个备选方案用来示范如何操作，实践中要比上述方案复杂一些。架构师的技术储备越丰富、经验越多，备选方案也会更多，从而才能更好地设计备选方案。例如，开源方案选择可能就包括Kafka、ActiveMQ、RabbitMQ；集群方案的存储既可以考虑用MySQL，也可以考虑用HBase，还可以考虑用Redis与MySQL结合等；自研文件系统也可以有多个，可以参考Kafka，也可以参考LevelDB，还可以参考HBase等。限于篇幅，这里就不一一展开了。</p>\n<h2 id=\"-\">小结</h2>\n<p>今天我为你讲了架构设计流程的第二个步骤：设计备选方案，基于我们模拟的“前浪微博”消息系统，给出了备选方案的设计样例，希望对你有所帮助。</p>\n<p>这就是今天的全部内容，留一道思考题给你吧，除了这三个备选方案，如果让你来设计第四个备选方案，你的方案是什么？</p>\n<p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>\n<p></p>\n","neighbors":{"left":{"article_title":"10 | 架构设计流程：识别复杂度","id":7563},"right":{"article_title":"12 | 架构设计流程：评估和选择备选方案","id":7832}},"comments":[{"had_liked":false,"id":9656,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1527005167,"is_pvip":true,"replies":[{"id":2997,"content":"最好是“三方案”，又叫“第三选择”，可以防止思维狭隘，目光短浅，思维盲区等决策陷阱","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527056228,"ip_address":"","comment_id":9656,"utype":1}],"discussion_count":2,"race_medal":1,"score":2,"product_id":100006601,"comment_content":"设计备选方案心得\n\n经过架构设计流程第 1 步——识别复杂度，确定了系统面临的主要复杂度问题，进而明确了设计方案的目标，就可以开展架构设计流程第 2 步——设计备选方案。架构设计备选方案的工作更多的是从需求、团队、技术、资源等综合情况出发，对主流、成熟的架构模式进行选择、组合、调整、创新。\n\n1. 几种常见的架构设计误区\n\n（1）设计最优秀的方案。不要面向“简历”进行架构设计，而是要根据“合适”、“简单”、“演进”的架构设计原则，决策出与需求、团队、技术能力相匹配的合适方案。\n\n（2）只做一个方案。一个方案容易陷入思考问题片面、自我坚持的认知陷阱。\n\n2. 备选方案设计的注意事项\n\n（1）备选方案不要过于详细。备选阶段解决的是技术选型问题，而不是技术细节。\n\n（2）备选方案的数量以 3~5个为最佳。\n\n（3）备选方案的技术差异要明显。\n\n（4）备选方案不要只局限于已经熟悉的技术。\n\n3. 问题思考\n\n由于文中已经从开源、自研的角度提出了架构设计方案；为此，从架构设计三原则出发，也可考虑第四个备选方案：上云方案，该方案是直接采用商业解决方案，就好比阿里前期采用IOE类似。\n\n如果是创业公司的业务早、中期阶段，可直接考虑采用阿里云&#47;腾讯云，性能、HA、伸缩性都有保证。\n\n此外，在文中备选方案1 - 开源方案中，如果从提供另外一种视角看问题的角度出发，个人会更加倾向于RabbitMQ。首先，RabbitMQ与Kafka都同样具备高可用、稳定性和高性能，但是，通过一些业界测试比较，RabbitMQ比Kafka更成熟、更可靠；其次，在高性能指标方面，Kafka胜出，kafka设计的初衷是处理日志，更适合IO高吞吐的处理。但是，对于“前浪微博”系统的QPS要求，RabbitMQ同样可以驾驭。为此，综合来看，会更加倾向于RabiitMQ。\n\n最后，通过本文再结合自己做技术最大的感悟是：做事情永远都要有B方案。\n","like_count":96},{"had_liked":false,"id":9581,"user_name":"陈华英","can_delete":false,"product_type":"c1","uid":1004890,"ip_address":"","ucode":"7FB0F7D5425237","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/5a/f25d7438.jpg","comment_is_top":false,"comment_ctime":1526960303,"is_pvip":false,"replies":[{"id":2924,"content":"赞，被你发现了，限于篇幅无法细化，主备切换这部分可以有几个备选，zk是一种方式，还有不用zk的也可以。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526971372,"ip_address":"","comment_id":9581,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"文中的方案写得很清晰，有理有据。只是在主备切换的时候显得略了一点，上文中提到用zookeeper或者keepalived，可以分为两个备选方案。keepalived比较简单，主要是实现虚IP的漂移，这个对客户端是透明的。如果是zookeeper的话，客户端还需要从ZK上读下主节点","like_count":58,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418151,"discussion_content":"最好是“三方案”，又叫“第三选择”，可以防止思维狭隘，目光短浅，思维盲区等决策陷阱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527056228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2842415,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/5f/2f/251c062d.jpg","nickname":"鼎风","note":"","ucode":"1992C1061638BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548143,"discussion_content":"厉害了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643038408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9539,"user_name":"星火燎原","can_delete":false,"product_type":"c1","uid":1101373,"ip_address":"","ucode":"15AD8E3006E107","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/3d/385b8263.jpg","comment_is_top":false,"comment_ctime":1526949925,"is_pvip":false,"replies":[{"id":2872,"content":"点赞，这是可行方案","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526952637,"ip_address":"","comment_id":9539,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"高可用消息存储和读取可以采用mongo和redis 这么高的gps很难保证消息不丢 那么可以采用有消息确认机制和消息回溯的MQ  或者自研rpc的时候考虑消息发送失败的时候重新选择节点然后落盘","like_count":37,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418125,"discussion_content":"赞，被你发现了，限于篇幅无法细化，主备切换这部分可以有几个备选，zk是一种方式，还有不用zk的也可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526971372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9682,"user_name":"王磊","can_delete":false,"product_type":"c1","uid":1050085,"ip_address":"","ucode":"A4DE9804642A08","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/e5/aa579968.jpg","comment_is_top":false,"comment_ctime":1527035710,"is_pvip":false,"replies":[{"id":2967,"content":"写错了，属于“计算高性能”范畴","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527037050,"ip_address":"","comment_id":9682,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"原文这句话理解有点困难\n&#39;高性能消息读取属于“计算高可用”的范畴&#39;","like_count":16,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418108,"discussion_content":"点赞，这是可行方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526952637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1247422,"avatar":"https://static001.geekbang.org/account/avatar/00/13/08/be/19527615.jpg","nickname":"上班族程序员设计师的水果","note":"","ucode":"C56B24D4BF1A79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298676,"discussion_content":"什么MQ  有 消息确认机制和消息回溯的功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597376254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1028343,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/f7/228a6c37.jpg","nickname":"江湖上","note":"","ucode":"E10516C681EF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1247422,"avatar":"https://static001.geekbang.org/account/avatar/00/13/08/be/19527615.jpg","nickname":"上班族程序员设计师的水果","note":"","ucode":"C56B24D4BF1A79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324749,"discussion_content":"RocketMQ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605165692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298676,"ip_address":"","group_id":0},"score":324749,"extra":""}]}]},{"had_liked":false,"id":9679,"user_name":"王磊","can_delete":false,"product_type":"c1","uid":1050085,"ip_address":"","ucode":"A4DE9804642A08","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/e5/aa579968.jpg","comment_is_top":false,"comment_ctime":1527035478,"is_pvip":false,"replies":[{"id":2968,"content":"赞，你可以思考一下怎么做😃","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527037103,"ip_address":"","comment_id":9679,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"方案二的架构图有些question (不是problem), 这个可以理解为分库后的主备方案吗，还是所有数据库是全量，我理解是前者，因为文中说分组间不同步，那么这里缺少一个根据消息路由的模块，对吧","like_count":10,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418163,"discussion_content":"写错了，属于“计算高性能”范畴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527037050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1137880,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5c/d8/dfe1d4dc.jpg","nickname":"学斌","note":"","ucode":"ED3432D8EDC327","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374311,"discussion_content":"感觉还是不理解，高性怎么又转换成高可用？另外消息读取要快，不是应该是IO相关的吗？文章中也举例说了Netty。我的理解Netty的多路复用，是IO方面的高性能。而CPU相关的，才是计算高性能。但是也不是计算高可用吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621133260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9542,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1526950467,"is_pvip":false,"replies":[{"id":2871,"content":"微博有热点，异步消息没有热点哦，消息随便发给任何一台服务器都可以，可以采取轮询或者随机算法","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526952594,"ip_address":"","comment_id":9542,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"个人觉得方案2,3根据架构设计的3个原则已经是一个优秀的架构设计了，我只是感觉到微博的应用有个比较有特点的特征就是有热点的出现，如果热点出现，按方案2,3会出现消息都集中在一个分片中，从而导致分片所在主机处于饱和的状态，甚至崩溃掉，如果能像业务服务器中放一个sidecar(或者内嵌到程序中)，来负责根据规则的消息路由，并且规则是可以调整的，这样就可以应对热点问题","like_count":9,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418109,"discussion_content":"微博有热点，异步消息没有热点哦，消息随便发给任何一台服务器都可以，可以采取轮询或者随机算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526952594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11841,"user_name":"gary","can_delete":false,"product_type":"c1","uid":1017223,"ip_address":"","ucode":"544C3790F22B83","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/87/68ff96c6.jpg","comment_is_top":false,"comment_ctime":1528384387,"is_pvip":false,"replies":[{"id":3914,"content":"我的经验主要在互联网，总体技术趋势是云计算，不管是开源还是闭源。\n\nOracle这类企业，要么自己开始提供云计算云存储，要么就是为云厂商生产设备。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528449350,"ip_address":"","comment_id":11841,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"李老师，我们最近帮银行做系统，发现现在银行业仍然有很多公司使用weblogic &#47; websphere 这样的容器，就目前形势来看weblogic较一些开源方案好像确实更加稳定和安全。 目前来看老师现在给的一些技术思路都是偏互联网方向，不知道老师是否有过一些厂商产品方面经验，比如weblogic 的mq性能水平是什么样的，和开源技术比较有哪些优劣势，好像网上这方面资料也不多，所以想请教李老师。另外不知道李老师眼中如何看待这些类似oracle 大厂商产品和未来我们的互联网开源产品在市场上的发展趋势","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418109,"discussion_content":"微博有热点，异步消息没有热点哦，消息随便发给任何一台服务器都可以，可以采取轮询或者随机算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526952594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11090,"user_name":"SHLOMA","can_delete":false,"product_type":"c1","uid":1066000,"ip_address":"","ucode":"50C0FF9C3E0FFD","user_header":"https://static001.geekbang.org/account/avatar/00/10/44/10/7bfc89a8.jpg","comment_is_top":false,"comment_ctime":1527833301,"is_pvip":false,"replies":[{"id":3519,"content":"太多了，还是期望你掌握了整体架构设计理论，然后按照这套理论的指导去自己学习","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527837698,"ip_address":"","comment_id":11090,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"李老师专栏讲解模式很好，菜鸟都能跟着进来，看到此处感觉需要学习好多技术，望老师有机会可以出个架构相关技术学习的专栏","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418712,"discussion_content":"太多了，还是期望你掌握了整体架构设计理论，然后按照这套理论的指导去自己学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527837698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11479,"user_name":"XB.Chan","can_delete":false,"product_type":"c1","uid":1117833,"ip_address":"","ucode":"ACFFE2C5C952CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/89/027fc917.jpg","comment_is_top":false,"comment_ctime":1528161694,"is_pvip":false,"replies":[{"id":3693,"content":"MySQL的读写简单表结构（例如k-v）远远超过800的QPS和TPS，我们测试k-v都是上万的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528186424,"ip_address":"","comment_id":11479,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"备选方案2中，采用集群+MySQL的方式开发，满足QPS13800的需求，但是MySQL按照性能来说800&#47;秒的插入速度算是比较快了，那这样平均算下来13800&#47;800约等于18台服务器？？","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418860,"discussion_content":"MySQL的读写简单表结构（例如k-v）远远超过800的QPS和TPS，我们测试k-v都是上万的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528186424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9573,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1118559,"ip_address":"","ucode":"0BEC28E0772A39","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/5f/0d24dba2.jpg","comment_is_top":false,"comment_ctime":1526953780,"is_pvip":false,"replies":[{"id":2927,"content":"是可以用rabbitmq, activemq等方案，具体的区别等你的答案😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526971603,"ip_address":"","comment_id":9573,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"选择kafka为啥不选rabbitmq\n，他俩主要区别是啥？","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418119,"discussion_content":"是可以用rabbitmq, activemq等方案，具体的区别等你的答案😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526971603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9656,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1527005167,"is_pvip":true,"replies":[{"id":2997,"content":"最好是“三方案”，又叫“第三选择”，可以防止思维狭隘，目光短浅，思维盲区等决策陷阱","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527056228,"ip_address":"","comment_id":9656,"utype":1}],"discussion_count":2,"race_medal":1,"score":2,"product_id":100006601,"comment_content":"设计备选方案心得\n\n经过架构设计流程第 1 步——识别复杂度，确定了系统面临的主要复杂度问题，进而明确了设计方案的目标，就可以开展架构设计流程第 2 步——设计备选方案。架构设计备选方案的工作更多的是从需求、团队、技术、资源等综合情况出发，对主流、成熟的架构模式进行选择、组合、调整、创新。\n\n1. 几种常见的架构设计误区\n\n（1）设计最优秀的方案。不要面向“简历”进行架构设计，而是要根据“合适”、“简单”、“演进”的架构设计原则，决策出与需求、团队、技术能力相匹配的合适方案。\n\n（2）只做一个方案。一个方案容易陷入思考问题片面、自我坚持的认知陷阱。\n\n2. 备选方案设计的注意事项\n\n（1）备选方案不要过于详细。备选阶段解决的是技术选型问题，而不是技术细节。\n\n（2）备选方案的数量以 3~5个为最佳。\n\n（3）备选方案的技术差异要明显。\n\n（4）备选方案不要只局限于已经熟悉的技术。\n\n3. 问题思考\n\n由于文中已经从开源、自研的角度提出了架构设计方案；为此，从架构设计三原则出发，也可考虑第四个备选方案：上云方案，该方案是直接采用商业解决方案，就好比阿里前期采用IOE类似。\n\n如果是创业公司的业务早、中期阶段，可直接考虑采用阿里云&#47;腾讯云，性能、HA、伸缩性都有保证。\n\n此外，在文中备选方案1 - 开源方案中，如果从提供另外一种视角看问题的角度出发，个人会更加倾向于RabbitMQ。首先，RabbitMQ与Kafka都同样具备高可用、稳定性和高性能，但是，通过一些业界测试比较，RabbitMQ比Kafka更成熟、更可靠；其次，在高性能指标方面，Kafka胜出，kafka设计的初衷是处理日志，更适合IO高吞吐的处理。但是，对于“前浪微博”系统的QPS要求，RabbitMQ同样可以驾驭。为此，综合来看，会更加倾向于RabiitMQ。\n\n最后，通过本文再结合自己做技术最大的感悟是：做事情永远都要有B方案。\n","like_count":96,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418151,"discussion_content":"最好是“三方案”，又叫“第三选择”，可以防止思维狭隘，目光短浅，思维盲区等决策陷阱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527056228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2842415,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/5f/2f/251c062d.jpg","nickname":"鼎风","note":"","ucode":"1992C1061638BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548143,"discussion_content":"厉害了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643038408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9581,"user_name":"陈华英","can_delete":false,"product_type":"c1","uid":1004890,"ip_address":"","ucode":"7FB0F7D5425237","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/5a/f25d7438.jpg","comment_is_top":false,"comment_ctime":1526960303,"is_pvip":false,"replies":[{"id":2924,"content":"赞，被你发现了，限于篇幅无法细化，主备切换这部分可以有几个备选，zk是一种方式，还有不用zk的也可以。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526971372,"ip_address":"","comment_id":9581,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"文中的方案写得很清晰，有理有据。只是在主备切换的时候显得略了一点，上文中提到用zookeeper或者keepalived，可以分为两个备选方案。keepalived比较简单，主要是实现虚IP的漂移，这个对客户端是透明的。如果是zookeeper的话，客户端还需要从ZK上读下主节点","like_count":58,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418125,"discussion_content":"赞，被你发现了，限于篇幅无法细化，主备切换这部分可以有几个备选，zk是一种方式，还有不用zk的也可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526971372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9539,"user_name":"星火燎原","can_delete":false,"product_type":"c1","uid":1101373,"ip_address":"","ucode":"15AD8E3006E107","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/3d/385b8263.jpg","comment_is_top":false,"comment_ctime":1526949925,"is_pvip":false,"replies":[{"id":2872,"content":"点赞，这是可行方案","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526952637,"ip_address":"","comment_id":9539,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"高可用消息存储和读取可以采用mongo和redis 这么高的gps很难保证消息不丢 那么可以采用有消息确认机制和消息回溯的MQ  或者自研rpc的时候考虑消息发送失败的时候重新选择节点然后落盘","like_count":37,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418108,"discussion_content":"点赞，这是可行方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526952637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1247422,"avatar":"https://static001.geekbang.org/account/avatar/00/13/08/be/19527615.jpg","nickname":"上班族程序员设计师的水果","note":"","ucode":"C56B24D4BF1A79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298676,"discussion_content":"什么MQ  有 消息确认机制和消息回溯的功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597376254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1028343,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/f7/228a6c37.jpg","nickname":"江湖上","note":"","ucode":"E10516C681EF23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1247422,"avatar":"https://static001.geekbang.org/account/avatar/00/13/08/be/19527615.jpg","nickname":"上班族程序员设计师的水果","note":"","ucode":"C56B24D4BF1A79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324749,"discussion_content":"RocketMQ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605165692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298676,"ip_address":"","group_id":0},"score":324749,"extra":""}]}]},{"had_liked":false,"id":9682,"user_name":"王磊","can_delete":false,"product_type":"c1","uid":1050085,"ip_address":"","ucode":"A4DE9804642A08","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/e5/aa579968.jpg","comment_is_top":false,"comment_ctime":1527035710,"is_pvip":false,"replies":[{"id":2967,"content":"写错了，属于“计算高性能”范畴","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527037050,"ip_address":"","comment_id":9682,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"原文这句话理解有点困难\n&#39;高性能消息读取属于“计算高可用”的范畴&#39;","like_count":16,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418163,"discussion_content":"写错了，属于“计算高性能”范畴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527037050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1137880,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5c/d8/dfe1d4dc.jpg","nickname":"学斌","note":"","ucode":"ED3432D8EDC327","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374311,"discussion_content":"感觉还是不理解，高性怎么又转换成高可用？另外消息读取要快，不是应该是IO相关的吗？文章中也举例说了Netty。我的理解Netty的多路复用，是IO方面的高性能。而CPU相关的，才是计算高性能。但是也不是计算高可用吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621133260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9679,"user_name":"王磊","can_delete":false,"product_type":"c1","uid":1050085,"ip_address":"","ucode":"A4DE9804642A08","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/e5/aa579968.jpg","comment_is_top":false,"comment_ctime":1527035478,"is_pvip":false,"replies":[{"id":2968,"content":"赞，你可以思考一下怎么做😃","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527037103,"ip_address":"","comment_id":9679,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"方案二的架构图有些question (不是problem), 这个可以理解为分库后的主备方案吗，还是所有数据库是全量，我理解是前者，因为文中说分组间不同步，那么这里缺少一个根据消息路由的模块，对吧","like_count":10,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418161,"discussion_content":"赞，你可以思考一下怎么做😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527037103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2254854,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/06/e74b5675.jpg","nickname":"存在","note":"","ucode":"F3217DC5B799BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647115,"discussion_content":"看原文是简单轮询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719491184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/6f/c78ef1cf.jpg","nickname":"王二北","note":"","ucode":"D9090E28B3E1F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555065,"discussion_content":"应该是在客户端进行路由，没有任务分配器这个角色","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646731092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1872,"discussion_content":"根据上下文，应该没有路由吧，这里就是简单的轮询读，随机放消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563018329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9542,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1526950467,"is_pvip":false,"replies":[{"id":2871,"content":"微博有热点，异步消息没有热点哦，消息随便发给任何一台服务器都可以，可以采取轮询或者随机算法","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526952594,"ip_address":"","comment_id":9542,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"个人觉得方案2,3根据架构设计的3个原则已经是一个优秀的架构设计了，我只是感觉到微博的应用有个比较有特点的特征就是有热点的出现，如果热点出现，按方案2,3会出现消息都集中在一个分片中，从而导致分片所在主机处于饱和的状态，甚至崩溃掉，如果能像业务服务器中放一个sidecar(或者内嵌到程序中)，来负责根据规则的消息路由，并且规则是可以调整的，这样就可以应对热点问题","like_count":9,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418161,"discussion_content":"赞，你可以思考一下怎么做😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527037103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2254854,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/06/e74b5675.jpg","nickname":"存在","note":"","ucode":"F3217DC5B799BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647115,"discussion_content":"看原文是简单轮询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719491184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/6f/c78ef1cf.jpg","nickname":"王二北","note":"","ucode":"D9090E28B3E1F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555065,"discussion_content":"应该是在客户端进行路由，没有任务分配器这个角色","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646731092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1872,"discussion_content":"根据上下文，应该没有路由吧，这里就是简单的轮询读，随机放消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563018329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11841,"user_name":"gary","can_delete":false,"product_type":"c1","uid":1017223,"ip_address":"","ucode":"544C3790F22B83","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/87/68ff96c6.jpg","comment_is_top":false,"comment_ctime":1528384387,"is_pvip":false,"replies":[{"id":3914,"content":"我的经验主要在互联网，总体技术趋势是云计算，不管是开源还是闭源。\n\nOracle这类企业，要么自己开始提供云计算云存储，要么就是为云厂商生产设备。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528449350,"ip_address":"","comment_id":11841,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"李老师，我们最近帮银行做系统，发现现在银行业仍然有很多公司使用weblogic &#47; websphere 这样的容器，就目前形势来看weblogic较一些开源方案好像确实更加稳定和安全。 目前来看老师现在给的一些技术思路都是偏互联网方向，不知道老师是否有过一些厂商产品方面经验，比如weblogic 的mq性能水平是什么样的，和开源技术比较有哪些优劣势，好像网上这方面资料也不多，所以想请教李老师。另外不知道李老师眼中如何看待这些类似oracle 大厂商产品和未来我们的互联网开源产品在市场上的发展趋势","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419023,"discussion_content":"我的经验主要在互联网，总体技术趋势是云计算，不管是开源还是闭源。\n\nOracle这类企业，要么自己开始提供云计算云存储，要么就是为云厂商生产设备。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528449350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11090,"user_name":"SHLOMA","can_delete":false,"product_type":"c1","uid":1066000,"ip_address":"","ucode":"50C0FF9C3E0FFD","user_header":"https://static001.geekbang.org/account/avatar/00/10/44/10/7bfc89a8.jpg","comment_is_top":false,"comment_ctime":1527833301,"is_pvip":false,"replies":[{"id":3519,"content":"太多了，还是期望你掌握了整体架构设计理论，然后按照这套理论的指导去自己学习","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527837698,"ip_address":"","comment_id":11090,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"李老师专栏讲解模式很好，菜鸟都能跟着进来，看到此处感觉需要学习好多技术，望老师有机会可以出个架构相关技术学习的专栏","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419023,"discussion_content":"我的经验主要在互联网，总体技术趋势是云计算，不管是开源还是闭源。\n\nOracle这类企业，要么自己开始提供云计算云存储，要么就是为云厂商生产设备。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528449350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11479,"user_name":"XB.Chan","can_delete":false,"product_type":"c1","uid":1117833,"ip_address":"","ucode":"ACFFE2C5C952CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/89/027fc917.jpg","comment_is_top":false,"comment_ctime":1528161694,"is_pvip":false,"replies":[{"id":3693,"content":"MySQL的读写简单表结构（例如k-v）远远超过800的QPS和TPS，我们测试k-v都是上万的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528186424,"ip_address":"","comment_id":11479,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"备选方案2中，采用集群+MySQL的方式开发，满足QPS13800的需求，但是MySQL按照性能来说800&#47;秒的插入速度算是比较快了，那这样平均算下来13800&#47;800约等于18台服务器？？","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418712,"discussion_content":"太多了，还是期望你掌握了整体架构设计理论，然后按照这套理论的指导去自己学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527837698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9573,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1118559,"ip_address":"","ucode":"0BEC28E0772A39","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/5f/0d24dba2.jpg","comment_is_top":false,"comment_ctime":1526953780,"is_pvip":false,"replies":[{"id":2927,"content":"是可以用rabbitmq, activemq等方案，具体的区别等你的答案😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526971603,"ip_address":"","comment_id":9573,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"选择kafka为啥不选rabbitmq\n，他俩主要区别是啥？","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418860,"discussion_content":"MySQL的读写简单表结构（例如k-v）远远超过800的QPS和TPS，我们测试k-v都是上万的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528186424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266811,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","comment_is_top":false,"comment_ctime":1607494561,"is_pvip":false,"replies":[{"id":96897,"content":"要了解细节，但是这里的细节仅限于影响方案决策的细节，而不是API的某个参数这种细节。以Netty为例，理解Netty的Reactor模式，多线程模式是需要在架构设计阶段关注的细节；但是设置tcp_nodelay就不是架构阶段需要关注的细节。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1607509282,"ip_address":"","comment_id":266811,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"当面对一个即将解决的问题时，我们前期会通过调研进行技术选型，这个过程我理解是必须要了解下细节的，避免因为选择一个看似ok的方案，最终却发现根本无法实现。","like_count":4},{"had_liked":false,"id":266449,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1607343326,"is_pvip":false,"replies":[{"id":96802,"content":"计算服务器和存储服务器，计算服务器负责功能实现，存储服务器负责存储数据","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1607394342,"ip_address":"","comment_id":266449,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"方案2中每个分组中为什么有4台服务器?? 每个分组中上面的两台服务器是起到什么作用呢?","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511396,"discussion_content":"要了解细节，但是这里的细节仅限于影响方案决策的细节，而不是API的某个参数这种细节。以Netty为例，理解Netty的Reactor模式，多线程模式是需要在架构设计阶段关注的细节；但是设置tcp_nodelay就不是架构阶段需要关注的细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607509282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11074,"user_name":"arebya","can_delete":false,"product_type":"c1","uid":1142802,"ip_address":"","ucode":"074ECE8D6C1874","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/12/aa74da82.jpg","comment_is_top":false,"comment_ctime":1527823072,"is_pvip":false,"replies":[{"id":3523,"content":"流程的作用就是保证换谁来做都不会走偏，要知道能设计出三个备选方案，不是形式上应付了事就能够完成的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527838189,"ip_address":"","comment_id":11074,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我们会在设计最终方案的时候穿插考虑其他方案做对比，按照3到5个备选方案的设计，会不会长期下来流于形式，而且这对团队来说也是成本。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418706,"discussion_content":"流程的作用就是保证换谁来做都不会走偏，要知道能设计出三个备选方案，不是形式上应付了事就能够完成的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1527838189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9532,"user_name":"bluefantasy","can_delete":false,"product_type":"c1","uid":1101382,"ip_address":"","ucode":"2F24E373FDDE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/46/67c145ee.jpg","comment_is_top":false,"comment_ctime":1526948923,"is_pvip":false,"replies":[{"id":2877,"content":"kafka的文档中有消息队列的详细设计说明，kafka消费时也是采取pull模式而不是push模式","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526953214,"ip_address":"","comment_id":9532,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师好，个人觉得像前浪微博这种场景使用Kafka,Rabbitmq会比Netty+Mysql自研好很多。主要原因是这个场景对实时性要求还是比较高的（一般采取消息队列主动推送模式）。开源的消息队列都有对消费者的推送模式。自研的话，如果采用消息推送模式，消息队列服务需要在服务端记录所有消费者的状态信息，还要考虑各种异常和消息确认，实现起来应该是很复杂。一般公司根本没有这个技术实力。个人见解，希望得到老师的回复。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418104,"discussion_content":"kafka的文档中有消息队列的详细设计说明，kafka消费时也是采取pull模式而不是push模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526953214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16698,"user_name":"执着","can_delete":false,"product_type":"c1","uid":1005019,"ip_address":"","ucode":"D81A82948AD61D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/db/59219663.jpg","comment_is_top":false,"comment_ctime":1532100756,"is_pvip":false,"replies":[{"id":5821,"content":"消费确实没有热点，微博访问才有热点问题","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532175037,"ip_address":"","comment_id":16698,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"本节内容看到了备选方案的设计，很有启发，一定要有差异化；之前做设计也一直有做“备选方案”，但是发现还是性质一样，在做备选方案时候已经陷入自我坚持的认知缺陷。\n另外有一个问题：在留言区，看到几次有同学提出“热点”，在该章节分析里面，我们是围绕一次发送微博事件，需要其它子系统做出某些响应，从而选择了MQ的方案构思；近一步来设计落地方案；这时候来看，消息事件的消费并不存在热点呀？它们都是一次性的事情； \n这里不知道是否我整体理解偏颇？\n\n另外关于方案的选择上，方案一的kafka只保障了高性能，但是没有保障我们分析的复杂度“高可用存储”。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420903,"discussion_content":"消费确实没有热点，微博访问才有热点问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532175037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1333590,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/56/8dcf2251.jpg","nickname":"小鱼儿","note":"","ucode":"E455C85748F4F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595975,"discussion_content":"这里讨论的是应用内部子系统的数据传递，消息传递是一次性的，一般情况下没有热点问题；微博热点是用户重复对数据的读取，数据读取存在可重复性，可能存在热点问题，这样理解是否正确？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670513153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9784,"user_name":"呵呵","can_delete":false,"product_type":"c1","uid":1052862,"ip_address":"","ucode":"986CC73CFBBC67","user_header":"","comment_is_top":false,"comment_ctime":1527085154,"is_pvip":false,"replies":[{"id":3080,"content":"一个是主服务器，一个是主数据库","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527173129,"ip_address":"","comment_id":9784,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"备选方案2里，一个数据分组有两个主，是什么意思？","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418206,"discussion_content":"一个是主服务器，一个是主数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527173129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341840,"user_name":"Geek_0b51e1","can_delete":false,"product_type":"c1","uid":2243431,"ip_address":"","ucode":"66AA2CBCD39F0E","user_header":"","comment_is_top":false,"comment_ctime":1649856523,"is_pvip":false,"replies":[{"id":124984,"content":"挂了就挂了，没法保证无论在任何场景下都能完美不丢任何数据，从概率和成本的角度综合考虑 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1649985687,"ip_address":"","comment_id":341840,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"请问下主mysql来不及同步数据到备mysql就挂了应该怎么办","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563357,"discussion_content":"挂了就挂了，没法保证无论在任何场景下都能完美不丢任何数据，从概率和成本的角度综合考虑 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649985687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80394,"user_name":"威","can_delete":false,"product_type":"c1","uid":1068542,"ip_address":"","ucode":"C921CDCB22B9A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/fe/882eaf0f.jpg","comment_is_top":false,"comment_ctime":1553655082,"is_pvip":false,"replies":[{"id":29352,"content":"主主同步设计很复杂，备机升主机提供写服务也很复杂，需要考虑数据不同步，数据冲突，多次切换等各种异常场景","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1553699414,"ip_address":"","comment_id":80394,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"您好，老师，在第二个备选方案中，服务器为什么要采取主备的形式，而不采用主主的形式呢，这样不是更能利用好资源吗？ 另外为什么主db down掉后，备db为什么不能提供写服务呢？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444846,"discussion_content":"主主同步设计很复杂，备机升主机提供写服务也很复杂，需要考虑数据不同步，数据冲突，多次切换等各种异常场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553699414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65793,"user_name":"风声是棵树","can_delete":false,"product_type":"c1","uid":1230289,"ip_address":"","ucode":"7C39C02E5C49D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/d1/ebb0b033.jpg","comment_is_top":false,"comment_ctime":1549644476,"is_pvip":false,"replies":[{"id":23395,"content":"轮询所有分组就可以了，不需要实时，消息队列本来就是用于异步处理的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1549870847,"ip_address":"","comment_id":65793,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师您前边提到方案2消息的读取方只要读到最新消息几颗不需要根据ID判断分组，那是不是读取方要实时的取所有分组的最新消息？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438591,"discussion_content":"轮询所有分组就可以了，不需要实时，消息队列本来就是用于异步处理的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549870847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559830,"discussion_content":"轮询所有分组，不会有性能问题吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648992847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52552,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1545423363,"is_pvip":false,"replies":[{"id":19346,"content":"通常5个还是有点多，一般建议3个","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1545645384,"ip_address":"","comment_id":52552,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"备选方案设计，3-5个最好，尝试新技术，扩展视野。注意方案之间的差别，从不同的角度，如成本。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433906,"discussion_content":"通常5个还是有点多，一般建议3个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545645384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333280,"discussion_content":"100%的高可用是不存在的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607494437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266811,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/d1ab239e.jpg","comment_is_top":false,"comment_ctime":1607494561,"is_pvip":false,"replies":[{"id":96897,"content":"要了解细节，但是这里的细节仅限于影响方案决策的细节，而不是API的某个参数这种细节。以Netty为例，理解Netty的Reactor模式，多线程模式是需要在架构设计阶段关注的细节；但是设置tcp_nodelay就不是架构阶段需要关注的细节。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1607509282,"ip_address":"","comment_id":266811,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"当面对一个即将解决的问题时，我们前期会通过调研进行技术选型，这个过程我理解是必须要了解下细节的，避免因为选择一个看似ok的方案，最终却发现根本无法实现。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511396,"discussion_content":"要了解细节，但是这里的细节仅限于影响方案决策的细节，而不是API的某个参数这种细节。以Netty为例，理解Netty的Reactor模式，多线程模式是需要在架构设计阶段关注的细节；但是设置tcp_nodelay就不是架构阶段需要关注的细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607509282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266449,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1607343326,"is_pvip":false,"replies":[{"id":96802,"content":"计算服务器和存储服务器，计算服务器负责功能实现，存储服务器负责存储数据","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1607394342,"ip_address":"","comment_id":266449,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"方案2中每个分组中为什么有4台服务器?? 每个分组中上面的两台服务器是起到什么作用呢?","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511270,"discussion_content":"计算服务器和存储服务器，计算服务器负责功能实现，存储服务器负责存储数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607394342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11074,"user_name":"arebya","can_delete":false,"product_type":"c1","uid":1142802,"ip_address":"","ucode":"074ECE8D6C1874","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/12/aa74da82.jpg","comment_is_top":false,"comment_ctime":1527823072,"is_pvip":false,"replies":[{"id":3523,"content":"流程的作用就是保证换谁来做都不会走偏，要知道能设计出三个备选方案，不是形式上应付了事就能够完成的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527838189,"ip_address":"","comment_id":11074,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我们会在设计最终方案的时候穿插考虑其他方案做对比，按照3到5个备选方案的设计，会不会长期下来流于形式，而且这对团队来说也是成本。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511270,"discussion_content":"计算服务器和存储服务器，计算服务器负责功能实现，存储服务器负责存储数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607394342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9532,"user_name":"bluefantasy","can_delete":false,"product_type":"c1","uid":1101382,"ip_address":"","ucode":"2F24E373FDDE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/46/67c145ee.jpg","comment_is_top":false,"comment_ctime":1526948923,"is_pvip":false,"replies":[{"id":2877,"content":"kafka的文档中有消息队列的详细设计说明，kafka消费时也是采取pull模式而不是push模式","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526953214,"ip_address":"","comment_id":9532,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师好，个人觉得像前浪微博这种场景使用Kafka,Rabbitmq会比Netty+Mysql自研好很多。主要原因是这个场景对实时性要求还是比较高的（一般采取消息队列主动推送模式）。开源的消息队列都有对消费者的推送模式。自研的话，如果采用消息推送模式，消息队列服务需要在服务端记录所有消费者的状态信息，还要考虑各种异常和消息确认，实现起来应该是很复杂。一般公司根本没有这个技术实力。个人见解，希望得到老师的回复。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418706,"discussion_content":"流程的作用就是保证换谁来做都不会走偏，要知道能设计出三个备选方案，不是形式上应付了事就能够完成的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1527838189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16698,"user_name":"执着","can_delete":false,"product_type":"c1","uid":1005019,"ip_address":"","ucode":"D81A82948AD61D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/db/59219663.jpg","comment_is_top":false,"comment_ctime":1532100756,"is_pvip":false,"replies":[{"id":5821,"content":"消费确实没有热点，微博访问才有热点问题","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532175037,"ip_address":"","comment_id":16698,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"本节内容看到了备选方案的设计，很有启发，一定要有差异化；之前做设计也一直有做“备选方案”，但是发现还是性质一样，在做备选方案时候已经陷入自我坚持的认知缺陷。\n另外有一个问题：在留言区，看到几次有同学提出“热点”，在该章节分析里面，我们是围绕一次发送微博事件，需要其它子系统做出某些响应，从而选择了MQ的方案构思；近一步来设计落地方案；这时候来看，消息事件的消费并不存在热点呀？它们都是一次性的事情； \n这里不知道是否我整体理解偏颇？\n\n另外关于方案的选择上，方案一的kafka只保障了高性能，但是没有保障我们分析的复杂度“高可用存储”。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418104,"discussion_content":"kafka的文档中有消息队列的详细设计说明，kafka消费时也是采取pull模式而不是push模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526953214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9784,"user_name":"呵呵","can_delete":false,"product_type":"c1","uid":1052862,"ip_address":"","ucode":"986CC73CFBBC67","user_header":"","comment_is_top":false,"comment_ctime":1527085154,"is_pvip":false,"replies":[{"id":3080,"content":"一个是主服务器，一个是主数据库","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527173129,"ip_address":"","comment_id":9784,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"备选方案2里，一个数据分组有两个主，是什么意思？","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420903,"discussion_content":"消费确实没有热点，微博访问才有热点问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532175037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1333590,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/56/8dcf2251.jpg","nickname":"小鱼儿","note":"","ucode":"E455C85748F4F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595975,"discussion_content":"这里讨论的是应用内部子系统的数据传递，消息传递是一次性的，一般情况下没有热点问题；微博热点是用户重复对数据的读取，数据读取存在可重复性，可能存在热点问题，这样理解是否正确？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670513153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341840,"user_name":"Geek_0b51e1","can_delete":false,"product_type":"c1","uid":2243431,"ip_address":"","ucode":"66AA2CBCD39F0E","user_header":"","comment_is_top":false,"comment_ctime":1649856523,"is_pvip":false,"replies":[{"id":124984,"content":"挂了就挂了，没法保证无论在任何场景下都能完美不丢任何数据，从概率和成本的角度综合考虑 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1649985687,"ip_address":"","comment_id":341840,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"请问下主mysql来不及同步数据到备mysql就挂了应该怎么办","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418206,"discussion_content":"一个是主服务器，一个是主数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527173129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80394,"user_name":"威","can_delete":false,"product_type":"c1","uid":1068542,"ip_address":"","ucode":"C921CDCB22B9A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/fe/882eaf0f.jpg","comment_is_top":false,"comment_ctime":1553655082,"is_pvip":false,"replies":[{"id":29352,"content":"主主同步设计很复杂，备机升主机提供写服务也很复杂，需要考虑数据不同步，数据冲突，多次切换等各种异常场景","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1553699414,"ip_address":"","comment_id":80394,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"您好，老师，在第二个备选方案中，服务器为什么要采取主备的形式，而不采用主主的形式呢，这样不是更能利用好资源吗？ 另外为什么主db down掉后，备db为什么不能提供写服务呢？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563357,"discussion_content":"挂了就挂了，没法保证无论在任何场景下都能完美不丢任何数据，从概率和成本的角度综合考虑 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649985687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65793,"user_name":"风声是棵树","can_delete":false,"product_type":"c1","uid":1230289,"ip_address":"","ucode":"7C39C02E5C49D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/d1/ebb0b033.jpg","comment_is_top":false,"comment_ctime":1549644476,"is_pvip":false,"replies":[{"id":23395,"content":"轮询所有分组就可以了，不需要实时，消息队列本来就是用于异步处理的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1549870847,"ip_address":"","comment_id":65793,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师您前边提到方案2消息的读取方只要读到最新消息几颗不需要根据ID判断分组，那是不是读取方要实时的取所有分组的最新消息？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444846,"discussion_content":"主主同步设计很复杂，备机升主机提供写服务也很复杂，需要考虑数据不同步，数据冲突，多次切换等各种异常场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553699414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52552,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1545423363,"is_pvip":false,"replies":[{"id":19346,"content":"通常5个还是有点多，一般建议3个","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1545645384,"ip_address":"","comment_id":52552,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"备选方案设计，3-5个最好，尝试新技术，扩展视野。注意方案之间的差别，从不同的角度，如成本。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438591,"discussion_content":"轮询所有分组就可以了，不需要实时，消息队列本来就是用于异步处理的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549870847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559830,"discussion_content":"轮询所有分组，不会有性能问题吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648992847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12328,"user_name":"付之一笑","can_delete":false,"product_type":"c1","uid":1022597,"ip_address":"","ucode":"DF3DD91688A2BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9a/85/a00fe697.jpg","comment_is_top":false,"comment_ctime":1528766424,"is_pvip":false,"replies":[{"id":4105,"content":"nginx也可以，写个lua脚本做逻辑处理，但这不是常规做法","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528869427,"ip_address":"","comment_id":12328,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"为什么不用nginx实现主备","like_count":2},{"had_liked":false,"id":12021,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1528519688,"is_pvip":false,"replies":[{"id":3973,"content":"三个选择是决策领域里面防止思维狭隘的一种非常重要和有效的方法","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528616666,"ip_address":"","comment_id":12021,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"本章最大的收获在于三个方案原则，给领导做选择题而不是必选题，这句话早有耳闻，但真正运用的不多。三个方案原则最大的好处是让自己更为深入的思考，对问题的了解更为深刻，不会犯太低级的错误。真是知易行难","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419214,"discussion_content":"nginx也可以，写个lua脚本做逻辑处理，但这不是常规做法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528869427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1873,"discussion_content":"nginx+lua一般都用在哪些场景下？可否简单说下，如果用到过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563018932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9696,"user_name":"geektcp","can_delete":false,"product_type":"c1","uid":1119594,"ip_address":"","ucode":"F98DF956FA19FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/6a/5c861711.jpg","comment_is_top":false,"comment_ctime":1527037574,"is_pvip":false,"replies":[{"id":2993,"content":"是的，我们遇到过，如果是日志，丢失问题不大，但业务消息，丢失后修复还是比较蛋疼","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527055832,"ip_address":"","comment_id":9696,"utype":1}],"discussion_count":4,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"我用Kafka多些，有时候会集群崩溃，那部分消息一般就丢失了","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419085,"discussion_content":"三个选择是决策领域里面防止思维狭隘的一种非常重要和有效的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528616666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9639,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1526998310,"is_pvip":false,"replies":[{"id":2999,"content":"可以看kafka的设计文档，有详细描述","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527056391,"ip_address":"","comment_id":9639,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"1.用现有的也要考虑业务接入后性能情况，如消费端的消费能力会影响到推拉模式的选择等\n\n2. 缓存热点问题，其实在 tair 里做的方案就很棒，首先本地会维护一个热点区域用于存储集群通知的热点数据","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418168,"discussion_content":"是的，我们遇到过，如果是日志，丢失问题不大，但业务消息，丢失后修复还是比较蛋疼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361341,"discussion_content":"大佬，能分享一下消息丢失后处理的解决方案吗？您在阿里这种大厂，接触的肯定很多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616645023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1737886,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/84/9e/d4c0e2c4.jpg","nickname":"Broadm","note":"","ucode":"BEA06300731AE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387893,"discussion_content":"消息感觉还是本地表的方案靠谱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628490054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361342,"discussion_content":"消息丢失后处理的解决方案，网上方案有价值的很少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616645054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9597,"user_name":"东","can_delete":false,"product_type":"c1","uid":1043947,"ip_address":"","ucode":"0FF5018422CEA9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/eb/88cac7a5.jpg","comment_is_top":false,"comment_ctime":1526976504,"is_pvip":false,"replies":[{"id":2950,"content":"学习了，不过这个是要上云吧","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526988785,"ip_address":"","comment_id":9597,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"AWS SQS，如果消息size 大于256k，SQS +S3","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418145,"discussion_content":"可以看kafka的设计文档，有详细描述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527056391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9577,"user_name":"Snway","can_delete":false,"product_type":"c1","uid":1102888,"ip_address":"","ucode":"0AD31AECA8A8F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/28/3b6546e8.jpg","comment_is_top":false,"comment_ctime":1526955641,"is_pvip":false,"replies":[{"id":2926,"content":"storm用作消息队列，感觉有点杀鸡用牛刀呢，虽然功能上是可以，而且消息读取流程感觉比较难做","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526971556,"ip_address":"","comment_id":9577,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"storm+redis可行？\n利用storm流式计算与分布式特性，redis存储特性","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418132,"discussion_content":"学习了，不过这个是要上云吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526988785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559831,"discussion_content":"目前公司采用的就是AWS SQS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648992972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292354,"user_name":"stevensafin","can_delete":false,"product_type":"c1","uid":1053553,"ip_address":"","ucode":"CC692A740C5FD5","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/71/3762b089.jpg","comment_is_top":false,"comment_ctime":1620790524,"is_pvip":false,"replies":[{"id":105880,"content":"技术实现复杂度和投入人力","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1620818694,"ip_address":"","comment_id":292354,"utype":1}],"discussion_count":1,"race_medal":5,"score":4,"product_id":100006601,"comment_content":"希望老师解答疑惑：针对一般的业务需求，相对而言比较小，该从什么角度来设计备选方案呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418122,"discussion_content":"storm用作消息队列，感觉有点杀鸡用牛刀呢，虽然功能上是可以，而且消息读取流程感觉比较难做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526971556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244060,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598369043,"is_pvip":true,"replies":[{"id":90068,"content":"可以这么说","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1598686455,"ip_address":"","comment_id":244060,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"leveldb只是存储，高可用不满足，hbase集群方案更完整，但是hbase比kafka和rabbitmq还复杂，如果团队已经有hbase的经验才考虑吧。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519792,"discussion_content":"技术实现复杂度和投入人力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620818694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184902,"user_name":"steve_lhf","can_delete":false,"product_type":"c1","uid":1886399,"ip_address":"","ucode":"F0829E642B7624","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKo0Uz1C0OCvc2XJibOkdB0PWDEOBao3DRHic8Y7nnyZ80rV4l0UBolYzcAPDLmBWZsOWGDs3aetWLQ/132","comment_is_top":false,"comment_ctime":1583429478,"is_pvip":false,"replies":[{"id":72865,"content":"轮询所有节点","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1584426127,"ip_address":"","comment_id":184902,"utype":1}],"discussion_count":3,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"写数据不按业务分组随机写入某个分组 各分组数据库也不会互相同步 那读取数据的时候怎么能正确定位到取那个分组读取呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504463,"discussion_content":"可以这么说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598686455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141274,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1318915,"ip_address":"","ucode":"4907A3750CEAD6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo2SjCeylLv0P3Glle5277kA4b8cAuxr1NrC0njPKEqzSpB8IEicHB29GicFFwG1qiaxs4hxRiaBmoibVw/132","comment_is_top":false,"comment_ctime":1571134090,"is_pvip":false,"replies":[{"id":54776,"content":"这个假如不成立，es就是为这种聚合场景查询设计的，你不用es，自己做的方案最后看起来和ES差不多","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571268980,"ip_address":"","comment_id":141274,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"对于数据分散集群，假如要捞取符合条件的微博用户分页查怎么办呢，假如不考虑es直接db的话","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486165,"discussion_content":"轮询所有节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584426127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361336,"discussion_content":"追加回复：再比如20个节点的轮询影响查询效率和并发性，那么引入数据同步机制，怎么多节点消息同步的实时性也是一个问题，如果并发效率过高，查询速度可能大于同步速度。所有方案需要根据实际情况进行选择，并且还需要根据测试后的结果进行调整。以上是个人看法和见解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616644152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361334,"discussion_content":"如果采用轮询读取，比如集群有20个节点，最坏情况可能要轮询20次，这样的查询效率是不是非常低的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616643959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12328,"user_name":"付之一笑","can_delete":false,"product_type":"c1","uid":1022597,"ip_address":"","ucode":"DF3DD91688A2BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9a/85/a00fe697.jpg","comment_is_top":false,"comment_ctime":1528766424,"is_pvip":false,"replies":[{"id":4105,"content":"nginx也可以，写个lua脚本做逻辑处理，但这不是常规做法","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528869427,"ip_address":"","comment_id":12328,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"为什么不用nginx实现主备","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419214,"discussion_content":"nginx也可以，写个lua脚本做逻辑处理，但这不是常规做法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528869427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1873,"discussion_content":"nginx+lua一般都用在哪些场景下？可否简单说下，如果用到过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563018932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12021,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1528519688,"is_pvip":false,"replies":[{"id":3973,"content":"三个选择是决策领域里面防止思维狭隘的一种非常重要和有效的方法","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528616666,"ip_address":"","comment_id":12021,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"本章最大的收获在于三个方案原则，给领导做选择题而不是必选题，这句话早有耳闻，但真正运用的不多。三个方案原则最大的好处是让自己更为深入的思考，对问题的了解更为深刻，不会犯太低级的错误。真是知易行难","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419085,"discussion_content":"三个选择是决策领域里面防止思维狭隘的一种非常重要和有效的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528616666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9696,"user_name":"geektcp","can_delete":false,"product_type":"c1","uid":1119594,"ip_address":"","ucode":"F98DF956FA19FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/6a/5c861711.jpg","comment_is_top":false,"comment_ctime":1527037574,"is_pvip":false,"replies":[{"id":2993,"content":"是的，我们遇到过，如果是日志，丢失问题不大，但业务消息，丢失后修复还是比较蛋疼","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527055832,"ip_address":"","comment_id":9696,"utype":1}],"discussion_count":4,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"我用Kafka多些，有时候会集群崩溃，那部分消息一般就丢失了","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418168,"discussion_content":"是的，我们遇到过，如果是日志，丢失问题不大，但业务消息，丢失后修复还是比较蛋疼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361341,"discussion_content":"大佬，能分享一下消息丢失后处理的解决方案吗？您在阿里这种大厂，接触的肯定很多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616645023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1737886,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/84/9e/d4c0e2c4.jpg","nickname":"Broadm","note":"","ucode":"BEA06300731AE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387893,"discussion_content":"消息感觉还是本地表的方案靠谱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628490054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361342,"discussion_content":"消息丢失后处理的解决方案，网上方案有价值的很少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616645054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9639,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1526998310,"is_pvip":false,"replies":[{"id":2999,"content":"可以看kafka的设计文档，有详细描述","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527056391,"ip_address":"","comment_id":9639,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"1.用现有的也要考虑业务接入后性能情况，如消费端的消费能力会影响到推拉模式的选择等\n\n2. 缓存热点问题，其实在 tair 里做的方案就很棒，首先本地会维护一个热点区域用于存储集群通知的热点数据","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418145,"discussion_content":"可以看kafka的设计文档，有详细描述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527056391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9597,"user_name":"东","can_delete":false,"product_type":"c1","uid":1043947,"ip_address":"","ucode":"0FF5018422CEA9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/eb/88cac7a5.jpg","comment_is_top":false,"comment_ctime":1526976504,"is_pvip":false,"replies":[{"id":2950,"content":"学习了，不过这个是要上云吧","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526988785,"ip_address":"","comment_id":9597,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"AWS SQS，如果消息size 大于256k，SQS +S3","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418132,"discussion_content":"学习了，不过这个是要上云吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526988785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559831,"discussion_content":"目前公司采用的就是AWS SQS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648992972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9577,"user_name":"Snway","can_delete":false,"product_type":"c1","uid":1102888,"ip_address":"","ucode":"0AD31AECA8A8F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/28/3b6546e8.jpg","comment_is_top":false,"comment_ctime":1526955641,"is_pvip":false,"replies":[{"id":2926,"content":"storm用作消息队列，感觉有点杀鸡用牛刀呢，虽然功能上是可以，而且消息读取流程感觉比较难做","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526971556,"ip_address":"","comment_id":9577,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"storm+redis可行？\n利用storm流式计算与分布式特性，redis存储特性","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418122,"discussion_content":"storm用作消息队列，感觉有点杀鸡用牛刀呢，虽然功能上是可以，而且消息读取流程感觉比较难做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526971556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292354,"user_name":"stevensafin","can_delete":false,"product_type":"c1","uid":1053553,"ip_address":"","ucode":"CC692A740C5FD5","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/71/3762b089.jpg","comment_is_top":false,"comment_ctime":1620790524,"is_pvip":false,"replies":[{"id":105880,"content":"技术实现复杂度和投入人力","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1620818694,"ip_address":"","comment_id":292354,"utype":1}],"discussion_count":1,"race_medal":5,"score":4,"product_id":100006601,"comment_content":"希望老师解答疑惑：针对一般的业务需求，相对而言比较小，该从什么角度来设计备选方案呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519792,"discussion_content":"技术实现复杂度和投入人力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620818694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244060,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598369043,"is_pvip":true,"replies":[{"id":90068,"content":"可以这么说","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1598686455,"ip_address":"","comment_id":244060,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"leveldb只是存储，高可用不满足，hbase集群方案更完整，但是hbase比kafka和rabbitmq还复杂，如果团队已经有hbase的经验才考虑吧。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504463,"discussion_content":"可以这么说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598686455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184902,"user_name":"steve_lhf","can_delete":false,"product_type":"c1","uid":1886399,"ip_address":"","ucode":"F0829E642B7624","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKo0Uz1C0OCvc2XJibOkdB0PWDEOBao3DRHic8Y7nnyZ80rV4l0UBolYzcAPDLmBWZsOWGDs3aetWLQ/132","comment_is_top":false,"comment_ctime":1583429478,"is_pvip":false,"replies":[{"id":72865,"content":"轮询所有节点","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1584426127,"ip_address":"","comment_id":184902,"utype":1}],"discussion_count":3,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"写数据不按业务分组随机写入某个分组 各分组数据库也不会互相同步 那读取数据的时候怎么能正确定位到取那个分组读取呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486165,"discussion_content":"轮询所有节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584426127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361336,"discussion_content":"追加回复：再比如20个节点的轮询影响查询效率和并发性，那么引入数据同步机制，怎么多节点消息同步的实时性也是一个问题，如果并发效率过高，查询速度可能大于同步速度。所有方案需要根据实际情况进行选择，并且还需要根据测试后的结果进行调整。以上是个人看法和见解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616644152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361334,"discussion_content":"如果采用轮询读取，比如集群有20个节点，最坏情况可能要轮询20次，这样的查询效率是不是非常低的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616643959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141274,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1318915,"ip_address":"","ucode":"4907A3750CEAD6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo2SjCeylLv0P3Glle5277kA4b8cAuxr1NrC0njPKEqzSpB8IEicHB29GicFFwG1qiaxs4hxRiaBmoibVw/132","comment_is_top":false,"comment_ctime":1571134090,"is_pvip":false,"replies":[{"id":54776,"content":"这个假如不成立，es就是为这种聚合场景查询设计的，你不用es，自己做的方案最后看起来和ES差不多","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571268980,"ip_address":"","comment_id":141274,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"对于数据分散集群，假如要捞取符合条件的微博用户分页查怎么办呢，假如不考虑es直接db的话","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470708,"discussion_content":"这个假如不成立，es就是为这种聚合场景查询设计的，你不用es，自己做的方案最后看起来和ES差不多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571268980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131191,"user_name":"davidcandio","can_delete":false,"product_type":"c1","uid":1611404,"ip_address":"","ucode":"7C4F8E605AE7FF","user_header":"https://static001.geekbang.org/account/avatar/00/18/96/8c/422cbe4f.jpg","comment_is_top":false,"comment_ctime":1567667087,"is_pvip":false,"replies":[{"id":50310,"content":"是的，这样够用了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1567841157,"ip_address":"","comment_id":131191,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"关于方案2，是指读取方通过SDK定时（譬如100ms）拉取所有分组的最新消息，把单个分组的QPS限制为跟 读取方数量 和 定时频率 相关？","like_count":1},{"had_liked":false,"id":66404,"user_name":"展飞","can_delete":false,"product_type":"c1","uid":1265637,"ip_address":"","ucode":"8799F60131C291","user_header":"https://static001.geekbang.org/account/avatar/00/13/4f/e5/381ca282.jpg","comment_is_top":false,"comment_ctime":1549935729,"is_pvip":false,"replies":[{"id":24317,"content":"不是，是消息发送方，以SDK的形式嵌入在各个业务系统","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1550548401,"ip_address":"","comment_id":66404,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"“客户端将消息依次写入不同的服务器；某台服务器异常的情况下，客户端直接将消息写入下一台正常的服务器即可。”请问这里的客户端是指在服务器端进行任务分配的一台服务器吗？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466328,"discussion_content":"是的，这样够用了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567841157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58986,"user_name":"torres","can_delete":false,"product_type":"c1","uid":1108761,"ip_address":"","ucode":"34DABCFC7B74EA","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/19/76b0b98c.jpg","comment_is_top":false,"comment_ctime":1547266203,"is_pvip":false,"replies":[{"id":21362,"content":"是的，这种极端情况就没办法了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1547281948,"ip_address":"","comment_id":58986,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师，请教一个问题。在集群+sql存储的备选方案中，对于消息对接系统某一个分组而言，主服务器和备用mysql同时宕机，是否就无法读取对应的消息数据了？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436266,"discussion_content":"是的，这种极端情况就没办法了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547281948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46029,"user_name":"2018","can_delete":false,"product_type":"c1","uid":1107371,"ip_address":"","ucode":"4C2CD47AD70177","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/ab/6fab2492.jpg","comment_is_top":false,"comment_ctime":1543836095,"is_pvip":true,"replies":[{"id":16908,"content":"这只是一个假想的场景，你真正做的时候完全可以考虑它","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1544133504,"ip_address":"","comment_id":46029,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"为什么没有考虑rocketmq呢，rocketmq的稳定性式吞吐量上都是可以的，看了这么多评论，没有人提到这个呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431311,"discussion_content":"这只是一个假想的场景，你真正做的时候完全可以考虑它","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544133504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43090,"user_name":"西北","can_delete":false,"product_type":"c1","uid":1323080,"ip_address":"","ucode":"9321FCE2984519","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/48/afb8f799.jpg","comment_is_top":false,"comment_ctime":1543159462,"is_pvip":false,"replies":[{"id":15489,"content":"消息队列读取方只要读取到最新消息即可，不需要根据消息id来读取，因此不需要先计算消息在那个分组上","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1543216119,"ip_address":"","comment_id":43090,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师好，我想问下方案二采用轮询读取数据，怎么找到要读哪个分组的数据？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431311,"discussion_content":"这只是一个假想的场景，你真正做的时候完全可以考虑它","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544133504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37361,"user_name":"糖果吃","can_delete":false,"product_type":"c1","uid":1211034,"ip_address":"","ucode":"9083D7CC5B0EC0","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/9a/a3934531.jpg","comment_is_top":false,"comment_ctime":1541556694,"is_pvip":false,"replies":[{"id":13620,"content":"所以复杂性分析很关键","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541752304,"ip_address":"","comment_id":37361,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"竟然留言不能回复，期待之后改进吧。\n刚刚咨询的资金系统问题，感谢回复。感觉是演进过程中导致的方向问题，之前他们设计过一个老的资金系统，因为种种原因导致可支持的并发数很低，并且不可靠。但是设计新系统的时候只看到了支持的并发数低，却忽略了可靠性。\n感谢回复，大概了解了思路了","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430297,"discussion_content":"消息队列读取方只要读取到最新消息即可，不需要根据消息id来读取，因此不需要先计算消息在那个分组上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543216119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1864,"discussion_content":"如果非要分组估计得使用一致性hash，保证扩容缩容时消息迁移最小，如果完全不分组就轮询，简单省事浪费一点时间吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563008618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37358,"user_name":"糖果吃","can_delete":false,"product_type":"c1","uid":1211034,"ip_address":"","ucode":"9083D7CC5B0EC0","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/9a/a3934531.jpg","comment_is_top":false,"comment_ctime":1541555405,"is_pvip":false,"replies":[{"id":13400,"content":"你的理解是对的呀，资金系统复杂性主要在可靠性，通常情况下会先记录操作日志，然后写数据，redis和mongodb用来做异步和备份存储可以，但主存储推荐用数据库","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541555900,"ip_address":"","comment_id":37358,"utype":1}],"discussion_count":4,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"刚好也遇到个问题：目前需要设计个资金系统，目前组员给出的设计是：写入数据到redis，然后返回调用方成功了。之后异步把redis数据写入到mongodb。\n担心点是：资金系统就是钱啊，redis的数据不是保证实时写入硬盘的，而是间隔，那么遇到redis挂了就会丢失部分数据。\n第二，redis的写入是个单点瓶颈，未来不容易扩展。\n想咨询下意见","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428310,"discussion_content":"所以复杂性分析很关键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541752304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16648,"user_name":"彬哥","can_delete":false,"product_type":"c1","uid":1148392,"ip_address":"","ucode":"6FF7945FF40DD4","user_header":"https://static001.geekbang.org/account/avatar/00/11/85/e8/1e3e5657.jpg","comment_is_top":false,"comment_ctime":1532069022,"is_pvip":false,"replies":[{"id":5823,"content":"好少人用，我也只是简单了解过😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532175134,"ip_address":"","comment_id":16648,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"没有人用zmq呢？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420887,"discussion_content":"好少人用，我也只是简单了解过😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532175134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16315,"user_name":"blacknccccc","can_delete":false,"product_type":"c1","uid":1170877,"ip_address":"","ucode":"CC2310B04A624A","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/bd/9b93ea26.jpg","comment_is_top":false,"comment_ctime":1531879081,"is_pvip":false,"replies":[{"id":5647,"content":"没法保证😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531881476,"ip_address":"","comment_id":16315,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"方案二消息被分散到各个分组，在读取消息的时候如何保证整体的顺序呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420753,"discussion_content":"没法保证😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531881476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/6f/c78ef1cf.jpg","nickname":"王二北","note":"","ucode":"D9090E28B3E1F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555074,"discussion_content":"这个时候就不能用轮询了，可以用一致性hash，取模等算法，对topic进行hash计算，使同一个topic的数据只写入到一个数据库中，读取的时候，同样的对topic取hash，找到这个数据节点，进行读取。但是这样高可用和高性能就没法保证了，需要进一步进行设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646733358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16140,"user_name":"blacknccccc","can_delete":false,"product_type":"c1","uid":1170877,"ip_address":"","ucode":"CC2310B04A624A","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/bd/9b93ea26.jpg","comment_is_top":false,"comment_ctime":1531795946,"is_pvip":false,"replies":[{"id":5588,"content":"不需要定位数据被写入哪个分组了，客户端只管写入系统就可以了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531810727,"ip_address":"","comment_id":16140,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"不太明白方案二中的数据分散存储，客户端轮询写入读取。怎么快速定位数据被写到了哪个分组呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420685,"discussion_content":"不需要定位数据被写入哪个分组了，客户端只管写入系统就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531810727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131191,"user_name":"davidcandio","can_delete":false,"product_type":"c1","uid":1611404,"ip_address":"","ucode":"7C4F8E605AE7FF","user_header":"https://static001.geekbang.org/account/avatar/00/18/96/8c/422cbe4f.jpg","comment_is_top":false,"comment_ctime":1567667087,"is_pvip":false,"replies":[{"id":50310,"content":"是的，这样够用了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1567841157,"ip_address":"","comment_id":131191,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"关于方案2，是指读取方通过SDK定时（譬如100ms）拉取所有分组的最新消息，把单个分组的QPS限制为跟 读取方数量 和 定时频率 相关？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466328,"discussion_content":"是的，这样够用了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567841157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66404,"user_name":"展飞","can_delete":false,"product_type":"c1","uid":1265637,"ip_address":"","ucode":"8799F60131C291","user_header":"https://static001.geekbang.org/account/avatar/00/13/4f/e5/381ca282.jpg","comment_is_top":false,"comment_ctime":1549935729,"is_pvip":false,"replies":[{"id":24317,"content":"不是，是消息发送方，以SDK的形式嵌入在各个业务系统","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1550548401,"ip_address":"","comment_id":66404,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"“客户端将消息依次写入不同的服务器；某台服务器异常的情况下，客户端直接将消息写入下一台正常的服务器即可。”请问这里的客户端是指在服务器端进行任务分配的一台服务器吗？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438796,"discussion_content":"不是，是消息发送方，以SDK的形式嵌入在各个业务系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550548401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58986,"user_name":"torres","can_delete":false,"product_type":"c1","uid":1108761,"ip_address":"","ucode":"34DABCFC7B74EA","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/19/76b0b98c.jpg","comment_is_top":false,"comment_ctime":1547266203,"is_pvip":false,"replies":[{"id":21362,"content":"是的，这种极端情况就没办法了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1547281948,"ip_address":"","comment_id":58986,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师，请教一个问题。在集群+sql存储的备选方案中，对于消息对接系统某一个分组而言，主服务器和备用mysql同时宕机，是否就无法读取对应的消息数据了？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438796,"discussion_content":"不是，是消息发送方，以SDK的形式嵌入在各个业务系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550548401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46029,"user_name":"2018","can_delete":false,"product_type":"c1","uid":1107371,"ip_address":"","ucode":"4C2CD47AD70177","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/ab/6fab2492.jpg","comment_is_top":false,"comment_ctime":1543836095,"is_pvip":true,"replies":[{"id":16908,"content":"这只是一个假想的场景，你真正做的时候完全可以考虑它","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1544133504,"ip_address":"","comment_id":46029,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"为什么没有考虑rocketmq呢，rocketmq的稳定性式吞吐量上都是可以的，看了这么多评论，没有人提到这个呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436266,"discussion_content":"是的，这种极端情况就没办法了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547281948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43090,"user_name":"西北","can_delete":false,"product_type":"c1","uid":1323080,"ip_address":"","ucode":"9321FCE2984519","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/48/afb8f799.jpg","comment_is_top":false,"comment_ctime":1543159462,"is_pvip":false,"replies":[{"id":15489,"content":"消息队列读取方只要读取到最新消息即可，不需要根据消息id来读取，因此不需要先计算消息在那个分组上","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1543216119,"ip_address":"","comment_id":43090,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师好，我想问下方案二采用轮询读取数据，怎么找到要读哪个分组的数据？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430297,"discussion_content":"消息队列读取方只要读取到最新消息即可，不需要根据消息id来读取，因此不需要先计算消息在那个分组上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543216119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1864,"discussion_content":"如果非要分组估计得使用一致性hash，保证扩容缩容时消息迁移最小，如果完全不分组就轮询，简单省事浪费一点时间吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563008618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37361,"user_name":"糖果吃","can_delete":false,"product_type":"c1","uid":1211034,"ip_address":"","ucode":"9083D7CC5B0EC0","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/9a/a3934531.jpg","comment_is_top":false,"comment_ctime":1541556694,"is_pvip":false,"replies":[{"id":13620,"content":"所以复杂性分析很关键","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541752304,"ip_address":"","comment_id":37361,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"竟然留言不能回复，期待之后改进吧。\n刚刚咨询的资金系统问题，感谢回复。感觉是演进过程中导致的方向问题，之前他们设计过一个老的资金系统，因为种种原因导致可支持的并发数很低，并且不可靠。但是设计新系统的时候只看到了支持的并发数低，却忽略了可靠性。\n感谢回复，大概了解了思路了","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428310,"discussion_content":"所以复杂性分析很关键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541752304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":37358,"user_name":"糖果吃","can_delete":false,"product_type":"c1","uid":1211034,"ip_address":"","ucode":"9083D7CC5B0EC0","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/9a/a3934531.jpg","comment_is_top":false,"comment_ctime":1541555405,"is_pvip":false,"replies":[{"id":13400,"content":"你的理解是对的呀，资金系统复杂性主要在可靠性，通常情况下会先记录操作日志，然后写数据，redis和mongodb用来做异步和备份存储可以，但主存储推荐用数据库","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541555900,"ip_address":"","comment_id":37358,"utype":1}],"discussion_count":4,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"刚好也遇到个问题：目前需要设计个资金系统，目前组员给出的设计是：写入数据到redis，然后返回调用方成功了。之后异步把redis数据写入到mongodb。\n担心点是：资金系统就是钱啊，redis的数据不是保证实时写入硬盘的，而是间隔，那么遇到redis挂了就会丢失部分数据。\n第二，redis的写入是个单点瓶颈，未来不容易扩展。\n想咨询下意见","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428308,"discussion_content":"你的理解是对的呀，资金系统复杂性主要在可靠性，通常情况下会先记录操作日志，然后写数据，redis和mongodb用来做异步和备份存储可以，但主存储推荐用数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541555900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241559,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/OgopVGSkwlFuyHV0hWtzxjEAQ8qhwQuTeY9BdvXDDTj2JH5d9ZI1hJBnlgaoUcKtrceWVlUejJEUdjCjoKSUAQ/132","nickname":"golangboy","note":"","ucode":"7632634FB022F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583989,"discussion_content":"可靠性要求高的系统，是不能采用异步方式。先将操作日志写入高速存储（比如ssd）,之后再进行其他处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660549821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377849,"discussion_content":"redis适合做缓存，不适合做数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622907391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1866,"discussion_content":"写日志优先，zookeeper和数据库系统都用到的，https://en.wikipedia.org/wiki/Write-ahead_logging","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563008980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16648,"user_name":"彬哥","can_delete":false,"product_type":"c1","uid":1148392,"ip_address":"","ucode":"6FF7945FF40DD4","user_header":"https://static001.geekbang.org/account/avatar/00/11/85/e8/1e3e5657.jpg","comment_is_top":false,"comment_ctime":1532069022,"is_pvip":false,"replies":[{"id":5823,"content":"好少人用，我也只是简单了解过😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532175134,"ip_address":"","comment_id":16648,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"没有人用zmq呢？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428308,"discussion_content":"你的理解是对的呀，资金系统复杂性主要在可靠性，通常情况下会先记录操作日志，然后写数据，redis和mongodb用来做异步和备份存储可以，但主存储推荐用数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541555900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241559,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/OgopVGSkwlFuyHV0hWtzxjEAQ8qhwQuTeY9BdvXDDTj2JH5d9ZI1hJBnlgaoUcKtrceWVlUejJEUdjCjoKSUAQ/132","nickname":"golangboy","note":"","ucode":"7632634FB022F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583989,"discussion_content":"可靠性要求高的系统，是不能采用异步方式。先将操作日志写入高速存储（比如ssd）,之后再进行其他处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660549821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377849,"discussion_content":"redis适合做缓存，不适合做数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622907391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1866,"discussion_content":"写日志优先，zookeeper和数据库系统都用到的，https://en.wikipedia.org/wiki/Write-ahead_logging","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563008980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16315,"user_name":"blacknccccc","can_delete":false,"product_type":"c1","uid":1170877,"ip_address":"","ucode":"CC2310B04A624A","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/bd/9b93ea26.jpg","comment_is_top":false,"comment_ctime":1531879081,"is_pvip":false,"replies":[{"id":5647,"content":"没法保证😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531881476,"ip_address":"","comment_id":16315,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"方案二消息被分散到各个分组，在读取消息的时候如何保证整体的顺序呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420887,"discussion_content":"好少人用，我也只是简单了解过😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532175134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16140,"user_name":"blacknccccc","can_delete":false,"product_type":"c1","uid":1170877,"ip_address":"","ucode":"CC2310B04A624A","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/bd/9b93ea26.jpg","comment_is_top":false,"comment_ctime":1531795946,"is_pvip":false,"replies":[{"id":5588,"content":"不需要定位数据被写入哪个分组了，客户端只管写入系统就可以了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531810727,"ip_address":"","comment_id":16140,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"不太明白方案二中的数据分散存储，客户端轮询写入读取。怎么快速定位数据被写到了哪个分组呢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420753,"discussion_content":"没法保证😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531881476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/6f/c78ef1cf.jpg","nickname":"王二北","note":"","ucode":"D9090E28B3E1F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555074,"discussion_content":"这个时候就不能用轮询了，可以用一致性hash，取模等算法，对topic进行hash计算，使同一个topic的数据只写入到一个数据库中，读取的时候，同样的对topic取hash，找到这个数据节点，进行读取。但是这样高可用和高性能就没法保证了，需要进一步进行设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646733358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9977,"user_name":"我的名字叫浩仔丶","can_delete":false,"product_type":"c1","uid":1026003,"ip_address":"","ucode":"1E03CE9FBAFA88","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/d3/af0c1e4c.jpg","comment_is_top":false,"comment_ctime":1527209111,"is_pvip":false,"replies":[{"id":3116,"content":"不是的，每个plan都是可行的，要挑选更合适的plan","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527217227,"ip_address":"","comment_id":9977,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"如果planA不行我们就用planB","like_count":1},{"had_liked":false,"id":9834,"user_name":"稳健的少年","can_delete":false,"product_type":"c1","uid":1047369,"ip_address":"","ucode":"53300B191CB919","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/49/e14b1c54.jpg","comment_is_top":false,"comment_ctime":1527122815,"is_pvip":false,"replies":[{"id":3073,"content":"后面的“选择和评估备选方案”有讲","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527169518,"ip_address":"","comment_id":9834,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"直接用Kafka或者RocketMQ不好么，为什么需要后面两个那么复杂的解决方案？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418288,"discussion_content":"不是的，每个plan都是可行的，要挑选更合适的plan","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527217227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9700,"user_name":"王旭东","can_delete":false,"product_type":"c1","uid":1108106,"ip_address":"","ucode":"61950FD5D5BFF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/8a/e3032578.jpg","comment_is_top":false,"comment_ctime":1527038445,"is_pvip":false,"replies":[{"id":2992,"content":"有redis集群就可以不用本地持久化了，不然复杂度比较高","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527055787,"ip_address":"","comment_id":9700,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"最近在学RocketMQ，可以使用RocketMQ（根据请求量决定集群方式，多Master模式还是多Master多Slave模式），配合消息确认和重发机制，保证消息不丢失\n高可用消息存储和读取可以用Redis集群+本地数据持久化","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418171,"discussion_content":"有redis集群就可以不用本地持久化了，不然复杂度比较高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9664,"user_name":"刘志刚","can_delete":false,"product_type":"c1","uid":1102108,"ip_address":"","ucode":"2EDEA464124639","user_header":"https://static001.geekbang.org/account/avatar/00/10/d1/1c/f6e95d1d.jpg","comment_is_top":false,"comment_ctime":1527032616,"is_pvip":false,"replies":[{"id":2994,"content":"rocketmq自带存储了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527055886,"ip_address":"","comment_id":9664,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"已经学习到这一个章节，我也来留言一下吧，我这边给出的方案是，消息队列这块选型rabbitmq或者rocketmq，存储使用hbase和redis结合，理由如下：消息中间件对于及时性和高性能上这两个还算是比较成熟和稳定的，存储和读取上hbase的单写入性能较高，根据特定key的读取性能也较高，另外一部分，按照用户纬度，或者话题纬度可以缓存到redis","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418156,"discussion_content":"rocketmq自带存储了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9661,"user_name":"Duo An","can_delete":false,"product_type":"c1","uid":1058085,"ip_address":"","ucode":"901C9802511B07","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/25/fb2ba003.jpg","comment_is_top":false,"comment_ctime":1527011442,"is_pvip":false,"replies":[{"id":2996,"content":"消息存储的时候采用随机或者轮询就可以，不要按照业务来分","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527055997,"ip_address":"","comment_id":9661,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"我觉得前面问的热点问题是说 存储上的热点问题吧。比如数据存储时分片不合理，导致一个分片上有较多的热点微博相关的数据 比如评论 这可就毁了","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418153,"discussion_content":"消息存储的时候采用随机或者轮询就可以，不要按照业务来分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9640,"user_name":"eye","can_delete":false,"product_type":"c1","uid":1112851,"ip_address":"","ucode":"B9E8A5C4121409","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/13/5bf4f1ad.jpg","comment_is_top":false,"comment_ctime":1526998865,"is_pvip":false,"replies":[{"id":2998,"content":"可以，不过akka的Actor模型比较复杂，适应于异步编程的场景，感觉和消息队列的业务不是很匹配，如果不是很熟练，不建议用","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527056354,"ip_address":"","comment_id":9640,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"消息高可用持久化传递，作者用了3种方案传递消息第一种是mq类，第二种是netty加数据库，第三种hbase或自研。有同学说了rpc加mq。可以用响应式分布式处理架构akka.","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418146,"discussion_content":"可以，不过akka的Actor模型比较复杂，适应于异步编程的场景，感觉和消息队列的业务不是很匹配，如果不是很熟练，不建议用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527056354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9531,"user_name":"时间去哪里了？","can_delete":false,"product_type":"c1","uid":1115428,"ip_address":"","ucode":"AC5506867383A3","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/24/9a293124.jpg","comment_is_top":false,"comment_ctime":1526948909,"is_pvip":false,"replies":[{"id":2878,"content":"用es怎么做，好像有点困难吧？es是用于全文搜索的","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526953278,"ip_address":"","comment_id":9531,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"也可以考虑用\nelasticsearch和spark","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418146,"discussion_content":"可以，不过akka的Actor模型比较复杂，适应于异步编程的场景，感觉和消息队列的业务不是很匹配，如果不是很熟练，不建议用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527056354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382464,"user_name":"陈峰","can_delete":false,"product_type":"c1","uid":3721548,"ip_address":"江苏","ucode":"11F92938308C6C","user_header":"","comment_is_top":false,"comment_ctime":1697423619,"is_pvip":false,"replies":[{"id":139293,"content":"没有哪个备选方案适应所有团队所有业务的，如果你的团队人少，那么直接选开源也是可以的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1697443985,"ip_address":"广东","comment_id":382464,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"老师，还有一个问题\n\n就像我自己这边其实人员比较少，如果涉及技术选型基本上都是用开源现成的技术方案。\n\n那么，像这种第二个方案，实际实施的过程中，是否成本会高于第一个方案，它对比第一个方案的主要优势会体现在哪里呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418103,"discussion_content":"用es怎么做，好像有点困难吧？es是用于全文搜索的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526953278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382463,"user_name":"陈峰","can_delete":false,"product_type":"c1","uid":3721548,"ip_address":"江苏","ucode":"11F92938308C6C","user_header":"","comment_is_top":false,"comment_ctime":1697423465,"is_pvip":false,"replies":[{"id":139294,"content":"1. 轮询所以都能读到\n2. 备用只有主挂掉的时候提供读服务\n3. 不考虑，因为不需要","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1697444902,"ip_address":"广东","comment_id":382463,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"老师，对于第二个方案，架构图有点不理解，希望能帮我梳理一下\n\n我目前的理解是\n\n图中 业务服务器 就是 各个微博子系统，消息队列系统 是一个集群，这个集群有三个分组，每个分组功能相同，数据的读取和写入在其中一个分组上进行，从而 实现了 高性能的读取 和 高可用的写入(因为一个分组宕机不影响使用)\n\n对于每个分组中的四个服务器，上面两个是 消息队列的业务(计算)服务器 通过主备方案提供计算高可用，下面两个是 消息队列的存储服务器(mysql)，通过 主备方案提供存储高可用(包括高可用读取 和 高可用存储)\n\n我有以下几个疑问\n\n第一，对于消息队列来说，应该是类似于 微博子系统发布消息，其他子系统消费消息，那么每个分组的数据存储不同，负载均衡采用轮询，当微博子系统发布消息在其中一个分组上后，其他子系统如何准确的消费呢(还是说，因为其他子系统是轮询监听，会把每个分组都读取到，所以能够准确消费？)\n\n第二，每个分组的备用计算服务器上写了一个读，是指备用服务器，也提供读取服务吗？(也就是说 这个消息系统是读写分离的？)\n\n第三，之前讲到，存储高可用的一个难点，也就是可能会因为线路中断或延迟，导致数据不一致，这里是没有进行解决和考虑吗？\n\n我对架构设计并没有过多的实战经验，如果哪里说的不对，也希望老师能指导一下，谢谢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629624,"discussion_content":"1. 轮询所以都能读到\n2. 备用只有主挂掉的时候提供读服务\n3. 不考虑，因为不需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697444902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3721548,"avatar":"","nickname":"陈峰","note":"","ucode":"11F92938308C6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":629674,"discussion_content":"按照架构图来说，备用的计算服务器，只从备用的存储服务器读取信息嘛？还是说，也是从主存储服务器读取信息，仅仅是主存储服务器故障时，才在备用服务器读取数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697512135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":629624,"ip_address":"江苏","group_id":0},"score":629674,"extra":""}]}]},{"had_liked":false,"id":352641,"user_name":"杨恒","can_delete":false,"product_type":"c1","uid":3066545,"ip_address":"北京","ucode":"057CCB97B56740","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ca/b1/044d3e98.jpg","comment_is_top":false,"comment_ctime":1658827426,"is_pvip":false,"replies":[{"id":128339,"content":"很难就不做的话，后面上线发现问题了，不一样要做，而且更难吗？\n","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1659066309,"ip_address":"北京","comment_id":352641,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"做几个备选方案，然后选择：1 筛出不可行的方案，2 可行方案定量分析评估。其实，很难了，能够做几个方案就很花精力了，往往走不到定量评估那一步。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581913,"discussion_content":"很难就不做的话，后面上线发现问题了，不一样要做，而且更难吗？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659066310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9977,"user_name":"我的名字叫浩仔丶","can_delete":false,"product_type":"c1","uid":1026003,"ip_address":"","ucode":"1E03CE9FBAFA88","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/d3/af0c1e4c.jpg","comment_is_top":false,"comment_ctime":1527209111,"is_pvip":false,"replies":[{"id":3116,"content":"不是的，每个plan都是可行的，要挑选更合适的plan","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527217227,"ip_address":"","comment_id":9977,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"如果planA不行我们就用planB","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418288,"discussion_content":"不是的，每个plan都是可行的，要挑选更合适的plan","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527217227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9834,"user_name":"稳健的少年","can_delete":false,"product_type":"c1","uid":1047369,"ip_address":"","ucode":"53300B191CB919","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/49/e14b1c54.jpg","comment_is_top":false,"comment_ctime":1527122815,"is_pvip":false,"replies":[{"id":3073,"content":"后面的“选择和评估备选方案”有讲","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527169518,"ip_address":"","comment_id":9834,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"直接用Kafka或者RocketMQ不好么，为什么需要后面两个那么复杂的解决方案？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418220,"discussion_content":"后面的“选择和评估备选方案”有讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527169518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9700,"user_name":"王旭东","can_delete":false,"product_type":"c1","uid":1108106,"ip_address":"","ucode":"61950FD5D5BFF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/8a/e3032578.jpg","comment_is_top":false,"comment_ctime":1527038445,"is_pvip":false,"replies":[{"id":2992,"content":"有redis集群就可以不用本地持久化了，不然复杂度比较高","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527055787,"ip_address":"","comment_id":9700,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"最近在学RocketMQ，可以使用RocketMQ（根据请求量决定集群方式，多Master模式还是多Master多Slave模式），配合消息确认和重发机制，保证消息不丢失\n高可用消息存储和读取可以用Redis集群+本地数据持久化","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418220,"discussion_content":"后面的“选择和评估备选方案”有讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527169518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9664,"user_name":"刘志刚","can_delete":false,"product_type":"c1","uid":1102108,"ip_address":"","ucode":"2EDEA464124639","user_header":"https://static001.geekbang.org/account/avatar/00/10/d1/1c/f6e95d1d.jpg","comment_is_top":false,"comment_ctime":1527032616,"is_pvip":false,"replies":[{"id":2994,"content":"rocketmq自带存储了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527055886,"ip_address":"","comment_id":9664,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"已经学习到这一个章节，我也来留言一下吧，我这边给出的方案是，消息队列这块选型rabbitmq或者rocketmq，存储使用hbase和redis结合，理由如下：消息中间件对于及时性和高性能上这两个还算是比较成熟和稳定的，存储和读取上hbase的单写入性能较高，根据特定key的读取性能也较高，另外一部分，按照用户纬度，或者话题纬度可以缓存到redis","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418171,"discussion_content":"有redis集群就可以不用本地持久化了，不然复杂度比较高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9661,"user_name":"Duo An","can_delete":false,"product_type":"c1","uid":1058085,"ip_address":"","ucode":"901C9802511B07","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/25/fb2ba003.jpg","comment_is_top":false,"comment_ctime":1527011442,"is_pvip":false,"replies":[{"id":2996,"content":"消息存储的时候采用随机或者轮询就可以，不要按照业务来分","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527055997,"ip_address":"","comment_id":9661,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"我觉得前面问的热点问题是说 存储上的热点问题吧。比如数据存储时分片不合理，导致一个分片上有较多的热点微博相关的数据 比如评论 这可就毁了","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418156,"discussion_content":"rocketmq自带存储了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9640,"user_name":"eye","can_delete":false,"product_type":"c1","uid":1112851,"ip_address":"","ucode":"B9E8A5C4121409","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/13/5bf4f1ad.jpg","comment_is_top":false,"comment_ctime":1526998865,"is_pvip":false,"replies":[{"id":2998,"content":"可以，不过akka的Actor模型比较复杂，适应于异步编程的场景，感觉和消息队列的业务不是很匹配，如果不是很熟练，不建议用","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527056354,"ip_address":"","comment_id":9640,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"消息高可用持久化传递，作者用了3种方案传递消息第一种是mq类，第二种是netty加数据库，第三种hbase或自研。有同学说了rpc加mq。可以用响应式分布式处理架构akka.","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418153,"discussion_content":"消息存储的时候采用随机或者轮询就可以，不要按照业务来分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527055997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9531,"user_name":"时间去哪里了？","can_delete":false,"product_type":"c1","uid":1115428,"ip_address":"","ucode":"AC5506867383A3","user_header":"https://static001.geekbang.org/account/avatar/00/11/05/24/9a293124.jpg","comment_is_top":false,"comment_ctime":1526948909,"is_pvip":false,"replies":[{"id":2878,"content":"用es怎么做，好像有点困难吧？es是用于全文搜索的","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526953278,"ip_address":"","comment_id":9531,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"也可以考虑用\nelasticsearch和spark","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418103,"discussion_content":"用es怎么做，好像有点困难吧？es是用于全文搜索的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526953278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382464,"user_name":"陈峰","can_delete":false,"product_type":"c1","uid":3721548,"ip_address":"江苏","ucode":"11F92938308C6C","user_header":"","comment_is_top":false,"comment_ctime":1697423619,"is_pvip":false,"replies":[{"id":139293,"content":"没有哪个备选方案适应所有团队所有业务的，如果你的团队人少，那么直接选开源也是可以的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1697443985,"ip_address":"广东","comment_id":382464,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"老师，还有一个问题\n\n就像我自己这边其实人员比较少，如果涉及技术选型基本上都是用开源现成的技术方案。\n\n那么，像这种第二个方案，实际实施的过程中，是否成本会高于第一个方案，它对比第一个方案的主要优势会体现在哪里呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629622,"discussion_content":"没有哪个备选方案适应所有团队所有业务的，如果你的团队人少，那么直接选开源也是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697443985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382463,"user_name":"陈峰","can_delete":false,"product_type":"c1","uid":3721548,"ip_address":"江苏","ucode":"11F92938308C6C","user_header":"","comment_is_top":false,"comment_ctime":1697423465,"is_pvip":false,"replies":[{"id":139294,"content":"1. 轮询所以都能读到\n2. 备用只有主挂掉的时候提供读服务\n3. 不考虑，因为不需要","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1697444902,"ip_address":"广东","comment_id":382463,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"老师，对于第二个方案，架构图有点不理解，希望能帮我梳理一下\n\n我目前的理解是\n\n图中 业务服务器 就是 各个微博子系统，消息队列系统 是一个集群，这个集群有三个分组，每个分组功能相同，数据的读取和写入在其中一个分组上进行，从而 实现了 高性能的读取 和 高可用的写入(因为一个分组宕机不影响使用)\n\n对于每个分组中的四个服务器，上面两个是 消息队列的业务(计算)服务器 通过主备方案提供计算高可用，下面两个是 消息队列的存储服务器(mysql)，通过 主备方案提供存储高可用(包括高可用读取 和 高可用存储)\n\n我有以下几个疑问\n\n第一，对于消息队列来说，应该是类似于 微博子系统发布消息，其他子系统消费消息，那么每个分组的数据存储不同，负载均衡采用轮询，当微博子系统发布消息在其中一个分组上后，其他子系统如何准确的消费呢(还是说，因为其他子系统是轮询监听，会把每个分组都读取到，所以能够准确消费？)\n\n第二，每个分组的备用计算服务器上写了一个读，是指备用服务器，也提供读取服务吗？(也就是说 这个消息系统是读写分离的？)\n\n第三，之前讲到，存储高可用的一个难点，也就是可能会因为线路中断或延迟，导致数据不一致，这里是没有进行解决和考虑吗？\n\n我对架构设计并没有过多的实战经验，如果哪里说的不对，也希望老师能指导一下，谢谢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629622,"discussion_content":"没有哪个备选方案适应所有团队所有业务的，如果你的团队人少，那么直接选开源也是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697443985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352641,"user_name":"杨恒","can_delete":false,"product_type":"c1","uid":3066545,"ip_address":"北京","ucode":"057CCB97B56740","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ca/b1/044d3e98.jpg","comment_is_top":false,"comment_ctime":1658827426,"is_pvip":false,"replies":[{"id":128339,"content":"很难就不做的话，后面上线发现问题了，不一样要做，而且更难吗？\n","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1659066309,"ip_address":"北京","comment_id":352641,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"做几个备选方案，然后选择：1 筛出不可行的方案，2 可行方案定量分析评估。其实，很难了，能够做几个方案就很花精力了，往往走不到定量评估那一步。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629624,"discussion_content":"1. 轮询所以都能读到\n2. 备用只有主挂掉的时候提供读服务\n3. 不考虑，因为不需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697444902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3721548,"avatar":"","nickname":"陈峰","note":"","ucode":"11F92938308C6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":629674,"discussion_content":"按照架构图来说，备用的计算服务器，只从备用的存储服务器读取信息嘛？还是说，也是从主存储服务器读取信息，仅仅是主存储服务器故障时，才在备用服务器读取数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697512135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":629624,"ip_address":"江苏","group_id":0},"score":629674,"extra":""}]}]},{"had_liked":false,"id":341842,"user_name":"Geek_0b51e1","can_delete":false,"product_type":"c1","uid":2243431,"ip_address":"","ucode":"66AA2CBCD39F0E","user_header":"","comment_is_top":false,"comment_ctime":1649856657,"is_pvip":false,"replies":[{"id":124985,"content":"需要考虑，要么就是多消费一条，要么就是业务消费方要考虑幂等","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1649985759,"ip_address":"","comment_id":341842,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"在请问一个问题如果写入主服务器成功，但是客户端没收到回复，又往另一台写数据，应该需要考虑消息的重复性吧","like_count":0},{"had_liked":false,"id":316577,"user_name":"superme","can_delete":false,"product_type":"c1","uid":2657130,"ip_address":"","ucode":"F890F5457C24D6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLuPjiaRClXVYguxpiaz8pDlcnic4tvXicec8VDMic3ok5TiaAib3A48eJDKQHoTHkx2PicIZb11Xt3sfdHg/132","comment_is_top":false,"comment_ctime":1634399028,"is_pvip":false,"replies":[{"id":114640,"content":"这个方案上线稳定运行了四年，队列有几百个。\n\n客户端a把数据写到分组1，为什要一定去分组2读到？能在分组1读到就可以了呀。\n\n当你觉得一个上线运行的方案“肯定”“完全”有问题的时候，先看看是不是自己理解错了。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1634468113,"ip_address":"","comment_id":316577,"utype":1}],"discussion_count":5,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"引用原文：\n===========================================\n简单描述一下方案：\n采用数据分散集群的架构，集群中的服务器进行分组，每个分组存储一部分消息数据。\n每个分组包含一台主 MySQL 和一台备 MySQL，分组内主备数据复制，分组间数据不同步。\n正常情况下，分组内的主服务器对外提供消息写入和消息读取服务，备服务器不对外提供服务；主服务器宕机的情况下，备服务器对外提供消息读取的服务。\n客户端采取轮询的策略写入和读取消息。\n===========================================\n关于这个方案，我想提两个问题：\n一、图片和方案不一致\n二、这个方案把数据做了分片，每个数据分组保存各自的数据。但使用轮训算法会有大问题，比如客户端a第一次把数据写到了分组1，下次客户端a去分组2中读取数据，能读到吗？\n这个方案和目前redis的高可用方案大致相同，但是算法不同，导致完全达不到数据一致性的效果。\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563359,"discussion_content":"需要考虑，要么就是多消费一条，要么就是业务消费方要考虑幂等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649985759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315824,"user_name":"Walter","can_delete":false,"product_type":"c1","uid":1142493,"ip_address":"","ucode":"2AE436899510D0","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/dd/9f6f3305.jpg","comment_is_top":false,"comment_ctime":1634010619,"is_pvip":false,"replies":[{"id":114460,"content":"从业务的角度来分析什么可能是热点数据；实际运行的时候做好监控来检测热点数据","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1634044784,"ip_address":"","comment_id":315824,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"老师，请教一个问题,怎么样去感知一个系统中的数据是热点数据?","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528419,"discussion_content":"这个方案上线稳定运行了四年，队列有几百个。\n\n客户端a把数据写到分组1，为什要一定去分组2读到？能在分组1读到就可以了呀。\n\n当你觉得一个上线运行的方案“肯定”“完全”有问题的时候，先看看是不是自己理解错了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634468113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/6f/c78ef1cf.jpg","nickname":"王二北","note":"","ucode":"D9090E28B3E1F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555069,"discussion_content":"写的时候，轮询选择一个数据节点写入，读的时候，则是要读所有的数据节点，而不是轮询选择一个节点","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646732151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241559,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/OgopVGSkwlFuyHV0hWtzxjEAQ8qhwQuTeY9BdvXDDTj2JH5d9ZI1hJBnlgaoUcKtrceWVlUejJEUdjCjoKSUAQ/132","nickname":"golangboy","note":"","ucode":"7632634FB022F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583993,"discussion_content":"消息的可靠存储和可用性读上述方案很经典。轮询读或者写入，在于业务服务调用存储的客户端的实现方式或者配置方式，方式有很多，但对读写来说，都是透明的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660552584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2657130,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLuPjiaRClXVYguxpiaz8pDlcnic4tvXicec8VDMic3ok5TiaAib3A48eJDKQHoTHkx2PicIZb11Xt3sfdHg/132","nickname":"superme","note":"","ucode":"F890F5457C24D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404943,"discussion_content":"因为这个方案里用到的是轮询算法，哪怕是取模算法我也不会这么问了。轮询能保证一个客户端的请求可以从始至终访问同一个数据组吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634468311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1507745,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/a1/5733e4d5.jpg","nickname":"wanhero","note":"","ucode":"8DF2E505DE895E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2657130,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLuPjiaRClXVYguxpiaz8pDlcnic4tvXicec8VDMic3ok5TiaAib3A48eJDKQHoTHkx2PicIZb11Xt3sfdHg/132","nickname":"superme","note":"","ucode":"F890F5457C24D6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552757,"discussion_content":"读也是轮询读，读最新的消息，就是每个都会去读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645587187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":404943,"ip_address":"","group_id":0},"score":552757,"extra":""}]}]},{"had_liked":false,"id":311904,"user_name":"杨毅","can_delete":false,"product_type":"c1","uid":2377406,"ip_address":"","ucode":"189923D892549F","user_header":"","comment_is_top":false,"comment_ctime":1631527031,"is_pvip":false,"replies":[{"id":113086,"content":"写入的时候轮询写入，读取的时候轮询读取，每组数据库上都有所有的队列，但是每组数据库上的消息都是唯一的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1631625037,"ip_address":"","comment_id":311904,"utype":1}],"discussion_count":2,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"老师， 备选方案2下的图片描述，数据库是已经按照分片部署了吗？那这样只是简单的轮询会有问题吧，还是说图片里的集群只是针对某个分片做的集群， 按照某个规则查询分片服务器是再轮询策略之上的？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528173,"discussion_content":"从业务的角度来分析什么可能是热点数据；实际运行的时候做好监控来检测热点数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634044784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280639,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1614302840,"is_pvip":false,"replies":[{"id":101886,"content":"为什么你推断“对实时性肯定有一定要求”呢？什么叫“一定”要求呢？\n\n做架构设计最怕这种凭感觉，很容易导致过度设计。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1614308267,"ip_address":"","comment_id":280639,"utype":1}],"discussion_count":2,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"我有个问题，前浪微博消息推送对实时性肯定有一定的要求，而如MySQL这种关系型数据库可以保证高可用，但实时性肯定就会有所损耗，能否在存储之上加一层缓存或者key-value存储满足实时性，key-value存储只是为了加快业务处理进程，不需要保证更多的可用性，最多使用的时候再去DB读取","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526789,"discussion_content":"写入的时候轮询写入，读取的时候轮询读取，每组数据库上都有所有的队列，但是每组数据库上的消息都是唯一的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631625037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054154,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/ca/bf3fb655.jpg","nickname":"Lee","note":"","ucode":"E9385622CA7ACB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651922,"discussion_content":"消息没有业务属性，只要简单均分就可以了，不需要类似分库分表的哈希取模啥的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727754047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246917,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1599530769,"is_pvip":true,"replies":[{"id":91166,"content":"没有标准答案，你的选择在某些条件下也是可以的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1599983521,"ip_address":"","comment_id":246917,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"专栏中设计了 3 个备选方案，如果让我来选择，比较倾向于采用开源的 Kafka，因为比较容易找到成熟的方案，然后移植到当前系统中。在用户量不大，QPS 不高时，这个方案实施的时间可能最快。\n\n自研方案感觉难度比较大，轻易不会采用，除非团队成员中恰好有这方面的大牛。\n\n第二个方案感觉是在 Netty 和 MySQL 的基础上架构起来的，没有找到必要性。如果在 Kafka 不满足业务需要的情况下，也可以考虑这个。\n\n想不出来第四个方案，因为我觉的文中列举的三个方案，基本上覆盖了开源应用，开源基础上开发，自研这样的一个脉络，其他方案应该也不会超出这个范围。\n\n留言里面有同学提到“上云”，我觉的第一上云不一定能保证性能要求，第二就是即使上云，可能也还是要选择类似开源（使用云服务商的消息队列方案）、部分开发（在云平台基础上开发）、自研（自行开发，然后发布到云平台）。\n\n后来看到有同学把“上云”归类到商业购买的类型，采用商业公司消息服务，这个应该可以算是第四种方案了，相对技术投入最小，但是很有可能不完全贴合业务。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505259,"discussion_content":"没有标准答案，你的选择在某些条件下也是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599983521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191926,"user_name":"斩月","can_delete":false,"product_type":"c1","uid":1516214,"ip_address":"","ucode":"9C5ADBCD4DEDD9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHib1LQqcflrt3hGRHJcxugqQ7dbT64A6JXsJoTYDNueuoO36qicePtbbaaHNicD65qaw3GMhazvQWg/132","comment_is_top":false,"comment_ctime":1584803864,"is_pvip":false,"replies":[{"id":74889,"content":"看概率和细化程度，我这里说的备选方案，不会太细，例如数据库，关注的是用不用mysql，而不会考虑中mysql的时候里面的字段，这个是后续的详细设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585540617,"ip_address":"","comment_id":191926,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"有个疑问，有多个备选方案的话是不是要先评审出一个方案，然后在针对这个方案做更细的设计？否则先做了一个细的设计，评审后发现其中一个备选方案更优秀，那不是浪费时间重新设计吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505259,"discussion_content":"没有标准答案，你的选择在某些条件下也是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599983521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127766,"user_name":"康斯坦丁","can_delete":false,"product_type":"c1","uid":1368096,"ip_address":"","ucode":"C130E800E8D5C9","user_header":"https://static001.geekbang.org/account/avatar/00/14/e0/20/003190c1.jpg","comment_is_top":false,"comment_ctime":1566789307,"is_pvip":false,"replies":[{"id":49164,"content":"两组之间不同步数据，组内两台机器同步数据","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1567597701,"ip_address":"","comment_id":127766,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"每个数据分组 架构图上有4个节点， 两组主备集群， 这个设计用意是?  感觉需要一个主备集群就好了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464645,"discussion_content":"两组之间不同步数据，组内两台机器同步数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567597701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113895,"user_name":"晓晨同学","can_delete":false,"product_type":"c1","uid":1413041,"ip_address":"","ucode":"236AEEB786E2CE","user_header":"https://static001.geekbang.org/account/avatar/00/15/8f/b1/7b697ed4.jpg","comment_is_top":false,"comment_ctime":1563181927,"is_pvip":false,"replies":[{"id":41831,"content":"技术选型就是整体架构设计的一部分","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1563356173,"ip_address":"","comment_id":113895,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"这个备选方案更着重于技术选型\n我理解对于整体的架构设计也需要有备选方案吧，比如组件模块的划分，请老师解答一下疑惑","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464645,"discussion_content":"两组之间不同步数据，组内两台机器同步数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567597701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20654,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534645731,"is_pvip":false,"replies":[{"id":7292,"content":"方案2可以尝试","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534739040,"ip_address":"","comment_id":20654,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"1、使用流行的消息中间件RabbitMQ。同时RabbitMQ对事务也有一定的支持。\n\n2、基于文中分组架构太复杂，可以选择仅有一组的主主架构。比如有3个服务，每个服务同时支持读和写，任务分配器采用轮询方式。这样就可以同时支持高性能写和高可用读。数据库依旧使用Mysql，采用主从方式，主库负责读和写，从库负责读，这样也就保证了存储高可用和高可用读取。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422351,"discussion_content":"方案2可以尝试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534739040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341842,"user_name":"Geek_0b51e1","can_delete":false,"product_type":"c1","uid":2243431,"ip_address":"","ucode":"66AA2CBCD39F0E","user_header":"","comment_is_top":false,"comment_ctime":1649856657,"is_pvip":false,"replies":[{"id":124985,"content":"需要考虑，要么就是多消费一条，要么就是业务消费方要考虑幂等","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1649985759,"ip_address":"","comment_id":341842,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"在请问一个问题如果写入主服务器成功，但是客户端没收到回复，又往另一台写数据，应该需要考虑消息的重复性吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563359,"discussion_content":"需要考虑，要么就是多消费一条，要么就是业务消费方要考虑幂等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649985759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316577,"user_name":"superme","can_delete":false,"product_type":"c1","uid":2657130,"ip_address":"","ucode":"F890F5457C24D6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLuPjiaRClXVYguxpiaz8pDlcnic4tvXicec8VDMic3ok5TiaAib3A48eJDKQHoTHkx2PicIZb11Xt3sfdHg/132","comment_is_top":false,"comment_ctime":1634399028,"is_pvip":false,"replies":[{"id":114640,"content":"这个方案上线稳定运行了四年，队列有几百个。\n\n客户端a把数据写到分组1，为什要一定去分组2读到？能在分组1读到就可以了呀。\n\n当你觉得一个上线运行的方案“肯定”“完全”有问题的时候，先看看是不是自己理解错了。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1634468113,"ip_address":"","comment_id":316577,"utype":1}],"discussion_count":5,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"引用原文：\n===========================================\n简单描述一下方案：\n采用数据分散集群的架构，集群中的服务器进行分组，每个分组存储一部分消息数据。\n每个分组包含一台主 MySQL 和一台备 MySQL，分组内主备数据复制，分组间数据不同步。\n正常情况下，分组内的主服务器对外提供消息写入和消息读取服务，备服务器不对外提供服务；主服务器宕机的情况下，备服务器对外提供消息读取的服务。\n客户端采取轮询的策略写入和读取消息。\n===========================================\n关于这个方案，我想提两个问题：\n一、图片和方案不一致\n二、这个方案把数据做了分片，每个数据分组保存各自的数据。但使用轮训算法会有大问题，比如客户端a第一次把数据写到了分组1，下次客户端a去分组2中读取数据，能读到吗？\n这个方案和目前redis的高可用方案大致相同，但是算法不同，导致完全达不到数据一致性的效果。\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528419,"discussion_content":"这个方案上线稳定运行了四年，队列有几百个。\n\n客户端a把数据写到分组1，为什要一定去分组2读到？能在分组1读到就可以了呀。\n\n当你觉得一个上线运行的方案“肯定”“完全”有问题的时候，先看看是不是自己理解错了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634468113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/6f/c78ef1cf.jpg","nickname":"王二北","note":"","ucode":"D9090E28B3E1F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555069,"discussion_content":"写的时候，轮询选择一个数据节点写入，读的时候，则是要读所有的数据节点，而不是轮询选择一个节点","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646732151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1241559,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/OgopVGSkwlFuyHV0hWtzxjEAQ8qhwQuTeY9BdvXDDTj2JH5d9ZI1hJBnlgaoUcKtrceWVlUejJEUdjCjoKSUAQ/132","nickname":"golangboy","note":"","ucode":"7632634FB022F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583993,"discussion_content":"消息的可靠存储和可用性读上述方案很经典。轮询读或者写入，在于业务服务调用存储的客户端的实现方式或者配置方式，方式有很多，但对读写来说，都是透明的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660552584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"日本","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2657130,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLuPjiaRClXVYguxpiaz8pDlcnic4tvXicec8VDMic3ok5TiaAib3A48eJDKQHoTHkx2PicIZb11Xt3sfdHg/132","nickname":"superme","note":"","ucode":"F890F5457C24D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404943,"discussion_content":"因为这个方案里用到的是轮询算法，哪怕是取模算法我也不会这么问了。轮询能保证一个客户端的请求可以从始至终访问同一个数据组吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634468311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1507745,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/a1/5733e4d5.jpg","nickname":"wanhero","note":"","ucode":"8DF2E505DE895E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2657130,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLuPjiaRClXVYguxpiaz8pDlcnic4tvXicec8VDMic3ok5TiaAib3A48eJDKQHoTHkx2PicIZb11Xt3sfdHg/132","nickname":"superme","note":"","ucode":"F890F5457C24D6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552757,"discussion_content":"读也是轮询读，读最新的消息，就是每个都会去读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645587187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":404943,"ip_address":"","group_id":0},"score":552757,"extra":""}]}]},{"had_liked":false,"id":315824,"user_name":"Walter","can_delete":false,"product_type":"c1","uid":1142493,"ip_address":"","ucode":"2AE436899510D0","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/dd/9f6f3305.jpg","comment_is_top":false,"comment_ctime":1634010619,"is_pvip":false,"replies":[{"id":114460,"content":"从业务的角度来分析什么可能是热点数据；实际运行的时候做好监控来检测热点数据","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1634044784,"ip_address":"","comment_id":315824,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"老师，请教一个问题,怎么样去感知一个系统中的数据是热点数据?","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528173,"discussion_content":"从业务的角度来分析什么可能是热点数据；实际运行的时候做好监控来检测热点数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634044784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311904,"user_name":"杨毅","can_delete":false,"product_type":"c1","uid":2377406,"ip_address":"","ucode":"189923D892549F","user_header":"","comment_is_top":false,"comment_ctime":1631527031,"is_pvip":false,"replies":[{"id":113086,"content":"写入的时候轮询写入，读取的时候轮询读取，每组数据库上都有所有的队列，但是每组数据库上的消息都是唯一的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1631625037,"ip_address":"","comment_id":311904,"utype":1}],"discussion_count":2,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"老师， 备选方案2下的图片描述，数据库是已经按照分片部署了吗？那这样只是简单的轮询会有问题吧，还是说图片里的集群只是针对某个分片做的集群， 按照某个规则查询分片服务器是再轮询策略之上的？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526789,"discussion_content":"写入的时候轮询写入，读取的时候轮询读取，每组数据库上都有所有的队列，但是每组数据库上的消息都是唯一的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631625037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054154,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/ca/bf3fb655.jpg","nickname":"Lee","note":"","ucode":"E9385622CA7ACB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651922,"discussion_content":"消息没有业务属性，只要简单均分就可以了，不需要类似分库分表的哈希取模啥的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727754047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280639,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1614302840,"is_pvip":false,"replies":[{"id":101886,"content":"为什么你推断“对实时性肯定有一定要求”呢？什么叫“一定”要求呢？\n\n做架构设计最怕这种凭感觉，很容易导致过度设计。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1614308267,"ip_address":"","comment_id":280639,"utype":1}],"discussion_count":2,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"我有个问题，前浪微博消息推送对实时性肯定有一定的要求，而如MySQL这种关系型数据库可以保证高可用，但实时性肯定就会有所损耗，能否在存储之上加一层缓存或者key-value存储满足实时性，key-value存储只是为了加快业务处理进程，不需要保证更多的可用性，最多使用的时候再去DB读取","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516162,"discussion_content":"为什么你推断“对实时性肯定有一定要求”呢？什么叫“一定”要求呢？\n\n做架构设计最怕这种凭感觉，很容易导致过度设计。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614308267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233193,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","nickname":"DFighting","note":"","ucode":"F3BA2426FF8582","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352097,"discussion_content":"受教了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614600980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246917,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1599530769,"is_pvip":true,"replies":[{"id":91166,"content":"没有标准答案，你的选择在某些条件下也是可以的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1599983521,"ip_address":"","comment_id":246917,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"专栏中设计了 3 个备选方案，如果让我来选择，比较倾向于采用开源的 Kafka，因为比较容易找到成熟的方案，然后移植到当前系统中。在用户量不大，QPS 不高时，这个方案实施的时间可能最快。\n\n自研方案感觉难度比较大，轻易不会采用，除非团队成员中恰好有这方面的大牛。\n\n第二个方案感觉是在 Netty 和 MySQL 的基础上架构起来的，没有找到必要性。如果在 Kafka 不满足业务需要的情况下，也可以考虑这个。\n\n想不出来第四个方案，因为我觉的文中列举的三个方案，基本上覆盖了开源应用，开源基础上开发，自研这样的一个脉络，其他方案应该也不会超出这个范围。\n\n留言里面有同学提到“上云”，我觉的第一上云不一定能保证性能要求，第二就是即使上云，可能也还是要选择类似开源（使用云服务商的消息队列方案）、部分开发（在云平台基础上开发）、自研（自行开发，然后发布到云平台）。\n\n后来看到有同学把“上云”归类到商业购买的类型，采用商业公司消息服务，这个应该可以算是第四种方案了，相对技术投入最小，但是很有可能不完全贴合业务。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516162,"discussion_content":"为什么你推断“对实时性肯定有一定要求”呢？什么叫“一定”要求呢？\n\n做架构设计最怕这种凭感觉，很容易导致过度设计。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614308267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233193,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","nickname":"DFighting","note":"","ucode":"F3BA2426FF8582","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352097,"discussion_content":"受教了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614600980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191926,"user_name":"斩月","can_delete":false,"product_type":"c1","uid":1516214,"ip_address":"","ucode":"9C5ADBCD4DEDD9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHib1LQqcflrt3hGRHJcxugqQ7dbT64A6JXsJoTYDNueuoO36qicePtbbaaHNicD65qaw3GMhazvQWg/132","comment_is_top":false,"comment_ctime":1584803864,"is_pvip":false,"replies":[{"id":74889,"content":"看概率和细化程度，我这里说的备选方案，不会太细，例如数据库，关注的是用不用mysql，而不会考虑中mysql的时候里面的字段，这个是后续的详细设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1585540617,"ip_address":"","comment_id":191926,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"有个疑问，有多个备选方案的话是不是要先评审出一个方案，然后在针对这个方案做更细的设计？否则先做了一个细的设计，评审后发现其中一个备选方案更优秀，那不是浪费时间重新设计吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488287,"discussion_content":"看概率和细化程度，我这里说的备选方案，不会太细，例如数据库，关注的是用不用mysql，而不会考虑中mysql的时候里面的字段，这个是后续的详细设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585540617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127766,"user_name":"康斯坦丁","can_delete":false,"product_type":"c1","uid":1368096,"ip_address":"","ucode":"C130E800E8D5C9","user_header":"https://static001.geekbang.org/account/avatar/00/14/e0/20/003190c1.jpg","comment_is_top":false,"comment_ctime":1566789307,"is_pvip":false,"replies":[{"id":49164,"content":"两组之间不同步数据，组内两台机器同步数据","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1567597701,"ip_address":"","comment_id":127766,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"每个数据分组 架构图上有4个节点， 两组主备集群， 这个设计用意是?  感觉需要一个主备集群就好了","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488287,"discussion_content":"看概率和细化程度，我这里说的备选方案，不会太细，例如数据库，关注的是用不用mysql，而不会考虑中mysql的时候里面的字段，这个是后续的详细设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585540617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113895,"user_name":"晓晨同学","can_delete":false,"product_type":"c1","uid":1413041,"ip_address":"","ucode":"236AEEB786E2CE","user_header":"https://static001.geekbang.org/account/avatar/00/15/8f/b1/7b697ed4.jpg","comment_is_top":false,"comment_ctime":1563181927,"is_pvip":false,"replies":[{"id":41831,"content":"技术选型就是整体架构设计的一部分","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1563356173,"ip_address":"","comment_id":113895,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"这个备选方案更着重于技术选型\n我理解对于整体的架构设计也需要有备选方案吧，比如组件模块的划分，请老师解答一下疑惑","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458426,"discussion_content":"技术选型就是整体架构设计的一部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563356173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20654,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534645731,"is_pvip":false,"replies":[{"id":7292,"content":"方案2可以尝试","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534739040,"ip_address":"","comment_id":20654,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"1、使用流行的消息中间件RabbitMQ。同时RabbitMQ对事务也有一定的支持。\n\n2、基于文中分组架构太复杂，可以选择仅有一组的主主架构。比如有3个服务，每个服务同时支持读和写，任务分配器采用轮询方式。这样就可以同时支持高性能写和高可用读。数据库依旧使用Mysql，采用主从方式，主库负责读和写，从库负责读，这样也就保证了存储高可用和高可用读取。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458426,"discussion_content":"技术选型就是整体架构设计的一部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563356173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16697,"user_name":"执着","can_delete":false,"product_type":"c1","uid":1005019,"ip_address":"","ucode":"D81A82948AD61D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/db/59219663.jpg","comment_is_top":false,"comment_ctime":1532100717,"is_pvip":false,"replies":[{"id":5846,"content":"kafka可以保证高可用的，有集群复制","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532255733,"ip_address":"","comment_id":16697,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"本节内容看到了备选方案的设计，很有启发，一定要有差异化；之前做设计也一直有做“备选方案”，但是发现还是性质一样，在做备选方案时候已经陷入自我坚持的认知缺陷。\n另外有一个问题：在留言区，看到几次有同学提出“热点”，在该章节分析里面，我们是围绕一次发送微博事件，需要其它子系统做出某些响应，从而选择了MQ的方案构思；近一步来设计落地方案；这时候来看，消息事件的消费并不存在热点呀？它们都是一次性的事情； \n这里不知道是否我整体理解偏颇？\n\n另外关于方案的选择上，方案一的kafka只保障了高性能，但是没有保障我们分析的复杂度“高可用存储”。","like_count":0},{"had_liked":false,"id":9902,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1527151225,"is_pvip":false,"replies":[{"id":3068,"content":"一个主服务器，一个主数据库","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527169073,"ip_address":"","comment_id":9902,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"请教下，备选方案2里，一个数据分组有两个主？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420902,"discussion_content":"kafka可以保证高可用的，有集群复制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532255733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9779,"user_name":"Up","can_delete":false,"product_type":"c1","uid":1032969,"ip_address":"","ucode":"3AACE765021AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/09/ee1b7ac0.jpg","comment_is_top":false,"comment_ctime":1527083572,"is_pvip":false,"replies":[{"id":3127,"content":"kafka已经是完备的消息队列了，加上es的目的是什么？","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527217774,"ip_address":"","comment_id":9779,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"说来惭愧，对于这方面的技术，应用非常少，所以学习了文章中的内容，和大牛门的留言。我应用过ELK写入日志和即时检索，我考虑kafka+es是否可以作为备选方案，还有对于微博一定要考虑缓存，因为微博是有热点和实效性的，es内部也有缓存机制。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418204,"discussion_content":"kafka已经是完备的消息队列了，加上es的目的是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527217774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12020,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1528519311,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"单从消息中间件选型上看，就是开源、自研以及对开源进行改造三种方案。后两种的整体成本会高很多，看明白理解透彻并提出新的解决方案都是很花功夫的事情。不管是消息中间件还是其他的系统，本质上都是两个部分：逻辑运算和数据的增删改查，为了提升容量和高可用，逻辑运算部分会采用集群的方式进行部署；数据部分为保证容量和数据不丢失，会采用集群和主备的方式进行部署。数据部分可以选择的方式比较多样：nosql、关系型数据库、文件存储等。第四种方案可以是对开源的中间件进行改造以更适合自己的场景。","like_count":15},{"had_liked":false,"id":11886,"user_name":"Geek_59a17f","can_delete":false,"product_type":"c1","uid":1119733,"ip_address":"","ucode":"61D49D5983AD3E","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/f5/4fb5284b.jpg","comment_is_top":false,"comment_ctime":1528421724,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"例如，高可用的主备方案、集群方案，高性能的负载均衡、多路复用，可扩展的分层、插件化等技术，绝大部分时候我们有了明确的目标后，按图索骥就能够找到可选的解决方案。","like_count":7},{"had_liked":false,"id":71963,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1551492673,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"方案4，引入商业公司消息服务，比如阿里云。这样开发成本是最小的，性能、运维都有保障。","like_count":6},{"had_liked":false,"id":244044,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598366054,"is_pvip":true,"replies":null,"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"rabbitmq虽好，但是团队是java为主，kafka和rockmq更适合，出现问题更容易排查，改bug和优化更容易。之前用rabbitmq竟然没有erlang的客户端，c客户端还有个小包延迟的问题，好在我们熟悉c😹","like_count":1,"discussions":[{"author":{"id":1317115,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","nickname":"王崧霁","note":"","ucode":"4F3284634293A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326287,"discussion_content":"1.rabbitmq基于erlang  ,而erlang属于小众语言，不方便二次开发\n2.rabbitmq性能跟kafka不是一个数量级，kafka支持百万级\n3.kafka在消息处理上给了开发者更多的自由度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605576030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9614,"user_name":"JOEL","can_delete":false,"product_type":"c1","uid":1102472,"ip_address":"","ucode":"E093C45E45080B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/88/3a90c25b.jpg","comment_is_top":false,"comment_ctime":1526989264,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"从需求看消息需要可靠性，即不能丢消息。那么kafka没有提供可靠性的保证，但是rabbitmq有这个保证，所以选择开源的话这个场景还是rmq好","like_count":1,"discussions":[{"author":{"id":1157789,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/9d/7431e82e.jpg","nickname":"FM微言送","note":"","ucode":"8F1DB06535E196","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186556,"discussion_content":"kafka现在是能保证可靠性的，以前老的版本是不能保证的，因为老版本是基于日志管理设计的，日志丢条消息影响不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582691548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1874,"discussion_content":"kafka有可靠性保证的，参看：https://blog.csdn.net/u013256816/article/details/71091774","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563019208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383765,"user_name":"柯里","can_delete":false,"product_type":"c1","uid":2556517,"ip_address":"上海","ucode":"B66035EE1E389B","user_header":"https://static001.geekbang.org/account/avatar/00/27/02/65/ddb6460e.jpg","comment_is_top":false,"comment_ctime":1699590422,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"使用非关系型数据库","like_count":0},{"had_liked":false,"id":361945,"user_name":"love秀","can_delete":false,"product_type":"c1","uid":1516810,"ip_address":"上海","ucode":"0EE98B01C382FE","user_header":"https://static001.geekbang.org/account/avatar/00/17/25/0a/e5747f4d.jpg","comment_is_top":false,"comment_ctime":1667995916,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"第三选择 除了B方案","like_count":0},{"had_liked":false,"id":16697,"user_name":"执着","can_delete":false,"product_type":"c1","uid":1005019,"ip_address":"","ucode":"D81A82948AD61D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/db/59219663.jpg","comment_is_top":false,"comment_ctime":1532100717,"is_pvip":false,"replies":[{"id":5846,"content":"kafka可以保证高可用的，有集群复制","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532255733,"ip_address":"","comment_id":16697,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"本节内容看到了备选方案的设计，很有启发，一定要有差异化；之前做设计也一直有做“备选方案”，但是发现还是性质一样，在做备选方案时候已经陷入自我坚持的认知缺陷。\n另外有一个问题：在留言区，看到几次有同学提出“热点”，在该章节分析里面，我们是围绕一次发送微博事件，需要其它子系统做出某些响应，从而选择了MQ的方案构思；近一步来设计落地方案；这时候来看，消息事件的消费并不存在热点呀？它们都是一次性的事情； \n这里不知道是否我整体理解偏颇？\n\n另外关于方案的选择上，方案一的kafka只保障了高性能，但是没有保障我们分析的复杂度“高可用存储”。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420902,"discussion_content":"kafka可以保证高可用的，有集群复制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532255733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9902,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1527151225,"is_pvip":false,"replies":[{"id":3068,"content":"一个主服务器，一个主数据库","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527169073,"ip_address":"","comment_id":9902,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"请教下，备选方案2里，一个数据分组有两个主？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418246,"discussion_content":"一个主服务器，一个主数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527169073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9779,"user_name":"Up","can_delete":false,"product_type":"c1","uid":1032969,"ip_address":"","ucode":"3AACE765021AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/09/ee1b7ac0.jpg","comment_is_top":false,"comment_ctime":1527083572,"is_pvip":false,"replies":[{"id":3127,"content":"kafka已经是完备的消息队列了，加上es的目的是什么？","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527217774,"ip_address":"","comment_id":9779,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"说来惭愧，对于这方面的技术，应用非常少，所以学习了文章中的内容，和大牛门的留言。我应用过ELK写入日志和即时检索，我考虑kafka+es是否可以作为备选方案，还有对于微博一定要考虑缓存，因为微博是有热点和实效性的，es内部也有缓存机制。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418246,"discussion_content":"一个主服务器，一个主数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527169073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12020,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1528519311,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"单从消息中间件选型上看，就是开源、自研以及对开源进行改造三种方案。后两种的整体成本会高很多，看明白理解透彻并提出新的解决方案都是很花功夫的事情。不管是消息中间件还是其他的系统，本质上都是两个部分：逻辑运算和数据的增删改查，为了提升容量和高可用，逻辑运算部分会采用集群的方式进行部署；数据部分为保证容量和数据不丢失，会采用集群和主备的方式进行部署。数据部分可以选择的方式比较多样：nosql、关系型数据库、文件存储等。第四种方案可以是对开源的中间件进行改造以更适合自己的场景。","like_count":15},{"had_liked":false,"id":11886,"user_name":"Geek_59a17f","can_delete":false,"product_type":"c1","uid":1119733,"ip_address":"","ucode":"61D49D5983AD3E","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/f5/4fb5284b.jpg","comment_is_top":false,"comment_ctime":1528421724,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"例如，高可用的主备方案、集群方案，高性能的负载均衡、多路复用，可扩展的分层、插件化等技术，绝大部分时候我们有了明确的目标后，按图索骥就能够找到可选的解决方案。","like_count":7},{"had_liked":false,"id":71963,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1551492673,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"方案4，引入商业公司消息服务，比如阿里云。这样开发成本是最小的，性能、运维都有保障。","like_count":6},{"had_liked":false,"id":244044,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598366054,"is_pvip":true,"replies":null,"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"rabbitmq虽好，但是团队是java为主，kafka和rockmq更适合，出现问题更容易排查，改bug和优化更容易。之前用rabbitmq竟然没有erlang的客户端，c客户端还有个小包延迟的问题，好在我们熟悉c😹","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418204,"discussion_content":"kafka已经是完备的消息队列了，加上es的目的是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527217774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9614,"user_name":"JOEL","can_delete":false,"product_type":"c1","uid":1102472,"ip_address":"","ucode":"E093C45E45080B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/88/3a90c25b.jpg","comment_is_top":false,"comment_ctime":1526989264,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"从需求看消息需要可靠性，即不能丢消息。那么kafka没有提供可靠性的保证，但是rabbitmq有这个保证，所以选择开源的话这个场景还是rmq好","like_count":1,"discussions":[{"author":{"id":1317115,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","nickname":"王崧霁","note":"","ucode":"4F3284634293A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326287,"discussion_content":"1.rabbitmq基于erlang  ,而erlang属于小众语言，不方便二次开发\n2.rabbitmq性能跟kafka不是一个数量级，kafka支持百万级\n3.kafka在消息处理上给了开发者更多的自由度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605576030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383765,"user_name":"柯里","can_delete":false,"product_type":"c1","uid":2556517,"ip_address":"上海","ucode":"B66035EE1E389B","user_header":"https://static001.geekbang.org/account/avatar/00/27/02/65/ddb6460e.jpg","comment_is_top":false,"comment_ctime":1699590422,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"使用非关系型数据库","like_count":0},{"had_liked":false,"id":361945,"user_name":"love秀","can_delete":false,"product_type":"c1","uid":1516810,"ip_address":"上海","ucode":"0EE98B01C382FE","user_header":"https://static001.geekbang.org/account/avatar/00/17/25/0a/e5747f4d.jpg","comment_is_top":false,"comment_ctime":1667995916,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"第三选择 除了B方案","like_count":0,"discussions":[{"author":{"id":1157789,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/9d/7431e82e.jpg","nickname":"FM微言送","note":"","ucode":"8F1DB06535E196","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186556,"discussion_content":"kafka现在是能保证可靠性的，以前老的版本是不能保证的，因为老版本是基于日志管理设计的，日志丢条消息影响不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582691548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1874,"discussion_content":"kafka有可靠性保证的，参看：https://blog.csdn.net/u013256816/article/details/71091774","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563019208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347843,"user_name":"侧耳倾听","can_delete":false,"product_type":"c1","uid":1512642,"ip_address":"","ucode":"5BF2A2440B54F0","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","comment_is_top":false,"comment_ctime":1654509543,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"方案四：云服务","like_count":0},{"had_liked":false,"id":304324,"user_name":"Ilovek8s","can_delete":false,"product_type":"c1","uid":1542450,"ip_address":"","ucode":"64DF0F7D0CF0B0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/a8PMLmCTCBa40j7JIy3d8LsdbW5hne7lkk9KOGQuiaeVk4cn06KWwlP3ic69BsQLpNFtRTjRdUM2ySDBAv1MOFfA/132","comment_is_top":false,"comment_ctime":1627354317,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"我们在K8S上的消息方案是NATS。主要场景就是云原生的方案，基于K8s控制器模式，控制循环检测期望状态异常，调用接口推送消息。","like_count":0},{"had_liked":false,"id":299341,"user_name":"ZHANGPING","can_delete":false,"product_type":"c1","uid":1918112,"ip_address":"","ucode":"7108812981C996","user_header":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","comment_is_top":false,"comment_ctime":1624586660,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"个人心得， 架构师要心中有墨， 对技术的宽度，技术深度。熟悉的解决方案，方案主要优劣，成本等","like_count":0},{"had_liked":false,"id":229163,"user_name":"今夕何夕","can_delete":false,"product_type":"c1","uid":1620929,"ip_address":"","ucode":"C3374848592304","user_header":"https://static001.geekbang.org/account/avatar/00/18/bb/c1/b2f1bd6f.jpg","comment_is_top":false,"comment_ctime":1592913008,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"架构设计第一步，根据高可用，高性能，可扩展，安全性等因素识别复杂度，找到系统的复杂度在哪，明确设计目标。","like_count":0},{"had_liked":false,"id":183062,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582946284,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"首先，高可用写入（读取）这块目前的方案有mongodb（副本集一主多从，数据分片集群）和redis(集群化)。\n其次，高性能存储，这块目前的方案有kafka，各种mq，如果要确保数据不丢失，可能还要增加回应和确认机制，\n最后，最好是自带存储功能的mq。\n","like_count":0},{"had_liked":false,"id":166783,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1577594466,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":9,"product_id":100006601,"comment_content":"系统的复杂性是做架构设计时的必要输入，在确定好系统复杂性后，可以开始着手做架构设计了。\n\n在做架构设计时，需要注意：\n1. 综合考虑团队技术栈使用情况，一般成熟团队不会轻易更换技术栈。\n2. 需要考虑备选方案，这样可以扩展思路，避免陷入思维误区。\n\n在设计备选方案时，需要注意：\n1. 注意备选方案数量，一般3到5个，不推荐太多。\n2. 备选方案不需要提供太多细节，这个阶段的重点在于技术选型，不在于细节。\n3. 不同的备选方案要有足够的差异性，这样才能更好的评估。\n4. 备选方案不要只局限在熟悉的技术上，这也要求架构师持续学习，不断丰富自己的架构备选方案库。\n\n做事要有Plan B，这样风险成为现实的时候，才能从容不迫。","like_count":0},{"had_liked":false,"id":108605,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1561814402,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"可以使用AWS的SNS消息系统，来实现消息的高性能存储，使用AWS的S3作冷数据备份，使用AWS的ElasticCache来做高性能读取","like_count":0},{"had_liked":false,"id":46970,"user_name":"Geek_fb3db2","can_delete":false,"product_type":"c1","uid":1218254,"ip_address":"","ucode":"8089B8311B6C80","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/ce/8c3bdbe5.jpg","comment_is_top":false,"comment_ctime":1544012523,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"任何设计方案总会有plan B\nredis存储可很好解决数据一致性和高存储和读取的要求","like_count":0},{"had_liked":false,"id":32046,"user_name":"MJ","can_delete":false,"product_type":"c1","uid":1237145,"ip_address":"","ucode":"FCEC0C21444D2A","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/99/5d603697.jpg","comment_is_top":false,"comment_ctime":1539395035,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"网络工程师表示只能看懂主备切换方案，赞👍","like_count":0},{"had_liked":false,"id":10948,"user_name":"小水","can_delete":false,"product_type":"c1","uid":1104456,"ip_address":"","ucode":"808E8E28BA3827","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/48/0d3cd6fa.jpg","comment_is_top":false,"comment_ctime":1527760067,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"等华仔出书","like_count":0},{"had_liked":false,"id":347843,"user_name":"侧耳倾听","can_delete":false,"product_type":"c1","uid":1512642,"ip_address":"","ucode":"5BF2A2440B54F0","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","comment_is_top":false,"comment_ctime":1654509543,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"方案四：云服务","like_count":0},{"had_liked":false,"id":304324,"user_name":"Ilovek8s","can_delete":false,"product_type":"c1","uid":1542450,"ip_address":"","ucode":"64DF0F7D0CF0B0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/a8PMLmCTCBa40j7JIy3d8LsdbW5hne7lkk9KOGQuiaeVk4cn06KWwlP3ic69BsQLpNFtRTjRdUM2ySDBAv1MOFfA/132","comment_is_top":false,"comment_ctime":1627354317,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"我们在K8S上的消息方案是NATS。主要场景就是云原生的方案，基于K8s控制器模式，控制循环检测期望状态异常，调用接口推送消息。","like_count":0},{"had_liked":false,"id":299341,"user_name":"ZHANGPING","can_delete":false,"product_type":"c1","uid":1918112,"ip_address":"","ucode":"7108812981C996","user_header":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","comment_is_top":false,"comment_ctime":1624586660,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"个人心得， 架构师要心中有墨， 对技术的宽度，技术深度。熟悉的解决方案，方案主要优劣，成本等","like_count":0},{"had_liked":false,"id":229163,"user_name":"今夕何夕","can_delete":false,"product_type":"c1","uid":1620929,"ip_address":"","ucode":"C3374848592304","user_header":"https://static001.geekbang.org/account/avatar/00/18/bb/c1/b2f1bd6f.jpg","comment_is_top":false,"comment_ctime":1592913008,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"架构设计第一步，根据高可用，高性能，可扩展，安全性等因素识别复杂度，找到系统的复杂度在哪，明确设计目标。","like_count":0},{"had_liked":false,"id":183062,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582946284,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"首先，高可用写入（读取）这块目前的方案有mongodb（副本集一主多从，数据分片集群）和redis(集群化)。\n其次，高性能存储，这块目前的方案有kafka，各种mq，如果要确保数据不丢失，可能还要增加回应和确认机制，\n最后，最好是自带存储功能的mq。\n","like_count":0},{"had_liked":false,"id":166783,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1577594466,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":9,"product_id":100006601,"comment_content":"系统的复杂性是做架构设计时的必要输入，在确定好系统复杂性后，可以开始着手做架构设计了。\n\n在做架构设计时，需要注意：\n1. 综合考虑团队技术栈使用情况，一般成熟团队不会轻易更换技术栈。\n2. 需要考虑备选方案，这样可以扩展思路，避免陷入思维误区。\n\n在设计备选方案时，需要注意：\n1. 注意备选方案数量，一般3到5个，不推荐太多。\n2. 备选方案不需要提供太多细节，这个阶段的重点在于技术选型，不在于细节。\n3. 不同的备选方案要有足够的差异性，这样才能更好的评估。\n4. 备选方案不要只局限在熟悉的技术上，这也要求架构师持续学习，不断丰富自己的架构备选方案库。\n\n做事要有Plan B，这样风险成为现实的时候，才能从容不迫。","like_count":0},{"had_liked":false,"id":108605,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1561814402,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"可以使用AWS的SNS消息系统，来实现消息的高性能存储，使用AWS的S3作冷数据备份，使用AWS的ElasticCache来做高性能读取","like_count":0},{"had_liked":false,"id":46970,"user_name":"Geek_fb3db2","can_delete":false,"product_type":"c1","uid":1218254,"ip_address":"","ucode":"8089B8311B6C80","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/ce/8c3bdbe5.jpg","comment_is_top":false,"comment_ctime":1544012523,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"任何设计方案总会有plan B\nredis存储可很好解决数据一致性和高存储和读取的要求","like_count":0},{"had_liked":false,"id":32046,"user_name":"MJ","can_delete":false,"product_type":"c1","uid":1237145,"ip_address":"","ucode":"FCEC0C21444D2A","user_header":"https://static001.geekbang.org/account/avatar/00/12/e0/99/5d603697.jpg","comment_is_top":false,"comment_ctime":1539395035,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"网络工程师表示只能看懂主备切换方案，赞👍","like_count":0},{"had_liked":false,"id":10948,"user_name":"小水","can_delete":false,"product_type":"c1","uid":1104456,"ip_address":"","ucode":"808E8E28BA3827","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/48/0d3cd6fa.jpg","comment_is_top":false,"comment_ctime":1527760067,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"等华仔出书","like_count":0},{"had_liked":false,"id":10073,"user_name":"eye","can_delete":false,"product_type":"c1","uid":1112851,"ip_address":"","ucode":"B9E8A5C4121409","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/13/5bf4f1ad.jpg","comment_is_top":false,"comment_ctime":1527257618,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"上esb吧","like_count":0},{"had_liked":false,"id":10057,"user_name":"天高愉悦","can_delete":false,"product_type":"c1","uid":1067279,"ip_address":"","ucode":"082A88947D6A0E","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/0f/8ea4f244.jpg","comment_is_top":false,"comment_ctime":1527250365,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"不要过度设计，好难😷","like_count":0},{"had_liked":false,"id":9796,"user_name":"家榆","can_delete":false,"product_type":"c1","uid":1030050,"ip_address":"","ucode":"6D62685C80DD7C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/a2/0ce9b8df.jpg","comment_is_top":false,"comment_ctime":1527089791,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"写文件，异步消费。","like_count":0},{"had_liked":false,"id":9751,"user_name":"YMF_WX1981","can_delete":false,"product_type":"c1","uid":1123051,"ip_address":"","ucode":"8891A4C343D9FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/eb/b580b80f.jpg","comment_is_top":false,"comment_ctime":1527061785,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"要完成的架构是个万能黑洞，做到技术无关性，用总线bus可否实现，进而对外提供满足业务的计算和存储功能。","like_count":0},{"had_liked":false,"id":9670,"user_name":"追寻云的痕迹","can_delete":false,"product_type":"c1","uid":1081114,"ip_address":"","ucode":"2B782C85CF0F67","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/1a/eb8021c3.jpg","comment_is_top":false,"comment_ctime":1527033761,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"实话实说，正在做容器项目的交付和实施，并不想把Docker和虚拟化这俩词并列放在一起，因为虚拟化最多是容器技术的一个细节技术点。我们应当看到容器技术引导了应用标准化交付和运维的变革。容器镜像将是运维开发工具链中的标准件。","like_count":0},{"had_liked":false,"id":10073,"user_name":"eye","can_delete":false,"product_type":"c1","uid":1112851,"ip_address":"","ucode":"B9E8A5C4121409","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/13/5bf4f1ad.jpg","comment_is_top":false,"comment_ctime":1527257618,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"上esb吧","like_count":0},{"had_liked":false,"id":10057,"user_name":"天高愉悦","can_delete":false,"product_type":"c1","uid":1067279,"ip_address":"","ucode":"082A88947D6A0E","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/0f/8ea4f244.jpg","comment_is_top":false,"comment_ctime":1527250365,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"不要过度设计，好难😷","like_count":0},{"had_liked":false,"id":9796,"user_name":"家榆","can_delete":false,"product_type":"c1","uid":1030050,"ip_address":"","ucode":"6D62685C80DD7C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/a2/0ce9b8df.jpg","comment_is_top":false,"comment_ctime":1527089791,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"写文件，异步消费。","like_count":0},{"had_liked":false,"id":9751,"user_name":"YMF_WX1981","can_delete":false,"product_type":"c1","uid":1123051,"ip_address":"","ucode":"8891A4C343D9FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/eb/b580b80f.jpg","comment_is_top":false,"comment_ctime":1527061785,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"要完成的架构是个万能黑洞，做到技术无关性，用总线bus可否实现，进而对外提供满足业务的计算和存储功能。","like_count":0},{"had_liked":false,"id":9670,"user_name":"追寻云的痕迹","can_delete":false,"product_type":"c1","uid":1081114,"ip_address":"","ucode":"2B782C85CF0F67","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/1a/eb8021c3.jpg","comment_is_top":false,"comment_ctime":1527033761,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"实话实说，正在做容器项目的交付和实施，并不想把Docker和虚拟化这俩词并列放在一起，因为虚拟化最多是容器技术的一个细节技术点。我们应当看到容器技术引导了应用标准化交付和运维的变革。容器镜像将是运维开发工具链中的标准件。","like_count":0}]}