{"id":93914,"title":"10 | Lambda架构：Twitter亿级实时数据分析架构背后的倚天剑","content":"<p>你好，我是蔡元楠。</p><p>今天我要与你分享的主题是Lambda架构。</p><p>通过这一讲，你可以了解什么是Lambda架构，以及它为什么能够成为Twitter亿级实时数据分析架构背后的“倚天剑”。</p><p>在学习了架构师的必备技能后，你是否已经摩拳擦掌，跃跃欲试地想要上手一个实际项目了呢？没问题，我们一起来看一个我的架构经历里的真实项目。</p><p>情况是这样的，我们正运行着广告精准投放业务，并且拥有海量的用户网站访问行为。我们需要进行用户行为分析来建立一个模型，然后根据这个模型来投放用户喜好的广告。</p><p>你可能想到了批处理架构。没错，这个时候数据批处理架构无疑是一种很好的选择。</p><p>可是我们不要忘了，之前讲过批处理架构有着高延时性的不足，而互联网用户行为的数据往往可以达到Pb或Eb，甚至是Zb的级别。做这种分析挖掘用户行为的任务，往往能耗时好几个小时甚至是几天。这样的话，我们根据模型精准投放给特定用户的广告就会有一定延时了。</p><p>那我们只用流处理架构行不行呢？</p><p>在广告精准投放的业务需求下，只用流处理架构会造成忽略了用户的历史网站访问行为，一些异常行为可能会让我们的服务投放错误的广告。</p><p>例如，用户A的电脑暂时借给用户B使用了一下，而用户B浏览了一些新的网站类型（与用户A不同）。这种情况下，我们无法判断用户A实际上是否对这类型的广告感兴趣，所以不能根据这些新的浏览记录给用户A推送广告。</p><!-- [[[read_end]]] --><p>这个时候应该怎么优化我们的架构呢？我们先把问题放一放，在介绍完了Lambda架构之后或许会对你有所启发。</p><h2>Lambda架构</h2><p>Lambda架构（Lambda Architecture）是由Twitter工程师南森·马茨（Nathan Marz）提出的大数据处理架构。这一架构的提出基于马茨在BackType和Twitter上的分布式数据处理系统的经验。</p><p>Lambda架构使开发人员能够构建大规模分布式数据处理系统。它具有很好的灵活性和可扩展性，也对硬件故障和人为失误有很好的容错性。</p><p>Lambda架构总共由三层系统组成：<strong>批处理层</strong>（Batch Layer），<strong>速度处理层</strong>（Speed Layer），以及用于响应查询的<strong>服务层</strong>（Serving Layer）。</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/23/8fe667211309978b2dd6cb6948939923.jpg?wh=634*227\" alt=\"\"></p><p>在Lambda架构中，每层都有自己所肩负的任务。</p><p>批处理层存储管理主数据集（不可变的数据集）和预先批处理计算好的视图。</p><p>批处理层使用可处理大量数据的分布式处理系统预先计算结果。它通过处理所有的已有历史数据来实现数据的准确性。这意味着它是基于完整的数据集来重新计算的，能够修复任何错误，然后更新现有的数据视图。输出通常存储在只读数据库中，更新则完全取代现有的预先计算好的视图。</p><p>速度处理层会实时处理新来的大数据。</p><p>速度层通过提供最新数据的实时视图来最小化延迟。速度层所生成的数据视图可能不如批处理层最终生成的视图那样准确或完整，但它们几乎在收到数据后立即可用。而当同样的数据在批处理层处理完成后，在速度层的数据就可以被替代掉了。</p><p>本质上，速度层弥补了批处理层所导致的数据视图滞后。比如说，批处理层的每个任务都需要1个小时才能完成，而在这1个小时里，我们是无法获取批处理层中最新任务给出的数据视图的。而速度层因为能够实时处理数据给出结果，就弥补了这1个小时的滞后。</p><p>所有在批处理层和速度层处理完的结果都输出存储在服务层中，服务层通过返回预先计算的数据视图或从速度层处理构建好数据视图来响应查询。</p><p>好了，我们回到刚刚的问题中。我们如何做到既能实时分析用户新的网站浏览行为又能兼顾到用户的网站浏览行为历史呢？没错，就是利用Lambda架构。</p><p>所有的新用户行为数据都可以同时流入批处理层和速度层。批处理层会永久保存数据并且对数据进行预处理，得到我们想要的用户行为模型并写入服务层。而速度层也同时对新用户行为数据进行处理，得到实时的用户行为模型。</p><p>而当“应该对用户投放什么样的广告”作为一个查询（Query）来到时，我们从服务层既查询服务层中保存好的批处理输出模型，也对速度层中处理的实时行为进行查询，这样我们就可以得到一个完整的用户行为历史了。</p><p>一个查询就如下图所示，既通过批处理层兼顾了数据的完整性，也可以通过速度层弥补批处理层的高延时性，让整个查询具有实时性。</p><p><img src=\"https://static001.geekbang.org/resource/image/87/b1/8736ead4184d00aa190b4ffbad2f97b1.jpg?wh=602*310\" alt=\"\"></p><p>Lambda架构在硅谷一线大公司的应用已经十分广泛，我来带你一起看看一些实际的应用场景。</p><h2>Twitter的数据分析案例</h2><p>Twitter在欧美十分受欢迎，而Twitter中人们所发Tweet里面的Hashtag也常常能引爆一些热搜词汇，也就是Most Popular Hashtags。下面我来给你讲述一下如何利用Lambda架构来实时分析这些Hashtags。</p><p><img src=\"https://static001.geekbang.org/resource/image/60/20/607c18bece2d57048506374048e74220.jpg?wh=634*223\" alt=\"\"></p><p>在这个实际案例里，我们先用twitter4J的流处理API抓取实时的Twitter推文，同时利用Apache Kafka将抓取到的数据保存并实时推送给批处理层和速度层。</p><p>因为Apache Spark平台中既有批处理架构也兼容了流处理架构，所以我们选择在批处理层和速度层都采用Apache Spark来读取来自Apache Kafka的数据。</p><p>批处理层和速度层在分析处理好数据后会将数据视图输出存储在服务层中，我们将使用Apache Cassandra平台来存储他们的数据视图。Apache Cassandra将批处理层的视图数据和速度层的实时视图数据结合起来，就可以得到一系列有趣的数据。</p><p>例如，我们根据每一条Tweet中元数据（Metadata）里的location field，可以得知发推文的人的所在地。而服务层中的逻辑可以根据这个地址信息进行分组，然后统计在不同地区的人所关心的Hashtag是什么。</p><p>时间长达几周或者的几个月的数据，我们可以结合批处理层和速度层的数据视图来得出，而快至几个小时的数据我们又可以根据速度层的数据视图来获知，怎么样？这个架构是不是十分灵活？</p><p>看到这里，你可能会问，我在上面所讲的例子都是来自些科技巨头公司，如果我在开发中面对的数据场景没有这么巨大，又或者说我的公司还在创业起步阶段，我是否可以用到Lambda架构呢？</p><p>答案是肯定的！我下面将和你一起分享一个在硅谷旧金山创业公司的App后台架构。</p><h2>Smart Parking案例分析</h2><p>在硅谷旧金山地区上班生活的小伙伴肯定都知道，找停车位是一大难题。这里地少车多，每次出行，特别是周末，找停车位都要绕个好几十分钟才能找得到。</p><p>智能停车App就是在这样的背景下诞生的。这个App可以根据大规模数据所构建的视图推荐最近的车位给用户。</p><p>看到这里，我想先请你结合之前所讲到的广告精准投放案例，思考一下Lambda架构是如何应用在这个App里的，然后再听我娓娓道来。</p><p>好，我们来梳理一下各种可以利用到的大数据。</p><p>首先是可以拿到各类停车场的数据。这类数据的实时性虽然不一定高，但是数据的准确性高。那我们能不能只通过这类大数据来推荐停车位呢？</p><p>我来给你举个极端的例子。假设在一个区域有三个停车场，停车场A现在只剩下1个停车位了。</p><p>停车场B和C还有非常多的空位。而在这时候距离停车场比A较近的位置有10位车主在使用这个App寻求推荐停车位。如果只通过车主和停车场的距离和停车场剩余停车位来判断的话，App很有可能会将这个只剩下一个停车位的停车场A同时推荐给这10位用户。</p><p><img src=\"https://static001.geekbang.org/resource/image/85/69/850cfb80f7da8cfb0656627e902e8469.jpg?wh=694*572\" alt=\"\"></p><p>结果可想而知，只有一位幸运儿能找到停车位，剩下的9位车主需要重新寻找停车位。</p><p>如果附近又出现了只有一个停车位的停车场呢？同理，这个App又会推荐这个停车场给剩下的9位用户。这时又只能有一位幸运儿找到停车位。</p><p>如此反复循环，用户体验会非常差，甚至会导致用户放弃这个App。</p><p>那我们有没有办法可以改进推荐的准确度呢？</p><p>你可能会想到我们可以利用这些停车场的历史数据，建立一个人工智能的预测模型，在推荐停车位的时候，不单单考虑到附近停车场的剩余停车位和用户与停车场的相邻距离，还能将预测模型应用在推荐里，看看未来的一段时间内这个停车场是否有可能会被停满了。</p><p>这时候我们的停车位推荐系统就变成了一个基于分数（Score）来推荐停车位的系统了。</p><p>好了，这个时候的系统架构是否已经达到最优了呢？你有想到应用Lambda架构吗？</p><p>没错，这些停车场的历史数据或者每隔半小时拿到的停车位数据，我们可以把它作为批处理层的数据。</p><p>那速度层的数据呢？我们可以将所有用户的GPS数据聚集起来，这些需要每秒收集的GPS数据刚好又是速度层所擅长的实时流处理数据。从这些用户的实时GPS数据中，我们可以再建立一套预测模型来预测附近停车场位置的拥挤程度。</p><p><img src=\"https://static001.geekbang.org/resource/image/68/31/68c66d013bca9ae36adc71094a82e931.jpg?wh=644*237\" alt=\"\"></p><p>服务层将从批处理层和速度层得到的分数结合后将得到最高分数的停车场推荐给用户。这样利用了历史数据（停车场数据）和实时数据（用户GPS数据）能大大提升推荐的准确率。</p><h2>小结</h2><p>在了解Lambda架构后，我们知道Lambda架构具有很好的灵活性和可扩展性。我们可以很方便地将现有的开源平台套用入这个架构中，如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/e8/8b/e874291dc460e8bfdbe8221ce0fe3d8b.jpg?wh=644*237\" alt=\"\"></p><p>当开发者需要迁移平台时，整体的架构不需要改变，只需要将逻辑迁移到新平台中。</p><p>例如，可以将Apache Spark替换成Apache Storm。而因为我们有批处理层这一概念，又有了很好的容错性。</p><p>假如某天开发者发现逻辑出现了错误，只需要调整算法对永久保存好的数据重新进行处理写入服务层，经过多次迭代后整体的逻辑便可以被纠正过来。</p><p>从我的开发经验来看，现在有很多的开发项目可能已经有了比较成熟的架构或者算法了。</p><p>但是如果我们平时能多思考一下现有架构的瓶颈，又或者想一想现在的架构能不能改善得更好，有了这样的思考，在学习到这些经典优秀架构之后，说不定真的能让现有的架构变得更好。</p><p>也就是说，作为一名优秀的架构师，“现有的架构能不能做得更好？”应该是一个需要经常思考的问题。</p><h2>思考题</h2><p>你所做的项目开发能否利用Lambda架构呢？在生活中有没有哪些大数据处理场景可以利用Lambda架构呢？</p><p>欢迎在评论中留言，与我和其他同学一起讨论。</p><p>如果你觉得今天有些不一样的收获，也欢迎你把这篇文章分享给你的好友。</p><p></p>","comments":[{"had_liked":false,"id":92402,"user_name":":)","can_delete":false,"product_type":"c1","uid":1239198,"ip_address":"","ucode":"23D505949442B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/9e/6550a051.jpg","comment_is_top":false,"comment_ctime":1557248072,"is_pvip":false,"replies":[{"id":"33049","content":"谢谢你的经验分享！","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557270470,"ip_address":"","comment_id":92402,"utype":1}],"discussion_count":4,"race_medal":0,"score":"186240841800","product_id":100025301,"comment_content":"我们公司做的实时数仓 就满足Lambda 架构。1.批处理部分。定时拉取业务库的数据，并在hive做批处理计算。<br>2.速度部分。通过订阅mysql数据库的binlog，实时获取数据库的增删改等的操作，通过kafka和flink，生成相关结果。","like_count":44,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449242,"discussion_content":"谢谢你的经验分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557270470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1017707,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","nickname":"朱月俊","note":"","ucode":"4DA0728B862FBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269418,"discussion_content":"你们运行在flink上的语言是啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589900457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240288,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/e0/3f7d0868.jpg","nickname":"阿飞","note":"","ucode":"16BD5C11ACEE90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266583,"discussion_content":"想请教一下，实时推荐的前端架构该怎么做，万级并发，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589535636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1017707,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","nickname":"朱月俊","note":"","ucode":"4DA0728B862FBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1240288,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ec/e0/3f7d0868.jpg","nickname":"阿飞","note":"","ucode":"16BD5C11ACEE90","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269416,"discussion_content":"高并发可以分流来做，其他思路差不多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589900423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":266583,"ip_address":""},"score":269416,"extra":""}]}]},{"had_liked":false,"id":92457,"user_name":"JohnT3e","can_delete":false,"product_type":"c1","uid":1063982,"ip_address":"","ucode":"CF4AAAC933529C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdWHFCr66TzHS2CpCkiaRaDIk3tU5sKPry16Q7ic0mZZdy8LOCYc38wOmyv5RZico7icBVeaPX8X2jcw/132","comment_is_top":false,"comment_ctime":1557277269,"is_pvip":false,"replies":[{"id":"33073","content":"谢谢你的提问！没错，这也是Lambda架构的一个缺点，开发者必须要把同样的逻辑在两个地方维护，特别是当技术栈不一样的时候会很头疼。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557282050,"ip_address":"","comment_id":92457,"utype":1}],"discussion_count":1,"race_medal":0,"score":"164766034517","product_id":100025301,"comment_content":"lambda架构是不是可能会导致相似的处理逻辑在batch层和speed层都要开发一遍？","like_count":39,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449269,"discussion_content":"谢谢你的提问！没错，这也是Lambda架构的一个缺点，开发者必须要把同样的逻辑在两个地方维护，特别是当技术栈不一样的时候会很头疼。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557282050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94658,"user_name":"命缘","can_delete":false,"product_type":"c1","uid":1104496,"ip_address":"","ucode":"EFC7DBB76329E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/70/abf490cf.jpg","comment_is_top":false,"comment_ctime":1557879819,"is_pvip":false,"replies":[{"id":"34209","content":"谢谢你的提问！之前有另外一个同学让我讲述一下广告精准投放的实际例子，我就引用一下那个回答吧。<br><br>广告投放预测这种推荐系统一般都会用到Lambda架构。一般能做精准广告投放的公司都会拥有海量用户特征、用户历史浏览记录和网页类型分类这些历史数据的。业界比较流行的做法有在批处理层用Alternating Least Squares (ALS)算法，也就是Collaborative Filtering协同过滤算法，可以得出与用户特性一致其他用户感兴趣的广告类型，也可以得出和用户感兴趣类型的广告相似的广告，而用k-means也可以对客户感兴趣的广告类型进行分类。这里的结果是批处理层的结果。在速度层中根据用户的实时浏览网页类型在之前分好类的广告中寻找一些top K的广告出来。最终服务层可以结合速度层的top K广告和批处理层中分类好的点击率高的相似广告，做出选择投放给用户。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1558129625,"ip_address":"","comment_id":94658,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78867291147","product_id":100025301,"comment_content":"老师，想请问下服务层具体是怎们兼容批处理层和实时处理层的结果的，有没实际例子","like_count":19,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450157,"discussion_content":"谢谢你的提问！之前有另外一个同学让我讲述一下广告精准投放的实际例子，我就引用一下那个回答吧。\n\n广告投放预测这种推荐系统一般都会用到Lambda架构。一般能做精准广告投放的公司都会拥有海量用户特征、用户历史浏览记录和网页类型分类这些历史数据的。业界比较流行的做法有在批处理层用Alternating Least Squares (ALS)算法，也就是Collaborative Filtering协同过滤算法，可以得出与用户特性一致其他用户感兴趣的广告类型，也可以得出和用户感兴趣类型的广告相似的广告，而用k-means也可以对客户感兴趣的广告类型进行分类。这里的结果是批处理层的结果。在速度层中根据用户的实时浏览网页类型在之前分好类的广告中寻找一些top K的广告出来。最终服务层可以结合速度层的top K广告和批处理层中分类好的点击率高的相似广告，做出选择投放给用户。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558129625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92475,"user_name":"leeon","can_delete":false,"product_type":"c1","uid":1083723,"ip_address":"","ucode":"74C23558036552","user_header":"https://static001.geekbang.org/account/avatar/00/10/89/4b/56d290f5.jpg","comment_is_top":false,"comment_ctime":1557279414,"is_pvip":false,"replies":[{"id":"33074","content":"谢谢你的经验分享！","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557282119,"ip_address":"","comment_id":92475,"utype":1}],"discussion_count":2,"race_medal":0,"score":"61686821558","product_id":100025301,"comment_content":"目前是通过Kafka将行为数据收集到hdfs，然后spark批处理t+1计算长期数据，生成固定格式的特征同步到kv上线，同时实时收集服务也从Kafka中消费最新的行为，两层输出特征格式统一，供画像服务使用","like_count":15,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449275,"discussion_content":"谢谢你的经验分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557282119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1891334,"avatar":"","nickname":"ispark","note":"","ucode":"4676C45E485117","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549748,"discussion_content":"实际使用中是同时看两份数据,还是整合成一份数据呢?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644225845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92888,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1557362160,"is_pvip":false,"replies":[{"id":"33169","content":"谢谢你的经验之谈！","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557370919,"ip_address":"","comment_id":92888,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48802002416","product_id":100025301,"comment_content":"简单又实用的lambda架构，如果实时和批量不能同时满足那就分开吧，用的时候综合下，让我想到现在开源的数据湖，delta data lake，如果批量和实时矛盾就分开吧，读写分，采用不同行式或列式存储，实时和历史分开，实时数据再定期变成历史，这个架构最大难点是如何合并speed和batch","like_count":11,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449412,"discussion_content":"谢谢你的经验之谈！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557370919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93158,"user_name":"¾","can_delete":false,"product_type":"c1","uid":1126355,"ip_address":"","ucode":"FD0D3CAFF887AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/2f/d3/6674af19.jpg","comment_is_top":false,"comment_ctime":1557409786,"is_pvip":false,"replies":[{"id":"33223","content":"谢谢你的分享！Bingo，我觉得是完全正确的！以前在读技术文章的时候就看到过一种说法是：完整的数据集 = λ (实时数据) * λ (历史数据)。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557428440,"ip_address":"","comment_id":93158,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31622180858","product_id":100025301,"comment_content":"关于为什么叫lamda架构有一个猜想。lamda的希腊字母是λ，这正好表示batch 和 speed两种最后汇聚到一起。不知道猜想对不对，但是感觉通过希腊字母，象形的代表架构模式还是挺有意思的。","like_count":8,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449507,"discussion_content":"谢谢你的分享！Bingo，我觉得是完全正确的！以前在读技术文章的时候就看到过一种说法是：完整的数据集 = λ (实时数据) * λ (历史数据)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557428440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1729060,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","nickname":"托尼斯威特","note":"","ucode":"98A1035527292E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311483,"discussion_content":"Y 架构哈哈\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602360534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92642,"user_name":"Codelife","can_delete":false,"product_type":"c1","uid":1041421,"ip_address":"","ucode":"10458683978083","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLhMtBwGqqmyhxp5uaDTvvp18iaalQj8qHv6u8rv1FQXGozfl3alPvdPHpEsTWwFPFVOoP6EeKT4bw/132","comment_is_top":false,"comment_ctime":1557308090,"is_pvip":false,"replies":[{"id":"33139","content":"谢谢你的经验分享！<br><br>是的啊，有时候不知不觉就会发现自己原来就已经在使用了某个特定技术。这让我想起设计模式，早期阶段在代码中自己已经在实现某个设计模式了，但是因为那时候还没有系统地去学习设计模式，没察觉到而已。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557338246,"ip_address":"","comment_id":92642,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31622079162","product_id":100025301,"comment_content":"原来这就是Lambda架构，其实，我们现在就用的Lambda 架构，kafka+storm+MR+Hbase来实现，现在的问题是：<br>1.storm是用java开发，MR是用python开发，导致同一逻辑需要两种实现<br>2.storm窗口期数据一般在5-10分钟，由于我们的数据有时间和空间属性的时序数据，前后关联性比较大，中间可能有噪点数据，所以很容易出现实时和历史分析结果不一致的问题，虽然最终用历史覆盖了实时，保持了最终一致性。","like_count":8,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449342,"discussion_content":"谢谢你的经验分享！\n\n是的啊，有时候不知不觉就会发现自己原来就已经在使用了某个特定技术。这让我想起设计模式，早期阶段在代码中自己已经在实现某个设计模式了，但是因为那时候还没有系统地去学习设计模式，没察觉到而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557338246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92433,"user_name":"越甲非甲","can_delete":false,"product_type":"c1","uid":1502575,"ip_address":"","ucode":"A5C4BD977A02F1","user_header":"https://static001.geekbang.org/account/avatar/00/16/ed/6f/352eb4d4.jpg","comment_is_top":false,"comment_ctime":1557274249,"is_pvip":false,"replies":[{"id":"33057","content":"您好，谢谢提问！<br><br>其实Lambda架构的应用场景最终还是会去服务同一种业务，毕竟流处理结果是对批处理结果延时的一种补偿。即便用到的算法不尽相同，但是合并的时候，最后存储的模型或者是存储数据的Schema都还是要一致的。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557277056,"ip_address":"","comment_id":92433,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31622045321","product_id":100025301,"comment_content":"老师您好！lambda架构的思路中，感觉最终决定结果的还是批处理结果。而流处理结果更多的是满足实时性的需求。不同的业务场景下，综合两种处理结果获得对外服务的结果模型，其模型和算法应该都不相同。这种处理结果的合并方面，是否有某些原则范式或者思路呢？谢谢老师！","like_count":8,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449256,"discussion_content":"您好，谢谢提问！\n\n其实Lambda架构的应用场景最终还是会去服务同一种业务，毕竟流处理结果是对批处理结果延时的一种补偿。即便用到的算法不尽相同，但是合并的时候，最后存储的模型或者是存储数据的Schema都还是要一致的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557277056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92427,"user_name":"yiwu","can_delete":false,"product_type":"c1","uid":1307909,"ip_address":"","ucode":"712056FCDFE504","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/05/09aaa06c.jpg","comment_is_top":false,"comment_ctime":1557272997,"is_pvip":false,"replies":[{"id":"33058","content":"谢谢你的经验之谈！","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557277074,"ip_address":"","comment_id":92427,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31622044069","product_id":100025301,"comment_content":"实时报表，实时数仓，实时用户画像标签，实时反欺诈，实时风控，以前很多需要批量计算的数据都可以变成batch+speed或speed替代","like_count":8,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449254,"discussion_content":"谢谢你的经验之谈！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557277074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92409,"user_name":"LJK","can_delete":false,"product_type":"c1","uid":1199213,"ip_address":"","ucode":"12B2441099FF1D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/6d/c20f2d5a.jpg","comment_is_top":false,"comment_ctime":1557257740,"is_pvip":false,"replies":[{"id":"33048","content":"您好，谢谢提问！可以的，Lambda架构不仅仅可以应用在在线学习上，有非常多应用场景都可以应用上。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557270300,"ip_address":"","comment_id":92409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31622028812","product_id":100025301,"comment_content":"老师您好，请问lambda架构可以看成一种在线学习的实现方式么？","like_count":7,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449246,"discussion_content":"您好，谢谢提问！可以的，Lambda架构不仅仅可以应用在在线学习上，有非常多应用场景都可以应用上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557270300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92494,"user_name":"Hunter Liu","can_delete":false,"product_type":"c1","uid":1474463,"ip_address":"","ucode":"BD1FD203A295DC","user_header":"https://static001.geekbang.org/account/avatar/00/16/7f/9f/ca7b20cd.jpg","comment_is_top":false,"comment_ctime":1557283622,"is_pvip":false,"replies":[{"id":"33081","content":"谢谢你的留言！能有收获就好。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557290707,"ip_address":"","comment_id":92494,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23032120102","product_id":100025301,"comment_content":"今天的课让我想到了昨天评审的一个需求。这个需求是通过收集用户的及时数据能够知道用户常走的路线，后续用户在使用产品进行导航时，如果没有开启路线引导，但是却正在行驶在常走的路线上，一样给用户准确预报常走路线的路况，这个其实就可以实用了lambda架构。历史数据实用批处理，实时数据实用流处理也就是速度层，这样可以根据历史数据和用户实时上传的数据进行准确的路况播报了。<br><br>当然，包括网约车，外卖订单和老师讲的停车场的应用场景也相近，这节课受益匪浅。","like_count":5,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449283,"discussion_content":"谢谢你的留言！能有收获就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557290707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93023,"user_name":"hua168","can_delete":false,"product_type":"c1","uid":1065255,"ip_address":"","ucode":"CFF9A7E86EBA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/27/3ff1a1d6.jpg","comment_is_top":false,"comment_ctime":1557379207,"is_pvip":false,"replies":[{"id":"33285","content":"谢谢你的提问！<br><br>我觉得各种大数据平台层出不穷，要每个都学肯定也学不完的。学习哪一个的话可能还要看具体情况。如果你的公司里已经是在使用某一个框架了，而且技术迁移成本很高，需求又来得很快，那当然是以你们公司已有的框架为主来学了。如果你是新手，因为批流统一是一个大的趋势，我觉得Apache Beam和Apache Flink都不错。现在Google里的大数据处理基本上全部都由Apache Beam来支撑了，所以Apache Beam这个框架的能力是毋庸置疑的。当然我作为Google的其中一员，也会觉得有必要推广自家的产品。而Apache Flink的话，现在整套API的底层思想都采用了Google的Dataflow Model，所以也是一个很好的alternative。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557456157,"ip_address":"","comment_id":93023,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18737248391","product_id":100025301,"comment_content":"老师打扰一下：<br>Hadoop MapReduce，Apache Spark，Apache Storm，Apache Flink，Apache Apex ，Apache Beam<br>如果现在才开始学大数据，除了haddop过时了，其它的Apache Spark，Apache Storm，Apache Flink，Apache Apex 还需要学吗？直接Apache Beam学起？","like_count":4,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449461,"discussion_content":"谢谢你的提问！\n\n我觉得各种大数据平台层出不穷，要每个都学肯定也学不完的。学习哪一个的话可能还要看具体情况。如果你的公司里已经是在使用某一个框架了，而且技术迁移成本很高，需求又来得很快，那当然是以你们公司已有的框架为主来学了。如果你是新手，因为批流统一是一个大的趋势，我觉得Apache Beam和Apache Flink都不错。现在Google里的大数据处理基本上全部都由Apache Beam来支撑了，所以Apache Beam这个框架的能力是毋庸置疑的。当然我作为Google的其中一员，也会觉得有必要推广自家的产品。而Apache Flink的话，现在整套API的底层思想都采用了Google的Dataflow Model，所以也是一个很好的alternative。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557456157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93707,"user_name":"渡码","can_delete":false,"product_type":"c1","uid":1348536,"ip_address":"","ucode":"8FD8B863D1DA0C","user_header":"https://static001.geekbang.org/account/avatar/00/14/93/b8/6510592e.jpg","comment_is_top":false,"comment_ctime":1557564537,"is_pvip":false,"replies":[{"id":"33499","content":"谢谢你的留言！是的，你说的这个例子是可以将Lambda应用在里面的。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557641905,"ip_address":"","comment_id":93707,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442466425","product_id":100025301,"comment_content":"我觉得anti spam可以用lambda架构，实时数据+历史数据更充分地判定作弊行为","like_count":3,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449737,"discussion_content":"谢谢你的留言！是的，你说的这个例子是可以将Lambda应用在里面的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557641905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93026,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1399673,"ip_address":"","ucode":"929E3FFD14EFC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/79/d55044ac.jpg","comment_is_top":false,"comment_ctime":1557379354,"is_pvip":false,"replies":[{"id":"33291","content":"谢谢你的提问！我也是第一次接触这个名词，查了一下这本书，解释是“Reactive Design Patterns is a clearly written guide for building message-driven distributed systems that are resilient, responsive, and elastic.”。像message-driven或者event-driven其实就类似Pub&#47;Sub messaging。虽然我没有读过这本书，但是我感觉里面应该会涉及到专栏中一些架构思想。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557457531,"ip_address":"","comment_id":93026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442281242","product_id":100025301,"comment_content":"最近看到一个技术名词，叫做Reactive Design Patterns，国内的翻译是反应式设计模式，对应的编程方式叫做Reactive Programming，不知道这种设计模式跟专栏中提及的各种架构思想的关系是什么？","like_count":3,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449463,"discussion_content":"谢谢你的提问！我也是第一次接触这个名词，查了一下这本书，解释是“Reactive Design Patterns is a clearly written guide for building message-driven distributed systems that are resilient, responsive, and elastic.”。像message-driven或者event-driven其实就类似Pub/Sub messaging。虽然我没有读过这本书，但是我感觉里面应该会涉及到专栏中一些架构思想。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557457531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92812,"user_name":"挖矿的小戈","can_delete":false,"product_type":"c1","uid":1503917,"ip_address":"","ucode":"2078A85139BD5D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/9chAb6SjxFiapSeicsAsGqzziaNlhX9d5aEt8Z0gUNsZJ9dICaDHqAypGvjv4Bx3PryHnj7OFnOXFOp7Ik21CVXEA/132","comment_is_top":false,"comment_ctime":1557329804,"is_pvip":false,"replies":[{"id":"33186","content":"谢谢你的留言！哈哈，这个观点我也很赞同！","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557388391,"ip_address":"","comment_id":92812,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442231692","product_id":100025301,"comment_content":"lambda架构，批处理层和流处理层（速度层），对于某些相同的业务往往需要开发两套代码，这个很不友好；对于催生的Apache Flink、Apache Beam这种在做流批统一的，感觉会是未来的主流","like_count":3,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449391,"discussion_content":"谢谢你的留言！哈哈，这个观点我也很赞同！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557388391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92621,"user_name":"Mr.Mouse","can_delete":false,"product_type":"c1","uid":1336372,"ip_address":"","ucode":"548E59D0FA5703","user_header":"","comment_is_top":false,"comment_ctime":1557306907,"is_pvip":false,"replies":[{"id":"33140","content":"谢谢你的提问！是的呢，你的理解是正确的。Batch层因为拥有历史数据，所以Batch层的结果可以不断校对Speed层的误差。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557338358,"ip_address":"","comment_id":92621,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147241499","product_id":100025301,"comment_content":"lambda架构提供给服务层的结果是不是 speed层实时结果+batch层上次存储的历史结果 整合在一起的结果？<br>","like_count":2,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449334,"discussion_content":"谢谢你的提问！是的呢，你的理解是正确的。Batch层因为拥有历史数据，所以Batch层的结果可以不断校对Speed层的误差。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557338358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92563,"user_name":"lwenbin","can_delete":false,"product_type":"c1","uid":1202109,"ip_address":"","ucode":"05C4CC6BE0B56C","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/bd/acf40fa0.jpg","comment_is_top":false,"comment_ctime":1557301961,"is_pvip":false,"replies":[{"id":"33555","content":"谢谢你的经验分析！<br>那在这里抛砖引玉说一下精准广告投放预测。这里广告投放预测其实相当于一个推荐系统，一般能做精准广告投放的公司都会拥有海量用户特征、用户历史浏览记录和网页类型分类这些历史数据的。业界比较流行的做法有在批处理层用Alternating Least Squares (ALS)算法，也就是Collaborative Filtering协同过滤算法，可以得出与用户特性一致其他用户感兴趣的广告类型，也可以得出和用户感兴趣类型的广告相似的广告，而用k-means也可以对客户感兴趣的广告类型进行分类。在速度层中可以根据用户浏览的网页类型在之前分好类的广告中寻找一些流行的广告出来，最终投放给用户。当然在实际应用当中，精准广告投放预测肯定会比我所说的复杂得多了，我相信架构里面不可避免地也会运用上Lambda架构。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557699499,"ip_address":"","comment_id":92563,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147236553","product_id":100025301,"comment_content":"以前一个项目用过 Kylin + Storm 结合的方式来统计一个指标, Kylin 对于当天以前的历史数据建立OLAP Cube 可以实现维度和维度内的伸缩查询，Storm 的实时统计可以基于当天数据做统计，整合在一起正好提供了所有时间内的查询。<br>另外，老师能否在广告投放上再多说一下，如何基于浏览历史和实时的浏览做精准广告投放预测？能否具个实际例子呢？<br>谢谢！","like_count":2,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449320,"discussion_content":"谢谢你的经验分析！\n那在这里抛砖引玉说一下精准广告投放预测。这里广告投放预测其实相当于一个推荐系统，一般能做精准广告投放的公司都会拥有海量用户特征、用户历史浏览记录和网页类型分类这些历史数据的。业界比较流行的做法有在批处理层用Alternating Least Squares (ALS)算法，也就是Collaborative Filtering协同过滤算法，可以得出与用户特性一致其他用户感兴趣的广告类型，也可以得出和用户感兴趣类型的广告相似的广告，而用k-means也可以对客户感兴趣的广告类型进行分类。在速度层中可以根据用户浏览的网页类型在之前分好类的广告中寻找一些流行的广告出来，最终投放给用户。当然在实际应用当中，精准广告投放预测肯定会比我所说的复杂得多了，我相信架构里面不可避免地也会运用上Lambda架构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557699499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93709,"user_name":"Kaleidoscoper","can_delete":false,"product_type":"c1","uid":1031741,"ip_address":"","ucode":"E705716641B08F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/3d/b782c7a5.jpg","comment_is_top":false,"comment_ctime":1557565983,"is_pvip":false,"replies":[{"id":"33501","content":"谢谢你的留言提问！实际应用场景中需要考虑到的corner cases肯定是远比我在专栏中所讲到的要多的。所以你所说的这个case系统肯定会考虑到的。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557642643,"ip_address":"","comment_id":93709,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852533279","product_id":100025301,"comment_content":"有一个问题要请教老师，停车场例子这个基于实时GPS做的人工预测模型有没有考虑到自身推荐系统的影响呢，如果10辆车都用了app，给出的推荐都是远处的停车场，那离得近的停车场不就反而可以停了吗，是不是还要考虑自身推荐模型在所有实时数据中的影响因子？","like_count":1,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449739,"discussion_content":"谢谢你的留言提问！实际应用场景中需要考虑到的corner cases肯定是远比我在专栏中所讲到的要多的。所以你所说的这个case系统肯定会考虑到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557642643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93406,"user_name":"💞QQ💞","can_delete":false,"product_type":"c1","uid":1257149,"ip_address":"","ucode":"FDD6AF249B5BE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/bd/829d727f.jpg","comment_is_top":false,"comment_ctime":1557464760,"is_pvip":false,"replies":[{"id":"33342","content":"谢谢你的留言！肯定会有这种情况出现的，所以在推荐系统里都会想要提高Recall Rate。要完全准确的话只能是靠特定停车场自己做一个app实时告诉大家还有没有空余车位了。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557466343,"ip_address":"","comment_id":93406,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852432056","product_id":100025301,"comment_content":"老师：停车位那个案例有个问题请教一下。<br>对于用户来说，收到的数据是历史的停车位信息和实时的用户GPS数据组合之前的推荐数据，用一个小时前的停车数据推荐，是不是会出现推荐 车位已经被消耗的问题，这样用户体验感觉很差哦。","like_count":1,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449617,"discussion_content":"谢谢你的留言！肯定会有这种情况出现的，所以在推荐系统里都会想要提高Recall Rate。要完全准确的话只能是靠特定停车场自己做一个app实时告诉大家还有没有空余车位了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557466343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93124,"user_name":"汶恬萝","can_delete":false,"product_type":"c1","uid":1062855,"ip_address":"","ucode":"3A0D84A190FB9E","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/c7/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1557402102,"is_pvip":false,"replies":[{"id":"33224","content":"谢谢你的技术分享，学习了！","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557428479,"ip_address":"","comment_id":93124,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852369398","product_id":100025301,"comment_content":"其实impala mix with hdfs and kudu就是一种较好的lambda实现方案。应用层统一使用sql，底层存储兼容基于hdfs的批量任务(impala,hive,spark等)和kudu的近实时存储。<br>使用场景在并发要求较高的olap或者吞吐量不大的olap均可。<br>如果又要求吞吐量高，又要求数据量大的实时场景话(感觉这种场景相当少)，可能才会考虑两种不同技术架构分别跑批和处理实时数据","like_count":1,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449497,"discussion_content":"谢谢你的技术分享，学习了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557428479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93049,"user_name":"夜阳羽","can_delete":false,"product_type":"c1","uid":1000408,"ip_address":"","ucode":"4D12F0258C7F31","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/d8/24970c92.jpg","comment_is_top":false,"comment_ctime":1557384957,"is_pvip":true,"replies":[{"id":"33226","content":"谢谢你的提问！以前在读技术文章的时候看到过一种说法是因为：完整的数据集 = λ (实时数据) * λ (历史数据)。所以就有了Lambda Architecture的叫法。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557428712,"ip_address":"","comment_id":93049,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852352253","product_id":100025301,"comment_content":"为什么叫lambda架构呢，lambda在此处的含义是什么？","like_count":1,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449471,"discussion_content":"谢谢你的提问！以前在读技术文章的时候看到过一种说法是因为：完整的数据集 = λ (实时数据) * λ (历史数据)。所以就有了Lambda Architecture的叫法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557428712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92866,"user_name":"程序设计的艺术","can_delete":false,"product_type":"c1","uid":1107847,"ip_address":"","ucode":"CA3817C11CD9E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/87/9ad59b98.jpg","comment_is_top":false,"comment_ctime":1557358994,"is_pvip":false,"replies":[{"id":"33188","content":"谢谢你的提问！现在业界还没有以Lambda架构为核心搭建的开源框架，毕竟这是大数据处理上的一种方法。但很多大厂的云平台都会提供Lambda架构的技术解决方案。<br><br>以硅谷这边为例，使用AWS的话可以使用AWS Kinesis Firehose、AWS Glue、AWS S3、AWS Firehose Analytics和AWS Athena去构建一套serverless的Lambda架构方案出来，而不用自己的实现。<br>Google Cloud Platform也提供Cloud PubSub、Cloud Dataflow、Cloud Bigtable和Cloud BigQuery这些服务让你方便搭建Lambda架构。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557389503,"ip_address":"","comment_id":92866,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852326290","product_id":100025301,"comment_content":"lambda有现成的开源框架吗？我感觉kylin也不算是，还是需要做二次整合","like_count":1,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449405,"discussion_content":"谢谢你的提问！现在业界还没有以Lambda架构为核心搭建的开源框架，毕竟这是大数据处理上的一种方法。但很多大厂的云平台都会提供Lambda架构的技术解决方案。\n\n以硅谷这边为例，使用AWS的话可以使用AWS Kinesis Firehose、AWS Glue、AWS S3、AWS Firehose Analytics和AWS Athena去构建一套serverless的Lambda架构方案出来，而不用自己的实现。\nGoogle Cloud Platform也提供Cloud PubSub、Cloud Dataflow、Cloud Bigtable和Cloud BigQuery这些服务让你方便搭建Lambda架构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557389503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92825,"user_name":"涵","can_delete":false,"product_type":"c1","uid":1502742,"ip_address":"","ucode":"BB8575DB13F1E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/16/742956ac.jpg","comment_is_top":false,"comment_ctime":1557331543,"is_pvip":false,"replies":[{"id":"33255","content":"谢谢你的经验分享！是的，当你学习越多见识越多之后会发现很多领域都是融会贯通的。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557448231,"ip_address":"","comment_id":92825,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852298839","product_id":100025301,"comment_content":"历史数据加实时数据的思路在做系统时其实挺常见，例如一个合规系统，为了快速计算指标，会汇总早上计算好的前日持仓数据结合内存中记录的当日数据以及触发合规指标计算的这一条指令数据来得出正确的指标结果。这种思想用在大数据平台中原来就是LAMBDA架构，很巧妙，很实用。我想如何结合历史数据和实时数据应该比较tricky，需要经验来指导权重和算法。","like_count":1,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449392,"discussion_content":"谢谢你的经验分享！是的，当你学习越多见识越多之后会发现很多领域都是融会贯通的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557448231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92582,"user_name":"六维","can_delete":false,"product_type":"c1","uid":1022887,"ip_address":"","ucode":"EB1C15AC06A8DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/a7/440aff07.jpg","comment_is_top":false,"comment_ctime":1557304188,"is_pvip":false,"replies":[{"id":"33143","content":"谢谢你的经验分享！","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557338536,"ip_address":"","comment_id":92582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852271484","product_id":100025301,"comment_content":"公司目前的一个系统可以引入lambda架构。 原来的系统中，分为了两部分：一部分的数据收集处理，采用每天汇总的方式，数据截止到前一天；另一部分的数据为实时变化，采用的是RabbitMQ的消息处理方式。 刚好可以利用lambda架构，来达到两部分数据都实时的情况。  <br>目前节假日出现，一些旅游景点，出现了人满为患的情况，可以利用lambda架构，做到错峰出行。","like_count":1,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449325,"discussion_content":"谢谢你的经验分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557338536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269354,"user_name":"日月星辰","can_delete":false,"product_type":"c1","uid":2361813,"ip_address":"","ucode":"7B93A7304D400E","user_header":"https://static001.geekbang.org/account/avatar/00/24/09/d5/f23855e2.jpg","comment_is_top":false,"comment_ctime":1608621560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608621560","product_id":100025301,"comment_content":"老师，请教下，智能停车这种app一般用什么算法训练模型。","like_count":0},{"had_liked":false,"id":265402,"user_name":"Reiser","can_delete":false,"product_type":"c1","uid":1078669,"ip_address":"","ucode":"E5DBBBA2F86FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/8d/c6a2a048.jpg","comment_is_top":false,"comment_ctime":1606890674,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1606890674","product_id":100025301,"comment_content":"# Lambda 架构：<br><br>对于新流入的数据，数据放入实时层（kafka）和 离线层（HDFS），<br>实时层计算速度快，数据量小，可能有误差<br>离线层数据量大，但计算需要时间，可以用于修正实时层的结果。<br><br>## 实时层和离线层的数据结果怎么合并呢？<br><br>用停车场的例子：<br><br>离线层是每半小时获取的停车场的车位信息，实时层是每辆车的位置和速度信息。实时层的预测了车辆可能停车的位置，再加上半小时前停车场的车位信息。两者就预测了未来停车场的车位信息。","like_count":0},{"had_liked":false,"id":261137,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1605227100,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1605227100","product_id":100025301,"comment_content":"数据处理有批处理和流处理，我相信很多行业很多业务都有类似的需求，对于前端而言，如何更好的结合两种数据处理的结果，是一个必须要解决的话题，按照计算机届的名言，没有什么问题是不能通过增加一个抽象层解决的，如果有，那就增加两个，我觉得Lambda架构中的服务层，做的就是这样的事情。<br><br>我相信数据处理的终极目标就是批流一体，Lambda算是批流一体的架构吗？我觉得不是，我理解它更像是一个“粘合剂”，把批流处理黏在一起，带来的好处是，对于已经投入大量成本开发的数据批处理或者流处理资产，可以很好的重用。<br><br>我很期待后面Apache Beam相关的内容。","like_count":0},{"had_liked":false,"id":234491,"user_name":"风轻云淡","can_delete":false,"product_type":"c1","uid":1495190,"ip_address":"","ucode":"95C3FC7D3DACCF","user_header":"https://static001.geekbang.org/account/avatar/00/16/d0/96/c8cb7862.jpg","comment_is_top":false,"comment_ctime":1594702532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594702532","product_id":100025301,"comment_content":"批处理一般用hive，那速度层的数据最终还和批处理的存在hive里吗？","like_count":0},{"had_liked":false,"id":196117,"user_name":"alex_lai","can_delete":false,"product_type":"c1","uid":1903459,"ip_address":"","ucode":"3057F2A593A6DB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/m7fLWyJrnwEPoIefiaxusQRh6D1Nq7PCXA8RiaxkmzdNEmFARr5q8L4qouKNaziceXia92an8hzYa5MLic6N6cNMEoQ/132","comment_is_top":false,"comment_ctime":1585237003,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585237003","product_id":100025301,"comment_content":"batch layer建模 speed layer建实时用户profile 然后ranking","like_count":0},{"had_liked":false,"id":195145,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1585140716,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585140716","product_id":100025301,"comment_content":"网易云音乐的私人FM推荐<br>1. 对用户历史信息处理构建用户完整的画像，对所有用户历史数据进行处理生成推荐模型<br>2. 通过用户最近听得几首歌来推荐相似的歌曲","like_count":0},{"had_liked":false,"id":193816,"user_name":"Eden2020","can_delete":false,"product_type":"c1","uid":1899158,"ip_address":"","ucode":"0DEE62F2335237","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fa/96/4a7b7505.jpg","comment_is_top":false,"comment_ctime":1584969674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584969674","product_id":100025301,"comment_content":"主要是一些实时数据仓库使用lambda架构，不过对实时性要求不是很高，分钟级别即可","like_count":0},{"had_liked":false,"id":189721,"user_name":"刘日燊","can_delete":false,"product_type":"c1","uid":1918372,"ip_address":"","ucode":"B2A08A73E0489B","user_header":"","comment_is_top":false,"comment_ctime":1584542455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584542455","product_id":100025301,"comment_content":"不知道用lambda架构去解释我们公司的推荐系统对不对：近线层-速度部分用spark streaming，离线层-批处理部分用hive+python。","like_count":0},{"had_liked":false,"id":117457,"user_name":"尚科","can_delete":false,"product_type":"c1","uid":1165054,"ip_address":"","ucode":"F23A164954CA5A","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/fe/cf8b21ab.jpg","comment_is_top":false,"comment_ctime":1564051868,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564051868","product_id":100025301,"comment_content":"Lambda架构思想简单，容易理解。<br>但是有个问题不明白，服务层如何融合两个种处理结果的，尤其是在两个结果冲突的时候。<br>以停车位例子为例，如果批处理结果指示停到停车场A，实时流处理结果指示停到停车场B，应该用什么策略来选择最终结果","like_count":0,"discussions":[{"author":{"id":1718694,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/39/a6/4fdd8b98.jpg","nickname":"黄桷垭C罗","note":"","ucode":"6B43B766C5A5EB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57964,"discussion_content":"我觉得这就变成了一个数据归一的问题，其实有很多不同的数据归一的方法，最简单的应该就是赋权重了吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574647943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106919,"user_name":"西北偏北","can_delete":false,"product_type":"c1","uid":1043160,"ip_address":"","ucode":"64BD69C84EE6A1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erdpKbFgRLnicjsr6qkrPVKZcFrG3aS2V51HhjFP6Mh2CYcjWric9ud1Qiclo8A49ia3eZ1NhibDib0AOCg/132","comment_is_top":false,"comment_ctime":1561424896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561424896","product_id":100025301,"comment_content":"传统我们认为，批处理和实时处理分别应用于两个不同的场景。而业务的发展，往往需要我们将两者结合在一起做模型。这种将两者结合一起的架构叫","like_count":0},{"had_liked":false,"id":103884,"user_name":"伊恩","can_delete":false,"product_type":"c1","uid":1116241,"ip_address":"","ucode":"438A71D733AF1A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/51/8a538052.jpg","comment_is_top":false,"comment_ctime":1560559551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560559551","product_id":100025301,"comment_content":"batch延时时server取speed的数据，正如之前A用户电脑借给B用户，而B用户阅览未必就是A用户感兴趣的，遇到这种情况，speed的数据不准确，这时推送的可能就是错误数据。  lambda架构可以实现一个问题吗？","like_count":0},{"had_liked":false,"id":101238,"user_name":"nuclear","can_delete":false,"product_type":"c1","uid":1469188,"ip_address":"","ucode":"05521623A887A4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epRUsrkh6HY63ia54D56zUWAKzBGibgUZ6ibgettorCuMYTF1VgwYKObvFjCuJia4DqLTxx9aRv5lYZRg/132","comment_is_top":false,"comment_ctime":1559746846,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1559746846","product_id":100025301,"comment_content":"老师您好，请问服务层一般采用什么技术方案呢，一是批处理的结果和流处理的结果是不是要统一处理和维护，二是如果流处理结果写入速率很高，同时后端应用的请求读取速率也很高，会不会有问题呢","like_count":0,"discussions":[{"author":{"id":1718694,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/39/a6/4fdd8b98.jpg","nickname":"黄桷垭C罗","note":"","ucode":"6B43B766C5A5EB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57975,"discussion_content":"我们实际的案例是这样的，统计某些指标的pv，uv指标：\nspeed：flume->kafka->storm->redis->hbase(phoenix表)\nbatch :  flume->hdfs->hive->hbase(phoenix表)\nserver：jdbc查phoenix表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574648154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98224,"user_name":"zhihai.tu","can_delete":false,"product_type":"c1","uid":1045888,"ip_address":"","ucode":"61371EA3EF6988","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/80/baddf03b.jpg","comment_is_top":false,"comment_ctime":1558936811,"is_pvip":true,"replies":[{"id":"37134","content":"谢谢你的经验分享！","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1560295289,"ip_address":"","comment_id":98224,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558936811","product_id":100025301,"comment_content":"1，批量层: 以贴源数据为基础，每日以批量文件方式加载至hadoop数据湖。应用基于数据湖层做批量加工与分析，将计算结果推送给用户。<br>2，速度层: 通过flume实时采集数据，进入到kafka消息队列，然后通过sparkstream准实时计算，将结果推送给用户。<br>目前平台层面上，还未考虑到如何将两者计算的结果进行合并处理，后续有时间再研究下，谢谢您。","like_count":0,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451607,"discussion_content":"谢谢你的经验分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560295289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95887,"user_name":"邵爽","can_delete":false,"product_type":"c1","uid":1182485,"ip_address":"","ucode":"74EFB58C3A5797","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/15/7644d37d.jpg","comment_is_top":false,"comment_ctime":1558242382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558242382","product_id":100025301,"comment_content":"我的理解是先使用批处理层生成空白车位的位置图，使用速度层收集实时的用户位置数据生成预测模型，然后把这个空白车位图作为输入交给速度层的预测模型最后输出一个用户的停车位推荐列表。不知道思路对不对，望蔡老师指点","like_count":0},{"had_liked":false,"id":93894,"user_name":"廖师虎","can_delete":false,"product_type":"c1","uid":1485562,"ip_address":"","ucode":"1297068AE141DA","user_header":"https://static001.geekbang.org/account/avatar/00/16/aa/fa/3ad0a689.jpg","comment_is_top":false,"comment_ctime":1557655301,"is_pvip":false,"replies":[{"id":"33551","content":"谢谢你的留言！可否展开讨论讲讲，这个话题我也挺感兴趣的。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557690244,"ip_address":"","comment_id":93894,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557655301","product_id":100025301,"comment_content":"在流批统一的情况下，已经很少有人再单独提lambda了，太复杂","like_count":0,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449816,"discussion_content":"谢谢你的留言！可否展开讨论讲讲，这个话题我也挺感兴趣的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557690244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93612,"user_name":"细雨听风呤","can_delete":false,"product_type":"c1","uid":1014860,"ip_address":"","ucode":"E0353117C918EB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/4c/50b6f2a4.jpg","comment_is_top":false,"comment_ctime":1557536064,"is_pvip":false,"replies":[{"id":"33467","content":"谢谢你的经验分享！","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557562091,"ip_address":"","comment_id":93612,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557536064","product_id":100025301,"comment_content":"我们现在是通过离线跑一个候选集，再通过实时进行排序，其实也是lambda架构。","like_count":0,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449699,"discussion_content":"谢谢你的经验分享！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557562091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93431,"user_name":"段斌","can_delete":false,"product_type":"c1","uid":1173578,"ip_address":"","ucode":"B5A85C6AF139B4","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/4a/c2a539a0.jpg","comment_is_top":false,"comment_ctime":1557469689,"is_pvip":false,"replies":[{"id":"33465","content":"谢谢你的留言！肯定的，而且批处理层可能不仅仅只处理每日的股价模型，可能会处理到从开盘以来的整个历史记录。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557561778,"ip_address":"","comment_id":93431,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557469689","product_id":100025301,"comment_content":"股票预测是不是也可以用Lambda的架构？通过批处理对市场每日的股价进行模型预测，日内则可以通过实时的交易数据进行预测。","like_count":0,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449630,"discussion_content":"谢谢你的留言！肯定的，而且批处理层可能不仅仅只处理每日的股价模型，可能会处理到从开盘以来的整个历史记录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557561778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93369,"user_name":"孙稚昊","can_delete":false,"product_type":"c1","uid":1010660,"ip_address":"","ucode":"44283BA4A577B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/e4/afacba1c.jpg","comment_is_top":false,"comment_ctime":1557457817,"is_pvip":false,"replies":[{"id":"33345","content":"谢谢你的提问！我觉得这个问题还是要根据具体情况来分析的，因为流处理中的数据经过一定时间之后都会被批处理层处理，所以肯定会有重复。所以算法关键还是要看你决定速度层需要存放多长时间的数据，一种可行的做法是你可以根据timestamp过滤掉一些过时的数据。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557467432,"ip_address":"","comment_id":93369,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557457817","product_id":100025301,"comment_content":"老师您好！请问如何解决Lambda 架构中，批和流数据重复的问题？很多behavior data，比如点击日志，并没有一个id 来识别，两者处理的 timestamp 也很可能不完全一致，还需要一些算法来去重吗？","like_count":0,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449600,"discussion_content":"谢谢你的提问！我觉得这个问题还是要根据具体情况来分析的，因为流处理中的数据经过一定时间之后都会被批处理层处理，所以肯定会有重复。所以算法关键还是要看你决定速度层需要存放多长时间的数据，一种可行的做法是你可以根据timestamp过滤掉一些过时的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557467432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93334,"user_name":"dylan","can_delete":false,"product_type":"c1","uid":1181340,"ip_address":"","ucode":"B6A9BD80B1BB4B","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/9c/1ee94a9d.jpg","comment_is_top":false,"comment_ctime":1557453417,"is_pvip":false,"replies":[{"id":"33280","content":"谢谢你的建议！在翻译这一块我也没有找到一个标准，所以就直译了，哈哈。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557455604,"ip_address":"","comment_id":93334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557453417","product_id":100025301,"comment_content":"把批处理层和速度处理层称为离线处理和实时处理（近实时）更好理解吧","like_count":0,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449588,"discussion_content":"谢谢你的建议！在翻译这一块我也没有找到一个标准，所以就直译了，哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557455604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93194,"user_name":"hua168","can_delete":false,"product_type":"c1","uid":1065255,"ip_address":"","ucode":"CFF9A7E86EBA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/27/3ff1a1d6.jpg","comment_is_top":false,"comment_ctime":1557418934,"is_pvip":false,"replies":[{"id":"33287","content":"谢谢你的提问！我其实也不太清楚高德地图的具体功能。如果只是实时判断路面上有多少车或者实时显示塞车状况，那应该只需要用GPS实时数据就足够了，不需要用到Lambda。但是如果有功能是判断未来某天这一条高速公路塞不塞车，或者预计未来某天从起始地址到目的地的行驶时间，这需要用到历史数据，那就有可能会运用到Lambda架构。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557456681,"ip_address":"","comment_id":93194,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557418934","product_id":100025301,"comment_content":"老师，开车的现在在国内基本上用的都是高德地图，比其它地图还准确，比如：<br>1.开到哪个位置了，基本上误差都很小，像环道，到第几环道开出<br>2. 如果在高速公路开着车打开高德地图，后面有车来都会提示<br>3.哪个高速公路塞车，什么时候没塞车<br>这些也是Lambda吗？","like_count":0,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449517,"discussion_content":"谢谢你的提问！我其实也不太清楚高德地图的具体功能。如果只是实时判断路面上有多少车或者实时显示塞车状况，那应该只需要用GPS实时数据就足够了，不需要用到Lambda。但是如果有功能是判断未来某天这一条高速公路塞不塞车，或者预计未来某天从起始地址到目的地的行驶时间，这需要用到历史数据，那就有可能会运用到Lambda架构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557456681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92885,"user_name":"CoderLean","can_delete":false,"product_type":"c1","uid":1518409,"ip_address":"","ucode":"DC9E25428EDB3F","user_header":"https://static001.geekbang.org/account/avatar/00/17/2b/49/e94b2a35.jpg","comment_is_top":false,"comment_ctime":1557361935,"is_pvip":false,"replies":[{"id":"33189","content":"谢谢你的留言提问！App层也还可以用Cassandra或者Mysql等等。另外我不是很理解你说“HBase的时效性不高”的意思，能否展开说明或者举例说明，我们也可以就这个问题继续讨论，欢迎你继续留言。","user_name":"作者回复","user_name_real":"Geek_88e0d7","uid":"1503187","ctime":1557390235,"ip_address":"","comment_id":92885,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1557361935","product_id":100025301,"comment_content":"我想问一下，作为服务层套个hbase虽然能实现数据存储，但是hbase的时效性不高啊？作为app层还要用什么工具来提高对外查询服务？","like_count":0,"discussions":[{"author":{"id":1503187,"avatar":"","nickname":"Geek_88e0d7","note":"","ucode":"3E2596F3EB9165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449411,"discussion_content":"谢谢你的留言提问！App层也还可以用Cassandra或者Mysql等等。另外我不是很理解你说“HBase的时效性不高”的意思，能否展开说明或者举例说明，我们也可以就这个问题继续讨论，欢迎你继续留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557390235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1729060,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","nickname":"托尼斯威特","note":"","ucode":"98A1035527292E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311484,"discussion_content":"HBASE 实时性挺好的, 不必Cassandra差, 甚至更好. ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602360743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}