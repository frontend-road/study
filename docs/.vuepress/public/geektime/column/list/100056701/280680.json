{"id":280680,"title":"12 | 有一亿个keys要统计，应该用哪种集合？","content":"<p>你好，我是蒋德钧。</p><p>在Web和移动应用的业务场景中，我们经常需要保存这样一种信息：一个key对应了一个数据集合。我举几个例子。</p><ul>\n<li>手机App中的每天的用户登录信息：一天对应一系列用户ID或移动设备ID；</li>\n<li>电商网站上商品的用户评论列表：一个商品对应了一系列的评论；</li>\n<li>用户在手机App上的签到打卡信息：一天对应一系列用户的签到记录；</li>\n<li>应用网站上的网页访问信息：一个网页对应一系列的访问点击。</li>\n</ul><p>我们知道，Redis集合类型的特点就是一个键对应一系列的数据，所以非常适合用来存取这些数据。但是，在这些场景中，除了记录信息，我们往往还需要对集合中的数据进行统计，例如：</p><ul>\n<li>在移动应用中，需要统计每天的新增用户数和第二天的留存用户数；</li>\n<li>在电商网站的商品评论中，需要统计评论列表中的最新评论；</li>\n<li>在签到打卡中，需要统计一个月内连续打卡的用户数；</li>\n<li>在网页访问记录中，需要统计独立访客（Unique Visitor，UV）量。</li>\n</ul><p>通常情况下，我们面临的用户数量以及访问量都是巨大的，比如百万、千万级别的用户数量，或者千万级别、甚至亿级别的访问信息。所以，我们必须要选择能够非常高效地统计大量数据（例如亿级）的集合类型。</p><p><strong>要想选择合适的集合，我们就得了解常用的集合统计模式。</strong>这节课，我就给你介绍集合类型常见的四种统计模式，包括聚合统计、排序统计、二值状态统计和基数统计。我会以刚刚提到的这四个场景为例，和你聊聊在这些统计模式下，什么集合类型能够更快速地完成统计，而且还节省内存空间。掌握了今天的内容，之后再遇到集合元素统计问题时，你就能很快地选出合适的集合类型了。</p><!-- [[[read_end]]] --><h2>聚合统计</h2><p>我们先来看集合元素统计的第一个场景：聚合统计。</p><p>所谓的聚合统计，就是指统计多个集合元素的聚合结果，包括：统计多个集合的共有元素（交集统计）；把两个集合相比，统计其中一个集合独有的元素（差集统计）；统计多个集合的所有元素（并集统计）。</p><p>在刚才提到的场景中，统计手机App每天的新增用户数和第二天的留存用户数，正好对应了聚合统计。</p><p>要完成这个统计任务，我们可以用一个集合记录所有登录过App的用户ID，同时，用另一个集合记录每一天登录过App的用户ID。然后，再对这两个集合做聚合统计。我们来看下具体的操作。</p><p>记录所有登录过App的用户ID还是比较简单的，我们可以直接使用Set类型，把key设置为user:id，表示记录的是用户ID，value就是一个Set集合，里面是所有登录过App的用户ID，我们可以把这个Set叫作累计用户Set，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/99/ca/990e56babf199d9a7fa4c7343167ecca.jpg?wh=1774*1286\" alt=\"\"></p><p>需要注意的是，累计用户Set中没有日期信息，我们是不能直接统计每天的新增用户的。所以，我们还需要把每一天登录的用户ID，记录到一个新集合中，我们把这个集合叫作每日用户Set，它有两个特点：</p><ol>\n<li>key是 user:id 以及当天日期，例如 user:id:20200803；</li>\n<li>value是Set集合，记录当天登录的用户ID。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/a6/9e/a63dd95d5e44bf538fe960e67761b59e.jpg?wh=1931*1327\" alt=\"\"></p><p>在统计每天的新增用户时，我们只用计算每日用户Set和累计用户Set的差集就行。</p><p>我借助一个具体的例子来解释一下。</p><p>假设我们的手机App在2020年8月3日上线，那么，8月3日前是没有用户的。此时，累计用户Set是空集，当天登录的用户ID会被记录到 key为user:id:20200803的Set中。所以，user:id:20200803这个Set中的用户就是当天的新增用户。</p><p>然后，我们计算累计用户Set和user:id:20200803  Set的并集结果，结果保存在user:id这个累计用户Set中，如下所示：</p><pre><code>SUNIONSTORE  user:id  user:id  user:id:20200803 \n</code></pre><p>此时，user:id这个累计用户Set中就有了8月3日的用户ID。等到8月4日再统计时，我们把8月4日登录的用户ID记录到user:id:20200804 的Set中。接下来，我们执行SDIFFSTORE命令计算累计用户Set和user:id:20200804 Set的差集，结果保存在key为user:new的Set中，如下所示：</p><pre><code>SDIFFSTORE  user:new  user:id:20200804 user:id  \n</code></pre><p>可以看到，这个差集中的用户ID在user:id:20200804 的Set中存在，但是不在累计用户Set中。所以，user:new这个Set中记录的就是8月4日的新增用户。</p><p>当要计算8月4日的留存用户时，我们只需要再计算user:id:20200803 和 user:id:20200804两个Set的交集，就可以得到同时在这两个集合中的用户ID了，这些就是在8月3日登录，并且在8月4日留存的用户。执行的命令如下：</p><pre><code>SINTERSTORE user:id:rem user:id:20200803 user:id:20200804\n</code></pre><p>当你需要对多个集合进行聚合计算时，Set类型会是一个非常不错的选择。不过，我要提醒你一下，这里有一个潜在的风险。</p><p>Set的差集、并集和交集的计算复杂度较高，在数据量较大的情况下，如果直接执行这些计算，会导致Redis实例阻塞。所以，我给你分享一个小建议：<strong>你可以从主从集群中选择一个从库，让它专门负责聚合计算，或者是把数据读取到客户端，在客户端来完成聚合统计</strong>，这样就可以规避阻塞主库实例和其他从库实例的风险了。</p><h2>排序统计</h2><p>接下来，我们再来聊一聊应对集合元素排序需求的方法。我以在电商网站上提供最新评论列表的场景为例，进行讲解。</p><p>最新评论列表包含了所有评论中的最新留言，<strong>这就要求集合类型能对元素保序</strong>，也就是说，集合中的元素可以按序排列，这种对元素保序的集合类型叫作有序集合。</p><p>在Redis常用的4个集合类型中（List、Hash、Set、Sorted Set），List和Sorted Set就属于有序集合。</p><p><strong>List是按照元素进入List的顺序进行排序的，而Sorted Set可以根据元素的权重来排序</strong>，我们可以自己来决定每个元素的权重值。比如说，我们可以根据元素插入Sorted Set的时间确定权重值，先插入的元素权重小，后插入的元素权重大。</p><p>看起来好像都可以满足需求，我们该怎么选择呢？</p><p>我先说说用List的情况。每个商品对应一个List，这个List包含了对这个商品的所有评论，而且会按照评论时间保存这些评论，每来一个新评论，就用LPUSH命令把它插入List的队头。</p><p>在只有一页评论的时候，我们可以很清晰地看到最新的评论，但是，在实际应用中，网站一般会分页显示最新的评论列表，一旦涉及到分页操作，List就可能会出现问题了。</p><p>假设当前的评论List是{A, B, C, D, E, F}（其中，A是最新的评论，以此类推，F是最早的评论），在展示第一页的3个评论时，我们可以用下面的命令，得到最新的三条评论A、B、C：</p><pre><code>LRANGE product1 0 2\n1) &quot;A&quot;\n2) &quot;B&quot;\n3) &quot;C&quot;\n</code></pre><p>然后，再用下面的命令获取第二页的3个评论，也就是D、E、F。</p><pre><code>LRANGE product1 3 5\n1) &quot;D&quot;\n2) &quot;E&quot;\n3) &quot;F&quot;\n</code></pre><p>但是，如果在展示第二页前，又产生了一个新评论G，评论G就会被LPUSH命令插入到评论List的队头，评论List就变成了{G, A, B, C, D, E, F}。此时，再用刚才的命令获取第二页评论时，就会发现，评论C又被展示出来了，也就是C、D、E。</p><pre><code>LRANGE product1 3 5\n1) &quot;C&quot;\n2) &quot;D&quot;\n3) &quot;E&quot;\n</code></pre><p>之所以会这样，关键原因就在于，List是通过元素在List中的位置来排序的，当有一个新元素插入时，原先的元素在List中的位置都后移了一位，比如说原来在第1位的元素现在排在了第2位。所以，对比新元素插入前后，List相同位置上的元素就会发生变化，用LRANGE读取时，就会读到旧元素。</p><p>和List相比，Sorted Set就不存在这个问题，因为它是根据元素的实际权重来排序和获取数据的。</p><p>我们可以按评论时间的先后给每条评论设置一个权重值，然后再把评论保存到Sorted Set中。Sorted Set的ZRANGEBYSCORE命令就可以按权重排序后返回元素。这样的话，即使集合中的元素频繁更新，Sorted Set也能通过ZRANGEBYSCORE命令准确地获取到按序排列的数据。</p><p>假设越新的评论权重越大，目前最新评论的权重是N，我们执行下面的命令时，就可以获得最新的10条评论：</p><pre><code>ZRANGEBYSCORE comments N-9 N\n</code></pre><p>所以，在面对需要展示最新列表、排行榜等场景时，如果数据更新频繁或者需要分页显示，建议你优先考虑使用Sorted Set。</p><h2>二值状态统计</h2><p>现在，我们再来分析下第三个场景：二值状态统计。这里的二值状态就是指集合元素的取值就只有0和1两种。在签到打卡的场景中，我们只用记录签到（1）或未签到（0），所以它就是非常典型的二值状态，</p><p>在签到统计时，每个用户一天的签到用1个bit位就能表示，一个月（假设是31天）的签到情况用31个bit位就可以，而一年的签到也只需要用365个bit位，根本不用太复杂的集合类型。这个时候，我们就可以选择Bitmap。这是Redis提供的扩展数据类型。我来给你解释一下它的实现原理。</p><p>Bitmap本身是用String类型作为底层数据结构实现的一种统计二值状态的数据类型。String类型是会保存为二进制的字节数组，所以，Redis就把字节数组的每个bit位利用起来，用来表示一个元素的二值状态。你可以把Bitmap看作是一个bit数组。</p><p>Bitmap提供了GETBIT/SETBIT操作，使用一个偏移值offset对bit数组的某一个bit位进行读和写。不过，需要注意的是，Bitmap的偏移量是从0开始算的，也就是说offset的最小值是0。当使用SETBIT对一个bit位进行写操作时，这个bit位会被设置为1。Bitmap还提供了BITCOUNT操作，用来统计这个bit数组中所有“1”的个数。</p><p>那么，具体该怎么用Bitmap进行签到统计呢？我还是借助一个具体的例子来说明。</p><p>假设我们要统计ID 3000的用户在2020年8月份的签到情况，就可以按照下面的步骤进行操作。</p><p>第一步，执行下面的命令，记录该用户8月3号已签到。</p><pre><code>SETBIT uid:sign:3000:202008 2 1 \n</code></pre><p>第二步，检查该用户8月3日是否签到。</p><pre><code>GETBIT uid:sign:3000:202008 2 \n</code></pre><p>第三步，统计该用户在8月份的签到次数。</p><pre><code>BITCOUNT uid:sign:3000:202008\n</code></pre><p>这样，我们就知道该用户在8月份的签到情况了，是不是很简单呢？接下来，你可以再思考一个问题：如果记录了1亿个用户10天的签到情况，你有办法统计出这10天连续签到的用户总数吗？</p><p>在介绍具体的方法之前，我们要先知道，Bitmap支持用BITOP命令对多个Bitmap按位做“与”“或”“异或”的操作，操作的结果会保存到一个新的Bitmap中。</p><p>我以按位“与”操作为例来具体解释一下。从下图中，可以看到，三个Bitmap bm1、bm2和bm3，对应bit位做“与”操作，结果保存到了一个新的Bitmap中（示例中，这个结果Bitmap的key被设为“resmap”）。</p><p><img src=\"https://static001.geekbang.org/resource/image/41/7a/4151af42513cf5f7996fe86c6064f97a.jpg?wh=2923*1016\" alt=\"\"></p><p>回到刚刚的问题，在统计1亿个用户连续10天的签到情况时，你可以把每天的日期作为key，每个key对应一个1亿位的Bitmap，每一个bit对应一个用户当天的签到情况。</p><p>接下来，我们对10个Bitmap做“与”操作，得到的结果也是一个Bitmap。在这个Bitmap中，只有10天都签到的用户对应的bit位上的值才会是1。最后，我们可以用BITCOUNT统计下Bitmap中的1的个数，这就是连续签到10天的用户总数了。</p><p>现在，我们可以计算一下记录了10天签到情况后的内存开销。每天使用1个1亿位的Bitmap，大约占12MB的内存（10^8/8/1024/1024），10天的Bitmap的内存开销约为120MB，内存压力不算太大。不过，在实际应用时，最好对Bitmap设置过期时间，让Redis自动删除不再需要的签到记录，以节省内存开销。</p><p>所以，如果只需要统计数据的二值状态，例如商品有没有、用户在不在等，就可以使用Bitmap，因为它只用一个bit位就能表示0或1。在记录海量数据时，Bitmap能够有效地节省内存空间。</p><h2>基数统计</h2><p>最后，我们再来看一个统计场景：基数统计。基数统计就是指统计一个集合中不重复的元素个数。对应到我们刚才介绍的场景中，就是统计网页的UV。</p><p>网页UV的统计有个独特的地方，就是需要去重，一个用户一天内的多次访问只能算作一次。在Redis的集合类型中，Set类型默认支持去重，所以看到有去重需求时，我们可能第一时间就会想到用Set类型。</p><p>我们来结合一个例子看一看用Set的情况。</p><p>有一个用户user1访问page1时，你把这个信息加到Set中：</p><pre><code>SADD page1:uv user1\n</code></pre><p>用户1再来访问时，Set的去重功能就保证了不会重复记录用户1的访问次数，这样，用户1就算是一个独立访客。当你需要统计UV时，可以直接用SCARD命令，这个命令会返回一个集合中的元素个数。</p><p>但是，如果page1非常火爆，UV达到了千万，这个时候，一个Set就要记录千万个用户ID。对于一个搞大促的电商网站而言，这样的页面可能有成千上万个，如果每个页面都用这样的一个Set，就会消耗很大的内存空间。</p><p>当然，你也可以用Hash类型记录UV。</p><p>例如，你可以把用户ID作为Hash集合的key，当用户访问页面时，就用HSET命令（用于设置Hash集合元素的值），对这个用户ID记录一个值“1”，表示一个独立访客，用户1访问page1后，我们就记录为1个独立访客，如下所示：</p><pre><code>HSET page1:uv user1 1\n</code></pre><p>即使用户1多次访问页面，重复执行这个HSET命令，也只会把user1的值设置为1，仍然只记为1个独立访客。当要统计UV时，我们可以用HLEN命令统计Hash集合中的所有元素个数。</p><p>但是，和Set类型相似，当页面很多时，Hash类型也会消耗很大的内存空间。那么，有什么办法既能完成统计，还能节省内存吗？</p><p>这时候，就要用到Redis提供的HyperLogLog了。</p><p>HyperLogLog是一种用于统计基数的数据集合类型，它的最大优势就在于，当集合元素数量非常多时，它计算基数所需的空间总是固定的，而且还很小。</p><p>在Redis中，每个 HyperLogLog只需要花费 12 KB 内存，就可以计算接近 2^64 个元素的基数。你看，和元素越多就越耗费内存的Set和Hash类型相比，HyperLogLog就非常节省空间。</p><p>在统计UV时，你可以用PFADD命令（用于向HyperLogLog中添加新元素）把访问页面的每个用户都添加到HyperLogLog中。</p><pre><code>PFADD page1:uv user1 user2 user3 user4 user5\n</code></pre><p>接下来，就可以用PFCOUNT命令直接获得page1的UV值了，这个命令的作用就是返回HyperLogLog的统计结果。</p><pre><code>PFCOUNT page1:uv\n</code></pre><p>关于HyperLogLog的具体实现原理，你不需要重点掌握，不会影响到你的日常使用，我就不多讲了。如果你想了解一下，课下可以看看<a href=\"http://en.wikipedia.org/wiki/HyperLogLog\">这条链接</a>。</p><p>不过，有一点需要你注意一下，HyperLogLog的统计规则是基于概率完成的，所以它给出的统计结果是有一定误差的，标准误算率是0.81%。这也就意味着，你使用HyperLogLog统计的UV是100万，但实际的UV可能是101万。虽然误差率不算大，但是，如果你需要精确统计结果的话，最好还是继续用Set或Hash类型。</p><h2>小结</h2><p>这节课，我们结合统计新增用户数和留存用户数、最新评论列表、用户签到数以及网页独立访客量这4种典型场景，学习了集合类型的4种统计模式，分别是聚合统计、排序统计、二值状态统计和基数统计。为了方便你掌握，我把Set、Sorted Set、Hash、List、Bitmap、HyperLogLog的支持情况和优缺点汇总在了下面的表格里，希望你把这张表格保存下来，时不时地复习一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/6e/c0bb35d0d91a62ef4ca1bd939a9b136e.jpg?wh=2866*1739\" alt=\"\"></p><p>可以看到，Set和Sorted Set都支持多种聚合统计，不过，对于差集计算来说，只有Set支持。Bitmap也能做多个Bitmap间的聚合计算，包括与、或和异或操作。</p><p>当需要进行排序统计时，List中的元素虽然有序，但是一旦有新元素插入，原来的元素在List中的位置就会移动，那么，按位置读取的排序结果可能就不准确了。而Sorted Set本身是按照集合元素的权重排序，可以准确地按序获取结果，所以建议你优先使用它。</p><p>如果我们记录的数据只有0和1两个值的状态，Bitmap会是一个很好的选择，这主要归功于Bitmap对于一个数据只用1个bit记录，可以节省内存。</p><p>对于基数统计来说，如果集合元素量达到亿级别而且不需要精确统计时，我建议你使用HyperLogLog。</p><p>当然，Redis的应用场景非常多，这张表中的总结不一定能覆盖到所有场景。我建议你也试着自己画一张表，把你遇到的其他场景添加进去。长久积累下来，你一定能够更加灵活地把集合类型应用到合适的实践项目中。</p><h2>每课一问</h2><p>依照惯例，我给你留个小问题。这节课，我们学习了4种典型的统计模式，以及各种集合类型的支持情况和优缺点，我想请你聊一聊，你还遇到过其他的统计场景吗？用的是怎样的集合类型呢？</p><p>欢迎你在留言区写下你的思考和答案，和我交流讨论。如果你身边还有需要解决这些统计问题的朋友或同事，也欢迎你把今天的内容分享给他/她，我们下节课见。</p>","neighbors":{"left":{"article_title":"11 | “万金油”的String，为什么不好用了？","id":279649},"right":{"article_title":"13 | GEO是什么？还可以定义新的数据类型吗？","id":281745}},"comments":[{"had_liked":false,"id":245574,"user_name":"Kaito","can_delete":false,"product_type":"c1","uid":1020042,"ip_address":"","ucode":"79775FA35A95F2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","comment_is_top":false,"comment_ctime":1598986260,"is_pvip":true,"discussion_count":35,"race_medal":0,"score":"2024528582676","product_id":100056701,"comment_content":"使用Sorted Set可以实现统计一段时间内的在线用户数：用户上线时使用zadd online_users $timestamp $user_id把用户添加到Sorted Set中，使用zcount online_users $start_timestamp $end_timestamp就可以得出指定时间段内的在线用户数。<br><br>如果key是以天划分的，还可以执行zinterstore online_users_tmp 2 online_users_{date1} online_users_{date2} aggregate max，把结果存储到online_users_tmp中，然后通过zrange online_users_tmp 0 -1 withscores就可以得到这2天都在线过的用户，并且score就是这些用户最近一次的上线时间。<br><br>还有一个有意思的方式，使用Set记录数据，再使用zunionstore命令求并集。例如sadd user1 apple orange banana、sadd user2 apple banana peach记录2个用户喜欢的水果，使用zunionstore fruits_union 2 user1 user2把结果存储到fruits_union这个key中，zrange fruits_union 0 -1 withscores可以得出每种水果被喜欢的次数。<br><br>使用HyperLogLog计算UV时，补充一点，还可以使用pfcount page1:uv page2:uv page3:uv或pfmerge page_union:uv page1:uv page2:uv page3:uv得出3个页面的UV总和。<br><br>另外，需要指出老师文章描述不严谨的地方：“Set数据类型，使用SUNIONSTORE、SDIFFSTORE、SINTERSTORE做并集、差集、交集时，选择一个从库进行聚合计算”。这3个命令都会在Redis中生成一个新key，而从库默认是readonly不可写的，所以这些命令只能在主库使用。想在从库上操作，可以使用SUNION、SDIFF、SINTER，这些命令可以计算出结果，但不会生成新key。<br><br>最后需要提醒一下：<br><br>1、如果是在集群模式使用多个key聚合计算的命令，一定要注意，因为这些key可能分布在不同的实例上，多个实例之间是无法做聚合运算的，这样操作可能会直接报错或者得到的结果是错误的！<br><br>2、当数据量非常大时，使用这些统计命令，因为复杂度较高，可能会有阻塞Redis的风险，建议把这些统计数据与在线业务数据拆分开，实例单独部署，防止在做统计操作时影响到在线业务。","like_count":470,"discussions":[{"author":{"id":1113597,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","nickname":"注定非凡","note":"","ucode":"80673056E131B7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305154,"discussion_content":"谢谢你的详细分享，你最后一点的提醒，去除了我内心的不确定。\n\n说个笑话：\n我们项目组前段时间调过来个开发，真是艺高人胆大。他在接口中写了个Lua脚本，让Redis主线程做复杂集合操作，结果就是导致我们生产上，时不时的出现连接池被耗尽的情况。而在他来之前，我们的缓存用的好好的。组长让其改造业务，居然说jar包有问题，会有连结池泄露","likes_number":23,"is_delete":false,"is_hidden":false,"ctime":1599798680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1452618,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2a/4a/2d5f03e4.jpg","nickname":"开心ing●﹏●","note":"","ucode":"19B3EE258028E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1113597,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","nickname":"注定非凡","note":"","ucode":"80673056E131B7","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":339982,"discussion_content":"组内CR不到位啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609855539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305154,"ip_address":""},"score":339982,"extra":""},{"author":{"id":1623487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/sPORo6cN3GSVxjHj9nqSAPn7KG4wtSTqNUommjNndpf8qd7bHKHquuldXZfxD5nF1ldy4LeoAQNwSsOgcmWG9w/132","nickname":"守望者","note":"","ucode":"DEE375A5F2D57A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1113597,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","nickname":"注定非凡","note":"","ucode":"80673056E131B7","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":358776,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616048502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305154,"ip_address":""},"score":358776,"extra":""},{"author":{"id":1415619,"avatar":"https://static001.geekbang.org/account/avatar/00/15/99/c3/e4f408d4.jpg","nickname":"陌兮","note":"","ucode":"00CE47CAECD5CD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1113597,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","nickname":"注定非凡","note":"","ucode":"80673056E131B7","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":359077,"discussion_content":"好经验，记下来了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616115261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305154,"ip_address":""},"score":359077,"extra":""}]},{"author":{"id":1765097,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJzCZibunMDooyZ86JRibGasxZFbq8HT4WzHAPQIiaBneWnwkb6CaSkesMwAvZpxFGib2ibVA9DVP9LbhQ/132","nickname":"Geek_b43b32","note":"","ucode":"5DD112591702BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370839,"discussion_content":"用zset来统计任意时间范围的在线人数是不是有问题，如果一个用户先后两次在线，后面的记录会覆盖前面的，这样查前面那段时间的在线人数是不正确的","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1619544050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2447138,"avatar":"https://static001.geekbang.org/account/avatar/00/25/57/22/4d3df934.jpg","nickname":"盐一层","note":"","ucode":"E7574E047CC2BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353327,"discussion_content":"看到数据统计跟在线混用同一个redis，就感觉头疼。严重的不合理","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1615127446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048681,"avatar":"https://static001.geekbang.org/account/avatar/00/10/00/69/3b1375ca.jpg","nickname":"海拉鲁","note":"","ucode":"6E3493295CED6F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302680,"discussion_content":"感谢分享，其实我有一个疑问，类似一段时间内统计值这种需求，是否使用时序数据库更符合应用场景？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1599008626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1048681,"avatar":"https://static001.geekbang.org/account/avatar/00/10/00/69/3b1375ca.jpg","nickname":"海拉鲁","note":"","ucode":"6E3493295CED6F","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":302688,"discussion_content":"是，这个当然是最好的。所以我也提示了使用Redis进行聚合运算的风险。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599009347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302680,"ip_address":""},"score":302688,"extra":""},{"author":{"id":1048681,"avatar":"https://static001.geekbang.org/account/avatar/00/10/00/69/3b1375ca.jpg","nickname":"海拉鲁","note":"","ucode":"6E3493295CED6F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":302692,"discussion_content":"感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599009908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302688,"ip_address":""},"score":302692,"extra":""}]},{"author":{"id":1182372,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","nickname":"张申傲","note":"","ucode":"22D46BC529BA8A","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333616,"discussion_content":"对 “如果是在集群模式使用多个key聚合计算的命令” 深有感触。公司用的twemproxy代理，一些跨实例的set操作无法支持，最后还是在客户端做的聚合。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1607579799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1152898,"avatar":"https://static001.geekbang.org/account/avatar/00/11/97/82/394c88ad.jpg","nickname":"西红柿牛腩","note":"","ucode":"DEC94B4A647A92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303561,"discussion_content":"感谢分享，现在都是晚一天再看，等大佬的评论","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599298160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1312184,"avatar":"https://static001.geekbang.org/account/avatar/00/14/05/b8/8d468842.jpg","nickname":"JulyRemember","note":"","ucode":"9E3D5D60D82999","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302773,"discussion_content":"想问下，老师说的使用SortedSet实现排序统计感觉有点问题啊，如果为了展示最新评论在前的话，一般都是按照评论时间来做权重吧，这样有新插入的数据的话仍然会影响排序的吧，这个类型还是不适合在最新评论这种场景使用吧","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599027437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1312184,"avatar":"https://static001.geekbang.org/account/avatar/00/14/05/b8/8d468842.jpg","nickname":"JulyRemember","note":"","ucode":"9E3D5D60D82999","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302780,"discussion_content":"关键在于怎么查询，使用zrevrangbyscore传入上一页最后一条的score，就能查出下一页数据了，这样不重复。","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1599029622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302773,"ip_address":""},"score":302780,"extra":""},{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":302951,"discussion_content":"我觉得用zset的关键是score用什么值呢，用db主键，那么假如分表之后可能id并不单调递增，用时间戳万一有相同时间戳的数据呢，单独为了这个score搞一个递增又不连续的值感觉没必要啊。微博的粉丝列表2年前我专门看过，新增一个粉丝，在上滑刷新的时候确实会有重复粉丝出现。因为很少有人会一直翻这个盯着看，看评论比较多的类似bbs论坛评论基本都是正序的，也不存在这个问题。说回到开头，这个score设置是不是必须递增且唯一呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599096607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302780,"ip_address":""},"score":302951,"extra":""},{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302956,"discussion_content":"对于评论列表的话，score可以是评论的时间戳，对于粉丝列表可以是关注时间戳。如果想保证时间不同，可以把时间戳的精度控制得更精细一些，例如保存到毫秒级别，这样重复的概率就会很小了。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1599098618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302951,"ip_address":""},"score":302956,"extra":""}]},{"author":{"id":2796374,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoZ1Rk2w9ZORFogCica0g4KpoTZOVwy9YoUL1AOnVO84ZmhbCemJE2EeESHkuysdHYZg5E9cKPwfRw/132","nickname":"Geek_3b123f","note":"","ucode":"70E6100AC9C335","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411257,"discussion_content":"我觉得Redis做这种事情如果量级很大并不专业,所以一定要评估量级。量级一旦上去这些就是大key，需要极力避免的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635868233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130122,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3e/8a/891b0e58.jpg","nickname":"wnz27","note":"","ucode":"BC9ACB6B7C6FD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363844,"discussion_content":"有个疑问，每个用户签到是横向情况，怎么转变为竖向的10个亿位bit?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617289877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1405755,"avatar":"https://static001.geekbang.org/account/avatar/00/15/73/3b/a7b5ed95.jpg","nickname":"香樟树","note":"","ucode":"0E0E236E716123","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1130122,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3e/8a/891b0e58.jpg","nickname":"wnz27","note":"","ucode":"BC9ACB6B7C6FD9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369722,"discussion_content":"可以把每天的日期作为 key，每个 key 对应一个 1 亿位的 Bitmap，每一个 bit 对应一个用户当天的签到情况。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619141828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":363844,"ip_address":""},"score":369722,"extra":""},{"author":{"id":1130122,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3e/8a/891b0e58.jpg","nickname":"wnz27","note":"","ucode":"BC9ACB6B7C6FD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1405755,"avatar":"https://static001.geekbang.org/account/avatar/00/15/73/3b/a7b5ed95.jpg","nickname":"香樟树","note":"","ucode":"0E0E236E716123","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371322,"discussion_content":"是啊我的疑问是你构造这个1亿位bit是有成本的啊，遍历来构造么还是怎么做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619735305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369722,"ip_address":""},"score":371322,"extra":""},{"author":{"id":2415329,"avatar":"https://static001.geekbang.org/account/avatar/00/24/da/e1/40f3331f.jpg","nickname":"童年梦","note":"","ucode":"4FBDB3E628BAC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1130122,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3e/8a/891b0e58.jpg","nickname":"wnz27","note":"","ucode":"BC9ACB6B7C6FD9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380900,"discussion_content":"不需要遍历的，可以根据用户ID确定用户处于哪个bit位。用户签到后执行SETBIT命令就可以了，SETBIT的命令的复杂度是O(1)。还有一点需要注意的是：你能使用的最大偏移量是 2^29-1(536870911) ，因为 Redis 字符串的大小被限制在 512 兆(megabytes)以内。如果你需要使用比这更大的空间，你可以使用多个 key 。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1624783719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":371322,"ip_address":""},"score":380900,"extra":""}]},{"author":{"id":1020629,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/d5/699384a0.jpg","nickname":"yeek","note":"","ucode":"A1C71023113CB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303398,"discussion_content":"从库 可以写的，有个参数选项","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599229877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1020629,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/d5/699384a0.jpg","nickname":"yeek","note":"","ucode":"A1C71023113CB9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303399,"discussion_content":"写从库会导致主从不一致，不建议开写。","likes_number":21,"is_delete":false,"is_hidden":false,"ctime":1599230148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303398,"ip_address":""},"score":303399,"extra":""}]},{"author":{"id":1114878,"avatar":"https://static001.geekbang.org/account/avatar/00/11/02/fe/d539b96b.jpg","nickname":"曹翔","note":"","ucode":"B4D8B42DFB535C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548952,"discussion_content":"我觉得这个业务本身就不该Redis来做吧，为什么不用es？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643455255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376018,"discussion_content":"使用zset是可以统计短时间内精确数量 但是对于一段时间内 通常我们以小时为单位 打个比方 1小时内亿级流量 那么百万级的dau还是有的 。\n此时对于redis来说 首先是个写多读非常少的场景 其次因为每次写入是以时间戳long入库 也就意味着我们必须遍历到尾部才插入 \n虽然是对数级别 但此时已经接近极限（数学上的概念）。因此 每次保存点击流势必要花费毫秒级才能返回。所以在量级面前zset会蜕化成一个常量型遍历 并不是最优解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621928734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1129738,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3d/0a/45b399c0.jpg","nickname":"NEVER NEVER LAND","note":"","ucode":"4DFE5DCB40E73C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386735,"discussion_content":"为什么会“每次写入是以时间戳long入库”，就会“必须遍历到尾部才插入”呢？不是用跳表嘛","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627749576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":376018,"ip_address":""},"score":386735,"extra":""}]},{"author":{"id":1879262,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/ac/de/68f35320.jpg","nickname":"小来子","note":"","ucode":"4EDAF31E43B211","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339431,"discussion_content":"ZUNIONSTORE 默认是对所有子集进行求和，然后传入新的子集~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609670051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248157,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1600045662,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"250708148830","product_id":100056701,"comment_content":"1，作者讲了什么？<br>    1，Redis有那些数据结构适合做统计<br><br>2，作者是怎么把这事给讲明白的？<br>    1，列举了常见的数据统计需求。从实际需求出发，推荐适合的数据类型，讲解了怎么用，并解答这种数据结构为什么可以<br>    2，将数据统计需求，分了四类，分类分别讲解<br><br>3，为了讲明白，作者讲了哪些要点，有哪些亮点？<br>    1，亮点1：BITMAP的特性和使用场景，方式<br>    2，亮点2：HyperLogLog的特性和使用场景，方式<br>    3，要点1：日常的统计需求可以分为四类：聚合，排序，二值状态，基数，选用适合的数据类型可以实现即快速又节省内存<br>    4，要点2：聚合统计，可以选用Set类型完成，但Set的差，并，交集操作复杂度高，在数据量大的时候会阻塞主进程<br>    5，要点3：排序统计，可以选用List和Sorted Set<br>    6，要点4：二值状态统计：Bitmap本身是用String类型作为底层数据结构实现，String类型会保存为二进制字节数组，所以可以看作是一个bit数组<br>    7，要点5：基数统计：HyperLogLog ,计算基数所需空间总是固定的，而且很小。但要注意，HyperLogLog是统计规则是基于概率完成的，不是非常准确<br><br>4，对于作者所讲，我有那些发散性思考？<br>    1，对于统计用户的打卡情况，我们项目组也做了这个需求，但遗憾的是我们没有采用bitmap这种方案，而是使用了 sortSet<br>    2，HyperLogLog可以考虑使用到，我们项目中的统计视频播放次数，现在这块，我们的方案是，每天产生一个key，单调递增。在通过定时任务，将缓存中的结果，每天一条数据记录，存入数据库<br><br>5，在将来的那些场景中，我能够使用它？<br><br>6，留言区的收获<br><br>1，主从库模式使用Set数据类型聚合命令(来自 @kaito 大神)<br>    ①：使用SUNIONSTORE，SDIFFSTORE，SINTERSTOR做并集，差集，交集时，这三个命令都会在Redis中生成一个新key,而从库默认是readOnly。所以这些命令只能在主库上使用<br>    ②：SUNION，SDIFF,SINTER，这些命令可以计算出结果，不产生新的key可以在从库使用<br>   ","like_count":59},{"had_liked":false,"id":245619,"user_name":"Anthony","can_delete":false,"product_type":"c1","uid":1309908,"ip_address":"","ucode":"9E0C98A9123365","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d4/743d3f02.jpg","comment_is_top":false,"comment_ctime":1599010441,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"143332931209","product_id":100056701,"comment_content":"感觉第一个聚合统计这种场景一般频率不会太高，一般都是用在运营统计上，可以直接在mysql的从库上去统计，而不需要在redis上维护复杂的数据结构","like_count":34,"discussions":[{"author":{"id":1176426,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f3/6a/6d82e7a3.jpg","nickname":"暮雨","note":"","ucode":"4B7F4932446EF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327291,"discussion_content":"olap数据库","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605786186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542361,"discussion_content":"cassandra比较适合大数据量的统计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640740000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245808,"user_name":"波哥威武","can_delete":false,"product_type":"c1","uid":2115541,"ip_address":"","ucode":"D5728CE2991A65","user_header":"https://static001.geekbang.org/account/avatar/00/20/47/d5/24e60497.jpg","comment_is_top":false,"comment_ctime":1599059841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"100383307649","product_id":100056701,"comment_content":"现在大数据情况下都是通过实时流方式统计pvuv，不太会基于redis，基于存在即合理，老师能分析下相关优劣吗，我个人的想法，一个是在大量pvuv对redis的后端读写压力，还有复杂的统计结果redis也需要复杂的数据结构设计去实现，最后是业务和分析任务解耦。","like_count":23},{"had_liked":false,"id":245739,"user_name":"土豆哪里挖","can_delete":false,"product_type":"c1","uid":1370705,"ip_address":"","ucode":"F27B3BA0477050","user_header":"https://static001.geekbang.org/account/avatar/00/14/ea/51/9132e9cc.jpg","comment_is_top":false,"comment_ctime":1599037785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"83203416409","product_id":100056701,"comment_content":"在集群的情况下，聚合统计就没法用了吧，毕竟不是同一个实例了","like_count":20},{"had_liked":false,"id":258098,"user_name":"Geek_960d5b","can_delete":false,"product_type":"c1","uid":2200595,"ip_address":"","ucode":"F8B40CD57E20F3","user_header":"","comment_is_top":false,"comment_ctime":1604297897,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44553970857","product_id":100056701,"comment_content":"老师只是提供了一种使用思路，<br>但做统计业界主流还是上数仓用hive等做报表","like_count":10},{"had_liked":false,"id":254802,"user_name":"范闲","can_delete":false,"product_type":"c1","uid":1073125,"ip_address":"","ucode":"F21FD7DF6BA53C","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/e5/54325854.jpg","comment_is_top":false,"comment_ctime":1603188875,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"44552861835","product_id":100056701,"comment_content":"1.redis里不建议用聚合统计。原因有几点:<br>单实例会阻塞。cluster的时候key可能分布在不同的节点，需要调用方做聚合。<br>2.带排序的统计可以使用sorted set。cluster的时候可能一样需要做聚合<br>3.hyperlog是带误差的统计，可以用来统计总量。","like_count":10,"discussions":[{"author":{"id":1113818,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fe/da/01cfbdc6.jpg","nickname":"念","note":"","ucode":"866A800D49C498","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352236,"discussion_content":"用从库做还好吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614660295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1566642,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e7/b2/4cb8356a.jpg","nickname":"小甲鱼","note":"","ucode":"DDF8A3A4976681","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352227,"discussion_content":"个人感觉可以开一个新的机器来做这些计算，如果说计算很多的话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614656445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1411096,"avatar":"https://static001.geekbang.org/account/avatar/00/15/88/18/9744d5ec.jpg","nickname":"小超人","note":"","ucode":"0D8A433F3E3737","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338389,"discussion_content":"在redis 做有损性能的操作，怎么想都违背了redis 做缓存的初衷","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609253634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245638,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1599014642,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"40253720306","product_id":100056701,"comment_content":"<br>老师说的大部分场景都没用到过。。。。。<br>我们有这么一种场景：<br>\t在多实例下，定时任务就不能使用@Schedule使用，必须使用分布式定时调度，我们自研的分布式调度系统支持MQ和Http两种模式，同时支持一次性的调用和Cron表达是式形式的多次调用。<br>\t在MQ模式下（暂时不支持Cron的调用），分布式调度系统作为MQ的消费者消费需要调度的任务，同时消息中会有所使用的资源，调度系统有对应的资源上线，也可以做资源限制，没有可用资源时，消息不调度（不投递）等待之前任务资源的释放，不投递时消息就在Zset中保存着，当然不同的类型在不同的Zset中，当有对用的资源类型释放后，会有专门的MQ确认消息，告诉任务调度系统，某种类型的资源已经释放，然后从对应type的Zset中获取排队中优先级最高的消息，进行资源匹配，如果可以匹配，则进行消息发送。<br>\t当然http也是类似的，只是http不做资源管理，业务方自己掌控资源及调用频次，http请求的调用时调度系统自己发起的，引入quartz，在时间到达后，通过Http发送调用。<br>","like_count":9,"discussions":[{"author":{"id":1763844,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTInk6tZfjiaeb21cpvzfcElR7q1G23QCwMNCSbPLayPbiaoyASE7ktYWrdibkRClSRiahXRHft4oa0iauw/132","nickname":"Geek_4cccff","note":"","ucode":"95BD20FBF2D438","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314453,"discussion_content":"spring quartz 是支持集群形式的时间调度，@Schedule 也是可以的\n深入了解spring quartz 就发现为什么会采用集群模式，而不是master slave，你们的分布式调度应该是采用的当当那一套，elastic-job，实际上quartz 没有去往那个方向发展是有自己的原因的，各有各的好处。\n注意开源的方向，深入了解就知道原因了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603158013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309976,"discussion_content":"“在多实例下，定时任务就不能使用@Schedule使用，必须使用分布式定时调度。”\n这句话太绝对了，多实例的话，@Schedule可以配合shedlock来使用，保证定时任务只在一个实例上运行（基于数据库实现排他锁）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601551834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2015446,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKXf8W8e1yfnpX27ofJibVHhicicKvWeMxvQGgd72tfMm00e9u58EKD6TRFSGuTf7I7147GftmT1qFlg/132","nickname":"lecram","note":"","ucode":"B9409F53E182B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310817,"discussion_content":"+1 我们也是在定时任务逻辑中加入获取redis分布式锁的逻辑，来保证一个实例运行任务","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602056999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309976,"ip_address":""},"score":310817,"extra":""},{"author":{"id":2313353,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4c/89/82a3ee04.jpg","nickname":"going","note":"","ucode":"3AA83F9B07BE8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342328,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610636938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309976,"ip_address":""},"score":342328,"extra":""}]}]},{"had_liked":false,"id":292698,"user_name":"阿基米德","can_delete":false,"product_type":"c1","uid":1304804,"ip_address":"","ucode":"065D6529C12B81","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/e4/c9dd6058.jpg","comment_is_top":false,"comment_ctime":1620925254,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"35980663622","product_id":100056701,"comment_content":"这里一亿个数据返回给客户端处理，这个场景是不是就会有大key问题","like_count":8,"discussions":[{"author":{"id":1188249,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/99/abb7bfe3.jpg","nickname":"javaYJL","note":"","ucode":"E326EB9AFDCE32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586895,"discussion_content":"bitmap中的offset，如果用户很大。几十到几百m都有。线上业务不会那么用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662598362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557771,"discussion_content":"对啊！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647958861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293276,"user_name":"悟空聊架构","can_delete":false,"product_type":"c1","uid":1123163,"ip_address":"","ucode":"C2F482A0CF8AF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","comment_is_top":false,"comment_ctime":1621320093,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"31686091165","product_id":100056701,"comment_content":"对于这个问题：假设越新的评论权重越大，目前最新评论的权重是 N，我们执行下面的命令时，就可以获得最新的 10 条评论。<br><br>理解如下：<br><br>假设当前的评论 List 是{A, B, C, D, E, F}（其中，A 是最新的评论，以此类推，F 是最早的评论，权重分别为 10，9，8，7，6，5）。<br><br>在展示第一页的 3 个评论时，按照权重排序，查出 ABC。<br><br>展示第二页的 3 个评论时，按照权重排序，查出 DEF。<br><br>如果在展示第二页前，又产生了一个新评论 G，权重为 11，排序为 {G, A, B, C, D, E, F}。<br><br>再次查询第二页数据时，权重还是会以 10 为准，逻辑上，第一页的权重还是 10，9，8。<br><br>查询第二页数据时，可以查询出权重等于 7，6，5 的数据，返回评论 DEF。<br><br>当想查询出最新评论时，需要以权重 11 为准，第一页数据的权重就是 11，10，9，返回评论 GAB。<br><br>再次查询第二页数据时，以权重 11 为准，查询出评论 CDE。","like_count":8,"discussions":[{"author":{"id":2708541,"avatar":"","nickname":"LWQ","note":"","ucode":"6500780D16DD04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534297,"discussion_content":"我擦，悟空大佬。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638157221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1123163,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","nickname":"悟空聊架构","note":"","ucode":"C2F482A0CF8AF1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2708541,"avatar":"","nickname":"LWQ","note":"","ucode":"6500780D16DD04","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534599,"discussion_content":"缘分啊！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638239377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534297,"ip_address":""},"score":534599,"extra":""}]},{"author":{"id":1337842,"avatar":"https://static001.geekbang.org/account/avatar/00/14/69/f2/b17d73ff.jpg","nickname":"牛掰的斐","note":"","ucode":"A0265CCE3F4FC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392760,"discussion_content":"求教：\n1. 权重如何设置\n2. \n如果在展示第二页前，又产生了一个新评论 G，权重为 11，排序为 {G, A, B, C, D, E, F}。\n\n再次查询第二页数据时，权重还是会以 10 为准，逻辑上，第一页的权重还是 10，9，8。\n再次查询第二页的时候，为啥权重还是会以10为准呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631112505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3028917,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/37/b5/023cde90.jpg","nickname":"Geek_c8c9fa","note":"","ucode":"A5420B989CADCB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1337842,"avatar":"https://static001.geekbang.org/account/avatar/00/14/69/f2/b17d73ff.jpg","nickname":"牛掰的斐","note":"","ucode":"A0265CCE3F4FC0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589002,"discussion_content":"可以理解为前端传的？用户不刷新页面，这个n不改变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664328731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392760,"ip_address":"美国"},"score":589002,"extra":""}]}]},{"had_liked":false,"id":286451,"user_name":"sgl","can_delete":false,"product_type":"c1","uid":1252243,"ip_address":"","ucode":"D73875BA22954F","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/93/e3b44969.jpg","comment_is_top":false,"comment_ctime":1617325819,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27387129595","product_id":100056701,"comment_content":"12MB的bitmap是大key了，生产环境会有问题等我","like_count":6},{"had_liked":false,"id":306078,"user_name":"陈阳","can_delete":false,"product_type":"c1","uid":2653715,"ip_address":"","ucode":"C8E676C967D23A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKib3vNM6TPT1umvR3TictnLurJPKuQq4iblH5upgBB3kHL9hoN3Pgh3MaR2rjz6fWgMiaDpicd8R5wsAQ/132","comment_is_top":false,"comment_ctime":1628330351,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"18808199535","product_id":100056701,"comment_content":"没懂， 文中说到的list由于插入的新的评论，第二页可能会读到原第一页的值， 我觉得这个本来不应该就是这样的吗？ 应该因为最新评论已经刷新了啊， 难道还要回去读原来的老数据吗 这块没太看懂","like_count":4,"discussions":[{"author":{"id":2658396,"avatar":"","nickname":"Geek_733664","note":"","ucode":"96B24CC20521AD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550151,"discussion_content":"应该看需求吧这里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644395717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2860954,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/wfRD8vz9zQDYgxwSqW6jnpIcQ3guZUE6EQuVXM5Wribtp9wDlJLO8SG76CCPEdmDviaTK99iarvTYLxJw71bKdeXw/132","nickname":"CheerJia","note":"","ucode":"5A2E4A956816C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539147,"discussion_content":"的确，这个不就是正常情况吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639622266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2846252,"avatar":"","nickname":"Geek_baf45e","note":"","ucode":"4306D40E422DD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532593,"discussion_content":"同疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637650649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245597,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1599005255,"is_pvip":false,"discussion_count":15,"race_medal":0,"score":"14483907143","product_id":100056701,"comment_content":"有个疑问，统计亿级用户连续10天登录的场景，每天用一个bitmap的key，来存储每个用户的登录情况，将10个bitmap的key进行与运算来统计连续10天登录的用户，这个是怎么保证10个bitmap相同位是同一个用户的登录情况呢？","like_count":3,"discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302679,"discussion_content":"对用户 ID哈希计算，再对1亿取模，就得到这个用户映射的位。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1599008547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":2105421,"avatar":"","nickname":"Geek_2423e0","note":"","ucode":"B7D454A3DE67AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":302858,"discussion_content":"如果对1亿的数据hash取模，那是否可能存在冲突的风险？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599049084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302679,"ip_address":""},"score":302858,"extra":""},{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2105421,"avatar":"","nickname":"Geek_2423e0","note":"","ucode":"B7D454A3DE67AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302860,"discussion_content":"用户量在1亿以下没问题，以上会有冲突。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599049760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302858,"ip_address":""},"score":302860,"extra":""},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":2105421,"avatar":"","nickname":"Geek_2423e0","note":"","ucode":"B7D454A3DE67AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302876,"discussion_content":"这个一般有多少用户就使用多少位，再取 hash 就不会冲突","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599054125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302858,"ip_address":""},"score":302876,"extra":""}]},{"author":{"id":2308831,"avatar":"https://static001.geekbang.org/account/avatar/00/23/3a/df/ea0fc831.jpg","nickname":"周天航","note":"","ucode":"B28D84594679A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325919,"discussion_content":"可以先hash再取模，或者用户id就设计成从0到一亿，就可以直接用用户的id做bitmp的偏移量了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1605465814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2104995,"avatar":"https://static001.geekbang.org/account/avatar/00/20/1e/a3/3cf2f7ef.jpg","nickname":"岳晨旭","note":"","ucode":"BFD13C7841F541","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304152,"discussion_content":"直接以用户ID来作为偏移量呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599482088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2104995,"avatar":"https://static001.geekbang.org/account/avatar/00/20/1e/a3/3cf2f7ef.jpg","nickname":"岳晨旭","note":"","ucode":"BFD13C7841F541","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557774,"discussion_content":"好想法","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647958988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304152,"ip_address":""},"score":557774,"extra":""}]},{"author":{"id":1024726,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a2/d6/97370dfc.jpg","nickname":"onno","note":"","ucode":"FB7E829037DA10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302683,"discussion_content":"刚想回答被课代表抢先了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599008830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2069799,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/95/27/0f76fc13.jpg","nickname":"叶尘封","note":"","ucode":"83271E5DD0D9DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566181,"discussion_content":"用雪花算法或者自增的id来当用户编号就不会存在你这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650622786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289172,"user_name":"吃饭睡觉打酱油","can_delete":false,"product_type":"c1","uid":1071668,"ip_address":"","ucode":"95EC98C2B5045B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5a/34/4cbadca6.jpg","comment_is_top":false,"comment_ctime":1618902395,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10208836987","product_id":100056701,"comment_content":"老师，我对bitmap统计1亿用户的有个疑问，缓存中的bitmap是怎么初始化或者怎么来的呢，怎么保证用户的顺序呢？","like_count":2,"discussions":[{"author":{"id":2911084,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/6b/6c/3e80afaf.jpg","nickname":"HappyHasson","note":"","ucode":"B84CC43E349CFA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554228,"discussion_content":"只能根据用户id进行排序吧，但是一亿个id排序也很恐怖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646274900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1739070,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/89/3e/0dd8e96b.jpg","nickname":"InfoQ_小汤","note":"","ucode":"E4C30DB7A9B54C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415291,"discussion_content":"bitmap是基于string类型实现的 string最大支持512m 所以offset偏离量最大为2^32 bitmap默认的bit位value为0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637048442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2253496,"avatar":"","nickname":"Geek_3d87cb","note":"","ucode":"F09334D60C3BC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375175,"discussion_content":"根据用户id吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621501621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248672,"user_name":"Rain","can_delete":false,"product_type":"c1","uid":1175329,"ip_address":"","ucode":"603DFFAC6A3755","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/21/69c181b8.jpg","comment_is_top":false,"comment_ctime":1600257723,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10190192315","product_id":100056701,"comment_content":"redis真是应用开发利器啊","like_count":2},{"had_liked":false,"id":245587,"user_name":"海拉鲁","can_delete":false,"product_type":"c1","uid":1048681,"ip_address":"","ucode":"6E3493295CED6F","user_header":"https://static001.geekbang.org/account/avatar/00/10/00/69/3b1375ca.jpg","comment_is_top":false,"comment_ctime":1599001615,"is_pvip":true,"discussion_count":9,"race_medal":1,"score":"10188936207","product_id":100056701,"comment_content":"之前做过利用redis一个统计最近200个客户触达率的方案，借助list+lua<br>具体是用0代表触达，1代表未触达，不断丢入队列中。需要统计是lrang key 0 -1 取出全部元素，计算0的比例就是触达率了。<br>这样不需要每次都计算一次触达率，而是按需提供，也能保证最新。应该不是很有共性的需求，是我们对用户特定需求的一个尝试","like_count":2,"discussions":[{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339910,"discussion_content":"一般情况下，是不是应该用 1 表示达成，0 表示未达成（吹毛求疵了）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609837508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1048681,"avatar":"https://static001.geekbang.org/account/avatar/00/10/00/69/3b1375ca.jpg","nickname":"海拉鲁","note":"","ucode":"6E3493295CED6F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340040,"discussion_content":"因为我们这边0统一表示触达，其它自然数表示未触达的具体原因，为了保证一致性所以还是用0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609886894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339910,"ip_address":""},"score":340040,"extra":""}]},{"author":{"id":1000527,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLV02BvM8NIcY5pOSibUTayLGM3tkbPX0UYlicPYR58Bfe9WC6nlDYbiaP4mKe6FUJwa0jXvaGdPWK9w/132","nickname":"crossbell","note":"","ucode":"EFBB5B65E4D48C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316761,"discussion_content":"ewah包+redis处理。用户量特别大时redis解决不了ID稀疏的问题。不如用户ID为1，与id为100w的。当然也可以把用户id分片处理，尽量规避潜在稀疏可能性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603451046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1309984,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fd/20/2761ef0e.jpg","nickname":"cheriston","note":"","ucode":"617CBFCE0925C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309692,"discussion_content":"老师，大key如何优化处理，Redis如何冷热分离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601388751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1048681,"avatar":"https://static001.geekbang.org/account/avatar/00/10/00/69/3b1375ca.jpg","nickname":"海拉鲁","note":"","ucode":"6E3493295CED6F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1309984,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fd/20/2761ef0e.jpg","nickname":"cheriston","note":"","ucode":"617CBFCE0925C4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312748,"discussion_content":"同是学习者而已\n你的这个问题我没有研究过，不好意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602810034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309692,"ip_address":""},"score":312748,"extra":""}]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306160,"discussion_content":"基于小数据场景可以，大规模数据吃力。还是用bitmap","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600183600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1048681,"avatar":"https://static001.geekbang.org/account/avatar/00/10/00/69/3b1375ca.jpg","nickname":"海拉鲁","note":"","ucode":"6E3493295CED6F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312749,"discussion_content":"是的，这个方案是有局限性的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602810062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":306160,"ip_address":""},"score":312749,"extra":""}]},{"author":{"id":1965699,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","nickname":"慎独明强","note":"","ucode":"DC2F7F2C0C8F60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302862,"discussion_content":"如果上述有上亿用户，全部取出来不敢想象了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599050345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1048681,"avatar":"https://static001.geekbang.org/account/avatar/00/10/00/69/3b1375ca.jpg","nickname":"海拉鲁","note":"","ucode":"6E3493295CED6F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1965699,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","nickname":"慎独明强","note":"","ucode":"DC2F7F2C0C8F60","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302866,"discussion_content":"队列有长度限制，只有200，类似一个滑动窗口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599052600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302862,"ip_address":""},"score":302866,"extra":""}]}]},{"had_liked":false,"id":298585,"user_name":"死磕郎一世","can_delete":false,"product_type":"c1","uid":1272996,"ip_address":"","ucode":"86C1197C3FB2A0","user_header":"https://static001.geekbang.org/account/avatar/00/13/6c/a4/7f7c1955.jpg","comment_is_top":false,"comment_ctime":1624205277,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5919172573","product_id":100056701,"comment_content":"list新增元素如果插入到尾部，这样，前面的元素位置就不用改变了","like_count":1,"discussions":[{"author":{"id":1005713,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/58/91/3a2822f0.jpg","nickname":"trymorewang","note":"","ucode":"5804857F5B8B2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380450,"discussion_content":"插入尾部 那就是从尾部取了 还是一样的 展示不就是是展示最新的元素么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624506998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287090,"user_name":"wnz27","can_delete":false,"product_type":"c1","uid":1130122,"ip_address":"","ucode":"BC9ACB6B7C6FD9","user_header":"https://static001.geekbang.org/account/avatar/00/11/3e/8a/891b0e58.jpg","comment_is_top":false,"comment_ctime":1617772147,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5912739443","product_id":100056701,"comment_content":"有个疑问，每个用户签到是横向情况，也就是一亿个十位bit，怎么转变为竖向的10个一亿位bit","like_count":1,"discussions":[{"author":{"id":1811277,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a3/4d/59390ba9.jpg","nickname":"排骨","note":"","ucode":"A413CF46211E1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575873,"discussion_content":"一天一个key，十天就十个key","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655168101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297630,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","nickname":"剑八","note":"","ucode":"0A09F41DB8A4E7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382066,"discussion_content":"\b存的时候就是以天为key，value就是对应的每个用户的登录情况;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625398101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267038,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1607579635,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"5902546931","product_id":100056701,"comment_content":"使用 incr 统计一个网页的 PV，具体为 incr page:{page_id} 和 get page:{page_id} 。因为 PV 都是长整型，因此对于String类型来说，可以采用 int 编码方式，内存开销不大。","like_count":1},{"had_liked":false,"id":246095,"user_name":"Middleware","can_delete":false,"product_type":"c1","uid":1072015,"ip_address":"","ucode":"C0028293ECDD47","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg","comment_is_top":false,"comment_ctime":1599178874,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"5894146170","product_id":100056701,"comment_content":"昨天遇到一个近实时的排行榜，类似抖音排行榜那种，老师用有序集合来做是不是好？这是我昨天的方案","like_count":1},{"had_liked":false,"id":245882,"user_name":"Wangxi","can_delete":false,"product_type":"c1","uid":1211790,"ip_address":"","ucode":"C25A9A14179930","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/8e/bb16d414.jpg","comment_is_top":false,"comment_ctime":1599101500,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"5894068796","product_id":100056701,"comment_content":"不是很懂 key=user280680 value 是一个set  set里面又是用户id。 key不是已经是userId了么。为啥value里面还要存那么多userId干什么","like_count":1,"discussions":[{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303369,"discussion_content":"把 user280680 理解为一个普通的key 就行了。之所以老师这么举例，一般 redis 的key 设计都有一些设计规范，具有一定的标识，比如 user+id+日期等。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599218504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2308831,"avatar":"https://static001.geekbang.org/account/avatar/00/23/3a/df/ea0fc831.jpg","nickname":"周天航","note":"","ucode":"B28D84594679A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325918,"discussion_content":"这个是设计redis的key的一种习惯方式，如果不加这个userid直接给你一串数字，你知道这个key是用来干嘛的吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605465514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1080998,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7e/a6/188817b6.jpg","nickname":"郭嵩阳","note":"","ucode":"9DC42C7B73F580","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303006,"discussion_content":"280680不是用户id，可以理解为 user280680 是一个固定的key 我这样理解","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599112119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355647,"user_name":"wdg","can_delete":false,"product_type":"c1","uid":1627543,"ip_address":"福建","ucode":"CFA92922785EEE","user_header":"","comment_is_top":false,"comment_ctime":1661590881,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1661590881","product_id":100056701,"comment_content":"老师，统计uv 用bitmap是不是也可以呢","like_count":0},{"had_liked":false,"id":355053,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"浙江","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1661010679,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1661010679","product_id":100056701,"comment_content":"redis还是适合缓存提速场景<br>像评论这样的，要实际看业务，是有一定业务逻辑的。比如评论还有几星，图片什么的，这种用redis就比较被动了。","like_count":0},{"had_liked":false,"id":352880,"user_name":"Geek_323a60","can_delete":false,"product_type":"c1","uid":2797976,"ip_address":"陕西","ucode":"CDC276EC255411","user_header":"","comment_is_top":false,"comment_ctime":1658992904,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658992904","product_id":100056701,"comment_content":"Redis 是将 Bitmap 以 String 类型的形式保存为二进制的字节数组吗？","like_count":0},{"had_liked":false,"id":344713,"user_name":"码小呆","can_delete":false,"product_type":"c1","uid":2055809,"ip_address":"","ucode":"44532D6ABF9340","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","comment_is_top":false,"comment_ctime":1651735398,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651735398","product_id":100056701,"comment_content":"直接用redis的list结构做过抢红包的功能，不过，还是会结合数据库来做，因为怕redis挂了，无法恢复数据","like_count":0},{"had_liked":false,"id":343985,"user_name":"张R","can_delete":false,"product_type":"c1","uid":2268019,"ip_address":"","ucode":"7ECD7101EB4818","user_header":"https://static001.geekbang.org/account/avatar/00/22/9b/73/67844995.jpg","comment_is_top":false,"comment_ctime":1651156386,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651156386","product_id":100056701,"comment_content":"集群高并发写入不会有问题吗？","like_count":0},{"had_liked":false,"id":342636,"user_name":"tyy","can_delete":false,"product_type":"c1","uid":1302149,"ip_address":"","ucode":"C3B436E6562744","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","comment_is_top":false,"comment_ctime":1650375762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650375762","product_id":100056701,"comment_content":"统计每天新增用户那个例子有问题，所有登陆用户不就包括今天的吗，那求个差集不是为空吗","like_count":0},{"had_liked":false,"id":339652,"user_name":"tyy","can_delete":false,"product_type":"c1","uid":1302149,"ip_address":"","ucode":"C3B436E6562744","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","comment_is_top":false,"comment_ctime":1648273657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648273657","product_id":100056701,"comment_content":"一个用户连续签到天数这个怎么统计","like_count":0},{"had_liked":false,"id":339647,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1648268696,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648268696","product_id":100056701,"comment_content":"老师同学好，关于置顶评论中评论回复，“你能使用的最大偏移量是 2^29-1(536870911) ，因为 Redis 字符串的大小被限制在 512 兆(megabytes)以内。” 不太明白怎么计算出来的，看了下文档，另外计算了下， 512*1024*1024*8=4294967296【42亿】 也就是2^32。】<br><br>下面是自己的实践<br>127.0.0.1:6379&gt; setbit test.max.offset-1 536870911 1<br>(integer) 0<br>127.0.0.1:6379&gt; getbit test.max.offset-1 536870911<br>(integer) 1<br>127.0.0.1:6379&gt; memory usage test.max.offset-1<br>(integer) 67125320<br>127.0.0.1:6379&gt; getbit test.max.offset-1 4294967296<br>(error) ERR bit offset is not an integer or out of range<br>127.0.0.1:6379&gt; getbit test.max.offset-1 4294967295<br>(integer) 0<br>127.0.0.1:6379&gt; getbit test.max.offset-1 4294967295<br>(integer) 0<br>127.0.0.1:6379&gt; setbit test.max.offset-1 4294967295 1<br>(integer) 0<br>127.0.0.1:6379&gt; getbit test.max.offset-1 4294967295<br>(integer) 1<br>127.0.0.1:6379&gt; memory usage test.max.offset-1<br>(integer) 537935944<br>127.0.0.1:6379&gt;<br><br>计算如下：<br>537935944&#47;1024&#47;1024=513.0156936645508 -- 513 MB<br>67125320&#47;1024&#47;1024=64.01569366455078 -- 64 MB<br><br>可以看到offset最大可以支持2^32-1(4294967295)<br><br>如果我有什么理解不对或操作不当的地方，可以指出来～<br>谢谢～<br>","like_count":0},{"had_liked":false,"id":339630,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1648260752,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648260752","product_id":100056701,"comment_content":"统计总PV，使用的就是string类型的incr命令. 应该是最简单的统计场景了吧","like_count":0},{"had_liked":false,"id":339598,"user_name":"张潇赟","can_delete":false,"product_type":"c1","uid":1132192,"ip_address":"","ucode":"1A45B57F9E0723","user_header":"https://static001.geekbang.org/account/avatar/00/11/46/a0/aa6d4ecd.jpg","comment_is_top":false,"comment_ctime":1648214571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648214571","product_id":100056701,"comment_content":"感觉第二种场景的难点会转义到怎么计算score上","like_count":0},{"had_liked":false,"id":338463,"user_name":"尽人事","can_delete":false,"product_type":"c1","uid":1729533,"ip_address":"","ucode":"F73B8CFD83E0F1","user_header":"https://static001.geekbang.org/account/avatar/00/1a/63/fd/d700d6ac.jpg","comment_is_top":false,"comment_ctime":1647509050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647509050","product_id":100056701,"comment_content":"HyperLogLog 基数统计就是指统计一个集合中不重复的元素个数 能满足不重复吗？","like_count":0},{"had_liked":false,"id":336048,"user_name":"会飞的鱼","can_delete":false,"product_type":"c1","uid":2220587,"ip_address":"","ucode":"9498D63BA769F3","user_header":"https://static001.geekbang.org/account/avatar/00/21/e2/2b/5eab1490.jpg","comment_is_top":false,"comment_ctime":1645867551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645867551","product_id":100056701,"comment_content":"用户黑名单的存储和统计，可以使用BloomFilter，可以极大地节省内存，在允许出现极小失误率的情况下可以使用","like_count":0},{"had_liked":false,"id":333872,"user_name":"日月星辰","can_delete":false,"product_type":"c1","uid":1796332,"ip_address":"","ucode":"4E9F48153B2D8B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/68/ec/eb0ebbb6.jpg","comment_is_top":false,"comment_ctime":1644568193,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1644568193","product_id":100056701,"comment_content":"我们可以计算一下记录了 10 天签到情况后的内存开销。每天使用 1 个 1 亿位的 Bitmap，大约占 12MB 的内存（10^8&#47;8&#47;1024&#47;1024），<br><br>这里不太懂，是怎么计算的 ??? ","like_count":0,"discussions":[{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557776,"discussion_content":"1亿个bit 位，8bit为一个字节，明白了吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647959098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333855,"user_name":"日月星辰","can_delete":false,"product_type":"c1","uid":1796332,"ip_address":"","ucode":"4E9F48153B2D8B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/68/ec/eb0ebbb6.jpg","comment_is_top":false,"comment_ctime":1644564337,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644564337","product_id":100056701,"comment_content":"使用 SortedSet 进行排序统计的时候也会出现 List 那样的问题吧，比如现在按照权重从大到小排序，取到了第二页，如果进来一个更大权重的数据，那不是还会取到旧数据吗？","like_count":0},{"had_liked":false,"id":325771,"user_name":"树心","can_delete":false,"product_type":"c1","uid":1589523,"ip_address":"","ucode":"6C329F0FF798B9","user_header":"https://static001.geekbang.org/account/avatar/00/18/41/13/ab14ad25.jpg","comment_is_top":false,"comment_ctime":1639124791,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1639124791","product_id":100056701,"comment_content":"从上节开始是5节“数据结构”相关的课程（第11-15小节）。前置课程是第2小节。<br>首先是常用的string数据类型（第11节），string类型耗费内存大的原因是元数据过大，比例能高达70%。学习第2节时没看懂的一些内容，如压缩列表的使用和原理在这节有讲解。<br>Redis还可以支持统计场景（第12节），这节课实战性很强，我觉得帮助很大，不仅知道了Redis支持bitmap、hyperloglog这样的扩展数据结构，还知道了Redis中的set、hash、bitmap、hyperloglog这些数据结构还能支持统计功能，很有意思。","like_count":0},{"had_liked":false,"id":314359,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1632984691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632984691","product_id":100056701,"comment_content":"redis用于实际业务场景，要根据数据量大小和单个数据占用空间大小来选择使用合适的数据类型。<br>如果是做聚合统计，求交集、并集、差集，就需要用Set类型。<br><br>如果是做排序统计，可以用List类型和Sorted Sort类型，List是按照自动插入顺序排布数据的，而Sorted Sort是按照手动自定义权重进行排序的。<br>如果是二值状态统计，最好使用bitMap，因为bitMap中每一个数据只占据1位的内存空间，并且可以按位做与运算和异或运算，也可以做BITCOUNT操作，很适合签到的业务场景，比如统计用户签到总天数，连续签到天数。<br>如果是基数统计，可以使用Set或者Hash，但是会消耗很大的内存空间，使用HyperLogLog可以节省空间。<br><br>对于大数据的业务场景，需要使用更加节省空间的数据存储方式，比如：bitMap和HyperLogLog，特别是二值状态统计和基数统计，如果能够使用1位空间来存储抽象的业务指标，那么就应该使用更加节省空间的数据结构。","like_count":0},{"had_liked":false,"id":307402,"user_name":"chenjia","can_delete":false,"product_type":"c1","uid":1339409,"ip_address":"","ucode":"61983C29FF4987","user_header":"https://static001.geekbang.org/account/avatar/00/14/70/11/42cf8f9d.jpg","comment_is_top":false,"comment_ctime":1629084197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629084197","product_id":100056701,"comment_content":"感觉HLL的误差太大了，如果能到万分位就好了","like_count":0},{"had_liked":false,"id":306709,"user_name":"王九荣","can_delete":false,"product_type":"c1","uid":1110189,"ip_address":"","ucode":"3C87DF4F7CEE10","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/ad/653db0f4.jpg","comment_is_top":false,"comment_ctime":1628675686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628675686","product_id":100056701,"comment_content":"老师您好，我使用 PFADD index_uv 100021增加值后查看使用内存值不变为什么啊","like_count":0},{"had_liked":false,"id":306217,"user_name":"Geek_f71330","can_delete":false,"product_type":"c1","uid":1617615,"ip_address":"","ucode":"40F8CD661E8F59","user_header":"https://static001.geekbang.org/account/avatar/00/18/ae/cf/6186d936.jpg","comment_is_top":false,"comment_ctime":1628435946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628435946","product_id":100056701,"comment_content":"这章老师主要讲了redis高级数据结构应用场景，主要有bitmap用于统计，sorted set用于分页，hyperLogLog用于概率统计。更多用途还需要自己去深入了解。","like_count":0},{"had_liked":false,"id":305556,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1628046239,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1628046239","product_id":100056701,"comment_content":"如果在统计用户签到的时候<br>将使用命令改为<br>SETBIT uid:sign:20200803 3000 1<br>是不是方便统计呢,有没有弊端?","like_count":0,"discussions":[{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557779,"discussion_content":"你这个3000 是啥意思？用户id？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647959154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303066,"user_name":"小司","can_delete":false,"product_type":"c1","uid":1159233,"ip_address":"","ucode":"5321B36258EAA2","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/41/fa060608.jpg","comment_is_top":false,"comment_ctime":1626577004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626577004","product_id":100056701,"comment_content":"每个存储都有特定领域的使用场景，切勿乱用，大数据统计druid，clickhouse等不香吗？redis主要还是用于缓存数据，缩短数据的访问时长…","like_count":0},{"had_liked":false,"id":292373,"user_name":"BertGeek","can_delete":false,"product_type":"c1","uid":1452799,"ip_address":"","ucode":"8E1D72C9F9778C","user_header":"https://static001.geekbang.org/account/avatar/00/16/2a/ff/a9d72102.jpg","comment_is_top":false,"comment_ctime":1620798192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620798192","product_id":100056701,"comment_content":"Redis 博大精深，虽然简单，但从作者的讲解不同场合选择适合的类型很重要！","like_count":0},{"had_liked":false,"id":289647,"user_name":"夏天","can_delete":false,"product_type":"c1","uid":2542376,"ip_address":"","ucode":"5F224DDAC94DFF","user_header":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","comment_is_top":false,"comment_ctime":1619107835,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1619107835","product_id":100056701,"comment_content":"看到大家有疑问这些数据统计功能在 Redis 上有用吗？<br><br>我来举个真实的例子吧<br><br>业务需求，商品详情页显示最近半小时有多少用户浏览？<br><br>用 sort set 就很好实现了<br>ZADD ｛goods_id｝ {timestamp} {account}<br><br>以每个商品为 key。添加用户访问时的时间戳。<br><br>ZLEXCOUNT {goods_id} {min_timestamp} {max_timestamp}<br><br>或<br><br>ZRANGEBYSCORE {goods_id} {min_timestamp} {max_timestamp}<br><br>通过分数范围查询，获取数量或者数值<br><br>唯一麻烦点在于过期。可以把 key 过期时间设置为夜间。留意时间叉开，避免批量过期阻塞。","like_count":0},{"had_liked":false,"id":286221,"user_name":"guoqp","can_delete":false,"product_type":"c1","uid":1107066,"ip_address":"","ucode":"B12A5757215D0E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epRVT3U6UOpRAoOOYMm0flMeX4P1VJpSnZBlaBvdW4KhWKr0BunLFlCxibdHc9s6VArA124FpwzRiaw/132","comment_is_top":false,"comment_ctime":1617198398,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1617198398","product_id":100056701,"comment_content":"老师，咨询个问题，最近我们线上redis出现一种情况：redis有170万个key，每个key的value有500多个元素，在进行添加字段（添加value元素数量）的时候，占用内存空间成几何增长，10分钟就增长了20～30G的内存空间，但实际增加的字段本身都不到1G，怀疑是大key再增加字段的时候不是实际增加内容的大小，但不知道具体原因，求解，谢谢","like_count":0,"discussions":[{"author":{"id":2797976,"avatar":"","nickname":"Geek_323a60","note":"","ucode":"CDC276EC255411","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581890,"discussion_content":"用的哪种存储结构呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659062006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281250,"user_name":"念","can_delete":false,"product_type":"c1","uid":1113818,"ip_address":"","ucode":"866A800D49C498","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/da/01cfbdc6.jpg","comment_is_top":false,"comment_ctime":1614660690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614660690","product_id":100056701,"comment_content":"对于需要知道用户历史的签到记录是怎么取到数据的","like_count":0},{"had_liked":false,"id":276861,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1612159014,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1612159014","product_id":100056701,"comment_content":"在面对需要展示最新列表、排行榜等场景时，如果数据更新频繁或者需要分页显示，建议你优先考虑使用 Sorted Set。<br><br>排行榜场景，如果排行榜有变化，且有分页查询的如何处理呢？ <br>比如 按照用户得分（其他人可给用户增加分数）情况分页展示数据， 一个用户得分score就是变化的。<br>----rediskey  用户id  score---<br>请教一下老师和各位同学，如何设计呢？","like_count":0},{"had_liked":false,"id":276542,"user_name":"Cydeer","can_delete":false,"product_type":"c1","uid":1364986,"ip_address":"","ucode":"5E6DC0909D5916","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/eOb0Z9PVwFnfZthnxvYzL3uIoXZXsDZHaZQS97beFNyqVskWEeumxputYTAUGLqsuWG1f9ApV8c1BaXHkMibIRg/132","comment_is_top":false,"comment_ctime":1611994587,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1611994587","product_id":100056701,"comment_content":"关于Sorted Set排序的时候使用ZRANGEBYSCORE comments N-9 N命令能够确保返回10条记录吗？如果说N-9到N之间不足10条或者超过10条怎么办？毕竟分值是可以重复的，而且不能保证分值是连续的。","like_count":0,"discussions":[{"author":{"id":1113818,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fe/da/01cfbdc6.jpg","nickname":"念","note":"","ucode":"866A800D49C498","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352237,"discussion_content":"是啊，新增了数据取按页数取的好像也没错吧，分页不是也是取最新的吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614660512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2412487,"avatar":"https://static001.geekbang.org/account/avatar/00/24/cf/c7/789f7d18.jpg","nickname":"对方正在输入中...","note":"","ucode":"428A6E46F95D05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350344,"discussion_content":"懂了，是不是这个意思，只要保证最新的递增1就好了，不是说非要以时间戳作为score，只是保证最新的记录的score最大，且以1递增","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613816856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2412487,"avatar":"https://static001.geekbang.org/account/avatar/00/24/cf/c7/789f7d18.jpg","nickname":"对方正在输入中...","note":"","ucode":"428A6E46F95D05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350342,"discussion_content":"同问，希望老师能解答一下\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613816721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274681,"user_name":"💢 星星💢","can_delete":false,"product_type":"c1","uid":1254392,"ip_address":"","ucode":"A402B765222C35","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","comment_is_top":false,"comment_ctime":1611124245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611124245","product_id":100056701,"comment_content":"老师，现在我有一个需求想用redis做，就是我通过接口得到表的数据，是json格式的，由于不能共库，而且数据需要隔断时间更新重新去接口过去！而且有很多张表的数据，每张表数据，几万，十几万，几十万，不等！这样的数据我想放入redis中，事后取出来进行打包下载！我想问，放入redis中大量的json格式数据，针对这样的数据，我用redis应该怎么处理？","like_count":0},{"had_liked":false,"id":272122,"user_name":"胡圣威","can_delete":false,"product_type":"c1","uid":2024602,"ip_address":"","ucode":"5060312363E44F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/FIvl6uib6D884L6gWqCNUrJZ3ia3774LlqjMfgdwZPibdqiaPVn0yoz7ZYiclm21XDvLL4NQ5qkAbj0FlgMyTwfcibQQ/132","comment_is_top":false,"comment_ctime":1609940213,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1609940213","product_id":100056701,"comment_content":"关于 HyperLogLog 的具体实现原理的链接，点不开<br>","like_count":0,"discussions":[{"author":{"id":2017580,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c9/2c/9ed40921.jpg","nickname":"BOB","note":"","ucode":"E86596709EAB1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340947,"discussion_content":"需要翻墙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610211733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257385,"user_name":"李建贵","can_delete":false,"product_type":"c1","uid":1114814,"ip_address":"","ucode":"BC967D4C3F4F50","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/be/bc2ca09d.jpg","comment_is_top":false,"comment_ctime":1603952789,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1603952789","product_id":100056701,"comment_content":"排序统计的例子没看懂，为啥ZRANGEBYSCORE分页不会有问题","like_count":0,"discussions":[{"author":{"id":2187290,"avatar":"https://static001.geekbang.org/account/avatar/00/21/60/1a/7f626eed.jpg","nickname":"银瀛","note":"","ucode":"418299AFE5919A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319466,"discussion_content":"因为每次查询都是基于权重，这个例子是时间。比如20191201080000-20191201223000之间的数据，查询条件不变，每次结果就一样。而list是根据index，链表改变了长度，你取1-3之间位置数据就不一样了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1604035941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1192724,"avatar":"https://static001.geekbang.org/account/avatar/00/12/33/14/78104f1f.jpg","nickname":"Just Do IT","note":"","ucode":"1EAD92510FA7BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2187290,"avatar":"https://static001.geekbang.org/account/avatar/00/21/60/1a/7f626eed.jpg","nickname":"银瀛","note":"","ucode":"418299AFE5919A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347159,"discussion_content":"变了 恰巧才是对的啊   第二页一成不变反而觉得奇怪了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612167003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":319466,"ip_address":""},"score":347159,"extra":""},{"author":{"id":1113818,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fe/da/01cfbdc6.jpg","nickname":"念","note":"","ucode":"866A800D49C498","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1192724,"avatar":"https://static001.geekbang.org/account/avatar/00/12/33/14/78104f1f.jpg","nickname":"Just Do IT","note":"","ucode":"1EAD92510FA7BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352238,"discussion_content":"我也觉得，新增了数据，一页的数据本来就应该推到第二页吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614660605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":347159,"ip_address":""},"score":352238,"extra":""},{"author":{"id":2948634,"avatar":"","nickname":"Geek_275fa9","note":"","ucode":"E08AB55F59EF59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1113818,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fe/da/01cfbdc6.jpg","nickname":"念","note":"","ucode":"866A800D49C498","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557781,"discussion_content":"但是推到第二页是旧数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647959250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":352238,"ip_address":""},"score":557781,"extra":""}]}]},{"had_liked":false,"id":254953,"user_name":"造梦师","can_delete":false,"product_type":"c1","uid":1983429,"ip_address":"","ucode":"705FCED828DC71","user_header":"https://static001.geekbang.org/account/avatar/00/1e/43/c5/288c59ab.jpg","comment_is_top":false,"comment_ctime":1603240931,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603240931","product_id":100056701,"comment_content":"hash set 这些集合类型的数据容纳有上线吗","like_count":0},{"had_liked":false,"id":252671,"user_name":"大饶Raysir","can_delete":false,"product_type":"c1","uid":1589208,"ip_address":"","ucode":"0AFA191420A30D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITcwicqBDYzXtLibUtian172tPs7rJpqG1Vab4oGjnguA9ziaYjDCILSGaS6qRiakvRdUEhdmSG0BGPKw/132","comment_is_top":false,"comment_ctime":1602429170,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1602429170","product_id":100056701,"comment_content":"看了@慎独明强同学的问题和课代表的回答，不知道理解的对不对，10天对应bitmap10个key，每个key里存储了1亿位用户是否登录，查询某个用户10天是否连续登录时，根据用户ID hash计算出对应的偏移位，然后对10个key进行与操作即可。<br>老师文章里对bitmap的key的描述，看着像是每个用户每天都是一个key，加起来得10亿key了吧……，想知道bitmap的key是怎么构成的","like_count":0,"discussions":[{"author":{"id":2347217,"avatar":"","nickname":"Geek_b68480","note":"","ucode":"952E73AC7A8873","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332532,"discussion_content":"每天的日期作为 key，每个 key 对应一个 1 亿位的 Bitmap，每一个 bit 对应一个用户当天的签到情况。哪里说每个用户每天都是一个key了？SETBIT{date} {userid} 1 userid是偏移量 date才是key 其实你可以把它想象成一个json，类似这样 {&#34;20201208&#34;:[1,2,3,4,5,6]}","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607253523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349504,"discussion_content":"日期是key，用户是bitmap的位，第0位是1表示0号用户签到，第1位是0表示1号用户没签到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613272257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246033,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1599139289,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1599139289","product_id":100056701,"comment_content":"我在生产环境下曾经用过bitmap来做，但是由于userId初始值太大了，导致前面的位没有对应用户，但也要占用空间，每天一个key，虽然用户数量不大，但是占用的位数却很多，所以用了两天就放弃了，因为我们的redis内存较小，也想过hash处理一下userId，尽量能够从1开始连续，但是hash以后又怕冲突，所以不知道怎么来处理了","like_count":0,"discussions":[{"author":{"id":1975581,"avatar":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfCnhAYmvAsNcYKyNLUJG5iax9BKgXAJzxypEJGRVwhibjZ53S5icgEDibn8uqrqwsKcxzEXfRRUXTdqjA/132","nickname":"岳宜波","note":"","ucode":"5043CA250FDCB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304643,"discussion_content":"每个userId都减一下初始值就就可以了","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1599633457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1177727,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f8/7f/406dd97d.jpg","nickname":"张嵩","note":"","ucode":"9A4F9C009F5F18","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304545,"discussion_content":"分割key，类似一致性hash，比如每1kw用户一个key，mod完落入。可以有效解决稀疏问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599612362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1177727,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f8/7f/406dd97d.jpg","nickname":"张嵩","note":"","ucode":"9A4F9C009F5F18","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":338561,"discussion_content":"跟上一节的二级编码异曲同工之妙","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609313945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304545,"ip_address":""},"score":338561,"extra":""}]}]},{"had_liked":false,"id":245775,"user_name":"Lemon","can_delete":false,"product_type":"c1","uid":2136414,"ip_address":"","ucode":"E52BB361B69825","user_header":"https://static001.geekbang.org/account/avatar/00/20/99/5e/33481a74.jpg","comment_is_top":false,"comment_ctime":1599047915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599047915","product_id":100056701,"comment_content":"受益良多","like_count":0},{"had_liked":false,"id":245669,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1599020990,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599020990","product_id":100056701,"comment_content":"精彩","like_count":0}]}