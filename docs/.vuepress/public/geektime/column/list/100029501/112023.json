{"id":112023,"title":"23丨索引的概览：用还是不用索引，这是一个问题","content":"<p>提起优化SQL，你可能会把它理解为优化索引。简单来说这也不算错，索引在SQL优化中占了很大的比重。索引用得好，可以将SQL查询的效率提升10倍甚至更多。但索引是万能的吗？既然索引可以提升效率，只要创建索引不就好了吗？实际上，在有些情况下，创建索引反而会降低效率。</p><p>今天我们就来讲一下索引，索引涉及到的内容比较多，今天先来对索引有个整体的认知。</p><ol>\n<li>什么情况下创建索引，什么时候不需要索引？</li>\n<li>索引的种类有哪些？</li>\n</ol><p>索引的原理很好理解，在今天的内容里，我依然会通过SQL查询实验验证今天的内容，帮你进一步加深理解。</p><h2>索引是万能的吗？</h2><p>首先我们需要了解什么是索引（Index）。数据库中的索引，就好比一本书的目录，它可以帮我们快速进行特定值的定位与查找，从而加快数据查询的效率。</p><p>索引就是帮助数据库管理系统高效获取数据的数据结构。</p><p>如果我们不使用索引，就必须从第1条记录开始扫描，直到把所有的数据表都扫描完，才能找到想要的数据。既然如此，如果我们想要快速查找数据，就只需要创建更多的索引就好了呢？</p><p>其实<strong>索引不是万能的，在有些情况下使用索引反而会让效率变低</strong>。</p><p>索引的价值是帮我们从海量数据中找到想要的数据，如果数据量少，那么是否使用索引对结果的影响并不大。</p><!-- [[[read_end]]] --><p>在数据表中的数据行数比较少的情况下，比如不到1000行，是不需要创建索引的。另外，当数据重复度大，比如高于10%的时候，也不需要对这个字段使用索引。我之前讲到过，如果是性别这个字段，就不需要对它创建索引。这是为什么呢？如果你想要在100万行数据中查找其中的50万行（比如性别为男的数据），一旦创建了索引，你需要先访问50万次索引，然后再访问50万次数据表，这样加起来的开销比不使用索引可能还要大。</p><p>当然，空口无凭，我们来做两个实验，更直观地了解索引。</p><h3>实验1：数据行数少的情况下，索引效率如何</h3><p>我在<a href=\"https://pan.baidu.com/s/1X47UAx6EWasYLLU91RYHKQ\">百度网盘</a>上提供了数据表，heros_without_index.sql 和 heros_with_index.sql，提取码为wxho。</p><p>在第一个数据表中，除了自增的id以外没有建立额外的索引。第二张数据表中，我对name字段建立了唯一索引。</p><p>heros数据表一共有69个英雄，数据量很少。当我们对name进行条件查询的时候，我们观察一下创建索引前后的效率。</p><pre><code>SELECT id, name, hp_max, mp_max FROM heros_without_index WHERE name = '刘禅'\n</code></pre><p>运行结果（1条数据，运行时间0.072s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/c5/e4/c5e0f02544f241d45ccac40e70a56be4.png?wh=926*129\" alt=\"\"><br>\n我对name字段建立索引后，再进行查询：</p><pre><code>SELECT id, name, hp_max, mp_max FROM heros_with_index WHERE name = '刘禅'\n</code></pre><p>运行结果（1条数据，运行时间0.080s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/78/e8/782190bdc5120b40727fc8d28d9a35e8.png?wh=923*126\" alt=\"\"><br>\n你能看到运行结果相同，但是创建了name字段索引的效率比没有创建索引时效率更低。在数据量不大的情况下，索引就发挥不出作用了。</p><h3>实验2：性别（男或女）字段真的不应该创建索引吗？</h3><p>如果一个字段的取值少，比如性别这个字段，通常是不需要创建索引的。那么有没有特殊的情况呢？</p><p>下面我们来看一个例子，假设有一个女儿国，人口总数为100万人，男性只有10个人，也就是占总人口的10万分之1。</p><p>女儿国的人口数据表user_gender见百度网盘中的user_gender.sql。其中数据表中的user_gender字段取值为0或1，0代表女性，1代表男性。</p><p>如果我们要筛选出这个国家中的男性，可以使用：</p><pre><code>SELECT * FROM user_gender WHERE user_gender = 1\n</code></pre><p>运行结果（10条数据，运行时间0.696s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/34/b4/34355803b19fb7f460cf0aad1d8bf2b4.png?wh=892*301\" alt=\"\"><br>\n你能看到在未创建索引的情况下，运行的效率并不高。如果我们针对user_gender字段创建索引呢？</p><pre><code>SELECT * FROM user_gender WHERE user_gender = 1\n</code></pre><p>同样是10条数据，运行结果相同，时间却缩短到了0.052s，大幅提升了查询的效率。</p><p>其实通过这两个实验你也能看出来，索引的价值是帮你快速定位。如果想要定位的数据有很多，那么索引就失去了它的使用价值，比如通常情况下的性别字段。不过有时候，我们还要考虑这个字段中的数值分布的情况，在实验2中，性别字段的数值分布非常特殊，男性的比例非常少。</p><p>我们不仅要看字段中的数值个数，还要根据数值的分布情况来考虑是否需要创建索引。</p><h2>索引的种类有哪些？</h2><p>虽然使用索引的本质目的是帮我们快速定位想要查找的数据，但实际上，索引有很多种类。</p><p>从功能逻辑上说，索引主要有4种，分别是普通索引、唯一索引、主键索引和全文索引。</p><p>普通索引是基础的索引，没有任何约束，主要用于提高查询效率。唯一索引就是在普通索引的基础上增加了数据唯一性的约束，在一张数据表里可以有多个唯一索引。主键索引在唯一索引的基础上增加了不为空的约束，也就是NOT NULL+UNIQUE，一张表里最多只有一个主键索引。全文索引用的不多，MySQL自带的全文索引只支持英文。我们通常可以采用专门的全文搜索引擎，比如ES(ElasticSearch)和Solr。</p><p>其实前三种索引（普通索引、唯一索引和主键索引）都是一类索引，只不过对数据的约束性逐渐提升。在一张数据表中只能有一个主键索引，这是由主键索引的物理实现方式决定的，因为数据存储在文件中只能按照一种顺序进行存储。但可以有多个普通索引或者多个唯一索引。</p><p>按照物理实现方式，索引可以分为2种：聚集索引和非聚集索引。我们也把非聚集索引称为二级索引或者辅助索引。</p><p>聚集索引可以按照主键来排序存储数据，这样在查找行的时候非常有效。举个例子，如果是一本汉语字典，我们想要查找“数”这个字，直接在书中找汉语拼音的位置即可，也就是拼音“shu”。这样找到了索引的位置，在它后面就是我们想要找的数据行。</p><p>非聚集索引又是什么呢？</p><p>在数据库系统会有单独的存储空间存放非聚集索引，这些索引项是按照顺序存储的，但索引项指向的内容是随机存储的。也就是说系统会进行两次查找，第一次先找到索引，第二次找到索引对应的位置取出数据行。非聚集索引不会把索引指向的内容像聚集索引一样直接放到索引的后面，而是维护单独的索引表（只维护索引，不维护索引指向的数据），为数据检索提供方便。我们还以汉语字典为例，如果想要查找“数”字，那么按照部首查找的方式，先找到“数”字的偏旁部首，然后这个目录会告诉我们“数”字存放到第多少页，我们再去指定的页码找这个字。</p><p>聚集索引指表中数据行按索引的排序方式进行存储，对查找行很有效。只有当表包含聚集索引时，表内的数据行才会按找索引列的值在磁盘上进行物理排序和存储。每一个表只能有一个聚集索引，因为数据行本身只能按一个顺序存储。</p><p>聚集索引与非聚集索引的原理不同，在使用上也有一些区别：</p><ol>\n<li>聚集索引的叶子节点存储的就是我们的数据记录，非聚集索引的叶子节点存储的是数据位置。非聚集索引不会影响数据表的物理存储顺序。</li>\n<li>一个表只能有一个聚集索引，因为只能有一种排序存储的方式，但可以有多个非聚集索引，也就是多个索引目录提供数据检索。</li>\n<li>使用聚集索引的时候，数据的查询效率高，但如果对数据进行插入，删除，更新等操作，效率会比非聚集索引低。</li>\n</ol><h3>实验3：使用聚集索引和非聚集索引的查询效率</h3><p>还是针对刚才的user_gender数据表，我们来看下使用聚集索引和非聚集索引的查询效率有什么区别。在user_gender表中，我设置了user_id为主键，也就是聚集索引的字段是user_id。这里我们查询下user_id=90001的用户信息：</p><pre><code>SELECT user_id, user_name, user_gender FROM user_gender WHERE user_id = 900001\n</code></pre><p>运行结果（1条数据，运行时间0.043s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/6a/d1/6a9d1c1ab9315f2c77b81799f08b6ed1.png?wh=895*128\" alt=\"\"><br>\n我们再直接对user_name字段进行条件查询，此时user_name字段没有创建索引：</p><pre><code>SELECT user_id, user_name, user_gender FROM user_gender WHERE user_name = 'student_890001'\n</code></pre><p>运行结果（1条数据，运行时间0.961s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/81/a0/817979acbd125773405604b8e86d06a0.png?wh=891*128\" alt=\"\"><br>\n你能看出对没有建立索引的字段进行条件查询，查询效率明显降低了。</p><p>然后我们对user_name字段创建普通索引，进行SQL查询：</p><pre><code>SELECT user_id, user_name, user_gender FROM user_gender WHERE user_name = 'student_890001'\n</code></pre><p>运行结果（1条数据，运行时间0.050s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/9f/0f/9f6be9d6ebeff6e574687923085a670f.png?wh=889*127\" alt=\"\"><br>\n通过对这3次SQL查询结果的对比，我们可以总结出以下两点内容：</p><ol>\n<li>对WHERE子句的字段建立索引，可以大幅提升查询效率。</li>\n<li>采用聚集索引进行数据查询，比使用非聚集索引的查询效率略高。如果查询次数比较多，还是尽量使用主键索引进行数据查询。</li>\n</ol><p>除了业务逻辑和物理实现方式，索引还可以按照字段个数进行划分，分成单一索引和联合索引。</p><p>索引列为一列时为单一索引；多个列组合在一起创建的索引叫做联合索引。</p><p>创建联合索引时，我们需要注意创建时的顺序问题，因为联合索引(x, y, z)和(z, y, x)在使用的时候效率可能会存在差别。</p><p>这里需要说明的是联合索引存在<strong>最左匹配原则</strong>，也就是按照最左优先的方式进行索引的匹配。比如刚才举例的(x, y, z)，如果查询条件是WHERE x=1 AND y=2 AND z=3，就可以匹配上联合索引；如果查询条件是 WHERE y=2，就无法匹配上联合索引。</p><h3>实验4：联合索引的最左原则</h3><p>还是针对user_gender数据表，我们把user_id和user_name字段设置为联合主键，然后看下SQL查询效率有什么区别。</p><pre><code>SELECT user_id, user_name, user_gender FROM user_gender WHERE user_id = 900001 AND user_name = 'student_890001'\n</code></pre><p>运行结果（1条数据，运行时间0.046s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/70/7d/704d1018a33b819828c879eb983f2f7d.png?wh=895*129\" alt=\"\"></p><pre><code>SELECT user_id, user_name, user_gender FROM user_gender WHERE user_id = 900001\n</code></pre><p>运行结果（1条数据，运行时间0.046s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/cc/e6/cc709a46717a58e22d25a2556b8fdee6.png?wh=894*127?wh=894*127\" alt=\"\"><br>\n我们再来看下普通的条件查询是什么样子的：</p><pre><code>SELECT user_id, user_name, user_gender FROM user_gender WHERE user_name = 'student_890001'\n</code></pre><p>运行结果（1条数据，运行时间0.943s）：</p><p><img src=\"https://static001.geekbang.org/resource/image/cc/e6/cc709a46717a58e22d25a2556b8fdee6.png?wh=894*127?wh=894*127\" alt=\"\"><br>\n你能看到当我们使用了联合索引(user_id, user_name)的时候，在WHERE子句中对联合索引中的字段user_id和user_name进行条件查询，或者只对user_id进行查询，效率基本上是一样的。当我们对user_name进行条件查询时，效率就会降低很多，这是因为根据联合索引的最左原则，user_id在user_name的左侧，如果没有使用user_id，而是直接使用user_name进行条件查询，联合索引就会失效。</p><h2>总结</h2><p>使用索引可以帮助我们从海量的数据中快速定位想要查找的数据，不过索引也存在一些不足，比如占用存储空间、降低数据库写操作的性能等，如果有多个索引还会增加索引选择的时间。当我们使用索引时，需要平衡索引的利（提升查询效率）和弊（维护索引所需的代价）。</p><p>在实际工作中，我们还需要基于需求和数据本身的分布情况来确定是否使用索引，尽管索引不是万能的，但数据量大的时候不使用索引是不可想象的，毕竟索引的本质，是帮助我们提升数据检索的效率。</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/57/7c46394b6a09ba83befe2d18e466c957.jpg?wh=3341*2086\" alt=\"\"><br>\n今天的内容到这里就结束了，给你留个问题。关于联合索引的最左原则指的是什么？在使用联合索引时，有哪些需要注意的地方呢？</p><p>欢迎你在评论区写下你的答案，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","neighbors":{"left":{"article_title":"22丨反范式设计：3NF有什么不足，为什么有时候需要反范式设计？","id":111444},"right":{"article_title":"24丨索引的原理：我们为什么用B+树来做索引？","id":112298}},"comments":[{"had_liked":false,"id":120048,"user_name":"DZ","can_delete":false,"product_type":"c1","uid":1132240,"ip_address":"","ucode":"452555FA0F9E0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/46/d0/6bafd7d4.jpg","comment_is_top":false,"comment_ctime":1564762773,"is_pvip":false,"replies":[{"id":"47098","content":"这个比喻解释的很形象，另外在这个基础上还需要说明下：<br>1）SQL条件语句中的字段顺序不重要，因为在逻辑查询优化阶段会自动进行 查询重写。<br>2）如果我们遇到了范围条件查询，比如&lt;、&lt;=、&gt;、&gt;=、between等。那么范围列后的列就无法使用到索引","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1566633692,"ip_address":"","comment_id":120048,"utype":1}],"discussion_count":10,"race_medal":0,"score":"254967833237","product_id":100029501,"comment_content":"联合索引的最左原则就是说，索引是一种顺序结构，我们按照什么顺序创建索引，就只能按照这个顺序使用索引，这容易理解。<br><br>假设我们有X、Y、Z三个字段，创建联合索引（X, Y, Z），可以理解成，数据库按照不同的权重排列了XYZ，形成了一个新值。<br><br>如果把X、Y、Z分别类别成“百分位”、“十分位”和“个位”，则新值XYZ依次排列在索引上。<br><br>查询“X=9 AND Y=8 AND Z=7”的过程，就是在一个由小到大排列的数值序列中寻找“987”，可以很快找到。<br><br>查询“Y=8 AND Z=7”，就用不上索引了，因为可能存在187、287、387、487...，这样就必须扫描所有数值。<br><br>查询“Z=7 AND Y=8 AND X=9”，看上去所有字段都用上了，也可以按照百分位、十分位和个数的逻辑去利用索引，但SQL不会自动识别出联合索引顺序与联合查询的顺序，它会严格地按照字面顺序去套用索引，只要不匹配，就不用。<br><br>综上，使用联合索引的时候，字段顺序不能乱，查询字段可以少，但只能从右侧开始减少，不能从左侧。<br><br>这就像按顺序查数值，先找高位再找低位（索引扫描），如果先找十分位或者先找个位，那就只能每个数值都看一下（全扫描）。","like_count":60,"discussions":[{"author":{"id":1327313,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/d1/fb6f402a.jpg","nickname":"melon","note":"","ucode":"AFBE9426C10AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4511,"discussion_content":"对于你说的Z=7 AND Y=8 AND X=9  用不上联合索引我表示不赞同 ，如果都是等值查询 mysql 优化器会调整顺序的 ","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1565506137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1586771,"avatar":"https://static001.geekbang.org/account/avatar/00/18/36/53/1e797289.jpg","nickname":"Crush","note":"","ucode":"5E6D4EE02525D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1327313,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/d1/fb6f402a.jpg","nickname":"melon","note":"","ucode":"AFBE9426C10AFA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21873,"discussion_content":"对的，对于等值查询，mysql优化器会自动调整顺序的。比如（a,b,c,d)联合索引，查询条件 where a=1 and b= 2 and d >4 and c=3,mysql里也是用到了联合索引的。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1569549756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4511,"ip_address":""},"score":21873,"extra":""}]},{"author":{"id":1000060,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","nickname":"🄽🄸🅇🅄🅂","note":"","ucode":"853763C229A5AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3970,"discussion_content":"哇，总结的太好了。我补充一点点：创建联合索引的时候，最好是根据字段值的区分度来排序，区分度最大的字段放在联合索引的最左侧，区分度最小的字段放在联合索引的最右侧。这个也算是最左原则的内容吧","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1565011435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303983,"discussion_content":"“查询“Y=8 AND Z=7”，就用不上索引了，因为可能存在187、287、387、487...，这样就必须扫描所有数值。”\n目前认为这个例子不够准确，比如，查询 X=9 AND Y=8  为什么能使用索引？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599442250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461186,"discussion_content":"这个比喻解释的很形象，另外在这个基础上还需要说明下：\n1）SQL条件语句中的字段顺序不重要，因为在逻辑查询优化阶段会自动进行 查询重写。\n2）如果我们遇到了范围条件查询，比如&amp;lt;、&amp;lt;=、&amp;gt;、&amp;gt;=、between等。那么范围列后的列就无法使用到索引","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566633692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":105797,"discussion_content":"脑中有b+ tree  就不用啰哩巴嗦写这么多了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577489927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5551,"discussion_content":"第一次有人说出了最左原则是什么","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566352564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1439228,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/1iaykDMsDvUbd13DxewFGibSExGyNyzmHK8cciam9EH9RRWbhfSgMDPIbGP5hfe9hX0uTEkybhmic3fdpYVHXmRpJg/132","nickname":"pan","note":"","ucode":"7C95D66C95E1BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296516,"discussion_content":"所以，如果有x,y,z 的联合索引，查询条件为 y =2 and x =1 这种其实也是可以用到联合索引的。按照最左匹配原则来说？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596559442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1132240,"avatar":"https://static001.geekbang.org/account/avatar/00/11/46/d0/6bafd7d4.jpg","nickname":"DZ","note":"","ucode":"452555FA0F9E0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1439228,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/1iaykDMsDvUbd13DxewFGibSExGyNyzmHK8cciam9EH9RRWbhfSgMDPIbGP5hfe9hX0uTEkybhmic3fdpYVHXmRpJg/132","nickname":"pan","note":"","ucode":"7C95D66C95E1BA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296542,"discussion_content":"是的，逻辑查询优化阶段会自动进行查询重写。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596586193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296516,"ip_address":""},"score":296542,"extra":""}]},{"author":{"id":1433647,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e0/2f/3aee5f24.jpg","nickname":"宋雄斌","note":"","ucode":"52FA63AA616319","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289653,"discussion_content":"老师，但是我在Mysql8.0测试的时候，使用 >= 、 <= 和between 的时候  组合索引并没有停止匹配。这是为什么呀？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594172658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132471,"user_name":"峻铭","can_delete":false,"product_type":"c1","uid":1106202,"ip_address":"","ucode":"63AB23BADACA88","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/1a/20977779.jpg","comment_is_top":false,"comment_ctime":1568129778,"is_pvip":false,"replies":[{"id":"53373","content":"聚集索引是面向读取的设计，因为我们的数据会按照聚集索引的大小顺序写入到磁盘，因此聚集索引会存在存储顺序的问题。而我们更新，插入的内容往往都是随机的，这时如果我们还是用聚集索引，所有的记录就需要重新进行排序并重新写入到磁盘中，所以效率相比于非聚集索引可能会降低。<br>而非聚集索引只是存储索引，我们只需要更新这个索引即可，不需要对所有的记录重新排序。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1570429962,"ip_address":"","comment_id":132471,"utype":1}],"discussion_count":6,"race_medal":0,"score":"83172508402","product_id":100029501,"comment_content":"使用聚集索引的时候，数据的查询效率高，但如果对数据进行插入，删除，更新等操作，效率会比非聚集索引低。对这句话我不明白，为什么插入、删除、更新等操作，效率会比非聚集索引低，这三个操作内部都是先进行了查询的，聚集索引属于存储结构的物理索引，查询效率高，自然插入、删除、更新的效率也高啊。实在不解","like_count":20,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466957,"discussion_content":"聚集索引是面向读取的设计，因为我们的数据会按照聚集索引的大小顺序写入到磁盘，因此聚集索引会存在存储顺序的问题。而我们更新，插入的内容往往都是随机的，这时如果我们还是用聚集索引，所有的记录就需要重新进行排序并重新写入到磁盘中，所以效率相比于非聚集索引可能会降低。\n而非聚集索引只是存储索引，我们只需要更新这个索引即可，不需要对所有的记录重新排序。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570429962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254252,"avatar":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","nickname":"LIKE","note":"","ucode":"9DAB7F9051648A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297168,"discussion_content":"个人觉得文中描述会让人在理解上有歧义，就mysql InnoDB 来说表是一定有主键的，假设表同时有二级索引，表在增删改时，会影响到主键索引树和二级索引树，就同一张表的同一次操作来说，二级索引的更新时长，是要比主键索引的更新时长要短（主键索引树数据比较大，插入、删除可能会涉及页分裂、页合并等开销比二级索引大）。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596791847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1288985,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcFhGY0NV4kFzOSXWDHR2lrI2UbUP4Y016GOnpTH7dqSbicqJarX0pHxMsfLopRiacKEPXLx7IHHqg/132","nickname":"一路前行","note":"","ucode":"32D3C715690783","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271032,"discussion_content":"自增主键就不会有这种情况吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590074090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1716015,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/2f/2f/f434b676.jpg","nickname":"背靠咸🐟遇见🐱","note":"","ucode":"30113675864F23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407878,"discussion_content":"弱弱问一句，最后记录更新了，是不是聚集索引对应的存储顺序也得变化？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635142691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037422,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/kjMRia1qRWgOktyWPSJIIqfkkpiakco1nCQnrI2n43Sicn94tJVzgQtzFXCTOTuwYww64Umkn6WSwgBdbJICfPs3Q/132","nickname":"feng*","note":"","ucode":"3080426972F9C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300519,"discussion_content":"就跟树的结构一样查着舒服，但是修改需要重新构建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598156912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1106202,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e1/1a/20977779.jpg","nickname":"峻铭","note":"","ucode":"63AB23BADACA88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12104,"discussion_content":"因为插入、删除、更新 会更新索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568467657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122169,"user_name":"Fargo","can_delete":false,"product_type":"c1","uid":1018174,"ip_address":"","ucode":"434FC4C5D61750","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/3e/1976b66f.jpg","comment_is_top":false,"comment_ctime":1565312761,"is_pvip":false,"replies":[{"id":"63558","content":"多谢分享","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577518115,"ip_address":"","comment_id":122169,"utype":1}],"discussion_count":2,"race_medal":0,"score":"74579756793","product_id":100029501,"comment_content":"老师没讲如何创建索引，可以参考https:&#47;&#47;www.runoob.com&#47;mysql&#47;mysql-index.html","like_count":18,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462129,"discussion_content":"多谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577518115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377795,"discussion_content":"https://dev.mysql.com/doc/refman/8.0/en/create-index.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622861618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210323,"user_name":"骑行的掌柜J","can_delete":false,"product_type":"c1","uid":1474214,"ip_address":"","ucode":"3163102651C653","user_header":"https://static001.geekbang.org/account/avatar/00/16/7e/a6/4e331ef4.jpg","comment_is_top":false,"comment_ctime":1587721267,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"48832361523","product_id":100029501,"comment_content":"发现陈老师没有细讲关于如何把百万条数据导入MySQL的方法，虽然评论里有朋友提了，陈老师也回答说用存储过程，但是掌柜查了还有其他方法，所以这里做了个汇总：https:&#47;&#47;blog.csdn.net&#47;weixin_41013322&#47;article&#47;details&#47;105658594  希望对大家有帮助","like_count":12,"discussions":[{"author":{"id":2962599,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/34/a7/52c4ea60.jpg","nickname":"年少挽滑稽世无双","note":"","ucode":"793DCBDE25A07B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587403,"discussion_content":"mark，关注了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663035378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3018714,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/0f/da/9ea4cf8e.jpg","nickname":"Geek_d7b2e1","note":"","ucode":"406350399898FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577870,"discussion_content":"我刚看怕CSDN上，这个博主的链接下的另外一个创建百万数据的方法，我看了第三篇就是我最近在用的方法。也给大家分享一下https://blog.csdn.net/weixin_41013322/article/details/105955223","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656400068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3018714,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/0f/da/9ea4cf8e.jpg","nickname":"Geek_d7b2e1","note":"","ucode":"406350399898FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577868,"discussion_content":"这个真的太有帮助了。之前需要百万级数据，同事说可以用kettle来做，当时没有时间了解这个，后面让同事写的脚本来做的数据，然后导入数据的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656399854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133110,"user_name":"Elliot","can_delete":false,"product_type":"c1","uid":1030070,"ip_address":"","ucode":"CC58A6FD2F338C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/b6/17103195.jpg","comment_is_top":false,"comment_ctime":1568362664,"is_pvip":false,"replies":[{"id":"53368","content":"因为二级索引（辅助索引）并不存储我们想要SELECT的具体数据，因此是通过二级索引想找到主键，然后再通过主键找到具体的数据。这种方式也称之为回表，是因为索引没有对SELECT查询的字段进行完全覆盖。","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1570429181,"ip_address":"","comment_id":133110,"utype":1}],"discussion_count":4,"race_medal":0,"score":"31633133736","product_id":100029501,"comment_content":"一旦创建了索引，你需要先访问 50 万次索引，然后再访问 5...<br><br>这句话还是不太理解，可以再详细解释一下吗？非常感谢","like_count":8,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467256,"discussion_content":"因为二级索引（辅助索引）并不存储我们想要SELECT的具体数据，因此是通过二级索引想找到主键，然后再通过主键找到具体的数据。这种方式也称之为回表，是因为索引没有对SELECT查询的字段进行完全覆盖。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570429181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012325,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","nickname":"雪飞鸿","note":"","ucode":"65D7B030828809","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14128,"discussion_content":"这里只是举例，实际情况，查询优化器会放弃使用索引改用全表扫描","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568728833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239546,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWiaZb7a2JAcIVlXYuZ3iaPfSF6vBbg3yUps6LKpsZarftyXufMHYKJmMKzH3bIpVkDAVNXE9q0oOw/132","nickname":"Mr_scx","note":"","ucode":"28B5CE68A5A339","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300388,"discussion_content":"那如果不是采用二级索引，而是采用聚集索引呢？那待查找的数据行不就在索引后面吗？那只要查找 50万次即可，不用先找到索引，再通过索引值找到具体的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598075901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1239546,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWiaZb7a2JAcIVlXYuZ3iaPfSF6vBbg3yUps6LKpsZarftyXufMHYKJmMKzH3bIpVkDAVNXE9q0oOw/132","nickname":"Mr_scx","note":"","ucode":"28B5CE68A5A339","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377796,"discussion_content":"聚集索引一般是唯一索引，参考：https://dev.mysql.com/doc/refman/5.7/en/innodb-index-types.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622861788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300388,"ip_address":""},"score":377796,"extra":""}]}]},{"had_liked":false,"id":119875,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564716769,"is_pvip":false,"replies":[{"id":"63597","content":"是的","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577520358,"ip_address":"","comment_id":119875,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23039553249","product_id":100029501,"comment_content":"使用联合索引时，如果可以使用索引覆盖，那就不用回表，查询性能更好了。","like_count":6,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461106,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577520358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054984,"avatar":"https://static001.geekbang.org/account/avatar/00/10/19/08/88b7c4dd.jpg","nickname":"0x0001","note":"","ucode":"9CED89A9E2A443","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42649,"discussion_content":"非聚集索引都会回表吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572743393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1054984,"avatar":"https://static001.geekbang.org/account/avatar/00/10/19/08/88b7c4dd.jpg","nickname":"0x0001","note":"","ucode":"9CED89A9E2A443","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160800,"discussion_content":"不用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580828373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42649,"ip_address":""},"score":160800,"extra":""}]},{"author":{"id":1032615,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c1/a7/5e66d331.jpg","nickname":"林彦","note":"","ucode":"5094CC6ED7B40C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3806,"discussion_content":"索引覆盖必须所有SELECT和WHERE子句里面用到的字段都有被索引或联合索引包含吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564826774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152938,"user_name":"梁","can_delete":false,"product_type":"c1","uid":1267198,"ip_address":"","ucode":"29A10759821D96","user_header":"https://static001.geekbang.org/account/avatar/00/13/55/fe/e8fb06fb.jpg","comment_is_top":false,"comment_ctime":1574126799,"is_pvip":false,"replies":[{"id":"63482","content":"对 位图索引适合","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577513662,"ip_address":"","comment_id":152938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14459028687","product_id":100029501,"comment_content":"“当数据重复度大，比如高于 10% 的时候，也不需要对这个字段使用索引。”，文中还举例到了“性别”字段，这类数据重复度大，不正好适合位图索引吗？","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474996,"discussion_content":"对 位图索引适合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577513662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123932,"user_name":"未来的胡先森","can_delete":false,"product_type":"c1","uid":1234682,"ip_address":"","ucode":"AFF193AC0E2E6C","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/fa/1f5bf642.jpg","comment_is_top":false,"comment_ctime":1565782569,"is_pvip":false,"replies":[{"id":"63972","content":"索引比喻的不错，计算机算是运用数学工具，帮我们自动化解决问题","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577606460,"ip_address":"","comment_id":123932,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14450684457","product_id":100029501,"comment_content":"计算机实际是对现实生活的一个抽象，正如索引来自于生活中的字典。","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462900,"discussion_content":"索引比喻的不错，计算机算是运用数学工具，帮我们自动化解决问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577606460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119845,"user_name":"阿锋","can_delete":false,"product_type":"c1","uid":1127761,"ip_address":"","ucode":"7AF449ABA89242","user_header":"https://static001.geekbang.org/account/avatar/00/11/35/51/c616f95a.jpg","comment_is_top":false,"comment_ctime":1564711975,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14449613863","product_id":100029501,"comment_content":"普通索引、唯一索引、主键索引和全文索引，它们对应聚集索引还是非聚集索引？","like_count":4,"discussions":[{"author":{"id":1501383,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIXY0VM0oTs6qIDEmswGibbX8sGUJ0iargaAYXcFVAiaPJfnobG4RZNW4MhpjP7X5CpyLNsy277J6MUg/132","nickname":"郑楚周","note":"","ucode":"CC811E4249620A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7085,"discussion_content":"主索引是聚集索引，其他是非聚集索引","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567346367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1857662,"avatar":"","nickname":"Geek_e656a6","note":"","ucode":"38105D9406A974","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340131,"discussion_content":"聚集索引也叫一级索引，非聚集索引为二级索引。一个表最多只能有一个聚集索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609912461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132348,"user_name":"Z.CC","can_delete":false,"product_type":"c1","uid":1330562,"ip_address":"","ucode":"38449AE7BFCE44","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/82/ee34cd66.jpg","comment_is_top":false,"comment_ctime":1568094402,"is_pvip":false,"replies":[{"id":"59847","content":"我写的存储过程插入的…","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1574761284,"ip_address":"","comment_id":132348,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10158028994","product_id":100029501,"comment_content":"100万条数据是怎么插入的。。。","like_count":3,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466891,"discussion_content":"我写的存储过程插入的…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574761284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297749,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJSYNNABBxXCme5FMGUYTPbvnT6IvpzPP3qiaSibZficAfabydnwWOV6LlQ4lAtF0aeN3ficv0S3iavmxQ/132","nickname":"wumin","note":"","ucode":"419A9FDDC9636D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25263,"discussion_content":"CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci\n-->修改为\nCHARACTER SET utf8 COLLATE utf8_general_ci 之后可以正常导入。\n导入方式:\nmysql -u root;\nuse test;\nsource user_gender.sql\n我的环境是rhel7.3,Server version: 5.5.52-MariaDB MariaDB Server","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570493066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122819,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1565534400,"is_pvip":false,"replies":[{"id":"63535","content":"大数据量插入的存储过程，我在专栏里应该有写","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577517235,"ip_address":"","comment_id":122819,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10155468992","product_id":100029501,"comment_content":"百度网盘下载真慢，另外请老师提供一个存储过程插入用户表。","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462416,"discussion_content":"大数据量插入的存储过程，我在专栏里应该有写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577517235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111985,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/b1/982ea185.jpg","nickname":"Frank","note":"","ucode":"9DADD72C193296","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316471,"discussion_content":"大量数据插入的存储过程，专栏内容在哪里哦？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603416046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304453,"user_name":"扭断翅膀的猪","can_delete":false,"product_type":"c1","uid":1251238,"ip_address":"","ucode":"E94AE44B950C91","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/a6/fae3dd91.jpg","comment_is_top":false,"comment_ctime":1627433377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5922400673","product_id":100029501,"comment_content":"举的性别不需要建立索引，太片面了。如果我就要取性别信息数量统计不需要回表操作，难道数据各占一半我就不需要建立索引？简直糟糕的栗子。","like_count":0},{"had_liked":false,"id":238439,"user_name":"Black","can_delete":false,"product_type":"c1","uid":1620774,"ip_address":"","ucode":"170977A014997C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iarwibic7h11K05YSJ9G6JERWqudL1ATGm0bib5pSCsP97rpSwuxLoDvp40RMsywibVH2g5DLphQGM51denSxx6hLZg/132","comment_is_top":false,"comment_ctime":1596167430,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5891134726","product_id":100029501,"comment_content":"我在有索引的表和没索引的表，查询都是0.001秒。。。。。是不是默认有优化啊","like_count":1,"discussions":[{"author":{"id":1880782,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/b2/ce/5638be2b.jpg","nickname":"Flychen","note":"","ucode":"4029A8F1D3C361","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344719,"discussion_content":"是不是数据量太少了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611565007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142877,"user_name":"爱思考的仙人球","can_delete":false,"product_type":"c1","uid":1576177,"ip_address":"","ucode":"77E31190A5B5AF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ic8KF0sfxicsx4F25HZrtZwP2fQEibicfibFeYIQBibxnVlHIiaqkfictJuvLCKia0p7liaQvbTzCYWLibjJK6B8kc8e194ng/132","comment_is_top":false,"comment_ctime":1571572869,"is_pvip":false,"replies":[{"id":"59827","content":"对 bitmap是不错的方式","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1574757839,"ip_address":"","comment_id":142877,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866540165","product_id":100029501,"comment_content":"在性别这类重复度高的字段上，oracle可以创建位图索引","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471306,"discussion_content":"对 bitmap是不错的方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574757839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134050,"user_name":"雪飞鸿","can_delete":false,"product_type":"c1","uid":1012325,"ip_address":"","ucode":"65D7B030828809","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/65/68bd8177.jpg","comment_is_top":false,"comment_ctime":1568728862,"is_pvip":true,"replies":[{"id":"53360","content":"从左到右的顺序","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1570427988,"ip_address":"","comment_id":134050,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5863696158","product_id":100029501,"comment_content":"为什么是最左匹配而不是最右匹配","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467600,"discussion_content":"从左到右的顺序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570427988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1302228,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","nickname":"David.cui","note":"","ucode":"AB46F310403612","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":172828,"discussion_content":"目前的索引都是b+树的算法，了解这个之后就可以理解。你的问题老师没有正面回答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581809660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119811,"user_name":"捞鱼的搬砖奇","can_delete":false,"product_type":"c1","uid":1021539,"ip_address":"","ucode":"2FD194C4DA26E5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/63/7eb32c9b.jpg","comment_is_top":false,"comment_ctime":1564707266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5859674562","product_id":100029501,"comment_content":"sql能同时提供到github上吗","like_count":1},{"had_liked":false,"id":292800,"user_name":"黄卫江","can_delete":false,"product_type":"c1","uid":1652895,"ip_address":"","ucode":"0366942B81E7FC","user_header":"https://static001.geekbang.org/account/avatar/00/19/38/9f/895353ab.jpg","comment_is_top":false,"comment_ctime":1620983526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620983526","product_id":100029501,"comment_content":"最左原则是说：如果联合索引的最左边的字段没有进入查询条件中那索引就无法发挥作用","like_count":1},{"had_liked":false,"id":246021,"user_name":"素衣绾绾","can_delete":false,"product_type":"c1","uid":1569366,"ip_address":"","ucode":"B07E55A6FB8D4A","user_header":"https://static001.geekbang.org/account/avatar/00/17/f2/56/131b4173.jpg","comment_is_top":false,"comment_ctime":1599136578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599136578","product_id":100029501,"comment_content":"最左原则有点像Java中的短路与运算符，但又不完全是的，例如：if(xxx != null &amp;&amp; xxx != null)，如果最左边的一个条件就不符合，那么后面的就不用看了，直接pass，如果左边的匹配，才会去看右边的条件，这一点是相似的，联合索引必须在左边的字段是与where 后面的查询条件是匹配的。","like_count":0},{"had_liked":false,"id":234999,"user_name":"Geek_bbbef1","can_delete":false,"product_type":"c1","uid":1662380,"ip_address":"","ucode":"83604A63565FF9","user_header":"https://static001.geekbang.org/account/avatar/00/19/5d/ac/00ba8f70.jpg","comment_is_top":false,"comment_ctime":1594866224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594866224","product_id":100029501,"comment_content":"实验二中，对 user_gender 加了 btree 索引后，查找 user_gender = 1 由 0.28 秒提升到了 0.033秒，但是查找 user_gender = 0，由 1.4 秒降低到了 2.28 秒。所以说应该是要看实际使用来权衡吧。","like_count":0},{"had_liked":false,"id":232935,"user_name":"宋雄斌","can_delete":false,"product_type":"c1","uid":1433647,"ip_address":"","ucode":"52FA63AA616319","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/2f/3aee5f24.jpg","comment_is_top":false,"comment_ctime":1594172254,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594172254","product_id":100029501,"comment_content":"老师，为什么我使用Mysql8.测试最左原则的时候，使用  &gt;= 、&lt;=和betwwen  组合索引并没有停止匹配。是为什么呀？","like_count":0},{"had_liked":false,"id":225240,"user_name":"不·一","can_delete":false,"product_type":"c1","uid":1579099,"ip_address":"","ucode":"ED2029D8233A83","user_header":"https://static001.geekbang.org/account/avatar/00/18/18/5b/653cff38.jpg","comment_is_top":false,"comment_ctime":1591690218,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591690218","product_id":100029501,"comment_content":"老师您好，聚集索引存储的数据库数据，是主键的数据（值）还是整条数据？","like_count":0,"discussions":[{"author":{"id":1706074,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/08/5a/4d709cf5.jpg","nickname":"Pray、PF","note":"","ucode":"1E3E4073763490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283573,"discussion_content":"整条数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592299343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219980,"user_name":"菊花找胖丁","can_delete":false,"product_type":"c1","uid":1108401,"ip_address":"","ucode":"FF0C76AF1F0679","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/b1/2ff79465.jpg","comment_is_top":false,"comment_ctime":1590130663,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1590130663","product_id":100029501,"comment_content":"联合索引的最左选择是指当进行条件查询时，查询条件的先后顺序必须与联合索引一致，否则联合索引会失效。使用时查询条件必须与创建时的顺序保持一致，否则会适得其反","like_count":0,"discussions":[{"author":{"id":1108401,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e9/b1/2ff79465.jpg","nickname":"菊花找胖丁","note":"","ucode":"FF0C76AF1F0679","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271408,"discussion_content":"等值查询时优化器会自动帮你调整顺序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590131070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215428,"user_name":"子夜2104","can_delete":false,"product_type":"c1","uid":1070286,"ip_address":"","ucode":"C4FF54AEA6002F","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/ce/92029d2f.jpg","comment_is_top":false,"comment_ctime":1588990962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588990962","product_id":100029501,"comment_content":"老师，请问聚集索引的叶子节点存放的是数据记录，还是数据记录的地址呢？","like_count":0},{"had_liked":false,"id":206824,"user_name":"Geek__c1668bdf82c6","can_delete":false,"product_type":"c1","uid":1460894,"ip_address":"","ucode":"D73CDA5B844AB6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLoTzR54OKKhIhPsUZ0N84oViaMf7xia9IickJ0zsicpVMza9gdtegNmN3Bw5EJictRACFcubTp9xpJmRQ/132","comment_is_top":false,"comment_ctime":1586941720,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586941720","product_id":100029501,"comment_content":"买了好久了，今天终于读起来了，都是干货，如果添加一些图片，有一些图解操作更直观一些","like_count":0},{"had_liked":false,"id":206779,"user_name":"Jone_乔泓恺","can_delete":false,"product_type":"c1","uid":1407941,"ip_address":"","ucode":"158154301D5E40","user_header":"https://static001.geekbang.org/account/avatar/00/15/7b/c5/35f92dad.jpg","comment_is_top":false,"comment_ctime":1586933364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586933364","product_id":100029501,"comment_content":"学习 MongoDB 的时候联合索引有 ESR 原则，请问其他 DBMS 的索引创建是否也需要遵守 ESR 原则？","like_count":0},{"had_liked":false,"id":203571,"user_name":"纸飞机","can_delete":false,"product_type":"c1","uid":1108954,"ip_address":"","ucode":"E83EB9A453ACE2","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/da/09feef5a.jpg","comment_is_top":false,"comment_ctime":1586235036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586235036","product_id":100029501,"comment_content":"能请教您一个问题吗。 对索引字段进行函数操作会破坏索引的有序性从而使用不了索引的树搜索功能。mysql在数字与字符串类型比较的时候，会自动把字符串转换为数字。 但是mysql的文档中写着字符串和数字比较的时候 会转换成浮点数比较。 这是不是相矛盾了？<br><br><br>In all other cases, the arguments are compared as floating-point (real) numbers. For example, a comparison of string and numeric operands takes places as a comparison of floating-point numbers.<br>那么即使索引是数字类型， 参数是字符串类型  两个都得先转换为浮点数。 这样岂不是也对索引字段做了函数操作吗？<br>","like_count":0},{"had_liked":false,"id":201032,"user_name":"qijj","can_delete":false,"product_type":"c1","uid":1231369,"ip_address":"","ucode":"AAE7BAD5DABEE2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLn1y9RSL9JcACGRVkkhkEmjH7z1eiag763CVKwn3Mzb3djbibwbx0fgZqyBpPozGLOicnllSfydEng/132","comment_is_top":false,"comment_ctime":1585708186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585708186","product_id":100029501,"comment_content":"老师，对于表关联查询时建索引能提高查询效率吗？<br>比如 select a.a1,b.b1 from a,b where a.a0 = b.b0<br>这时在a0 字段或 b0字段上建立索引 能否提升查询效率？","like_count":0},{"had_liked":false,"id":194767,"user_name":"博弈","can_delete":false,"product_type":"c1","uid":1433344,"ip_address":"","ucode":"B1A69837E41972","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/EcYNib1bnDf5dz6JcrE8AoyZYMdqic2VNmbBtCcVZTO9EoDZZxqlQDEqQKo6klCCmklOtN9m0dTd2AOXqSneJYLw/132","comment_is_top":false,"comment_ctime":1585104191,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585104191","product_id":100029501,"comment_content":"学习完本章节，对索引的分类，以及索引的底层原理有了进一步的认识，老师讲的也浅显易懂。","like_count":0},{"had_liked":false,"id":189483,"user_name":"刘凯","can_delete":false,"product_type":"c1","uid":1350608,"ip_address":"","ucode":"EFDC932CAE61A6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9b/d0/86aee34c.jpg","comment_is_top":false,"comment_ctime":1584521135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584521135","product_id":100029501,"comment_content":"聚集索引本身就是规律，不像非聚集索引，要维护独立的索引。","like_count":0},{"had_liked":false,"id":188800,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1584417029,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1584417029","product_id":100029501,"comment_content":"联合索引的最左原则部分：“运行结果（1 条数据，运行时间 0.046s）及图” 重复了","like_count":0},{"had_liked":false,"id":178734,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1581809511,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1581809511","product_id":100029501,"comment_content":"为什么联合索引中，只有最左侧字段可以使用索引，后面的不可以","like_count":0,"discussions":[{"author":{"id":1706074,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/08/5a/4d709cf5.jpg","nickname":"Pray、PF","note":"","ucode":"1E3E4073763490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283575,"discussion_content":"就像楼梯一样，如果你的一楼都没有，何谈二楼，三楼呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592299421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130590,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","nickname":"Ryoma","note":"","ucode":"7F692369239692","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206580,"discussion_content":"这个可以看一个 B+ 树 的结构，就能明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584417183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172043,"user_name":"superMO潼","can_delete":false,"product_type":"c1","uid":1131414,"ip_address":"","ucode":"AEE2274BF75E44","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/96/5bbfc853.jpg","comment_is_top":false,"comment_ctime":1579078165,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579078165","product_id":100029501,"comment_content":"在oracle中建立联合索引（x y z） 如果表数据量很大 如果查询条件使用y=？and z =？ 是有可能走到索引的 比全表扫描cost低","like_count":0,"discussions":[{"author":{"id":1302228,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","nickname":"David.cui","note":"","ucode":"AB46F310403612","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":172827,"discussion_content":"优化器牛掰","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581809538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170003,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1578491423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578491423","product_id":100029501,"comment_content":"我突然有个问题想咨询一下：是不是 MySQL 每次查询只能匹配一个索引？","like_count":0},{"had_liked":false,"id":168131,"user_name":"学海求知","can_delete":false,"product_type":"c1","uid":1087085,"ip_address":"","ucode":"9341438DBCD6E5","user_header":"https://static001.geekbang.org/account/avatar/00/10/96/6d/affdb86c.jpg","comment_is_top":false,"comment_ctime":1578017003,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578017003","product_id":100029501,"comment_content":"有两个问题想咨询下。<br>1.范围查询后的列无法使用索引，应该只是在联合索引中吧？具体的原因是什么？从联合索引的结构上感觉还是可以走的<br>2.普通索引存储的主键值，查到主键值以后还需要回表，那范围查询后拿到了一批主键值，这时候是如何查询的？","like_count":0},{"had_liked":false,"id":166088,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1577383063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577383063","product_id":100029501,"comment_content":"老师 问个问题  每个表都有聚集索引吧 即使使用非聚集索引 进行 插入 删除 更新 也会使聚集索引更新吧","like_count":0},{"had_liked":false,"id":161125,"user_name":"rike","can_delete":false,"product_type":"c1","uid":1583833,"ip_address":"","ucode":"920AAD0BD9245C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","comment_is_top":false,"comment_ctime":1576123293,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576123293","product_id":100029501,"comment_content":"留言中“使用联合索引时，如果可以使用索引覆盖，那就不用回表，查询性能更好了。”不知是什么意思？","like_count":0,"discussions":[{"author":{"id":1507657,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/VF22kbprrVk1gTYnEaSvVyvJPaG249icNkvBtVSwWZPkR0gIVf0ObOiaAib1mCUyia8zEJXcicqzgYibtYFJfWKVVcKA/132","nickname":"Geek_f8cd05","note":"","ucode":"FEBE700704F0B0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294628,"discussion_content":"应该是说，如果搜索的信息刚好为联合索引中的值，就不需要再根据得到的主键回表了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595946304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132475,"user_name":"峻铭","can_delete":false,"product_type":"c1","uid":1106202,"ip_address":"","ucode":"63AB23BADACA88","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/1a/20977779.jpg","comment_is_top":false,"comment_ctime":1568130752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568130752","product_id":100029501,"comment_content":"索引的最左原则，可以假设通过联合索引进行检索的过程为一个函数f(X x=0,Y y=0,Z z=0)，参数都有默认值，where条件具有联合索引的字段会依次传入函数中，那么可以传入的情况有(X,Y,Z) 或者(X,Y)或者(X)","like_count":0},{"had_liked":false,"id":123472,"user_name":"扫地僧","can_delete":false,"product_type":"c1","uid":1129952,"ip_address":"","ucode":"EEDC2BA2FED1FF","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/e0/be2f1bf3.jpg","comment_is_top":false,"comment_ctime":1565683531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565683531","product_id":100029501,"comment_content":"有一个疑惑，文中老师又讲到聚集索引和非聚集索引，我这么理解不知道是不是对的？<br>（1）两者是基于物理实现来划分；<br>（2）聚集索引我可以简单的理解为主键索引；非聚集索引则是除主键索引以外的其他字段建立的索引，比如一个user表除了id字段的name,deptId等字段；<br>（3）非聚集索引只是一个名称，创建索引的方式还是按照基本的方式创建即可。","like_count":0},{"had_liked":false,"id":120304,"user_name":"Mq","can_delete":false,"product_type":"c1","uid":1178359,"ip_address":"","ucode":"041F572AFAB275","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/f7/91ac44c5.jpg","comment_is_top":false,"comment_ctime":1564824066,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564824066","product_id":100029501,"comment_content":"老师好，请教个问题，排序后一次取第50000-55000，一次5000，还是分10次每次取500的效率高。我理解的是排序肯定是要对满足条件的行做一次查找，数据如果在内存了应该是要比做10次查询高，如果数据在临时表空间也应该比做10次查询高，不知道我理解的对不。因为最近在做一个大表同步的功能，跟同事有点分歧","like_count":0},{"had_liked":false,"id":119876,"user_name":"用0和1改变自己","can_delete":false,"product_type":"c1","uid":1527530,"ip_address":"","ucode":"42B8F6ECF6BDD0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/lfMbV8RibrhFxjILg4550cZiaay64mTh5Zibon64TiaicC8jDMEK7VaXOkllHSpS582Jl1SUHm6Jib2AticVlHibiaBvUOA/132","comment_is_top":false,"comment_ctime":1564716802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564716802","product_id":100029501,"comment_content":"课后问题：联合索引的最左原则，只能从最左边开始匹配，比如联合索引为（&#39;字段1，字段2，字段3）;<br>只能从最左边开始匹配就是  WHERE 字段1 = &#39;value&#39;  或 WHERE  字段1= &#39;value’AND 字段2 =&#39;value&#39;,<br>而不能 WHERE 字段2 =&#39;value&#39;;<br>老师，这样理解，对吗，","like_count":0},{"had_liked":false,"id":119861,"user_name":"Geek_6cfaa7","can_delete":false,"product_type":"c1","uid":1526320,"ip_address":"","ucode":"FC1A94C1C4B2A5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epxa4R9wsGic45Tv0P7SB5VwHHDGLAcBxzga7rAnUcyZ9GiaxrQslN47zSZ9Tn3Qd8icIOics6WwibXIXQ/132","comment_is_top":false,"comment_ctime":1564714382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564714382","product_id":100029501,"comment_content":"老师好，聚集索引是不是本身不增加存储空间，只是规定表必须按主键顺序存储，这样如果按主键字段内容查找就会很快，非聚集索引就等于单独做了本目录，单独开辟了一个空间，想要查找先要到这个目录里去找，是这个意思吗？不知道理解的对不对，忘老师解答","like_count":0},{"had_liked":false,"id":119817,"user_name":"nimil","can_delete":false,"product_type":"c1","uid":1197925,"ip_address":"","ucode":"19933068972746","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/65/cce8eb34.jpg","comment_is_top":false,"comment_ctime":1564707806,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1564707806","product_id":100029501,"comment_content":"老师您好，请问下聚集索引叶子节点是直接存储的行数据还是行数据在磁盘的地址呢","like_count":0,"discussions":[{"author":{"id":1573288,"avatar":"https://static001.geekbang.org/account/avatar/00/18/01/a8/2662a8d1.jpg","nickname":"小白鼠丶","note":"","ucode":"76EFABC5DF8AEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7605,"discussion_content":"聚集索引的叶子节点存储的就是我们的数据记录，非聚集索引的叶子节点存储的是数据位置。非聚集索引不会影响数据表的物理存储顺序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567582972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1573288,"avatar":"https://static001.geekbang.org/account/avatar/00/18/01/a8/2662a8d1.jpg","nickname":"小白鼠丶","note":"","ucode":"76EFABC5DF8AEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7604,"discussion_content":"行数据啊  文章有提到  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567582951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1197925,"avatar":"https://static001.geekbang.org/account/avatar/00/12/47/65/cce8eb34.jpg","nickname":"nimil","note":"","ucode":"19933068972746","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1573288,"avatar":"https://static001.geekbang.org/account/avatar/00/18/01/a8/2662a8d1.jpg","nickname":"小白鼠丶","note":"","ucode":"76EFABC5DF8AEB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7638,"discussion_content":"好。多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567596223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7604,"ip_address":""},"score":7638,"extra":""}]}]}]}