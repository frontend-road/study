{"id":621929,"title":"78｜魔术方法：怎样通过类构造自己需要的数据类型？","content":"<p><strong>课后习题</strong><br>\n请编写一个自定义类，要求该类能实现字典所有功能，当用户为字典赋值，遇到重复的 key 时，向用户报错并禁止覆盖该 key。例如：</p><pre><code>mydict = MyDict()\nmydict['a'] = 1\nmydict['a'] = 1  #对相同的 key 赋值报错。\n</code></pre><p>提示：赋值错误，key “a” 已存在，放弃赋值。</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":369597,"user_name":"yanyu-xin","can_delete":false,"product_type":"c3","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1677717641,"is_pvip":false,"replies":[{"id":134859,"content":"class Mydict(dict):\n    def __setitem__(self, __key, __value) :\n        if __key in self:\n            print(&#39;key 存在&#39;)\n            return -1\n\n        else:\n            return super().__setitem__(__key,__value)\n\ndict1  = Mydict({&#39;a&#39;:1})\ndict1.setdefault(&#39;a&#39;,123)\nprint(dict1)","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1678158679,"ip_address":"广东","comment_id":369597,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"class Mydict(dict):\n    def __setitem__(self, key, value):\n        if self.get(key):\n            print(f&quot;赋值错误，key &#39;{key}&#39;已经存在,放弃赋值&quot;)\n        self.setdefault(key,value)\n\n\ndict1 = Mydict({&quot;a&quot;:11,&quot;b&quot;:22})\ndict1[&quot;c&quot;] =2\ndict1[&#39;b&#39;] = 200\nprint(dict1)\n\n\n## 请问：这种方法，或者用其他同学方法都无法在以下情况下提示出错。如何简单处理为好？是逐一函数修改吗\n\ndict1.setdefault(&#39;c&#39;,12)\nprint(dict1)","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607859,"discussion_content":"class Mydict(dict):\n    def __setitem__(self, __key, __value) :\n        if __key in self:\n            print(&#39;key 存在&#39;)\n            return -1\n\n        else:\n            return super().__setitem__(__key,__value)\n\ndict1  = Mydict({&#39;a&#39;:1})\ndict1.setdefault(&#39;a&#39;,123)\nprint(dict1)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678158679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":396506,"user_name":"尹长拟","can_delete":false,"product_type":"c3","uid":3074007,"ip_address":"北京","ucode":"1EBD42B5BBD934","user_header":"","comment_is_top":false,"comment_ctime":1734711405,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from collections import UserDict\n\nclass Mydict(UserDict):\n\n    def __setitem__(self, key, value):\n        if key in self.data:\n            print(f&quot;{key}键已存在，请重新赋值&quot;)\n        else:\n            self.data[key] = value\n    \ndict1 = Mydict()\ndict1[&#39;a&#39;] = 1\ndict1[&#39;a&#39;] = 2\ndict1[&#39;b&#39;] = 3\nprint(dict1)\ndict1[&#39;b&#39;] = 4","like_count":0},{"had_liked":false,"id":385092,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702032401,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from collections import UserDict\n\nclass MyDict(UserDict):\n\n    def __setitem__(self, key, value) -&gt; None:\n        if key in self.data.keys():\n            print(f&quot;{key}已存在，不允许覆盖&quot;)\n        else:\n            super().__setitem__(key, value)\n\n\nmy = MyDict()\nmy[&#39;a&#39;] = 1\nmy[&#39;a&#39;] = 2\nprint(my)","like_count":0},{"had_liked":false,"id":384678,"user_name":"依托答辩","can_delete":false,"product_type":"c3","uid":2383299,"ip_address":"上海","ucode":"4BE79E8A030813","user_header":"https://static001.geekbang.org/account/avatar/00/24/5d/c3/b8bb888c.jpg","comment_is_top":false,"comment_ctime":1701332436,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"这题做过了呀","like_count":0},{"had_liked":false,"id":382713,"user_name":"MarkG","can_delete":false,"product_type":"c3","uid":3675806,"ip_address":"山东","ucode":"454082595FE769","user_header":"https://static001.geekbang.org/account/avatar/00/38/16/9e/48621655.jpg","comment_is_top":false,"comment_ctime":1697875241,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from collections import UserDict\n\nclass MyDict(UserDict):\n    def __setitem__(self, key, value):\n        if key in self.data.keys():\n            print(f&quot;赋值错误，key “{key}” 已存在，放弃赋值。&quot;)\n        else:\n            self.data[str(key)] = value\n\n\nmy_dict1 = MyDict()\nmy_dict1[&#39;b&#39;] = 1\nmy_dict1[&#39;b&#39;] = 1 # 赋值错误，key “b” 已存在，放弃赋值。","like_count":0},{"had_liked":false,"id":370011,"user_name":"江江儿嘛哩哄","can_delete":false,"product_type":"c3","uid":1928117,"ip_address":"浙江","ucode":"E7D6E59551B7F1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6b/b5/14586a78.jpg","comment_is_top":false,"comment_ctime":1678254204,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from collections import UserDict\nclass MyDict(UserDict):\n    def __setitem__(self, key, value):\n        if key in self.data.keys():\n            print(f&quot;已存在key {key}, 请重新赋值&quot;)\n        else:\n            self.data[key] = value\ndict1 = MyDict()\ndict1[&#39;a&#39;] = 1\ndict1[&#39;a&#39;] = 2","like_count":0},{"had_liked":false,"id":367740,"user_name":"朱雯","can_delete":false,"product_type":"c3","uid":1035744,"ip_address":"北京","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1675528835,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"#看到了一些同学的做法,继承userdict类，这是上一节课程老师的方式,但既然是学习魔术方法，我就想就使用dict类本身来解决这个问题\nclass Mydict(dict):\n    def __setitem__(self,key,value):\n        if self.get(key):\n            print(f&quot;key {key}已经存在,无法赋值&quot;)\n        else:\n            super().__setitem__(key,value)\n            \n       \n#测试\ndict2 = Mydict({&quot;a&quot;:1,&quot;b&quot;:2})\nprint(dict2)\ndict2[&#39;a&#39;] = 1\ndict2[&#39;b&#39;] = 2\ndict2[&quot;c&quot;] =2\ndict2[&#39;d&#39;] = 4\nprint(dict2)","like_count":0},{"had_liked":false,"id":367530,"user_name":"Francis","can_delete":false,"product_type":"c3","uid":1145834,"ip_address":"上海","ucode":"DC3F69EED29A5D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/ea/70bf7e98.jpg","comment_is_top":false,"comment_ctime":1675305741,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from collections import UserDict\nclass MyDict(UserDict):\n    def __setitem__(self, key, value) -&gt; None:\n        if key in self.data.keys():\n            print(f&#39;赋值错误，key {key} 已存在，放弃赋值&#39;)\n        else:\n            self.data[key] = value\n\nmydict = MyDict()\nmydict[&#39;a&#39;] = 1\nprint(mydict)\nmydict[&#39;a&#39;] = 2\nprint(mydict)","like_count":0},{"had_liked":false,"id":366773,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1674193185,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from collections import UserDict\n\nclass MyDict(UserDict):\n  def __setitem__(self, key, value) -&gt; None:\n    if key in self.data.keys():\n      print(f&quot;赋值错误，key “{key}” 已存在，放弃赋值&quot;)\n    else:\n      self.data[key] = value\n\nmydict = MyDict()\nmydict[&#39;a&#39;] = 1\nmydict[&#39;a&#39;] = 1  # 对相同的 key 赋值报错。","like_count":0},{"had_liked":false,"id":366331,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1673586244,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from collections import UserDict\n\nclass MyDict(UserDict):\n    def __setitem__(self, key, value):\n        if key in self.data.keys():\n            print(f&#39;赋值错误，key “{key}” 已存在，放弃赋值。&#39;)\n        else:\n            self.data[key] = value\n            print(f&quot;新元素 {key}:{self.data[key]} 插入字典成功。&quot;)\n\n# 测试\ndict1 = MyDict()\ndict1[ &#39;a&#39; ] = 100\ndict1[ &#39;a&#39; ] = 200 # 报错\nprint(dict1[&#39;a&#39;])","like_count":0},{"had_liked":false,"id":366173,"user_name":"PatrickL","can_delete":false,"product_type":"c3","uid":1341431,"ip_address":"上海","ucode":"EF0EC18639B9B2","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/f7/11548247.jpg","comment_is_top":false,"comment_ctime":1673437338,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from collections import UserDict\nclass MyDict(UserDict):\n    def __setitem__(self, key, value):\n        if key in self.data.keys():\n            print(f&#39;赋值错误，key“{key}”已存在，放弃赋值。&#39;)\n        else:\n            self.data[key] = value\n\ndict1 = MyDict()\ndict1[&#39;a&#39;] = 1\ndict1[&#39;a&#39;] = 2","like_count":0}]}