{"id":147216,"title":"10 | Netty如何支持三种Reactor？","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geek_netty\">https://gitee.com/geektime-geekbang/geek_netty</a></p>","comments":[{"had_liked":false,"id":153925,"user_name":"Sonny721","can_delete":false,"product_type":"c3","uid":1104291,"ip_address":"","ucode":"C95DD306BFBE54","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/a3/2856b5b5.jpg","comment_is_top":false,"comment_ctime":1574331322,"is_pvip":false,"replies":[{"id":59377,"content":"是多余的，你理解的非常到位，确实可以这么简单对应起来，就是按端口来对应，就因为多余，所以可以直接上来就显式设置为1，不过多余坏处不大，因为其他的不启动多余的线程。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1574517009,"ip_address":"","comment_id":153925,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师您好。非主从模式下的bossGroup的线程数是否和端口数量有关，如果服务端只开放一个端口供客户端链接，那么bossGroup设置为多线程是否多余？","like_count":15,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475325,"discussion_content":"是多余的，你理解的非常到位，确实可以这么简单对应起来，就是按端口来对应，就因为多余，所以可以直接上来就显式设置为1，不过多余坏处不大，因为其他的不启动多余的线程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574517009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156613,"user_name":"月迷津渡","can_delete":false,"product_type":"c3","uid":1264111,"ip_address":"","ucode":"2B18B2FE3DAC3B","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","comment_is_top":false,"comment_ctime":1574923586,"is_pvip":false,"replies":[{"id":60552,"content":"关键点不是性能提升问题，因为做事情的人的总数没变，只是从无分工变成了有分工，假设不独立出单独接受连接的话，等于所有的事都是一样优先级的，那在繁忙的时候，接受连接的处理可能就会延迟很久，导致连接超时，很明显连接比一次业务处理更重要，所以才把最重要的事独立处理，所以举例说大饭店都是有迎宾的。另外，反过来说，目标不是性能提升，因为分工了。只是说问题少了。","user_name":"作者回复","user_name_real":"傅健","uid":1638649,"ctime":1575323948,"ip_address":"","comment_id":156613,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"请问老师个问题，从单纯性能角度来讲 单独独立接受连接的reactor性能是如何得到提升的。","like_count":10,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476168,"discussion_content":"关键点不是性能提升问题，因为做事情的人的总数没变，只是从无分工变成了有分工，假设不独立出单独接受连接的话，等于所有的事都是一样优先级的，那在繁忙的时候，接受连接的处理可能就会延迟很久，导致连接超时，很明显连接比一次业务处理更重要，所以才把最重要的事独立处理，所以举例说大饭店都是有迎宾的。另外，反过来说，目标不是性能提升，因为分工了。只是说问题少了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1575323948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1107484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/1c/9d3744ee.jpg","nickname":"程序员俊达","note":"","ucode":"2573037D7C82C8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":546105,"discussion_content":"并不是性能的问题，而是通过分工来减少问题，就像大的饭店都要有迎宾，这个比喻很贴切。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642161551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":476168,"ip_address":"","group_id":0},"score":546105,"extra":""}]}]},{"had_liked":false,"id":142555,"user_name":"又双叒叕是一年啊","can_delete":false,"product_type":"c3","uid":1000015,"ip_address":"","ucode":"E067320E537DEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/4f/ff1ac464.jpg","comment_is_top":false,"comment_ctime":1571394647,"is_pvip":false,"replies":[{"id":57883,"content":"这个当时课程设计的时候，稍微底层点的东西我都过滤了，因为怕跑题太远，这个问题我记录下来了，回头我做问题汇总小册子的时候，把这个问题总结出来发您。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1573550682,"ip_address":"","comment_id":142555,"utype":1}],"discussion_count":10,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"老师能讲讲linux select poll epoll 原理吗？","like_count":10,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471173,"discussion_content":"这个当时课程设计的时候，稍微底层点的东西我都过滤了，因为怕跑题太远，这个问题我记录下来了，回头我做问题汇总小册子的时候，把这个问题总结出来发您。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573550682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/1c/9d3744ee.jpg","nickname":"程序员俊达","note":"","ucode":"2573037D7C82C8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546104,"discussion_content":"这个可以看极客时间专栏，网络编程实战的性能篇，对这几个多路复用方式讲解的很透彻。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642161389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2591874,"avatar":"","nickname":"Geek_5aec96","note":"","ucode":"45345D53041E42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376444,"discussion_content":"同求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622125574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1127312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/33/90/900ce74c.jpg","nickname":"Dougleas","note":"","ucode":"FF22E2E7C5BA30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342335,"discussion_content":"也发我一份吧，建个netty学习群吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610637843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1138821,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","nickname":"与路同飞","note":"","ucode":"2985F1440A1962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301306,"discussion_content":"老师的github netty100问已经流产了，就第一节的一个问题。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598487744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1138821,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","nickname":"与路同飞","note":"","ucode":"2985F1440A1962","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338709,"discussion_content":"请问你怎么知道流产了的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609343013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301306,"ip_address":"","group_id":0},"score":338709,"extra":""},{"author":{"id":1138821,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","nickname":"与路同飞","note":"","ucode":"2985F1440A1962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339512,"discussion_content":"github上看的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609708165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338709,"ip_address":"","group_id":0},"score":339512,"extra":""},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1138821,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","nickname":"与路同飞","note":"","ucode":"2985F1440A1962","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366053,"discussion_content":"我也没看到任何的说明\n没有一种可能是在默默准备嘛？😭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617949599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339512,"ip_address":"","group_id":0},"score":366053,"extra":""}]},{"author":{"id":1438352,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI4akcIyIOXB2OqibTe7FF90hwsBicxkjdicUNTMorGeIictdr3OoMxhc20yznmZWwAvQVThKPFWgOyMw/132","nickname":"Chuan","note":"","ucode":"FACEC5DAC36A7A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289914,"discussion_content":"同求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594266548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1349380,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/5Mkibry9RCXd8AXBtP3tnXibicT3LLjj5ICzWc351PVkc7egwkME1OoWMFpWtE4eOTkwcXX1dteaaX7jahic16DzrA/132","nickname":"同意","note":"","ucode":"E435178AF6AE0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182638,"discussion_content":"能也发我一份吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582444031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149462,"user_name":". 。o O","can_delete":false,"product_type":"c3","uid":1273146,"ip_address":"","ucode":"79767AC422D775","user_header":"https://static001.geekbang.org/account/avatar/00/13/6d/3a/dfda3cbd.jpg","comment_is_top":false,"comment_ctime":1573224691,"is_pvip":false,"replies":[{"id":57921,"content":"那个参数是1还是多少是控制是否多线程，而是否分2组是区别是否采用主从，你这样的话，还是主从，只不过是主是单线程，从是多线程。非主从只有一个group。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1573568431,"ip_address":"","comment_id":149462,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"netty非主从多线程模式的写法是不是错了?应该也分bossGroup和workerGroup吧,只不过bossGroup的线程数设为1.\nEventLoopGroup bossGroup = new NioEventLoopGroup(1);\nEventLoopGroup workerGroup = new NioEventLoopGroup();\nServerBootstrap b = new ServerBootstrap();\nb.group(bossGroup, workerGroup)","like_count":6,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473872,"discussion_content":"那个参数是1还是多少是控制是否多线程，而是否分2组是区别是否采用主从，你这样的话，还是主从，只不过是主是单线程，从是多线程。非主从只有一个group。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573568431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140524,"user_name":"加载中……","can_delete":false,"product_type":"c3","uid":1366948,"ip_address":"","ucode":"3E59A0A0784D0A","user_header":"https://static001.geekbang.org/account/avatar/00/14/db/a4/191be6ad.jpg","comment_is_top":false,"comment_ctime":1570975846,"is_pvip":false,"replies":[{"id":61946,"content":"NIO也不需要“自己”去扫描事件啊，AIO的优点在于，不需要自己去读数据了，NIO还要自己去读，但是这两个都是事件驱动的，在linux下实现也都是epoll。","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1576659758,"ip_address":"","comment_id":140524,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"大神好，请教个问题。\n针对NIO使用reactor开发模式：注册事件、扫描事件、处理事件。\n如果是AIO话，其中的扫描事件，是不是就不用自己扫描了，而是只要注册事件然后被动的等待通知就行了？","like_count":6,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470427,"discussion_content":"NIO也不需要“自己”去扫描事件啊，AIO的优点在于，不需要自己去读数据了，NIO还要自己去读，但是这两个都是事件驱动的，在linux下实现也都是epoll。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576659758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/1c/9d3744ee.jpg","nickname":"程序员俊达","note":"","ucode":"2573037D7C82C8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546107,"discussion_content":"不是的，AIO和NIO，AIO后续的处理交给内核处理，NIO后续的处理还是会阻塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642161955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155725,"user_name":"polk","can_delete":false,"product_type":"c3","uid":1165455,"ip_address":"","ucode":"1B6E948BA4DFAF","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/8f/e13a6552.jpg","comment_is_top":false,"comment_ctime":1574744709,"is_pvip":false,"replies":[{"id":59895,"content":"是的","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1574775219,"ip_address":"","comment_id":155725,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"一开始说的找两个漂亮的前台招揽顾客，就是最后的bosseventloop？","like_count":5,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475848,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574775219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141771,"user_name":"新一天","can_delete":false,"product_type":"c3","uid":1206286,"ip_address":"","ucode":"6D69AB90460EA1","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/0e/30b97251.jpg","comment_is_top":false,"comment_ctime":1571221654,"is_pvip":false,"replies":[{"id":55048,"content":"不是太看懂您的表达，反正上来用主从就对了。","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1571413772,"ip_address":"","comment_id":141771,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"没有实战过netty，问一个问题，既能主从Reactor模式，什么场景下主建立多个线程处理外面来的事件","like_count":4,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470881,"discussion_content":"不是太看懂您的表达，反正上来用主从就对了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571413772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/1c/9d3744ee.jpg","nickname":"程序员俊达","note":"","ucode":"2573037D7C82C8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546108,"discussion_content":"不需要啊，主是为了建立连接的，如果搞多个，那会出现并发创建连接的问题了。还需要额外的维护成本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642162069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140069,"user_name":"梦典","can_delete":false,"product_type":"c3","uid":1203920,"ip_address":"","ucode":"0A6F91068A13E8","user_header":"https://static001.geekbang.org/account/avatar/00/12/5e/d0/e676ac19.jpg","comment_is_top":false,"comment_ctime":1570801653,"is_pvip":false,"replies":[{"id":62180,"content":"Reactor应该不是Doug Lea首创，只是我们都看了他的那个经典的《scalable io in java》，所以觉得好像他首创，另外，查了很久，也没有找到到底是谁第一次提出的，但是可以追溯到90年代是肯定的，比如：\n\nReactor - an Object Behavioral Pattern for Demultiplexing and Dispatching Handlers for\nSynchronous events; Douglas C Schmidt; 1995\n\nProactor - An Object Behavioral Pattern for Demultiplexing and Dispatching Handlers for Asynchronous Events, Irfan Pyarali, Tim Harrison, Douglas C. Schmidt, Thomas D. Jordan, 1997 ","user_name":"作者回复","user_name_real":"stroller","uid":1638649,"ctime":1576746839,"ip_address":"","comment_id":140069,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"Reactor缘起Doug Lea的Scalable IO in Java，Netty更漂亮的实现了～，不知道Proactor又是哪位大爷的论文提出的","like_count":3,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470230,"discussion_content":"Reactor应该不是Doug Lea首创，只是我们都看了他的那个经典的《scalable io in java》，所以觉得好像他首创，另外，查了很久，也没有找到到底是谁第一次提出的，但是可以追溯到90年代是肯定的，比如：\n\nReactor - an Object Behavioral Pattern for Demultiplexing and Dispatching Handlers for\nSynchronous events; Douglas C Schmidt; 1995\n\nProactor - An Object Behavioral Pattern for Demultiplexing and Dispatching Handlers for Asynchronous Events, Irfan Pyarali, Tim Harrison, Douglas C. Schmidt, Thomas D. Jordan, 1997 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576746839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142704,"user_name":"灰色","can_delete":false,"product_type":"c3","uid":1178135,"ip_address":"","ucode":"869B400BBD520D","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/17/d0b8135f.jpg","comment_is_top":false,"comment_ctime":1571466355,"is_pvip":false,"replies":[{"id":55364,"content":"前面您都说的挺好的，后面为什么会有疑问呢？感觉你自我解释了，做的事情不同，有分工了，连接请求专门的nio event loop处理，数据读写又有不同的nio event loop处理，否则假设放一起，一个或者大多数据特别大，导致错过或者说很久没有接受连接怎么办？核心还是分工思想","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1571701705,"ip_address":"","comment_id":142704,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"关于图表中用netty实现非主从Reactor模式和主从Reactor模式，存在一点疑问。非主从模式：创建NioEventLoopGroup虽然没有传递参数，但是现在计算机都是多核，所以NioEventLoopGroup内部仍然会创建多个NioEventLoop，也就是说处理连接请求和读写请求是由同一个NioEventLoopGroup里不同NioEventLoop处理。主从Reactor模式：由BossGroup里的NioEventLoop处理连接请求。WorkerGroup里的NioEventloop处理读写请求。都是 连接请求和读写请求有不同的NioEventloop来处理，那么两者有什么区别呢？","like_count":1,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471234,"discussion_content":"前面您都说的挺好的，后面为什么会有疑问呢？感觉你自我解释了，做的事情不同，有分工了，连接请求专门的nio event loop处理，数据读写又有不同的nio event loop处理，否则假设放一起，一个或者大多数据特别大，导致错过或者说很久没有接受连接怎么办？核心还是分工思想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571701705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155680,"user_name":"冬渐暖","can_delete":false,"product_type":"c3","uid":1586800,"ip_address":"","ucode":"907E41AAE9A36C","user_header":"https://static001.geekbang.org/account/avatar/00/18/36/70/00122b24.jpg","comment_is_top":false,"comment_ctime":1574735639,"is_pvip":false,"replies":[{"id":60557,"content":"netty还是很全面的，除用cpu计算默认的线程数，还有其他两个参数，分别考虑了docker等因素，后面会提到。","user_name":"作者回复","user_name_real":"傅健","uid":1638649,"ctime":1575325215,"ip_address":"","comment_id":155680,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100036701,"comment_content":"Thread-Per-Connection模式\n一个线程处理一件事情\n\n单线程就eventLoopGroup(1)  后面加个1\nreactor的主从多线程模式，搞几个迎宾来处理接入的连接\nnetty的eventLoopGroup 如果不设置线程数据，就会根据cpu去设置最优的线程数\n\n\n主从 \n两种socktChannel绑定到两个group里面去","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475831,"discussion_content":"netty还是很全面的，除用cpu计算默认的线程数，还有其他两个参数，分别考虑了docker等因素，后面会提到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575325215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143372,"user_name":"阿凯啊","can_delete":false,"product_type":"c3","uid":1048218,"ip_address":"","ucode":"781D46376B67DE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/9a/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1571700100,"is_pvip":false,"replies":[{"id":55681,"content":"多谢捧场！","user_name":"作者回复","user_name_real":"Geek_9bc307","uid":1638649,"ctime":1571924264,"ip_address":"","comment_id":143372,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"课程内容挺紧凑的，感谢大牛。","like_count":0,"discussions":[{"author":{"id":1638649,"avatar":"https://static001.geekbang.org/account/avatar/00/19/00/f9/44a3e5bd.jpg","nickname":"傅健","note":"","ucode":"5EA8BB26F5B036","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471505,"discussion_content":"多谢捧场！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571924264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179687,"user_name":"总有一天","can_delete":false,"product_type":"c3","uid":1240856,"ip_address":"","ucode":"730405447A6E95","user_header":"https://static001.geekbang.org/account/avatar/00/12/ef/18/5bd7b1be.jpg","comment_is_top":false,"comment_ctime":1582079124,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"老师好，问个问题，Reactor模式v1看起来与BIO的模式看似没什么区别啊，这两者有什么区别吗？","like_count":7,"discussions":[{"author":{"id":1107484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/1c/9d3744ee.jpg","nickname":"程序员俊达","note":"","ucode":"2573037D7C82C8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546106,"discussion_content":"BIO是阻塞IO，比如accept，connect等方法都会阻塞。而Reactor开发模式，一般是基于NIO的，如果要基于BIO的话，accept阻塞，会导致后续的连接也会出现超时的问题等。其实关键在于BIO,NIO的区别，而Reactor就是一个开发模式而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642161846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296679,"user_name":"何妨","can_delete":false,"product_type":"c3","uid":1385377,"ip_address":"","ucode":"EC3983BFF7992A","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","comment_is_top":false,"comment_ctime":1623115919,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"就是观察者默认，比如你点击按钮进行响应","like_count":1},{"had_liked":false,"id":277922,"user_name":"道","can_delete":false,"product_type":"c3","uid":1324160,"ip_address":"","ucode":"851A0AD751D317","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/80/30e9ae41.jpg","comment_is_top":false,"comment_ctime":1612669317,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"BIO：Thread-Per-Connnection 每建立了服务端套接字，就开一个线程，线程里处理读，写，业务等等。阻塞同步，并发大的时候导致连接过多。可以使用线程池模型，稍微优化。\nNIO： Reactor，对于单线程模型，类似JDK里NIO的用法，一个线程搞定所有；对于非主从多线程，一个线程负责建立连接，收发数据，比较重的地方用线程池，包括编解码，业务处理（这一块不是很理解怎么做的）；对于主从多线程，主线程负责hold住连接，从线程通过循环拿到事件，读，编解码，业务，写。","like_count":1},{"had_liked":false,"id":382018,"user_name":"Han","can_delete":false,"product_type":"c3","uid":1122349,"ip_address":"广东","ucode":"280808D4F641AA","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/2d/dfa5bec8.jpg","comment_is_top":false,"comment_ctime":1696519782,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"你好，请问（非）主从reactor多线程模式里的多线程是指有多个reactor的多线程，还是指业务线程（handler）的多线程？","like_count":0},{"had_liked":false,"id":257965,"user_name":"Yoe","can_delete":false,"product_type":"c3","uid":1419640,"ip_address":"","ucode":"AE07A8871EEB61","user_header":"https://static001.geekbang.org/account/avatar/00/15/a9/78/8d295bba.jpg","comment_is_top":false,"comment_ctime":1604227005,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"请问如果在workerGroup中有多个Channel被绑定到同一个NioEventLoop，","like_count":0},{"had_liked":false,"id":254529,"user_name":"null","can_delete":false,"product_type":"c3","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1603123580,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"老师，主从 Reactor 多线程模式，bossGroup 一般是不是单线程？\n如果是，为什么不是 new NioEventLoopGroup(1)？\n谢谢！！","like_count":0,"discussions":[{"author":{"id":1658796,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","nickname":"Aprelude","note":"","ucode":"840D3F7A35AEEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334072,"discussion_content":"不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607735182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224149,"user_name":"二叉树","can_delete":false,"product_type":"c3","uid":1765581,"ip_address":"","ucode":"E84AACEBC01039","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKu71e4qLenzh5X45CagpRicxMIdgPMr0mhQoWicTLDXx0Qz7MyTicmfEeN04hVEILZA34FD0YicPib15Q/132","comment_is_top":false,"comment_ctime":1591285997,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"看到这儿觉得老师讲得实在是太好了，针对三种不同的模式进行对比，最终发现多线程模式才是最优的方案。往往说明一件东西的好坏，需要进行对比。","like_count":0},{"had_liked":false,"id":220612,"user_name":"∷鹰击长空","can_delete":false,"product_type":"c3","uid":1083922,"ip_address":"","ucode":"C372BB20795262","user_header":"https://static001.geekbang.org/account/avatar/00/10/8a/12/95d6e8d5.jpg","comment_is_top":false,"comment_ctime":1590294412,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"主从 Reactor 多线程模式:\nServerBootstrap.group(bossGroup, workerGroup)","like_count":0},{"had_liked":false,"id":213837,"user_name":"just code it","can_delete":false,"product_type":"c3","uid":1140836,"ip_address":"","ucode":"9953DAD398F33D","user_header":"https://static001.geekbang.org/account/avatar/00/11/68/64/756ba667.jpg","comment_is_top":false,"comment_ctime":1588574373,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100036701,"comment_content":"健哥: 跟着你学习Netty源码,我有个问题，Netty很多操作都是异步的，我看到Netty重新定义了Future,但是我也看到了Promise,这两个的区别是: Promise是可写的Future吗？","like_count":0},{"had_liked":false,"id":208179,"user_name":"Bob","can_delete":false,"product_type":"c3","uid":1112072,"ip_address":"","ucode":"BF65F7AE61A1C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/08/ada2efac.jpg","comment_is_top":false,"comment_ctime":1587293826,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"老师我有一点没有明白，您前面的课程说Netty只推荐使用NIO模式，而且初始化的时候使用的是NIO相关的class，虽然Netty使用的是主从多线程模式来实现整个设计，但是不应该依然是NIO，也就是reactor吗？难道就因为使用了主从NIO就变成了AIO吗？所以，NIO和AIO到底是针对实例化的时候使用的class而言，还是针对有没有使用主从多线程而言？到底是怎样的划分标准？希望得到您的解答。","like_count":0,"discussions":[{"author":{"id":1107484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/1c/9d3744ee.jpg","nickname":"程序员俊达","note":"","ucode":"2573037D7C82C8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546110,"discussion_content":"底层肯定是基于NIO实现的，只是异步通过Future的方式实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642162261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198346,"user_name":"小陈","can_delete":false,"product_type":"c3","uid":1009385,"ip_address":"","ucode":"A03A299310AD18","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/e9/814d057a.jpg","comment_is_top":false,"comment_ctime":1585446248,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"解释得很形象哈","like_count":0},{"had_liked":false,"id":192402,"user_name":"ran","can_delete":false,"product_type":"c3","uid":1296666,"ip_address":"","ucode":"D5F4DFA2644A05","user_header":"https://static001.geekbang.org/account/avatar/00/13/c9/1a/7f326801.jpg","comment_is_top":false,"comment_ctime":1584848883,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100036701,"comment_content":"一直这么写。 现在终于知道为啥了","like_count":0}]}