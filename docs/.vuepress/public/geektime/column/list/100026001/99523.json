{"id":99523,"title":"20 | 面向流水线的指令设计（上）：一心多用的现代CPU","content":"<p>前面我们用了三讲，用一个个的电路组合，制作出了一个完整功能的CPU。这里面一下子给你引入了三个“周期”的概念，分别是指令周期、机器周期（或者CPU周期）以及时钟周期。</p><p>你可能会有点摸不着头脑了，为什么小小一个CPU，有那么多的周期（Cycle）呢？我们在专栏一开始，不是把CPU的性能定义得非常清楚了吗？我们说程序的性能，是由三个因素相乘来衡量的，我们还专门说过“指令数×CPI×时钟周期”这个公式。这里面和周期相关的只有一个时钟周期，也就是我们CPU的主频倒数。当时讲的时候我们说，一个CPU的时钟周期可以认为是可以完成一条最简单的计算机指令的时间。</p><p>那么，为什么我们在构造CPU的时候，一下子出来了那么多个周期呢？这一讲，我就来为你说道说道，带你更深入地看看现代CPU是怎么一回事儿。</p><h2>愿得一心人，白首不相离：单指令周期处理器</h2><p>学过前面三讲，你现在应该知道，一条CPU指令的执行，是由“取得指令（Fetch）-指令译码（Decode）-执行指令（Execute） ”这样三个步骤组成的。这个执行过程，至少需要花费一个时钟周期。因为在取指令的时候，我们需要通过时钟周期的信号，来决定计数器的自增。</p><p>那么，很自然地，我们希望能确保让这样一整条指令的执行，在一个时钟周期内完成。这样，我们一个时钟周期可以执行一条指令，CPI也就是1，看起来就比执行一条指令需要多个时钟周期性能要好。采用这种设计思路的处理器，就叫作单指令周期处理器（Single Cycle Processor），也就是在一个时钟周期内，处理器正好能处理一条指令。</p><!-- [[[read_end]]] --><p>不过，我们的时钟周期是固定的，但是指令的电路复杂程度是不同的，所以实际一条指令执行的时间是不同的。在<a href=\"https://time.geekbang.org/column/article/95883\">第13讲</a>和<a href=\"https://time.geekbang.org/column/article/97477\">第14讲</a>讲加法器和乘法器电路的时候，我给你看过，随着门电路层数的增加，由于门延迟的存在，位数多、计算复杂的指令需要的执行时间会更长。</p><p>不同指令的执行时间不同，但是我们需要让所有指令都在一个时钟周期内完成，那就只好把时钟周期和执行时间最长的那个指令设成一样。这就好比学校体育课1000米考试，我们要给这场考试预留的时间，肯定得和跑得最慢的那个同学一样。因为就算其他同学先跑完，也要等最慢的同学跑完间，我们才能进行下一项活动。</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/ee/6c85e2dd9b9988d8a458fb1200d96eee.jpeg?wh=2521*769\" alt=\"\"></p><center><span class=\"reference\">快速执行完成的指令，需要等待满一个时钟周期，才能执行下一条指令</span></center><p>所以，在单指令周期处理器里面，无论是执行一条用不到ALU的无条件跳转指令，还是一条计算起来电路特别复杂的浮点数乘法运算，我们都等要等满一个时钟周期。在这个情况下，虽然CPI能够保持在1，但是我们的时钟频率却没法太高。因为太高的话，有些复杂指令没有办法在一个时钟周期内运行完成。那么在下一个时钟周期到来，开始执行下一条指令的时候，前一条指令的执行结果可能还没有写入到寄存器里面。那下一条指令读取的数据就是不准确的，就会出现错误。</p><p><img src=\"https://static001.geekbang.org/resource/image/30/9b/3097988ae8dfc82e33ab80234bd5a29b.jpeg?wh=1687*1720\" alt=\"\"></p><center><span class=\"reference\">前一条指令的写入，在后一条指令的读取之前</span></center><p>到这里你会发现，这和我们之前<a href=\"https://time.geekbang.org/column/article/92215\">第3讲</a>和<a href=\"https://time.geekbang.org/column/article/93246\">第4讲</a>讲时钟频率时候的说法不太一样。当时我们说，一个CPU时钟周期，可以认为是完成一条简单指令的时间。为什么到了这里，单指令周期处理器，反而变成了执行一条最复杂的指令的时间呢？</p><p>这是因为，无论是PC上使用的Intel CPU，还是手机上使用的ARM CPU，都不是单指令周期处理器，而是采用了一种叫作<strong>指令流水线</strong>（Instruction Pipeline）的技术。</p><h2>无可奈何花落去，似曾相识燕归来：现代处理器的流水线设计</h2><p>其实，CPU执行一条指令的过程和我们开发软件功能的过程很像。</p><p>如果我们想开发一个手机App上的功能，并不是找来一个工程师，告诉他“你把这个功能开发出来”，然后他就吭哧吭哧把功能开发出来。真实的情况是，无论只有一个工程师，还是有一个开发团队，我们都需要先对开发功能的过程进行切分，把这个过程变成“撰写需求文档、开发后台API、开发客户端App、测试、发布上线”这样多个独立的过程。每一个后面的步骤，都要依赖前面的步骤。</p><p>我们的指令执行过程也是一样的，它会拆分成“取指令、译码、执行”这样三大步骤。更细分一点的话，执行的过程，其实还包含从寄存器或者内存中读取数据，通过ALU进行运算，把结果写回到寄存器或者内存中。</p><p>如果我们有一个开发团队，我们不会让后端工程师开发完API之后，就歇着等待前台App的开发、测试乃至发布，而是会在客户端App开发的同时，着手下一个需求的后端API开发。那么，同样的思路我们可以一样应用在CPU执行指令的过程中。</p><p>通过过去三讲，你应该已经知道了，CPU的指令执行过程，其实也是由各个电路模块组成的。我们在取指令的时候，需要一个译码器把数据从内存里面取出来，写入到寄存器中；在指令译码的时候，我们需要另外一个译码器，把指令解析成对应的控制信号、内存地址和数据；到了指令执行的时候，我们需要的则是一个完成计算工作的ALU。这些都是一个一个独立的组合逻辑电路，我们可以把它们看作一个团队里面的产品经理、后端工程师和客户端工程师，共同协作来完成任务。</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/ad/1e880fa8b1eab511583267e68f0541ad.jpeg?wh=2203*1180\" alt=\"\"></p><center><span class=\"reference\">流水线执行示意图</span></center><p>这样一来，我们就不用把时钟周期设置成整条指令执行的时间，而是拆分成完成这样的一个一个小步骤需要的时间。同时，每一个阶段的电路在完成对应的任务之后，也不需要等待整个指令执行完成，而是可以直接执行下一条指令的对应阶段。</p><p>这就好像我们的后端程序员不需要等待功能上线，就会从产品经理手中拿到下一个需求，开始开发API。这样的协作模式，就是我们所说的<strong>指令流水线</strong>。这里面每一个独立的步骤，我们就称之为<strong>流水线阶段</strong>或者流水线级（Pipeline Stage）。</p><p>如果我们把一个指令拆分成“取指令-指令译码-执行指令”这样三个部分，那这就是一个三级的流水线。如果我们进一步把“执行指令”拆分成“ALU计算（指令执行）-内存访问-数据写回”，那么它就会变成一个五级的流水线。</p><p>五级的流水线，就表示我们在同一个时钟周期里面，同时运行五条指令的不同阶段。这个时候，虽然执行一条指令的时钟周期变成了5，但是我们可以把CPU的主频提得更高了。<strong>我们不需要确保最复杂的那条指令在时钟周期里面执行完成，而只要保障一个最复杂的流水线级的操作，在一个时钟周期内完成就好了。</strong></p><p>如果某一个操作步骤的时间太长，我们就可以考虑把这个步骤，拆分成更多的步骤，让所有步骤需要执行的时间尽量都差不多长。这样，也就可以解决我们在单指令周期处理器中遇到的，性能瓶颈来自于最复杂的指令的问题。像我们现代的ARM或者Intel的CPU，流水线级数都已经到了14级。</p><p>虽然我们不能通过流水线，来减少单条指令执行的“延时”这个性能指标，但是，通过同时在执行多条指令的不同阶段，我们提升了CPU的“吞吐率”。在外部看来，我们的CPU好像是“一心多用”，在同一时间，同时执行5条不同指令的不同阶段。在CPU内部，其实它就像生产线一样，不同分工的组件不断处理上游传递下来的内容，而不需要等待单件商品生产完成之后，再启动下一件商品的生产过程。</p><h2>超长流水线的性能瓶颈</h2><p>既然流水线可以增加我们的吞吐率，你可能要问了，为什么我们不把流水线级数做得更深呢？为什么不做成20级，乃至40级呢？这个其实有很多原因，我在之后几讲里面会详细讲解。这里，我先讲一个最基本的原因，就是增加流水线深度，其实是有性能成本的。</p><p>我们用来同步时钟周期的，不再是指令级别的，而是流水线阶段级别的。每一级流水线对应的输出，都要放到流水线寄存器（Pipeline Register）里面，然后在下一个时钟周期，交给下一个流水线级去处理。所以，每增加一级的流水线，就要多一级写入到流水线寄存器的操作。虽然流水线寄存器非常快，比如只有20皮秒（ps，$10^{-12}$秒）。</p><p><img src=\"https://static001.geekbang.org/resource/image/d9/26/d9e141af3f2c5eedd5aed438388cfe26.jpeg?wh=2887*1039\" alt=\"\"></p><p>但是，如果我们不断加深流水线，这些操作占整个指令的执行时间的比例就会不断增加。最后，我们的性能瓶颈就会出现在这些overhead上。如果我们指令的执行有3纳秒，也就是3000皮秒。我们需要20级的流水线，那流水线寄存器的写入就需要花费400皮秒，占了超过10%。如果我们需要50级流水线，就要多花费1纳秒在流水线寄存器上，占到25%。这也就意味着，单纯地增加流水线级数，不仅不能提升性能，反而会有更多的overhead的开销。所以，设计合理的流水线级数也是现代CPU中非常重要的一点。</p><h2>总结延伸</h2><p>讲到这里，相信你已经能够理解，为什么我们的CPU需要流水线设计了，也能把每一个流水线阶段在干什么，和上一讲的整个CPU的数据通路的连接过程对上了。</p><p>可以看到，为了能够不浪费CPU的性能，我们通过把指令的执行过程，切分成一个一个流水线级，来提升CPU的吞吐率。而我们本身的CPU的设计，又是由一个个独立的组合逻辑电路串接起来形成的，天然能够适合这样采用流水线“专业分工”的工作方式。</p><p>因为每一级的overhead，一味地增加流水线深度，并不能无限地提高性能。同样地，因为指令的执行不再是顺序地一条条执行，而是在上一条执行到一半的时候，下一条就已经启动了，所以也给我们的程序带来了很多挑战。这些挑战和对应的解决方案，就要请你坚持关注后面的几讲，我们一起来揭开答案了。</p><h2>推荐阅读</h2><p>想要了解CPU的流水线设计，可以参看《深入理解计算机系统》的4.4章节，以及《计算机组成与设计 硬件/软件接口》的4.5章节。</p><h2>课后思考</h2><p>我们在前面讲过，一个CPU的时钟周期，可以认为是完成一条简单指令的时间。在这一讲之后，你觉得这句话正确吗？为什么？在了解了CPU的流水线设计之后，你是怎么理解这句话的呢？</p><p>欢迎留言和我分享你的疑惑和见解。你也可以把今天的内容，分享给你的朋友，和他一起学习和进步。</p><p></p>","neighbors":{"left":{"article_title":"19 | 建立数据通路（下）：指令+运算=CPU","id":99505},"right":{"article_title":"21 | 面向流水线的指令设计（下）：奔腾4是怎么失败的？","id":100554}},"comments":[{"had_liked":false,"id":102257,"user_name":"易儿易","can_delete":false,"product_type":"c1","uid":1242864,"ip_address":"","ucode":"B15D1031CA841E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLcWH3mSPmhjrs1aGL4b3TqI7xDqWWibM4nYFrRlp0z7FNSWaJz0mqovrgIA7ibmrPt8zRScSfRaqQ/132","comment_is_top":false,"comment_ctime":1560171203,"is_pvip":false,"replies":[{"id":"37094","content":"易儿易同学，<br><br>你说得很好啊！👍","user_name":"作者回复","comment_id":102257,"uid":"1053568","ip_address":"","utype":1,"ctime":1560260003,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"254963241667","product_id":100026001,"comment_content":"一个 CPU 的时钟周期，可以认为是完成一条简单指令的时间。<br>两个错误：<br>1简单：不是简单是复杂（耗时最长）<br>2指令：不是指令时间，而是指令拆分后线级执行时间<br>简单线级需要等待以补齐时间然后与上下流水线一起牵手步入下一线级<br>线级分的多的话，这个时钟周期应该就可以固定是IF取指令的时间了<br>如果把IF取指令看做是最简单的指令的话，这句话就没毛病了<br>但一般说指令应该是指令集的一个命令吧？<br>但是指令集是提供给开发者视角的，在CPU内部IF取指令才是一个原子化操作，从CPU视角来看又觉得这句话是靠谱的……<br>","like_count":60,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453319,"discussion_content":"易儿易同学，\n\n你说得很好啊！👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560260003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102056,"user_name":"cc","can_delete":false,"product_type":"c1","uid":1239833,"ip_address":"","ucode":"AA1B8EA613E3A9","user_header":"https://static001.geekbang.org/account/avatar/00/12/eb/19/19e706a5.jpg","comment_is_top":false,"comment_ctime":1560127068,"is_pvip":false,"replies":[{"id":"37110","content":"回答正确！👍","user_name":"作者回复","comment_id":102056,"uid":"1053568","ip_address":"","utype":1,"ctime":1560261585,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"186243720796","product_id":100026001,"comment_content":"随着流水线设计的引入，一个指令被拆分为14个子流程。一个CPU的时钟时间，应该是14个子流程中最长的那条的耗时时间","like_count":44,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453237,"discussion_content":"回答正确！👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560261585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141049,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1571106819,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"151894962179","product_id":100026001,"comment_content":"1.高度的专业化分工，可以极大的提高生产效率。<br>《国富论》中亚当斯密提到一个扣针工场的例子：一个工人无论如何努力，一天也生产不了20枚扣针，但有了分工之后，经过前后十几道工序，每人每天平均可以生产48000枚扣针。<br>这可以从经济学上，解释为什么会有流水线<br>2.边际效益递减 <br>新增一个单位的商品或服务，它对商品或服务的收益增加的效用，经济学通常认为，随着商品或服务的量增加，边际效用将会逐步减少。<br>这可以从经济学上，解释为什么流水线级数不可以无限增加，而有个界限。<br>","like_count":36,"discussions":[{"author":{"id":2637024,"avatar":"https://static001.geekbang.org/account/avatar/00/28/3c/e0/8fb07766.jpg","nickname":"核动力老鼠","note":"","ucode":"BD5B68796C21F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377821,"discussion_content":"跨领域级理解👍，大道相通","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622888641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155690,"avatar":"","nickname":"鱼肥","note":"","ucode":"60340A82E5D977","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589145,"discussion_content":"棒啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664443271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126158,"user_name":"DreamItPossible","can_delete":false,"product_type":"c1","uid":1254103,"ip_address":"","ucode":"232FCE2BB22012","user_header":"https://static001.geekbang.org/account/avatar/00/13/22/d7/fed46140.jpg","comment_is_top":false,"comment_ctime":1566342833,"is_pvip":false,"replies":[{"id":"52650","content":"👍能够前后联系起来，很好啊","user_name":"作者回复","comment_id":126158,"uid":"1053568","ip_address":"","utype":1,"ctime":1569660737,"user_name_real":"徐文浩"}],"discussion_count":3,"race_medal":0,"score":"104645557937","product_id":100026001,"comment_content":"如果从单条指令的执行来看，这句话显然是错的，因为即使最简单的无条件跳转指令都至少需要3个时钟周期；<br>在了解CPU的流水线设计之后，这句话从吞吐率的角度来讲，是正确的：以5级流水线为例，当过了5个时钟周期后，可以保证每个时钟周期都有一条指令执行完成，即实现了一个CPU的时钟周期；由于取指阶段肯定是所有5个阶段里耗时最长的，即一个CPU的时钟周期可以设置为取指阶段的花费时间；<br><br>注意，这里的5个时钟周期后，才有这种现象，意味着即使引入了流水线操作，这5个时钟周期的开销也是不可避免的，突然想到了之前讲到的Amdahl定律","like_count":24,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463855,"discussion_content":"👍能够前后联系起来，很好啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569660737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2825312,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/1c/60/d84a9131.jpg","nickname":"白夜","note":"","ucode":"FE876ACB1B5210","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414554,"discussion_content":"感谢，理解了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636811745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134567,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4f/e7/7e51052a.jpg","nickname":"fumeck.com🍋🌴summer sky","note":"","ucode":"6349BF32257990","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77988,"discussion_content":"精辟,你的解释最通俗易懂，受教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575963710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102400,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c1","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1560216159,"is_pvip":false,"replies":[{"id":"37077","content":"这个和多线程多进程没有太大关系，那个更多是操作系统调度的问题，这个是CPU在硬件层面的实现。","user_name":"作者回复","comment_id":102400,"uid":"1053568","ip_address":"","utype":1,"ctime":1560258835,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"44509889119","product_id":100026001,"comment_content":"这个不知道跟多线程 多进程是否有关系？","like_count":11,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453402,"discussion_content":"这个和多线程多进程没有太大关系，那个更多是操作系统调度的问题，这个是CPU在硬件层面的实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560258835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116910,"user_name":"瀚海星尘","can_delete":false,"product_type":"c1","uid":1024461,"ip_address":"","ucode":"90F418299EA3BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/cd/2c513481.jpg","comment_is_top":false,"comment_ctime":1563937523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23038774003","product_id":100026001,"comment_content":"各种工程都充满了权衡~","like_count":6},{"had_liked":false,"id":102114,"user_name":"喜欢吃鱼","can_delete":false,"product_type":"c1","uid":1250205,"ip_address":"","ucode":"02F41572F53E3C","user_header":"https://static001.geekbang.org/account/avatar/00/13/13/9d/d91dc762.jpg","comment_is_top":false,"comment_ctime":1560139565,"is_pvip":false,"replies":[{"id":"37115","content":"喜欢吃鱼同学，你好<br><br>准确地说，每一个流水线级的时间都是一个时钟周期，但是其中实际操作的时间，可能短于一个时钟周期。比如我们译码器其实就是一个组合逻辑电路，门延迟很低，就不需要一个完整的时钟周期就能完成自己的任务。那么在这个之后，它其实是在“等待”。","user_name":"作者回复","comment_id":102114,"uid":"1053568","ip_address":"","utype":1,"ctime":1560261936,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"23034976045","product_id":100026001,"comment_content":"每个流水线级的执行时间应该不一定相同吧，所以一个CPU执行周期是不是执行时间最久的流水线级所需要的时间？","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453266,"discussion_content":"喜欢吃鱼同学，你好\n\n准确地说，每一个流水线级的时间都是一个时钟周期，但是其中实际操作的时间，可能短于一个时钟周期。比如我们译码器其实就是一个组合逻辑电路，门延迟很低，就不需要一个完整的时钟周期就能完成自己的任务。那么在这个之后，它其实是在“等待”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560261936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102479,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1560232037,"is_pvip":false,"replies":[{"id":"37073","content":"Single-Cycle Processor就可以在一个时钟周期完成一条指令呀。虽然Single-Cycle Processor已经并不在现代CPU设计中使用了，但是并不代表这个是不可行的啊。","user_name":"作者回复","comment_id":102479,"uid":"1053568","ip_address":"","utype":1,"ctime":1560258700,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"18740101221","product_id":100026001,"comment_content":"这句话不正确<br>哪怕再简单的指令都要经过划分好的阶段。首先我们要明确那几个周期的概念 所谓时钟周期(或叫做震荡周期)是指cpu一次晶体震动的时间 是计算机最小的时间单位 就拿我们补码来说 取反加1 这实际上就至少需要2个脉冲也就是两个时钟周期了 对于一条指令来说我们把执行过程划分成好几个阶段(具体几个由厂商工艺设计决定) 每个阶段的时间就是一个机器周期 所以一般情况下执行一条指令的时间是由多个机器周期决定的而一个机器周期又由多个时钟周期决定的 这样一条流水线就是由最多时钟周期的机器周期时间决定的 显然一个时钟周期执行不完一条指令","like_count":4,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453447,"discussion_content":"Single-Cycle Processor就可以在一个时钟周期完成一条指令呀。虽然Single-Cycle Processor已经并不在现代CPU设计中使用了，但是并不代表这个是不可行的啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560258700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102402,"user_name":"softpower2018","can_delete":false,"product_type":"c1","uid":1058373,"ip_address":"","ucode":"CF8056F81D2898","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKiaqmp1PKvQCpDSK7953IEUHZ13uLgos97FwcYCqGrxMKs4arCZmZibSBoBrw6ibHp53jZ19haqw3fA/132","comment_is_top":false,"comment_ctime":1560216327,"is_pvip":false,"replies":[{"id":"37075","content":"softpower2018同学，你好，<br><br>其实现代流水线下的CPU，一个时钟周期已经不能执行完一条指令了。因为一般来说，取指令就要一个时钟钟周期……","user_name":"作者回复","comment_id":102402,"uid":"1053568","ip_address":"","utype":1,"ctime":1560258802,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"14445118215","product_id":100026001,"comment_content":"引入了流水线技术，一个时钟周期执行一条简单指令应该完全没问题吧！期待多指令并行执行带来的问题及其解决！","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453404,"discussion_content":"softpower2018同学，你好，\n\n其实现代流水线下的CPU，一个时钟周期已经不能执行完一条指令了。因为一般来说，取指令就要一个时钟钟周期……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560258802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102086,"user_name":"Only now","can_delete":false,"product_type":"c1","uid":1038574,"ip_address":"","ucode":"C617473A03AE27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/ee/6e7c2264.jpg","comment_is_top":false,"comment_ctime":1560132697,"is_pvip":false,"replies":[{"id":"37116","content":"没错，这是一个很好的角度，从吞吐率的角度来讲，如果没有superscalar这样的指令集并行，那么流水线没有遇到任何冒险问题的情况下。按吞吐率算下来相当于一个时钟周期完成了一条指令。","user_name":"作者回复","comment_id":102086,"uid":"1053568","ip_address":"","utype":1,"ctime":1560262132,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"14445034585","product_id":100026001,"comment_content":"一个 CPU 的时钟周期，可以认为是完成一条简单指令的时间。 这个应该是依据于吞吐量来理解的吧。<br>实际指令不能在一个时钟周期完成, 但是流水线的引入使吞吐量更高。","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453253,"discussion_content":"没错，这是一个很好的角度，从吞吐率的角度来讲，如果没有superscalar这样的指令集并行，那么流水线没有遇到任何冒险问题的情况下。按吞吐率算下来相当于一个时钟周期完成了一条指令。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560262132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299511,"user_name":"Tiger","can_delete":false,"product_type":"c1","uid":1903781,"ip_address":"","ucode":"BFD74BFE539A8A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0c/a5/0bbfd5e7.jpg","comment_is_top":false,"comment_ctime":1624688250,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5919655546","product_id":100026001,"comment_content":"老师，请问为什么访存会在执行阶段之后，不应该是先访存取出数据，再进行ALU运算，最后再将数据写回吗？","like_count":1,"discussions":[{"author":{"id":2878373,"avatar":"","nickname":"DioYang","note":"","ucode":"81B3D60B14FCA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546534,"discussion_content":"对于mips架构的CPU而言，设计5层架构，并不意味着每个步骤都需要执行，mem可能处于nop状态，对于运算指令在id阶段会进行对寄存器的操作，如果是load指令在ex阶段计算访问的地址，在mem和wb阶段后将数据写入寄存器中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642338113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161430,"user_name":"Ronnyz","can_delete":false,"product_type":"c1","uid":1488280,"ip_address":"","ucode":"9F34527B1D343D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/98/ffaf2aca.jpg","comment_is_top":false,"comment_ctime":1576204518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5871171814","product_id":100026001,"comment_content":"一个CPU时钟周期在指令流水中取决于指令拆分后最长的子阶段时间长度","like_count":1},{"had_liked":false,"id":106523,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1561339040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856306336","product_id":100026001,"comment_content":"刚刚老师提到为什么流水线级数不能太高，其实在if else有一个分支预测的技术，如果级数太高预测错误，导致清空后续的流水线重新拉取指令的代价也是很高的","like_count":1},{"had_liked":false,"id":106245,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1561216705,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856184001","product_id":100026001,"comment_content":"老师好!我又两个问题。<br>指令分级以后同样会存在一个问题啊，每一级执行时间不一样。这样一个指令周期需要时最长的那个级的时间么?还有就是每条指令的级数一样么?如果一个时钟周期就是一级的时间，那么执行时间长的指令的级数就多了吧。再就是指令分级这个需要考虑原子性这种么?还是随便分分?","like_count":2},{"had_liked":false,"id":102122,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1560141797,"is_pvip":true,"replies":[{"id":"37114","content":"一个流水线级就需要一个时钟周期，所以即使是无条件跳转这样的简单指令，也需要三个时钟周期。<br><br>是的，可能特定的流水线级的操作需要的时间很少，那么其他时间本质上是在“等待”。","user_name":"作者回复","comment_id":102122,"uid":"1053568","ip_address":"","utype":1,"ctime":1560261838,"user_name_real":"徐文浩"}],"discussion_count":1,"race_medal":0,"score":"5855109093","product_id":100026001,"comment_content":"     无条件跳转这样的简单指令三个流水级应该可以在一个时钟周期完成，换句话说就是一个指令在一个时钟周期完成。但是稍微复杂的指令往往是超过一个时钟周期的。<br>    这里有一点疑惑:在流水线设计的CPU中，一个时钟周期只会执行一个流水级吗？对于很简单的流水级，可能执行时间只占时钟周期的一半，那另一半就是什么也不干吗？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453271,"discussion_content":"一个流水线级就需要一个时钟周期，所以即使是无条件跳转这样的简单指令，也需要三个时钟周期。\n\n是的，可能特定的流水线级的操作需要的时间很少，那么其他时间本质上是在“等待”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560261838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351808,"user_name":"小耿","can_delete":false,"product_type":"c1","uid":1153707,"ip_address":"","ucode":"1C8B66C738D33B","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/ab/fd201314.jpg","comment_is_top":false,"comment_ctime":1658202334,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658202334","product_id":100026001,"comment_content":"老师有一个问题：有没有可能下一条指令需要上一条指令的执行结果？如果像现在这样多条流水线并行执行，不也会出现前一条指令结果未写入，下一条指令已经开始读取的错误么？","like_count":0},{"had_liked":false,"id":344867,"user_name":"15314496295","can_delete":false,"product_type":"c1","uid":2987082,"ip_address":"","ucode":"B8A2EC251B9C04","user_header":"","comment_is_top":false,"comment_ctime":1651827750,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651827750","product_id":100026001,"comment_content":"这个就是微指令吧","like_count":0},{"had_liked":false,"id":321020,"user_name":"活着即是修行","can_delete":false,"product_type":"c1","uid":2258416,"ip_address":"","ucode":"C420AA71FB7F9F","user_header":"https://static001.geekbang.org/account/avatar/00/22/75/f0/2c65887d.jpg","comment_is_top":false,"comment_ctime":1636622991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636622991","product_id":100026001,"comment_content":"一个CPU的时钟周期，应该是流水线中多个过程的最长部分的执行过程。<br>因为我们在cpu改进的过程中，原来是一个时钟周期执行一条指令。后来我们为了高效利用cpu的多线程，同时避免一条指令过于复杂的情况，我们采取了流水线。流水线中的每个部分使用一个时钟周期，所以时钟周期应该是流水线中耗时最长的部分的时间（因为要保证所有部分都能在时钟周期内完成。否则，若读的时钟周期还没有执行完，就切换到写的时钟周期，就发生错误了）","like_count":0},{"had_liked":false,"id":320244,"user_name":"HollyWong","can_delete":false,"product_type":"c1","uid":2837328,"ip_address":"","ucode":"03A66A2BCC0A58","user_header":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","comment_is_top":false,"comment_ctime":1636170970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636170970","product_id":100026001,"comment_content":"改成指令操作更合适些。","like_count":0},{"had_liked":false,"id":315671,"user_name":"K菌无惨","can_delete":false,"product_type":"c1","uid":2194764,"ip_address":"","ucode":"97A532D588FD49","user_header":"","comment_is_top":false,"comment_ctime":1633941548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633941548","product_id":100026001,"comment_content":"话说这个级数和cpu的并发度有关系吗？","like_count":0},{"had_liked":false,"id":295001,"user_name":"菽绣","can_delete":false,"product_type":"c1","uid":1755477,"ip_address":"","ucode":"60955E14C39C6B","user_header":"https://static001.geekbang.org/account/avatar/00/1a/c9/55/0e627a31.jpg","comment_is_top":false,"comment_ctime":1622178752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622178752","product_id":100026001,"comment_content":"一个流水线级为什么必须得在一个时钟周期内完成","like_count":0},{"had_liked":false,"id":251579,"user_name":"Sunny","can_delete":false,"product_type":"c1","uid":1305257,"ip_address":"","ucode":"BB7B274CE0672E","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/a9/0a917f2c.jpg","comment_is_top":false,"comment_ctime":1601699187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601699187","product_id":100026001,"comment_content":"“单条指令执行的延时”是啥意思？","like_count":0},{"had_liked":false,"id":243931,"user_name":"晓冰","can_delete":false,"product_type":"c1","uid":1139231,"ip_address":"","ucode":"E0117E14E6BB8C","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/1f/cd1cbdb1.jpg","comment_is_top":false,"comment_ctime":1598330088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598330088","product_id":100026001,"comment_content":"一个 CPU 的时钟周期，可以认为是完成一条简单指令的时间，我觉得这样说问题也不大，对于单指令处理器来说，首先是简单指令，那么一个时钟周期能执行完，那么复杂指令就要区别对待，他耗时肯定会长，所以这也是cpu最大是多少GHz的原因吧。流水线式的应该是完成一个指令的一个阶段花费的时间，这是我的理解。","like_count":0},{"had_liked":false,"id":241324,"user_name":"徐凯","can_delete":false,"product_type":"c1","uid":1244991,"ip_address":"","ucode":"12F82BA3649CD5","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/3f/bbb8a88c.jpg","comment_is_top":false,"comment_ctime":1597246897,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597246897","product_id":100026001,"comment_content":"你好  我想问下 在业务上用了流水线的方式去对一条消息进行了三步处理  当整个流水线处于流动状态时，每过&quot;一段时间&quot;会有一条消息被处理完成，而这段时间指的是三步处理中最耗时的那一步所花费的时间对吧","like_count":0},{"had_liked":false,"id":229962,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1593227557,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593227557","product_id":100026001,"comment_content":"Cpu处理一条指令，包括读指令，指令译码和执行指令这三步操作，读指令阶段需要时钟信号来完成PC寄存器的自增，以及在译码和执行阶段完成写寄存器操作，这就需要每条指令的指令周期要足够长，让每条指令都能执行完，否则，后一条指令开始了前一条指令还没结束，会破坏寄存器数据。这就要求指令周期以最长一条指令为基准，但这样会导致很多的浪费，有些指令如无条件跳转指令在译码器就已经退出了，然后就是一段时间的等待，而且加法指令的处理速度比浮点数乘法指令要快的多。<br><br>为此，cpu引入流水线的概念，把一条指令拆分成多个阶段，每个阶段对应一个流水线级，这样一来，只要保证一个流水线的指令能在一个时钟周期下完成即可。","like_count":0},{"had_liked":false,"id":229954,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1593226064,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593226064","product_id":100026001,"comment_content":"流水线不能用来减少指令执行的延时，但可以提高cpu的指令吞吐量，隐藏单个指令的延时。","like_count":0},{"had_liked":false,"id":227587,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1592439280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592439280","product_id":100026001,"comment_content":"一个时钟周期可以认为是cpu公司各部分协调工作的节拍，负责各个阶段的部门的工作可以看成一个无状态函数，即:  流水线下游寄存器 =  f(流水线上游寄存器）。<br><br>各部门的工作是由时钟节拍协调的，所有部门必须在一个节拍里完成工作，以为上下游是有依赖的，不然就会影响其他部门的工作。<br><br>所以说一个时钟周期可以认为是做事最拖沓的部门完成一项工作的时间。","like_count":0},{"had_liked":false,"id":221446,"user_name":"逆舟","can_delete":false,"product_type":"c1","uid":1270780,"ip_address":"","ucode":"B303B4B8E10E0C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er8AdNibZHbZriaqLQZrNPcX8hVOpY91o0ELl7eOq7qy3aTibjia10ymIsKUKW6Ucs9SuXBDWlg6sjahw/132","comment_is_top":false,"comment_ctime":1590500470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590500470","product_id":100026001,"comment_content":"“我们的指令执行过程也是一样的，它会拆分成“取指令、译码、执行”这样三大步骤。更细分一点的话，执行的过程，其实还包含从寄存器或者内存中读取数据，通过 ALU 进行运算，把结果写回到寄存器或者内存中。”<br>老师，请问为什么五级流水线里 执行 在 访存 的前面？按照上面这段话描述，访存可能在ALU运算（难道 执行 不是这个意思吗？）前面。","like_count":0},{"had_liked":false,"id":206075,"user_name":"WENMURAN","can_delete":false,"product_type":"c1","uid":1915404,"ip_address":"","ucode":"5D1CE8B41937C7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXNhbTULKiakib8lYXrvGF2zPwfedooBzC2EtSv1nt1MwV1KUvTkcJrvCBFvcdwJicnr3OEXnk9GUCg/132","comment_is_top":false,"comment_ctime":1586784382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586784382","product_id":100026001,"comment_content":"面向流水线的指令设计上<br>     一条CPU指令的执行：取得指令，指令译码，执行指令。确保这样一条指令在一个时钟周期内完成,即是单指令周期处理器。<br>问题：指令的复杂程度不一样，单指令只能根据最慢的指令来，这就会影响效率。<br>指令流水线。把指令拆分，指令的获取、译码、执行中，执行的过程还可拆分成从寄存器或内存获取数据，通过ALU进行运算，将结果写回寄存器或内存中。每一个阶段的电路完成任务后，直接执行下一条指令的对应阶段，是为流水线级。<br>现代的ARM和intel的CPU达到流水线14级。流水线级不是越多越好，级数过多，会造成overhead的浪费。","like_count":0},{"had_liked":false,"id":186683,"user_name":"Anthony","can_delete":false,"product_type":"c1","uid":1309908,"ip_address":"","ucode":"9E0C98A9123365","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d4/743d3f02.jpg","comment_is_top":false,"comment_ctime":1583900926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583900926","product_id":100026001,"comment_content":"协程像是cpu的流水线","like_count":0},{"had_liked":false,"id":162071,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1576458460,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576458460","product_id":100026001,"comment_content":"CPU就像生产线一样，不同分工的组件不断处理上游传递下来的内容，而不需要等待单件商品生产完成之后，再启动下一件商品的生产过程。","like_count":0},{"had_liked":false,"id":144987,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1572151661,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572151661","product_id":100026001,"comment_content":"<br>---总结---<br>由于需要保证同一时刻同一硬件设备仅被一个指令所使用，我们要保证一个指令周期能完成一个最复杂的指令，导致平均执行时间下降。<br>而通过引入流水线，我们从吞吐率这个性能指标上做提升，保证CPU中各硬件部分的充分利用。<br>作为性能调优的思路，首先我们需要确定是否有部分模块做了无用功，此外，再看是否每时每刻已经充分利用了资源。<br>---问题---<br>老师您好，请问下流水线寄存器是会用来存放所有中间结果的吗？比如说取指这个阶段，指令除了会被放到指令寄存器，还会被放到流水线寄存器？","like_count":0,"discussions":[{"author":{"id":1350581,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9b/b5/88f535ab.jpg","nickname":"hongbosherlock","note":"","ucode":"45F1306FF3111E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41399,"discussion_content":"每两个流水线级之间就有一个流水线寄存器，用来存放上一级流水线级所产生的结果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572419447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142893,"user_name":"westfall","can_delete":false,"product_type":"c1","uid":1632773,"ip_address":"","ucode":"F3F5CB7DF695FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/05/b164dc15.jpg","comment_is_top":false,"comment_ctime":1571577278,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571577278","product_id":100026001,"comment_content":"之前不是说时钟周期是CPU频率的倒数吗？那时钟周期应该是固定的呀！","like_count":0,"discussions":[{"author":{"id":2181461,"avatar":"https://static001.geekbang.org/account/avatar/00/21/49/55/062c8d54.jpg","nickname":"林有有头号粉丝","note":"","ucode":"8DBEEC0B7E7CE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385424,"discussion_content":"不同CPU有不同的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627033118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139691,"user_name":"w 🍍","can_delete":false,"product_type":"c1","uid":1228290,"ip_address":"","ucode":"F2386C971EC58B","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/02/43202976.jpg","comment_is_top":false,"comment_ctime":1570706443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570706443","product_id":100026001,"comment_content":" 内存访问这一步是在做什么呢， alu计算后就可以直接回写到寄存器吧.... ","like_count":0},{"had_liked":false,"id":138981,"user_name":"DriveMan_邱佳源","can_delete":false,"product_type":"c1","uid":1250807,"ip_address":"","ucode":"A4C83BF07DEE7A","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/f7/744720a2.jpg","comment_is_top":false,"comment_ctime":1570522263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570522263","product_id":100026001,"comment_content":"虽说流水线有提升cpu吞吐率，但是把流水线分成了n级，那么肯定有一级是读取内存的，这步是最耗时，整个流水线会因为这一步而拖迟了时间，也会因为这一步而致使一部分级别处于等待状态，所以重点是如何解决最原始最拖迟的读内存操作。","like_count":0},{"had_liked":false,"id":129980,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1567346863,"is_pvip":false,"replies":[{"id":"51155","content":"谢谢支持👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1568547758,"ip_address":"","comment_id":129980,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567346863","product_id":100026001,"comment_content":"老师的比喻使我们理解起来非常容易、给老师点赞<br>day20 笔记：https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;11434290.html","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465749,"discussion_content":"谢谢支持👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568547758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109983,"user_name":"栋能","can_delete":false,"product_type":"c1","uid":1006849,"ip_address":"","ucode":"8BD9C939D3E8E1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/01/9cd84003.jpg","comment_is_top":false,"comment_ctime":1562145064,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562145064","product_id":100026001,"comment_content":"有个问题：“五级的流水线，就表示我们在同一个时钟周期里面，同时运行五条指的不同阶段。这个时候，虽然执行一条指令的时钟周期变成了 5，但是我们可以把 CPU 的主频提得更高了”。这句话理解起来好有问题。一条指令分为五级流水操作，都在同一个时钟周期，为什么会在同一个时钟周期？而后面是种周期变为5。这两个时钟周期是指同一个东西？","like_count":0,"discussions":[{"author":{"id":1350581,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9b/b5/88f535ab.jpg","nickname":"hongbosherlock","note":"","ucode":"45F1306FF3111E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41400,"discussion_content":"一个周期运行五条指令的不同阶段，是指不同部件运行不同阶段，这些部件是可以并行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572419656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108113,"user_name":"张益达","can_delete":false,"product_type":"c1","uid":1470389,"ip_address":"","ucode":"745E307F987C6E","user_header":"https://static001.geekbang.org/account/avatar/00/16/6f/b5/e0f067ad.jpg","comment_is_top":false,"comment_ctime":1561683410,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1561683410","product_id":100026001,"comment_content":"老师你好，有点疑问。取得指令（Fetch）- 指令译码（Decode）- 执行指令（Execute） 这三个步骤是同时进行的？如果是，是怎么样在还没取得指令完成的情况下同时进行下两个步骤的？","like_count":0,"discussions":[{"author":{"id":1130791,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/27/528144cc.jpg","nickname":"共和国长子","note":"","ucode":"C2F8F66FB23D3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4307,"discussion_content":"假设我们现在有一个饮料厂，厂里面有一条生产线，生产线上有3个人，第一个人负责取瓶子，第二个人负责装水，第三个人负责拧瓶盖。旁边有一个人喊口号，喊一次口号这三个人就同时做一次动作。那么现在想想一下。 现在新的一天开始了。工人们都就位了。\n喊口号的开始喊第一个口号。 那么，第一个人去了一个瓶子，第二个人没有瓶子，不做动作，第三个人没有瓶子也不做动作。 \n喊口号的喊了第二个口号。 那么，第一个人把瓶子给了第二个人，自己又取了第二个瓶子，第二个人拿到了第一个瓶子并且开始装水，第三个人没有瓶子，不做动作。\n喊口号的喊了第三个口号。那么,第一个人把第二个瓶子又交给了第二个人，自己又取了第三个瓶子。与此同时，第二个人把第一个瓶子给了第三个人，自己开始给第二个瓶子倒水。第三个人这时候接到了第一个瓶子并开始拧瓶盖。\n此时，三人同时在进行工作。只不过处理的瓶子不同而已。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1565312327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1138671,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5f/ef/dd9a0ae1.jpg","nickname":"hello","note":"","ucode":"A6688C4D539EF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1130791,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/27/528144cc.jpg","nickname":"共和国长子","note":"","ucode":"C2F8F66FB23D3D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331197,"discussion_content":"比喻得真好，解答了我的疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606805801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4307,"ip_address":""},"score":331197,"extra":""}]}]},{"had_liked":false,"id":107137,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1561464926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561464926","product_id":100026001,"comment_content":"一个时钟周期可以完成多条指令的不同阶段，即一个时钟周期，多个独立的组合逻辑电路组件可以同时运行，因此一个时钟周期完成一条简单指令的说法就不准确了","like_count":0},{"had_liked":false,"id":105977,"user_name":"连边","can_delete":false,"product_type":"c1","uid":1391748,"ip_address":"","ucode":"54B5DA38449728","user_header":"https://static001.geekbang.org/account/avatar/00/15/3c/84/608f679b.jpg","comment_is_top":false,"comment_ctime":1561118843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561118843","product_id":100026001,"comment_content":"谢谢老师推荐的书。","like_count":0}]}