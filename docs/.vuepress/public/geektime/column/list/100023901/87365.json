{"id":87365,"title":"12 | 如何用面向对象思想写好并发程序？","content":"<p>在工作中，我发现很多同学在设计之初都是直接按照单线程的思路来写程序的，而忽略了本应该重视的并发问题；等上线后的某天，突然发现诡异的Bug，再历经千辛万苦终于定位到问题所在，却发现对于如何解决已经没有了思路。</p><p>关于这个问题，我觉得咱们今天很有必要好好聊聊“如何用面向对象思想写好并发程序”这个话题。</p><p>面向对象思想与并发编程有关系吗？本来是没关系的，它们分属两个不同的领域，但是在Java语言里，这两个领域被无情地融合在一起了，好在融合的效果还是不错的：<strong>在Java语言里，面向对象思想能够让并发编程变得更简单</strong>。</p><p>那如何才能用面向对象思想写好并发程序呢？结合我自己的工作经验来看，我觉得你可以从封装共享变量、识别共享变量间的约束条件和制定并发访问策略这三个方面下手。</p><h2>一、封装共享变量</h2><p>并发程序，我们关注的一个核心问题，不过是解决多线程同时访问共享变量的问题。在<a href=\"https://time.geekbang.org/column/article/84344\">《03 | 互斥锁（上）：解决原子性问题》</a>中，我们类比过球场门票的管理，现实世界里门票管理的一个核心问题是：所有观众只能通过规定的入口进入，否则检票就形同虚设。在编程世界这个问题也很重要，编程领域里面对于共享变量的访问路径就类似于球场的入口，必须严格控制。好在有了面向对象思想，对共享变量的访问路径可以轻松把控。</p><!-- [[[read_end]]] --><p>面向对象思想里面有一个很重要的特性是<strong>封装</strong>，封装的通俗解释就是<strong>将属性和实现细节封装在对象内部</strong>，外界对象<strong>只能通过</strong>目标对象提供的<strong>公共方法来间接访问</strong>这些内部属性，这和门票管理模型匹配度相当的高，球场里的座位就是对象属性，球场入口就是对象的公共方法。我们把共享变量作为对象的属性，那对于共享变量的访问路径就是对象的公共方法，所有入口都要安排检票程序就相当于我们前面提到的并发访问策略。</p><p>利用面向对象思想写并发程序的思路，其实就这么简单：<strong>将共享变量作为对象属性封装在内部，对所有公共方法制定并发访问策略</strong>。就拿很多统计程序都要用到计数器来说，下面的计数器程序共享变量只有一个，就是value，我们把它作为Counter类的属性，并且将两个公共方法get()和addOne()声明为同步方法，这样Counter类就成为一个线程安全的类了。</p><pre><code>public class Counter {\n  private long value;\n  synchronized long get(){\n    return value;\n  }\n  synchronized long addOne(){\n    return ++value;\n  }\n}\n</code></pre><p>当然，实际工作中，很多的场景都不会像计数器这么简单，经常要面临的情况往往是有很多的共享变量，例如，信用卡账户有卡号、姓名、身份证、信用额度、已出账单、未出账单等很多共享变量。这么多的共享变量，如果每一个都考虑它的并发安全问题，那我们就累死了。但其实仔细观察，你会发现，很多共享变量的值是不会变的，例如信用卡账户的卡号、姓名、身份证。<strong>对于这些不会发生变化的共享变量，建议你用final关键字来修饰</strong>。这样既能避免并发问题，也能很明了地表明你的设计意图，让后面接手你程序的兄弟知道，你已经考虑过这些共享变量的并发安全问题了。</p><h2>二、识别共享变量间的约束条件</h2><p>识别共享变量间的约束条件非常重要。因为<strong>这些约束条件，决定了并发访问策略</strong>。例如，库存管理里面有个合理库存的概念，库存量不能太高，也不能太低，它有一个上限和一个下限。关于这些约束条件，我们可以用下面的程序来模拟一下。在类SafeWM中，声明了两个成员变量upper和lower，分别代表库存上限和库存下限，这两个变量用了AtomicLong这个原子类，原子类是线程安全的，所以这两个成员变量的set方法就不需要同步了。</p><pre><code>public class SafeWM {\n  // 库存上限\n  private final AtomicLong upper =\n        new AtomicLong(0);\n  // 库存下限\n  private final AtomicLong lower =\n        new AtomicLong(0);\n  // 设置库存上限\n  void setUpper(long v){\n    upper.set(v);\n  }\n  // 设置库存下限\n  void setLower(long v){\n    lower.set(v);\n  }\n  // 省略其他业务代码\n}\n</code></pre><p>虽说上面的代码是没有问题的，但是忽视了一个约束条件，就是<strong>库存下限要小于库存上限</strong>，这个约束条件能够直接加到上面的set方法上吗？我们先直接加一下看看效果（如下面代码所示）。我们在setUpper()和setLower()中增加了参数校验，这乍看上去好像是对的，但其实存在并发问题，问题在于存在竞态条件。这里我顺便插一句，其实当你看到代码里出现if语句的时候，就应该立刻意识到可能存在竞态条件。</p><p>我们假设库存的下限和上限分别是(2,10)，线程A调用setUpper(5)将上限设置为5，线程B调用setLower(7)将下限设置为7，如果线程A和线程B完全同时执行，你会发现线程A能够通过参数校验，因为这个时候，下限还没有被线程B设置，还是2，而5&gt;2；线程B也能够通过参数校验，因为这个时候，上限还没有被线程A设置，还是10，而7&lt;10。当线程A和线程B都通过参数校验后，就把库存的下限和上限设置成(7, 5)了，显然此时的结果是不符合<strong>库存下限要小于库存上限</strong>这个约束条件的。</p><pre><code>public class SafeWM {\n  // 库存上限\n  private final AtomicLong upper =\n        new AtomicLong(0);\n  // 库存下限\n  private final AtomicLong lower =\n        new AtomicLong(0);\n  // 设置库存上限\n  void setUpper(long v){\n    // 检查参数合法性\n    if (v &lt; lower.get()) {\n      throw new IllegalArgumentException();\n    }\n    upper.set(v);\n  }\n  // 设置库存下限\n  void setLower(long v){\n    // 检查参数合法性\n    if (v &gt; upper.get()) {\n      throw new IllegalArgumentException();\n    }\n    lower.set(v);\n  }\n  // 省略其他业务代码\n}\n</code></pre><p>在没有识别出<strong>库存下限要小于库存上限</strong>这个约束条件之前，我们制定的并发访问策略是利用原子类，但是这个策略，完全不能保证<strong>库存下限要小于库存上限</strong>这个约束条件。所以说，在设计阶段，我们<strong>一定要识别出所有共享变量之间的约束条件，如果约束条件识别不足，很可能导致制定的并发访问策略南辕北辙</strong>。</p><p>共享变量之间的约束条件，反映在代码里，基本上都会有if语句，所以，一定要特别注意竞态条件。</p><h2>三、制定并发访问策略</h2><p>制定并发访问策略，是一个非常复杂的事情。应该说整个专栏都是在尝试搞定它。不过从方案上来看，无外乎就是以下“三件事”。</p><ol>\n<li>避免共享：避免共享的技术主要是利于线程本地存储以及为每个任务分配独立的线程。</li>\n<li>不变模式：这个在Java领域应用的很少，但在其他领域却有着广泛的应用，例如Actor模式、CSP模式以及函数式编程的基础都是不变模式。</li>\n<li>管程及其他同步工具：Java领域万能的解决方案是管程，但是对于很多特定场景，使用Java并发包提供的读写锁、并发容器等同步工具会更好。</li>\n</ol><p>接下来在咱们专栏的第二模块我会仔细讲解Java并发工具类以及他们的应用场景，在第三模块我还会讲解并发编程的设计模式，这些都是和制定并发访问策略有关的。</p><p>除了这些方案之外，还有一些宏观的原则需要你了解。这些宏观原则，有助于你写出“健壮”的并发程序。这些原则主要有以下三条。</p><ol>\n<li>优先使用成熟的工具类：Java SDK并发包里提供了丰富的工具类，基本上能满足你日常的需要，建议你熟悉它们，用好它们，而不是自己再“发明轮子”，毕竟并发工具类不是随随便便就能发明成功的。</li>\n<li>迫不得已时才使用低级的同步原语：低级的同步原语主要指的是synchronized、Lock、Semaphore等，这些虽然感觉简单，但实际上并没那么简单，一定要小心使用。</li>\n<li>避免过早优化：安全第一，并发程序首先要保证安全，出现性能瓶颈后再优化。在设计期和开发期，很多人经常会情不自禁地预估性能的瓶颈，并对此实施优化，但残酷的现实却是：性能瓶颈不是你想预估就能预估的。</li>\n</ol><h2>总结</h2><p>利用面向对象思想编写并发程序，一个关键点就是利用面向对象里的封装特性，由于篇幅原因，这里我只做了简单介绍，详细的你可以借助相关资料定向学习。而对共享变量进行封装，要避免“逸出”，所谓“逸出”简单讲就是共享变量逃逸到对象的外面，比如在<a href=\"https://time.geekbang.org/column/article/84017\">《02 | Java内存模型：看Java如何解决可见性和有序性问题》</a>那一篇我们已经讲过构造函数里的this“逸出”。这些都是必须要避免的。</p><p>这是我们专栏并发理论基础的最后一部分内容，这一部分内容主要是让你对并发编程有一个全面的认识，让你了解并发编程里的各种概念，以及它们之间的关系，当然终极目标是让你知道遇到并发问题该怎么思考。这部分的内容还是有点烧脑的，但专栏后面几个模块的内容都是具体的实践部分，相对来说就容易多了。我们一起坚持吧！</p><h2>课后思考</h2><p>本期示例代码中，类SafeWM不满足库存下限要小于库存上限这个约束条件，那你来试试修改一下，让它能够在并发条件下满足库存下限要小于库存上限这个约束条件。</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><h2>延伸阅读</h2><p>关于这部分的内容，如果你觉得还不“过瘾”，这里我再给你推荐一本书吧——<a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F2758xqdzr6uuw\">《Java并发编程实战》</a>，这本书的第三章《对象的共享》、第四章《对象的组合》全面地介绍了如何构建线程安全的对象，你可以拿来深入地学习。</p><p></p>","comments":[{"had_liked":false,"id":79900,"user_name":"magict4","can_delete":false,"product_type":"c1","uid":1043789,"ip_address":"","ucode":"CB6F063D881AAC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/4d/1d1a1a00.jpg","comment_is_top":false,"comment_ctime":1553570961,"is_pvip":false,"replies":[{"id":"29317","content":"👍👍<br>","user_name":"作者回复","comment_id":79900,"uid":"1269969","ip_address":"","utype":1,"ctime":1553695588,"user_name_real":"王宝令"}],"discussion_count":14,"race_medal":0,"score":"714518142097","product_id":100023901,"comment_content":"1. setUpper() 跟 setLower() 都加上 &quot;synchronized&quot; 关键字。不要太在意性能，老师都说了，避免过早优化。<br>2. 如果性能有问题，可以把 lower 跟 upper 两个变量封装到一个类中，例如<br>```<br>public class Boundary {<br>    private final lower;<br>    private final upper;<br>    <br>    public Boundary(long lower, long upper) {<br>        if(lower &gt;= upper) {<br>            &#47;&#47; throw exception<br>        }<br>        this.lower = lower;<br>        this.upper = upper;<br>    }<br>}<br>```<br>移除 SafeVM 的 setUpper() 跟 setLower() 方法，并增入 setBoundary(Boundary boundary) 方法。","like_count":166,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444676,"discussion_content":"👍👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553695588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117530,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0d/5a/e60f4125.jpg","nickname":"camel","note":"","ucode":"D0D698CD74388F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267837,"discussion_content":"方法二的性能真的有优化吗？多线程场景下upper和lower是在两个线程里不能在一个函数内同时set","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1589698735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1099706,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","nickname":"zhaozp","note":"","ucode":"BF390F5ED762CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1117530,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0d/5a/e60f4125.jpg","nickname":"camel","note":"","ucode":"D0D698CD74388F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":300368,"discussion_content":"可以只设置1个，另一个从db里查询，或者在update sql条件加 where low < upper限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598065877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":267837,"ip_address":""},"score":300368,"extra":""}]},{"author":{"id":1132661,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","nickname":"乘坐Tornado的线程魔法师","note":"","ucode":"C4C9915866E769","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139680,"discussion_content":"在生成类实例的时候，不会有并发问题吧，构造函数本身就是线程安全的？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579311094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63188,"discussion_content":"方案二没懂 能给解释下吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574867681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1589208,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITcwicqBDYzXtLibUtian172tPs7rJpqG1Vab4oGjnguA9ziaYjDCILSGaS6qRiakvRdUEhdmSG0BGPKw/132","nickname":"大饶Raysir","note":"","ucode":"0AFA191420A30D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211817,"discussion_content":"我的理解是set方法线程不安全的点在于竞态条件中获取到的值通过了判断，但是在set的时候可能不是最新的。方法二类封装的两个属性都是不可变的，在setBoundary()方法中去赋值就不会存在值被更新的情况，类似于ThreadLocal的独立副本","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1584889061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":63188,"ip_address":""},"score":211817,"extra":""},{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1589208,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITcwicqBDYzXtLibUtian172tPs7rJpqG1Vab4oGjnguA9ziaYjDCILSGaS6qRiakvRdUEhdmSG0BGPKw/132","nickname":"大饶Raysir","note":"","ucode":"0AFA191420A30D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296659,"discussion_content":"你这咋调整库存啊，每次都 new 一个对象嘛。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596615650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211817,"ip_address":""},"score":296659,"extra":""},{"author":{"id":1554995,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","nickname":"时光守护者-基兰","note":"","ucode":"F0B0887B1979D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362397,"discussion_content":"应该是每次调用setBoundary去new一个Boundary对象，类似线程封闭，每个线程都有自己的Boundary对象，不存在并发安全问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1616936753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296659,"ip_address":""},"score":362397,"extra":""}]},{"author":{"id":1237399,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e1/97/fec494f2.jpg","nickname":"大大。","note":"","ucode":"A6716E46264AC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65175,"discussion_content":"我觉得加lock给这两个set方法就可以了，你这个包装成类的，如果只设置一个值的时候，还是需要去get另外一个值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574988261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b85dce85.jpg","nickname":"无尽蔚蓝","note":"","ucode":"A665DF46833A81","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559847,"discussion_content":"噢，第二个方法是不是还要修改原来的两个upper 和lower成员变量变成一个Boundary？这样就可以线程安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648997913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b85dce85.jpg","nickname":"无尽蔚蓝","note":"","ucode":"A665DF46833A81","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559844,"discussion_content":"请问第二个方法如果两个线程同时进入setBoundery不会有线程安全的问题吗，比如一个set(3,4) 一个set(5,6)最后boundary一定不会变成(3,6)吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648997732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318449,"discussion_content":"方法二的属性用final修饰却一开始不赋值，直接编译报错啊。。。。难道你们的编译器不报错吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603757566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1758825,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d6/69/f59d4f6f.jpg","nickname":"Ryan","note":"","ucode":"387955FD53E98C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413744,"discussion_content":"对象的final字段直接赋值和在构造方法里赋值是一样的，编译后都是在构造方法里进行赋值的，看一下字节码就知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636553515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318449,"ip_address":""},"score":413744,"extra":""}]},{"author":{"id":1156592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","nickname":"Joker","note":"","ucode":"126AF848001A1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42998,"discussion_content":"老哥，稳啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572839735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80108,"user_name":"海鸿","can_delete":false,"product_type":"c1","uid":1104275,"ip_address":"","ucode":"7074EF94EA70AD","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/93/098e5ef5.jpg","comment_is_top":false,"comment_ctime":1553606753,"is_pvip":false,"replies":[{"id":"29233","content":"相当正确！<br>","user_name":"作者回复","comment_id":80108,"uid":"1269969","ip_address":"","utype":1,"ctime":1553647154,"user_name_real":"王宝令"}],"discussion_count":8,"race_medal":0,"score":"250661709921","product_id":100023901,"comment_content":"我看有些人评论用volatie，volatie只能保证可见性，但是保证不了原子性，所以得加锁保证互斥。<br>老师我这样理解对吗？","like_count":58,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444754,"discussion_content":"相当正确！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553647154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307816,"discussion_content":"不懂就问。atomic不是已经保证原子性了么，那么加上volatile不是可见原子两开花？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1600765759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1687656,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c0/68/314e8306.jpg","nickname":"威先森","note":"","ucode":"5F445C6832274B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359215,"discussion_content":"两开花牛逼啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616143050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307816,"ip_address":""},"score":359215,"extra":""},{"author":{"id":1554995,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","nickname":"时光守护者-基兰","note":"","ucode":"F0B0887B1979D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362401,"discussion_content":"这里说的原子性应该是业务上的原子性吧，10-2修改为5-7失败而不是多个线程对10修改为5的原子性（读，修改，赋值）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616936991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307816,"ip_address":""},"score":362401,"extra":""},{"author":{"id":2555948,"avatar":"","nickname":"Geek_b76b97","note":"","ucode":"5968DEF6D0018B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367057,"discussion_content":"因为两个共享变量是有联系的，一个变量的原子性并不能保证多个变量整体的原子性，volatile是多个线程对一个变量时有效，像这种多个变量的就无效了，从整体类的层面应该加synchronized","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618241249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307816,"ip_address":""},"score":367057,"extra":""}]},{"author":{"id":3067096,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/cc/d8/6cdd4b15.jpg","nickname":"一如往常i","note":"","ucode":"C9A5AEA38B3E97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586408,"discussion_content":"说得好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662191722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2410092,"avatar":"https://static001.geekbang.org/account/avatar/00/24/c6/6c/a400175a.jpg","nickname":"FARO_Z","note":"","ucode":"B33BCC36C2A74E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580094,"discussion_content":"单个Atomic是原子的，但是对一个读另一个写的操作不是原子的，有竞态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657870622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79928,"user_name":"江南豆沙包","can_delete":false,"product_type":"c1","uid":1061596,"ip_address":"","ucode":"4B7833260F9F2F","user_header":"https://static001.geekbang.org/account/avatar/00/10/32/dc/d3e3847f.jpg","comment_is_top":false,"comment_ctime":1553575831,"is_pvip":false,"replies":[{"id":"29235","content":"感谢信任！我们这里说的共享是进程级别的，如果是分布式计算只能靠redis,db,zk这些来搞分布式的锁，当然不共享是最好的解决方案。","user_name":"作者回复","comment_id":79928,"uid":"1269969","ip_address":"","utype":1,"ctime":1553647431,"user_name_real":"王宝令"}],"discussion_count":4,"race_medal":0,"score":"126107627415","product_id":100023901,"comment_content":"令哥，一直在追你的专栏，结合公司目前实际情况，有个疑问，如果你专栏中的例子中的共享信息，是整个系统维度的，系统又是多实例集群部署的，我们该怎么办呢，能不能在思想或实现思路上给点建议指导。","like_count":29,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444693,"discussion_content":"感谢信任！我们这里说的共享是进程级别的，如果是分布式计算只能靠redis,db,zk这些来搞分布式的锁，当然不共享是最好的解决方案。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1553647431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380293,"discussion_content":"只能保证单个jvm下的并发安全，，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624429727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131574,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/36/c5dc914f.jpg","nickname":"石头","note":"","ucode":"8908B1989A3C4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317283,"discussion_content":"请教个问题，分布式环境下像lock、synchronized 是不是不能保障线程安全，然后就需要分布式锁这种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603527682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1131027,"avatar":"https://static001.geekbang.org/account/avatar/00/11/42/13/860e176a.jpg","nickname":"外国肉夹馍","note":"","ucode":"00BADDCFEA92B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1131574,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/36/c5dc914f.jpg","nickname":"石头","note":"","ucode":"8908B1989A3C4A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337701,"discussion_content":"当然。lock，synchronized都只是单机的范畴。如果有多台机器，那就要使用其他类型的锁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609050544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":317283,"ip_address":""},"score":337701,"extra":""}]}]},{"had_liked":false,"id":80568,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1553683041,"is_pvip":false,"replies":[{"id":"29302","content":"👍<br>","user_name":"作者回复","comment_id":80568,"uid":"1269969","ip_address":"","utype":1,"ctime":1553693959,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"117517800033","product_id":100023901,"comment_content":"必须加锁啊，synchronized (this)就行了，最简单加锁吧，volatile只能保证内存可见性，并不能保证原子性","like_count":27,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444908,"discussion_content":"👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553693959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80262,"user_name":"我是卖报小行家","can_delete":false,"product_type":"c1","uid":1303013,"ip_address":"","ucode":"43530EA291B66D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/e5/815d4271.jpg","comment_is_top":false,"comment_ctime":1553645989,"is_pvip":false,"replies":[{"id":"29305","content":"👍<br>","user_name":"作者回复","comment_id":80262,"uid":"1269969","ip_address":"","utype":1,"ctime":1553694389,"user_name_real":"王宝令"}],"discussion_count":4,"race_medal":0,"score":"70273122725","product_id":100023901,"comment_content":"前面有个朋友说final保证不会逃逸，理解应该有误，fianl的禁止重排序前提是构造函数里面没有this逃逸，他只保证final变量不会重排序到构造函数之外。并不保证逃逸。","like_count":16,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444804,"discussion_content":"👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553694389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380294,"discussion_content":"fianl ----> final","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624429804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2139604,"avatar":"","nickname":"成电帅才","note":"","ucode":"DDE757138F41D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345345,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611712811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289508,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594127399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79803,"user_name":"罗洲","can_delete":false,"product_type":"c1","uid":1263417,"ip_address":"","ucode":"68133E38A25C17","user_header":"https://static001.geekbang.org/account/avatar/00/13/47/39/0ce1aa62.jpg","comment_is_top":false,"comment_ctime":1553559748,"is_pvip":false,"replies":[{"id":"29313","content":"👍<br>","user_name":"作者回复","comment_id":79803,"uid":"1269969","ip_address":"","utype":1,"ctime":1553695041,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"48798200004","product_id":100023901,"comment_content":"思考题:对于两个互相比较的变量来说，赋值的时候只能加锁来控制。但是这也会带来性能问题，不过可以采用读锁和写锁来优化，申请写锁了就互斥，读锁可以并发访问，这样性能相对粗粒度的锁来说会高点。","like_count":11,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444632,"discussion_content":"👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553695041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380296,"discussion_content":"共享变量有读有写时，并发读，互斥写，阔以提升性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624429991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84019,"user_name":"Boomkeeper","can_delete":false,"product_type":"c1","uid":1437444,"ip_address":"","ucode":"129C4229D50EDD","user_header":"https://static001.geekbang.org/account/avatar/00/15/ef/04/f2942f14.jpg","comment_is_top":false,"comment_ctime":1554770059,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"35914508427","product_id":100023901,"comment_content":"我就不明白了，使用了synchronized，为啥还用voliate，他的确是保证可见性，但是并不能保证原子性，一般他的应用场景应该是不依赖之前的结果而改变数据，累加的场景明显不适合","like_count":8,"discussions":[{"author":{"id":1005842,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/12/2034b163.jpg","nickname":"Android 技师","note":"","ucode":"F7691906C86655","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12998,"discussion_content":"禁止指令重排序？比如写单例的时候。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568627033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1264481,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4b/61/762ec306.jpg","nickname":"我们的时光__","note":"","ucode":"5184EDC5CA1625","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005842,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/12/2034b163.jpg","nickname":"Android 技师","note":"","ucode":"F7691906C86655","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342157,"discussion_content":"新版本的jdk已经将实例化对象做成了原子操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610600752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":12998,"ip_address":""},"score":342157,"extra":""}]}]},{"had_liked":false,"id":80316,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1299615,"ip_address":"","ucode":"528DD5C8399AEC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlwpFM3tkeG15YqyJTYWkfqkdmro9POq6SicYm57TaEFDOUZCXjoe0Z0Iz6UibGQqic3icJRsHdFzibtw/132","comment_is_top":false,"comment_ctime":1553648863,"is_pvip":true,"replies":[{"id":"29297","content":"可以<br>","user_name":"作者回复","comment_id":80316,"uid":"1269969","ip_address":"","utype":1,"ctime":1553687416,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"35913387231","product_id":100023901,"comment_content":"public class SafeWM {<br>  &#47;&#47; 库存上限<br>  private final AtomicLong upper =<br>        new AtomicLong(0);<br>  &#47;&#47; 库存下限<br>  private final AtomicLong lower =<br>        new AtomicLong(0);<br>  &#47;&#47; 设置库存上限<br>  void setUpper(long v) {<br>    synchronized (this) {<br>      &#47;&#47; 检查参数合法性<br>      if (v &lt; lower.get()) {<br>        throw new IllegalArgumentException();<br>      }<br>      upper.set(v);<br>    }<br>  }<br>  &#47;&#47; 设置库存下限<br>  void setLower(long v) {<br>    synchronized (this) {<br>      &#47;&#47; 检查参数合法性<br>      if (v &gt; upper.get()) {<br>        throw new IllegalArgumentException();<br>      }<br>      lower.set(v);<br>    }<br>  }<br>  &#47;&#47; 省略其他业务代码<br>}<br><br>老师，这样处理可以吗？","like_count":8,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444820,"discussion_content":"可以\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553687416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168504,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d4/78/66b3f2a2.jpg","nickname":"斯盖丸","note":"","ucode":"B881D14B028F14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346374,"discussion_content":"我觉得你这个比较清晰易懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611927470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81248,"user_name":"Cc","can_delete":false,"product_type":"c1","uid":1441727,"ip_address":"","ucode":"1B822D627C6284","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/bf/2f0a337c.jpg","comment_is_top":false,"comment_ctime":1553842195,"is_pvip":false,"replies":[{"id":"29490","content":"我觉得这个没有问题，volatile 换成 final会更好","user_name":"作者回复","comment_id":81248,"uid":"1269969","ip_address":"","utype":1,"ctime":1553906945,"user_name_real":"王宝令"}],"discussion_count":3,"race_medal":0,"score":"31618613267","product_id":100023901,"comment_content":"又想到一种，既然两个变量要同时锁定，那就把两个变量封装成一个，然后使用cas操作。这样行不行，另外老师帮我看看volatile是不是有多余的地方<br>···········<br>volatile AtomicReference&lt;Inventory&gt; inventory = new AtomicReference&lt;&gt;();<br><br>    static class Inventory {<br>        private volatile long upper = 0;<br><br>        private volatile long lower = 0;<br>    }<br><br>    void setUpper(long v) {<br>        long low;<br>        Inventory oldObj;<br>        Inventory newObj;<br>        do {<br>            oldObj = inventory.get();<br>            if (v &gt;= (low = oldObj.lower)) {<br>                throw new IllegalArgumentException();<br>            }<br>            newObj = new Inventory();<br>            newObj.lower = low;<br>            newObj.upper = v;<br><br>        } while (inventory.compareAndSet(oldObj, newObj));<br>    }<br><br>    void setLower(long v) {<br>        long upp;<br>        Inventory oldObj;<br>        Inventory newObj;<br>        do {<br>            oldObj = inventory.get();<br>            if (v &lt;= (upp = oldObj.upper)) {<br>                throw new IllegalArgumentException();<br>            }<br>            newObj = new Inventory();<br>            newObj.lower = v;<br>            newObj.upper = upp;<br><br>        } while (inventory.compareAndSet(oldObj, newObj));<br>    }<br><br><br>","like_count":7,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445131,"discussion_content":"我觉得这个没有问题，volatile 换成 final会更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553906945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e0/26/4942a09e.jpg","nickname":"猫头鹰爱拿铁","note":"","ucode":"24266B58968428","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":87296,"discussion_content":"大小与是不是写反了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576659566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1594508,"avatar":"https://static001.geekbang.org/account/avatar/00/18/54/8c/a3b98f6c.jpg","nickname":"denofiend","note":"","ucode":"FC9A750C96E01C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533977,"discussion_content":"ABA问题呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638053219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259577,"user_name":"Geek_a8e9a2","can_delete":false,"product_type":"c1","uid":2264928,"ip_address":"","ucode":"79C4B82B7DAE59","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GbZRicqbu1QJmlcOlfLyW46Mre1I2iagu0PjicL5g3jv1wqOy0QoA0lVyM4lNrBrqiaByURbeYuibU0knicQFmhnJcMg/132","comment_is_top":false,"comment_ctime":1604758898,"is_pvip":false,"replies":[{"id":"94360","content":"想了半天，应该没问题","user_name":"作者回复","comment_id":259577,"uid":"1269969","ip_address":"","utype":1,"ctime":1604804672,"user_name_real":"王宝令"}],"discussion_count":4,"race_medal":0,"score":"18784628082","product_id":100023901,"comment_content":"老师，这个方案如何？<br>public class SafeVm {<br>    private volatile long upNum = 10;<br>    private volatile long lowNum = 1;<br>    private ReadWriteLock upLock = new ReentrantReadWriteLock();<br>    private ReadWriteLock lowLock = new ReentrantReadWriteLock();<br><br>    void setUpper(long newUpValue) {<br>        lowLock.readLock().lock();<br>        try {<br>            if (newUpValue &lt; lowNum) {<br>                throw new IllegalArgumentException();<br>            }<br>            upLock.writeLock().lock();<br>            try {<br>                upNum = newUpValue;<br>            } finally {<br>                upLock.writeLock().unlock();<br>            }<br>        } finally {<br>            lowLock.readLock().unlock();<br>        }<br>    }<br><br>    void setLower(long newLowValue) {<br>        upLock.readLock().lock();<br>        try {<br>            if (newLowValue &gt; upNum) {<br>                throw new IllegalArgumentException();<br>            }<br>            lowLock.writeLock().lock();<br>            try {<br>                lowNum = newLowValue;<br>            } finally {<br>                lowLock.writeLock().unlock();<br>            }<br>        } finally {<br>            upLock.readLock().unlock();<br>        }<br>    }<br>}","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508965,"discussion_content":"想了半天，应该没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604804672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1855137,"avatar":"","nickname":"Geek_e6f358","note":"","ucode":"C21E94A90258A2","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384846,"discussion_content":"问个问题，感觉这样会死锁。线程1、2同时执行setUpper、setLower，线程1拿到   lowLock的读锁，线程2拿到upLock的读锁。线程1执行 upLock.writeLock().lock()时需要线程2先释放读锁，线程2执行 lowLock.writeLock().lock()需要线程1释放读锁，这不就死锁了吗？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1626770994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1628434,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d9/12/71db1407.jpg","nickname":"L","note":"","ucode":"A5CB3F1B4975BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551419,"discussion_content":"，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645012768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/6f/c78ef1cf.jpg","nickname":"王二北","note":"","ucode":"D9090E28B3E1F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386805,"discussion_content":"会死锁，读写互斥，两个线程这么搞会死锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627810059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184548,"user_name":"Airsaid","can_delete":false,"product_type":"c1","uid":1115302,"ip_address":"","ucode":"5B90BC0044F376","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/a6/18c4f73c.jpg","comment_is_top":false,"comment_ctime":1583335465,"is_pvip":false,"replies":[{"id":"71684","content":"内置的支持并发的数据结构等等","user_name":"作者回复","comment_id":184548,"uid":"1269969","ip_address":"","utype":1,"ctime":1583647652,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"18763204649","product_id":100023901,"comment_content":"「迫不得已时才使用低级的同步原语：低级的同步原语主要指的是 synchronized、Lock、Semaphore 等，这些虽然感觉简单，但实际上并没那么简单，一定要小心使用。」<br><br>老师您好，这里内置锁和显式锁都是低级同步原语，那什么是高级同步原语呢？","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486052,"discussion_content":"内置的支持并发的数据结构等等","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583647652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80000,"user_name":"阿琨","can_delete":false,"product_type":"c1","uid":1131735,"ip_address":"","ucode":"011711A55C8ED0","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/d7/915da418.jpg","comment_is_top":false,"comment_ctime":1553590736,"is_pvip":true,"replies":[{"id":"29187","content":"没问题<br>","user_name":"作者回复","comment_id":80000,"uid":"1269969","ip_address":"","utype":1,"ctime":1553604471,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"18733459920","product_id":100023901,"comment_content":"老师，这样写有什么问题吗，总感觉哪里怪怪的。<br>public class DBPush {<br>    private volatile static DBPush dbPush = null;<br><br>    private DBPush() {<br>    }<br><br>    public static DBPush getInStance() {<br>        if (dbPush == null) {<br>            synchronized (DBPush.class) {<br>                if (dbPush == null) {<br>                    dbPush = new DBPush();<br>                }<br>            }<br>        }<br>        return dbPush;<br>    }<br>}","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444716,"discussion_content":"没问题\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553604471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79884,"user_name":"Lemon","can_delete":false,"product_type":"c1","uid":1155474,"ip_address":"","ucode":"FED3B7D2931152","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/92/ad27079c.jpg","comment_is_top":false,"comment_ctime":1553568444,"is_pvip":false,"replies":[{"id":"29109","content":"错误的设置会导致永远等待，太危险了<br>","user_name":"作者回复","comment_id":79884,"uid":"1269969","ip_address":"","utype":1,"ctime":1553571541,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"18733437628","product_id":100023901,"comment_content":"使用 Condition<br>public class SafeWM {<br><br>    &#47;&#47; 库存上限<br>    private final AtomicLong upper =<br>            new AtomicLong(10);<br>    &#47;&#47; 库存下限<br>    private final AtomicLong lower =<br>            new AtomicLong(2);<br><br>    private ReentrantLock lock = new ReentrantLock();<br>    private Condition c1 = lock.newCondition();<br>    private Condition c2 = lock.newCondition();<br>    <br>    &#47;&#47; 设置库存上限<br>    void setUpper(long v) {<br>        try {<br>            lock.lock();<br>            &#47;&#47; 检查参数合法性<br>            while (v &lt; lower.get()) {<br>                c1.await();<br>            }<br>            upper.set(v);<br>            c2.signal();<br>        } catch (Exception e) {<br>            e.printStackTrace();<br>        } finally {<br>            lock.unlock();<br>        }<br><br>    }<br><br>    &#47;&#47; 设置库存下限<br>    void setLower(long v) {<br><br>        try {<br>            lock.lock();<br>            &#47;&#47; 检查参数合法性<br>            while (v &gt; upper.get())  {<br>                c2.await();<br>            }<br>            lower.set(v);<br>            c1.signal();<br>        } catch (Exception e) {<br>            e.printStackTrace();<br>        } finally {<br>            lock.unlock();<br>        }<br>    }<br><br>}","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444666,"discussion_content":"错误的设置会导致永远等待，太危险了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553571541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81583,"user_name":"易水寒","can_delete":false,"product_type":"c1","uid":1238961,"ip_address":"","ucode":"F5D8127ED4754E","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","comment_is_top":false,"comment_ctime":1553953102,"is_pvip":false,"replies":[{"id":"29554","content":"是这样的<br>","user_name":"作者回复","comment_id":81583,"uid":"1269969","ip_address":"","utype":1,"ctime":1553988219,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"14438854990","product_id":100023901,"comment_content":"使用synchronized（this）的话，感觉volatie都不需要用了，jmm模型不是说，释放锁的操作先于后续的加锁发生，加锁成功后，对于上一次释放锁之前的操作结果是可见的","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445260,"discussion_content":"是这样的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553988219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79795,"user_name":"抽离の❤️","can_delete":false,"product_type":"c1","uid":1099436,"ip_address":"","ucode":"6CBCE2610CF768","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/ac/60d1fd42.jpg","comment_is_top":false,"comment_ctime":1553558690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14438460578","product_id":100023901,"comment_content":"老师、讲的真好！","like_count":3},{"had_liked":false,"id":81633,"user_name":"逆水行舟","can_delete":false,"product_type":"c1","uid":1044836,"ip_address":"","ucode":"17FE5F5452B2FE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f1/64/18366f31.jpg","comment_is_top":false,"comment_ctime":1553992213,"is_pvip":true,"replies":[{"id":"29623","content":"太晦涩了","user_name":"作者回复","comment_id":81633,"uid":"1269969","ip_address":"","utype":1,"ctime":1554030812,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"10143926805","product_id":100023901,"comment_content":"那本书，有些晦涩，但是是必读的。","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445277,"discussion_content":"太晦涩了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554030812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1641319,"avatar":"https://static001.geekbang.org/account/avatar/00/19/0b/67/dc49a1a8.jpg","nickname":"在路上","note":"","ucode":"E1184E76B14431","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157348,"discussion_content":"是指那本书","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580471854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79953,"user_name":"悟空","can_delete":false,"product_type":"c1","uid":1451125,"ip_address":"","ucode":"F9DFBA74B35B40","user_header":"https://static001.geekbang.org/account/avatar/00/16/24/75/808ac160.jpg","comment_is_top":false,"comment_ctime":1553581297,"is_pvip":false,"replies":[{"id":"29191","content":"对象加锁就可以了<br>","user_name":"作者回复","comment_id":79953,"uid":"1269969","ip_address":"","utype":1,"ctime":1553604836,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"10143515889","product_id":100023901,"comment_content":"访问时使用syncchronize对类加锁。保证变量访问的互斥","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444700,"discussion_content":"对象加锁就可以了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553604836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79838,"user_name":"Zm","can_delete":false,"product_type":"c1","uid":1448893,"ip_address":"","ucode":"831FF80F07E965","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKj4w4lW7ibGEVxPv8wS1CrXKDeBz3RAaAdISxQSD23uUpV3wicsIMepaYZE8GzRcWmSpjet5NDN4MA/132","comment_is_top":false,"comment_ctime":1553562504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10143497096","product_id":100023901,"comment_content":"Volatile修饰变量","like_count":2},{"had_liked":false,"id":79780,"user_name":"无庸","can_delete":false,"product_type":"c1","uid":1120675,"ip_address":"","ucode":"9F61D1BF0FB4BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/a3/600bc13d.jpg","comment_is_top":false,"comment_ctime":1553557937,"is_pvip":true,"replies":[{"id":"29091","content":"不满足合理库存的约束条件<br>","user_name":"作者回复","comment_id":79780,"uid":"1269969","ip_address":"","utype":1,"ctime":1553562466,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"10143492529","product_id":100023901,"comment_content":"compareAndSet吧<br><br>void setUpper（long v）{<br>  upper.compareAndSet(upper.longValue<br>(),v);<br>}","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444621,"discussion_content":"不满足合理库存的约束条件\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553562466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79769,"user_name":"京","can_delete":false,"product_type":"c1","uid":1267526,"ip_address":"","ucode":"F69476C14C5405","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIWgpgEACljAII095cibNoPxlR6X3sIY1fmf4KjNjIoZ8icUOYL206lAcsqMsMl80pc4IbnsrpE28rQ/132","comment_is_top":false,"comment_ctime":1553555733,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10143490325","product_id":100023901,"comment_content":"一早起来，就把文章看完了，期待老师后面更精彩的内容","like_count":2},{"had_liked":false,"id":305560,"user_name":"苏彧","can_delete":false,"product_type":"c1","uid":1622448,"ip_address":"","ucode":"C016B28DF7449C","user_header":"https://static001.geekbang.org/account/avatar/00/18/c1/b0/b52d9ade.jpg","comment_is_top":false,"comment_ctime":1628047304,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5923014600","product_id":100023901,"comment_content":"老师，synchronized(this)这个this是对象的引用，多个线程在不同的地方同时调用该对象，这样是不是就锁不住了，有并发问题呀","like_count":1},{"had_liked":false,"id":280161,"user_name":"马文龙","can_delete":false,"product_type":"c1","uid":1068432,"ip_address":"","ucode":"679B0F0AB402C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/90/25b6f544.jpg","comment_is_top":false,"comment_ctime":1614099573,"is_pvip":true,"replies":[{"id":"102075","content":"Spring的设计太多了，用的比较多的是线程本地存储","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1614599033,"ip_address":"","comment_id":280161,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5909066869","product_id":100023901,"comment_content":"王老师 ，spring中的设计是不是就是利用避免共享：避免共享的技术主要是利于线程本地存储以及为每个任务分配独立的线程；这个方式的啊？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516002,"discussion_content":"Spring的设计太多了，用的比较多的是线程本地存储","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614599033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1810576,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","nickname":"M","note":"","ucode":"06F26E1D62E9C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369278,"discussion_content":"是那个ThreadLocal嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618994900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1600341,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6b/55/2b0f219b.jpg","nickname":"Geek_42f729","note":"","ucode":"76CFFF9DEDDF96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1810576,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","nickname":"M","note":"","ucode":"06F26E1D62E9C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554443,"discussion_content":"是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646381977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369278,"ip_address":""},"score":554443,"extra":""}]}]},{"had_liked":false,"id":163258,"user_name":"淞淞同学","can_delete":false,"product_type":"c1","uid":1179533,"ip_address":"","ucode":"529A326B898008","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/8d/8601f035.jpg","comment_is_top":false,"comment_ctime":1576676816,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5871644112","product_id":100023901,"comment_content":"安全发布的常用模式<br>可变对象必须通过安全的方式来发布，这通常意味着在发布和使用该对象的线程时都必须使用同步。现在，我们将重点介绍如何确保使用对象的线程能够看到该对象处于已发布的状态，并稍后介绍如何在对象发布后对其可见性进行修改。<br><br>安全地发布一个对象，对象的应用以及对象的状态必须同时对其他线程可见。一个正确构造的对象可以通过以下方式来安全地发布：<br><br>在静态初始化函数中初始化一个对象引用<br>将对象的应用保存到volatile类型的域或者AtomicReferance对象中<br>将对象的引用保存到某个正确构造对象的final类型域中<br>将对象的引用保存到一个由锁保护的域中。","like_count":1},{"had_liked":false,"id":157185,"user_name":"花花young","can_delete":false,"product_type":"c1","uid":1338584,"ip_address":"","ucode":"95AD30303C2B21","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/d8/68fec932.jpg","comment_is_top":false,"comment_ctime":1575076161,"is_pvip":false,"replies":[{"id":"60318","content":"是这样的，可以使用JDK提供的原子类","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1575112456,"ip_address":"","comment_id":157185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870043457","product_id":100023901,"comment_content":"validate我看书中说像a=4这种是有原子性的，对于复合操作是没有原子性，望老师解答","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476356,"discussion_content":"是这样的，可以使用JDK提供的原子类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575112456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116909,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1563937304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858904600","product_id":100023901,"comment_content":"---总结---<br>1. 封装与并发：将共享变量作为对象属性封装在内部，对所有公共方法指定并发访问策略<br>2. 不可变与并发：如无必要修改，实例变量都应该是private final的<br>3. 共享变量间的约束条件决定了并发访问策略，而为了达到这种约束条件，基本上都会有if语句，此时往往会出现竞态条件<br>4. 并发访问策略：避免共享；不变模式；同步工具<br><br>---启发---<br>1. 经常能将计算机的两个概念放在一起，看看两者的关联，会有不同的收获。","like_count":1},{"had_liked":false,"id":79886,"user_name":"crazypokerk","can_delete":false,"product_type":"c1","uid":1158383,"ip_address":"","ucode":"9AAD5D9726E503","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/ef/494f56c3.jpg","comment_is_top":false,"comment_ctime":1553568657,"is_pvip":false,"replies":[{"id":"29239","content":"对的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553647690,"ip_address":"","comment_id":79886,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848535953","product_id":100023901,"comment_content":"我觉得对于上限与下限不一致的问题，主要是因为出现了竞态条件，而解决竞态条件与数据竞争的解决办法就是互斥，即加锁。只有当一个线程获得锁之后，判断条件是否成立之后，再进行更改操作。如理解有误，还请老师指正。","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444667,"discussion_content":"对的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553647690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79818,"user_name":"undifined","can_delete":false,"product_type":"c1","uid":1068920,"ip_address":"","ucode":"449CB4CD2DC089","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/78/c3d8ecb0.jpg","comment_is_top":false,"comment_ctime":1553561115,"is_pvip":false,"replies":[{"id":"29316","content":"我感觉不可以，还是有竞态条件，你可以在return前面增加sleep看看","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553695508,"ip_address":"","comment_id":79818,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848528411","product_id":100023901,"comment_content":"要保证变量间的约束条件，就必须保证判断和赋值是一个原子操作，可以通过给 upper 和 lower 同时加锁，也可以通过 AtomicLong 提供的方法进行操作<br><br>    &#47;&#47; 设置库存上限<br>    void setUpper(long v) {<br>        &#47;&#47; 检查参数合法性<br>        upper.getAndUpdate(u -&gt; {<br>            if (v &lt; lower.get()) {<br>                throw new IllegalArgumentException();<br>            } else {<br>                return v;<br>            }<br>        });<br>    }<br><br>    &#47;&#47; 设置库存下限<br>    void setLower(long v) {<br>        &#47;&#47; 检查参数合法性<br>        lower.getAndUpdate(u -&gt; {<br>            if (v &gt; upper.get()) {<br>                throw new IllegalArgumentException();<br>            } else {<br>                return v;<br>            }<br>        });<br>    }<br> <br>老师这样理解对吗","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444639,"discussion_content":"我感觉不可以，还是有竞态条件，你可以在return前面增加sleep看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553695508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348619,"user_name":"freesocean","can_delete":false,"product_type":"c1","uid":1529210,"ip_address":"","ucode":"CAD4C80CF569D3","user_header":"https://static001.geekbang.org/account/avatar/00/17/55/7a/d44df1d6.jpg","comment_is_top":false,"comment_ctime":1655258796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655258796","product_id":100023901,"comment_content":"package com.zx.juc.concurrent;<br><br>import java.util.concurrent.atomic.AtomicLong;<br>import java.util.concurrent.locks.Condition;<br>import java.util.concurrent.locks.Lock;<br>import java.util.concurrent.locks.ReentrantLock;<br><br>&#47;**<br> * @author zx<br> * @description:  封装共享变量<br> * @date 2022&#47;6&#47;15<br> *&#47;<br>public class DataRaceDemo {<br><br>        &#47;&#47; 库存上限<br>        private final AtomicLong upper =<br>                new AtomicLong(0);<br>        &#47;&#47; 库存下限<br>        private final AtomicLong lower =<br>                new AtomicLong(0);<br><br>        final Lock lock = new ReentrantLock();<br>        final Condition upperCondition = lock.newCondition();<br>        final Condition lowerCondition = lock.newCondition();<br><br><br>        &#47;&#47; 设置库存上限<br>        void setUpper(long v){<br>            lock.lock();<br>            try {<br>                &#47;&#47; 检查参数合法性<br>                while(v&lt;lower.get()){<br>                    upperCondition.await();<br>                }<br>                upper.set(v);<br>                lowerCondition.signal();<br>            }catch (InterruptedException e){<br>                e.printStackTrace();<br>            } finally {<br>                lock.unlock();<br>            }<br>        }<br>        &#47;&#47; 设置库存下限<br>        void setLower(long v){<br>            lock.lock();<br>            try {<br>                &#47;&#47; 检查参数合法性<br>                while (v &gt; upper.get()) {<br>                    lowerCondition.await();<br>                }<br>                lower.set(v);<br>                upperCondition.signal();<br>            } catch (InterruptedException e) {<br>                e.printStackTrace();<br>            }finally {<br>                lock.unlock();<br>            }<br>        }<br><br>}<br>","like_count":0},{"had_liked":false,"id":346433,"user_name":"ycan","can_delete":false,"product_type":"c1","uid":1325564,"ip_address":"","ucode":"414BEADB1B8508","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/fc/28ca08ea.jpg","comment_is_top":false,"comment_ctime":1653133018,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653133018","product_id":100023901,"comment_content":"成功就是简单的事情重复做，你的时间在哪里，成就就在哪里","like_count":0},{"had_liked":false,"id":345556,"user_name":"David","can_delete":false,"product_type":"c1","uid":1021825,"ip_address":"","ucode":"22CBBC13FC97A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/81/e1eaf621.jpg","comment_is_top":false,"comment_ctime":1652398301,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652398301","product_id":100023901,"comment_content":"把两个变量合成一个 一个用高16位置一个用低16位。这样用一个volatile变量就可以解决原子性问题","like_count":0},{"had_liked":false,"id":341041,"user_name":"龙行天下","can_delete":false,"product_type":"c1","uid":1231302,"ip_address":"","ucode":"90BEED7A164ADE","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/c6/16136ab3.jpg","comment_is_top":false,"comment_ctime":1649307482,"is_pvip":true,"replies":[{"id":"124695","content":"相比lock优先用synchronized，这个不是相反观点，所有观点都是这样","user_name":"作者回复","user_name_real":"编辑","uid":"1269969","ctime":1649378506,"ip_address":"","comment_id":341041,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649307482","product_id":100023901,"comment_content":"深入理解java虚拟机这本书提了个相反的观点，jdk 1.6后，synchronized与juc的reentrantlock性能基本持平，且未来虚拟机性能改善中会偏向于原生的synchronized，建议满足需求时，优先用synchronized","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560516,"discussion_content":"相比lock优先用synchronized，这个不是相反观点，所有观点都是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649378506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315181,"user_name":"官宝儿","can_delete":false,"product_type":"c1","uid":2110827,"ip_address":"","ucode":"03B4312475A984","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI5eicXFWltiaF9ibsEh2nNC80OYoHibhhE0X1hPHZ5KuAtY4Yxp5dQ4LsciaDxUHFBPlJM7kgQwkspzsQ/132","comment_is_top":false,"comment_ctime":1633743872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633743872","product_id":100023901,"comment_content":"答题，用volatile修饰上限，这样可以保证读到的上限值是最新的，然后设置下限时候判断一下是否大于上限；","like_count":0},{"had_liked":false,"id":305447,"user_name":"study的程序员","can_delete":false,"product_type":"c1","uid":1023101,"ip_address":"","ucode":"E5AE9037D24429","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/7d/774e07f9.jpg","comment_is_top":false,"comment_ctime":1627977860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627977860","product_id":100023901,"comment_content":"long newV = 1L;<br>        Unsafe unsafe = Unsafe.getUnsafe();<br>        AtomicLong atomicLong = new AtomicLong(0);<br>        long oldV = atomicLong.get();<br>        long objectFieldOffset = unsafe.objectFieldOffset(AtomicLong.class.getField(&quot;value&quot;));<br>        unsafe.compareAndSwapLong(atomicLong, objectFieldOffset, oldV, newV);","like_count":0},{"had_liked":false,"id":303379,"user_name":"Geek_e6f358","can_delete":false,"product_type":"c1","uid":1855137,"ip_address":"","ucode":"C21E94A90258A2","user_header":"","comment_is_top":false,"comment_ctime":1626762372,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1626762372","product_id":100023901,"comment_content":"<br>public class SafeWM {<br>  &#47;&#47; 库存上限<br>  private final AtomicLong upper =<br>        new AtomicLong(0);<br>  &#47;&#47; 库存下限<br>  private final AtomicLong lower =<br>        new AtomicLong(0);<br>  &#47;&#47; 设置库存上限<br>  synchronized void setUpper(long v){<br>    &#47;&#47; 检查参数合法性<br>    if (v &lt; lower.get()) {<br>      throw new IllegalArgumentException();<br>    }<br>    upper.set(v);<br>  }<br>  &#47;&#47; 设置库存下限<br>  synchronized  void setLower(long v){<br>    &#47;&#47; 检查参数合法性<br>    if (v &gt; upper.get()) {<br>      throw new IllegalArgumentException();<br>    }<br>    lower.set(v);<br>  }<br>  &#47;&#47; 省略其他业务代码<br>}","like_count":0},{"had_liked":false,"id":291894,"user_name":"jiaobuchongจุ๊บ","can_delete":false,"product_type":"c1","uid":1118938,"ip_address":"","ucode":"0AEE4E579DC3A2","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/da/a3ea305f.jpg","comment_is_top":false,"comment_ctime":1620574971,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620574971","product_id":100023901,"comment_content":"来一个面试题，加深大家对管程的理解：https:&#47;&#47;blog.csdn.net&#47;jiaobuchong&#47;article&#47;details&#47;86555208","like_count":0},{"had_liked":false,"id":289384,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1618993633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618993633","product_id":100023901,"comment_content":"老师，帮我看下，这样写有问题吗?<br><br>public class SafeWM {<br><br>    public final AtomicLong upper = new AtomicLong(0);<br>    public final AtomicLong lower = new AtomicLong(0);<br><br>    private SafeWM() {<br>    }<br><br><br>    static class SafeWMBuilder {<br>        private Long upper = 0L;<br>        private Long lower = 0L;<br><br>        public synchronized SafeWMBuilder setUpper(Long v) {<br>            this.upper = v;<br>            return this;<br>        }<br><br>        public synchronized SafeWMBuilder setLower(Long v) {<br>            this.lower = v;<br>            return this;<br>        }<br><br><br>        public synchronized SafeWM build() {<br>            &#47;&#47;校验：上限 &lt; 下限<br>            if (upper &lt; lower) {<br>                throw new IllegalArgumentException();<br>            }<br>            SafeWM safeWM = new SafeWM();<br>            safeWM.lower.set(lower);<br>            safeWM.upper.set(upper);<br>            return safeWM;<br>        }<br>    }<br><br>}<br><br>class TestSafeWM {<br>    public static void main(String[] args) {<br>        SafeWM.SafeWMBuilder safeWMBuilder = new SafeWM.SafeWMBuilder();<br>        SafeWM safeWM = safeWMBuilder.setUpper(10L)<br>                .setLower(20L)<br>                .build();<br>        System.out.println(&quot;上限：&quot; + safeWM.upper.get() + &quot;   下限：&quot; + safeWM.lower.get());<br>    }<br>}<br>","like_count":0},{"had_liked":false,"id":289359,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1618988998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618988998","product_id":100023901,"comment_content":"老师，我有个疑问：<br><br>就是上文了说了，对于这些不会发生变化的共享变量，建议你用 final 关键字来修饰<br><br>既然加了final关键字的变量不会发生变化了，那为什么在upper和lower上加上final关键字呢","like_count":0},{"had_liked":false,"id":279914,"user_name":"Geek_5788be","can_delete":false,"product_type":"c1","uid":1390348,"ip_address":"","ucode":"A8E7F2A898B15A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RKNSic0k9zAa3zvicN7k7cgTib3jmd6znJmUhKVBdj04XYZgyKuEmzdn35d9Kev9yChfUGmcV49m9wN8klxg4ibXgQ/132","comment_is_top":false,"comment_ctime":1613999538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613999538","product_id":100023901,"comment_content":"太强了吧！总觉得并发很复杂，老师用面向对象的思想，三言两语就解决了！","like_count":0},{"had_liked":false,"id":264594,"user_name":"我真不是地球","can_delete":false,"product_type":"c1","uid":1451048,"ip_address":"","ucode":"873F7222DE35BE","user_header":"https://static001.geekbang.org/account/avatar/00/16/24/28/9b5b1396.jpg","comment_is_top":false,"comment_ctime":1606536198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606536198","product_id":100023901,"comment_content":"这两个变量用了 AtomicLong 这个原子类，原子类是线程安全的，所以这两个成员变量的 set 方法就不需要同步了。<br><br>老师，为何你都说了set安全了，那在里面写的代码，就不安全了？","like_count":0},{"had_liked":false,"id":249664,"user_name":"maybe","can_delete":false,"product_type":"c1","uid":1475528,"ip_address":"","ucode":"93D160F617E750","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/c8/5ce842f6.jpg","comment_is_top":false,"comment_ctime":1600747654,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1600747654","product_id":100023901,"comment_content":"1、如何写好并发程序：1、封装共享变量。2、识别共享变量约束条件。3、指定合理访问策略。<br>2、课后思考，setUpper、setLower加上隐私锁synchronized即可","like_count":0},{"had_liked":false,"id":243689,"user_name":"fightingD","can_delete":false,"product_type":"c1","uid":1443637,"ip_address":"","ucode":"AD2876CED5D5AC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKwViav94kcF50CxA0Jw7icicxociaVzut97iacy3b2ciacFqXuFWdiakVq304YcI8pt4HT5A1Yvp8EkYCpw/132","comment_is_top":false,"comment_ctime":1598250781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598250781","product_id":100023901,"comment_content":"给 setUpper（），setLower 分别加上synchronized 关键字。","like_count":0},{"had_liked":false,"id":243283,"user_name":"Aiome","can_delete":false,"product_type":"c1","uid":1306394,"ip_address":"","ucode":"5D3A810C0FF56B","user_header":"","comment_is_top":false,"comment_ctime":1598014484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598014484","product_id":100023901,"comment_content":"结合业务来看，没必要保证线程安全，这种配置修改不容易产生并发修改的操作","like_count":0},{"had_liked":false,"id":235139,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1594903228,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594903228","product_id":100023901,"comment_content":"volatile关键字有3个特点:<br>1-不保证原子性<br>2-具有内存可见性<br>3-禁止指令重排","like_count":0},{"had_liked":false,"id":232171,"user_name":"吃饭","can_delete":false,"product_type":"c1","uid":1692756,"ip_address":"","ucode":"AF0D7165D5F049","user_header":"https://static001.geekbang.org/account/avatar/00/19/d4/54/7263deb2.jpg","comment_is_top":false,"comment_ctime":1593880575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593880575","product_id":100023901,"comment_content":"上下届封装到一个long值内，分别占位高位和低位","like_count":0},{"had_liked":false,"id":209839,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1587623057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587623057","product_id":100023901,"comment_content":"最简单的应该就是set和get都加上sy关键字了<br><br>public class SafeWM {<br>    &#47;&#47; 库存上限<br>    private final AtomicLong upper =<br>            new AtomicLong(0);<br>    &#47;&#47; 库存下限<br>    private final AtomicLong lower =<br>            new AtomicLong(0);<br><br>    &#47;&#47; 设置库存上限<br>    synchronized void setUpper(long v) {<br>        &#47;&#47; 检查参数合法性<br>        if (v &lt; lower.get()) {<br>            throw new IllegalArgumentException();<br>        }<br>        upper.set(v);<br>    }<br><br>    &#47;&#47; 设置库存下限<br>    synchronized void setLower(long v) {<br>        &#47;&#47; 检查参数合法性<br>        if (v &gt; upper.get()) {<br>            throw new IllegalArgumentException();<br>        }<br>        lower.set(v);<br>    }<br>    &#47;&#47; 省略其他业务代码<br>}<br>","like_count":0},{"had_liked":false,"id":208752,"user_name":"looper","can_delete":false,"product_type":"c1","uid":1238396,"ip_address":"","ucode":"DA4BCE83836C04","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/7c/2a5a418b.jpg","comment_is_top":false,"comment_ctime":1587432507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587432507","product_id":100023901,"comment_content":"使用volatile修饰，volatile保证可见性，AtomicLong保证原子性","like_count":0},{"had_liked":false,"id":193684,"user_name":"Mr.wang","can_delete":false,"product_type":"c1","uid":1224805,"ip_address":"","ucode":"86F341A5316BBC","user_header":"https://static001.geekbang.org/account/avatar/00/12/b0/65/90387745.jpg","comment_is_top":false,"comment_ctime":1584948369,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1584948369","product_id":100023901,"comment_content":"王老师关于课后的那个问题，我想用读写锁和共享锁去解决，不知道是否可以。","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380308,"discussion_content":"可以，就是要读写互斥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624433804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191641,"user_name":"zhangchao","can_delete":false,"product_type":"c1","uid":1508339,"ip_address":"","ucode":"E665D153A85DE0","user_header":"https://static001.geekbang.org/account/avatar/00/17/03/f3/0bd094ad.jpg","comment_is_top":false,"comment_ctime":1584786354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584786354","product_id":100023901,"comment_content":"写的太好了","like_count":0},{"had_liked":false,"id":186812,"user_name":"破晓","can_delete":false,"product_type":"c1","uid":1350425,"ip_address":"","ucode":"1162E00FF08DF3","user_header":"https://static001.geekbang.org/account/avatar/00/14/9b/19/41dbba8c.jpg","comment_is_top":false,"comment_ctime":1583932961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583932961","product_id":100023901,"comment_content":"下面代码是否比synchroniezed有读的优势?<br>```<br>public class SafeVM {<br>    &#47;&#47; 库存上限<br>    private final AtomicLong upper = new AtomicLong(2);<br>    &#47;&#47; 库存下限<br>    private final AtomicLong lower = new AtomicLong(5);<br>    &#47;&#47; 读写锁<br>    private ReadWriteLock rwl = new ReentrantReadWriteLock();<br><br>    void setUpper(long v) {<br>        rwl.readLock().lock();<br>        long lowerTmp;<br>        try {<br>            lowerTmp = lower.get();<br>            if (v &lt; lowerTmp) {<br>                throw new IllegalArgumentException();<br>            }<br>            rwl.readLock().unlock();<br>            rwl.writeLock().lock();<br>            try {<br>                long lowerTmp1 = lower.get();<br>                if (lowerTmp != lowerTmp1) {<br>                    if (v &lt; lowerTmp1) {<br>                        throw new IllegalArgumentException();<br>                    }<br>                }<br>                upper.set(v);<br>            } finally {<br>                rwl.writeLock().unlock();<br>            }<br>        } finally {<br>            rwl.readLock().unlock();<br>        }<br>    }<br><br>    void setLower(long v) {<br>        rwl.readLock().lock();<br>        long upperTmp;<br>        try {<br>            upperTmp = upper.get();<br>            if (v &gt; upperTmp) {<br>                throw new IllegalArgumentException();<br>            }<br>            rwl.readLock().unlock();<br>            rwl.writeLock().lock();<br>            try {<br>                long upperTmp1 = upper.get();<br>                if (upperTmp != upperTmp1) {<br>                    if (v &lt; upperTmp1) {<br>                        throw new IllegalArgumentException();<br>                    }<br>                }<br>                lower.set(v);<br>            } finally {<br>                rwl.writeLock().unlock();<br>            }<br>        } finally {<br>            rwl.readLock().unlock();<br>        }<br>    }<br>    &#47;&#47; 省略其他业务代码<br>}```","like_count":0},{"had_liked":false,"id":179984,"user_name":"蛋炒饭加鸡蛋","can_delete":false,"product_type":"c1","uid":1628398,"ip_address":"","ucode":"C75E27B9FB3336","user_header":"https://static001.geekbang.org/account/avatar/00/18/d8/ee/17f220b6.jpg","comment_is_top":false,"comment_ctime":1582154535,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582154535","product_id":100023901,"comment_content":"老师请问一下，synchronized void setUpper(long v)和在if语句外层套上synchronized(this)，这两种方案是一样的吗，我理解都是当前对象作为互斥锁吧。","like_count":0},{"had_liked":false,"id":176387,"user_name":"supermouse","can_delete":false,"product_type":"c1","uid":1321860,"ip_address":"","ucode":"88072D5F881827","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/84/07f0c0d6.jpg","comment_is_top":false,"comment_ctime":1581046580,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581046580","product_id":100023901,"comment_content":"不管是设置库存上限还是库存下限，都要同时拿到库存上限和库存下限这两个锁才能进行下一步操作，为了避免死锁，都是先申请库存上限，再申请库存下限<br>public class SafeWM {<br>    &#47;&#47; 库存上限<br>    private final AtomicLong upper = new AtomicLong(10);<br>    &#47;&#47; 库存下限<br>    private final AtomicLong lower = new AtomicLong(2);<br>    &#47;&#47; 线程安全设置库存上限<br>    void safeSetUpper(long v){<br>        &#47;&#47;锁定库存下限<br>        synchronized (upper) {<br>            &#47;&#47;锁定库存上限<br>            synchronized (lower) {<br>                &#47;&#47; 检查参数合法性<br>                if (v &lt; lower.get()) {<br>                    throw new IllegalArgumentException();<br>                }<br>                upper.set(v);<br>            }<br>        }<br>    }<br>    &#47;&#47; 线程安全设置库存下限<br>    void safeSetLower(long v){<br>        &#47;&#47;锁定库存下限<br>        synchronized (upper) {<br>            &#47;&#47;锁定库存上限<br>            synchronized (lower) {<br>                &#47;&#47; 检查参数合法性<br>                if (v &gt; upper.get()) {<br>                    throw new IllegalArgumentException();<br>                }<br>                lower.set(v);<br>            }<br>        }<br>    }<br>}","like_count":0,"discussions":[{"author":{"id":1810576,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","nickname":"M","note":"","ucode":"06F26E1D62E9C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369275,"discussion_content":"性能比较低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618994188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175724,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1580808343,"is_pvip":false,"replies":[{"id":"68298","content":"预估是不经压测拍脑门","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1580820563,"ip_address":"","comment_id":175724,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580808343","product_id":100023901,"comment_content":"老师 你说的这句话  <br><br>很多人经常会情不自禁地预估性能的瓶颈，并对此实施优化，但残酷的现实却是：性能瓶颈不是你想预估就能预估的。<br><br>怎么理解呢 我先估计用户访问量进行压测 得出性能瓶颈 这样不行吗 ","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482872,"discussion_content":"预估是不经压测拍脑门","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580820563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156851,"user_name":"大大。","can_delete":false,"product_type":"c1","uid":1237399,"ip_address":"","ucode":"A6716E46264AC4","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/97/fec494f2.jpg","comment_is_top":false,"comment_ctime":1574988399,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574988399","product_id":100023901,"comment_content":"加一个lock，在set里面去获取lock，获取到的才能set","like_count":0},{"had_liked":false,"id":150064,"user_name":"朕爱吾妃","can_delete":false,"product_type":"c1","uid":1733692,"ip_address":"","ucode":"B10EB69934F9E2","user_header":"https://static001.geekbang.org/account/avatar/00/1a/74/3c/da79d2a1.jpg","comment_is_top":false,"comment_ctime":1573457263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573457263","product_id":100023901,"comment_content":"最简单的方法就是加synchronized关键字，不过我不认为这是最佳的解决方案，这个方案违反了三个原则中两个原则，第二个原则和第三个原则，先说第三个原则，其实加上synchronized是属于过早的优化，解决方案就是可以创建一个不变的对象，然后不管是设置上限还是设置下限都需要对这个资源进行竞争，不过也没有晚多少优化，但是这个方案没有解决第二个原则，因为还是会使用到synchronized的关键字... ...，这个我没法解决","like_count":0},{"had_liked":false,"id":141792,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1571225458,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571225458","product_id":100023901,"comment_content":"不能锁 synchronized(当前参数值) 吗？","like_count":0},{"had_liked":false,"id":134606,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1568877572,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1568877572","product_id":100023901,"comment_content":"用前几章的那个转账例子用到的，每次执行set方法时都要在一个Lock方法中持有上限和下限，然后判断是否符合约束，线程间协作可以考虑synchronized+wait()+notifyAll()或Lock+Condition实现；<br>","like_count":0},{"had_liked":false,"id":130642,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1567500305,"is_pvip":false,"replies":[{"id":"48862","content":"我觉得可以参考着学，互有补充","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1567501505,"ip_address":"","comment_id":130642,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567500305","product_id":100023901,"comment_content":"我觉得先看Java编程的艺术，再学习专栏，再学习Java并发编程实战；后面如果自己还想深入可以再学习深入理解Java虚拟机，Java语言规范，操作系统（比如深入理解计算机系统）等，不知道顺序对不对，还请老师指正","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466045,"discussion_content":"我觉得可以参考着学，互有补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567501505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128557,"user_name":"Simple life","can_delete":false,"product_type":"c1","uid":1571460,"ip_address":"","ucode":"1902D7F72FB43F","user_header":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","comment_is_top":false,"comment_ctime":1566902180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566902180","product_id":100023901,"comment_content":"这个例子不太恰当，设置库存一般不会存在并发问题，因为访问量太低了，并发问题几率太低了，扣库存行为举例合适一点","like_count":0},{"had_liked":false,"id":126167,"user_name":"冉野","can_delete":false,"product_type":"c1","uid":1137353,"ip_address":"","ucode":"2CAEA424996876","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/c9/933ee0a8.jpg","comment_is_top":false,"comment_ctime":1566345265,"is_pvip":false,"replies":[{"id":"46578","content":"没这意思😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1566359300,"ip_address":"","comment_id":126167,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566345265","product_id":100023901,"comment_content":"java并发编程实践 书中是说最先考虑synchronized同步，然后在考虑lock ，但是老师却说的是相反意思。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463860,"discussion_content":"没这意思😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566359300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125416,"user_name":"逆流的鱼","can_delete":false,"product_type":"c1","uid":1258399,"ip_address":"","ucode":"AA3DDE44A83C40","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/9f/8dbd9558.jpg","comment_is_top":false,"comment_ctime":1566181402,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566181402","product_id":100023901,"comment_content":"成熟的工具类指的啥？我怎么感觉是同步原语(synchronized这些)啊","like_count":0},{"had_liked":false,"id":123172,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1565619604,"is_pvip":true,"replies":[{"id":"52713","content":"没搞过jvm，说不清啊😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1569668627,"ip_address":"","comment_id":123172,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1565619604","product_id":100023901,"comment_content":"老师 为啥 对于这些不会发生变化的共享变量，建议你用 final 关键字修饰。 为什么用final修饰了，就没有并发问题了 求教<br><br>","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462567,"discussion_content":"没搞过jvm，说不清啊😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569668627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264135,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/07/1cab75cc.jpg","nickname":"小周同学","note":"","ucode":"28D157B7AAA377","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6478,"discussion_content":"用final保证不可变，不可变又保证了线程安全。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1566916790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118084,"user_name":"HUANGKAIHANG","can_delete":false,"product_type":"c1","uid":1430163,"ip_address":"","ucode":"F3871C5142AE52","user_header":"https://static001.geekbang.org/account/avatar/00/15/d2/93/9c58ce42.jpg","comment_is_top":false,"comment_ctime":1564234008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564234008","product_id":100023901,"comment_content":"setUpper() 跟 setLower() 都加上 &quot;synchronized&quot; 关键字。老师我想请问一下，这个方案要实现库存管理的线程安全，它要求库存管理类是单例的，因为如果两个线程操作两个不同的库存管理对象，那加锁就没意义了。","like_count":0},{"had_liked":false,"id":104865,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":1466335,"ip_address":"","ucode":"1B8EB2C26DE4EC","user_header":"https://static001.geekbang.org/account/avatar/00/16/5f/df/3c4881f0.jpg","comment_is_top":false,"comment_ctime":1560859957,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1560859957","product_id":100023901,"comment_content":"我觉得库存上下限线程不安全的主要是对库存上下限的设置不是原子性的，我觉得可以利用int高低位存储数据，高位存储库存上线，低位存储库存下限。利用volatile+cas来处理，还可以做到无锁化","like_count":0},{"had_liked":false,"id":95259,"user_name":"minggushen","can_delete":false,"product_type":"c1","uid":1441635,"ip_address":"","ucode":"60A76A58F81D7A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIhvw4HpdqXOUJnFcRKsKZwZAubZwYCtqFYLNVpp52QEWTZoMHU0DU634loe8ia4iaZibBege6SpLatQ/132","comment_is_top":false,"comment_ctime":1558000296,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558000296","product_id":100023901,"comment_content":"getset方法使用一把锁就好，","like_count":0},{"had_liked":false,"id":93910,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1557661639,"is_pvip":false,"replies":[{"id":"33666","content":"你说的这个条件下，有synch保证互斥就没必要用其他手段了，如果还有读操作，而读操作没用synch，最好用同时用volatile。总之能用内存模型的规则推断出来可见性就可以<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1557757242,"ip_address":"","comment_id":93910,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557661639","product_id":100023901,"comment_content":"synchronized this(无需 volatile)<br>@蓝天白云看…<br>@非礼勿言-…<br><br>synchronized this + volatile：<br>@靖远小和尚<br>@陈华应<br><br>看了老师对他们的回复，感觉一下又迷糊了。<br><br>--------<br><br>假设成员变量 upper、lower 只有 setUpper(...) 和 setLower(...) 方法对其更新，只要保证这两个 set 方法互斥就可以了，即 synchronized setUpper(...) 和 synchronized setLower(...)。而成员变量在此也可以从 atomic 换成原始数据类型。<br>如理解有误，还望老师指正，谢谢！！","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449825,"discussion_content":"你说的这个条件下，有synch保证互斥就没必要用其他手段了，如果还有读操作，而读操作没用synch，最好用同时用volatile。总之能用内存模型的规则推断出来可见性就可以\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557757242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85901,"user_name":"皮蛋","can_delete":false,"product_type":"c1","uid":1202619,"ip_address":"","ucode":"8384CC338549EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/bb/caf2b06c.jpg","comment_is_top":false,"comment_ctime":1555289849,"is_pvip":false,"replies":[{"id":"30924","content":"可以用无锁算法，不过都很复杂，建议还是先用锁","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1555327789,"ip_address":"","comment_id":85901,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555289849","product_id":100023901,"comment_content":"方法内使用对象加🔒可以解决竞态条件，但不就是用了低级的原语处理了吗，还有其他更好的方式吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446858,"discussion_content":"可以用无锁算法，不过都很复杂，建议还是先用锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555327789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82778,"user_name":"缪文","can_delete":false,"product_type":"c1","uid":1042262,"ip_address":"","ucode":"59603B50EF5FC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/56/c72997f3.jpg","comment_is_top":false,"comment_ctime":1554304160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554304160","product_id":100023901,"comment_content":"作为后端服务开发者，我们开发的是服务接口，实际上很多并发问题都不会遇到，比如这里提到的设置库存上下线，要考虑上限要大于下限，都是在数据库层才考虑的，java这一层dubbo为每个请求分配不同的线程的","like_count":0},{"had_liked":false,"id":82714,"user_name":"ZOU志伟","can_delete":false,"product_type":"c1","uid":1029179,"ip_address":"","ucode":"439779871CC992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/3b/a1f7e3a4.jpg","comment_is_top":false,"comment_ctime":1554283423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554283423","product_id":100023901,"comment_content":"利用之前管程的管程知识也可以解决这个约束条件问题","like_count":0},{"had_liked":false,"id":81686,"user_name":"蓝天白云看大海","can_delete":false,"product_type":"c1","uid":1302670,"ip_address":"","ucode":"02EF13FE37174B","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/8e/2376cd87.jpg","comment_is_top":false,"comment_ctime":1554006847,"is_pvip":false,"replies":[{"id":"29620","content":"如果用syncronized，就没必要加volatile","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554030121,"ip_address":"","comment_id":81686,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554006847","product_id":100023901,"comment_content":"有些评论里说，加syncronized和volatile，但我觉得syncronized已经可以保证可见性啊，为啥还要加volatile？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445298,"discussion_content":"如果用syncronized，就没必要加volatile","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554030121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81241,"user_name":"Cc","can_delete":false,"product_type":"c1","uid":1441727,"ip_address":"","ucode":"1B822D627C6284","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/bf/2f0a337c.jpg","comment_is_top":false,"comment_ctime":1553841216,"is_pvip":false,"replies":[{"id":"29491","content":"我感觉应该没有","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553907005,"ip_address":"","comment_id":81241,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1553841216","product_id":100023901,"comment_content":"看到前面好多人用cas操作，我也想了一下，是不行的，因为cas只能同时操作一个变量，这涉及了两个变量。想问下老师java有涉及两个变量的cas吗。比如啊a b   两个变量。如果b的值为比就把a设为c，类似redis的watch。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445127,"discussion_content":"我感觉应该没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553907005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233193,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","nickname":"DFighting","note":"","ucode":"F3BA2426FF8582","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16228,"discussion_content":"cas应该也需要在计算差值的时候上锁的，我觉得","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568878186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81062,"user_name":"CityAnimal","can_delete":false,"product_type":"c1","uid":1139902,"ip_address":"","ucode":"206491F70572AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/64/be/12c37d15.jpg","comment_is_top":false,"comment_ctime":1553789024,"is_pvip":true,"replies":[{"id":"29479","content":"<br>一致性约束是，最大库存大于最小库存，所以逻辑好像不对<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553863049,"ip_address":"","comment_id":81062,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553789024","product_id":100023901,"comment_content":"使用AtomicLong的compareAndSet方法可以吗？<br><br>&#47;**<br>     * 设置库存上限<br>     *&#47;<br>    void setUpper(long v) {<br>        long previous;<br>        do {<br>            previous = upper.get();<br>            if (v &lt; previous) {<br>                throw new IllegalArgumentException();<br>            }<br>        } while (!upper.compareAndSet(previous, v));<br>    }<br><br>    &#47;**<br>     * 设置库存下限<br>     *&#47;<br>    void setLower(long v) {<br>        long previous;<br>        do {<br>            previous = lower.get();<br>            if (v &gt; previous) {<br>                throw new IllegalArgumentException();<br>            }<br>        } while (!lower.compareAndSet(previous, v));<br>    }","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445065,"discussion_content":"\n一致性约束是，最大库存大于最小库存，所以逻辑好像不对\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553863049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81032,"user_name":"少主江衫","can_delete":false,"product_type":"c1","uid":1443369,"ip_address":"","ucode":"95B503FE19604F","user_header":"https://static001.geekbang.org/account/avatar/00/16/06/29/00a319e3.jpg","comment_is_top":false,"comment_ctime":1553781052,"is_pvip":false,"replies":[{"id":"29493","content":"正确","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553907299,"ip_address":"","comment_id":81032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553781052","product_id":100023901,"comment_content":"分析一下上述代码出现并发问题的情况是lower.get() or upper.get()值的时候会被抢占资源，就在这两个操作上加锁即可解决问题。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445053,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553907299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80849,"user_name":"靖远小和尚","can_delete":false,"product_type":"c1","uid":1213861,"ip_address":"","ucode":"094FA096B9F9B1","user_header":"https://static001.geekbang.org/account/avatar/00/12/85/a5/471ce926.jpg","comment_is_top":false,"comment_ctime":1553742142,"is_pvip":false,"replies":[{"id":"29392","content":"是这样的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553746806,"ip_address":"","comment_id":80849,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553742142","product_id":100023901,"comment_content":" synchronized (this) 加在if那里,讲道理已经没有必要在使用AtomicLong修饰那二个变量了,直接valatie修饰一下保证可见性, synchronized (this) 保证原子性.希望老师指正,这样是不是更好点","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445001,"discussion_content":"是这样的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553746806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80639,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1553692091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553692091","product_id":100023901,"comment_content":"听老师的 去把书第三章第四章知识看一遍😁","like_count":0},{"had_liked":false,"id":80444,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1553661752,"is_pvip":true,"replies":[{"id":"29303","content":"👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553694021,"ip_address":"","comment_id":80444,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553661752","product_id":100023901,"comment_content":"1，set方法synchronized this<br>2，if抽成方法添加synchronized this，变量volatile","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444868,"discussion_content":"👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553694021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80358,"user_name":"李冰成","can_delete":false,"product_type":"c1","uid":1001490,"ip_address":"","ucode":"300C6893ADE296","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/12/1457f6df.jpg","comment_is_top":false,"comment_ctime":1553651692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553651692","product_id":100023901,"comment_content":"期待老师下面文章","like_count":0},{"had_liked":false,"id":80182,"user_name":"","can_delete":false,"product_type":"c1","uid":1031328,"ip_address":"","ucode":"1B73BA45ACD06C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/a0/97c7679b.jpg","comment_is_top":false,"comment_ctime":1553614363,"is_pvip":false,"replies":[{"id":"29231","content":"有些书十年前在读，十年后还在读，但是理解不同了，我庆幸的是一直在读。没有经验可以自讨苦吃，自己假想一个项目来做，不动手不遇到问题是没办法成长的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553646848,"ip_address":"","comment_id":80182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553614363","product_id":100023901,"comment_content":"大佬问下，我这种小白(学生，没啥项目经验)。如何学这个，才比较好。感觉这些内容是战略上，对我来说感觉比较空。 😂😂","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444776,"discussion_content":"有些书十年前在读，十年后还在读，但是理解不同了，我庆幸的是一直在读。没有经验可以自讨苦吃，自己假想一个项目来做，不动手不遇到问题是没办法成长的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553646848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80146,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1553609758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553609758","product_id":100023901,"comment_content":"老师在第一模块里边举的所有例子几乎都犯过错误，完全没有考虑线程安全的问题，以为框架（最常用的SpringMVC）已经帮我们搞定这些了，看完真的认识到了。接下来再跟着老师熟悉熟练SDK里边的并发包类。","like_count":0},{"had_liked":false,"id":80109,"user_name":"木卫六","can_delete":false,"product_type":"c1","uid":1199495,"ip_address":"","ucode":"D113DF578C5BF5","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/87/57236a2d.jpg","comment_is_top":false,"comment_ctime":1553606875,"is_pvip":true,"replies":[{"id":"29426","content":"我觉得1就可以了，final也可以，其他的有点复杂，一不小心就会出错，建议工作中别用<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553781568,"ip_address":"","comment_id":80109,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553606875","product_id":100023901,"comment_content":"方案一，加锁：<br>public class SafeWM {<br>  &#47;&#47; 库存上限<br>  private final AtomicLong upper =<br>        new AtomicLong(0);<br>  &#47;&#47; 库存下限<br>  private final AtomicLong lower =<br>        new AtomicLong(0);<br>private final Object lock = new Object();<br>  &#47;&#47; 设置库存上限<br>  void setUpper(long v){<br>synchronized(lock){<br>    if...<br>    upper.set(v);<br>    }<br>  }<br>  &#47;&#47; 设置库存下限<br>  void setLower(long v){<br>    synchronized(lock){<br>     if...<br>    lower.set(v);}<br>  }<br>  &#47;&#47; 省略其他业务代码<br>}<br><br>方案二，将上下限封装到一个不可变对象中，或者封装到一个primitive变量中，比如如果最大上下限不超过32位，分别放到long型的高低32位上，但是在获取上或下限时需要另一个同步<br><br>方案三，设置两个锁来管理上和下限的交错读和写，为了避免死锁，需要保持lock1，lock2的锁获取顺序<br><br>老师，这样有问题吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444755,"discussion_content":"我觉得1就可以了，final也可以，其他的有点复杂，一不小心就会出错，建议工作中别用\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553781568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80088,"user_name":"笃行之","can_delete":false,"product_type":"c1","uid":1140311,"ip_address":"","ucode":"F76B5C6D17765E","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/57/e3bd54bd.jpg","comment_is_top":false,"comment_ctime":1553603765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553603765","product_id":100023901,"comment_content":"synchronized(this)","like_count":0},{"had_liked":false,"id":79997,"user_name":"李可威","can_delete":false,"product_type":"c1","uid":1440757,"ip_address":"","ucode":"7BB0B44076A4F4","user_header":"https://static001.geekbang.org/account/avatar/00/15/fb/f5/6521cb02.jpg","comment_is_top":false,"comment_ctime":1553590468,"is_pvip":false,"replies":[{"id":"29188","content":"能<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553604482,"ip_address":"","comment_id":79997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553590468","product_id":100023901,"comment_content":"在setUpper和setLower的方法中使用同一个锁能解决问题吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444715,"discussion_content":"能\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553604482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79964,"user_name":"橘子","can_delete":false,"product_type":"c1","uid":1368522,"ip_address":"","ucode":"EDF6145878F897","user_header":"https://static001.geekbang.org/account/avatar/00/14/e1/ca/d8b0835f.jpg","comment_is_top":false,"comment_ctime":1553584929,"is_pvip":false,"replies":[{"id":"29242","content":"同步一下方法就行了，你的第二条没看明白😂<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553648817,"ip_address":"","comment_id":79964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553584929","product_id":100023901,"comment_content":"第一，用委托的方式，把两个变量放到同一个类中，然后用final注释。因为jvm能够保证final类型的变量不会逸出。<br>第二，使用监视器同步，方法中需要分别同步两个变量，主要是依赖happen before规则实现。不知道对不对，是否还有其他方法","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444706,"discussion_content":"同步一下方法就行了，你的第二条没看明白😂\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553648817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79930,"user_name":"wxh","can_delete":false,"product_type":"c1","uid":1310106,"ip_address":"","ucode":"3166AA2DDFBB2E","user_header":"https://static001.geekbang.org/account/avatar/00/13/fd/9a/5be920c9.jpg","comment_is_top":false,"comment_ctime":1553576007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553576007","product_id":100023901,"comment_content":"用一个原子操作的引用类型封装upper和lower是否可以","like_count":0},{"had_liked":false,"id":79921,"user_name":"Lemon","can_delete":false,"product_type":"c1","uid":1155474,"ip_address":"","ucode":"FED3B7D2931152","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/92/ad27079c.jpg","comment_is_top":false,"comment_ctime":1553574323,"is_pvip":false,"replies":[{"id":"29318","content":"对，但是思考题不是可见性问题<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553695639,"ip_address":"","comment_id":79921,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553574323","product_id":100023901,"comment_content":"将这两个变量放到一个类里面，然后使用volitale修饰，这样保证了写对读可见，这样多吗","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444692,"discussion_content":"对，但是思考题不是可见性问题\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553695639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79906,"user_name":"Smile","can_delete":false,"product_type":"c1","uid":1125189,"ip_address":"","ucode":"0617032294DC43","user_header":"https://static001.geekbang.org/account/avatar/00/11/2b/45/e8f64725.jpg","comment_is_top":false,"comment_ctime":1553571899,"is_pvip":false,"replies":[{"id":"29425","content":"1可以，2工程上没可行性，3不可以，没有解决竞态条件问题<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553781362,"ip_address":"","comment_id":79906,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553571899","product_id":100023901,"comment_content":"对于safeWM的上线和下限，当多个线程操作这两个变量时，由于不同线程操作不同的变量，所以不存在变量的竞争关系，volatile关键字是保证了同一变量在不同线程的可见性问题，但是此处涉及两个变量所以，无法解决。解决方法：<br>1. 在set方法上加上synchronizd关键字，这样使用共享变量safeWM来进行控制<br>2. 在该类构造方法中，传入同一个变量，用来作为锁<br><br>3. 使用private static volatile SafeWM safeWM = new SafeWM(2,10);保证了safeWM内部的参数改变时，强行写入内存，使其他线程中缓冲失效，从内存获取，从而保证safeWM内部数据的可见性，但是发现，仍然存在并发问题，希望老师解答一下？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444681,"discussion_content":"1可以，2工程上没可行性，3不可以，没有解决竞态条件问题\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553781362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79841,"user_name":"苏志辉","can_delete":false,"product_type":"c1","uid":1068927,"ip_address":"","ucode":"39B25CE21C04EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7f/5dc11380.jpg","comment_is_top":false,"comment_ctime":1553563056,"is_pvip":false,"replies":[{"id":"29110","content":"没想清楚你说的读写锁<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553571612,"ip_address":"","comment_id":79841,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553563056","product_id":100023901,"comment_content":"存在问题的本质就是因为两个变量可能被同时操作，解决思路就是只允许同一时刻一个线程修改，加synchronized或读写锁","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444649,"discussion_content":"没想清楚你说的读写锁\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553571612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79825,"user_name":"逍遥子","can_delete":false,"product_type":"c1","uid":1127109,"ip_address":"","ucode":"777CF0635970E1","user_header":"https://static001.geekbang.org/account/avatar/00/11/32/c5/38a59795.jpg","comment_is_top":false,"comment_ctime":1553561829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553561829","product_id":100023901,"comment_content":"老师讲得浅入深出","like_count":0},{"had_liked":false,"id":79810,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1553560452,"is_pvip":false,"replies":[{"id":"29248","content":"一点都不简洁，如果简洁一定是错了。无锁的并发，保证组合操作的原子性没那么容易<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553649150,"ip_address":"","comment_id":79810,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553560452","product_id":100023901,"comment_content":"比起 用同步synchronized 用锁Lock 屏蔽可见性使用volatile ，使用 cas操作好像更简洁 !","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444636,"discussion_content":"一点都不简洁，如果简洁一定是错了。无锁的并发，保证组合操作的原子性没那么容易\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553649150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79794,"user_name":"Vickygu","can_delete":false,"product_type":"c1","uid":1371330,"ip_address":"","ucode":"85E3C158EF6B6F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLUdGtTfe4kBzS6EwvyNkqBGZpKE0vpic8zgZXgoJE3pgHfa2iaulictROn3NsICbZOjz1ELybdf5P6g/132","comment_is_top":false,"comment_ctime":1553558651,"is_pvip":false,"replies":[{"id":"29090","content":"不能用静态锁，太影响性能<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553562335,"ip_address":"","comment_id":79794,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1553558651","product_id":100023901,"comment_content":"是不是可以设置一个静态锁，来锁住这两个资源：public class SafeWM {<br>  private final AtomicLong upper = new AtomicLong(0);<br>  private final AtomicLong lower =new AtomicLong(0);<br>  &#47;&#47;静态锁<br>  private static Object lock = new Object();<br><br><br>  void setUpper(long v){<br>    sychronized(lock){<br>        upper.set(v);<br>    }<br>  }<br>  <br>  void setLower(long v){<br>    sychronized(lock){<br>       lower.set(v);<br>       }<br>  }<br>  <br>}","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444627,"discussion_content":"不能用静态锁，太影响性能\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553562335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351012,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/64/272dc1b7.jpg","nickname":"圆滚滚","note":"","ucode":"E4D81822A87D50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3894,"discussion_content":"用静态锁和synchronized(DBTest.class)锁类，这俩种方式有什么区别么，性能差异主要表现在哪里？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564934877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79790,"user_name":"Kid😋","can_delete":false,"product_type":"c1","uid":1317216,"ip_address":"","ucode":"7150F69AAAB477","user_header":"https://static001.geekbang.org/account/avatar/00/14/19/60/888f1371.jpg","comment_is_top":false,"comment_ctime":1553558530,"is_pvip":false,"replies":[{"id":"29114","content":"后者可以<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553571852,"ip_address":"","comment_id":79790,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553558530","product_id":100023901,"comment_content":"1.修改变量声明，利用transient关键字修改上下限变量；<br>2.用synchronize修饰设置方法；<br>老师，这两种方法是否可行？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444626,"discussion_content":"后者可以\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553571852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79789,"user_name":"轻歌赋","can_delete":false,"product_type":"c1","uid":1251574,"ip_address":"","ucode":"22F62446208805","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/f6/2ff7bc7a.jpg","comment_is_top":false,"comment_ctime":1553558497,"is_pvip":false,"replies":[{"id":"29309","content":"很全面！👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553694795,"ip_address":"","comment_id":79789,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553558497","product_id":100023901,"comment_content":"第一种方案加锁<br>第二种方案，两个变量只能通过一个方法set，如果只修改其中一个，则另一个为Null。<br>两个属性额外定义一个类，属性final。当修改的时候只能额外创建新的类，修改引用。<br>对于并发替换类的引用问题，可以通过原子引用，返回boolean判断。具体不成功之后的策略根据实际情况来。<br>希望老师同学能够给出宝贵的意见评价一下方案的优劣，谢谢！","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444625,"discussion_content":"很全面！👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553694795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79787,"user_name":"handylin","can_delete":false,"product_type":"c1","uid":1318193,"ip_address":"","ucode":"23EC4EFDB5FFE6","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/31/dc8ea649.jpg","comment_is_top":false,"comment_ctime":1553558338,"is_pvip":false,"replies":[{"id":"29115","content":"当然不是这样，如果这样就没并发问题了<br><br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553571917,"ip_address":"","comment_id":79787,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553558338","product_id":100023901,"comment_content":"可以说说java对象之间是怎么考虑共享的吗， 必须要一个线程对应一个对象吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444624,"discussion_content":"当然不是这样，如果这样就没并发问题了\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553571917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79779,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1553557742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553557742","product_id":100023901,"comment_content":"王老师我能想到的就是将变量v 前加上volatile,原子性控制解决","like_count":0},{"had_liked":false,"id":79778,"user_name":"IamNigel","can_delete":false,"product_type":"c1","uid":1435709,"ip_address":"","ucode":"388064ADD5A38C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJS0jwYKhjm1pRfCu5X6U0VyVS4ibgdhoAkEyV7FNdIMlXoibCyticb0kGYfDUibGcNrHtmkd8SWJekAA/132","comment_is_top":false,"comment_ctime":1553557727,"is_pvip":false,"replies":[{"id":"29092","content":"简单正确！","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553562510,"ip_address":"","comment_id":79778,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553557727","product_id":100023901,"comment_content":"竞态条件要实现同步","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444620,"discussion_content":"简单正确！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553562510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79776,"user_name":"zhangtnty","can_delete":false,"product_type":"c1","uid":1180553,"ip_address":"","ucode":"3C9A14BD7CF432","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/89/e1621a01.jpg","comment_is_top":false,"comment_ctime":1553557641,"is_pvip":false,"replies":[{"id":"29116","content":"会<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553571953,"ip_address":"","comment_id":79776,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553557641","product_id":100023901,"comment_content":"文中问题可以把if条件和set方法放入synchronized（class）中，这样会不会影响性能。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444619,"discussion_content":"会\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553571953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79771,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1553555835,"is_pvip":false,"replies":[{"id":"29298","content":"synch用的太多了，最外面一个就够了<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553687503,"ip_address":"","comment_id":79771,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1553555835","product_id":100023901,"comment_content":"老师如果像以下这么写有什么问题没?<br>@Data<br>public class SafeWM {<br><br>    private final AtomicLong upper = new AtomicLong(0);<br><br>    private final AtomicLong lower = new AtomicLong(0);<br><br>    public synchronized void setUpper(long v){<br><br>        synchronized (this.lower){<br>            if (this.getLower().get() &gt; v) {<br>                throw new IllegalArgumentException();<br>            }<br>        }<br>        upper.set(v);<br>    }<br>    <br>    public synchronized void setLower(long v) {<br><br>        synchronized (this.upper) {<br>            if (this.getUpper().get() &lt; v) {<br>                throw new IllegalArgumentException();<br>            }<br>            lower.set(v);<br>        }<br>    }<br>}","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444616,"discussion_content":"synch用的太多了，最外面一个就够了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553687503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380313,"discussion_content":"锁了厕所，又锁马桶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624434763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79766,"user_name":"一道阳光","can_delete":false,"product_type":"c1","uid":1239557,"ip_address":"","ucode":"F35207CCCEC6E2","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/05/c0d8014d.jpg","comment_is_top":false,"comment_ctime":1553555503,"is_pvip":false,"replies":[{"id":"29314","content":"👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553695054,"ip_address":"","comment_id":79766,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553555503","product_id":100023901,"comment_content":"简单粗暴方法：在两个if语句外层加上synchronize(this){...}同步块。<br>其他的方法没想到。<br>","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444613,"discussion_content":"👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553695054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79764,"user_name":"邋遢的流浪剑客","can_delete":false,"product_type":"c1","uid":1260881,"ip_address":"","ucode":"32AF6F9070506D","user_header":"https://static001.geekbang.org/account/avatar/00/13/3d/51/9723276c.jpg","comment_is_top":false,"comment_ctime":1553552097,"is_pvip":false,"replies":[{"id":"29311","content":"感觉不能用等待唤醒机制","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553694977,"ip_address":"","comment_id":79764,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553552097","product_id":100023901,"comment_content":"思考题可以用等待唤醒机制实现","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444612,"discussion_content":"感觉不能用等待唤醒机制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553694977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}