{"id":41977,"title":"25 | 微服务为什么要容器化？","content":"<p>专栏前面的文章，我主要给你讲解了微服务架构的基础组成以及在具体落地实践过程中的会遇到的问题和解决方案，这些是掌握微服务架构最基础的知识。从今天开始，我们将进一步深入微服务架构进阶的内容，也就是微服务与容器、DevOps之间的关系。它们三个虽然分属于不同领域，但却有着千丝万缕的关系，可以说没有容器的普及，就没有微服务架构的蓬勃发展，也就没有DevOps今天的盛行其道。</p>\n<p>之后我还会具体分析它们三者之间是如何紧密联系的，今天我们先来看<span class=\"orange\">微服务为什么要容器化</span>。</p>\n<h2>微服务带来的问题</h2>\n<p>单体应用拆分成多个微服务后，能够实现快速开发迭代，但随之带来的问题是测试和运维部署的成本的提升。相信拆分微服务的利弊你早已耳熟能详，我讲个具体的例子。微博业务早期就是一个大的单体Web应用，在测试和运维的时候，只需要把Web应用打成一个大的WAR包，部署到Tomcat中去就行了。后来拆分成多个微服务之后，有的业务需求需要同时修改多个微服务的代码，这时候就有多个微服务都需要打包、测试和上线发布，一个业务需求就需要同时测试多个微服务接口的功能，上线发布多个系统，给测试和运维的工作量增加了很多。这个时候就需要有办法能够减轻测试和运维的负担，我在上一讲给出的解决方案是DevOps。</p><!-- [[[read_end]]] -->\n<p>DevOps可以简单理解为开发和运维的结合，服务的开发者不再只负责服务的代码开发，还要负责服务的测试、上线发布甚至故障处理等全生命周期过程，这样的话就把测试和运维从微服务拆分后所带来的复杂工作中解放出来。DevOps要求开发、测试和发布的流程必须自动化，这就需要<strong>保证开发人员将自己本地部署测试通过的代码和运行环境，能够复制到测试环境中去，测试通过后再复制到线上环境进行发布</strong>。虽然这个过程看上去好像复制代码一样简单，但在现实时，本地环境、测试环境以及线上环境往往是隔离的，软件配置环境的差异也很大，这也导致了开发、测试和发布流程的割裂。</p>\n<p>而且还有一个问题是，拆分后的微服务相比原来大的单体应用更加灵活，经常要根据实际的访问量情况做在线扩缩容，而且通常会采用在公有云上创建的ECS来扩缩容。这又给微服务的运维带来另外一个挑战，因为公有云上创建的ECS通常只包含了基本的操作系统环境，微服务运行依赖的软件配置等需要运维再单独进行初始化工作，因为不同的微服务的软件配置依赖不同，比如Java服务依赖了JDK，就需要在ECS上安装JDK，而且可能不同的微服务依赖的JDK版本也不相同，一般情况下新的业务可能依赖的版本比较新比如JDK  8，而有些旧的业务可能依赖的版本还是JDK  6，为此服务部署的初始化工作十分繁琐。</p>\n<p>而容器技术的诞生恰恰解决了上面这两个问题，为什么容器技术可以解决本地、测试、线上环境的隔离，解决部署服务初始化繁琐的问题呢？下面我就以业界公认的容器标准Docker为例，来看看Docker是如何解决这两个问题的。</p>\n<h2>什么是Docker</h2>\n<p>Docker是容器技术的一种，事实上已经成为业界公认的容器标准，要理解Docker的工作原理首先得知道什么是容器。</p>\n<p>容器翻译自英文的Container一词，而Container又可以翻译成集装箱。我们都知道，<strong>集装箱的作用就是，在港口把货物用集装箱封装起来，然后经过货轮从海上运输到另一个港口，再在港口卸载后通过大货车运送到目的地。这样的话，货物在世界的任何地方流转时，都是在集装箱里封装好的，不需要根据是在货轮上还是大货车上而对货物进行重新装配</strong>。同样，在软件的世界里，容器也起到了相同的作用，只不过它封装的是软件的运行环境。容器的本质就是Linux操作系统里的进程，但与操作系统中运行的一般进程不同的是，容器通过<a href=\"https://en.wikipedia.org/wiki/Linux_namespaces\">Namespace</a>和<a href=\"https://zh.wikipedia.org/wiki/Cgroups\">Cgroups</a>这两种机制，可以拥有自己的root文件系统、自己的网络配置、自己的进程空间，甚至是自己的用户ID空间，这样的话容器里的进程就像是运行在宿主机上的另外一个单独的操作系统内，从而实现与宿主机操作系统里运行的其他进程隔离。</p>\n<p>Docker也是基于Linux内核的Cgroups、Namespace机制来实现进程的封装和隔离的，那么Docker为何能把容器技术推向一个新的高度呢？这就要从Docker在容器技术上的一项创新Docker镜像说起。虽然容器解决了应用程序运行时隔离的问题，但是要想实现应用能够从一台机器迁移到另外一台机器上还能正常运行，就必须保证另外一台机器上的操作系统是一致的，而且应用程序依赖的各种环境也必须是一致的。Docker镜像恰恰就解决了这个痛点，具体来讲，就是<strong>Docker镜像不光可以打包应用程序本身，而且还可以打包应用程序的所有依赖，甚至可以包含整个操作系统</strong>。这样的话，你在你自己本机上运行通过的应用程序，就可以使用Docker镜像把应用程序文件、所有依赖的软件以及操作系统本身都打包成一个镜像，可以在任何一个安装了Docker软件的地方运行。</p>\n<p>Docker镜像解决了DevOps中微服务运行的环境难以在本地环境、测试环境以及线上环境保持一致的难题。如此一来，开发就可以把在本地环境中运行测试通过的代码，以及依赖的软件和操作系统本身打包成一个镜像，然后自动部署在测试环境中进行测试，测试通过后再自动发布到线上环境上去，整个开发、测试和发布的流程就打通了。</p>\n<p>同时，无论是使用内部物理机还是公有云的机器部署服务，都可以利用Docker镜像把微服务运行环境封装起来，从而屏蔽机器内部物理机和公有云机器运行环境的差异，实现同等对待，降低了运维的复杂度。</p>\n<h2>微服务容器化实践</h2>\n<p>Docker能帮助解决服务运行环境可迁移问题的关键，就在于Docker镜像的使用上，实际在使用Docker镜像的时候往往并不是把业务代码、依赖的软件环境以及操作系统本身直接都打包成一个镜像，而是利用Docker镜像的<strong>分层机制</strong>，在每一层通过编写Dockerfile文件来逐层打包镜像。这是因为虽然不同的微服务依赖的软件环境不同，但是还是存在大大小小的相同之处，因此在打包Docker镜像的时候，可以分层设计、逐层复用，这样的话可以减少每一层镜像文件的大小。</p>\n<p>下面我就以微博的业务Docker镜像为例，来实际讲解下生产环境中如何使用Docker镜像。正如下面这张图所描述的那样，微博的Docker镜像大致分为四层。</p>\n<ul>\n<li>\n<p>基础环境层。这一层定义操作系统运行的版本、时区、语言、yum源、TERM等。</p>\n</li>\n<li>\n<p>运行时环境层。这一层定义了业务代码的运行时环境，比如Java代码的运行时环境JDK的版本。</p>\n</li>\n<li>\n<p>Web容器层。这一层定义了业务代码运行的容器的配置，比如Tomcat容器的JVM参数。</p>\n</li>\n<li>\n<p>业务代码层。这一层定义了实际的业务代码的版本，比如是V4业务还是blossom业务。</p>\n</li>\n</ul>\n<p><img src=\"https://static001.geekbang.org/resource/image/3d/7d/3df442f8c8eaec6184826028ad5a5f7d.png?wh=413*303\" alt=\"\" /></p>\n<p>这样的话，每一层的镜像都是在上一层镜像的基础上添加新的内容组成的，以微博V4镜像为例，V4业务的Dockerfile文件内容如下：</p>\n<pre><code>FROM registry.intra.weibo.com/weibo_rd_content/tomcat_feed:jdk8.0.40_tomcat7.0.81_g1_dns\nADD confs /data1/confs/\nADD node_pool /data1/node_pool/\nADD authconfs /data1/authconfs/\nADD authkey.properties /data1/\nADD watchman.properties /data1/\nADD 200.sh /data1/weibo/bin/200.sh\nADD 503.sh /data1/weibo/bin/503.sh\nADD catalina.sh /data1/weibo/bin/catalina.sh\nADD server.xml /data1/weibo/conf/server.xml\nADD logging.properties /data1/weibo/conf/logging.properties\nADD ROOT /data1/weibo/webapps/ROOT/\nRUN chmod +x /data1/weibo/bin/200.sh /data1/weibo/bin/503.sh /data1/weibo/bin/catalina.sh\nWORKDIR /data1/weibo/bin\n</code></pre>\n<p>FROM代表了上一层镜像文件是“tomcat_feed:jdk8.0.40_tomcat7.0.81_g1_dns”，从名字可以看出上一层镜像里包含了Java运行时环境JDK和Web容器Tomcat，以及Tomcat的版本和JVM参数等；ADD就是要在这层镜像里添加的文件， 这里主要包含了业务的代码和配置等；RUN代表这一层镜像启动时需要执行的命令；WORKDIR代表了这一层镜像启动后的工作目录。这样的话就可以通过Dockerfile文件在上一层镜像的基础上完成这一层镜像的制作。</p>\n<h2>总结</h2>\n<p>今天我给你讲解了微服务拆分后相比于传统的单体应用所带来的两个问题，一个是测试和发布工作量的提升，另一个是在弹性扩缩容时不同微服务所要求的软件运行环境差异带来的机器初始化复杂度的提升，而Docker利用Docker镜像对软件运行环境的完美封装正好解决了这两个问题。</p>\n<p>正是因为Docker可以做到一处通过、到处运行，所以对业务的价值极大，解决了以前应用程序在开发环境、测试环境以及生产环境之间的移植难的问题，极大提高了运维自动化的水平，也为DevOps理念的流行和业务上云提供了基础。</p>\n<p>可见容器化改造对微服务是十分必要的，但Docker也不是“银弹”，同样会产生新的复杂度问题，比如引入Docker后旧的针对物理机的运维模式就无法适应了，需要一种新的针对容器的运维模式。所以接下来，我将分三期，给你详细讲解微服务容器化后该如何运维。</p>\n<h2>思考题</h2>\n<p>Docker的概念乍一看与虚拟机有些类似，你认为它们有什么不同之处吗？分别适合什么应用场景？</p>\n<p>欢迎你在留言区写下自己的思考，与我一起讨论。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"24 | 微服务架构该如何落地？","id":41873},"right":{"article_title":"26 | 微服务容器化运维：镜像仓库和资源调度","id":42167}},"comments":[{"had_liked":false,"id":33735,"user_name":"追风","can_delete":false,"product_type":"c1","uid":1043857,"ip_address":"","ucode":"19EA29672C4F3E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/91/9cfdccbd.jpg","comment_is_top":false,"comment_ctime":1539866863,"is_pvip":false,"replies":[{"id":"12170","content":"这部分内容考虑了一下专栏篇幅和内容的重要性，挑选了最核心的讲，更深度的内容后面可以考虑再写一些，看大家反馈","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1539956220,"ip_address":"","comment_id":33735,"utype":1}],"discussion_count":1,"race_medal":0,"score":"83144245487","product_id":100014401,"comment_content":"老师，分布式事务还没讲","like_count":20,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427039,"discussion_content":"这部分内容考虑了一下专栏篇幅和内容的重要性，挑选了最核心的讲，更深度的内容后面可以考虑再写一些，看大家反馈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539956220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35112,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1094597,"ip_address":"","ucode":"1D15D3B64F2606","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","comment_is_top":false,"comment_ctime":1540428547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57375003395","product_id":100014401,"comment_content":"docker本质上还是依赖于Linux的内核，所以迁移的时候还是要求系统内核一致","like_count":14},{"had_liked":false,"id":70466,"user_name":"Tony","can_delete":false,"product_type":"c1","uid":1041154,"ip_address":"","ucode":"137608CF629DFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e3/02/0c228d1c.jpg","comment_is_top":false,"comment_ctime":1551102819,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23025939299","product_id":100014401,"comment_content":"虚机是一栋高层楼房里的一套房<br>docker是一套房里的一房间（厨房，卫生间，卧室）","like_count":6,"discussions":[{"author":{"id":1652895,"avatar":"https://static001.geekbang.org/account/avatar/00/19/38/9f/895353ab.jpg","nickname":"黄卫江","note":"","ucode":"0366942B81E7FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326467,"discussion_content":"虚拟机是精装修的房，docker是毛胚房更精准一点","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605601510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39742,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1542345071,"is_pvip":false,"discussion_count":2,"race_medal":1,"score":"18722214255","product_id":100014401,"comment_content":"生产和测试的配置文件不一样。镜像怎么解决应用配置的问题。","like_count":4,"discussions":[{"author":{"id":1863095,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM5hVcxdibDfxTSasRACVicFE3WjJ64UzFlDKJQh61mOMDiaOEJ2X9aCoib1g2kx7Pbyqd5piaqXu5XNXXg/132","nickname":"李利祥","note":"","ucode":"BC4421F45B8B64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257606,"discussion_content":"配置应该是使用配置中心来解决","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588594217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1077731,"avatar":"https://static001.geekbang.org/account/avatar/00/10/71/e3/afdc92e1.jpg","nickname":"花灰","note":"","ucode":"CA1474945A2A7E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590651,"discussion_content":"可使用 applo","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665973057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33531,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1539822423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18719691607","product_id":100014401,"comment_content":"虚机是一个操作系统，docker是操作系统内的进程，虚机占有资源多，启动慢，但隔离效果更好，一台物理机启动的虚机数量最多只能有几十个，但是docker可以有成千上万。","like_count":4},{"had_liked":false,"id":102059,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1560127443,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10150062035","product_id":100014401,"comment_content":"和我大的java【一次编译 到处运行】的理念是一样一样的","like_count":2,"discussions":[{"author":{"id":1198377,"avatar":"https://static001.geekbang.org/account/avatar/00/12/49/29/bbeccb9f.jpg","nickname":"风羽星泉","note":"","ucode":"CBC63AA00C5D70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560276,"discussion_content":"Java基于虚拟机","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649246825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93111,"user_name":"章洁","can_delete":false,"product_type":"c1","uid":1028624,"ip_address":"","ucode":"9009DC36CB4B9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/10/a6debd39.jpg","comment_is_top":false,"comment_ctime":1557399821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10147334413","product_id":100014401,"comment_content":"感觉两个问题的本质还是一个，解决环境封装的差异性，带来测试部署便利！解决环境的随时部署。","like_count":2},{"had_liked":false,"id":39379,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1542260173,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"10132194765","product_id":100014401,"comment_content":"服务器虚拟化解决的核心问题是资源调配，而容器解决的核心问题是应用开发、测试和部署","like_count":3},{"had_liked":false,"id":33955,"user_name":"郁","can_delete":false,"product_type":"c1","uid":1058787,"ip_address":"","ucode":"905D8D5FA60172","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ynEtBO8iayrGrbbekL9g8CJ7Mnl1u2Dom2Bt4XNPNZyTJ5woicYTewvxwTEhEyQ2UEBszRLEj5TkJxicaEb5rW0Cw/132","comment_is_top":false,"comment_ctime":1539929700,"is_pvip":false,"replies":[{"id":"12167","content":"你用的是docker什么网络模式？","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1539956022,"ip_address":"","comment_id":33955,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10129864292","product_id":100014401,"comment_content":"目前遇到最头疼的问题就是docker宿主机的防火墙如何优雅处理！","like_count":2,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427086,"discussion_content":"你用的是docker什么网络模式？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539956022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268651,"user_name":"hxzhouh","can_delete":false,"product_type":"c1","uid":1063643,"ip_address":"","ucode":"DF33A6E1873CA6","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/db/6a93acca.jpg","comment_is_top":false,"comment_ctime":1608282839,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5903250135","product_id":100014401,"comment_content":"Docker跟虚拟机最大的区别是，Docker的轻量级，创建销毁速度更快，体积更小。","like_count":1},{"had_liked":false,"id":140848,"user_name":"man1s","can_delete":false,"product_type":"c1","uid":1466953,"ip_address":"","ucode":"FFDB6B52F65A1B","user_header":"https://static001.geekbang.org/account/avatar/00/16/62/49/6332c99b.jpg","comment_is_top":false,"comment_ctime":1571059276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5866026572","product_id":100014401,"comment_content":"多个docker可以复用上层镜像，多个虚拟机全文独立","like_count":1},{"had_liked":false,"id":39380,"user_name":"步＊亮","can_delete":false,"product_type":"c1","uid":1005922,"ip_address":"","ucode":"CC3ACC68959BDF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/62/954065d4.jpg","comment_is_top":false,"comment_ctime":1542260234,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837227530","product_id":100014401,"comment_content":"老师你好，我想请教一个问题。在服务器国产化驱动下，docker是否能较容易地解决不同平台(x86,arm,mips)下的web应用的移植问题呢？","like_count":1},{"had_liked":false,"id":34104,"user_name":"郁","can_delete":false,"product_type":"c1","uid":1058787,"ip_address":"","ucode":"905D8D5FA60172","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ynEtBO8iayrGrbbekL9g8CJ7Mnl1u2Dom2Bt4XNPNZyTJ5woicYTewvxwTEhEyQ2UEBszRLEj5TkJxicaEb5rW0Cw/132","comment_is_top":false,"comment_ctime":1540003417,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5834970713","product_id":100014401,"comment_content":"bridge模式，在开了防火墙时，同一台宿主机上的容器间网络不通，遇到最大的麻烦就是防火墙和docker共存了！","like_count":1,"discussions":[{"author":{"id":1438037,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","nickname":"陈国林","note":"","ucode":"83D12F3E79F197","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221895,"discussion_content":"不太应该啊，可以仔细看下 iptables 的规则。bridge 模式是默认的，同一个宿主机上的容器之间默认通过 bridge0 通信，默认是通的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586077057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33880,"user_name":"王必成","can_delete":false,"product_type":"c1","uid":1224171,"ip_address":"","ucode":"B933E9720F8BA5","user_header":"https://static001.geekbang.org/account/avatar/00/12/ad/eb/c972abcf.jpg","comment_is_top":false,"comment_ctime":1539914296,"is_pvip":false,"replies":[{"id":"12168","content":"这个部分内容专栏没有涉及，可以研究下kong，zuul","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1539956063,"ip_address":"","comment_id":33880,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5834881592","product_id":100014401,"comment_content":"老师，什么时候讲API网关呀","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427067,"discussion_content":"这个部分内容专栏没有涉及，可以研究下kong，zuul","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539956063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33764,"user_name":"batman","can_delete":false,"product_type":"c1","uid":1266482,"ip_address":"","ucode":"73C30ACFC0D612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IIkdC2gohpcibib0AJvSdnJQefAuQYGlLySQOticThpF7Ck9WuDUQLJlgZ7ic13LIFnGBXXbMsSP3nZsbibBN98ZjGA/132","comment_is_top":false,"comment_ctime":1539875821,"is_pvip":true,"replies":[{"id":"12169","content":"我们老的http接口用wiki维护，跨语言rpc用的就是pb","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1539956100,"ip_address":"","comment_id":33764,"utype":1}],"discussion_count":3,"race_medal":1,"score":"5834843117","product_id":100014401,"comment_content":"你们公司接口文档用的什么","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427043,"discussion_content":"我们老的http接口用wiki维护，跨语言rpc用的就是pb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539956100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/68/da/5bcb83b1.jpg","nickname":"白晨","note":"","ucode":"6D6171B8ECEDDD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29928,"discussion_content":"pd是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570791019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2902123,"avatar":"","nickname":"冰橙","note":"","ucode":"B81727CAB581CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1272026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/68/da/5bcb83b1.jpg","nickname":"白晨","note":"","ucode":"6D6171B8ECEDDD","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":551725,"discussion_content":"protobuf","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645096370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29928,"ip_address":""},"score":551725,"extra":""}]}]},{"had_liked":false,"id":315089,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1633684570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633684570","product_id":100014401,"comment_content":"微服务拆分后增加了系统的复杂性，由于一个功能的上线和运维都涉及到多台服务器，所以增加了测试和运维的工作量和工作难度。<br><br>通过Docker 镜像技术可以快速迁移服务运行环境。<br>  对于测试来说，可以快速获得相应的测试环境。<br>  对于运维来说，可以快速进行扩容和缩容。","like_count":0},{"had_liked":false,"id":292264,"user_name":"兰兰的天","can_delete":false,"product_type":"c1","uid":2463702,"ip_address":"","ucode":"F3107BA14ADA06","user_header":"https://static001.geekbang.org/account/avatar/00/25/97/d6/c324a7de.jpg","comment_is_top":false,"comment_ctime":1620745138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620745138","product_id":100014401,"comment_content":"&lt;a href=&quot;https:&#47;&#47;www.1685100.com&#47;view&#47;xingyft&#47;pk10kai.html&quot;&gt;幸运飞艇&lt;&#47;a&gt;<br>&lt;a href=&quot;https:&#47;&#47;1685100.com&#47;view&#47;cjdlt&#47;index.html&quot;&gt;超级大乐透&lt;&#47;a&gt;<br>&lt;a href=&quot;https:&#47;&#47;1685100.com&#47;view&#47;shishicai_xy&#47;ssc_index.html&quot;&gt;幸运时时彩&lt;&#47;a&gt;","like_count":0},{"had_liked":false,"id":256809,"user_name":"浩淼海洋","can_delete":false,"product_type":"c1","uid":1206596,"ip_address":"","ucode":"506C12D597E990","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/e6TFib156x0VEiaWPkwpgAqia1yvwcdoMibSRchXgd1GxVyy49yBhYHd10ibzDia0HN7X2gaZCEt5MfqHiaSDJDEUzx5A/132","comment_is_top":false,"comment_ctime":1603758315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603758315","product_id":100014401,"comment_content":"虚拟机隔离性、安全性相对docker更好；docker具有更好的灵活性，部署实施效率更高","like_count":1},{"had_liked":false,"id":104029,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1560595501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560595501","product_id":100014401,"comment_content":"虚拟机和DOCKER乍一看确实很像，老师乍一问不知怎么回答。<br>不过实际工作中基本是用虚拟机模拟其他的操作系统环境，做实验做测试玩。<br>DOCKER用于部署各种应用，水平扩展非常方便，可以跑在物理机中也能跑在虚拟机中。<br>他们的定位我认为是不一样的，DOCKER更轻量化打包软件的运行环境，使开发、测试、运维更简单轻松。<br>","like_count":0},{"had_liked":false,"id":52578,"user_name":"ylw66","can_delete":false,"product_type":"c1","uid":1228185,"ip_address":"","ucode":"3FD0A4937793B7","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/99/851b0db6.jpg","comment_is_top":false,"comment_ctime":1545443972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545443972","product_id":100014401,"comment_content":"您好，我们公司在运行环境层按前端和后端分了两个微服务，前端from ngnix，后端from openjdk，我理解也是一种可行的实践吧","like_count":0},{"had_liked":false,"id":34278,"user_name":"张龙大骗子","can_delete":false,"product_type":"c1","uid":1153705,"ip_address":"","ucode":"13F8E34E08A38A","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/a9/dfea2c50.jpg","comment_is_top":false,"comment_ctime":1540085035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540085035","product_id":100014401,"comment_content":"docker的自动化运维和之前说的微服务治理是要相互结合的吧？","like_count":0},{"had_liked":false,"id":33808,"user_name":"极客达人","can_delete":false,"product_type":"c1","uid":1228844,"ip_address":"","ucode":"10FDC3E523F67E","user_header":"https://static001.geekbang.org/account/avatar/00/12/c0/2c/b45cc122.jpg","comment_is_top":false,"comment_ctime":1539906108,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1539906108","product_id":100014401,"comment_content":"问个问题，为啥要用rpc框架？","like_count":0,"discussions":[{"author":{"id":1438037,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","nickname":"陈国林","note":"","ucode":"83D12F3E79F197","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221898,"discussion_content":"因为单体应用拆分到微服务之后，服务之间的天然就存在调用，而这些服务之间的调用就是远程调用也就是RPC。当然如果都是单体应用，也就不存在所谓的微服务了，也就没有RPC","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586077240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1676962,"avatar":"https://static001.geekbang.org/account/avatar/00/19/96/a2/c1596dd8.jpg","nickname":"🤔","note":"","ucode":"40ACB53BF3C6B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568425,"discussion_content":"没rpc框架，服务调用得自己建tcp udp链接多麻烦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651132666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}