{"id":10672,"title":"10 | 伴生对象 : Kotlin 特有的单例对象","content":"<h1>源代码及 PDF 课件地址：</h1><p><strong><a href=\"https://gitee.com/geektime-geekbang/KotlinPrimer\">https://gitee.com/geektime-geekbang/KotlinPrimer</a></strong></p>","comments":[{"had_liked":false,"id":97543,"user_name":"遥远的救世主","can_delete":false,"product_type":"c3","uid":1181334,"ip_address":"","ucode":"4CC436479CAA21","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/96/4273bb09.jpg","comment_is_top":false,"comment_ctime":1558690535,"is_pvip":false,"replies":[{"id":42507,"content":"👍","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1563807524,"ip_address":"","comment_id":97543,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"单例的静态内部类写法，避免了类加载的时候初始化单例，同时将同步锁问题交给虚拟机处理。","like_count":5,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451322,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563807524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267810,"user_name":"Leafy","can_delete":false,"product_type":"c3","uid":2014544,"ip_address":"","ucode":"00B2F3A4F79BCB","user_header":"https://static001.geekbang.org/account/avatar/00/1e/bd/50/ca764127.jpg","comment_is_top":false,"comment_ctime":1607937961,"is_pvip":false,"replies":[{"id":104181,"content":"object表示创建了一个单利对象，直接类名调用没有创建对象","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1617693532,"ip_address":"","comment_id":267810,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"直接是\nobject StringUtils {\n    fun isEmpty()\n    ...\n}，也可以直接类名加方法名调用，这有什么区别吗？","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511751,"discussion_content":"object表示创建了一个单利对象，直接类名调用没有创建对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617693532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15881,"user_name":"null","can_delete":false,"product_type":"c3","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1531587542,"is_pvip":false,"replies":[{"id":5516,"content":"不会的，single.get实际上是直接调用了getHolderInstance()这样的一个类似的getter方法，而object Holder在编译以后会变成static Single instance这样的代码。\n还是推荐你自己在编译器里面敲一下这段代码，动手试一试","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1531713257,"ip_address":"","comment_id":15881,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"val instance = Single()\n\n如果 val 改成了 var，每次调用 Single.get() 返回的都是重新生成的对象吧？\n\n🙄🙄Java 实例化时的 new 关键字都省略了，直接 val instance = Single()","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420585,"discussion_content":"不会的，single.get实际上是直接调用了getHolderInstance()这样的一个类似的getter方法，而object Holder在编译以后会变成static Single instance这样的代码。\n还是推荐你自己在编译器里面敲一下这段代码，动手试一试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531713257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20030,"user_name":"上善若水","can_delete":false,"product_type":"c3","uid":1174366,"ip_address":"","ucode":"15A3DF0DB60E4F","user_header":"https://static001.geekbang.org/account/avatar/00/11/eb/5e/8813f94e.jpg","comment_is_top":false,"comment_ctime":1534220807,"is_pvip":false,"replies":[{"id":7074,"content":"top level是静态的，往后面学就能知道了","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1534332050,"ip_address":"","comment_id":20030,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"请问一下kotlin是不是没有静态的方法了，使用伴生对象可以实现类似java的静态方法调用，但内部其实还是对静态内部类实例的实例方法的调用？如果是，为什么kotlin没有提供静态方法的？要在内部生成一个静态内部类","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422071,"discussion_content":"top level是静态的，往后面学就能知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534332050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277998,"user_name":"薄荷","can_delete":false,"product_type":"c3","uid":1136686,"ip_address":"","ucode":"EB07BD2E5FDE6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/2e/08e6ce7c.jpg","comment_is_top":false,"comment_ctime":1612695063,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"这个写法完全是Java静态内部类实现单例的写法。\n- kotlin写法\nclass Single private constructor() {\n    companion object {\n        fun getInstance(): Single {\n            return Holder.INSTANCE\n        }\n    }\n\n    private object Holder {\n        val INSTANCE = Single()\n    }\n}\n- Java写法\nclass Single {\n    private Single() {\n    }\n\n    public static Single getInstance() {\n        return Holder.INSTANCE;\n    }\n\n    private static class Holder {\n        private static Single INSTANCE = new Single();\n    }\n}","like_count":0},{"had_liked":false,"id":20031,"user_name":"上善若水","can_delete":false,"product_type":"c3","uid":1174366,"ip_address":"","ucode":"15A3DF0DB60E4F","user_header":"https://static001.geekbang.org/account/avatar/00/11/eb/5e/8813f94e.jpg","comment_is_top":false,"comment_ctime":1534220808,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"请问一下kotlin是不是没有静态的方法了，使用伴生对象可以实现类似java的静态方法调用，但内部其实还是对静态内部类实例的实例方法的调用？如果是，为什么kotlin没有提供静态方法的？要在内部生成一个静态内部类","like_count":0}]}