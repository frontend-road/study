{"id":605161,"title":"26｜小试牛刀：如何利用类型转换实现手机通讯录？（上）","content":"<p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":378293,"user_name":"Geek_219b52","can_delete":false,"product_type":"c3","uid":1524531,"ip_address":"浙江","ucode":"955D79DEFD2DF4","user_header":"https://static001.geekbang.org/account/avatar/00/17/43/33/b9127867.jpg","comment_is_top":false,"comment_ctime":1690036990,"is_pvip":false,"replies":[{"id":138175,"content":"你的代码中统计 &quot;my&quot; 出现次数的问题在于你是如何处理字符串的。当你使用 `split(&#39; &#39;)` 方法时，它会根据空格进行分割，但这样分割的结果可能会包含换行符、标点符号等。\n\n在你给出的文件信息中，&quot;my&quot; 后面紧跟着一个空格和换行符，因此 `split(&#39; &#39;)` 之后，&quot;my&quot; 的实际内容变成了 `&quot;my\\n&quot;`，所以 `.count(&quot;my&quot;)` 返回了0。\n\n你可以通过以下方式修正代码：\n\n1. **使用正则表达式进行分割**：这样可以更精确地控制分割的行为。\n\n2. **在分割后移除非字母字符**：你可以使用 `strip()` 方法移除每个单词的首尾非字母字符。\n\n以下是一个修改后的代码示例：\n\n```python\nimport re\n\nfile_data = [&#39;what is you name?\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;my name is test1!\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;what about you?\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;my name is test2!\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;hei,boy\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;SEE YOU&#39;]\n\ntext = &quot; &quot;.join(file_data)\nwords = re.findall(r&#39;\\b\\w+\\b&#39;, text)\n\n# 统计my出现的次数\nprint(words.count(&quot;my&quot;))  # 输出2\n# 统计is出现的次数\nprint(words.count(&quot;is&quot;))  # 输出3\n```\n\n这个代码使用了正则表达式 `\\b\\w+\\b` 来分割文本，这样可以确保只得到完整的单词。结果是 &quot;my&quot; 出现了2次，&quot;is&quot; 出现了3次。","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1691594185,"ip_address":"甘肃","comment_id":378293,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，帮我看一下下面的问题，统计is出现的次数是3次是正确的，但是统计my出现的次数返回0\n\n#文件信息如下：\n[&#39;what is you name?\\n&#39;,\n &#39;\\n&#39;,\n &#39;my name is test1!\\n&#39;,\n &#39;\\n&#39;,\n &#39;what about you?\\n&#39;,\n &#39;\\n&#39;,\n &#39;my name is test2!\\n&#39;,\n &#39;\\n&#39;,\n &#39;hei,boy\\n&#39;,\n &#39;\\n&#39;,\n &#39;SEE YOU&#39;]\n\n\n#统计my出现的次数\nprint(str(file_data).split(&#39; &#39;).count(&quot;my&quot;))\n在vscode执行，显示my出现的次数是0次，这个结果不正确\n\n#统计is出现的次数\nprint(str(file_data).split(&#39; &#39;).count(&quot;is&quot;))\n在vscode执行，显示is出现的次数是3次，这个结果是正确的","like_count":5,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625349,"discussion_content":"你的代码中统计 &#34;my&#34; 出现次数的问题在于你是如何处理字符串的。当你使用 `split(&#39; &#39;)` 方法时，它会根据空格进行分割，但这样分割的结果可能会包含换行符、标点符号等。\n\n在你给出的文件信息中，&#34;my&#34; 后面紧跟着一个空格和换行符，因此 `split(&#39; &#39;)` 之后，&#34;my&#34; 的实际内容变成了 `&#34;my\\n&#34;`，所以 `.count(&#34;my&#34;)` 返回了0。\n\n你可以通过以下方式修正代码：\n\n1. **使用正则表达式进行分割**：这样可以更精确地控制分割的行为。\n\n2. **在分割后移除非字母字符**：你可以使用 `strip()` 方法移除每个单词的首尾非字母字符。\n\n以下是一个修改后的代码示例：\n\n```python\nimport re\n\nfile_data = [&#39;what is you name?\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;my name is test1!\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;what about you?\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;my name is test2!\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;hei,boy\\n&#39;,\n             &#39;\\n&#39;,\n             &#39;SEE YOU&#39;]\n\ntext = &#34; &#34;.join(file_data)\nwords = re.findall(r&#39;\\b\\w+\\b&#39;, text)\n\n# 统计my出现的次数\nprint(words.count(&#34;my&#34;))  # 输出2\n# 统计is出现的次数\nprint(words.count(&#34;is&#34;))  # 输出3\n```\n\n这个代码使用了正则表达式 `\\b\\w+\\b` 来分割文本，这样可以确保只得到完整的单词。结果是 &#34;my&#34; 出现了2次，&#34;is&#34; 出现了3次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691594185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"甘肃","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365481,"user_name":"Geek_f8cd05","can_delete":false,"product_type":"c3","uid":1507657,"ip_address":"广东","ucode":"FEBE700704F0B0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VF22kbprrVk1gTYnEaSvVyvJPaG249icNkvBtVSwWZPkR0gIVf0ObOiaAib1mCUyia8zEJXcicqzgYibtYFJfWKVVcKA/132","comment_is_top":false,"comment_ctime":1672648710,"is_pvip":false,"replies":[{"id":133354,"content":"这时候最精确的统计办法是用正则表达式，把原始字符串过滤一遍， 将字母外的特殊字符给替换为空","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1673339380,"ip_address":"广东","comment_id":365481,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，YOU和you的个数也不对，分隔后有些带了逗号,[ 之类的，就没有count出来","like_count":3,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599117,"discussion_content":"这时候最精确的统计办法是用正则表达式，把原始字符串过滤一遍， 将字母外的特殊字符给替换为空","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673339380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057196,"avatar":"https://static001.geekbang.org/account/avatar/00/10/21/ac/5ff01664.jpg","nickname":"?End","note":"","ucode":"EA5EAB8A1B5B35","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599178,"discussion_content":"是的，要用正则表达","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673365972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380714,"user_name":"张驰皓","can_delete":false,"product_type":"c3","uid":1048028,"ip_address":"北京","ucode":"448CAA944097E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fd/dc/245fee32.jpg","comment_is_top":false,"comment_ctime":1694049538,"is_pvip":false,"replies":[{"id":138767,"content":"set 的内部实现是基于散列表 (hash table) 的。因此，集合中元素的顺序并不是它们被添加时的顺序，而是基于它们的哈希值。简而言之，当你向集合中添加一个元素时，Python 会计算该元素的哈希值并使用这个哈希值来决定它在集合中的位置。\n\n空字符串的哈希值是确定的，并且当你在一个集合中有多个空字符串时，它们的哈希值都是相同的。所以，当你将它们添加到集合中时，只有一个会被保留。","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1694588227,"ip_address":"广东","comment_id":380714,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"好奇 set 函数处理后的数据是怎么样的（空行是多处重复的内容，去重后空行会被放在哪个位置呢），就赋值打印出来了，然后发现空行会被放在内容的第一行、后面再跟着其他未被去重的内容，还挺有趣","like_count":2,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627819,"discussion_content":"set 的内部实现是基于散列表 (hash table) 的。因此，集合中元素的顺序并不是它们被添加时的顺序，而是基于它们的哈希值。简而言之，当你向集合中添加一个元素时，Python 会计算该元素的哈希值并使用这个哈希值来决定它在集合中的位置。\n\n空字符串的哈希值是确定的，并且当你在一个集合中有多个空字符串时，它们的哈希值都是相同的。所以，当你将它们添加到集合中时，只有一个会被保留。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694588227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376675,"user_name":"木   乐","can_delete":false,"product_type":"c3","uid":1726899,"ip_address":"广东","ucode":"275FA32F8E8522","user_header":"https://static001.geekbang.org/account/avatar/00/1a/59/b3/893265e1.jpg","comment_is_top":false,"comment_ctime":1687186913,"is_pvip":false,"replies":[{"id":137575,"content":"https:&#47;&#47;github.com&#47;wilsonyin123&#47;python_productivity\n对应每一课的代码，也可以通过第一课下的链接下载全部代码和演示文本","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1688723500,"ip_address":"广东","comment_id":376675,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，在哪里找得到“24-demo.text”这个文件呢？","like_count":1,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622852,"discussion_content":"https://github.com/wilsonyin123/python_productivity\n对应每一课的代码，也可以通过第一课下的链接下载全部代码和演示文本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688723500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378570,"user_name":"Leaf","can_delete":false,"product_type":"c3","uid":2218754,"ip_address":"浙江","ucode":"51C120227A46CF","user_header":"https://static001.geekbang.org/account/avatar/00/21/db/02/862927f7.jpg","comment_is_top":false,"comment_ctime":1690431308,"is_pvip":false,"replies":[{"id":138168,"content":"Pycharm下建立。venv里应当只包含Python虚拟环境的内容（Python相关程序python、pip、jupyter等，虚拟环境下下载到本地的python第三方库）","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1691593196,"ip_address":"甘肃","comment_id":378570,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，我想问一下，这个24-demo.txt的文件是直接在venv文件夹下重新建立一个文件，还是需要用代码在pycharm建立","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625342,"discussion_content":"Pycharm下建立。venv里应当只包含Python虚拟环境的内容（Python相关程序python、pip、jupyter等，虚拟环境下下载到本地的python第三方库）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691593197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"甘肃","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378032,"user_name":"Guan YD","can_delete":false,"product_type":"c3","uid":2000972,"ip_address":"陕西","ucode":"76540F350800A9","user_header":"https://static001.geekbang.org/account/avatar/00/1e/88/4c/9a732f67.jpg","comment_is_top":false,"comment_ctime":1689672028,"is_pvip":false,"replies":[{"id":138181,"content":"你所遇到的问题与字符串分割和统计的方式有关。让我们分析一下你的代码。\n\n### 代码分析\n\n1. `str(ass).count(&quot;d&quot;)`：这一行统计的是整个列表转换为字符串后 `&quot;d&quot;` 字符的出现次数。确实有5个 `&quot;d&quot;`，所以输出为5。\n\n2. `str(ass).split(&quot; &quot;).count(&quot;d&quot;)`：这一行首先将整个列表转换为字符串，然后使用空格 (`&quot; &quot;`) 进行分割。分割后的列表为：\n\n   ```python\n   [&#39;[&quot;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&quot;,&quot;a&#39;, &#39;s&#39;, &#39;d&#39;, &#39;d&#39;, &#39;d&#39;, &#39;d&#39;, &#39;d&quot;]&#39;]\n   ```\n\n   在这个列表中，`&quot;d&quot;` 出现了4次，所以输出为4。\n\n### 为什么会有这个差异？\n\n问题在于 `str(ass).split(&quot; &quot;)` 使用空格作为分隔符，而列表转换为字符串后包含许多其他字符，例如引号和逗号。这导致分割后的结果并不是单纯的单词和字符，而是包括了这些额外的字符。\n\n### 解决方案\n\n如果你想统计原始字符串中 `&quot;d&quot;` 的出现次数，你可以首先将字符串连接起来，然后统计 `&quot;d&quot;` 的出现次数，如下所示：\n\n```python\nass = [&quot;1 2 3 4 5 6&quot;, &quot;a s d d d d d&quot;]\ntext = &quot; &quot;.join(ass)\nprint(text.count(&quot;d&quot;)) # 输出5\n```\n\n这样你将得到与原始字符串中 `&quot;d&quot;` 的实际出现次数相符的结果。","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1691595197,"ip_address":"甘肃","comment_id":378032,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师 我试了一下自己创建一个list来进行统计\nass = [&quot;1 2 3 4 5 6&quot;,&quot;a s d d d d d&quot;]\nprint(str(ass).count(&quot;d&quot;)) #5\nprint(str(ass).split(&quot; &quot;).count(&quot;d&quot;)) #4\n为啥一个是5，一个是4呢，确实是有5个","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625357,"discussion_content":"你所遇到的问题与字符串分割和统计的方式有关。让我们分析一下你的代码。\n\n### 代码分析\n\n1. `str(ass).count(&#34;d&#34;)`：这一行统计的是整个列表转换为字符串后 `&#34;d&#34;` 字符的出现次数。确实有5个 `&#34;d&#34;`，所以输出为5。\n\n2. `str(ass).split(&#34; &#34;).count(&#34;d&#34;)`：这一行首先将整个列表转换为字符串，然后使用空格 (`&#34; &#34;`) 进行分割。分割后的列表为：\n\n   ```python\n   [&#39;[&#34;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#34;,&#34;a&#39;, &#39;s&#39;, &#39;d&#39;, &#39;d&#39;, &#39;d&#39;, &#39;d&#39;, &#39;d&#34;]&#39;]\n   ```\n\n   在这个列表中，`&#34;d&#34;` 出现了4次，所以输出为4。\n\n### 为什么会有这个差异？\n\n问题在于 `str(ass).split(&#34; &#34;)` 使用空格作为分隔符，而列表转换为字符串后包含许多其他字符，例如引号和逗号。这导致分割后的结果并不是单纯的单词和字符，而是包括了这些额外的字符。\n\n### 解决方案\n\n如果你想统计原始字符串中 `&#34;d&#34;` 的出现次数，你可以首先将字符串连接起来，然后统计 `&#34;d&#34;` 的出现次数，如下所示：\n\n```python\nass = [&#34;1 2 3 4 5 6&#34;, &#34;a s d d d d d&#34;]\ntext = &#34; &#34;.join(ass)\nprint(text.count(&#34;d&#34;)) # 输出5\n```\n\n这样你将得到与原始字符串中 `&#34;d&#34;` 的实际出现次数相符的结果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691595197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"甘肃","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375699,"user_name":"Geek_c98a70","can_delete":false,"product_type":"c3","uid":2290127,"ip_address":"上海","ucode":"17D5ACBF7E44B7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epIdmlBLywcLF3ADKyicFoRkVocJnu0CBbv6wYMeNGDEKlXRicaok498ybaozAzZbpr8qn8fA3LCdBA/132","comment_is_top":false,"comment_ctime":1685868482,"is_pvip":false,"replies":[{"id":137577,"content":"User Avatar\n在Python中，使用`readline()`方法确实只能读取文件的一行。如果你想要读取整个文件的内容，可以使用`readlines()`方法或者遍历文件对象来逐行读取整个文件。\n以下是两种读取整个文件内容的方法：\n1. 使用`readlines()`方法：\n\nwith open(&quot;文件路径&quot;, &quot;r&quot;) as file:\n    lines = file.readlines()\n    for line in lines:\n        # 对读取的每一行进行处理\n        print(line.strip())\n上述代码中，`readlines()`方法用于读取所有行，并将它们存储在列表`lines`中。然后，你可以遍历该列表来处理每一行。\n2. 遍历文件对象：\n\nwith open(&quot;文件路径&quot;, &quot;r&quot;) as file:\n    for line in file:\n        # 对读取的每一行进行处理\n        print(line.strip())\n在这种方法中，直接遍历文件对象，每次迭代会读取文件的下一行，并将其存储在变量`line`中。你可以在循环中对每一行进行处理。\n请确保将代码中的&quot;文件路径&quot;替换为你实际文件的路径。\n希望以上方法能够帮助你读取完整的文件内容。如果还有其他问题，请随时提问。","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1688723707,"ip_address":"广东","comment_id":375699,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，我用mac自定义一个文档，但是用readline方法我只能读到第一行","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622854,"discussion_content":"User Avatar\n在Python中，使用`readline()`方法确实只能读取文件的一行。如果你想要读取整个文件的内容，可以使用`readlines()`方法或者遍历文件对象来逐行读取整个文件。\n以下是两种读取整个文件内容的方法：\n1. 使用`readlines()`方法：\n\nwith open(&#34;文件路径&#34;, &#34;r&#34;) as file:\n    lines = file.readlines()\n    for line in lines:\n        # 对读取的每一行进行处理\n        print(line.strip())\n上述代码中，`readlines()`方法用于读取所有行，并将它们存储在列表`lines`中。然后，你可以遍历该列表来处理每一行。\n2. 遍历文件对象：\n\nwith open(&#34;文件路径&#34;, &#34;r&#34;) as file:\n    for line in file:\n        # 对读取的每一行进行处理\n        print(line.strip())\n在这种方法中，直接遍历文件对象，每次迭代会读取文件的下一行，并将其存储在变量`line`中。你可以在循环中对每一行进行处理。\n请确保将代码中的&#34;文件路径&#34;替换为你实际文件的路径。\n希望以上方法能够帮助你读取完整的文件内容。如果还有其他问题，请随时提问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688723707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366437,"user_name":"Yuyy🐼","can_delete":false,"product_type":"c3","uid":3171722,"ip_address":"北京","ucode":"EA57B481AC7388","user_header":"https://static001.geekbang.org/account/avatar/00/30/65/8a/4e7bb7be.jpg","comment_is_top":false,"comment_ctime":1673782856,"is_pvip":false,"replies":[{"id":133626,"content":"统计字符时，要保证时字符串，才能使用字符串内置方法，所以将它们统统转成了字符串， 而转换成int是对统计之后的数字做的处理。\n\n统计之后虽然显示为数字，也可能为“123” 这样的形式， 在Python里面“123” 和123 前者只能使用字符串内置方法， 后者只能使用整数内置方法。我是为了计算，才将“123”使用int()函数转换为整数，用于做计算的。如果还有问题，可以群里将代码贴出来，我们详细讨论","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1674201133,"ip_address":"广东","comment_id":366437,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"为什么统计I出现的次数是把其先转换为str，而统计you和You的时候是转换为int","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600310,"discussion_content":"统计字符时，要保证时字符串，才能使用字符串内置方法，所以将它们统统转成了字符串， 而转换成int是对统计之后的数字做的处理。\n\n统计之后虽然显示为数字，也可能为“123” 这样的形式， 在Python里面“123” 和123 前者只能使用字符串内置方法， 后者只能使用整数内置方法。我是为了计算，才将“123”使用int()函数转换为整数，用于做计算的。如果还有问题，可以群里将代码贴出来，我们详细讨论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674201133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641431,"discussion_content":"list.count()方法返回的是int型，不需要再强制类型转换了。\nprint(str(file_data).split(&#34; &#34;).count(&#34;you&#34;) + str(file_data).split(&#34; &#34;).count(&#34;You&#34;))","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712639008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1904632,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/0f/f8/e1b9c1cc.jpg","nickname":"sunny","note":"","ucode":"12350F6FF873D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600202,"discussion_content":"You 统计也是先强制转换str ，然后因为要做加法，才做的int 强制类型转换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674108966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375765,"user_name":"🌺骄阳似我🌺","can_delete":false,"product_type":"c3","uid":3543004,"ip_address":"北京","ucode":"A2871A57B43FC3","user_header":"https://static001.geekbang.org/account/avatar/00/36/0f/dc/acbe9fdc.jpg","comment_is_top":false,"comment_ctime":1685953608,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"以空格分隔后，会有&quot;&#39;I&quot;开头的字符串，print(str(data).split(&#39; &#39;).count(&#39;I&#39;) + str(data).split(&#39; &#39;).count(&quot;&#39;I&quot;) + str(data).split(&#39; &#39;).count(&quot;I&#39;&quot;))，这样统计完是23个","like_count":2},{"had_liked":false,"id":363472,"user_name":"Geek_a967ff","can_delete":false,"product_type":"c3","uid":3221536,"ip_address":"中国台湾","ucode":"EE2BF752435D42","user_header":"","comment_is_top":false,"comment_ctime":1669714267,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"24-demo.txt中的&quot;I&quot;，应该是23个","like_count":1},{"had_liked":false,"id":395024,"user_name":"Leo = 6|Yi|天","can_delete":false,"product_type":"c3","uid":3916508,"ip_address":"加拿大","ucode":"7F1C7A74255FE9","user_header":"https://static001.geekbang.org/account/avatar/00/3b/c2/dc/a6d03b6d.jpg","comment_is_top":false,"comment_ctime":1729131291,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"str(一个list) 编程的string有一些地方是&#39;I ...\n所以用split(&quot;I&quot;)就抓不到了\n我觉得用str(file_data).split(&quot;I &quot;) 更好 assuming &quot;It&quot; 这种不算&quot;I&quot;","like_count":0},{"had_liked":false,"id":392241,"user_name":"爱在战国","can_delete":false,"product_type":"c3","uid":2710551,"ip_address":"上海","ucode":"CE588F236CD3AD","user_header":"https://static001.geekbang.org/account/avatar/00/29/5c/17/c71a12c2.jpg","comment_is_top":false,"comment_ctime":1720357477,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"#统计单词 you 和 You 出现的次数\nprint(int(str(file_data).split(&quot; &quot;).count(&quot;You&quot;))+int(str(file_data).split(&quot; &quot;).count(&quot;you&quot;)))\n#输出：7\n不知道为什么我这边输出的是7，不是6","like_count":0},{"had_liked":false,"id":381851,"user_name":"MarkG","can_delete":false,"product_type":"c3","uid":3675806,"ip_address":"山东","ucode":"454082595FE769","user_header":"https://static001.geekbang.org/account/avatar/00/38/16/9e/48621655.jpg","comment_is_top":false,"comment_ctime":1695990632,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"自己第一次思考的答案，读文件从bing搜索的使用方式\nf = open(&quot;24-demo.txt&quot;,encoding = &quot;utf-8&quot;)\ntext = f.read()\nlines = f.readlines()\nprint(&#39;统计文件行数&#39;, len(lines))\nlines_no_empty =  [x for x in f.readlines() if x is not &#39;\\n&#39;]\nprint(&#39;统计不包含空行的行数&#39;, len(lines_no_empty))\nI_count = text.count(&#39;I&#39;)\nprint(&#39;text 的类型&#39;, type(text))\nprint(&#39;统计单词 I 出现的次数: &#39;, I_count)\nyou_count = text.count(&#39;you&#39;)\nYou_count = text.count(&#39;You&#39;)\nprint(&#39;统计单词 you 和 You 出现的次数&#39;, eval(f&quot;{you_count+You_count}&quot;))","like_count":0},{"had_liked":false,"id":369212,"user_name":"麥白","can_delete":false,"product_type":"c3","uid":1264163,"ip_address":"上海","ucode":"058A631CA1A56B","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/23/6800a1b6.jpg","comment_is_top":false,"comment_ctime":1677225980,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"# 文件处理\nfile = open(&#39;..&#47;Sources&#47;demo_01.txt&#39;)\ndata = file.readlines()\nfile.close()\nprint(data)\n# 计算行数\nprint(len(data))  # 27\n# 计算非空行数\nprint(len(data) - data.count(&#39;\\n&#39;))  # 14\n# 计算字母&#39;I&#39;出现的次数\ncount_I = 0\nfor line in data:\n    count_I += line.count(&#39;I&#39;)\nprint(count_I)  # 28\n# 计算单词&#39;I&#39;出现的次数\ncount_word_I = 0\nfor line in data:\n    temp_strings = line.split(&quot; &quot;)\n    count_word_I += temp_strings.count(&#39;I&#39;)\nprint(count_word_I)  # 23\n# 计算单词you和You出现的次数\ncount_word_you = 0\ncount_word_You = 0\nfor line in data:\n    temp_strings = line.split(&quot; &quot;)\n    count_word_you += temp_strings.count(&#39;you&#39;)\n    count_word_You += temp_strings.count(&#39;You&#39;)\nprint(count_word_you)  # 5\nprint(count_word_You)  # 3","like_count":0}]}