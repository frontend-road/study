{"id":84601,"title":"04 | 互斥锁（下）：如何用一把锁保护多个资源？","content":"<p>在上一篇文章中，我们提到<strong>受保护资源和锁之间合理的关联关系应该是N:1的关系</strong>，也就是说可以用一把锁来保护多个资源，但是不能用多把锁来保护一个资源，并且结合文中示例，我们也重点强调了“不能用多把锁来保护一个资源”这个问题。而至于如何保护多个资源，我们今天就来聊聊。</p><p>当我们要保护多个资源时，首先要区分这些资源是否存在关联关系。</p><h2>保护没有关联关系的多个资源</h2><p>在现实世界里，球场的座位和电影院的座位就是没有关联关系的，这种场景非常容易解决，那就是球赛有球赛的门票，电影院有电影院的门票，各自管理各自的。</p><p>同样这对应到编程领域，也很容易解决。例如，银行业务中有针对账户余额（余额是一种资源）的取款操作，也有针对账户密码（密码也是一种资源）的更改操作，我们可以为账户余额和账户密码分配不同的锁来解决并发问题，这个还是很简单的。</p><p>相关的示例代码如下，账户类Account有两个成员变量，分别是账户余额balance和账户密码password。取款withdraw()和查看余额getBalance()操作会访问账户余额balance，我们创建一个final对象balLock作为锁（类比球赛门票）；而更改密码updatePassword()和查看密码getPassword()操作会修改账户密码password，我们创建一个final对象pwLock作为锁（类比电影票）。不同的资源用不同的锁保护，各自管各自的，很简单。</p><!-- [[[read_end]]] --><pre><code>class Account {\n  // 锁：保护账户余额\n  private final Object balLock\n    = new Object();\n  // 账户余额  \n  private Integer balance;\n  // 锁：保护账户密码\n  private final Object pwLock\n    = new Object();\n  // 账户密码\n  private String password;\n\n  // 取款\n  void withdraw(Integer amt) {\n    synchronized(balLock) {\n      if (this.balance &gt; amt){\n        this.balance -= amt;\n      }\n    }\n  } \n  // 查看余额\n  Integer getBalance() {\n    synchronized(balLock) {\n      return balance;\n    }\n  }\n\n  // 更改密码\n  void updatePassword(String pw){\n    synchronized(pwLock) {\n      this.password = pw;\n    }\n  } \n  // 查看密码\n  String getPassword() {\n    synchronized(pwLock) {\n      return password;\n    }\n  }\n}\n</code></pre><p>当然，我们也可以用一把互斥锁来保护多个资源，例如我们可以用this这一把锁来管理账户类里所有的资源：账户余额和用户密码。具体实现很简单，示例程序中所有的方法都增加同步关键字synchronized就可以了，这里我就不一一展示了。</p><p>但是用一把锁有个问题，就是性能太差，会导致取款、查看余额、修改密码、查看密码这四个操作都是串行的。而我们用两把锁，取款和修改密码是可以并行的。<strong>用不同的锁对受保护资源进行精细化管理，能够提升性能</strong>。这种锁还有个名字，叫<strong>细粒度锁</strong>。</p><h2>保护有关联关系的多个资源</h2><p>如果多个资源是有关联关系的，那这个问题就有点复杂了。例如银行业务里面的转账操作，账户A减少100元，账户B增加100元。这两个账户就是有关联关系的。那对于像转账这种有关联关系的操作，我们应该怎么去解决呢？先把这个问题代码化。我们声明了个账户类：Account，该类有一个成员变量余额：balance，还有一个用于转账的方法：transfer()，然后怎么保证转账操作transfer()没有并发问题呢？</p><pre><code>class Account {\n  private int balance;\n  // 转账\n  void transfer(\n      Account target, int amt){\n    if (this.balance &gt; amt) {\n      this.balance -= amt;\n      target.balance += amt;\n    }\n  } \n}\n</code></pre><p>相信你的直觉会告诉你这样的解决方案：用户synchronized关键字修饰一下transfer()方法就可以了，于是你很快就完成了相关的代码，如下所示。</p><pre><code>class Account {\n  private int balance;\n  // 转账\n  synchronized void transfer(\n      Account target, int amt){\n    if (this.balance &gt; amt) {\n      this.balance -= amt;\n      target.balance += amt;\n    }\n  } \n}\n</code></pre><p>在这段代码中，临界区内有两个资源，分别是转出账户的余额this.balance和转入账户的余额target.balance，并且用的是一把锁this，符合我们前面提到的，多个资源可以用一把锁来保护，这看上去完全正确呀。真的是这样吗？可惜，这个方案仅仅是看似正确，为什么呢？</p><p>问题就出在this这把锁上，this这把锁可以保护自己的余额this.balance，却保护不了别人的余额target.balance，就像你不能用自家的锁来保护别人家的资产，也不能用自己的票来保护别人的座位一样。</p><p><img src=\"https://static001.geekbang.org/resource/image/1b/d8/1ba92a09d1a55a6a1636318f30c155d8.png?wh=1142*640\" alt=\"\"></p><center><span class=\"reference\">用锁this保护this.balance和target.balance的示意图</span></center><p>下面我们具体分析一下，假设有A、B、C三个账户，余额都是200元，我们用两个线程分别执行两个转账操作：账户A转给账户B 100 元，账户B转给账户C 100 元，最后我们期望的结果应该是账户A的余额是100元，账户B的余额是200元， 账户C的余额是300元。</p><p>我们假设线程1执行账户A转账户B的操作，线程2执行账户B转账户C的操作。这两个线程分别在两颗CPU上同时执行，那它们是互斥的吗？我们期望是，但实际上并不是。因为线程1锁定的是账户A的实例（A.this），而线程2锁定的是账户B的实例（B.this），所以这两个线程可以同时进入临界区transfer()。同时进入临界区的结果是什么呢？线程1和线程2都会读到账户B的余额为200，导致最终账户B的余额可能是300（线程1后于线程2写B.balance，线程2写的B.balance值被线程1覆盖），可能是100（线程1先于线程2写B.balance，线程1写的B.balance值被线程2覆盖），就是不可能是200。</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/27/a46b4a1e73671d6e6f1bdb26f6c87627.png?wh=1142*640\" alt=\"\"></p><center><span class=\"reference\">并发转账示意图</span></center><h2>使用锁的正确姿势</h2><p>在上一篇文章中，我们提到用同一把锁来保护多个资源，也就是现实世界的“包场”，那在编程领域应该怎么“包场”呢？很简单，只要我们的<strong>锁能覆盖所有受保护资源</strong>就可以了。在上面的例子中，this是对象级别的锁，所以A对象和B对象都有自己的锁，如何让A对象和B对象共享一把锁呢？</p><p>稍微开动脑筋，你会发现其实方案还挺多的，比如可以让所有对象都持有一个唯一性的对象，这个对象在创建Account时传入。方案有了，完成代码就简单了。示例代码如下，我们把Account默认构造函数变为private，同时增加一个带Object lock参数的构造函数，创建Account对象时，传入相同的lock，这样所有的Account对象都会共享这个lock了。</p><pre><code>class Account {\n  private Object lock；\n  private int balance;\n  private Account();\n  // 创建Account时传入同一个lock对象\n  public Account(Object lock) {\n    this.lock = lock;\n  } \n  // 转账\n  void transfer(Account target, int amt){\n    // 此处检查所有对象共享的锁\n    synchronized(lock) {\n      if (this.balance &gt; amt) {\n        this.balance -= amt;\n        target.balance += amt;\n      }\n    }\n  }\n}\n</code></pre><p>这个办法确实能解决问题，但是有点小瑕疵，它要求在创建Account对象的时候必须传入同一个对象，如果创建Account对象时，传入的lock不是同一个对象，那可就惨了，会出现锁自家门来保护他家资产的荒唐事。在真实的项目场景中，创建Account对象的代码很可能分散在多个工程中，传入共享的lock真的很难。</p><p>所以，上面的方案缺乏实践的可行性，我们需要更好的方案。还真有，就是<strong>用Account.class作为共享的锁</strong>。Account.class是所有Account对象共享的，而且这个对象是Java虚拟机在加载Account类的时候创建的，所以我们不用担心它的唯一性。使用Account.class作为共享的锁，我们就无需在创建Account对象时传入了，代码更简单。</p><pre><code>class Account {\n  private int balance;\n  // 转账\n  void transfer(Account target, int amt){\n    synchronized(Account.class) {\n      if (this.balance &gt; amt) {\n        this.balance -= amt;\n        target.balance += amt;\n      }\n    }\n  } \n}\n</code></pre><p>下面这幅图很直观地展示了我们是如何使用共享的锁Account.class来保护不同对象的临界区的。</p><p><img src=\"https://static001.geekbang.org/resource/image/52/7c/527cd65f747abac3f23390663748da7c.png?wh=1142*640\" alt=\"\"></p><h2>总结</h2><p>相信你看完这篇文章后，对如何保护多个资源已经很有心得了，关键是要分析多个资源之间的关系。如果资源之间没有关系，很好处理，每个资源一把锁就可以了。如果资源之间有关联关系，就要选择一个粒度更大的锁，这个锁应该能够覆盖所有相关的资源。除此之外，还要梳理出有哪些访问路径，所有的访问路径都要设置合适的锁，这个过程可以类比一下门票管理。</p><p>我们再引申一下上面提到的关联关系，关联关系如果用更具体、更专业的语言来描述的话，其实是一种“原子性”特征，在前面的文章中，我们提到的原子性，主要是面向CPU指令的，转账操作的原子性则是属于是面向高级语言的，不过它们本质上是一样的。</p><p><strong>“原子性”的本质</strong>是什么？其实不是不可分割，不可分割只是外在表现，其本质是多个资源间有一致性的要求，<strong>操作的中间状态对外不可见</strong>。例如，在32位的机器上写long型变量有中间状态（只写了64位中的32位），在银行转账的操作中也有中间状态（账户A减少了100，账户B还没来得及发生变化）。所以<strong>解决原子性问题，是要保证中间状态对外不可见</strong>。</p><h2>课后思考</h2><p>在第一个示例程序里，我们用了两把不同的锁来分别保护账户余额、账户密码，创建锁的时候，我们用的是：<code>private final Object xxxLock = new Object();</code>，如果账户余额用 this.balance 作为互斥锁，账户密码用this.password作为互斥锁，你觉得是否可以呢？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","neighbors":{"left":{"article_title":"03 | 互斥锁（上）：解决原子性问题","id":84344},"right":{"article_title":"05 | 一不小心就死锁了，怎么办？","id":85001}},"comments":[{"had_liked":false,"id":73511,"user_name":"少主江衫","can_delete":false,"product_type":"c1","uid":1443369,"ip_address":"","ucode":"95B503FE19604F","user_header":"https://static001.geekbang.org/account/avatar/00/16/06/29/00a319e3.jpg","comment_is_top":false,"comment_ctime":1551919327,"is_pvip":false,"replies":[{"id":"26895","content":"正确，不能用可变对象做锁<br>","user_name":"作者回复","comment_id":73511,"uid":"1269969","ip_address":"","utype":1,"ctime":1551960480,"user_name_real":"王宝令"}],"discussion_count":5,"race_medal":0,"score":"851955443935","product_id":100023901,"comment_content":"用this.balance 和this.password 都不行。在同一个账户多线程访问时候，A线程取款进行this.balance-=amt;时候此时this.balance对应的值已经发生变换，线程B再次取款时拿到的balance对应的值并不是A线程中的，也就是说不能把可变的对象当成一把锁。this.password 虽然说是String修饰但也会改变，所以也不行。老师所讲的例子中的两个Object无论多次访问过程中都未发生变化？<br>请老师指正。","like_count":198,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442121,"discussion_content":"正确，不能用可变对象做锁\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218347,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLvdWoCic6ItzibF8ia8vrUTRuyj6AT3tg5f4QicIK0jTIFheJ6274ZkibuRLFP1NXG3jibv5TiaSKNoJpLw/132","nickname":"Geek_37984c","note":"","ucode":"7A319AE28599B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267604,"discussion_content":"password是String都是不可变变对象，一但对他们进行赋值就会变成新的对象，加的锁就失效了","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1589646392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1322636,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2e/8c/b261e15a.jpg","nickname":"张滔","note":"","ucode":"87ABAFF0E861E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344280,"discussion_content":"准确的说是可以用可变对象，本质上是不能用两个不同的对象，this其实也是可变对象。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1611386050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366826,"discussion_content":"本质是因为锁存在于实体对象的对象头里，而变量里仅仅是这个实体对象的地址。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1618201395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2419502,"avatar":"https://static001.geekbang.org/account/avatar/00/24/eb/2e/90fea784.jpg","nickname":"柒","note":"","ucode":"D41241629321A1","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584156,"discussion_content":"说的有些问题。本质是因为Integer（不在常量池内时）和String是不可变对象，重新赋值时，会赋值一个新的对象。 所以本质是锁不是一个了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1660645881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73540,"user_name":"树森","can_delete":false,"product_type":"c1","uid":1011016,"ip_address":"","ucode":"EAE115F0A23203","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6d/48/e777a8ee.jpg","comment_is_top":false,"comment_ctime":1551921912,"is_pvip":false,"replies":[{"id":"26891","content":"不可行，下一期讲优化<br>","user_name":"作者回复","comment_id":73540,"uid":"1269969","ip_address":"","utype":1,"ctime":1551960206,"user_name_real":"王宝令"}],"discussion_count":7,"race_medal":0,"score":"701631591160","product_id":100023901,"comment_content":"有个疑问，使用Account.class获得锁，那所有转账操作不是都成串行了，这里实践中可行吗？","like_count":163,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442143,"discussion_content":"不可行，下一期讲优化\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022091,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/8b/7a691d53.jpg","nickname":"HungerW","note":"","ucode":"75689EDF0F8E7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194198,"discussion_content":"是所有转账操作都会成串行。因为Account.class这个对象是整个系统唯一的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583197717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1645430,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKiauonyMORA2s43W7mogGDH4WYjW0gBJtYmUa9icTB6aMPGqibicEKlLoQmLKLWEctwHzthbTZkKR20w/132","nickname":"Spring4J","note":"","ucode":"06F056085A2564","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544600,"discussion_content":"是这样，锁的粒度太大了，a转b，同时c转d，明明互不相干，却要相互等待。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641586476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135604,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/f4/e277325d.jpg","nickname":"bin.chen","note":"","ucode":"5BA49358AB8A1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233925,"discussion_content":"使用Account.class多线程的优势就不存在了-甚至效率上比串行更慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586951939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1321860,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2b/84/07f0c0d6.jpg","nickname":"supermouse","note":"","ucode":"88072D5F881827","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161410,"discussion_content":"在转账操作时使用Account.class做锁，锁住的不是只有this.blance和target.blance吗？会导致所有转账操作都成串行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580897479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1992059,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/65/7b/058d17f3.jpg","nickname":"耶low","note":"","ucode":"4CCEB741583544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1321860,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2b/84/07f0c0d6.jpg","nickname":"supermouse","note":"","ucode":"88072D5F881827","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340110,"discussion_content":"但凡涉及到这个类的加锁操作会串行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609904169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":161410,"ip_address":""},"score":340110,"extra":""}]},{"author":{"id":1520539,"avatar":"https://static001.geekbang.org/account/avatar/00/17/33/9b/683f9c2a.jpg","nickname":"Starry starry night","note":"","ucode":"8DCEAF095FEC84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31737,"discussion_content":"和我想的一样2333","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570951525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73470,"user_name":"senekis","can_delete":false,"product_type":"c1","uid":1446025,"ip_address":"","ucode":"CD88681F0278FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erTlRJ6skf7iawAeqNfIT1PPgjD7swUdRIRkX1iczjj97GNrxnsnn3QuOhkVbCLgFYAm7sMZficNTSbA/132","comment_is_top":false,"comment_ctime":1551906694,"is_pvip":true,"discussion_count":6,"race_medal":0,"score":"628617131910","product_id":100023901,"comment_content":"解决原子性问题，是要保证中间状态对外不见<br><br>太精辟了！","like_count":146,"discussions":[{"author":{"id":1193692,"avatar":"https://static001.geekbang.org/account/avatar/00/12/36/dc/36b306a2.jpg","nickname":"WWR","note":"","ucode":"1FCFD17A6E0390","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29349,"discussion_content":"我想请教下，怎么理解对外不可见呢？对外指的具体是啥呢？参照谁呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570763366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1186044,"avatar":"https://static001.geekbang.org/account/avatar/00/12/18/fc/a0f8a88d.jpg","nickname":"uranusleon","note":"","ucode":"3CD5222E590A92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1193692,"avatar":"https://static001.geekbang.org/account/avatar/00/12/36/dc/36b306a2.jpg","nickname":"WWR","note":"","ucode":"1FCFD17A6E0390","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30955,"discussion_content":"我理解对其他线程不可见，因为线程切换不可避免，在共享资源保障原子性的条件下，切换成其他线程，其他线程也不可以操作此共享资源。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1570872118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29349,"ip_address":""},"score":30955,"extra":""},{"author":{"id":1193692,"avatar":"https://static001.geekbang.org/account/avatar/00/12/36/dc/36b306a2.jpg","nickname":"WWR","note":"","ucode":"1FCFD17A6E0390","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1186044,"avatar":"https://static001.geekbang.org/account/avatar/00/12/18/fc/a0f8a88d.jpg","nickname":"uranusleon","note":"","ucode":"3CD5222E590A92","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39429,"discussion_content":"嗯嗯。谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571924094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":30955,"ip_address":""},"score":39429,"extra":""},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1193692,"avatar":"https://static001.geekbang.org/account/avatar/00/12/36/dc/36b306a2.jpg","nickname":"WWR","note":"","ucode":"1FCFD17A6E0390","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376270,"discussion_content":"比如   count++在CPU指令级别至少分三步   剩下的你懂得","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622042859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29349,"ip_address":""},"score":376270,"extra":""}]}]},{"had_liked":false,"id":73643,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1551946842,"is_pvip":false,"replies":[{"id":"26902","content":"那我就放心了<br>","user_name":"作者回复","comment_id":73643,"uid":"1269969","ip_address":"","utype":1,"ctime":1551961934,"user_name_real":"王宝令"}],"discussion_count":9,"race_medal":0,"score":"340854363226","product_id":100023901,"comment_content":"我是一名普通的运维工程师，我是真看不懂java代码，我是来听思想的 。","like_count":80,"discussions":[{"author":{"id":1338064,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/d0/af2e16f1.jpg","nickname":"約禮","note":"","ucode":"98C315C59EAEC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33154,"discussion_content":"那个，请问照片是本人吗？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1571103374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1602505,"avatar":"https://static001.geekbang.org/account/avatar/00/18/73/c9/721c0827.jpg","nickname":"mlx","note":"","ucode":"DFE9604B6639E8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1338064,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/d0/af2e16f1.jpg","nickname":"約禮","note":"","ucode":"98C315C59EAEC3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186509,"discussion_content":"我信你个鬼 你个糟老头子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582686679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":33154,"ip_address":""},"score":186509,"extra":""}]},{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442200,"discussion_content":"那我就放心了\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1551961934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1904718,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/10/4e/b14f8d43.jpg","nickname":"哒糖","note":"","ucode":"027D06643CE48A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321993,"discussion_content":"不能这么想，如果你看不懂，那么思想也是掌握不了的，别问我怎么知道~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604659387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1505221,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f7/c5/ffe52e87.jpg","nickname":"阿拉西恩木","note":"","ucode":"A3A62175137D3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316335,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603385167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2963434,"avatar":"","nickname":"Geek_94fa0e","note":"","ucode":"15BC7D4E130E80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1505221,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f7/c5/ffe52e87.jpg","nickname":"阿拉西恩木","note":"","ucode":"A3A62175137D3D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560285,"discussion_content":"那个，请问照片是本人吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649251144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":316335,"ip_address":""},"score":560285,"extra":""}]},{"author":{"id":1749228,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/b0/ec/78be126d.jpg","nickname":"迈克糖","note":"","ucode":"A55D3DB2B20C4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263914,"discussion_content":"谈恋爱吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589265577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1273949,"avatar":"https://static001.geekbang.org/account/avatar/00/13/70/5d/2c313dad.jpg","nickname":"待我瘦到八十斤","note":"","ucode":"51553E48C2237E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213793,"discussion_content":"皮得很","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585122883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005711,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIibtTdDicknUHXgxmEAs8ib88kGhcjOzeHo5GBs6RfFHjGypRicKYcMPFZ5dm5edlpqALoibPK90icuwwQ/132","nickname":"qconljk","note":"","ucode":"E382B3C9041BB6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22056,"discussion_content":"= = ！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569572488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73642,"user_name":"老杨同志","can_delete":false,"product_type":"c1","uid":1246199,"ip_address":"","ucode":"3F334F0CFD3DE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/f7/3a493bec.jpg","comment_is_top":false,"comment_ctime":1551946834,"is_pvip":false,"replies":[{"id":"26903","content":"是的<br>","user_name":"作者回复","comment_id":73642,"uid":"1269969","ip_address":"","utype":1,"ctime":1551961974,"user_name_real":"王宝令"}],"discussion_count":8,"race_medal":0,"score":"336559395922","product_id":100023901,"comment_content":"思考题：<br>我觉得不能用balance和password做为锁对象。这两个对象balance是Integer，password是String都是不可变变对象，一但对他们进行赋值就会变成新的对象，加的锁就失效了","like_count":78,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442199,"discussion_content":"是的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551961974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1584018,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2b/92/3014b05b.jpg","nickname":"blue_diamond","note":"","ucode":"CD7A531530B858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10972,"discussion_content":"这两个对象是不可变的，但赋予新值就为变化的了。所以不能用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568345542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115945,"avatar":"https://static001.geekbang.org/account/avatar/00/11/07/29/e5537b9e.jpg","nickname":"冲鸭","note":"","ucode":"0EF69B02188A73","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309480,"discussion_content":"Integer哪来的？balance明明是int类型，基本类型是无法加锁的，编译阶段都过不了，各种误导！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601299720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2070984,"avatar":"","nickname":"dominiczhu","note":"","ucode":"9C87F77CCE06C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115945,"avatar":"https://static001.geekbang.org/account/avatar/00/11/07/29/e5537b9e.jpg","nickname":"冲鸭","note":"","ucode":"0EF69B02188A73","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380728,"discussion_content":"balance是Integer啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624675296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309480,"ip_address":""},"score":380728,"extra":""}]},{"author":{"id":1584018,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2b/92/3014b05b.jpg","nickname":"blue_diamond","note":"","ucode":"CD7A531530B858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10969,"discussion_content":"不能用可变对象做锁，也不能用balance和password做为锁对象，这两个是不可变对象。那要对什么对象加锁，不懂了，求解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568345266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1179101,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fd/dd/baeda83e.jpg","nickname":"Monster!","note":"","ucode":"74F1D3BB5E3915","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1584018,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2b/92/3014b05b.jpg","nickname":"blue_diamond","note":"","ucode":"CD7A531530B858","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13006,"discussion_content":"integer和string都是引用对象啊，不可变对象就是说虽然值是从16变成了15但是引用地址已经变了，不是同一个对象了，所有不能作为锁","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1568628525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":10969,"ip_address":""},"score":13006,"extra":""},{"author":{"id":1341612,"avatar":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","nickname":"古夜","note":"","ucode":"0A82D3CFCEDF07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179101,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fd/dd/baeda83e.jpg","nickname":"Monster!","note":"","ucode":"74F1D3BB5E3915","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273072,"discussion_content":"Integer不是有个取值范围吗？如果值在范围内变化是不是就可以认为是同一个对象？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590405714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":13006,"ip_address":""},"score":273072,"extra":""},{"author":{"id":1507783,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/c7/549b5616.jpg","nickname":"夜涛","note":"","ucode":"672CC53663710B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1179101,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fd/dd/baeda83e.jpg","nickname":"Monster!","note":"","ucode":"74F1D3BB5E3915","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307903,"discussion_content":"integer有缓存的-128-127，自动装箱在缓存区是同一个对象。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600783932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":13006,"ip_address":""},"score":307903,"extra":""}]}]},{"had_liked":false,"id":74094,"user_name":"yuc","can_delete":false,"product_type":"c1","uid":1393989,"ip_address":"","ucode":"98611DA068D3D4","user_header":"","comment_is_top":false,"comment_ctime":1552102572,"is_pvip":false,"replies":[{"id":"27083","content":"这种方式比锁class更安全，因为这个缺是私有的。有些最佳实践要求必须这样做。👍","user_name":"作者回复","comment_id":74094,"uid":"1269969","ip_address":"","utype":1,"ctime":1552111042,"user_name_real":"王宝令"}],"discussion_count":9,"race_medal":0,"score":"237775303852","product_id":100023901,"comment_content":"是否可以在Account中添加一个静态object，通过锁这个object来实现一个锁保护多个资源，如下：<br>class Account {<br>  private static Object lock = new Object();<br>  private int balance;<br>  &#47;&#47; 转账<br>  void transfer(Account target, int amt){<br>    synchronized(lock) {<br>      if (this.balance &gt; amt) {<br>        this.balance -= amt;<br>        target.balance += amt;<br>      }<br>    }<br>  } <br>}<br>","like_count":55,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442439,"discussion_content":"这种方式比锁class更安全，因为这个缺是私有的。有些最佳实践要求必须这样做。👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552111042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115302,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/a6/18c4f73c.jpg","nickname":"Airsaid","note":"","ucode":"5B90BC0044F376","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193901,"discussion_content":"如果用 Account.class 的话，其他使用的者也可以用这个锁，可以说这种锁是暴露的，而层主这种则是私有的锁，不会有暴露的风险。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1583163419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1235607,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLsexaVCEecIhpPsOqHJkZFEnyTfOZ1Ot3lmSMfyIVkR5SerJibatj6mIHackokoIO4ELiaObhQ60rw/132","nickname":"Infinite_gao","note":"","ucode":"9FBFEDED8790A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20161,"discussion_content":"应该再加一个final就完美了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1569285661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618607,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/af/81303f5a.jpg","nickname":"行者","note":"","ucode":"8179D167D99CB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35812,"discussion_content":"这种方式加锁的话，不是一样会造成A->B，C->D这种不相关的两笔转账竞争同一把锁么","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571306708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485018,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a8/da/63dd5078.jpg","nickname":"演员","note":"","ucode":"20040EC3D42025","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237403,"discussion_content":"其实你这和用class作为锁没啥区别 只是你这样 可以比class锁稍微好点 别的地方用不到","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587139029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2015438,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c0/ce/eb1b4ae1.jpg","nickname":"可圈可丶","note":"","ucode":"EB527E176EDE91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576355,"discussion_content":"这种不会有问题吗？锁一个私有属性，那么线程之间的锁不还是不一样的吗？这样还是会导致多条线程进入临界区啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655456383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1463740,"avatar":"https://static001.geekbang.org/account/avatar/00/16/55/bc/fad0090b.jpg","nickname":"Yeyw","note":"","ucode":"C9D20DB91C3BE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373788,"discussion_content":"和类锁差不多，加个final 就更好避免修改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620873155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1341612,"avatar":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","nickname":"古夜","note":"","ucode":"0A82D3CFCEDF07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273158,"discussion_content":"请教老师，为什么说这种方式比锁class更安全呢？private修饰符对线程也是私有的吗（可以限制别的线程访问）？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590416630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1929,"discussion_content":"我想问下我理解的应该也是应该用静态object才是，老师文章中只用私有的，怎么保证所有对象共享一个object？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563101871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75927,"user_name":"别皱眉","can_delete":false,"product_type":"c1","uid":1177354,"ip_address":"","ucode":"D24F65EFF65586","user_header":"https://static001.geekbang.org/account/avatar/00/11/f7/0a/067537fc.jpg","comment_is_top":false,"comment_ctime":1552492492,"is_pvip":false,"replies":[{"id":"27733","content":"你分析的很仔细了，就是这样的，bc锁的不是一个对象。不能保证互斥性<br>","user_name":"作者回复","comment_id":75927,"uid":"1269969","ip_address":"","utype":1,"ctime":1552536849,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"186236086220","product_id":100023901,"comment_content":"老师，很感谢有这个专栏，让我能够更加系统的学习并发知识。<br>对于思考题,之所以不可行是因为每次修改balance和password时都会使锁发生变化。<br>-----------------------------------------------------------------------<br>以下只是我的猜想<br>比如有线程A、B、C <br>线程A首先拿到balance1锁，线程B这个时候也过来，发现锁被拿走了，线程B被放入一个地方进行等待。<br>当A修改掉变量balance的值后，锁由balance1变为balance2.<br>线程B也拿到那个balance1锁，这时候刚好有线程C过来，拿到了balance2锁。<br>由于B和C持有的锁不同，所以可以同时执行这个方法来修改balance的值,这个时候就有可能是线程B修改的值会覆盖掉线程C修改的值?<br>-----------------------------------------------------------------------<br>不知道到底是不是这样?老师可以详细讲下这个过程吗?谢谢","like_count":43,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443094,"discussion_content":"你分析的很仔细了，就是这样的，bc锁的不是一个对象。不能保证互斥性\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552536849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1584018,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2b/92/3014b05b.jpg","nickname":"blue_diamond","note":"","ucode":"CD7A531530B858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37509,"discussion_content":"大三就懂这么多，前途无量啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571628242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73520,"user_name":"wang","can_delete":false,"product_type":"c1","uid":1161200,"ip_address":"","ucode":"5D569805C6A923","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/f0/a570f68a.jpg","comment_is_top":false,"comment_ctime":1551919701,"is_pvip":false,"replies":[{"id":"26855","content":"深刻！👍<br>","user_name":"作者回复","comment_id":73520,"uid":"1269969","ip_address":"","utype":1,"ctime":1551956969,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"143285840469","product_id":100023901,"comment_content":"不可以。因为balance为integer对象，当值被修改相当于换锁，还有integer有缓存-128到127，相当于同一个对象。","like_count":33,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442127,"discussion_content":"深刻！👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551956969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73708,"user_name":"zhaozp","can_delete":false,"product_type":"c1","uid":1099706,"ip_address":"","ucode":"BF390F5ED762CD","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","comment_is_top":false,"comment_ctime":1551961636,"is_pvip":false,"replies":[{"id":"26919","content":"总结的到位","user_name":"作者回复","comment_id":73708,"uid":"1269969","ip_address":"","utype":1,"ctime":1551967151,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"96041242148","product_id":100023901,"comment_content":"可变对象不能作为锁","like_count":22,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442236,"discussion_content":"总结的到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551967151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73587,"user_name":"0bug","can_delete":false,"product_type":"c1","uid":1050335,"ip_address":"","ucode":"CADCC882F31784","user_header":"https://static001.geekbang.org/account/avatar/00/10/06/df/60126ff3.jpg","comment_is_top":false,"comment_ctime":1551932938,"is_pvip":false,"replies":[{"id":"26874","content":"分析的很仔细👍<br>","user_name":"作者回复","comment_id":73587,"uid":"1269969","ip_address":"","utype":1,"ctime":1551959069,"user_name_real":"王宝令"}],"discussion_count":3,"race_medal":0,"score":"87451278858","product_id":100023901,"comment_content":"思考题：<br>结论：不可行<br>原因：举个例子，假如this.balance = 10 ，多个线程同时竞争同一把锁this.balance，此时只有一个线程拿到了锁，其他线程等待，拿到锁的线程进行this.balance -= 1操作，this.balance = 9。 该线程释放锁， 之前等待锁的线程继续竞争this.balance=10的锁，新加入的线程竞争this.balance=9的锁，导致多个锁对应一个资源 ","like_count":20,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442171,"discussion_content":"分析的很仔细👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1507783,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/c7/549b5616.jpg","nickname":"夜涛","note":"","ucode":"672CC53663710B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307906,"discussion_content":"如果是10和9作示例，这个讲解是有问题的吧，integer在这this.balance都是同一个对象，竞争的是同一把锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600784799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1204496,"avatar":"https://static001.geekbang.org/account/avatar/00/12/61/10/38f22d72.jpg","nickname":"。","note":"","ucode":"B45232071FECB0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1507783,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/c7/549b5616.jpg","nickname":"夜涛","note":"","ucode":"672CC53663710B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":570426,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651760949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307906,"ip_address":""},"score":570426,"extra":""}]}]},{"had_liked":false,"id":73592,"user_name":"强哥","can_delete":false,"product_type":"c1","uid":1206726,"ip_address":"","ucode":"3B8DC780FE4EF9","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/c6/513df085.jpg","comment_is_top":false,"comment_ctime":1551934080,"is_pvip":false,"replies":[{"id":"26877","content":"分布式的不讲了，分支太多不好。下一期会讲优化<br>","user_name":"作者回复","comment_id":73592,"uid":"1269969","ip_address":"","utype":1,"ctime":1551959246,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"53091541632","product_id":100023901,"comment_content":"文章里第二个例子根本无法用到实践中，锁力度太大，可以用乐观关锁解决，另外分布式的情况下，应该如何分析也应该讲讲？至于原子性其实跟数据库的原子性还是有差异的，例如虚拟机异常退出时，synchinzed也无法操作原子操作的。","like_count":12,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442173,"discussion_content":"分布式的不讲了，分支太多不好。下一期会讲优化\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1581294,"avatar":"","nickname":"Geek_be4cec","note":"","ucode":"C87642D655EAC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3427,"discussion_content":"这位同学来讲讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564477463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73583,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1551931053,"is_pvip":false,"replies":[{"id":"26876","content":"感谢盛赞，我会继续保持的<br>","user_name":"作者回复","comment_id":73583,"uid":"1269969","ip_address":"","utype":1,"ctime":1551959169,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"44501604013","product_id":100023901,"comment_content":"王老师， 您在第二讲中贴出的英文链接的地址很棒，看着您写过的专栏，再去看它，有种恍然大悟地感觉~！  恳请您还是在后续地专栏里，继续保持这种死磕并发基础地原汁原味地链接啊~！  您地专栏是您多年地理解与实战的营养，加上您亲自地朗读，当然也是原汁原味。但是我的意思是，我们应该有一批人很少看英文类的文档，所以才会有这种恳请~！   谢谢老师~!","like_count":10,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442168,"discussion_content":"感谢盛赞，我会继续保持的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74181,"user_name":"SnowsonZ","can_delete":false,"product_type":"c1","uid":1446972,"ip_address":"","ucode":"5AF76D55CCDC8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/14/3c/d6be29f3.jpg","comment_is_top":false,"comment_ctime":1552135865,"is_pvip":false,"replies":[{"id":"27133","content":"这是个最佳实践。只是为了防止一不小心改变了它。搞成final类型，就再也改变不了。只是最佳实践而已。","user_name":"作者回复","comment_id":74181,"uid":"1269969","ip_address":"","utype":1,"ctime":1552142825,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"40206841529","product_id":100023901,"comment_content":"老师，有个疑问，为什么作为互斥锁的对象一定要是final的？非final导致两个互斥锁的原因是什么？是工作内存从主内存拷贝的原因吗？","like_count":9,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442484,"discussion_content":"这是个最佳实践。只是为了防止一不小心改变了它。搞成final类型，就再也改变不了。只是最佳实践而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552142825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1904718,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/10/4e/b14f8d43.jpg","nickname":"哒糖","note":"","ucode":"027D06643CE48A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368321,"discussion_content":"正有此疑问，感谢老师的回答，感谢同学的提问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618653035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214810,"user_name":"broccoli","can_delete":false,"product_type":"c1","uid":1901830,"ip_address":"","ucode":"A166E2112EFEEA","user_header":"https://static001.geekbang.org/account/avatar/00/1d/05/06/12476afb.jpg","comment_is_top":false,"comment_ctime":1588822814,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31653593886","product_id":100023901,"comment_content":"老师，我对评论区高赞同学@少主江衫的回答有不同的意见。<br><br>思考题的答案肯定是不能，原因是 balance 字段和 password 字段是可变的。但说它是可变的并不是指字段指向 Integer 对象和 String 对象是可变的（事实上在 openjdk 11 里实测 int 基本类型做引导锁并不会自动装箱，需要显式转换为包装类才能通过编译），而是指引用变量本身由于没有被 final 修饰所以是可变的，所以如果某处修改了引用指向的对象，就会出现 “多个锁管理同一个共享资源” 的问题。在这一阶段，问题的核心是 “引用可变”。<br><br>但在我们的例子中，哪怕字段被 final 修饰了，依然是不妥当的。这主要是因为 IntCache 和字符串常量池的存在，因此会出现不必要的锁竞争，从而降低系统性能。在这一阶段，问题的核心不是“锁对象本身可变”，而是可能存在 “锁复用问题”。<br><br>但本身用不会产生复用的 Integer 和 String 对象作为锁理论上应该是没有问题，比如用 new Integer() 或者 new String() 在堆上创建新的对象，和创建一个 Object 实例是一样的。<br><br>有什么问题还请老师指正，谢谢！<br><br>参考：https:&#47;&#47;wiki.sei.cmu.edu&#47;confluence&#47;display&#47;java&#47;LCK01-J.+Do+not+synchronize+on+objects+that+may+be+reused","like_count":7},{"had_liked":false,"id":73491,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1551917500,"is_pvip":true,"replies":[{"id":"26868","content":"下一期会讲这个<br>","user_name":"作者回复","comment_id":73491,"uid":"1269969","ip_address":"","utype":1,"ctime":1551958041,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"31616688572","product_id":100023901,"comment_content":"思考题，我的答案是不行，因为对象可变，所以导致加锁对象不一样。<br><br>然后感觉加锁的所有用户用同一个锁的粒度太大了，但如果每次转账操作，是不是可以同时加两个用户的锁，如果有先后顺序又可能有死锁问题。","like_count":7,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442111,"discussion_content":"下一期会讲这个\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551958041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118613,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1090784,"ip_address":"","ucode":"563C4A71D80DA1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJwQvLGE4dMsF4JU0svW3DtGbodpjskbY65FdwF13JdtBYZfgL2IXHlHrdejWzHdjT0RibEIfib4QYA/132","comment_is_top":false,"comment_ctime":1564397310,"is_pvip":false,"replies":[{"id":"51087","content":"为了保证一定能读到最新的值","user_name":"作者回复","comment_id":118613,"uid":"1269969","ip_address":"","utype":1,"ctime":1568507375,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"27334201086","product_id":100023901,"comment_content":"老师，写的时候加锁能理解，读的时候为啥要加锁呢","like_count":6,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460484,"discussion_content":"为了保证一定能读到最新的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568507375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379100,"discussion_content":"读写需要互斥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623682693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73600,"user_name":"zyl","can_delete":false,"product_type":"c1","uid":1100717,"ip_address":"","ucode":"2F872341AC8D7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq65BWyJb39rq0Qgx1fnELVSZGGuLY6oBmYcmFj2Oqy9iauAWfbqO5U63I22Uo1POrrTp7tFWXibxvg/132","comment_is_top":false,"comment_ctime":1551936888,"is_pvip":false,"replies":[{"id":"27095","content":"我已经确认过了，是PPT","user_name":"作者回复","comment_id":73600,"uid":"1269969","ip_address":"","utype":1,"ctime":1552112928,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"27321740664","product_id":100023901,"comment_content":"请问这个画图软件是什么？谢谢","like_count":6,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442177,"discussion_content":"我已经确认过了，是PPT","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552112928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137511,"user_name":"245864982","can_delete":false,"product_type":"c1","uid":1238485,"ip_address":"","ucode":"AC47075A95B759","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/d5/680402fd.jpg","comment_is_top":false,"comment_ctime":1569756982,"is_pvip":false,"replies":[{"id":"52834","content":"因为我也曾经很菜😂","user_name":"作者回复","comment_id":137511,"uid":"1269969","ip_address":"","utype":1,"ctime":1569759180,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"18749626166","product_id":100023901,"comment_content":"评论区都是大神，我在看的时候就在想，为什么不直接锁余额和密码字段要另外加个对象来锁。看了评论才明白。还有锁了整个class对象性能不是很低。令老师深懂我这种菜鸟的疑惑啊。很好","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469129,"discussion_content":"因为我也曾经很菜😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569759180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73732,"user_name":"不靠谱的琴谱","can_delete":false,"product_type":"c1","uid":1243964,"ip_address":"","ucode":"D388EDFD6E5F8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/fb/3c/e92d40f6.jpg","comment_is_top":false,"comment_ctime":1551965337,"is_pvip":false,"replies":[{"id":"26922","content":"不是有效的，其他功能也可能用到这个锁","user_name":"作者回复","comment_id":73732,"uid":"1269969","ip_address":"","utype":1,"ctime":1551967333,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"18731834521","product_id":100023901,"comment_content":"之前评论可以忽略了一个因素，每次赋值都改变了这个对象。但是我有一个疑问 integer在-128~127之间  这个锁是不是有效的<br>","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442250,"discussion_content":"不是有效的，其他功能也可能用到这个锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551967333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73690,"user_name":"忠艾一生","can_delete":false,"product_type":"c1","uid":1445386,"ip_address":"","ucode":"DE8DF66F379054","user_header":"https://static001.geekbang.org/account/avatar/00/16/0e/0a/1564a5e1.jpg","comment_is_top":false,"comment_ctime":1551959459,"is_pvip":false,"replies":[{"id":"26904","content":"回答正确<br>","user_name":"作者回复","comment_id":73690,"uid":"1269969","ip_address":"","utype":1,"ctime":1551962001,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"18731828643","product_id":100023901,"comment_content":"这两把锁是会变的，所以无法保证互斥性。在第一个线程执行完之后，this.balance与this.password这两个对象锁都与第一个线程的对象锁是不一样的。 所以是不正确的。<br>","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442224,"discussion_content":"回答正确\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551962001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73538,"user_name":"王智","can_delete":false,"product_type":"c1","uid":1079657,"ip_address":"","ucode":"0335277F255F7A","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/69/5960a2af.jpg","comment_is_top":false,"comment_ctime":1551921725,"is_pvip":false,"replies":[{"id":"26887","content":"看留言让人进步👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551960011,"ip_address":"","comment_id":73538,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731790909","product_id":100023901,"comment_content":"本来我是觉得可行了,看了留言之后觉得不可行了.<br>使用 private final Object balLock = new Object();的目的就是保证在一个对象里面balLock是不可变的,所以使用private final修饰代表私有不可变,虽然Integer也是fianl类型,但是对外提供了修改的方法,也就是说在一个对象里面,这个是个变量,变量应该无法作为锁来出现吧,所以我觉那种方案不可行.<br><br>","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442142,"discussion_content":"看留言让人进步👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274560,"user_name":"有米","can_delete":false,"product_type":"c1","uid":1005042,"ip_address":"","ucode":"C9A10B7A67BC12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","comment_is_top":false,"comment_ctime":1611063285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14495965173","product_id":100023901,"comment_content":"本节所讲的都是基于一个大前提：单机服务。对于分布式服务哈哈哈哈😂","like_count":3},{"had_liked":false,"id":125127,"user_name":"糖小宝","can_delete":false,"product_type":"c1","uid":1386966,"ip_address":"","ucode":"15A8B649F668B1","user_header":"https://static001.geekbang.org/account/avatar/00/15/29/d6/6dafc576.jpg","comment_is_top":false,"comment_ctime":1566095154,"is_pvip":true,"replies":[{"id":"50598","content":"可以给上家推荐下专栏😄","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1568085457,"ip_address":"","comment_id":125127,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14450997042","product_id":100023901,"comment_content":"有种冲动，跑上家公司把我以前写的逻辑改了。。。<br>以前跟并发不熟TAT 谢谢老师开此专栏","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463448,"discussion_content":"可以给上家推荐下专栏😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568085457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90712,"user_name":"Andy Wooh","can_delete":false,"product_type":"c1","uid":1363028,"ip_address":"","ucode":"767243883F23B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/cc/54/f8cdc6b9.jpg","comment_is_top":false,"comment_ctime":1556614571,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"14441516459","product_id":100023901,"comment_content":"老师你好，我执行的代码会显示B账户的余额为200呢？很困惑啊.......<br>public class Account {<br>\tprivate String name;<br>\tprivate int balance;<br><br>\tpublic Account(String name, int balance) {<br>\t\tthis.name = name;<br>\t\tthis.balance = balance;<br>\t}<br><br>\tpublic static void main(String[] args) throws InterruptedException {<br>\t\tAccount a = new Account(&quot;A&quot;, 200);<br>\t\tAccount b = new Account(&quot;B&quot;, 200);<br>\t\tAccount c = new Account(&quot;C&quot;, 200);<br><br>\t\tThread t1 = new Thread(&quot;t1&quot;) {<br>\t\t\tpublic void run() {<br>\t\t\t\ta.transfer(b, 100);<br>\t\t\t}<br>\t\t};<br><br>\t\tThread t2 = new Thread(&quot;t2&quot;) {<br>\t\t\tpublic void run() {<br>\t\t\t\tb.transfer(c, 100);<br>\t\t\t}<br>\t\t};<br><br>\t\tt1.start();<br>\t\tt2.start();<br><br>\t\tt1.join();<br>\t\tt2.join();<br><br>\t\tSystem.out.println(&quot;a: &quot; + a.balance);<br>\t\tSystem.out.println(&quot;b: &quot; + b.balance);<br>\t\tSystem.out.println(&quot;c: &quot; + c.balance);<br>\t}<br><br>\tsynchronized void transfer(Account target, int amt) {<br>\t\tif (this.balance &gt; amt) {<br>\t\t\tthis.balance -= amt;<br>\t\t\ttarget.balance += amt;<br>\t\t}<br>\t}<br>}","like_count":3,"discussions":[{"author":{"id":1621470,"avatar":"https://static001.geekbang.org/account/avatar/00/18/bd/de/e0c994b3.jpg","nickname":"坐地铁的程序员","note":"","ucode":"A04A239D173E2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4351,"discussion_content":"我觉得是有可能出现200的情况的，比如第一个线程修改完刷新到主内存，但是这时候第二个线程才被调度执行，或者相反。我觉得老师说绝对不可能是200有点绝对了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565328956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448785,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1b/51/1056de45.jpg","nickname":"Alan","note":"","ucode":"6498DEA5C89209","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3414,"discussion_content":"你在外面套一个循环，每个账户100万，每次转1，循环100万次，就能看到效果。这个跟两个线程执行同一个i++,最后未必能达到预期。这个地方我也好奇了很久，从代码有问题，执行时候却没有；不过我当初是想验证这么个事，从业务上，应该被枷锁的是加钱与扣钱这两个操作，转账是另外第三方的调度操作，不需要加锁。另外，等待两个线程完成，最好用闭锁CountDownLatch。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564469349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1245468,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/1c/d638d46e.jpg","nickname":"宋世通","note":"","ucode":"C7AA3F0E6930F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1448785,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1b/51/1056de45.jpg","nickname":"Alan","note":"","ucode":"6498DEA5C89209","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383749,"discussion_content":"10000次出效果了，感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626231526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3414,"ip_address":""},"score":383749,"extra":""}]},{"author":{"id":1261067,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoOpsuDar7DPB3thBpGNbdAhFKHMYmbJYl6jxjzFvAOoG49mHyeoDCvfRHsxCZj5StTNqmFZqeFw/132","nickname":"lishuai","note":"","ucode":"39B57D71160A93","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382290,"discussion_content":"难道不是因为static 静态方法导致锁的时class吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625497663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083332,"avatar":"https://static001.geekbang.org/account/avatar/00/10/87/c4/50c8a490.jpg","nickname":"早起的鸟儿","note":"","ucode":"EDB4C51C379EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276694,"discussion_content":"当两个线程都执行到将账户b的值修改准备写入主内存的时候，如果发生线程切换，就会出现b账户最终余额不是200的情况，可以通过idea的debug工具主动进行线程切换来模拟复现这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590930588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1003104,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","nickname":"gogo","note":"","ucode":"E8F0F3B000020A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1083332,"avatar":"https://static001.geekbang.org/account/avatar/00/10/87/c4/50c8a490.jpg","nickname":"早起的鸟儿","note":"","ucode":"EDB4C51C379EE0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300257,"discussion_content":"请教下，线程切换怎么模拟这种情况呢？我切换之后执行完b的写入之后，切换回另一个线程，另一个线程堆栈栈帧里面的b也变了呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598000955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":276694,"ip_address":""},"score":300257,"extra":""}]}]},{"had_liked":false,"id":77012,"user_name":"苍茫大地","can_delete":false,"product_type":"c1","uid":1010515,"ip_address":"","ucode":"7EA9DF22931ABB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/53/a102d6a5.jpg","comment_is_top":false,"comment_ctime":1552804413,"is_pvip":false,"replies":[{"id":"28085","content":"实践中都是利用数据库来解决。这里只是作为例子说明锁的用法而已。<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552806116,"ip_address":"","comment_id":77012,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14437706301","product_id":100023901,"comment_content":"事例中的转账，实践中是直接操作数据库事务吗，数据库的行级锁更新操作也是互斥的吧，还是有更好的办法，在高并发情况下？","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443540,"discussion_content":"实践中都是利用数据库来解决。这里只是作为例子说明锁的用法而已。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552806116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73752,"user_name":"水如天","can_delete":false,"product_type":"c1","uid":1069822,"ip_address":"","ucode":"50AE29168947CD","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/fe/1241bc83.jpg","comment_is_top":false,"comment_ctime":1551970137,"is_pvip":false,"replies":[{"id":"26956","content":"osgi？","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552018562,"ip_address":"","comment_id":73752,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436872025","product_id":100023901,"comment_content":"以前碰到一个坑，线程上下文的类加载器改变了，导致前后加载的类不一致","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442260,"discussion_content":"osgi？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552018562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73717,"user_name":"水如天","can_delete":false,"product_type":"c1","uid":1069822,"ip_address":"","ucode":"50AE29168947CD","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/fe/1241bc83.jpg","comment_is_top":false,"comment_ctime":1551963302,"is_pvip":false,"replies":[{"id":"26921","content":"触发JVM重启了，否则不会中途改变的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551967220,"ip_address":"","comment_id":73717,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436865190","product_id":100023901,"comment_content":"类加载去器如果中途改变了，Account.class还可以吗","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442242,"discussion_content":"触发JVM重启了，否则不会中途改变的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551967220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73704,"user_name":"walkingonair","can_delete":false,"product_type":"c1","uid":1444748,"ip_address":"","ucode":"0C8BEE064ABF8B","user_header":"https://static001.geekbang.org/account/avatar/00/16/0b/8c/db1ee0a2.jpg","comment_is_top":false,"comment_ctime":1551961368,"is_pvip":false,"replies":[{"id":"26917","content":"下一期介绍优化","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551967130,"ip_address":"","comment_id":73704,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436863256","product_id":100023901,"comment_content":"使用Account.class获得锁有很明显的性能问题，而如何解决这个性能问题恰恰是我想知道的。我的一个想法是利用String对象的intern方法生成转账相关的字符串，利用这个字符串作为锁，这个方案不知道在实践中是否可行？<br>另外，狂战俄洛伊同学提出的锁两个对象的示例，我看着像是经典的死锁案例，因加锁顺序不一致导致的死锁，当A-&gt;B，A等待B的锁，而当B-&gt;A，B等待A的锁，产生死锁，不知理解的是否有问题，欢迎老师和各位同学指教。","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442234,"discussion_content":"下一期介绍优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551967130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73670,"user_name":"陈华","can_delete":false,"product_type":"c1","uid":1082730,"ip_address":"","ucode":"3AF9E8EB39E507","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKtS26SJpSF7JLu9pusGsy1Qln0NdQg1eV2YKOJxpX2QXaBuuyXMqZY3fm0rhzKwsqN5aa6CVNOQQ/132","comment_is_top":false,"comment_ctime":1551954256,"is_pvip":false,"replies":[{"id":"26900","content":"这个靠谱<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551961585,"ip_address":"","comment_id":73670,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14436856144","product_id":100023901,"comment_content":"真实代码，一般直接利用数据库的原子性来 做转账操作，","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442215,"discussion_content":"这个靠谱\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551961585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2573722,"avatar":"","nickname":"Geek_36e4bb","note":"","ucode":"90E84F8CC8A410","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370651,"discussion_content":"也就是事务呗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619493976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73647,"user_name":"狂战俄洛伊","can_delete":false,"product_type":"c1","uid":1213269,"ip_address":"","ucode":"F6EACA321E6180","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUzv6S9wroydkGP6m3OsQ8QuI4jAibv21tNkm7KVGPffJibj8Y29yIdKl4qkDGd3iaGJCSGVarfxoibQ/132","comment_is_top":false,"comment_ctime":1551947269,"is_pvip":false,"replies":[{"id":"26906","content":"转账里面sleep一段时间就有效果了<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551962300,"ip_address":"","comment_id":73647,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14436849157","product_id":100023901,"comment_content":"首先，对于文中的课后思考，这个问题肯定是不行的。<br>synchronized加锁的对象是根据地址来的，只要地址变了，锁也就变了。<br>当balance或者password发生变化的时候（地址变化），其他线程还是能获得锁，然后执行转账的操作。<br>所以这里加锁的对象一定要是地址不能变的资源，例如文中的Account.class这个对象地址就不会变化，所以可以用来作为锁。<br>但是问题来了，如果用Account.class作为加锁对象的话，那所有的转账功能将会是串行。实际上4个不同账户之间的转账是可以并行执行的，例如A给B转账，C给D转账，这两个动作是可以一起执行的。<br>为了解决这个问题，我对转账代码做了些调整，目的是为了让不同账户之间的转账可以并发运行。下面是我对转账改进后的代码：<br>\t  &#47;&#47; 转账<br>\t   void transfer( Account target, int amt){<br>\t\t   synchronized(this) {<br>\t\t\t   synchronized (target) {<br>\t\t\t\t    if (this.balance &gt; amt) {<br>\t\t\t\t\t      this.balance -= amt;<br>\t\t\t\t\t      target.balance += amt;<br>\t\t\t\t\t}<br>\t\t\t   }<br>\t\t   }<br>\t  } <br><br>首先这段代码是线程安全的。<br><br>但是我实际测试下来性能却反而不如直接对Account.class加锁高，请问老师这是为什么呢？","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442203,"discussion_content":"转账里面sleep一段时间就有效果了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551962300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1621470,"avatar":"https://static001.geekbang.org/account/avatar/00/18/bd/de/e0c994b3.jpg","nickname":"坐地铁的程序员","note":"","ucode":"A04A239D173E2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4319,"discussion_content":"你这容易死锁吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565314351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1437158,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ed/e6/75a32708.jpg","nickname":"日拱一兵","note":"","ucode":"D6386E5CD7C061","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1621470,"avatar":"https://static001.geekbang.org/account/avatar/00/18/bd/de/e0c994b3.jpg","nickname":"坐地铁的程序员","note":"","ucode":"A04A239D173E2A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13803,"discussion_content":"不能同一时间互转，如果互转的话要保证拿锁的顺序一致就可以了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568702077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4319,"ip_address":""},"score":13803,"extra":""}]}]},{"had_liked":false,"id":73527,"user_name":"落叶","can_delete":false,"product_type":"c1","uid":1116169,"ip_address":"","ucode":"E7D26B673C98E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/09/1504f5ca.jpg","comment_is_top":false,"comment_ctime":1551920777,"is_pvip":false,"replies":[{"id":"26861","content":"是的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551957741,"ip_address":"","comment_id":73527,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436822665","product_id":100023901,"comment_content":"思考题:受保护资源作为锁保护自己，跟没加锁一样。修改金额后，锁对象都变了，加锁不成功","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442133,"discussion_content":"是的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551957741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74195,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1552140360,"is_pvip":false,"replies":[{"id":"27139","content":"多把锁保护一个资源，起不到互斥作用，就可能同时取款，这样数据就被覆盖了。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552143383,"ip_address":"","comment_id":74195,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142074952","product_id":100023901,"comment_content":"老师，有个疑问，锁是为了保证在多个线程操作，每个线程的操作之前多能先读取到其余线程的操作结果，保证数据的一致性，防止数据被覆盖，但是为什么锁不能使用可变的对象作为锁，Integer和String都是不可变对象，操作都会生成新对象，但是这个会影响到多个线程对数据的操作结果么？比如取款，虽然取款完锁对象改变，但是在并发的时候，不管是其他线程在前一个线程取款前获取到的锁还是取款后获取到的锁，对数据都不会覆盖呀？老师帮忙解答下哦","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442491,"discussion_content":"多把锁保护一个资源，起不到互斥作用，就可能同时取款，这样数据就被覆盖了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552143383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74184,"user_name":"之外^Excepts","can_delete":false,"product_type":"c1","uid":1035331,"ip_address":"","ucode":"FD2284F65DB22F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/43/59a9b4ae.jpg","comment_is_top":false,"comment_ctime":1552136453,"is_pvip":false,"replies":[{"id":"27134","content":"更细粒度的锁，其实面临着更大的风险。下一期会讲更细粒度的锁。这一章的内容只是让大家学会用锁。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552143020,"ip_address":"","comment_id":74184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142071045","product_id":100023901,"comment_content":"其实想听到更细粒度的操作。就是A，B的转账操作不会锁住C，D间的转账操作，沙发回复也有提。比如concurrencyhashmap中的分段锁","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442487,"discussion_content":"更细粒度的锁，其实面临着更大的风险。下一期会讲更细粒度的锁。这一章的内容只是让大家学会用锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552143020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74135,"user_name":"zyl","can_delete":false,"product_type":"c1","uid":1100717,"ip_address":"","ucode":"2F872341AC8D7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq65BWyJb39rq0Qgx1fnELVSZGGuLY6oBmYcmFj2Oqy9iauAWfbqO5U63I22Uo1POrrTp7tFWXibxvg/132","comment_is_top":false,"comment_ctime":1552113100,"is_pvip":false,"replies":[{"id":"27123","content":"这个技能比并发编程难多了😀","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552137024,"ip_address":"","comment_id":74135,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142047692","product_id":100023901,"comment_content":"谢谢 看来要苦练ppt技术 才能画出漂亮的图纸😀","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442460,"discussion_content":"这个技能比并发编程难多了😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552137024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73546,"user_name":"Nevermore","can_delete":false,"product_type":"c1","uid":1228011,"ip_address":"","ucode":"06EBD2E6A9B436","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/eb/c22ef3a5.jpg","comment_is_top":false,"comment_ctime":1551923332,"is_pvip":false,"replies":[{"id":"26886","content":"密码的修改也锁不住","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551959961,"ip_address":"","comment_id":73546,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141857924","product_id":100023901,"comment_content":"Integer i = 6 --&gt;Integer i = 7 ，这个过程经历了引用重新指向的问题 ，就相当于new Integer(6) --&gt;  new Integer(7)，但是对于Integer和string ，jvm对他们都有优化处理，integer是-127-127内的数值都会放入缓存，而对于本例子的string也会放进常量池，我的理解是，假如A,B线程同时修改余额，当A修改余额成功之前，A,B线程看到的都是同一个余额，也就是同一个对象，当A修改成功后，改变了对象，原先的锁就不是原来的锁了，对于线程A来说，就相当于释放了锁，但是，当余额的范围超过了127之后，以上的逻辑就失效了。而密码的修改不会存在这个问题，能完全的锁住。<br><br>以上是我的理解，望老师指正！","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442147,"discussion_content":"密码的修改也锁不住","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73535,"user_name":"老斯基","can_delete":false,"product_type":"c1","uid":1073688,"ip_address":"","ucode":"036F482CAF7F3F","user_header":"","comment_is_top":false,"comment_ctime":1551921241,"is_pvip":false,"replies":[{"id":"26889","content":"是这样<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551960167,"ip_address":"","comment_id":73535,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141855833","product_id":100023901,"comment_content":"应该是不行的，如果一开始线程获得了锁，在临界区改变了balance或password的值，相当于锁对象发生了变化，此时的线程持有的还是旧锁，其它线程可以获取新的锁来操作，就会出现多个锁保护一种资源的情况。","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442140,"discussion_content":"是这样\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280854,"user_name":"发飙的蜗牛","can_delete":false,"product_type":"c1","uid":1800868,"ip_address":"","ucode":"B2D96A2D0B6BA4","user_header":"https://static001.geekbang.org/account/avatar/00/1b/7a/a4/79ffe77c.jpg","comment_is_top":false,"comment_ctime":1614423956,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5909391252","product_id":100023901,"comment_content":"public class Account {<br>    private int balance;<br><br>    public Account(int balance) {<br>        this.balance = balance;<br>    }<br><br>    public synchronized void transfer(Account target, int amt) {<br>        if (this.balance &gt; amt) {<br>            this.balance -= amt;<br>            target.setBalance(target.getBalance() + amt);<br>        }<br>    }<br><br>    public int getBalance() {<br>        return balance;<br>    }<br><br>    public void setBalance(int balance) {<br>        this.balance = balance;<br>    }<br><br>    public static void main(String[] args) throws InterruptedException {<br>        Account a = new Account(200);<br>        Account b = new Account(200);<br>        Account c = new Account(200);<br><br>        Thread t1 = new Thread(() -&gt; {<br>            try {<br>                Thread.currentThread().sleep(1000);<br>            } catch (InterruptedException e) {<br>                e.printStackTrace();<br>            }<br>            a.transfer(b, 100);<br>        }, &quot;t-1&quot;);<br><br>        Thread t2 = new Thread(() -&gt; {<br>            try {<br>                Thread.currentThread().sleep(1000);<br>            } catch (InterruptedException e) {<br>                e.printStackTrace();<br>            }<br>            b.transfer(c, 100);<br>        }, &quot;t-2&quot;);<br>        t1.start();<br>        t2.start();<br>        t1.join();<br>        t2.join();<br>        <br>        System.out.println(&quot;a: &quot; + a.getBalance() + &quot;, b:&quot; + b.getBalance() + &quot;, c:&quot; + c.getBalance());<br>    }<br>}<br>我用代码试了一下，但是最后结果都是对的：a: 100, b:200, c:300<br><br>请求老师，大家帮忙看看有没有问题，我用的是java11测试的","like_count":1,"discussions":[{"author":{"id":1245468,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/1c/d638d46e.jpg","nickname":"宋世通","note":"","ucode":"C7AA3F0E6930F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383750,"discussion_content":"这是我跑的结果\n第一次\n//        main a Account{balance=1}\n//        main b Account{balance=9380}\n//        main c Account{balance=20000}\n第二次\n//        main a Account{balance=1}\n//        main b Account{balance=9151}\n//        main c Account{balance=20000}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626231563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1245468,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/1c/d638d46e.jpg","nickname":"宋世通","note":"","ucode":"C7AA3F0E6930F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383748,"discussion_content":"看一下@Andy Wooh 的评论，账户余额改为10000，线程里循环10000次，每次转1块就看出效果了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626231374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204603,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1586427355,"is_pvip":false,"replies":[{"id":"76654","content":"可以这样改，不过账户在现实世界不是单例的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1586527740,"ip_address":"","comment_id":204603,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881394651","product_id":100023901,"comment_content":"思考题：改为互斥锁会有并发问题，我的理解是这样的，因为互斥锁锁的仅仅是当前this，如果多线程情况下，每个线程都会有自己的当前this，对于一个把锁保护不同的对象，当然是无意义的，老师看下我理解的正确么？<br><br><br>还有个疑问，<br>对于保护有关联关系的多个资源的例子,改为这样是不是会更好呢？<br><br><br>class Account {<br>  private static int balance;<br>  &#47;&#47; 转账<br>  static synchronized void transfer(<br>      Account target, int amt){<br>    if (this.balance &gt; amt) {<br>      this.balance -= amt;<br>      target.balance += amt;<br>    }<br>  } <br>}<br><br>sy互斥锁在静态方法上锁的是类.class<br>sy互斥锁在普通方法上锁的是当前this<br><br>这样我能直接把改成静态方法么? 不就直接共享所有对象了<br><br>老师，这样是正确的么？ 还望指导下","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491229,"discussion_content":"可以这样改，不过账户在现实世界不是单例的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586527740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186873,"user_name":"王涛","can_delete":false,"product_type":"c1","uid":1556838,"ip_address":"","ucode":"0A9ACC370F112D","user_header":"https://static001.geekbang.org/account/avatar/00/17/c1/66/e8dfeef4.jpg","comment_is_top":false,"comment_ctime":1583942137,"is_pvip":false,"replies":[{"id":"72702","content":"感谢关注，理论模型基本是相通的，但是每种语言在实现上都会有所取舍，这方面的总结貌似不多。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1584357299,"ip_address":"","comment_id":186873,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5878909433","product_id":100023901,"comment_content":"@作者<br>我是一个 python 程序员，看了几章后，对于课程质量、深度绝对是肯定的。可以说业内少有。<br>对于处理问题思路，理论模型的设计。这些都是跨语言的。这也是我学习专栏的原因之一。<br><br>但，我现在有个疑惑。<br>对于专栏中给出的 java 语法实现，及其他 java 语言层面的解决方案。如何能较好的、较快的借鉴到其他语言中，并了解到在其他语言中对应的理论模型的设计（如 python）。<br><br>感觉，这个问题应该是大部份人共同的疑惑。  请 @作者， 各位大神， 赐教！！！","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486900,"discussion_content":"感谢关注，理论模型基本是相通的，但是每种语言在实现上都会有所取舍，这方面的总结貌似不多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584357299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1556838,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c1/66/e8dfeef4.jpg","nickname":"王涛","note":"","ucode":"0A9ACC370F112D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202976,"discussion_content":"请有同感的同学，点赞！！！ 把这条留言置前。让更多人看到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583978293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172938,"user_name":"X中倪","can_delete":false,"product_type":"c1","uid":1418862,"ip_address":"","ucode":"F28FAFF2FEDD1A","user_header":"https://static001.geekbang.org/account/avatar/00/15/a6/6e/21907ff9.jpg","comment_is_top":false,"comment_ctime":1579362755,"is_pvip":false,"replies":[{"id":"67115","content":"当你深入到这个层次，就可以看看synchronized的实现了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1579437892,"ip_address":"","comment_id":172938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5874330051","product_id":100023901,"comment_content":"最后的疑问 引出一个观点。如何使加了synchronized 的锁失效？<br>第一点：不要改变加锁对象的引用。也就是下面的师兄回答的 【不可对可变对象加锁】，原因是，一旦值发生变化后 不是同一把锁。<br>第二点：对一个对象加锁，修改其对象当中的属性，【不会使其失效】。<br>class Account{<br> private String name ;<br> private  int age ;<br>}<br>class consumer{<br>private Account accont = new Account();<br> synchronized(accont) updateAccount(){<br>   account.setName(&quot;AA&quot;);<br>   account.setAge(10);<br>}<br>}<br>这种情况 account 的锁 不会失效","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481907,"discussion_content":"当你深入到这个层次，就可以看看synchronized的实现了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579437892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113757,"user_name":"小之","can_delete":false,"product_type":"c1","uid":1130820,"ip_address":"","ucode":"B97E6CABC85AFF","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/44/bc8bc7cf.jpg","comment_is_top":false,"comment_ctime":1563152207,"is_pvip":false,"replies":[{"id":"53904","content":"你说的对👍","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1570710082,"ip_address":"","comment_id":113757,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5858119503","product_id":100023901,"comment_content":"老师你好，看了您的文章，感觉受益匪浅<br><br>这里有一个问题，就是这段代码<br><br>class Account {<br>  private int balance;<br>  &#47;&#47; 转账<br>  void transfer(Account target, int amt){<br>    synchronized(Account.class) {<br>      if (this.balance &gt; amt) {<br>        this.balance -= amt;<br>        target.balance += amt;<br>      }<br>    }<br>  } <br>}<br><br>生产中如果用类锁的话，会产生性能问题吧？  比如A和B转账其实中影响A、B，如果同时C和D要进行转账就阻塞住了，所以如果要性能好的话，最好是抽象出一个锁只锁住A、B吧？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458371,"discussion_content":"你说的对👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570710082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85847,"user_name":"乐凡","can_delete":false,"product_type":"c1","uid":1239260,"ip_address":"","ucode":"918C9997EB6537","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/dc/32e78f02.jpg","comment_is_top":false,"comment_ctime":1555256387,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850223683","product_id":100023901,"comment_content":"this.balance和this.password都是可变的，这样锁就会失效了，解决原子性问题，就是保证中间状态对外不可见，这句话记牢","like_count":1},{"had_liked":false,"id":82114,"user_name":"若星","can_delete":false,"product_type":"c1","uid":1247442,"ip_address":"","ucode":"D92DC0D777724E","user_header":"https://static001.geekbang.org/account/avatar/00/13/08/d2/83bdc5dd.jpg","comment_is_top":false,"comment_ctime":1554122379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5849089675","product_id":100023901,"comment_content":"讲的特别好，评论区也很精彩。就是自己资质尚浅，引出来很多好奇心，很难受<br>1、锁是什么，怎么实现的？(不只是使用...)<br>2、怎么控制临界区？<br>3、为什么对象变了，会new出来新的锁？<br>......","like_count":1},{"had_liked":false,"id":73965,"user_name":"花蛋壳","can_delete":false,"product_type":"c1","uid":1111006,"ip_address":"","ucode":"917BB219120BD2","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/de/c6509355.jpg","comment_is_top":false,"comment_ctime":1552047848,"is_pvip":false,"replies":[{"id":"27015","content":"不同对象也没关系，每个对象都有自己的锁。管好自家就可以了。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552059346,"ip_address":"","comment_id":73965,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847015144","product_id":100023901,"comment_content":"老师，我有一个疑问，在多线程当中，如果Account是不同的对象，那么对于final类型的锁对象不也失效了吗？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442362,"discussion_content":"不同对象也没关系，每个对象都有自己的锁。管好自家就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552059346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73533,"user_name":"魏春河","can_delete":false,"product_type":"c1","uid":1117048,"ip_address":"","ucode":"DDD2998C157639","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/78/22410c47.jpg","comment_is_top":false,"comment_ctime":1551921063,"is_pvip":false,"replies":[{"id":"26852","content":"下一期讲优化<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551956877,"ip_address":"","comment_id":73533,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5846888359","product_id":100023901,"comment_content":"感觉转账这个所有对象共享Account.class是不太合适的，锁粒度太大了。<br>所有的转账都串行化了，即A转B和C转D也不能并行了。<br><br>应该每个用户的所有账户对象使用同一把锁。即所有A账号的对象使用同一把锁，所有B账号的对象使用同一把锁，这两个锁是不一样的。这样A转B的时候锁定A和B的锁，而与CD的锁都不冲突，可以并行。<br><br>这个锁可以使用根据静态属性保存锁。如果多节点可以使用redis等实现的分布式锁。","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442138,"discussion_content":"下一期讲优化\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551956877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73507,"user_name":"冰激凌的眼泪","can_delete":false,"product_type":"c1","uid":1087945,"ip_address":"","ucode":"5DCB974667E93A","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/c9/a7c77746.jpg","comment_is_top":false,"comment_ctime":1551918864,"is_pvip":false,"replies":[{"id":"26893","content":"分析的很全面👍<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551960361,"ip_address":"","comment_id":73507,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846886160","product_id":100023901,"comment_content":"string一旦修改，就成了其他的对象，可能无效吧。<br>小整数是不是有个缓存问题，导致要么被共享锁粒度过大，要么被换成其他对象导致失效。","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442119,"discussion_content":"分析的很全面👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73486,"user_name":"王昊","can_delete":false,"product_type":"c1","uid":1218388,"ip_address":"","ucode":"A3E6D9EB03ED21","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/54/54dccfa7.jpg","comment_is_top":false,"comment_ctime":1551916768,"is_pvip":false,"replies":[{"id":"26859","content":"下一期会接着讲这个<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551957222,"ip_address":"","comment_id":73486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846884064","product_id":100023901,"comment_content":"账户转账这个是一个特别好的例子，但感觉老师讲的不透彻。锁Account.class性能太差了，细粒度锁又可能死锁，这块希望能好好讲讲","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442108,"discussion_content":"下一期会接着讲这个\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551957222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358961,"user_name":"自在飞","can_delete":false,"product_type":"c1","uid":1167825,"ip_address":"北京","ucode":"A2712148DA06E0","user_header":"https://static001.geekbang.org/account/avatar/00/11/d1/d1/62f74aa7.jpg","comment_is_top":false,"comment_ctime":1665071517,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665071517","product_id":100023901,"comment_content":"老师，您好，以下是我的理解，不知道对不对哈：<br><br>1：读读没问题，如果碰到读写和写写操作的话，就会出现读或者另一个写线程一直被阻塞。<br>2：对于另一个写操作的线程，由于它进入临界区的时候是通过【A】这把锁进来的，但是退出临界区时是却要通过【B】这把锁退出，不是通过同一把锁进行的加锁和解锁操作，感觉会报异常。","like_count":0},{"had_liked":false,"id":356918,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1476245,"ip_address":"重庆","ucode":"2668A965FA79F2","user_header":"https://static001.geekbang.org/account/avatar/00/16/86/95/b9d960d9.jpg","comment_is_top":false,"comment_ctime":1662703116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662703116","product_id":100023901,"comment_content":"使用可变对象当作锁，不得行","like_count":0},{"had_liked":false,"id":350721,"user_name":"Geek1875","can_delete":false,"product_type":"c1","uid":2961331,"ip_address":"","ucode":"6F3026EE3FA012","user_header":"","comment_is_top":false,"comment_ctime":1657117841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657117841","product_id":100023901,"comment_content":"我们也可以用一把互斥锁来保护多个资源，例如我们可以用 this 这一把锁来管理账户类里所有的资源：账户余额和用户密码。具体实现很简单，示例程序中所有的方法都增加同步关键字 synchronized 就可以了，这里我就不一一展示了。<br>这不就跟课后思考题冲突了吗？","like_count":0},{"had_liked":false,"id":348820,"user_name":"zou","can_delete":false,"product_type":"c1","uid":1696149,"ip_address":"","ucode":"724C1A0028AC1C","user_header":"https://static001.geekbang.org/account/avatar/00/19/e1/95/26c00636.jpg","comment_is_top":false,"comment_ctime":1655436723,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655436723","product_id":100023901,"comment_content":"有个疑问求解答，给Account类加锁，两台机器部署同一套代码，请求随机打到两台机器，按我理解两个机器上的Account类是不同的？这时各类加锁还有效吗，是否存在并发问题？","like_count":0},{"had_liked":false,"id":344202,"user_name":"xiaochao321","can_delete":false,"product_type":"c1","uid":1083596,"ip_address":"","ucode":"8F5AC46CD9400C","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/cc/11b10a6f.jpg","comment_is_top":false,"comment_ctime":1651369790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651369790","product_id":100023901,"comment_content":"原子性问题涉及到多个资源一致性问题，操作的中间状态对外不可见，银行转账问题就是一个很好的示例","like_count":0},{"had_liked":false,"id":344201,"user_name":"xiaochao321","can_delete":false,"product_type":"c1","uid":1083596,"ip_address":"","ucode":"8F5AC46CD9400C","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/cc/11b10a6f.jpg","comment_is_top":false,"comment_ctime":1651369528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651369528","product_id":100023901,"comment_content":"可变对象不可以做为锁","like_count":0},{"had_liked":false,"id":343863,"user_name":"郝然","can_delete":false,"product_type":"c1","uid":2923312,"ip_address":"","ucode":"B8C564DA7DB1CB","user_header":"","comment_is_top":false,"comment_ctime":1651104664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651104664","product_id":100023901,"comment_content":"思考题:用传递锁的思路可以实现吧，this.balance再锁this.password。再修改密码里，先锁this.password，再锁this.balance都成功了，再进行该方法操作。这样就行吧","like_count":0},{"had_liked":false,"id":330620,"user_name":"天斓海琼","can_delete":false,"product_type":"c1","uid":1488931,"ip_address":"","ucode":"0BD579B063C72C","user_header":"https://static001.geekbang.org/account/avatar/00/16/b8/23/85c7911c.jpg","comment_is_top":false,"comment_ctime":1642072688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642072688","product_id":100023901,"comment_content":"老师用文章中的示例账户B最终是200啊，是哪里出现问题了吗？请指教<br>public class Account {<br>    private int balance;<br>    public Account(int balance) {<br>        this.balance = balance;<br>    }<br><br>    public int getBalance() {<br>        return balance;<br>    }<br><br>    public void setBalance(int balance) {<br>        this.balance = balance;<br>    }<br><br><br>    &#47;&#47; 转账<br>    public void transfer(<br>            Account target, int amt){<br>        if (this.balance &gt; amt) {<br>            this.balance -= amt;<br>            target.balance += amt;<br>        }<br>    }<br><br>    public static void main(String[] args) {<br>        Account a = new Account(200);<br>        Account b = new Account(200);<br>        Account c = new Account(200);<br><br>        Thread t1 = new Thread(() -&gt; {<br>            a.transfer(b, 100);<br>        });<br>        Thread t2 = new Thread(() -&gt; {<br>            b.transfer(c, 100);<br>        });<br>        t2.start();<br>        t1.start();<br>        try {<br>            t1.join();<br>        } catch (InterruptedException e) {<br>            e.printStackTrace();<br>        }<br>        try {<br>            t2.join();<br>        } catch (InterruptedException e) {<br>            e.printStackTrace();<br>        }<br>        System.out.println(&quot;a账户:&quot; + a.getBalance());<br>        System.out.println(&quot;b账户:&quot; + b.getBalance());<br>        System.out.println(&quot;c账户:&quot; + c.getBalance());<br><br>    }<br>}","like_count":0},{"had_liked":false,"id":330024,"user_name":"Geek_161af7","can_delete":false,"product_type":"c1","uid":2834804,"ip_address":"","ucode":"EF9B2C0B359855","user_header":"","comment_is_top":false,"comment_ctime":1641737412,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641737412","product_id":100023901,"comment_content":"java的八种基本类型的包装类型，外加String类型，是否都不能作为锁对象","like_count":0},{"had_liked":false,"id":314990,"user_name":"官宝儿","can_delete":false,"product_type":"c1","uid":2110827,"ip_address":"","ucode":"03B4312475A984","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI5eicXFWltiaF9ibsEh2nNC80OYoHibhhE0X1hPHZ5KuAtY4Yxp5dQ4LsciaDxUHFBPlJM7kgQwkspzsQ/132","comment_is_top":false,"comment_ctime":1633639395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633639395","product_id":100023901,"comment_content":"Integer 和 string对象发生变化，锁也会变，所以不构成互斥 和上一篇最后的问题一样的","like_count":0},{"had_liked":false,"id":309950,"user_name":"到道可道","can_delete":false,"product_type":"c1","uid":1031181,"ip_address":"","ucode":"12B94B6C26BE0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/0d/00424e81.jpg","comment_is_top":false,"comment_ctime":1630403801,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1630403801","product_id":100023901,"comment_content":"balance和password都是不可变对象，一旦值发生改变，实际上就是另一个对象了，所以不可以这么使用","like_count":0},{"had_liked":false,"id":309016,"user_name":"亮子","can_delete":false,"product_type":"c1","uid":1441569,"ip_address":"","ucode":"DF37D5E0714D02","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/21/8815d2e5.jpg","comment_is_top":false,"comment_ctime":1629892837,"is_pvip":false,"replies":[{"id":"112064","content":"取钱也必须像转账一样，先锁住lock，否则就是不安全的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1630131276,"ip_address":"","comment_id":309016,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629892837","product_id":100023901,"comment_content":"<br>class Account {<br>  private Object lock；<br>  private int balance;<br>  private Account();<br>  &#47;&#47; 创建Account时传入同一个lock对象<br>  public Account(Object lock) {<br>    this.lock = lock;<br>  } <br>  &#47;&#47; 转账<br>  void transfer(Account target, int amt){<br>    &#47;&#47; 此处检查所有对象共享的锁<br>    synchronized(lock) {<br>      if (this.balance &gt; amt) {<br>        this.balance -= amt;<br>        target.balance += amt;<br>      }<br>    }<br>  }<br>}<br>老师，我在看到这段代码，没能理解，这个target是没被锁住的，如果target账户有取钱的操作，是不是就变成不安全的了？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525715,"discussion_content":"取钱也必须像转账一样，先锁住lock，否则就是不安全的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630131276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306633,"user_name":"吴里斯蒂亚诺.翀纳尔多","can_delete":false,"product_type":"c1","uid":1800243,"ip_address":"","ucode":"8DB9EC2AC456E2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/78/33/4a91bf3d.jpg","comment_is_top":false,"comment_ctime":1628652175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628652175","product_id":100023901,"comment_content":"关键是Integer内部是享元模式，其实-127—128的值的区间是一个共享变量，如果用了做锁，那真的是太糟糕了。","like_count":0},{"had_liked":false,"id":299613,"user_name":"机车","can_delete":false,"product_type":"c1","uid":1881786,"ip_address":"","ucode":"CD32A645AE310A","user_header":"https://static001.geekbang.org/account/avatar/00/1c/b6/ba/f76d996b.jpg","comment_is_top":false,"comment_ctime":1624762700,"is_pvip":false,"replies":[{"id":"108798","content":"我觉得是可以的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1624966888,"ip_address":"","comment_id":299613,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1624762700","product_id":100023901,"comment_content":"转账的示例中，把存款和取款操作封装成方法，方法内部对余额的访问是加锁的。<br>转账的时候直接调用相关方法，这样可以吗","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522485,"discussion_content":"我觉得是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624966888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1881786,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/b6/ba/f76d996b.jpg","nickname":"机车","note":"","ucode":"CD32A645AE310A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381161,"discussion_content":"不行，会有死锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624934065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298860,"user_name":"X中倪","can_delete":false,"product_type":"c1","uid":1418862,"ip_address":"","ucode":"F28FAFF2FEDD1A","user_header":"https://static001.geekbang.org/account/avatar/00/15/a6/6e/21907ff9.jpg","comment_is_top":false,"comment_ctime":1624347332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624347332","product_id":100023901,"comment_content":"说一个 偷鸡的点。针对当前案例来说。<br>class Account {<br>  private int balance;<br>  &#47;&#47; 转账<br>  synchronized void transfer(<br>      Account target, int amt){<br>    if (this.balance &gt; amt) {<br>      this.balance -= amt;<br>      target.balance += amt;<br>    }<br>  } <br>}<br>我们是否 可以将 balance。变量 设置为volatile的。 volatile 特性 两个点 一个是禁止 缓存 ，另外一个是禁止指令重排。 <br><br>原文的balance 这个 变量是在线程内存中的修改的。在CPU 写回的时候 发生了指令覆盖。导致 “总金额 ”有100的偏差。<br><br><br><br>属性设置为volatile ，所有的修改都是直接写回主存的。上述代码 简而言之  还需要解决可见性问题。<br><br>后面的锁了一个Account.class   是否可等价于 就是 static synchronized<br><br>","like_count":0},{"had_liked":false,"id":298250,"user_name":"望蜀","can_delete":false,"product_type":"c1","uid":1229000,"ip_address":"","ucode":"8A379805FDA9F9","user_header":"https://static001.geekbang.org/account/avatar/00/12/c0/c8/982b36aa.jpg","comment_is_top":false,"comment_ctime":1623981699,"is_pvip":false,"replies":[{"id":"108409","content":"可以试试jcstress","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1624363998,"ip_address":"","comment_id":298250,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623981699","product_id":100023901,"comment_content":"请问老师，初学者如何进行测试啊，如果我在Main方法和使用Junit测试都存在主线程先一步跑完问题","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522074,"discussion_content":"可以试试jcstress","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624363998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294566,"user_name":"金鑫","can_delete":false,"product_type":"c1","uid":1116257,"ip_address":"","ucode":"8AA30E8DD736FB","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/61/9e0f8b8d.jpg","comment_is_top":false,"comment_ctime":1622001028,"is_pvip":false,"replies":[{"id":"106977","content":"不同账户取款，互不影响，没有共享变量就没有并发问题","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1622069509,"ip_address":"","comment_id":294566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1622001028","product_id":100023901,"comment_content":"请教老师，第一个例子<br>&#47;&#47; 取款 void withdraw(Integer amt) { synchronized(balLock) { if (this.balance &gt; amt){ this.balance -= amt; } } }<br><br>多线程场景下，balLock对象也是多个，是不是也存在线程安全问题？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520718,"discussion_content":"不同账户取款，互不影响，没有共享变量就没有并发问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622069509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292540,"user_name":"灰飞灰猪不会灰飞.烟灭","can_delete":false,"product_type":"c1","uid":1127314,"ip_address":"","ucode":"FF9FB4C902D1F5","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/92/99530cee.jpg","comment_is_top":false,"comment_ctime":1620873967,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620873967","product_id":100023901,"comment_content":"简单总结 方法只要有参数（final除外）都会有这个问题 是吧？","like_count":0},{"had_liked":false,"id":291513,"user_name":"Geek_8b6021","can_delete":false,"product_type":"c1","uid":1815212,"ip_address":"","ucode":"2EBCA91FFA1BD2","user_header":"","comment_is_top":false,"comment_ctime":1620319575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620319575","product_id":100023901,"comment_content":"老师，我有一点点疑惑。就在使用锁的正确姿势的上面一个例子里。<br>就是假设线程2先执行，也就是说锁住了B.this。<br>线程1之后执行，他传入的参数是B的对象，那么此时他需要进行的操作不就是对B.this.balance的值进行修改嘛。此时是不是就能够保证一定的互斥性了。<br>","like_count":0},{"had_liked":false,"id":289540,"user_name":"S","can_delete":false,"product_type":"c1","uid":1462581,"ip_address":"","ucode":"39347118730A85","user_header":"https://static001.geekbang.org/account/avatar/00/16/51/35/7f81faa9.jpg","comment_is_top":false,"comment_ctime":1619071947,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1619071947","product_id":100023901,"comment_content":"请问老师这句话应该怎么理解：<br>this 这把锁可以保护自己的余额 this.balance，却保护不了别人的余额 target.balance<br>谢谢","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379103,"discussion_content":"this.balance线程a的锁，target.balance是线程b的锁，this.balance锁不住线程b的资源，target是另外一个account对象，跟this代表的对象不一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623684873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287320,"user_name":"cleverxiao","can_delete":false,"product_type":"c1","uid":1589955,"ip_address":"","ucode":"29101C5034C4FE","user_header":"https://static001.geekbang.org/account/avatar/00/18/42/c3/921a9e0e.jpg","comment_is_top":false,"comment_ctime":1617881716,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617881716","product_id":100023901,"comment_content":"请问老师，如果定义一个私有的final对象，用synchronized锁住，锁住的是this还是class？","like_count":0},{"had_liked":false,"id":287268,"user_name":"RoccoLee","can_delete":false,"product_type":"c1","uid":2508667,"ip_address":"","ucode":"C55AD67FF8C2D7","user_header":"https://static001.geekbang.org/account/avatar/00/26/47/7b/c5ec018c.jpg","comment_is_top":false,"comment_ctime":1617863630,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1617863630","product_id":100023901,"comment_content":"课后思考：不可以使用blance和password作为互斥锁，这两个变量可能会被修改了，修改前后就是不同的锁，不同的锁保护同一个资源，会引发问题","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379104,"discussion_content":"是的，临界区修改了之后，锁不一样了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623684934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286474,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1617334201,"is_pvip":false,"replies":[{"id":"104076","content":"是这样的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1617368226,"ip_address":"","comment_id":286474,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1617334201","product_id":100023901,"comment_content":"在第三章的评论中，大神说：加锁本质就是在锁对象的对象头中写入当前线程id，但是new object每次在内存中都是新对象，所以加锁无效。<br>同样适用这边，this.balance每次都指向新的值，所以不能成为锁对象。<br><br>还有个问题：目前的这种锁都是单体架构下，如果应用集群部署，那么其实这些是不是都不用写，直接用分布式锁来实现？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517998,"discussion_content":"是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617368226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285269,"user_name":"开坦克的贝塔","can_delete":false,"product_type":"c1","uid":1400908,"ip_address":"","ucode":"A0C220A02115E9","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/4c/f2f1cf73.jpg","comment_is_top":false,"comment_ctime":1616719251,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616719251","product_id":100023901,"comment_content":"解决原子性问题，是要保证中间状态对外不见","like_count":0},{"had_liked":false,"id":282225,"user_name":"zhunode","can_delete":false,"product_type":"c1","uid":1214421,"ip_address":"","ucode":"D60B6B28C5336C","user_header":"https://static001.geekbang.org/account/avatar/00/12/87/d5/4a6c6890.jpg","comment_is_top":false,"comment_ctime":1615164889,"is_pvip":false,"replies":[{"id":"102518","content":"正确，尤其是资源没有被其他线程操作，这个很重要","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1615204900,"ip_address":"","comment_id":282225,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615164889","product_id":100023901,"comment_content":"王老师好，以下是我对原子性新的理解，不知道是否正确。原子性，指的是CPU的一条或多条指令不被中断的特性。或者更准确的说，原子性指的是对当前资源的操作没有被分割，虽然线程可能会被CPU中断，但后续又调度该线程时又能够衔接上次继续操作资源，且该资源没有被其他线程操作。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516671,"discussion_content":"正确，尤其是资源没有被其他线程操作，这个很重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615204900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277016,"user_name":"成电帅才","can_delete":false,"product_type":"c1","uid":2139604,"ip_address":"","ucode":"DDE757138F41D2","user_header":"","comment_is_top":false,"comment_ctime":1612233114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612233114","product_id":100023901,"comment_content":"锁要求不可变，可变对象不能作为锁","like_count":0},{"had_liked":false,"id":271120,"user_name":"vcjmhg","can_delete":false,"product_type":"c1","uid":1526461,"ip_address":"","ucode":"B508D1E9B3F974","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/j24oyxHcpB5AMR9pMO6fITqnOFVOncnk2T1vdu1rYLfq1cN6Sj7xVrBVbCvHXUad2MpfyBcE4neBguxmjIxyiaQ/132","comment_is_top":false,"comment_ctime":1609403840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609403840","product_id":100023901,"comment_content":"思考题：<br>不可行，原因：无论是balance还是password整个过程中都可能会变化，因而并发问题仍然可能存在。","like_count":0},{"had_liked":false,"id":268058,"user_name":"Geek_6c9676","can_delete":false,"product_type":"c1","uid":1798911,"ip_address":"","ucode":"487A2EE4E1B3DF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJ8gE319NjpIZ5qwDzNwhQsbQfTLwPV6ibMzrc4kiaATmoOYjslicn28iay12iczxRbSViaiahv4kRPNsHoA/132","comment_is_top":false,"comment_ctime":1608040939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608040939","product_id":100023901,"comment_content":"我有问题，思考题中的这两个锁为啥会变化，指向的对象不是没变么，内容发生改变的话就是变化了？","like_count":0},{"had_liked":false,"id":267689,"user_name":"马文龙","can_delete":false,"product_type":"c1","uid":1068432,"ip_address":"","ucode":"679B0F0AB402C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/90/25b6f544.jpg","comment_is_top":false,"comment_ctime":1607873422,"is_pvip":true,"replies":[{"id":"97268","content":"不可以，不能跨进程","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1607943929,"ip_address":"","comment_id":267689,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1607873422","product_id":100023901,"comment_content":"上面的用Account.class 作为共享的锁的方法要是在集群的环境或分布式环境下还可以吗，老师？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511714,"discussion_content":"不可以，不能跨进程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607943929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379105,"discussion_content":"类锁和对象锁只能在单机下使用，只在当前jvm下起作用，多个jvm需要用分布式锁解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623685176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264127,"user_name":"Monster!","can_delete":false,"product_type":"c1","uid":1179101,"ip_address":"","ucode":"74F1D3BB5E3915","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/dd/baeda83e.jpg","comment_is_top":false,"comment_ctime":1606357910,"is_pvip":false,"replies":[{"id":"95876","content":"不起作用，需要分布式锁","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1606470500,"ip_address":"","comment_id":264127,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606357910","product_id":100023901,"comment_content":"请问老师，如果一个java应用部署了多个实例，有一个方法被大量请求访问，此时用synchronized是不是就不起作用了？要用分布式锁吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510432,"discussion_content":"不起作用，需要分布式锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606470500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263309,"user_name":"Geek4329","can_delete":false,"product_type":"c1","uid":2028951,"ip_address":"","ucode":"D6FB8D1B2D5DAC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/97/9a7ee7b3.jpg","comment_is_top":false,"comment_ctime":1606098472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606098472","product_id":100023901,"comment_content":"老师，转账这块能否这么实现，先锁a账户，再锁b账户，之后转账：<br>synchronized void transfer( Account target, int amt){<br>        if (this.balance &gt; amt) {<br>            synchronized (target) {<br>                this.balance -= amt;<br>                target.balance += amt;<br>            }<br>        }","like_count":0},{"had_liked":false,"id":253883,"user_name":"李孟","can_delete":false,"product_type":"c1","uid":1006768,"ip_address":"","ucode":"AD2349CB12F130","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/b0/77e5f8c8.jpg","comment_is_top":false,"comment_ctime":1602931495,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1602931495","product_id":100023901,"comment_content":"@Data<br>public class AccountClassLock2 {<br>    private int balance;<br><br>    public AccountClassLock2( int balance) {<br>        this.balance = balance;<br>    }<br><br>    &#47;&#47;转账（class级别的锁，不存在并发问题）<br>    void transfer(AccountClassLock2 target, int amt) {<br>        synchronized (AccountClassLock2.class){<br>            if (this.balance &gt; amt) {<br>                this.balance -= amt;<br>                target.balance += amt;<br>            }<br>        }<br>    }<br><br>    public static void main(String[] args) throws InterruptedException {<br>        AccountClassLock2 a = new AccountClassLock2(200);<br>        AccountClassLock2 b = new AccountClassLock2(200);<br>        AccountClassLock2 c = new AccountClassLock2(200);<br><br><br>        Thread t1 = new Thread(()-&gt;{<br>            a.transfer(b,100);<br>        });<br><br><br>        Thread t2 = new Thread(()-&gt;{<br>            b.transfer(c,100);<br>        });<br><br>        t1.start();<br>        t2.start();<br>        t2.join();<br><br>        System.out.println(a.getBalance());<br>        System.out.println(b.getBalance());<br>        System.out.println(c.getBalance());<br>    }<br><br>}","like_count":0},{"had_liked":false,"id":253880,"user_name":"李孟","can_delete":false,"product_type":"c1","uid":1006768,"ip_address":"","ucode":"AD2349CB12F130","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/b0/77e5f8c8.jpg","comment_is_top":false,"comment_ctime":1602929552,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1602929552","product_id":100023901,"comment_content":"&#47;&#47;全局锁示例<br>public class AccountClassLock2 {<br>    private int balance;<br><br>    public AccountClassLock2( int balance) {<br>        this.balance = balance;<br>    }<br><br>    &#47;&#47;转账（class级别的锁，不存在并发问题）<br>    void transfer(AccountClassLock2 target, int amt) {<br>        synchronized (AccountClassLock2.class){<br>            if (this.balance &gt; amt) {<br>                this.balance -= amt;<br>                target.balance += amt;<br>            }<br>        }<br>    }<br>}<br>public class AccountClassLockMain {<br>    public static void main(String[] args) throws InterruptedException {<br>        AccountClassLock2 a = new AccountClassLock2(200);<br>        AccountClassLock2 b = new AccountClassLock2(200);<br>        AccountClassLock2 c = new AccountClassLock2(200);<br><br><br>        Thread t1 = new Thread(()-&gt;{<br>            a.transfer(b,100);<br>        });<br>        t1.start();<br><br>        Thread t2 = new Thread(()-&gt;{<br>            b.transfer(c,100);<br>        });<br>        t2.start();<br><br>        System.out.println(a.getBalance());<br>        System.out.println(b.getBalance());<br>        System.out.println(c.getBalance());<br>    }<br>}<br><br>","like_count":0},{"had_liked":false,"id":245865,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1460221,"ip_address":"","ucode":"F8E52DDD7D48CB","user_header":"https://static001.geekbang.org/account/avatar/00/16/47/fd/685bff81.jpg","comment_is_top":false,"comment_ctime":1599097719,"is_pvip":false,"replies":[{"id":"90432","content":"balance,balance1,balance2这三者是什么关系？😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1599175842,"ip_address":"","comment_id":245865,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1599097719","product_id":100023901,"comment_content":"锁的具体实现是在锁对象的对象头中设置偏向线程ID，如果是可变对象，那么自然就不是同一把锁了。<br><br>我有个疑问，麻烦老师帮忙解答下，如果使用balance做锁，a线程获取锁，b线程等待。a线程将balance1修改为balance2(假设地址改变场景)，释放了锁，这时候b线程是不是永远获取不到balance1锁？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504997,"discussion_content":"balance,balance1,balance2这三者是什么关系？😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599175842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1460221,"avatar":"https://static001.geekbang.org/account/avatar/00/16/47/fd/685bff81.jpg","nickname":"上善若水","note":"","ucode":"F8E52DDD7D48CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303173,"discussion_content":"忽略掉balance。balance1是原值，balance2是a线程修改后的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599178499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242421,"user_name":"fightingD","can_delete":false,"product_type":"c1","uid":1443637,"ip_address":"","ucode":"AD2876CED5D5AC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKwViav94kcF50CxA0Jw7icicxociaVzut97iacy3b2ciacFqXuFWdiakVq304YcI8pt4HT5A1Yvp8EkYCpw/132","comment_is_top":false,"comment_ctime":1597717873,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597717873","product_id":100023901,"comment_content":"不可以，余额,密码都是有可能变化的，不能用可变的对象当做锁。<br>","like_count":0},{"had_liked":false,"id":240843,"user_name":"Geek_65e13e","can_delete":false,"product_type":"c1","uid":2031854,"ip_address":"","ucode":"BFD5C7D8B54916","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eotIianb3beTzkBUlkE6YwgFGwoh0gLiaUzJvqORZRVnXur7EaXTuBsSyceTBSMM1DP6RI1Pc2BYYwQ/132","comment_is_top":false,"comment_ctime":1597102290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597102290","product_id":100023901,"comment_content":"所以要先知道什么是不可变对象是吗？","like_count":0},{"had_liked":false,"id":240806,"user_name":"Geek_65e13e","can_delete":false,"product_type":"c1","uid":2031854,"ip_address":"","ucode":"BFD5C7D8B54916","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eotIianb3beTzkBUlkE6YwgFGwoh0gLiaUzJvqORZRVnXur7EaXTuBsSyceTBSMM1DP6RI1Pc2BYYwQ/132","comment_is_top":false,"comment_ctime":1597071800,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597071800","product_id":100023901,"comment_content":"评论区太优秀 我要跟上步伐","like_count":0},{"had_liked":false,"id":238287,"user_name":"草帽","can_delete":false,"product_type":"c1","uid":1325588,"ip_address":"","ucode":"C87B39461BF182","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/14/37362dce.jpg","comment_is_top":false,"comment_ctime":1596111821,"is_pvip":false,"replies":[{"id":"88057","content":"没错","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1596151852,"ip_address":"","comment_id":238287,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596111821","product_id":100023901,"comment_content":"锁的粒度取决于资源间的关系， 如果资源之间互相没有关系考虑更细粒度的锁保证性能， 如果资源之间存在一定的联系就必须使用更大的粒度的锁来保证原子性。<br><br>这样理解没错吧 ！","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502695,"discussion_content":"没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596151852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232594,"user_name":"sibyl","can_delete":false,"product_type":"c1","uid":1323652,"ip_address":"","ucode":"0D142011860D69","user_header":"","comment_is_top":false,"comment_ctime":1594045858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594045858","product_id":100023901,"comment_content":"课后题：<br><br>首先总结课程来说，对资源的锁定必须始终同一把锁，即必须使用同一个对象，这里无论是balance还是password均不是final的，因此其引用对象是可变的，所以一旦改变了对象，那么多个线程可能使用的将不是同一个锁对象。<br><br>其实上面这样理解反而不如直接看sychronized来的清晰，synchronizd会在锁对象中维护持锁线程ID，试问如果对象被修改，比如new一个新对象，那么必然没有持锁线程，所以就无法互斥了 ","like_count":0},{"had_liked":false,"id":222294,"user_name":"Geek_9d40b1","can_delete":false,"product_type":"c1","uid":1936806,"ip_address":"","ucode":"4AAD469A956F61","user_header":"","comment_is_top":false,"comment_ctime":1590740043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590740043","product_id":100023901,"comment_content":" Thread thread1 = new Thread(() -&gt; {<br>&#47;&#47;            System.out.println(account1.getBalance());<br>            System.out.println(account1.getPassword());<br>        });<br><br><br>        Thread thread2 = new Thread(() -&gt; {<br>            account1.updatePassword(&quot;rr&quot;);<br>&#47;&#47;            account1.withdraw(100);<br>        });<br><br>        Thread thread3 = new Thread(() -&gt; {<br>            &#47;&#47;            System.out.println(account1.getBalance());<br>            System.out.println(account1.getPassword());<br>        });<br><br>        Thread thread4 = new Thread(() -&gt; {<br>            account1.updatePassword(&quot;ff&quot;);<br>&#47;&#47;            account1.withdraw(100);<br>        });<br>        thread1.start();<br>        thread2.start();<br>        thread2.sleep(500);<br>        thread3.start();<br>        thread4.start();<br><br>        thread1.join();<br>        thread2.join();<br>        thread3.join();<br>        thread4.join();<br>为什么这样，结果是线程不安全的呢","like_count":0},{"had_liked":false,"id":219064,"user_name":"non","can_delete":false,"product_type":"c1","uid":1306912,"ip_address":"","ucode":"F765CC7DDDC7F4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJoOia8n2xdlII9AEfK3Zh3k3wlh6HTemyxZ4Z5DicxYITk8YgYEGM8K1xOt2Puic9xoGCQev7JOZ7bA/132","comment_is_top":false,"comment_ctime":1589938775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589938775","product_id":100023901,"comment_content":"假设第一个线程获取到this.balance的锁，另一个线程在等，然后this.balance被修改，如果修改之后没有代码需要执行，这个时候是不是就没有什么影响？","like_count":0},{"had_liked":false,"id":218740,"user_name":"苗","can_delete":false,"product_type":"c1","uid":1088710,"ip_address":"","ucode":"5ECCC6C855E541","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/c6/05a6798f.jpg","comment_is_top":false,"comment_ctime":1589863215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589863215","product_id":100023901,"comment_content":"老师，我有个疑问，现在的业务开发除了批处理等线下任务会用多线程处理外；几乎在线业务都是先从数据库查数据po转成do；调用do的方法处理业务逻辑；一次请求就会生成一个业务对象；这种模式下对应于取款和改账户密码，似乎也就没有多线程应用的场景；那么多线程到底在哪些场景下使用呢？一个复杂的业务方法；可以通过多线程提升性能的场景吗？","like_count":0},{"had_liked":false,"id":213663,"user_name":"wking","can_delete":false,"product_type":"c1","uid":1294634,"ip_address":"","ucode":"47D52E4280D1E6","user_header":"https://static001.geekbang.org/account/avatar/00/13/c1/2a/e7102065.jpg","comment_is_top":false,"comment_ctime":1588504276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588504276","product_id":100023901,"comment_content":"老师，假设有 A、B、C 三个账户，余额都是 200 元，我们用两个线程分别执行两个转账操作：账户 A 转给账户 B 100 元，账户 B 转给账户 C 100 元，【最后我开启两个线程并发请求结果：是账户 A 的余额是 100 元，账户 B 的余额是 200 元， 账户 C 的余额是 300 元。】【并没有你说的情况：线程 1 和线程 2 都会读到账户 B 的余额为 200，导致最终账户 B 的余额可能是 300（线程 1 后于线程 2 写 B.balance，线程 2 写的 B.balance 值被线程 1 覆盖），可能是 100（线程 1 先于线程 2 写 B.balance，线程 1 写的 B.balance 值被线程 2 覆盖），就是不可能是 200。】<br><br>class Account {<br>  private int balance;<br>  &#47;&#47; 转账<br>  synchronized void transfer(<br>      Account target, int amt){<br>    if (this.balance &gt; amt) {<br>      this.balance -= amt;<br>      target.balance += amt;<br>    }<br>  } <br>}","like_count":0},{"had_liked":false,"id":213372,"user_name":"见南山","can_delete":false,"product_type":"c1","uid":1118111,"ip_address":"","ucode":"6A8BB82B7573CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/9f/f4b06bd5.jpg","comment_is_top":false,"comment_ctime":1588397376,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588397376","product_id":100023901,"comment_content":"原子性本质就是中间状态对外不可见。而操作不可分割是外在表现形式。","like_count":0},{"had_liked":false,"id":206891,"user_name":"bin.chen","can_delete":false,"product_type":"c1","uid":1135604,"ip_address":"","ucode":"5BA49358AB8A1A","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/f4/e277325d.jpg","comment_is_top":false,"comment_ctime":1586953077,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586953077","product_id":100023901,"comment_content":"老师图画的不错，语言简洁，表达思想简单","like_count":0},{"had_liked":false,"id":206888,"user_name":"bin.chen","can_delete":false,"product_type":"c1","uid":1135604,"ip_address":"","ucode":"5BA49358AB8A1A","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/f4/e277325d.jpg","comment_is_top":false,"comment_ctime":1586952453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586952453","product_id":100023901,"comment_content":"课后思考：1.从本质上来说创建Object之后指向的是一个地址 这个地址是一个固定的 当作锁毫无疑问是可以的，String,int等基本类型的数据的地址值会随着值的变化而变化","like_count":0},{"had_liked":false,"id":206408,"user_name":"灰太狼","can_delete":false,"product_type":"c1","uid":1066046,"ip_address":"","ucode":"C17DD5D5ED9DC5","user_header":"https://static001.geekbang.org/account/avatar/00/10/44/3e/493e73fa.jpg","comment_is_top":false,"comment_ctime":1586856315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586856315","product_id":100023901,"comment_content":"老师，我测试了用Account.class获得锁，然后4个Account，4个线程分别执行10次，分别操作AccountA向AccountB转账，AccountC向AccountD转账，测试是可以并发执行的，并没有串行，也就是说并没有A向B操作10次全部完成后才开始C到D，能麻烦说一下嘛？谢谢","like_count":0},{"had_liked":false,"id":203947,"user_name":"云韵","can_delete":false,"product_type":"c1","uid":1025622,"ip_address":"","ucode":"3DE26DBAAAEDE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/56/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1586310469,"is_pvip":true,"replies":[{"id":"76488","content":"不允许调用无参构造函数，防止错误地创建对象","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1586430848,"ip_address":"","comment_id":203947,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1586310469","product_id":100023901,"comment_content":"王老师，把Account的构造函数变成private是出于什么考虑呢","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491014,"discussion_content":"不允许调用无参构造函数，防止错误地创建对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586430848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":200801,"user_name":"J.N.","can_delete":false,"product_type":"c1","uid":1934147,"ip_address":"","ucode":"E6501AFA8C6BC6","user_header":"https://static001.geekbang.org/account/avatar/00/1d/83/43/2132acb5.jpg","comment_is_top":false,"comment_ctime":1585653184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585653184","product_id":100023901,"comment_content":"老师，我知道思考题是因为balance和password对象在每次修改时对象会不一样，所以不能当锁，但是针对您的例子我不确定是哪一步会出现问题，是balance在-=后new Integer(i)时，经过编译器优化后，在已赋值给balance但未初始化Integer对象时，另外一个线程进入临界区执行-=操作，从而发生异常么？那么我加volatile是否可行，那password赋值一个新的String地址，如果赋值前，锁还是那个锁，其他线程进不来，赋值后锁变了，但对于其他线程来说此时读到的password已经是新的password，应该没问题才对呀？假设A线程访问updatePassword，B、C线程访问getPassword，当A线程给password赋了新String对象后，等待的B、C线程的锁是同时变成了新String吗？","like_count":0},{"had_liked":false,"id":193541,"user_name":"hellojd","can_delete":false,"product_type":"c1","uid":1341697,"ip_address":"","ucode":"4E51807AE7E472","user_header":"https://static001.geekbang.org/account/avatar/00/14/79/01/e71510dc.jpg","comment_is_top":false,"comment_ctime":1584925299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584925299","product_id":100023901,"comment_content":"一般处理复杂逻辑，都采用一个service来处理，解决并发问题只能用传lockobj方式，感觉不优雅","like_count":0},{"had_liked":false,"id":192580,"user_name":"Zain Zhu","can_delete":false,"product_type":"c1","uid":1125986,"ip_address":"","ucode":"5402E6FF76333A","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/62/ea49480e.jpg","comment_is_top":false,"comment_ctime":1584861084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584861084","product_id":100023901,"comment_content":"看评论区感觉我没学过Java","like_count":0},{"had_liked":false,"id":188945,"user_name":"弹弹棉花","can_delete":false,"product_type":"c1","uid":1241859,"ip_address":"","ucode":"FCB9FB8338CAF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/f3/03/a5091282.jpg","comment_is_top":false,"comment_ctime":1584437285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584437285","product_id":100023901,"comment_content":"思考题：不可以，this.balance和this.password都是可变对象，就无法保证互斥性了","like_count":0},{"had_liked":false,"id":185675,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1583661200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583661200","product_id":100023901,"comment_content":"全局共享一个class锁，并发变成了1","like_count":0},{"had_liked":false,"id":179791,"user_name":"Geek_bb89c3","can_delete":false,"product_type":"c1","uid":1331828,"ip_address":"","ucode":"0F97B5B0F2DDD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IZKGetBZDuMEa2VwwtesTELvLORIyV749ItgfAqNPv30n4zEv71wuGNr1aNVIVltG0icvH53DHDuqPuzNpiauWAg/132","comment_is_top":false,"comment_ctime":1582100167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582100167","product_id":100023901,"comment_content":"如果是一个资源，各个资源之间没有关系，就用一把锁来保护这些资源。如果多个资源之间有相互关联，这个时候就使用一把锁来处理所有的对象。就类似于第一种是锁住一个座位。第二种是锁住一个包厢。","like_count":0},{"had_liked":false,"id":177640,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1649057,"ip_address":"","ucode":"4F42DAA5DB5C38","user_header":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","comment_is_top":false,"comment_ctime":1581442142,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1581442142","product_id":100023901,"comment_content":"有一个疑问，上面的A 转账给 B， B 转账给C 是由于不可见性导致的B 的账户余额可能是300 或者100 吧？如果不是这个原因的话真没有搞明白为什么不可能是200 ，应该一定是200 才对呀。","like_count":0},{"had_liked":false,"id":171670,"user_name":"龙猫","can_delete":false,"product_type":"c1","uid":1112490,"ip_address":"","ucode":"FD726CC969EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","comment_is_top":false,"comment_ctime":1578988612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578988612","product_id":100023901,"comment_content":"打卡，第二遍，比第一次看容易多了","like_count":0},{"had_liked":false,"id":163796,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1576804187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576804187","product_id":100023901,"comment_content":"老师总结中说的原子性和一致性和数据库事务中的acid异曲同工啊。","like_count":0},{"had_liked":false,"id":161411,"user_name":"ezekiel","can_delete":false,"product_type":"c1","uid":1158795,"ip_address":"","ucode":"AB4AB6FA8612D8","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/8b/43ce01ca.jpg","comment_is_top":false,"comment_ctime":1576202664,"is_pvip":false,"replies":[{"id":"61607","content":"简单理解成Account对象的创建分布在多个文件里，这样就很可能有多个实例，所以管理起来很困难","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1576318175,"ip_address":"","comment_id":161411,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1576202664","product_id":100023901,"comment_content":"老师您好！<br>下面这句话不太理解，您能再详细的解释下吗？<br>创建 Account 对象的代码很可能分散在多个工程中，传入共享的 lock 真的很难。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477709,"discussion_content":"简单理解成Account对象的创建分布在多个文件里，这样就很可能有多个实例，所以管理起来很困难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576318175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379108,"discussion_content":"简而言之，不是单例的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623685622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160424,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1322811,"ip_address":"","ucode":"02C3847652D3CF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKHfQPjwdyOLYsbF6T2rUSILRc3VsNmMcNJkEEd3TvbfcYProhE8jrKD7EozLTpJ94N7SnbBcTnOA/132","comment_is_top":false,"comment_ctime":1575948657,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575948657","product_id":100023901,"comment_content":"我看了一下评论，但还是没有理解为什么不行，我觉得即便是多个线程在getBalance和updatePassword都是对自己的当前对象进行加锁，而且也不涉及到别的线程进行访问修改，所以为什么不行呢？","like_count":0},{"had_liked":false,"id":154311,"user_name":"NaN🎃","can_delete":false,"product_type":"c1","uid":1703832,"ip_address":"","ucode":"69D6A99871A6FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/ff/98/a9a68fc6.jpg","comment_is_top":false,"comment_ctime":1574407350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574407350","product_id":100023901,"comment_content":"transfer()使用static修饰也可以吧","like_count":0},{"had_liked":false,"id":154072,"user_name":"Geek_81a684","can_delete":false,"product_type":"c1","uid":1118664,"ip_address":"","ucode":"30553B742002B3","user_header":"","comment_is_top":false,"comment_ctime":1574376998,"is_pvip":false,"replies":[{"id":"59685","content":"本章的这个场景是没必要的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1574728349,"ip_address":"","comment_id":154072,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574376998","product_id":100023901,"comment_content":"老师 为什么get方法也需要加锁","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475372,"discussion_content":"本章的这个场景是没必要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574728349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152564,"user_name":"西二旗啤酒王","can_delete":false,"product_type":"c1","uid":1005131,"ip_address":"","ucode":"E064F32437812C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/4b/31369ca6.jpg","comment_is_top":false,"comment_ctime":1574043351,"is_pvip":false,"replies":[{"id":"59689","content":"killed掉无参构造函数","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1574729486,"ip_address":"","comment_id":152564,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574043351","product_id":100023901,"comment_content":"<br><br><br><br>文章里的代码有个疑问，如下：<br>class Account {<br>  private Object lock；<br>  private int balance;<br>  private Account();  这句代码是啥意思？？？？？？？？？？？？<br>  &#47;&#47; 创建Account时传入同一个lock对象<br>  public Account(Object lock) {<br>    this.lock = lock;<br>  } <br>  &#47;&#47; 转账<br>  void transfer(Account target, int amt){<br>    &#47;&#47; 此处检查所有对象共享的锁<br>    synchronized(lock) {<br>      if (this.balance &gt; amt) {<br>        this.balance -= amt;<br>        target.balance += amt;<br>      }<br>    }<br>  }<br>}","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474859,"discussion_content":"killed掉无参构造函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574729486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148878,"user_name":"Fortune","can_delete":false,"product_type":"c1","uid":1508654,"ip_address":"","ucode":"6B9465AC996523","user_header":"https://static001.geekbang.org/account/avatar/00/17/05/2e/5a6b6b6e.jpg","comment_is_top":false,"comment_ctime":1573098555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573098555","product_id":100023901,"comment_content":"这里创建了两个对象，ballock和pwlock这两个对象作为锁对象，跟下面的this，以及target有什么关系呢？假如两个线程1和2执行，思路是怎样的呢，为什么不是加锁在this上面，不是很理解，唉","like_count":0},{"had_liked":false,"id":146583,"user_name":"马成","can_delete":false,"product_type":"c1","uid":1486895,"ip_address":"","ucode":"664F2BAA2E0F0B","user_header":"https://static001.geekbang.org/account/avatar/00/16/b0/2f/e2096905.jpg","comment_is_top":false,"comment_ctime":1572576781,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572576781","product_id":100023901,"comment_content":"老师的这个例子：<br><br>class Account {<br>  private int balance;<br>  &#47;&#47; 转账<br>  synchronized void transfer(<br>      Account target, int amt){<br>    if (this.balance &gt; amt) {<br>      this.balance -= amt;<br>      target.balance += amt;<br>    }<br>  } <br>}<br>我觉得既不能保护自己的余额也保护不了别人的余额；例如，别人转账给我时，我的余额也发生了变化，而且不受当前转账锁的约束","like_count":0},{"had_liked":false,"id":135659,"user_name":"涛","can_delete":false,"product_type":"c1","uid":1158168,"ip_address":"","ucode":"48C7BDB7AD650D","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/18/25ae9cf7.jpg","comment_is_top":false,"comment_ctime":1569236902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569236902","product_id":100023901,"comment_content":"有个问题咨询下，例如：文章中当资源与资源不存在关系，使用4把锁保护4个资源和用2把锁保护4个资源有什么区别呢？<br><br>","like_count":0},{"had_liked":false,"id":131011,"user_name":"斑斑驳驳","can_delete":false,"product_type":"c1","uid":1122057,"ip_address":"","ucode":"ADFC607C549620","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/09/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1567599114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567599114","product_id":100023901,"comment_content":"温故而知新，第一遍以为自己听懂了；第二遍发现新大陆","like_count":0},{"had_liked":false,"id":127252,"user_name":" 臣馟飞扬","can_delete":false,"product_type":"c1","uid":1116188,"ip_address":"","ucode":"F2F882B7678055","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/1c/ef15e661.jpg","comment_is_top":false,"comment_ctime":1566622921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566622921","product_id":100023901,"comment_content":"一把锁保护多个共享变量的场景：<br>1、如果多个共享变量没有关联关系，比如是同一个类里不同的类变量，则可以使用this作为共同的锁；<br>2、如果共享变量之间有关联关系，比如是同一个类的不同对象实例的相同类变量，则不能用其中一个对象的this作为共同的锁，可以考虑使用类对象作为共同的锁。","like_count":0},{"had_liked":false,"id":125863,"user_name":"张远","can_delete":false,"product_type":"c1","uid":1527297,"ip_address":"","ucode":"95DDC9B5830AFF","user_header":"https://static001.geekbang.org/account/avatar/00/17/4e/01/572d53ac.jpg","comment_is_top":false,"comment_ctime":1566266258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566266258","product_id":100023901,"comment_content":"您好，我想问一下。在锁对象的例子中；如果线程1锁住了A的账户实例（A.this）,线程2锁住了B的账户实例（B.this）;既然B对象已经被锁了。后续转账的例子中，线程1怎么能看到B中是200；而且还能更新它的金额呢。我的理解是B对象已经被线程锁住了，是不是其他线程想修改B对象是要等释放之后的。","like_count":0},{"had_liked":false,"id":115497,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1563606093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563606093","product_id":100023901,"comment_content":"---总结---<br>1. 多个资源的保护要判断各资源之间是否存在关联关系。<br>2. 不存在关联关系的资源尽量用不同的锁精细化管理提升性能。<br>3. 存在关联关系的资源需要保证用同一把锁覆盖所有受保护资源。<br>4. 原子性问题的解决可以通过互斥锁保证中间状态对外不可见。<br><br>---启发---<br>1. 老师对锁保护多个资源的讲解结合生活中的例子，十分清楚明了。这种学习方法虽然不太严谨，但不枯燥，也容易理解，能找到生活世界与计算机世界中的关联对于学习也大有裨益。<br><br>---问题---<br>1. 在多个资源存在关联关系的示例中，是否也可以用private static final的一个对象作为锁呢？这样就可以在一个类中使用多把锁。","like_count":0},{"had_liked":false,"id":113506,"user_name":"赵小洛","can_delete":false,"product_type":"c1","uid":1592232,"ip_address":"","ucode":"A326C12B1A1ABA","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/a8/14b8a860.jpg","comment_is_top":false,"comment_ctime":1563038228,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563038228","product_id":100023901,"comment_content":"把 final 去掉 应该就可以使用了","like_count":0},{"had_liked":false,"id":109722,"user_name":"美猴王","can_delete":false,"product_type":"c1","uid":1222844,"ip_address":"","ucode":"0B46E686B11C8D","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/bc/9f179054.jpg","comment_is_top":false,"comment_ctime":1562082422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562082422","product_id":100023901,"comment_content":"锁就是一个不可变的对象或变量","like_count":0},{"had_liked":false,"id":109537,"user_name":"Tomcat","can_delete":false,"product_type":"c1","uid":1399488,"ip_address":"","ucode":"58A9D44991EDB7","user_header":"https://static001.geekbang.org/account/avatar/00/15/5a/c0/e20eb855.jpg","comment_is_top":false,"comment_ctime":1562053362,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1562053362","product_id":100023901,"comment_content":"老师，this为什么只能保护this.balance而不能保护target. balance","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379112,"discussion_content":"自然this只能保护this.balance而不能保护target. balance","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623686071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379111,"discussion_content":"this和target是两个account对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623686044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103592,"user_name":"古夜","can_delete":false,"product_type":"c1","uid":1341612,"ip_address":"","ucode":"0A82D3CFCEDF07","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","comment_is_top":false,"comment_ctime":1560475589,"is_pvip":false,"replies":[{"id":"37546","content":"我觉得你说的是java的实现方法","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1560515410,"ip_address":"","comment_id":103592,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560475589","product_id":100023901,"comment_content":"老师是否可以这样理解<br>加锁的本质是寻找一个不可变的值A，lock()就是将这个值写入到要操作的对象的对象头？解锁就是去掉这个对象头？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453933,"discussion_content":"我觉得你说的是java的实现方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560515410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103181,"user_name":"修远","can_delete":false,"product_type":"c1","uid":1438452,"ip_address":"","ucode":"F4DFC99AAB8DA7","user_header":"https://static001.geekbang.org/account/avatar/00/15/f2/f4/d829e72e.jpg","comment_is_top":false,"comment_ctime":1560392002,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560392002","product_id":100023901,"comment_content":"也就是说，要锁定多个资源，如果资源之间没有关联则需要使用多把锁；如果资源间有关联，就需要找到关联的点进行加锁，比如这里账户对象相关联的就是来自同一个类，所以对这个类的class对象加锁即可，这就是对类锁？","like_count":0},{"had_liked":false,"id":94116,"user_name":"布鲁斯特","can_delete":false,"product_type":"c1","uid":1421905,"ip_address":"","ucode":"2F1C2E1D6B24E5","user_header":"https://static001.geekbang.org/account/avatar/00/15/b2/51/69bbd5ef.jpg","comment_is_top":false,"comment_ctime":1557724250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557724250","product_id":100023901,"comment_content":"买了好久,终于来看了,理解了很多","like_count":0},{"had_liked":false,"id":91837,"user_name":"linsen","can_delete":false,"product_type":"c1","uid":1187010,"ip_address":"","ucode":"1DBBBA0988DB63","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/05Wiazxo0OS5w9KdJ4OQAe3ezwaCXNY4DGoE0noPFzXtUhOGejgGKFR6WmMxr0KcEGOSahnjbOwxPSib88h0E6zA/132","comment_is_top":false,"comment_ctime":1557117867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557117867","product_id":100023901,"comment_content":"如果不行的原因是这两个是可变对象，可变对象不能用作锁，那么老师在文章中说的“this 这把锁可以保护自己的余额 this.balance...”是不是也有问题呢？","like_count":0},{"had_liked":false,"id":91375,"user_name":"JackLei","can_delete":false,"product_type":"c1","uid":1099989,"ip_address":"","ucode":"01128A61A9E80F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/d5/e88c1805.jpg","comment_is_top":false,"comment_ctime":1557019055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557019055","product_id":100023901,"comment_content":"如果是在多进程中的，锁class，能解决这个问题么？如取款、存款是一个分布式的服务。","like_count":0},{"had_liked":false,"id":89691,"user_name":"劉小强","can_delete":false,"product_type":"c1","uid":1178474,"ip_address":"","ucode":"07FC2F0CDED869","user_header":"https://static001.geekbang.org/account/avatar/00/11/fb/6a/be4956a3.jpg","comment_is_top":false,"comment_ctime":1556244827,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556244827","product_id":100023901,"comment_content":"在查看密码和查看余额的时候为什么要加锁呢，这样如果一个线程在修改密码的时候必须在该线程执行完才能看见查询到密码，这样性能上可以么","like_count":0},{"had_liked":false,"id":85428,"user_name":"多多","can_delete":false,"product_type":"c1","uid":1102490,"ip_address":"","ucode":"DA5AF8146AEF82","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/9a/d56bb650.jpg","comment_is_top":false,"comment_ctime":1555059384,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1555059384","product_id":100023901,"comment_content":"代码有错就没人提吗？王老师你错误的代码太多了！Class中方法可以没有方法体吗？你把这个括号加上会怎样？麻烦用心点！","like_count":0,"discussions":[{"author":{"id":1987202,"avatar":"","nickname":"Geek_783cc7","note":"","ucode":"C43F76B1978FA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403640,"discussion_content":"本来就是伪代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634122985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1164531,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","nickname":"Bug? Feature!","note":"","ucode":"F8FA8A0094FBA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4950,"discussion_content":"看思想！！！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565856860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83497,"user_name":"Mr.Panda","can_delete":false,"product_type":"c1","uid":1238864,"ip_address":"","ucode":"655A3013B5E849","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/50/d476ed6c.jpg","comment_is_top":false,"comment_ctime":1554627169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554627169","product_id":100023901,"comment_content":"思考题解答：<br><br>答案：不可以，锁对象引用必须保持不可切换特性。原因加锁本质是引用指向的对象头附上了线程id。若引用切换别的对象了，执行synchronized就会检查别的对象是否被线程加锁。毫无意义。","like_count":0},{"had_liked":false,"id":83380,"user_name":"龙文子","can_delete":false,"product_type":"c1","uid":1041628,"ip_address":"","ucode":"D7B62F4A6C965C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e4/dc/00cf43a7.jpg","comment_is_top":false,"comment_ctime":1554549941,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554549941","product_id":100023901,"comment_content":"可变对象不宜做锁对象  是因为可见性，若用volatile 修饰，对于多线程共享的对象，一个线程修改，其它线程立马可见。这样来看，也可以作为锁对象","like_count":0},{"had_liked":false,"id":82550,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1135159,"ip_address":"","ucode":"CD8B84A57A6A0C","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/37/13b4c8aa.jpg","comment_is_top":false,"comment_ctime":1554251085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554251085","product_id":100023901,"comment_content":"思考题: 不可行，锁对象会随时改变，而我们用互斥锁的目的是保证同一时刻只有一个线程执行临界区代码，所以对于并发执行的线程来说，锁对象不应该变化","like_count":0},{"had_liked":false,"id":82534,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1135159,"ip_address":"","ucode":"CD8B84A57A6A0C","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/37/13b4c8aa.jpg","comment_is_top":false,"comment_ctime":1554249636,"is_pvip":false,"replies":[{"id":"29895","content":"是的，我们说的都是单进程的，多进程没有数据共享，也没这些问题<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554293128,"ip_address":"","comment_id":82534,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554249636","product_id":100023901,"comment_content":"你好老师你说用Account.class这个锁做互斥协调，你说到有一个问题是账户类在不同工程中使用，那就是说在不同JVM里面，那这个Account.class也就不唯一！","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445628,"discussion_content":"是的，我们说的都是单进程的，多进程没有数据共享，也没这些问题\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554293128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82352,"user_name":"光明势力","can_delete":false,"product_type":"c1","uid":1445573,"ip_address":"","ucode":"31CA27D7928ACD","user_header":"https://static001.geekbang.org/account/avatar/00/16/0e/c5/d73030ee.jpg","comment_is_top":false,"comment_ctime":1554190563,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1554190563","product_id":100023901,"comment_content":"this 是对象级别的锁，那多线程调用该类的方法，每次调用类，这个类的this锁是一样的？还说每次调用一次new一次对象，this锁就不一样了？？互斥锁就这点有疑惑，望作者或读者大神解答，谢谢","like_count":0,"discussions":[{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1930,"discussion_content":"this时候是实例化对象，不同的实例对象不同的this","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563102140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80771,"user_name":"龙腾","can_delete":false,"product_type":"c1","uid":1439436,"ip_address":"","ucode":"51D41953C90207","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/cc/dac4c28c.jpg","comment_is_top":false,"comment_ctime":1553733070,"is_pvip":false,"replies":[{"id":"29420","content":"答疑里面有答案<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553780486,"ip_address":"","comment_id":80771,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553733070","product_id":100023901,"comment_content":"老师好，我一般用全局锁的时候是定义一个常量作为锁，这个和class对象有什么区别么？哪个比较好点","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444967,"discussion_content":"答疑里面有答案\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553780486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78938,"user_name":"Geek_13ada7","can_delete":false,"product_type":"c1","uid":1455172,"ip_address":"","ucode":"6FD757328160A9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdV7Y5XbOicib2KdGSGHULlUJFr8jgjwicabEYDibZuIlmkjAfc0bQVicJD2dKngQSLP2Sm9NmyjF5deg/132","comment_is_top":false,"comment_ctime":1553304036,"is_pvip":false,"replies":[{"id":"28786","content":"可以，实现单例的方式有很多<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553326130,"ip_address":"","comment_id":78938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553304036","product_id":100023901,"comment_content":"使用static变量不可以吗，老师","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444295,"discussion_content":"可以，实现单例的方式有很多\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553326130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78308,"user_name":"chuenfaiy","can_delete":false,"product_type":"c1","uid":1291234,"ip_address":"","ucode":"71F1898C8CACA5","user_header":"https://static001.geekbang.org/account/avatar/00/13/b3/e2/7bdc7255.jpg","comment_is_top":false,"comment_ctime":1553129371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553129371","product_id":100023901,"comment_content":"密码为什么要加锁","like_count":0},{"had_liked":false,"id":78199,"user_name":"WP","can_delete":false,"product_type":"c1","uid":1105956,"ip_address":"","ucode":"4A24C6CAA70220","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/24/4529f2a4.jpg","comment_is_top":false,"comment_ctime":1553092081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553092081","product_id":100023901,"comment_content":"学习到了很多，评论区看到了常量池，缓存区，享元模式，哈哈，赚到了","like_count":0},{"had_liked":false,"id":77610,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1552971877,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1552971877","product_id":100023901,"comment_content":"个人理解不可行<br>1、String作互斥锁，相同的String的值是在字符串常量池中的，值相同会被视为同一个对象，当两个密码相同，但是账户不同的情况下，对于这两个账户的密码操作都是同一把锁，出现了使用自家锁包货别家资源的情况，并且String的值会改变，改变之后锁也就变了，失去了锁的意义。<br>2、Integer类型作为互斥锁本身就不合适，相同的int可以有不同的Integer，并且在这里Integer的值也是可变的","like_count":0},{"had_liked":false,"id":76616,"user_name":"呼哥","can_delete":false,"product_type":"c1","uid":1442636,"ip_address":"","ucode":"5FDBB53B26CACA","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/4c/0513fa13.jpg","comment_is_top":false,"comment_ctime":1552643918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552643918","product_id":100023901,"comment_content":"不可行，锁的意义在于锁住相同的对象，如果两个线程锁住的对象不一样，就不是互斥锁了，就会出现同时访问，交叉覆盖的情况。","like_count":0},{"had_liked":false,"id":76207,"user_name":"Ying","can_delete":false,"product_type":"c1","uid":1307466,"ip_address":"","ucode":"FAE36C852765F2","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/4a/4874b350.jpg","comment_is_top":false,"comment_ctime":1552549504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552549504","product_id":100023901,"comment_content":"受保护资源之间的关系 决定了锁的粒度  原子性保证中间状态对外不可见 要开始跟一个新的专栏了 加油喽","like_count":0},{"had_liked":false,"id":75916,"user_name":"zhulogic","can_delete":false,"product_type":"c1","uid":1047553,"ip_address":"","ucode":"8D9F0D2020E545","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/01/38575d15.jpg","comment_is_top":false,"comment_ctime":1552491330,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552491330","product_id":100023901,"comment_content":"在account类里声明一个static  final类型的常量作为锁","like_count":0},{"had_liked":false,"id":75883,"user_name":"aguan(^･ｪ･^)","can_delete":false,"product_type":"c1","uid":1107177,"ip_address":"","ucode":"04833EF2D18E1A","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/e9/0dd3829f.jpg","comment_is_top":false,"comment_ctime":1552487791,"is_pvip":false,"replies":[{"id":"27687","content":"有分布式锁，用zk，数据库，redis都能实现<br><br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552524446,"ip_address":"","comment_id":75883,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552487791","product_id":100023901,"comment_content":"老师我有个疑问，如果是在分布式系统，要怎么解决多资源用一把锁的问题呢？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443074,"discussion_content":"有分布式锁，用zk，数据库，redis都能实现\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552524446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75684,"user_name":"星火","can_delete":false,"product_type":"c1","uid":1079566,"ip_address":"","ucode":"A04FD1DDC68CA8","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKmibzSicIgPib83RowJgzhPicq0FiaPSXY8NqyaKOkYGROUGibO5rrzgP56BHicL2fNSibJqD7Tic2NJib8SWg/0","comment_is_top":false,"comment_ctime":1552449309,"is_pvip":false,"replies":[{"id":"27603","content":"是的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552454242,"ip_address":"","comment_id":75684,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1552449309","product_id":100023901,"comment_content":"老师，如果在分布式环境下，那个A、B、C账户转账的例子用Account.class 作为共享的锁，是不是就不正确了","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442984,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552454242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289278,"discussion_content":"保证原子性就是保证中间过程对外不可见，Account.class这把锁是进程内共享，只能保证对其他线程不可见，而分布式环境下要保证对其他进程不可见，自然要使用集群内共享的分布式锁，来保证对其他进程不可见","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594045464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74887,"user_name":"规划","can_delete":false,"product_type":"c1","uid":1449457,"ip_address":"","ucode":"16DF5650D8718C","user_header":"https://static001.geekbang.org/account/avatar/00/16/1d/f1/05d5579d.jpg","comment_is_top":false,"comment_ctime":1552308944,"is_pvip":false,"replies":[{"id":"27288","content":"可以","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552310350,"ip_address":"","comment_id":74887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552308944","product_id":100023901,"comment_content":"请问老师，单例是可以锁住A,B资源吧？比如spring管理管理的单例","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442721,"discussion_content":"可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552310350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74761,"user_name":"zsh0103","can_delete":false,"product_type":"c1","uid":1326016,"ip_address":"","ucode":"3992AB4BD1A18A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epLhKkTgowm9PqUwP9k90DecpOU7HQ0IRuAp515kIonbfyqYm6ME7s2bmaPX0sSA14micZ2DAfLLibw/132","comment_is_top":false,"comment_ctime":1552293240,"is_pvip":false,"replies":[{"id":"27289","content":"是的，改变之后，相当于没有加锁","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552310434,"ip_address":"","comment_id":74761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552293240","product_id":100023901,"comment_content":"我的理解不知道是否正确，首先，password是String类型，String类型变量每次赋值等于一个新对象，所以对password加锁等没有加锁。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442671,"discussion_content":"是的，改变之后，相当于没有加锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552310434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74401,"user_name":"我真不是地球","can_delete":false,"product_type":"c1","uid":1451048,"ip_address":"","ucode":"873F7222DE35BE","user_header":"https://static001.geekbang.org/account/avatar/00/16/24/28/9b5b1396.jpg","comment_is_top":false,"comment_ctime":1552216409,"is_pvip":false,"replies":[{"id":"27189","content":"是的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552224246,"ip_address":"","comment_id":74401,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552216409","product_id":100023901,"comment_content":"创建 Account 对象时，传入相同的 lock，请问Account target的target也要再传参进来之前，事先set入同一个lock吧","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442561,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552224246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74187,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1552139126,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552139126","product_id":100023901,"comment_content":"this.balance发生改变就会不是同一把锁了，所以不可以","like_count":0},{"had_liked":false,"id":73972,"user_name":"小小小丶盘子","can_delete":false,"product_type":"c1","uid":1308056,"ip_address":"","ucode":"FCD4520F1EF872","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/98/45374bb9.jpg","comment_is_top":false,"comment_ctime":1552050274,"is_pvip":true,"replies":[{"id":"27021","content":"随便举个例子。当然不加锁也是有风险的。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552060761,"ip_address":"","comment_id":73972,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552050274","product_id":100023901,"comment_content":"老师，我想问一下，哪种场景下修改密码要加锁，是随便举例子，还是？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442365,"discussion_content":"随便举个例子。当然不加锁也是有风险的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552060761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73898,"user_name":"Nevermore","can_delete":false,"product_type":"c1","uid":1228011,"ip_address":"","ucode":"06EBD2E6A9B436","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/eb/c22ef3a5.jpg","comment_is_top":false,"comment_ctime":1552027928,"is_pvip":false,"replies":[{"id":"26974","content":"是的，可变的对象不能做互斥锁<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552047080,"ip_address":"","comment_id":73898,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552027928","product_id":100023901,"comment_content":"拿this.balance作为锁对象举例，由于它是可变的，线程1在拿到这个锁对象的监视器进入这个临界区以后，this.balance会发生变化，线程2就会拿到变化后的this.balance锁对象的监视器进入临界区，毕竟这两个锁不是互斥的。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442327,"discussion_content":"是的，可变的对象不能做互斥锁\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552047080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73804,"user_name":"Solitary_J","can_delete":false,"product_type":"c1","uid":1442034,"ip_address":"","ucode":"E1E0AE4A6231BF","user_header":"https://static001.geekbang.org/account/avatar/00/16/00/f2/66a1461d.jpg","comment_is_top":false,"comment_ctime":1552005647,"is_pvip":false,"replies":[{"id":"26961","content":"语法有问题，访问不了对象成员<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552019431,"ip_address":"","comment_id":73804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552005647","product_id":100023901,"comment_content":"老师，改成这样是不是一样锁的同一资源Account.class，也是正确的？<br>class Account {<br>  private int balance;<br>  &#47;&#47; 转账<br>  static void synchronized transfer(Account target, int amt){<br>      if (this.balance &gt; amt) {<br>        this.balance -= amt;<br>        target.balance += amt;<br>      }<br>  } <br>}<br>","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442285,"discussion_content":"语法有问题，访问不了对象成员\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552019431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73793,"user_name":"黄朋飞","can_delete":false,"product_type":"c1","uid":1107062,"ip_address":"","ucode":"A1E7E0460A1BCC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/76/a97242c0.jpg","comment_is_top":false,"comment_ctime":1552003665,"is_pvip":false,"replies":[{"id":"26959","content":"cpu什么时候刷缓存是不确定的，要看cpu心情。所以不要做这个假设，除非你调用cpu刷缓存的指令<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1552019257,"ip_address":"","comment_id":73793,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552003665","product_id":100023901,"comment_content":"老师你好，一直有个问题没明白，cpu-1缓存执行完变量值后什么时候会把变量值写回内存，写回内存后，另外一个cpu-2缓存会直接从驻内存读取数据吗（不是直接操作cpu上的缓存吗）","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442281,"discussion_content":"cpu什么时候刷缓存是不确定的，要看cpu心情。所以不要做这个假设，除非你调用cpu刷缓存的指令\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552019257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73719,"user_name":"wypsmall","can_delete":false,"product_type":"c1","uid":1317144,"ip_address":"","ucode":"5E46543D47F2C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/19/18/33b7e63b.jpg","comment_is_top":false,"comment_ctime":1551964009,"is_pvip":false,"replies":[{"id":"26924","content":"下一期介绍死锁","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551967363,"ip_address":"","comment_id":73719,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551964009","product_id":100023901,"comment_content":"存在死锁","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442243,"discussion_content":"下一期介绍死锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551967363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73706,"user_name":"Evelyn_hf","can_delete":false,"product_type":"c1","uid":1079639,"ip_address":"","ucode":"BEF757842E73E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/57/1103638a.jpg","comment_is_top":false,"comment_ctime":1551961563,"is_pvip":false,"replies":[{"id":"26918","content":"正确","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551967142,"ip_address":"","comment_id":73706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551961563","product_id":100023901,"comment_content":"不可以，this.balance和this.password指向的地址都变了，不是同一把锁。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442235,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551967142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73666,"user_name":"轻歌赋","can_delete":false,"product_type":"c1","uid":1251574,"ip_address":"","ucode":"22F62446208805","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/f6/2ff7bc7a.jpg","comment_is_top":false,"comment_ctime":1551952964,"is_pvip":false,"replies":[{"id":"26899","content":"zk,redis,db都可以，依据是去分布式吧<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551961562,"ip_address":"","comment_id":73666,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551952964","product_id":100023901,"comment_content":"这里感觉用数据库自身的锁更好一些<br>请问老师，目前分布式锁的解决方案大概都有哪些呢？理论依据又是什么呢？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442213,"discussion_content":"zk,redis,db都可以，依据是去分布式吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551961562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73585,"user_name":"iron_man","can_delete":false,"product_type":"c1","uid":1099883,"ip_address":"","ucode":"C0053A59442910","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/6b/0f3876ef.jpg","comment_is_top":false,"comment_ctime":1551932369,"is_pvip":false,"replies":[{"id":"26881","content":"下一期会讲这个问题<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551959461,"ip_address":"","comment_id":73585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551932369","product_id":100023901,"comment_content":"老师，关于转账的这个例子，如果加锁在 account.class 上，那么单台机器上执行的转账操作就是串行的了，就是 a 转 b，c转 d，这两个不需要互斥的转账操作，都需要互斥执行了。<br>对于这种情况，应该对有变动的两个账户加锁吧，是这样吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442169,"discussion_content":"下一期会讲这个问题\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73574,"user_name":"ZYY","can_delete":false,"product_type":"c1","uid":1220744,"ip_address":"","ucode":"C8559A03A7C458","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/88/a7a96ef1.jpg","comment_is_top":false,"comment_ctime":1551928578,"is_pvip":false,"replies":[{"id":"26885","content":"中间状态，你看不到就操作不了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551959845,"ip_address":"","comment_id":73574,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551928578","product_id":100023901,"comment_content":"老师，<br>中间状态对外不可见<br><br>这个怎么理解呢？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442165,"discussion_content":"中间状态，你看不到就操作不了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73559,"user_name":"wilburJiang","can_delete":false,"product_type":"c1","uid":1107836,"ip_address":"","ucode":"F83D474D692C06","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI5uDOruARAmFZr49ic2nib3ibj1TSBUKydMH2H3XHUniaR0FHeNVkOI9dfndxtJIOOrY2w5nhrHjX3UQ/132","comment_is_top":false,"comment_ctime":1551925680,"is_pvip":true,"replies":[{"id":"26883","content":"很全面了<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551959691,"ip_address":"","comment_id":73559,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1551925680","product_id":100023901,"comment_content":"思考题  这两种都不可行<br>1. 这两个字段都需要初始化，否则会空指针<br>2. String是不可变的，即每次修改后都是一个新的对象，没有起到加锁的作用。看了下基本类型的对应的封箱类，都是final 修饰的，在idea 里看都是不同的对象了。<br>请老师指正","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442154,"discussion_content":"很全面了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73548,"user_name":"master","can_delete":false,"product_type":"c1","uid":1245550,"ip_address":"","ucode":"E525135E4C7639","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/6e/a217a0f6.jpg","comment_is_top":false,"comment_ctime":1551923479,"is_pvip":false,"replies":[{"id":"26880","content":"是对象<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551959361,"ip_address":"","comment_id":73548,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551923479","product_id":100023901,"comment_content":"什么样的元素能做锁，只有对象吧，思考题的两个是对象吗，个人水平有限，望老师解答!","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442148,"discussion_content":"是对象\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73544,"user_name":"小黄","can_delete":false,"product_type":"c1","uid":1049839,"ip_address":"","ucode":"519BF8191D3A6B","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/ef/fea0fdbd.jpg","comment_is_top":false,"comment_ctime":1551922485,"is_pvip":false,"replies":[{"id":"26879","content":"是这样的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551959341,"ip_address":"","comment_id":73544,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551922485","product_id":100023901,"comment_content":"不可行，我分析：balance  password每次改变后被赋值成不同的对象。所以，其他线程可能仍加锁在旧对象上，导致操作不互斥，存在多个线程同时操作余额。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442146,"discussion_content":"是这样的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73542,"user_name":"程序员星星toC","can_delete":false,"product_type":"c1","uid":1218860,"ip_address":"","ucode":"2581BCBB3DC089","user_header":"https://static001.geekbang.org/account/avatar/00/12/99/2c/faadcfbc.jpg","comment_is_top":false,"comment_ctime":1551922043,"is_pvip":false,"replies":[{"id":"26884","content":"其实我是想让大家注意别锁漏了，优化下一期会讲<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551959771,"ip_address":"","comment_id":73542,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551922043","product_id":100023901,"comment_content":"总结一下，这篇文章就是讲的锁可以锁类，也可以锁对象，只是力度不同。。这个案例，在实际开发场景用，要造成多大的阻塞。。。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442144,"discussion_content":"其实我是想让大家注意别锁漏了，优化下一期会讲\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551959771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73536,"user_name":"ack","can_delete":false,"product_type":"c1","uid":1440912,"ip_address":"","ucode":"69CA1233EEA8E2","user_header":"https://static001.geekbang.org/account/avatar/00/15/fc/90/c9df0459.jpg","comment_is_top":false,"comment_ctime":1551921485,"is_pvip":false,"replies":[{"id":"26888","content":"锁的不是内存地址，就是对象。基本类型包装程对象后语法上是可以作为锁的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551960148,"ip_address":"","comment_id":73536,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551921485","product_id":100023901,"comment_content":"不能吧，基本类型放在堆栈里面，传的是值。对象放在堆里面传的是地址，而synchronized锁的是对象的内存地址。所以所有对象都可以作为锁，基本类型应该是不行的。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442141,"discussion_content":"锁的不是内存地址，就是对象。基本类型包装程对象后语法上是可以作为锁的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73534,"user_name":"书策稠浊","can_delete":false,"product_type":"c1","uid":1307497,"ip_address":"","ucode":"A29875CE15FDA3","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","comment_is_top":false,"comment_ctime":1551921120,"is_pvip":false,"replies":[{"id":"26890","content":"是的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551960180,"ip_address":"","comment_id":73534,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551921120","product_id":100023901,"comment_content":"不可以，因为锁住修改之后就不是原来那个对象了。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442139,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73531,"user_name":"苏志辉","can_delete":false,"product_type":"c1","uid":1068927,"ip_address":"","ucode":"39B25CE21C04EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7f/5dc11380.jpg","comment_is_top":false,"comment_ctime":1551920900,"is_pvip":false,"replies":[{"id":"26856","content":"是这样的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551956993,"ip_address":"","comment_id":73531,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551920900","product_id":100023901,"comment_content":"思考题，应该不能，作为锁的对象是不能改变的，锁是存放在对象头中的，变了以后变不是同一把锁，没有互斥性","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442136,"discussion_content":"是这样的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551956993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73523,"user_name":"Solitary_J","can_delete":false,"product_type":"c1","uid":1442034,"ip_address":"","ucode":"E1E0AE4A6231BF","user_header":"https://static001.geekbang.org/account/avatar/00/16/00/f2/66a1461d.jpg","comment_is_top":false,"comment_ctime":1551920056,"is_pvip":false,"replies":[{"id":"26854","content":"是的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551956928,"ip_address":"","comment_id":73523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551920056","product_id":100023901,"comment_content":"不行，每个实例的this不同，锁住锁住的不是同一个对象","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442129,"discussion_content":"是的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551956928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73517,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1551919548,"is_pvip":false,"replies":[{"id":"26869","content":"不可以，对象有改变的可能","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551958263,"ip_address":"","comment_id":73517,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551919548","product_id":100023901,"comment_content":"虽然对象值会更改，但是对象不会变，还是同一个对象，是还可以作为互斥对象的","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442125,"discussion_content":"不可以，对象有改变的可能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551958263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73516,"user_name":"yang","can_delete":false,"product_type":"c1","uid":1226705,"ip_address":"","ucode":"9FE1D02DF0F103","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJupkAwlMPemsyBhOT2BWJPnyicAqQhH731C7uV5fXjz9DicxO0eySia1JLqeMXAkQlFZZ41uXsw1I7g/132","comment_is_top":false,"comment_ctime":1551919532,"is_pvip":false,"replies":[{"id":"26894","content":"都不可以","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551960381,"ip_address":"","comment_id":73516,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551919532","product_id":100023901,"comment_content":"banlance可以，因为用的是堆中对象的地址，当其值改变时，引用地址不变；password不可以，因为string是存在堆中的常量池中，如果值变了，引用关系也变了，所以就是不同的锁对象了。<br>个人理解，敬请指正","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442124,"discussion_content":"都不可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73515,"user_name":"新世界","can_delete":false,"product_type":"c1","uid":1079495,"ip_address":"","ucode":"4473DC1505F158","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","comment_is_top":false,"comment_ctime":1551919503,"is_pvip":false,"replies":[{"id":"26867","content":"正确<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551957973,"ip_address":"","comment_id":73515,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551919503","product_id":100023901,"comment_content":"不可行，java的integer和string代码有采用享元模式，比如Integer.valueOf创建两个都是1的对象，其实本质是一个对象吧，如果在这个对象上加锁，粒度太粗了","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442123,"discussion_content":"正确\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551957973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73509,"user_name":"Rayjun","can_delete":false,"product_type":"c1","uid":1002514,"ip_address":"","ucode":"61A3D1A3D03569","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","comment_is_top":false,"comment_ctime":1551919073,"is_pvip":true,"replies":[{"id":"26898","content":"不可以<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551960563,"ip_address":"","comment_id":73509,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551919073","product_id":100023901,"comment_content":"可以的，因为 this.balance 和 this.password 相互之间是没有关系的，可以分别用做保护自己的锁","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442120,"discussion_content":"不可以\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73502,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1551918418,"is_pvip":false,"replies":[{"id":"26914","content":"是这样的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551964665,"ip_address":"","comment_id":73502,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551918418","product_id":100023901,"comment_content":"不可行，假设余额是100。只是锁了100。如果值更改成200。其他线程发现锁的是100，而当前值并不是100，也可以进去临界区","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442117,"discussion_content":"是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551964665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73499,"user_name":"无庸","can_delete":false,"product_type":"c1","uid":1120675,"ip_address":"","ucode":"9F61D1BF0FB4BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/a3/600bc13d.jpg","comment_is_top":false,"comment_ctime":1551918155,"is_pvip":true,"replies":[{"id":"26913","content":"结论正确，理由没看懂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551964646,"ip_address":"","comment_id":73499,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551918155","product_id":100023901,"comment_content":"不可以的。不同对象实例的this 是不同的对象。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442116,"discussion_content":"结论正确，理由没看懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551964646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73498,"user_name":"沙漠里的骆驼","can_delete":false,"product_type":"c1","uid":1012559,"ip_address":"","ucode":"5EC18A71B3A594","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/4f/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1551918113,"is_pvip":true,"replies":[{"id":"26908","content":"结论是对的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551962556,"ip_address":"","comment_id":73498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551918113","product_id":100023901,"comment_content":"个人感觉不可行；<br>因为Integer对象是不可变的，每次更新时是new了一个新对象。所以在A线程对balance做变更的时候，导致this.balance对象发生变化，而B线程此时是可以进入临界区的(锁已经是新锁)，而进入临界区的时候对象甚至可能未初始化。<br>","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442115,"discussion_content":"结论是对的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551962556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73497,"user_name":"Geek_693587","can_delete":false,"product_type":"c1","uid":1399988,"ip_address":"","ucode":"18A62FD88AEA25","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJMWl3EYJ7sNZVH468kicYjJ3xBWPyc1r02iaRs7vibIAvt8AbnKxMCKbjXkuXaC0sBYlbYWTXQtOfuA/132","comment_is_top":false,"comment_ctime":1551918101,"is_pvip":false,"replies":[{"id":"26896","content":"不可以<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551960499,"ip_address":"","comment_id":73497,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551918101","product_id":100023901,"comment_content":"考虑密码和余额这两个资源没有关联关系，所以这两个资源使用各自的锁来控制自身的操作，是完全没有问题的。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442114,"discussion_content":"不可以\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73492,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1551917598,"is_pvip":false,"replies":[{"id":"26897","content":"引申后就复杂了<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551960539,"ip_address":"","comment_id":73492,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551917598","product_id":100023901,"comment_content":"在第一个示例程序里，我们用了两把不同的锁来分别保护账户余额、账户密码，创建锁的时候，我们用的是：private final Object xxxLock = new Object();，如果账户余额用 this.balance 作为互斥锁，账户密码用 this.password 作为互斥锁，你觉得是否可以呢？<br><br>用this.balance this.password 相当于私有锁 可以作为业务与其他Account没有关联关系的锁 如果要用this.balance this.password 放在关联其他Account的业务中，恐怕还是一把this.xx锁不够用，还是用共享所靠谱一点吧？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442112,"discussion_content":"引申后就复杂了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551960539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73488,"user_name":"Kid😋","can_delete":false,"product_type":"c1","uid":1317216,"ip_address":"","ucode":"7150F69AAAB477","user_header":"https://static001.geekbang.org/account/avatar/00/14/19/60/888f1371.jpg","comment_is_top":false,"comment_ctime":1551916821,"is_pvip":false,"replies":[{"id":"26860","content":"可以使用静态对象<br>思考题那个不可以<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551957276,"ip_address":"","comment_id":73488,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551916821","product_id":100023901,"comment_content":"定义一个静态对象也可以作为互斥锁管理多个关联的资源<br>思考题:可以的 每个账户只访问自身的资源","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442109,"discussion_content":"可以使用静态对象\n思考题那个不可以\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551957276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73487,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1551916779,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551916779","product_id":100023901,"comment_content":"对象锁 类锁","like_count":0},{"had_liked":false,"id":73485,"user_name":"孙悟空","can_delete":false,"product_type":"c1","uid":1055660,"ip_address":"","ucode":"28356CBC83C464","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/ac/41ec8c80.jpg","comment_is_top":false,"comment_ctime":1551916744,"is_pvip":false,"replies":[{"id":"26866","content":"正确<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551957937,"ip_address":"","comment_id":73485,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551916744","product_id":100023901,"comment_content":"思考题，不行。<br>Java里的对象变量仅仅是一个引用，每次写入这两个成员变量后，他们指向的对象都会发生变化，所以对应的锁不止一个。多线程写入时，会出现多个锁保护同一个资源的情况。就会出现不止一个线程可以进去临界区的问题。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442107,"discussion_content":"正确\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551957937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73480,"user_name":"Geek_c42505","can_delete":false,"product_type":"c1","uid":1232899,"ip_address":"","ucode":"6421EB85640C44","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/03/2e632d36.jpg","comment_is_top":false,"comment_ctime":1551915491,"is_pvip":false,"replies":[{"id":"26865","content":"是的，不能改变<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1551957915,"ip_address":"","comment_id":73480,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551915491","product_id":100023901,"comment_content":"不可以吧，锁在运行期间不能改变锁值吧，值改变了怎么锁住？  ","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442105,"discussion_content":"是的，不能改变\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551957915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}