{"id":11289,"title":"01 | Java代码是怎么运行的？","content":"<p>我们学院的一位教授之前去美国开会，入境的时候海关官员就问他：既然你会计算机，那你说说你用的都是什么语言吧？</p>\n<p>教授随口就答了个Java。海关一看是懂行的，也就放行了，边敲章还边说他们上学那会学的是C+。我还特意去查了下，真有叫C+的语言，但是这里海关官员应该指的是C++。</p>\n<p>事后教授告诉我们，他当时差点就问海关，是否知道Java和C++在运行方式上的区别。但是又担心海关官员拿他的问题来考别人，也就没问出口。那么，下次你去美国，不幸地被海关官员问这个问题，你懂得如何回答吗？</p>\n<p>作为一名Java程序员，你应该知道，Java代码有很多种不同的运行方式。比如说可以在开发工具中运行，可以双击执行jar文件运行，也可以在命令行中运行，甚至可以在网页中运行。当然，这些执行方式都离不开JRE，也就是Java运行时环境。</p>\n<p>实际上，JRE仅包含运行Java程序的必需组件，包括Java虚拟机以及Java核心类库等。我们Java程序员经常接触到的JDK（Java开发工具包）同样包含了JRE，并且还附带了一系列开发、诊断工具。</p>\n<p>然而，运行C++代码则无需额外的运行时。我们往往把这些代码直接编译成CPU所能理解的代码格式，也就是机器码。</p><!-- [[[read_end]]] -->\n<p>比如下图的中间列，就是用C语言写的Helloworld程序的编译结果。可以看到，C程序编译而成的机器码就是一个个的字节，它们是给机器读的。那么为了让开发人员也能够理解，我们可以用反汇编器将其转换成汇编代码（如下图的最右列所示）。</p>\n<pre><code>; 最左列是偏移；中间列是给机器读的机器码；最右列是给人读的汇编代码\n0x00:  55                    push   rbp\n0x01:  48 89 e5              mov    rbp,rsp\n0x04:  48 83 ec 10           sub    rsp,0x10\n0x08:  48 8d 3d 3b 00 00 00  lea    rdi,[rip+0x3b] \n                                    ; 加载&quot;Hello, World!\\n&quot;\n0x0f:  c7 45 fc 00 00 00 00  mov    DWORD PTR [rbp-0x4],0x0\n0x16:  b0 00                 mov    al,0x0\n0x18:  e8 0d 00 00 00        call   0x12\n                                    ; 调用printf方法\n0x1d:  31 c9                 xor    ecx,ecx\n0x1f:  89 45 f8              mov    DWORD PTR [rbp-0x8],eax\n0x22:  89 c8                 mov    eax,ecx\n0x24:  48 83 c4 10           add    rsp,0x10\n0x28:  5d                    pop    rbp\n0x29:  c3                    ret\n</code></pre>\n<p>既然C++的运行方式如此成熟，那么你有没有想过，为什么Java要在虚拟机中运行呢，Java虚拟机具体又是怎样运行Java代码的呢，它的运行效率又如何呢？</p>\n<p>今天我便从这几个问题入手，和你探讨一下，Java执行系统的主流实现以及设计决策。</p>\n<h2>为什么Java要在虚拟机里运行？</h2>\n<p>Java作为一门高级程序语言，它的语法非常复杂，抽象程度也很高。因此，直接在硬件上运行这种复杂的程序并不现实。所以呢，在运行Java程序之前，我们需要对其进行一番转换。</p>\n<p>这个转换具体是怎么操作的呢？当前的主流思路是这样子的，设计一个面向Java语言特性的虚拟机，并通过编译器将Java程序转换成该虚拟机所能识别的指令序列，也称Java字节码。这里顺便说一句，之所以这么取名，是因为Java字节码指令的操作码（opcode）被固定为一个字节。</p>\n<p>举例来说，下图的中间列，正是用Java写的Helloworld程序编译而成的字节码。可以看到，它与C版本的编译结果一样，都是由一个个字节组成的。</p>\n<p>并且，我们同样可以将其反汇编为人类可读的代码格式（如下图的最右列所示）。不同的是，Java版本的编译结果相对精简一些。这是因为Java虚拟机相对于物理机而言，抽象程度更高。</p>\n<pre><code># 最左列是偏移；中间列是给虚拟机读的机器码；最右列是给人读的代码\n0x00:  b2 00 02         getstatic java.lang.System.out\n0x03:  12 03            ldc &quot;Hello, World!&quot;\n0x05:  b6 00 04         invokevirtual java.io.PrintStream.println\n0x08:  b1               return\n</code></pre>\n<p>Java虚拟机可以由硬件实现[1]，但更为常见的是在各个现有平台（如Windows_x64、Linux_aarch64）上提供软件实现。这么做的意义在于，一旦一个程序被转换成Java字节码，那么它便可以在不同平台上的虚拟机实现里运行。这也就是我们经常说的“一次编写，到处运行”。</p>\n<p>虚拟机的另外一个好处是它带来了一个托管环境（Managed Runtime）。这个托管环境能够代替我们处理一些代码中冗长而且容易出错的部分。其中最广为人知的当属自动内存管理与垃圾回收，这部分内容甚至催生了一波垃圾回收调优的业务。</p>\n<p>除此之外，托管环境还提供了诸如数组越界、动态类型、安全权限等等的动态检测，使我们免于书写这些无关业务逻辑的代码。</p>\n<h2>Java虚拟机具体是怎样运行Java字节码的？</h2>\n<p>下面我将以标准JDK中的HotSpot虚拟机为例，从虚拟机以及底层硬件两个角度，给你讲一讲Java虚拟机具体是怎么运行Java字节码的。</p>\n<p>从虚拟机视角来看，执行Java代码首先需要将它编译而成的class文件加载到Java虚拟机中。加载后的Java类会被存放于方法区（Method Area）中。实际运行时，虚拟机会执行方法区内的代码。</p>\n<p>如果你熟悉X86的话，你会发现这和段式内存管理中的代码段类似。而且，Java虚拟机同样也在内存中划分出堆和栈来存储运行时数据。</p>\n<p>不同的是，Java虚拟机会将栈细分为面向Java方法的Java方法栈，面向本地方法（用C++写的native方法）的本地方法栈，以及存放各个线程执行位置的PC寄存器。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/ab/77/ab5c3523af08e0bf2f689c1d6033ef77.png?wh=1916*1074\" alt=\"\" /></p>\n<p>在运行过程中，每当调用进入一个Java方法，Java虚拟机会在当前线程的Java方法栈中生成一个栈帧，用以存放局部变量以及字节码的操作数。这个栈帧的大小是提前计算好的，而且Java虚拟机不要求栈帧在内存空间里连续分布。</p>\n<p>当退出当前执行的方法时，不管是正常返回还是异常返回，Java虚拟机均会弹出当前线程的当前栈帧，并将之舍弃。</p>\n<p>从硬件视角来看，Java字节码无法直接执行。因此，Java虚拟机需要将字节码翻译成机器码。</p>\n<p>在HotSpot里面，上述翻译过程有两种形式：第一种是解释执行，即逐条将字节码翻译成机器码并执行；第二种是即时编译（Just-In-Time compilation，JIT），即将一个方法中包含的所有字节码编译成机器码后再执行。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/5e/3b/5ee351091464de78eed75438b6f9183b.png?wh=1918*1076\" alt=\"\" /></p>\n<p>前者的优势在于无需等待编译，而后者的优势在于实际运行速度更快。HotSpot默认采用混合模式，综合了解释执行和即时编译两者的优点。它会先解释执行字节码，而后将其中反复执行的热点代码，以方法为单位进行即时编译。</p>\n<h2>Java虚拟机的运行效率究竟是怎么样的？</h2>\n<p>HotSpot采用了多种技术来提升启动性能以及峰值性能，刚刚提到的即时编译便是其中最重要的技术之一。</p>\n<p>即时编译建立在程序符合二八定律的假设上，也就是百分之二十的代码占据了百分之八十的计算资源。</p>\n<p>对于占据大部分的不常用的代码，我们无需耗费时间将其编译成机器码，而是采取解释执行的方式运行；另一方面，对于仅占据小部分的热点代码，我们则可以将其编译成机器码，以达到理想的运行速度。</p>\n<p>理论上讲，即时编译后的Java程序的执行效率，是可能超过C++程序的。这是因为与静态编译相比，即时编译拥有程序的运行时信息，并且能够根据这个信息做出相应的优化。</p>\n<p>举个例子，我们知道虚方法是用来实现面向对象语言多态性的。对于一个虚方法调用，尽管它有很多个目标方法，但在实际运行过程中它可能只调用其中的一个。</p>\n<p>这个信息便可以被即时编译器所利用，来规避虚方法调用的开销，从而达到比静态编译的C++程序更高的性能。</p>\n<p>为了满足不同用户场景的需要，HotSpot内置了多个即时编译器：C1、C2和Graal。Graal是Java 10正式引入的实验性即时编译器，在专栏的第四部分我会详细介绍，这里暂不做讨论。</p>\n<p>之所以引入多个即时编译器，是为了在编译时间和生成代码的执行效率之间进行取舍。C1又叫做Client编译器，面向的是对启动性能有要求的客户端GUI程序，采用的优化手段相对简单，因此编译时间较短。</p>\n<p>C2又叫做Server编译器，面向的是对峰值性能有要求的服务器端程序，采用的优化手段相对复杂，因此编译时间较长，但同时生成代码的执行效率较高。</p>\n<p>从Java 7开始，HotSpot默认采用分层编译的方式：热点方法首先会被C1编译，而后热点方法中的热点会进一步被C2编译。</p>\n<p>为了不干扰应用的正常运行，HotSpot的即时编译是放在额外的编译线程中进行的。HotSpot会根据CPU的数量设置编译线程的数目，并且按1:2的比例配置给C1及C2编译器。</p>\n<p>在计算资源充足的情况下，字节码的解释执行和即时编译可同时进行。编译完成后的机器码会在下次调用该方法时启用，以替换原本的解释执行。</p>\n<h2>总结与实践</h2>\n<p>今天我简单介绍了Java代码为何在虚拟机中运行，以及如何在虚拟机中运行。</p>\n<p>之所以要在虚拟机中运行，是因为它提供了可移植性。一旦Java代码被编译为Java字节码，便可以在不同平台上的Java虚拟机实现上运行。此外，虚拟机还提供了一个代码托管的环境，代替我们处理部分冗长而且容易出错的事务，例如内存管理。</p>\n<p>Java虚拟机将运行时内存区域划分为五个部分，分别为方法区、堆、PC寄存器、Java方法栈和本地方法栈。Java程序编译而成的class文件，需要先加载至方法区中，方能在Java虚拟机中运行。</p>\n<p>为了提高运行效率，标准JDK中的HotSpot虚拟机采用的是一种混合执行的策略。</p>\n<p>它会解释执行Java字节码，然后会将其中反复执行的热点代码，以方法为单位进行即时编译，翻译成机器码后直接运行在底层硬件之上。</p>\n<p>HotSpot装载了多个不同的即时编译器，以便在编译时间和生成代码的执行效率之间做取舍。</p>\n<p>下面我给你留一个小作业，通过观察两个条件判断语句的运行结果，来思考Java语言和Java虚拟机看待boolean类型的方式是否不同。</p>\n<p>下载asmtools.jar  [2]  ，并在命令行中运行下述指令（不包含提示符$）：</p>\n<pre><code>$ echo '\npublic class Foo {\n public static void main(String[] args) {\n  boolean flag = true;\n  if (flag) System.out.println(&quot;Hello, Java!&quot;);\n  if (flag == true) System.out.println(&quot;Hello, JVM!&quot;);\n }\n}' &gt; Foo.java\n$ javac Foo.java\n$ java Foo\n$ java -cp /path/to/asmtools.jar org.openjdk.asmtools.jdis.Main Foo.class &gt; Foo.jasm.1\n$ awk 'NR==1,/iconst_1/{sub(/iconst_1/, &quot;iconst_2&quot;)} 1' Foo.jasm.1 &gt; Foo.jasm\n$ java -cp /path/to/asmtools.jar org.openjdk.asmtools.jasm.Main Foo.jasm\n$ java Foo\n\n</code></pre>\n<p>[1] : <a href=\"https://en.wikipedia.org/wiki/Java_processor\">https://en.wikipedia.org/wiki/Java_processor</a><br />\n[2]: <a href=\"https://wiki.openjdk.java.net/display/CodeTools/asmtools\">https://wiki.openjdk.java.net/display/CodeTools/asmtools</a></p>\n<p></p>\n","neighbors":{"left":{"article_title":"开篇词 | 为什么我们要学习Java虚拟机？","id":11074},"right":{"article_title":"02 | Java的基本类型","id":11503}},"comments":[{"had_liked":false,"id":32188,"user_name":"jiaobuchongจุ๊บ","can_delete":false,"product_type":"c1","uid":1118938,"ip_address":"","ucode":"0AEE4E579DC3A2","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/da/a3ea305f.jpg","comment_is_top":true,"comment_ctime":1539480712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233724421211996e+18","product_id":100010301,"comment_content":"对老师写的那段 awk 不懂得可参考：<br>https:&#47;&#47;blog.csdn.net&#47;jiaobuchong&#47;article&#47;details&#47;83037467","like_count":95},{"had_liked":false,"id":17372,"user_name":"小名叫大明","can_delete":false,"product_type":"c1","uid":1129317,"ip_address":"","ucode":"4804D68A396B40","user_header":"https://static001.geekbang.org/account/avatar/00/11/3b/65/203298ce.jpg","comment_is_top":true,"comment_ctime":1532601971,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"9.2233722402508001e+18","product_id":100010301,"comment_content":"受益匪浅，多谢老师。 <br><br>请教老师一个问题，网上我没有搜到。 <br><br>服务器线程数爆满，使用jstack打印线程堆栈信息，想知道是哪类线程数太多，但是堆栈里全是一样的信息且没有任何关键信息，是哪个方法创建的，以及哪个线程池的都看不到。 <br><br>如何更改打印线程堆栈信息的代码（动态）让其打印线程池信息呢？","like_count":48,"discussions":[{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329311,"discussion_content":"所以阿里的JAVA开发规范要求线程池必须要有名字。这样你就可以看到是那些线程比较多。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1606365468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041764,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/27/a4/c5b2c0f6.jpg","nickname":"救赎","note":"","ucode":"87E17AF20F23EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306644,"discussion_content":"是不是可以把虚拟机理解成面向java的操作系统？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600339446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1129317,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3b/65/203298ce.jpg","nickname":"小名叫大明","note":"","ucode":"4804D68A396B40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2041764,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/27/a4/c5b2c0f6.jpg","nickname":"救赎","note":"","ucode":"87E17AF20F23EA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325595,"discussion_content":"操作系统的定义是什么？有几分贴近\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605359626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":306644,"ip_address":""},"score":325595,"extra":""}]},{"author":{"id":1132636,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/5c/3e46e189.jpg","nickname":"Kai","note":"","ucode":"375475599FE136","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324814,"discussion_content":"用arthas看下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605174214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16649,"user_name":"曲东方","can_delete":false,"product_type":"c1","uid":1177819,"ip_address":"","ucode":"6C3EA2F47A0B98","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/db/c4edf697.jpg","comment_is_top":false,"comment_ctime":1532069216,"is_pvip":false,"replies":[{"id":"5775","content":"字节码高手！","user_name":"作者回复","comment_id":16649,"uid":"1176688","ip_address":"","utype":1,"ctime":1532069899,"user_name_real":"郑雨迪"}],"discussion_count":10,"race_medal":0,"score":"1775353562464","product_id":100010301,"comment_content":"jvm把boolean当做int来处理<br><br>flag = iconst_1 = true<br><br>awk把stackframe中的flag改为iconst_2<br><br>if（flag）比较时ifeq指令做是否为零判断，常数2仍为true，打印输出<br><br>if（true == flag）比较时if_cmpne做整数比较，iconst_1是否等于flag，比较失败，不再打印输出<br><br><br>","like_count":414,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420888,"discussion_content":"字节码高手！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532069899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221229,"discussion_content":"iconst_2 的意思是声明一个变量值，值为2？ 老师是不是讲讲字节码的含义呀，完全看不懂","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585991824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2139807,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a6/9f/3c60fffd.jpg","nickname":"青阳","note":"","ucode":"3591D366BAB0B9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580486,"discussion_content":"if_cmpne中的ne是不等吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658211208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027732,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/kE30Q64dia7425Svq031VibBqtlwoMibsQY2d0Pkq4MEOAaVkmqxdgdLDFhgxAG5uE0fBWkjMULDQbFk2Wib22I2dw/132","nickname":"lonelyma1021","note":"","ucode":"D1A1AC8CC1E11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554522,"discussion_content":"iconst_2并不是一个变量名，它标识一个值为2的整型常量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646444866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165671,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/67/0f74bf61.jpg","nickname":"昵称还没想好。","note":"","ucode":"21E6001F29951B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412979,"discussion_content":"&#39;if（true == flag）比较时if_cmpne做整数比较&#39; 对应的字节码指令应该是 &#39;if_icmpne&#39;, 参考 https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-6.html#jvms-6.5.if_icmp_cond","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636351585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105513,"avatar":"https://static001.geekbang.org/account/avatar/00/10/de/69/113da382.jpg","nickname":"宇飞","note":"","ucode":"D64C53CD189164","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398693,"discussion_content":"awk是啥，是linux里的awk命令吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632832476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1333397,"avatar":"https://static001.geekbang.org/account/avatar/00/14/58/95/672bf5aa.jpg","nickname":"客户程序员จุ๊บ","note":"","ucode":"AD2DB3623183ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289207,"discussion_content":"为啥子我编译出来的class文件中并不是int","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594025932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1087239,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/07/0b8fec32.jpg","nickname":"东东","note":"","ucode":"5FE39933B0A2DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271336,"discussion_content":"明白了，非常感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590118748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134244,"discussion_content":"不理解上面回答者讲的，\nawk把stackframe中的flag改为iconst_2，修改前的flag = iconst_1 = true不是成了flag = iconst_2 = true吗？\n那这样的赋值方式后面的if (flag == true)和上一句的比较结果不是一样吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579013482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1064902,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3f/c6/c2bf55bd.jpg","nickname":"devilyaos","note":"","ucode":"5FE075608F03F7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233033,"discussion_content":"true还是iconst_1吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586904896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":134244,"ip_address":""},"score":233033,"extra":""}]}]},{"had_liked":false,"id":16600,"user_name":"novembersky","can_delete":false,"product_type":"c1","uid":1108385,"ip_address":"","ucode":"2EFC360F16637E","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/a1/2fe5b97a.jpg","comment_is_top":false,"comment_ctime":1532049109,"is_pvip":false,"replies":[{"id":"5756","content":"问得好！事实上JVM确实有考虑做AOT (ahead of time compilation) 这种事情。AOT能够在线下将Java字节码编译成机器码，主要是用来解决启动性能不好的问题。<br><br>对于这种发布频率不频繁(也就是长时间运行吧？)的程序，其实选择线下编译和即时编译都一样，因为至多一两个小时后该即时编译的都已经编译完成了。另外，即时编译器因为有程序的运行时信息，优化效果更好，也就是说峰值性能更好。","user_name":"作者回复","comment_id":16600,"uid":"1176688","ip_address":"","utype":1,"ctime":1532065626,"user_name_real":"郑雨迪"}],"discussion_count":7,"race_medal":0,"score":"607122437845","product_id":100010301,"comment_content":"文中提到虚拟机会把部分热点代码编译成机器码，我有个疑问，为什么不把java代码全部编译成机器码？很多服务端应用发布频率不会太频繁，但是对运行时的性能和吞吐量要求较高。如果发布或启动时多花点时间编译，能够带来运行时的持久性能收益，不是很合适么？","like_count":140,"discussions":[{"author":{"id":1648999,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/67/fc61a741.jpg","nickname":"田小麦","note":"","ucode":"4C10997F6173ED","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542750,"discussion_content":"这个问题确实问的好！！！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1640833516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420864,"discussion_content":"问得好！事实上JVM确实有考虑做AOT (ahead of time compilation) 这种事情。AOT能够在线下将Java字节码编译成机器码，主要是用来解决启动性能不好的问题。\n\n对于这种发布频率不频繁(也就是长时间运行吧？)的程序，其实选择线下编译和即时编译都一样，因为至多一两个小时后该即时编译的都已经编译完成了。另外，即时编译器因为有程序的运行时信息，优化效果更好，也就是说峰值性能更好。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1532065626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624590,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ca/0e/5009c5ff.jpg","nickname":"遇见","note":"","ucode":"FAF53CD4C28494","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407899,"discussion_content":"还有一种方法就是预热，如果你预先知道某个方法会被反复执行，可以在程序启动的时候重复调用该方法，这样可以尽早触发JVM将该方法视为热点方法而不用等用户持续调用来触发，从而将其编译成机器码。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635146962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037530,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/17/1a/501544af.jpg","nickname":"Jackz","note":"","ucode":"40665959DC6DF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301729,"discussion_content":"文中提到虚拟机会把部分热点代码编译成机器码，我有个疑问，为什么不把java代码全部编译成机器码？---->这样就相当于C++的静态编译了吧，就不能体现出即时编译时，利用程序的运行时信息，进行优化的好处了。（之前看文档的时候理解了，没记住，看到这位仁兄的评论，也没想起所以然，看了作者的评论，才想起来之前作者说的话，还是理解的不够深呀）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598621591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2051293,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","nickname":"Bumblebee","note":"","ucode":"B879C8A511D08D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571404,"discussion_content":"🚩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652194848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2016514,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c5/02/9981f2ad.jpg","nickname":"心怀架构","note":"","ucode":"631CC20A30E5F4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373613,"discussion_content":"cpu组成原理说机器码比字节码占更多内存，即时编译是对资源和执行效率的一种平衡；同时，如果预变异就跟c++一样，不会有即时编译提高执行速度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620800250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066229,"avatar":"https://static001.geekbang.org/account/avatar/00/10/44/f5/486d696c.jpg","nickname":"ethan","note":"","ucode":"DA70975A40ABE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362154,"discussion_content":"还有一点，有时候程序里代码并不一定会允许，尤其是第三方的包，这些代码就没有必要编译，更别说占用启动时间去编译了，会导致启动很慢。\n这个有点懒加载模式的设计思想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616858850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16644,"user_name":"醉人","can_delete":false,"product_type":"c1","uid":1125481,"ip_address":"","ucode":"65B9F8590FAB0C","user_header":"https://static001.geekbang.org/account/avatar/00/11/2c/69/021420f0.jpg","comment_is_top":false,"comment_ctime":1532065645,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"538402977645","product_id":100010301,"comment_content":"解释执行 执行时才翻译成机器指令，无需保存不占内存。但即时编译类似预编译，编译之后的指令需要保存在内存中，这种方式吃内存，按照二八原则这种混合模式最恰当的，热点代码编译之后放入内存避免重复编译，而其他运行次数较少代码则解释执行，避免占用过多内存","like_count":126,"discussions":[{"author":{"id":2351810,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/BdyGbicsMXzLDeOdUcFAthHrWK7PsWZ55kVK3g5YsCsYaAzCch168zGyXxxMibW2icqM4ibQcTXqm7Rhep5lIt594Q/132","nickname":"Geek_a2edf0","note":"","ucode":"617F6ADB998E57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348695,"discussion_content":"666","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612681087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16680,"user_name":"かっこいすぎる郑一凡","can_delete":false,"product_type":"c1","uid":1178688,"ip_address":"","ucode":"92D961739546B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/40/e0d86fd7.jpg","comment_is_top":false,"comment_ctime":1532094749,"is_pvip":false,"discussion_count":12,"race_medal":0,"score":"431028824349","product_id":100010301,"comment_content":"我想问下，JVM是怎么区别出热点代码和非热点代码的？","like_count":101,"discussions":[{"author":{"id":1119014,"avatar":"https://static001.geekbang.org/account/avatar/00/11/13/26/ea36255d.jpg","nickname":"Ace","note":"","ucode":"CBC5C5EED89708","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263975,"discussion_content":"使用“热点探测”技术统计的，HotSpot VM使用的是基于计数器的热点探测，可参考：https://mp.weixin.qq.com/s/GO2fAeGgaB2jIC02gWp5Aw","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1589275238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1358156,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b9/4c/c2b432e1.jpg","nickname":"虎宝","note":"","ucode":"E25791E831640F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7660,"discussion_content":"方法计数器就是干的这个活","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1567603834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1358156,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b9/4c/c2b432e1.jpg","nickname":"虎宝","note":"","ucode":"E25791E831640F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218007,"discussion_content":"那编译之前又怎么知道的呢？你说的这个运行后才能知道呀，用不至于jvm还有存储记忆功能吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585614242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7660,"ip_address":""},"score":218007,"extra":""},{"author":{"id":1358156,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b9/4c/c2b432e1.jpg","nickname":"虎宝","note":"","ucode":"E25791E831640F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":241013,"discussion_content":"第一次是不知道的，需要运行之后jvm收集信息后才能知道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587393061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218007,"ip_address":""},"score":241013,"extra":""},{"author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1358156,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b9/4c/c2b432e1.jpg","nickname":"虎宝","note":"","ucode":"E25791E831640F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":242965,"discussion_content":"那是不是对于现在公司里build和部署分开，就不存在jvm知道哪些是热点代码，哪些是非热点代码了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587514640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":241013,"ip_address":""},"score":242965,"extra":""}]},{"author":{"id":1165672,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/68/1cf4dcf7.jpg","nickname":"大表哥","note":"","ucode":"B0A7CDD118CB00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240463,"discussion_content":"我理解是：热点方法的识别是先运行起来，通过统计计算得知那个是热点执行区。然后通过及时编译器编译。编译好了下次执行该区域就使用机器码了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587366704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1156039,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a3/c7/eeecb1d9.jpg","nickname":"左耳粉丝","note":"","ucode":"A3A6D54C1DC60C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3856,"discussion_content":"方法被重复执行的次数，每个方法上都有计数的吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1564888147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047851,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fd/2b/2713f2c4.jpg","nickname":"极客蓝色","note":"","ucode":"9320918724BEBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1129,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562320028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17265,"user_name":"MARK","can_delete":false,"product_type":"c1","uid":1126900,"ip_address":"","ucode":"9F429C9C5FEE6A","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/f4/467cf5d7.jpg","comment_is_top":false,"comment_ctime":1532529978,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"388079586618","product_id":100010301,"comment_content":"作业终于做出来~\\(≧▽≦)&#47;~喜大普奔<br>asmtools下载地址：<br>https:&#47;&#47;adopt-openjdk.ci.cloudbees.com&#47;view&#47;OpenJDK&#47;job&#47;asmtools&#47;lastSuccessfulBuild&#47;artifact&#47;asmtools-6.0.tar.gz；<br>先是在window环境里，awk不能使用，看https:&#47;&#47;zh.wikipedia.org&#47;wiki&#47;Awk，AWK是一种优良的文本处理工具，Linux及Unix环境中现有的功能最强大的数据处理引擎之一,于是转战Linux，<br>[root@localhost cqq]# javac Foo.java<br>[root@localhost cqq]# java Foo<br>Hello,Java<br>Hello,JVM<br>[root@localhost cqq]# java -cp &#47;cqq&#47;asmtools.jar org.openjdk.asmtools.jdis.Main Foo.class&gt;Foo.jasm.1<br>[root@localhost cqq]# ls<br>asmtools.jar  Foo.class  Foo.jasm.1  Foo.java<br>[root@localhost cqq]# vi Foo.jasm.1<br>[root@localhost cqq]# awk &#39;NR==1,&#47;iconst_1&#47;{sub(&#47;iconst_1&#47;,&quot;iconst_2&quot;)} 1&#39; Foo.jasm.1&gt;Foo.jasm<br>[root@localhost cqq]# java -cp &#47;cqq&#47;asmtools.jar org.openjdk.asmtools.jasm.Main Foo.jasm<br>[root@localhost cqq]# java Foo<br>Hello,Java<br>结果为啥是这个看点赞第一的高手；<br>另外asmtools使用方式还可以这样子：<br>java -jar asmtools.jar jdis Foo.class&gt;Foo.jasm.1<br>java -jar asmtools.jar jasm Foo.jasm","like_count":90,"discussions":[{"author":{"id":1992424,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep3sqfTQey7eKYgGibLnAvaNj9k8gVvIYKVADicOA3DxmXZcDrAkeM8iaJLruiblmEVUr3q2LOVLvYicTw/132","nickname":"郑先生","note":"","ucode":"AA0BA751C4F132","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277647,"discussion_content":"https://github.com/hengyunabc/hengyunabc.github.io/files/2188258/asmtools-7.0.zip","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591086097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027732,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/kE30Q64dia7425Svq031VibBqtlwoMibsQY2d0Pkq4MEOAaVkmqxdgdLDFhgxAG5uE0fBWkjMULDQbFk2Wib22I2dw/132","nickname":"lonelyma1021","note":"","ucode":"D1A1AC8CC1E11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554525,"discussion_content":"Windows使用awk可以试试cmder","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646445717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014626,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/62/80d0d8d2.jpg","nickname":"leesofte","note":"","ucode":"41F327F87C515A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340173,"discussion_content":"关键windows使用awk得到修改后的jasm是乱码，怎么解啊？执行java -jar asmtools.jar jasm Foo.jasm也没效果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609920989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1072658,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5e/12/c0c4d6f2.jpg","nickname":"Qiubh","note":"","ucode":"3BC33EC44F2FDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209998,"discussion_content":"你提供的下载地址404啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584699639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1630242,"avatar":"https://static001.geekbang.org/account/avatar/00/18/e0/22/0812cfd5.jpg","nickname":"alexy","note":"","ucode":"6ECFC6F6B21816","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134716,"discussion_content":"老哥很认真，我要向你看齐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579047963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16753,"user_name":"之外^Excepts","can_delete":false,"product_type":"c1","uid":1035331,"ip_address":"","ucode":"FD2284F65DB22F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/43/59a9b4ae.jpg","comment_is_top":false,"comment_ctime":1532156127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"289294964959","product_id":100010301,"comment_content":"我只想问，你就没有教授的担忧？万一我拿今天的知识点去问面试者，答不上来咋办？","like_count":66},{"had_liked":false,"id":17036,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1532393585,"is_pvip":false,"replies":[{"id":"5911","content":"总结得非常细致！<br>2-1 其实是这样的，JVM接收字节码，要运行在JVM上只能选择转化为字节码。要是不想在JVM上跑，可以选择直接转化为机器码。<br><br>2-2 类加载会在第三篇详细介绍。<br><br>2-3 具体的划分都是实现细节。你也可以选择全部冗杂在一起。但是这样子做性能较高，因为线程私有的可以不用同步。","user_name":"作者回复","comment_id":17036,"uid":"1176688","ip_address":"","utype":1,"ctime":1532418273,"user_name_real":"郑雨迪"}],"discussion_count":1,"race_medal":0,"score":"216280758385","product_id":100010301,"comment_content":"1:为什么使用JVM？<br>1-1:可以轻松实现Java代码的跨平台执行<br>1-2:JVM提供了一个托管平台，提供内存管理、垃圾回收、编译时动态校验等功能<br>1-3:使用JVM能够让我们的编程工作更轻松、高效节省公司成本，提示社会化的整体快发效率，我们只关注和业务相关的程序逻辑的编写，其他业务无关但对于编程同样重要的事情交给JVM来处理<br><br>2:听完此节的课程的疑惑（之前就没太明白，原期待听完后不再疑惑的）<br>2-1:Java源代码怎么就经过编译变成了Java字节码？<br>2-2:JVM怎么就把Java字节码加载进JVM内了？先加载那个类的字节码？它怎么定位的？拿到后怎么解析的？不会整个文件放到一个地方吧？使用的时候又是怎么找到的呢？这些感觉还是黑盒<br>2-3:JVM将内存区域分成堆和栈，然后又将栈分成pc寄存器、本地方法栈、Java方法栈，有些内存空间是线程可共享的，有些是线程私有的。现在也了解不同的内存区块有不同的用处，不过他们是怎么被划分的哪？为什么是他们，不能再多几种或少几种了吗？共享的内存区和私有的又是怎么控制的哪？","like_count":51,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421016,"discussion_content":"总结得非常细致！\n2-1 其实是这样的，JVM接收字节码，要运行在JVM上只能选择转化为字节码。要是不想在JVM上跑，可以选择直接转化为机器码。\n\n2-2 类加载会在第三篇详细介绍。\n\n2-3 具体的划分都是实现细节。你也可以选择全部冗杂在一起。但是这样子做性能较高，因为线程私有的可以不用同步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532418273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53760,"user_name":"J","can_delete":false,"product_type":"c1","uid":1341858,"ip_address":"","ucode":"00BF667DBA5FBC","user_header":"https://static001.geekbang.org/account/avatar/00/14/79/a2/18815f9c.jpg","comment_is_top":false,"comment_ctime":1545721004,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"207704151212","product_id":100010301,"comment_content":"在Windows使用不了awk工具（貌似有代替方案），所以结合其他小伙伴的答案和自己的思考，答案整理如下：<br>小作业的过程是：<br>1、写Java代码，生成java文件<br>2、将java文件编译成class文件(字节码)<br>3、执行字节码，输出两个Hello,world!<br>4、使用asmtool工具将class文件生成jasm文件<br>5、使用awt工具将jasm文件stackframe的flag改为iconst_2<br>6、再次使用asmtool工具将jasm文件恢复成class文件<br>7、执行字节码，输出一个Hello, world！<br>由于Java虚拟机将boolean类型看成0或者1，在步骤5中将源代码中的flag修改成2，于是在步骤7中的运行过程中，if(2)，true,执行输出；if(2 == 1)，结果为false，不执行输出。","like_count":48,"discussions":[{"author":{"id":1272996,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/a4/7f7c1955.jpg","nickname":"死磕郎一世","note":"","ucode":"86C1197C3FB2A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382635,"discussion_content":"我如果不看评论区，这个作业一头雾水啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625650085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1938009,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/92/59/c453ef7d.jpg","nickname":"UyCode","note":"","ucode":"78084E88C516C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546157,"discussion_content":"如果有已经安装wsl的同学，那么 awk这个命令步骤直接可以wsl来执行，不用额外工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642178976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447410,"avatar":"https://static001.geekbang.org/account/avatar/00/16/15/f2/549c7551.jpg","nickname":"阿呆","note":"","ucode":"7BB84C1F43E335","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531160,"discussion_content":"np\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637243220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16624,"user_name":"Ryan-Hou","can_delete":false,"product_type":"c1","uid":1006864,"ip_address":"","ucode":"5B703C1E1596A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/10/0acf7cbc.jpg","comment_is_top":false,"comment_ctime":1532054945,"is_pvip":false,"replies":[{"id":"5758","content":"多谢指出！这里的直接运行指的是不经过任何转换(编译)，直接在硬件上跑。即便是C++，也不可以直接运行。<br><br>C++的策略是直接编译成目标架构的机器码，Java的策略是编译成一个虚拟架构的机器码。这个虚拟架构可以有物理实现(可以搜Java processor)，也可以是软件实现，也就是我们经常接触到的JRE。","user_name":"作者回复","comment_id":16624,"uid":"1176688","ip_address":"","utype":1,"ctime":1532066097,"user_name_real":"郑雨迪"}],"discussion_count":2,"race_medal":0,"score":"177625714081","product_id":100010301,"comment_content":"在为什么Java要在虚拟机里执行这一节您提到，java语法复杂，抽象度高，直接通过硬件来执行不现实，但是同样作为高级语言为什么C++就可以呢？这个理由作为引入虚拟机这个中间层的原因不是很充分吧","like_count":41,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420877,"discussion_content":"多谢指出！这里的直接运行指的是不经过任何转换(编译)，直接在硬件上跑。即便是C++，也不可以直接运行。\n\nC++的策略是直接编译成目标架构的机器码，Java的策略是编译成一个虚拟架构的机器码。这个虚拟架构可以有物理实现(可以搜Java processor)，也可以是软件实现，也就是我们经常接触到的JRE。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532066097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1070581,"avatar":"https://static001.geekbang.org/account/avatar/00/10/55/f5/8d1588bd.jpg","nickname":"xfun","note":"","ucode":"A9A08E9EA6E13B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287230,"discussion_content":"虚拟机上运行的理由你没说全，应该加上内存动态分派和GC，还有提供编译过程的信息参照优化。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593402805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16924,"user_name":"周仕林","can_delete":false,"product_type":"c1","uid":1180749,"ip_address":"","ucode":"07C9025699FB5A","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/4d/bd86bdc2.jpg","comment_is_top":false,"comment_ctime":1532308186,"is_pvip":false,"replies":[{"id":"5909","content":"谢谢！","user_name":"作者回复","comment_id":16924,"uid":"1176688","ip_address":"","utype":1,"ctime":1532417623,"user_name_real":"郑雨迪"}],"discussion_count":2,"race_medal":0,"score":"156151130842","product_id":100010301,"comment_content":"看到有人说热点代码的区别，在git里面涉及到的热点代码有两种算法，基于采样的热点探测和基于计数器的热点探测。一般采用的都是基于计数器的热点探测，两者的优缺点百度一下就知道了。基于计数器的热点探测又有两个计数器，方法调用计数器，回边计数器，他们在C1和C2又有不同的阈值。😂😂","like_count":36,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420970,"discussion_content":"谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532417623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446784,"avatar":"","nickname":"Geek_3ba85e","note":"","ucode":"106586BF969A80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2856,"discussion_content":"牛逼\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563975183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19950,"user_name":"kernel","can_delete":false,"product_type":"c1","uid":1178523,"ip_address":"","ucode":"934709E941D3C9","user_header":"https://static001.geekbang.org/account/avatar/00/11/fb/9b/4a4893c1.jpg","comment_is_top":false,"comment_ctime":1534175763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"108908358163","product_id":100010301,"comment_content":"评论比文章精彩，学习到更多","like_count":25},{"had_liked":false,"id":55343,"user_name":"尔东","can_delete":false,"product_type":"c1","uid":1360829,"ip_address":"","ucode":"C0983536C63E2A","user_header":"https://static001.geekbang.org/account/avatar/00/14/c3/bd/ec8b3044.jpg","comment_is_top":false,"comment_ctime":1546139040,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"96035419552","product_id":100010301,"comment_content":"1.Java代码首先编译为class文件，然后通过java虚拟机加载到方法区。Java虚拟机是一个独立的进程，执行方法区的代码。<br>2.Java虚拟机把内存分为堆栈两种形式来存储运行时数据，包括线程共有的方法区和堆，以及线程私有的pc计数器，方法栈，naive方法栈<br>3.Java虚拟机将字节码翻译成机器码执行的方法有两种，一种是解释执行，即逐条将字节码翻译成机器码并执行；第二种是即时编译，即将一个方法包含的所有字节码编译成机器码后再执行<br>4.解释执行的好处是无需等待编译，即时编译的好处是速度更快。这里编译的概念并不是代码编译为字节码，而是字节码编译为机器码，字节码编译为机器码是由java虚拟机在运行程序的时候才会去做的，所以是运行时的开销。热点代码会通过即时编译来执行。<br>5.HotSpot内置了多个即时编译器，包括C1、C2和Graal。<br>6.Asmtools.jar下载地址https:&#47;&#47;ci.adoptopenjdk.net&#47;view&#47;Dependencies&#47;job&#47;asmtools&#47;lastSuccessfulBuild&#47;<br>7.JVM将Boolean类型看作是int类型，true就是1，false就是0，flag如果改成2第二个判1等式就不成立，所以只有第一个判0等式通过。","like_count":22,"discussions":[{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40682,"discussion_content":"Java 虚拟机是一个独立的进程，这是是错误的，实际上是你的应用的进程内部启动了一个 Java 虚拟机，可以解释执行 java 字节码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572257818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1549032,"avatar":"","nickname":"Zzz","note":"","ucode":"9323254354868B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237860,"discussion_content":"我的应用内部启动了一个虚拟机？我的应用是什么，是java编写的字节码，字节码怎么运行，是要被虚拟机加载，然后才能跑在虚拟机中，换句话说，不启动虚拟机如何运行字节码，你用ps -ef命令随便看一个java进程，看看是不是由java命令启动的，然后会设置一些Xmx等虚拟机参数，而这就是我们启动的虚拟机进程。。。搞懂问题后再去回答，不要误导别人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587193017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":40682,"ip_address":""},"score":237860,"extra":""},{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1549032,"avatar":"","nickname":"Zzz","note":"","ucode":"9323254354868B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240014,"discussion_content":"你先看清楚，我说的是进程，OK？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587312155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":237860,"ip_address":""},"score":240014,"extra":""},{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1549032,"avatar":"","nickname":"Zzz","note":"","ucode":"9323254354868B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240015,"discussion_content":"你进程都不起来，哪来的虚拟机？虚拟机本质上也是代码，OK？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587312220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":237860,"ip_address":""},"score":240015,"extra":""}]}]},{"had_liked":false,"id":30228,"user_name":"mj4ever","can_delete":false,"product_type":"c1","uid":1005549,"ip_address":"","ucode":"73028E537099CC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/ed/d50de13c.jpg","comment_is_top":false,"comment_ctime":1538731777,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"91733044993","product_id":100010301,"comment_content":"Java语言规范中，boolean类型的只有两种 true和false（false是默认值）；<br>Java虚拟机规范中，boolean类型要转换为int类型，true =&gt; 1，false =&gt; 0；<br>在编译而成的class文件中，除了字段和传入参数外，基本看不出boolean类型：<br>比如，第一次时为：<br>public class Foo {<br>    public Foo() {<br>    }<br>    public static void main(String[] var0) {<br>        byte flag = 1;<br>        if (flag != 0) {<br>            System.out.println(&quot;Hello, Java!&quot;);<br>        }<br>        if (flag == 1) {<br>            System.out.println(&quot;Hello, JVM!&quot;);<br>        }<br>    }<br>}<br>第2次执行时，正则表达式将flag替换为2：<br>public class Foo {<br>    public Foo() {<br>    }<br>    public static void main(String[] var0) {<br>        byte flag = 2;<br>        if (flag != 0) {<br>            System.out.println(&quot;Hello, Java!&quot;);<br>        }<br>        if (flag == 1) {<br>            System.out.println(&quot;Hello, JVM!&quot;);<br>        }<br>    }<br>}","like_count":22,"discussions":[{"author":{"id":1623487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/sPORo6cN3GSVxjHj9nqSAPn7KG4wtSTqNUommjNndpf8qd7bHKHquuldXZfxD5nF1ldy4LeoAQNwSsOgcmWG9w/132","nickname":"守望者","note":"","ucode":"DEE375A5F2D57A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352704,"discussion_content":"class文件中的flag的类型是int，不是byte","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614823384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397351,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/67/fcba0967.jpg","nickname":"zapup","note":"","ucode":"388D6BB5D7B137","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220138,"discussion_content":"漂亮","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585837990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240028,"avatar":"https://static001.geekbang.org/account/avatar/00/12/eb/dc/ae5485bb.jpg","nickname":"PoetAndPoem","note":"","ucode":"5BA46BFE497F32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194413,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583216090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17008,"user_name":"笨笨蛋","can_delete":false,"product_type":"c1","uid":1118744,"ip_address":"","ucode":"5FD8D0E8D453F1","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/18/83293985.jpg","comment_is_top":false,"comment_ctime":1532388846,"is_pvip":false,"replies":[{"id":"5915","content":"刚刚看到一个同学总结了。JVM会统计每个方法被调用了多少次，超过多少次，那就是热点方法。(还有个循环回边计数器，用来编译热循环的。)<br><br>默认的分层编译应该是达到两千调C1，达到一万五调C2。","user_name":"作者回复","comment_id":17008,"uid":"1176688","ip_address":"","utype":1,"ctime":1532419313,"user_name_real":"郑雨迪"}],"discussion_count":4,"race_medal":0,"score":"83136767470","product_id":100010301,"comment_content":"什么时候使用C1，什么时候使用C2，他是怎么区分热点方法的呢？","like_count":19,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421004,"discussion_content":"刚刚看到一个同学总结了。JVM会统计每个方法被调用了多少次，超过多少次，那就是热点方法。(还有个循环回边计数器，用来编译热循环的。)\n\n默认的分层编译应该是达到两千调C1，达到一万五调C2。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532419313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023750,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9f/06/287d77dd.jpg","nickname":"承香墨影","note":"","ucode":"4D6A4D6E1ED29F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381359,"discussion_content":"两千都没达到的时候，调用什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625023024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1575571,"avatar":"https://static001.geekbang.org/account/avatar/00/18/0a/93/a189ec16.jpg","nickname":"Eric","note":"","ucode":"7EB511C384BD7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1023750,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9f/06/287d77dd.jpg","nickname":"承香墨影","note":"","ucode":"4D6A4D6E1ED29F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405773,"discussion_content":"解释执行咯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634643210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381359,"ip_address":""},"score":405773,"extra":""},{"author":{"id":1079811,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7a/03/c9b43b21.jpg","nickname":"BewhY","note":"","ucode":"4BC26D47A79967","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1023750,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9f/06/287d77dd.jpg","nickname":"承香墨影","note":"","ucode":"4D6A4D6E1ED29F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555959,"discussion_content":"完全不自己思考的吗？本来就只有解释执行和即时编译，即时不用了那不只能是解释执行？还能有别的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647141895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381359,"ip_address":""},"score":555959,"extra":""}]}]},{"had_liked":false,"id":18548,"user_name":"ace","can_delete":false,"product_type":"c1","uid":1023232,"ip_address":"","ucode":"B1A740E008A001","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLEr7QAYMfmD6IZxSEHKXTRVGyibI92MLJVmibyQIhwa6yVUtDz9ibsy9kECCSiaaKiaDrjp3tgZkS9Dg/132","comment_is_top":false,"comment_ctime":1533444007,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"74547888039","product_id":100010301,"comment_content":"最后awk那段分析了下。希望分析正确 也对大家有帮助<br>1、NR==1,&#47;iconst_1&#47; 是用于匹配行 匹配第一行到第一个出现iconst_1的行<br>2、{}进行脚本执行。针对第一步中匹配的行执行内置的字符串函数sub 做替换<br>3、1 都会被执行。在awk 1被计算为true，表现为默认操作 print $0 也就是打印整行<br>整体效果是打印所以文本行，但第一个出现iconst_1的做替换。","like_count":17},{"had_liked":false,"id":16604,"user_name":"那我懂你意思了","can_delete":false,"product_type":"c1","uid":1115675,"ip_address":"","ucode":"A2C9D51EFC2668","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/1b/ecd5fffe.jpg","comment_is_top":false,"comment_ctime":1532049243,"is_pvip":false,"replies":[{"id":"5761","content":"JVM里的栈指的应该是Java方法栈和本地方法栈。每个方法调用会在栈上划出一块作为栈帧(stack frame)。栈是由多个栈帧构成的，就好比电影是由一个个帧构成的。","user_name":"作者回复","comment_id":16604,"uid":"1176688","ip_address":"","utype":1,"ctime":1532067376,"user_name_real":"郑雨迪"}],"discussion_count":3,"race_medal":0,"score":"70251525979","product_id":100010301,"comment_content":"老师，那个pc寄存器，本地方法栈，以及方法栈，java方法栈这三个组成的就是我们常统称的栈吧，然后也叫栈帧？","like_count":17,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420865,"discussion_content":"JVM里的栈指的应该是Java方法栈和本地方法栈。每个方法调用会在栈上划出一块作为栈帧(stack frame)。栈是由多个栈帧构成的，就好比电影是由一个个帧构成的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532067376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2698813,"avatar":"https://static001.geekbang.org/account/avatar/00/29/2e/3d/4d7ef0de.jpg","nickname":"聚沙成塔","note":"","ucode":"E516F1DAC6DCBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":551560,"discussion_content":"如果是一个递归方法是不是会一直创建栈帧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645062653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":420865,"ip_address":""},"score":551560,"extra":""},{"author":{"id":1027732,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/kE30Q64dia7425Svq031VibBqtlwoMibsQY2d0Pkq4MEOAaVkmqxdgdLDFhgxAG5uE0fBWkjMULDQbFk2Wib22I2dw/132","nickname":"lonelyma1021","note":"","ucode":"D1A1AC8CC1E11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2698813,"avatar":"https://static001.geekbang.org/account/avatar/00/29/2e/3d/4d7ef0de.jpg","nickname":"聚沙成塔","note":"","ucode":"E516F1DAC6DCBD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554528,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646446574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":551560,"ip_address":""},"score":554528,"extra":""}]}]},{"had_liked":false,"id":16615,"user_name":"踏雪无痕","can_delete":false,"product_type":"c1","uid":1127256,"ip_address":"","ucode":"8BAFDB6326CAA8","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/58/1f1e33d5.jpg","comment_is_top":false,"comment_ctime":1532053226,"is_pvip":false,"replies":[{"id":"5774","content":"堆外内存的话，就把JVM当成普通进程来查找内存泄漏。可以看下Google Performance Tools相关资料","user_name":"作者回复","comment_id":16615,"uid":"1176688","ip_address":"","utype":1,"ctime":1532069697,"user_name_real":"郑雨迪"}],"discussion_count":1,"race_medal":0,"score":"65956562666","product_id":100010301,"comment_content":"您好，我现在所在的项目经常堆外内存占用非常多，超过总内存的70%，请问一下有没有什么方法能观察一下堆外内存有什么内容？","like_count":15,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420871,"discussion_content":"堆外内存的话，就把JVM当成普通进程来查找内存泄漏。可以看下Google Performance Tools相关资料","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532069697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16750,"user_name":"陈树义","can_delete":false,"product_type":"c1","uid":1076264,"ip_address":"","ucode":"AF83C4BDC192B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/6c/28/a1f9f0ad.jpg","comment_is_top":false,"comment_ctime":1532152447,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"61661694591","product_id":100010301,"comment_content":"asmtools.jar 是在哪里下载的，怎么在给的链接页面没找到。","like_count":14,"discussions":[{"author":{"id":1038705,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d9/71/8e38dc01.jpg","nickname":"liin","note":"","ucode":"92AE8958DDED4E","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577620,"discussion_content":"http://hg.openjdk.java.net/code-tools/asmtools/archive/tip.zip 再用这位朋友说的办法使用ant构建 jar即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656235546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1235320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d9/78/8a328299.jpg","nickname":"佳佳大魔王","note":"","ucode":"D5214903D85A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295088,"discussion_content":"我是下载了完整的代码，之后用ant在build.xml位置处运行&#34;ant jar&#34;弄出来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596086361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24533,"user_name":"Phoenix","can_delete":false,"product_type":"c1","uid":1005368,"ip_address":"","ucode":"C51BE4C948755B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/38/ba6a106f.jpg","comment_is_top":false,"comment_ctime":1537111904,"is_pvip":false,"replies":[{"id":"9021","content":"1. 就单条加法字节码而言，解释执行器需要识别字节码，然后将两个操作数从Java方法栈上读取出来并相加，最后将结果存入Java方法栈中。而JIT生成的机器码就只是一个CPU加法指令。<br><br>2. 因为JIT比较费时。如果字节码需要JIT后才跑，那么启动性能会很糟糕","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1537175844,"ip_address":"","comment_id":24533,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53076719456","product_id":100010301,"comment_content":"解释执行是将字节码翻译为机器码，JIT也是将字节码翻译为机器码，为什么JIT就比解释执行要快这么多？<br>如果说JIT检测到是热点代码并且进行优化，那么为什么解释执行不直接就用这种优化去解释字节码？<br>一些比较浅的问题，希望老师能指点一二","like_count":12,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424022,"discussion_content":"1. 就单条加法字节码而言，解释执行器需要识别字节码，然后将两个操作数从Java方法栈上读取出来并相加，最后将结果存入Java方法栈中。而JIT生成的机器码就只是一个CPU加法指令。\n\n2. 因为JIT比较费时。如果字节码需要JIT后才跑，那么启动性能会很糟糕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537175844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16840,"user_name":"志文","can_delete":false,"product_type":"c1","uid":1056111,"ip_address":"","ucode":"27547A5FC2A90D","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/6f/0e552a48.jpg","comment_is_top":false,"comment_ctime":1532247953,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"53071855505","product_id":100010301,"comment_content":"Java 作为一门高级程序语言，它的语法非常复杂，抽象程度非常高，所以不能直接在硬件上执行。所以要引入JAVA虚拟机。<br>我觉得理由不充分，JAVA为什么不能像c++一样直接转成机器码呢？从理论上是可以用编译器来实现这个的功能的。问题在于直接像c++那样编译成机器码，就实现不了跨平台了。那么是不是跨平台才是引入JAVA虚拟机的重要原因呢 。请老师解答","like_count":12,"discussions":[{"author":{"id":1070581,"avatar":"https://static001.geekbang.org/account/avatar/00/10/55/f5/8d1588bd.jpg","nickname":"xfun","note":"","ucode":"A9A08E9EA6E13B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287234,"discussion_content":"虚拟机实现的不只是跨平台，它还做了内存动态管理和GC，要知道JVM的GC可是其他语言比不了的。JVM相当于一个托管，所以你不会为了像C那样的内存管理而发愁。虽然，手动内存管理会更精确一点，跨平台也需要不同平台的虚拟机才可以实现。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593403186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1561051,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d1/db/ef13c49b.jpg","nickname":"Binki","note":"","ucode":"16C8FD358F1196","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286060,"discussion_content":"跨平台确实是很重要的一个原因，看JAVA刚推出来时的宣传口号就知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593045577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115724,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","nickname":"乘风","note":"","ucode":"0420C5535DACB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1575,"discussion_content":"按我的理解也可以直接转为机器码，如AOT编译，但其缺少一部分动态特性，所以仍会在运行时刻做处理。类比如符号引用又分为静态解析和动态连接两种。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562716220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25011,"user_name":"suzuiyue","can_delete":false,"product_type":"c1","uid":1048765,"ip_address":"","ucode":"B01669EB659F57","user_header":"https://static001.geekbang.org/account/avatar/00/10/00/bd/c9b8252a.jpg","comment_is_top":false,"comment_ctime":1537236153,"is_pvip":false,"replies":[{"id":"9155","content":"程序关闭后，即时编译的结果就没了，因此需要再来一遍","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1537259633,"ip_address":"","comment_id":25011,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44486909113","product_id":100010301,"comment_content":"JIT程序重启之后还需要再来一遍吗？","like_count":10,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424163,"discussion_content":"程序关闭后，即时编译的结果就没了，因此需要再来一遍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537259633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433986,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e1/82/1c5d285d.jpg","nickname":"(￣o￣) . z Z","note":"","ucode":"42F97D91001DD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583623,"discussion_content":"这是因为都放在运行时的内存中吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660235182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16671,"user_name":"欲风","can_delete":false,"product_type":"c1","uid":1181577,"ip_address":"","ucode":"AF0E693AB71CC5","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/89/c493c1a0.jpg","comment_is_top":false,"comment_ctime":1532089081,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44481762041","product_id":100010301,"comment_content":"方法区和元空间是一个概念吧，能不能统一说法到jdk8之后的版本～","like_count":10,"discussions":[{"author":{"id":1115724,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","nickname":"乘风","note":"","ucode":"0420C5535DACB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1576,"discussion_content":"方法区是JVM规范，元数据区和永久代都是方法区的具体实现","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1562716256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16638,"user_name":"临风","can_delete":false,"product_type":"c1","uid":1183017,"ip_address":"","ucode":"F4AE2644EDBD41","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/29/3806fe23.jpg","comment_is_top":false,"comment_ctime":1532062092,"is_pvip":false,"replies":[{"id":"5759","content":"通常，对于长时间运行的程序来说，大部分即时编译就发生在前几个小时。<br><br>再之后的即时编译主要是一些非热点代码，以及即时编译器中的bug造成的反复去优化重新编译。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532066428,"ip_address":"","comment_id":16638,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44481735052","product_id":100010301,"comment_content":"我跟楼上的novembersky同学一样疑惑，对于性能要求高的web应用，为什么不直接使用即时编译器在启动时全部编译成机器码呢？虽然启动耗时，但是也是可以接受的","like_count":10,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420884,"discussion_content":"通常，对于长时间运行的程序来说，大部分即时编译就发生在前几个小时。\n\n再之后的即时编译主要是一些非热点代码，以及即时编译器中的bug造成的反复去优化重新编译。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532066428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42704,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1543024027,"is_pvip":false,"replies":[{"id":"15658","content":"反过来。解释执行相当于同声传译，你说一句我翻一句给观众(CPU)听。JIT是线下翻译，可以花时间精简掉你的口语话表达(做编译优化)","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1543311419,"ip_address":"","comment_id":42704,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40197729691","product_id":100010301,"comment_content":"感觉看完后，解释执行和jit的区别还是有点没搞懂。解释执行的意思是:直接将整个字节码码文件转化成机器码，jit的意思是:用到哪段编译哪段?","like_count":9,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430169,"discussion_content":"反过来。解释执行相当于同声传译，你说一句我翻一句给观众(CPU)听。JIT是线下翻译，可以花时间精简掉你的口语话表达(做编译优化)","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1543311419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2159280,"avatar":"","nickname":"Geek_3417f7","note":"","ucode":"70A9C86E7AD7C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535498,"discussion_content":"这个比喻太棒了。解释执行立马展示运行结果的，所以没法太优化。jit则是检测对热点代码在另一个线程好好优化后得到的机器码，有足够的时间可以启用很多优化手段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638453932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16666,"user_name":"Kouichi","can_delete":false,"product_type":"c1","uid":1179387,"ip_address":"","ucode":"3F3580927A6000","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/fb/ae860669.jpg","comment_is_top":false,"comment_ctime":1532085716,"is_pvip":false,"replies":[{"id":"5797","content":"因为实际上会插入一些虚拟机相关的代码，稍微拉低了运行效率。<br><br>至于为什么不采用直接编译的方法，在峰值性能差不多的这个前提下，线下编译和即时编译就是两种选项，各有优缺点。JVM这样做，主要也是看重字节码的可移植性，而牺牲了启动性能。<br><br>另外呢，现代工程语言实现都是抄来抄去的。JVM也引入了AOT编译，在线下将Java代码编译成可链接库。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532097845,"ip_address":"","comment_id":16666,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35891824084","product_id":100010301,"comment_content":"为啥是&quot;理论&quot;上比cpp快...这样看起来 如果都编译成机器码了 应该就是挺快的呀... 那干啥不像Go一样 直接编译成目标平台的机器码... 咋感觉绕了一圈..","like_count":8,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420895,"discussion_content":"因为实际上会插入一些虚拟机相关的代码，稍微拉低了运行效率。\n\n至于为什么不采用直接编译的方法，在峰值性能差不多的这个前提下，线下编译和即时编译就是两种选项，各有优缺点。JVM这样做，主要也是看重字节码的可移植性，而牺牲了启动性能。\n\n另外呢，现代工程语言实现都是抄来抄去的。JVM也引入了AOT编译，在线下将Java代码编译成可链接库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532097845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44260,"user_name":"shuwei","can_delete":false,"product_type":"c1","uid":1271448,"ip_address":"","ucode":"60F9CEF0983620","user_header":"https://static001.geekbang.org/account/avatar/00/13/66/98/95433f67.jpg","comment_is_top":false,"comment_ctime":1543395841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31608166913","product_id":100010301,"comment_content":"留言超精彩，一定要看!!!","like_count":7},{"had_liked":false,"id":16706,"user_name":"xianhai","can_delete":false,"product_type":"c1","uid":1073505,"ip_address":"","ucode":"906578663CEB3E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/61/677e8f92.jpg","comment_is_top":false,"comment_ctime":1532113969,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"31596885041","product_id":100010301,"comment_content":"即时编译生成的代码是只保存在内存中吗？会不会写到磁盘上？如果我怀疑优化后的代码有bug，有办法debug吗？<br>","like_count":7,"discussions":[{"author":{"id":3038168,"avatar":"","nickname":"Geek_98f531","note":"","ucode":"D47D0592BEAC6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578722,"discussion_content":"即时编译的代码会保存到方法区，不会保存在磁盘上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656987730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40683,"discussion_content":"应该是可以保存到磁盘的，之后执行的时候要加载到内存中；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572258031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16660,"user_name":"雾里听风","can_delete":false,"product_type":"c1","uid":1182649,"ip_address":"","ucode":"BE3C0FC51BAA7B","user_header":"","comment_is_top":false,"comment_ctime":1532081659,"is_pvip":false,"replies":[{"id":"5799","content":"这句话不准确。现代编译器一般都分为平台无关的前端和平台相关的后端。如果你要生成某个平台的代码，编译器会选择相应的后端。因此，无论是C编译器还是JIT编译器，都是基于目标CPU的指令集来做优化的。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532098286,"ip_address":"","comment_id":16660,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31596852731","product_id":100010301,"comment_content":"理论上讲，即时编译后的 Java 程序的执行效率，是可能超过 C++ 程序的。<br>我们导师当时是这么解释的，c是所有CPU指令集的交集，而jit可以根据当前的CPU进行优化，调用交集之外的CPU指令集，往往这部分指令集效率很高。<br>作者如何看待这句话？","like_count":7,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420891,"discussion_content":"这句话不准确。现代编译器一般都分为平台无关的前端和平台相关的后端。如果你要生成某个平台的代码，编译器会选择相应的后端。因此，无论是C编译器还是JIT编译器，都是基于目标CPU的指令集来做优化的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532098286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16603,"user_name":"曾泽浩","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1532049221,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31596820293","product_id":100010301,"comment_content":"解释执行和即时执行这里听得有点蒙","like_count":7,"discussions":[{"author":{"id":1115724,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","nickname":"乘风","note":"","ucode":"0420C5535DACB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1577,"discussion_content":"解释执行：拿到字节码指令一边翻译一边执行\n即时编译：是达到编译器编译条件后会提交编译请求，然后执行编译动作，这个时候可能会伴随解释执行，但下一次继续执行该方法时会检测方法入口是否存在编译代码，存在则执行直接编译后的本地代码","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1562716373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88320,"user_name":"Wi1ls努力努力再努力","can_delete":false,"product_type":"c1","uid":1019412,"ip_address":"","ucode":"79D41669BBB42D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/14/7281bdfa.jpg","comment_is_top":false,"comment_ctime":1555904513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27325708289","product_id":100010301,"comment_content":"也可以二进制打开.class文件，直接修改字节码文件041b99修改为051b99，与 awk 一样的效果","like_count":6},{"had_liked":false,"id":27825,"user_name":"大明","can_delete":false,"product_type":"c1","uid":1179422,"ip_address":"","ucode":"EE63B3F69F93BD","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/1e/2a40a5ca.jpg","comment_is_top":false,"comment_ctime":1537950198,"is_pvip":false,"replies":[{"id":"10302","content":"HotSpot是JVM里的引擎，可以理解为JDK中用C++写的部分。Oracle JDK&#47;OpenJDK包括HotSpot。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1538116760,"ip_address":"","comment_id":27825,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27307753974","product_id":100010301,"comment_content":"对不起，听了29篇文章了，至今不太清楚hotspot和openjdk两者之间的关系。","like_count":6,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425044,"discussion_content":"HotSpot是JVM里的引擎，可以理解为JDK中用C++写的部分。Oracle JDK/OpenJDK包括HotSpot。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538116760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2390220,"avatar":"","nickname":"Geek_7e2bb3","note":"","ucode":"42B005C9B7712A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366802,"discussion_content":"查了查，jdk 分为 Oracle 的和 open 的，Oracle 的就是它自己公司写，open 的是有好几个公司 (apple、google 等公司)一起写。至于 hotspot 我感觉就是 JVM 里的核心","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618194050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308200,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f6/28/96e030aa.jpg","nickname":"海无语","note":"","ucode":"0BCBDC09283C0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277162,"discussion_content":"需要清楚 jdk,openjdk, hotspot的关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591010664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16667,"user_name":"Bert.zhu","can_delete":false,"product_type":"c1","uid":1183590,"ip_address":"","ucode":"F54EBEAFBBEFA3","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/66/b188ad18.jpg","comment_is_top":false,"comment_ctime":1532086575,"is_pvip":false,"replies":[{"id":"5794","content":"JVM有两种编译方式，整个方法进行编译，或者对热循环进行编译。后面那种涉及到一个叫on stack replacement的技术。不论是那种，都要比if else的粒度大。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532095078,"ip_address":"","comment_id":16667,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27301890351","product_id":100010301,"comment_content":"老师，对于jvm的即时编译，当方法里有很多if,elseif这样的判断，jvm也是整个方法进行编译，还是只部分编译？","like_count":6,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420896,"discussion_content":"JVM有两种编译方式，整个方法进行编译，或者对热循环进行编译。后面那种涉及到一个叫on stack replacement的技术。不论是那种，都要比if else的粒度大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532095078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16608,"user_name":"Fyypumpkin","can_delete":false,"product_type":"c1","uid":1177843,"ip_address":"","ucode":"A1A56167C35BF0","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/f3/2f4f8eb7.jpg","comment_is_top":false,"comment_ctime":1532049994,"is_pvip":false,"replies":[{"id":"5757","content":"就是Java字节码的反汇编器和汇编器。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532065771,"ip_address":"","comment_id":16608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23006886474","product_id":100010301,"comment_content":"老师，问一下这个asmtools是做什么用的","like_count":5,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420866,"discussion_content":"就是Java字节码的反汇编器和汇编器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532065771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170268,"user_name":"世界和平","can_delete":false,"product_type":"c1","uid":1605455,"ip_address":"","ucode":"9065027275B118","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/SttQqfuIiazh8ZISZjWibV5fQk67T0fVBwmDKuHicWBEBiaBhHzXUs9IGBI3gyljEAM96X5aibTpVdTALNpIbxPUFCg/132","comment_is_top":false,"comment_ctime":1578558921,"is_pvip":false,"replies":[{"id":"66049","content":"在即时编译器完成该方法的编译前，每次执行这里都需要解释执行。编译完成后，也有可能因为种种原因导致虚拟机抛弃这一编译结果。这时候就有可能触发再次编译","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1578579759,"ip_address":"","comment_id":170268,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18758428105","product_id":100010301,"comment_content":"你好  我想问下  解释执行 Java 字节码后，再次执行到这里，还需要再次编译吗","like_count":4,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480911,"discussion_content":"在即时编译器完成该方法的编译前，每次执行这里都需要解释执行。编译完成后，也有可能因为种种原因导致虚拟机抛弃这一编译结果。这时候就有可能触发再次编译","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578579759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38473,"user_name":"YJ","can_delete":false,"product_type":"c1","uid":1257363,"ip_address":"","ucode":"D2CCA265D38E06","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/93/0d4a353b.jpg","comment_is_top":false,"comment_ctime":1542055831,"is_pvip":false,"replies":[{"id":"14098","content":"因为6以上没有对应的字节码了，需要用bipush Sipush ldc 了","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1542279750,"ip_address":"","comment_id":38473,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18721925015","product_id":100010301,"comment_content":"测试了一下，从iconst_1, ..., iconst_5都可以编译成功，但是iconst_6以上就会报错<br><br>```<br>➜  jvm-learn grep -n &quot;iconst_6&quot; Foo.jasm<br>18:\t\ticonst_6;<br>➜  jvm-learn java -cp asmtools.jar org.openjdk.asmtools.jasm.Main Foo.jasm<br>jasm: null<br>null<br>fatal exception<br>Foo.jasm: [18, 253]<br>1 error<br>```<br>请问有人知道为什么吗？","like_count":4,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428710,"discussion_content":"因为6以上没有对应的字节码了，需要用bipush Sipush ldc 了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542279750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38233,"user_name":"崔龙龙","can_delete":false,"product_type":"c1","uid":1033183,"ip_address":"","ucode":"64814D4762B2CD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/df/a704066e.jpg","comment_is_top":false,"comment_ctime":1541995620,"is_pvip":false,"replies":[{"id":"14127","content":"调用到一定次数就会触发即时编译的","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1542281392,"ip_address":"","comment_id":38233,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18721864804","product_id":100010301,"comment_content":"对于占据大部分的不常用的代码，我们无需耗费时间将其编译成机器码，而是采取解释执行的方式运行；<br><br>这是否意味着不常用的代码的多次调用就要多次进行解释执行","like_count":4,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428649,"discussion_content":"调用到一定次数就会触发即时编译的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542281392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1815173,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/AmnOlaibWhqVRJ95ibPqcHDh87FicspaHQaT0hdEqlyTyUDqSv0zQf2avhxFr0DY0IaIVYCNgRU8ibK9wLLibzwyIiaw/132","nickname":"张玉望","note":"","ucode":"BD64061576635F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304120,"discussion_content":"我想问下，调用一定次数就会触发即时编译，那程序比较久，是不是基本都会即时编译？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599474645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36007,"user_name":"Yoph","can_delete":false,"product_type":"c1","uid":1050702,"ip_address":"","ucode":"48E676BA29EC3D","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/4e/87e40222.jpg","comment_is_top":false,"comment_ctime":1540888173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18720757357","product_id":100010301,"comment_content":"awk &#39;NR==1,&#47;iconst_1&#47;{sub(&#47;iconst_1&#47;, &quot;iconst_2&quot;)} 1&#39; Foo.jasm.1 &gt; Foo.jasm是将字节码中的<br>iconst_1修改为了iconst_2，如下代码：<br>\ticonst_2;&#47;&#47;原本为iconst_1<br>\tistore_1;<br>\tiload_1;<br>\tifeq\tL14; &#47;&#47;ifeq当栈顶数值等0时就跳转L14<br>\tgetstatic\tField java&#47;lang&#47;System.out:&quot;Ljava&#47;io&#47;PrintStream;&quot;;<br>\tldc\tString &quot;Hello, Java!&quot;;<br>\tinvokevirtual\tMethod java&#47;io&#47;PrintStream.println:&quot;(Ljava&#47;lang&#47;String;)V&quot;;<br>L14:\tstack_frame_type append;<br>\tlocals_map int;<br>\tiload_1;<br>\ticonst_1;<br>\tif_icmpne\tL27; &#47;&#47;比较栈顶两数值结果不等0时就跳转L27<br>\tgetstatic\tField java&#47;lang&#47;System.out:&quot;Ljava&#47;io&#47;PrintStream;&quot;;<br>\tldc\tString &quot;Hello, JVM!&quot;;<br>\tinvokevirtual\tMethod java&#47;io&#47;PrintStream.println:&quot;(Ljava&#47;lang&#47;String;)V&quot;;<br>L27:\tstack_frame_type same;","like_count":4},{"had_liked":false,"id":35340,"user_name":"spectator","can_delete":false,"product_type":"c1","uid":1064961,"ip_address":"","ucode":"4E2372FE9B356D","user_header":"https://static001.geekbang.org/account/avatar/00/10/40/01/de9f91d8.jpg","comment_is_top":false,"comment_ctime":1540519742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18720388926","product_id":100010301,"comment_content":"按照这个说法，编译为机器码的方法都在JVM外执行，那么这部分的方法是在内存的什么位置，又是通过何种方式被JVM调用的","like_count":4},{"had_liked":false,"id":16801,"user_name":"laoyaozhang","can_delete":false,"product_type":"c1","uid":1181997,"ip_address":"","ucode":"0C9035E95820D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/2d/ba294b1c.jpg","comment_is_top":false,"comment_ctime":1532221099,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18712090283","product_id":100010301,"comment_content":"有一点看了好几个相关文章都没提到，即时编译生成的机器码一般是存到哪里的？是内存吗？ 如果是内存的话，是在给JvM分配的内存呢？还是再单独开辟一块内存？","like_count":5,"discussions":[{"author":{"id":1549032,"avatar":"","nickname":"Zzz","note":"","ucode":"9323254354868B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237901,"discussion_content":"放在codecache里，跟栈一样属于非堆，是jvm进程内存的一部分","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587195875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3038168,"avatar":"","nickname":"Geek_98f531","note":"","ucode":"D47D0592BEAC6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578724,"discussion_content":"放在方法区内","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656988561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16705,"user_name":"mingrui","can_delete":false,"product_type":"c1","uid":1172621,"ip_address":"","ucode":"3124648BCF30D0","user_header":"https://static001.geekbang.org/account/avatar/00/11/e4/8d/66eb10ca.jpg","comment_is_top":false,"comment_ctime":1532107408,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18711976592","product_id":100010301,"comment_content":"安卓ART虚拟机和其他Java虚拟机有什么区别","like_count":4},{"had_liked":false,"id":16664,"user_name":"加多","can_delete":false,"product_type":"c1","uid":1101824,"ip_address":"","ucode":"B2192A2D58C444","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/00/9d05af66.jpg","comment_is_top":false,"comment_ctime":1532083398,"is_pvip":false,"replies":[{"id":"5798","content":"不属于。JVM中的堆是用来存放Java对象的。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532097879,"ip_address":"","comment_id":16664,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18711952582","product_id":100010301,"comment_content":"方法区是不是属于堆的一部分？","like_count":4,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420894,"discussion_content":"不属于。JVM中的堆是用来存放Java对象的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532097879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16590,"user_name":"ᠬᠢᠶᠠᠨ 祁颜·恩和ᠡᠩᠬᠡ","can_delete":false,"product_type":"c1","uid":1179041,"ip_address":"","ucode":"386C933D069B7E","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/a1/de24483a.jpg","comment_is_top":false,"comment_ctime":1532048163,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18711917347","product_id":100010301,"comment_content":"java10的javafx能ppapi吗？我网上没查到该资料。告诉我呗","like_count":4},{"had_liked":false,"id":168352,"user_name":"小寅","can_delete":false,"product_type":"c1","uid":1799896,"ip_address":"","ucode":"4E28A63972125E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlUTMg2fe8GicddkOJz7MDCt078opia2sPEM2p8X1yE2icMDziaScL1NjFu00uurj05rwwxP34Fn3mTw/132","comment_is_top":false,"comment_ctime":1578053285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14462955173","product_id":100010301,"comment_content":"评论太精彩了，多谢大佬们提的高质量问题","like_count":3},{"had_liked":false,"id":89517,"user_name":"Geek_15237d","can_delete":false,"product_type":"c1","uid":1093016,"ip_address":"","ucode":"2958BF2DE601DA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7CIlLxbun5LFhKnPM82kMdxdDqp5qXPgStIdrBsq0G54hVLAVCiaDsuH56x63oG8RVp9zz926LxhA/132","comment_is_top":false,"comment_ctime":1556193267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14441095155","product_id":100010301,"comment_content":"Java虚拟机是如何执行Java字节码的？<br>答:从虚拟机的视角看，执行Java代码首先会将它编译好的以.class结尾的字节码文件加载到虚拟机中并存放在方法区中，虚拟机实际执行的是方法区内的代码。虚拟会把栈细分为运行Java方法的Java方法区，运行本地代码的本地方法区和记录各个线程运行位置的PC寄存，当调用Java方法时，会在Java方法栈中创建一个栈桢，存放运行时的局部变量和字节码的操作数，Java虚拟机不要求栈桢是一个连续的内存结构。当程序结束，无论正常还是异常结束，虚拟机都会弹出栈桢元素，删除栈桢。<br>从硬件角度来看，Java字节码并不能在硬件环境上执行，需要将字节码转换为机器码。有两种转换方式，一是解释执行，逐行解释并执行，二是即时编译，即把Java方法作为整天进行编译然后再执行，前者不需要等待编译后者运行效率高。hotspot采用了混合方式，即先把字节码逐行解释并执行，然后随遇一些热点代码在进行即时编译。","like_count":3},{"had_liked":false,"id":18014,"user_name":"jikelinj","can_delete":false,"product_type":"c1","uid":1191184,"ip_address":"","ucode":"254E49297941B1","user_header":"http://thirdwx.qlogo.cn/mmopen/eKfCXGrAiaUgRmHMr1q0rDOAibCpy6p7bFQkjWEooOMQNv4JUcic1X6XoQDNO3eWK7QlzSzKwxRDmzffKlHic4rQxRLFawiaICQ7N/132","comment_is_top":false,"comment_ctime":1533086650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14417988538","product_id":100010301,"comment_content":"老师我看的疑问更多了，我看留言中也有一部分和我一样的疑惑。我使用jdk1.7和1.8都试过了，两个都可以打印，真心求一下困惑解答","like_count":3},{"had_liked":false,"id":16675,"user_name":"Lilee","can_delete":false,"product_type":"c1","uid":1183091,"ip_address":"","ucode":"2CA6914B79EB2D","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/73/01598bd5.jpg","comment_is_top":false,"comment_ctime":1532093004,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14416994892","product_id":100010301,"comment_content":"你好，可以问一下虚拟机是怎么判断某一段代码是否为热点代码的吗？","like_count":3,"discussions":[{"author":{"id":1115724,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","nickname":"乘风","note":"","ucode":"0420C5535DACB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1578,"discussion_content":"HotSpot是基于热点探测法来判断的，基于采样和基于计数两种方案，类似于Redis中的LRU or LFU，","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562716496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283717,"user_name":"undefined","can_delete":false,"product_type":"c1","uid":1100750,"ip_address":"","ucode":"768098DBDBE333","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/ce/d9e00eb5.jpg","comment_is_top":false,"comment_ctime":1615895655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10205830247","product_id":100010301,"comment_content":"编译了一个 asmtools.jar 下面链接可取<br><br>https:&#47;&#47;pan.baidu.com&#47;s&#47;1n8G2Hpbowd0soMIutnFWSw<br>提取码: 8fqv","like_count":2},{"had_liked":false,"id":239286,"user_name":"wuyong","can_delete":false,"product_type":"c1","uid":1206039,"ip_address":"","ucode":"175947EEA1FEC2","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/17/942e5115.jpg","comment_is_top":false,"comment_ctime":1596494077,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10186428669","product_id":100010301,"comment_content":"asmtools.jar 下载地址：<br>https:&#47;&#47;github.com&#47;eclipse&#47;openj9&#47;pull&#47;1152<br>https:&#47;&#47;ci.adoptopenjdk.net&#47;view&#47;Dependencies&#47;job&#47;asmtools&#47;lastSuccessfulBuild&#47;artifact&#47; ","like_count":2},{"had_liked":false,"id":164135,"user_name":"Jerry银银","can_delete":false,"product_type":"c1","uid":1008404,"ip_address":"","ucode":"80DA1172A2360A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/14/06eff9a4.jpg","comment_is_top":false,"comment_ctime":1576893456,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10166828048","product_id":100010301,"comment_content":"文章中，有这样一句话：“如果你熟悉 X86 的话，你会发现这和段式内存管理中的代码段类似。而且，Java 虚拟机同样也在内存中划分出堆和栈来存储运行时数据”。<br><br>我的理解是是跟操作系统的内存管理相似，但为什么说是“x86&quot;呢？然后，我也知道，当然操作系统都是使用的分页的方式，这里的“段式内存管理”具体是怎么样的概念？","like_count":2,"discussions":[{"author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325534,"discussion_content":"可以看看 x86 汇编语言。这里指的是 x86 cpu 从早期就存在的段式内存模型。操作系统的内存管理，要基于 cpu 提供的内存管理的支持来实现，与这里说的“内存管理”不是同一样东西。这里说的其实是后者。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605340945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76412,"user_name":"shyan1","can_delete":false,"product_type":"c1","uid":1053239,"ip_address":"","ucode":"964B238EC32C29","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/37/2f671271.jpg","comment_is_top":false,"comment_ctime":1552607482,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10142542074","product_id":100010301,"comment_content":"为什么 Java 要在虚拟机里运行？<br><br>Java 作为一门高级程序语言，它的语法非常复杂，抽象程度也很高。因此，直接在硬件上运行这种复杂的程序并不现实。所以呢，在运行 Java 程序之前，我们需要对其进行一番转换。<br><br>这个理由太牵强了吧 ","like_count":2,"discussions":[{"author":{"id":1119014,"avatar":"https://static001.geekbang.org/account/avatar/00/11/13/26/ea36255d.jpg","nickname":"Ace","note":"","ucode":"CBC5C5EED89708","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263982,"discussion_content":"其实就是为了实现跨平台吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589275646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1549032,"avatar":"","nickname":"Zzz","note":"","ucode":"9323254354868B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237905,"discussion_content":"一次编译，处处运行，不就是虚拟机存在的原因，为何要纠结在这个问题上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587196184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46157,"user_name":"小泷哥","can_delete":false,"product_type":"c1","uid":1255252,"ip_address":"","ucode":"128C9C4B0AFE7F","user_header":"https://static001.geekbang.org/account/avatar/00/13/27/54/d38c34a0.jpg","comment_is_top":false,"comment_ctime":1543856785,"is_pvip":false,"replies":[{"id":"16643","content":"可以保存下来的，你可以查查jaotc这个工具的资料。第36篇也有部分介绍。<br><br>这样做的话，JVM需要确保你所执行的字节码和你编译后的机器码是否吻合。主要有两种情况会造成不吻合，一是换了库版本造成的代码本身不同，二是动态字节码注入造成实际运行的字节码和原字节码不同","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1543938368,"ip_address":"","comment_id":46157,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10133791377","product_id":100010301,"comment_content":"两点∶<br>1.无论是c1,c2,graal都只编译方法，不是整个类<br>2.编译后的机器码放在内存<br>疑惑：<br>1.为什么不保存下来？<br>2.如果说是因为虚函数导致每次都需要重新编译，那没有设计虚函数的方法是否能保存下来？","like_count":2,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431356,"discussion_content":"可以保存下来的，你可以查查jaotc这个工具的资料。第36篇也有部分介绍。\n\n这样做的话，JVM需要确保你所执行的字节码和你编译后的机器码是否吻合。主要有两种情况会造成不吻合，一是换了库版本造成的代码本身不同，二是动态字节码注入造成实际运行的字节码和原字节码不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543938368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35159,"user_name":"菩提树下的灵猴","can_delete":false,"product_type":"c1","uid":1273526,"ip_address":"","ucode":"08B88E49A1ABF4","user_header":"https://static001.geekbang.org/account/avatar/00/13/6e/b6/fe81c712.jpg","comment_is_top":false,"comment_ctime":1540441507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10130376099","product_id":100010301,"comment_content":"这么多留言，就没有想要这位老师的微信号？联系方式？老师方便留个联系方式吗？","like_count":2},{"had_liked":false,"id":31539,"user_name":"dream","can_delete":false,"product_type":"c1","uid":1117793,"ip_address":"","ucode":"65B33D32FA8BE9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/61/ae68f8eb.jpg","comment_is_top":false,"comment_ctime":1539224342,"is_pvip":false,"replies":[{"id":"11575","content":"你可以理解为把文件中第一次出现的iconst_1改为iconst_2","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1539359355,"ip_address":"","comment_id":31539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10129158934","product_id":100010301,"comment_content":"请问一下这段话是什么意思：$ awk &#39;NR==1,&#47;iconst_1&#47;{sub(&#47;iconst_1&#47;, &quot;iconst_2&quot;)} 1&#39; Foo.jasm.1 &gt; Foo.jasm，我知道awk是类似于vim的记事本工具，但是这段代码到底做了什么不理解","like_count":2,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426390,"discussion_content":"你可以理解为把文件中第一次出现的iconst_1改为iconst_2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539359355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25517,"user_name":"leohuachao","can_delete":false,"product_type":"c1","uid":1148284,"ip_address":"","ucode":"02FC4FCB6CE775","user_header":"https://static001.geekbang.org/account/avatar/00/11/85/7c/03a268fe.jpg","comment_is_top":false,"comment_ctime":1537351427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10127286019","product_id":100010301,"comment_content":"java -cp &#47;path&#47;to&#47;asmtools.jar org.openjdk.asmtools.jdis.Main Foo.class &gt; Foo.jasm.1<br>可以简写为<br>java -jar &#47;path&#47;to&#47;asmtools.jar jdis Foo.class &gt; Foo.jasm.1","like_count":2},{"had_liked":false,"id":17782,"user_name":"蒙奇•D•273°","can_delete":false,"product_type":"c1","uid":1179601,"ip_address":"","ucode":"5570919A507386","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/d1/28adb620.jpg","comment_is_top":false,"comment_ctime":1532951291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10122885883","product_id":100010301,"comment_content":"静态方法和实例方法都是如何分配的","like_count":2},{"had_liked":false,"id":17051,"user_name":"笨笨蛋","can_delete":false,"product_type":"c1","uid":1118744,"ip_address":"","ucode":"5FD8D0E8D453F1","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/18/83293985.jpg","comment_is_top":false,"comment_ctime":1532397540,"is_pvip":false,"replies":[{"id":"5913","content":"线程各自的栈空间是不共享的，但可以通过堆空间来共享数据。如果只有一个线程知道某个数据存放在堆的哪个位置，那也相当于不共享。注意不是等同于不共享，因为其它线程可以扫描整个堆，来找到这个位置。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532418705,"ip_address":"","comment_id":17051,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10122332132","product_id":100010301,"comment_content":"搞不懂，没有讲清楚堆栈到底如何共享？有些文章说栈数据共享，但又说每个线程都会有一个堆栈，那堆栈的数据还如何共享？还有堆有时候说数据不共享，但又说线程间数据共享？这老师能解答一下吗？","like_count":2,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421023,"discussion_content":"线程各自的栈空间是不共享的，但可以通过堆空间来共享数据。如果只有一个线程知道某个数据存放在堆的哪个位置，那也相当于不共享。注意不是等同于不共享，因为其它线程可以扫描整个堆，来找到这个位置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532418705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17034,"user_name":"Jecy-8","can_delete":false,"product_type":"c1","uid":1016276,"ip_address":"","ucode":"2AE1575B9E63A6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/81/d4/e92abeb4.jpg","comment_is_top":false,"comment_ctime":1532393157,"is_pvip":false,"replies":[{"id":"5914","content":"这种理解也没啥问题，都是概念上的。说不定哪天我司里的架构师就说方法区属于堆了","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532418789,"ip_address":"","comment_id":17034,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10122327749","product_id":100010301,"comment_content":"我一直以为方法区是从推划出的一部分，用来存放类和静态信息等，方法区中又包含常量池😅","like_count":2,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421014,"discussion_content":"这种理解也没啥问题，都是概念上的。说不定哪天我司里的架构师就说方法区属于堆了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532418789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16654,"user_name":"abs","can_delete":false,"product_type":"c1","uid":1181674,"ip_address":"","ucode":"04CF4E57913A41","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/ea/b82fd545.jpg","comment_is_top":false,"comment_ctime":1532074747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10122009339","product_id":100010301,"comment_content":"我懂了，最后一个命令，又重新编译为class文件了","like_count":2},{"had_liked":false,"id":16652,"user_name":"abs","can_delete":false,"product_type":"c1","uid":1181674,"ip_address":"","ucode":"04CF4E57913A41","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/ea/b82fd545.jpg","comment_is_top":false,"comment_ctime":1532074528,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10122009120","product_id":100010301,"comment_content":"请问下练习中生成了jasm文件，没有把更改写入Foo.class是怎么对结果造成影响的呢？","like_count":2},{"had_liked":false,"id":97496,"user_name":"风到哪里去了","can_delete":false,"product_type":"c1","uid":1344144,"ip_address":"","ucode":"0420D275230C9F","user_header":"","comment_is_top":false,"comment_ctime":1558685180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853652476","product_id":100010301,"comment_content":"asmtools.jar 无法下载 可以用什么代替么","like_count":1},{"had_liked":false,"id":51997,"user_name":"布衣骇客","can_delete":false,"product_type":"c1","uid":1256280,"ip_address":"","ucode":"5226B0F67090D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/58/11c05ccb.jpg","comment_is_top":false,"comment_ctime":1545291435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5840258731","product_id":100010301,"comment_content":"来晚了 ，还是很期待，JVM一直是可望而不可即的，现在被老师讲得通透易懂，不那么怕了，目标更加明确了","like_count":1},{"had_liked":false,"id":40447,"user_name":"五年","can_delete":false,"product_type":"c1","uid":1081224,"ip_address":"","ucode":"28A6F945FB0626","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/88/c4263c58.jpg","comment_is_top":false,"comment_ctime":1542620459,"is_pvip":false,"replies":[{"id":"14568","content":"那条awk命令是找到文本中第一条iconst1，替换成iconst2","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1542621967,"ip_address":"","comment_id":40447,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837587755","product_id":100010301,"comment_content":"练习题的代码命令可以给注释解释就好了,百度也百度不到什么意思...","like_count":1,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429524,"discussion_content":"那条awk命令是找到文本中第一条iconst1，替换成iconst2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542621967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24118,"user_name":"rachel","can_delete":false,"product_type":"c1","uid":1199912,"ip_address":"","ucode":"6A807AD9C528CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/28/1f086e9a.jpg","comment_is_top":false,"comment_ctime":1536807646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831774942","product_id":100010301,"comment_content":"java程序需要运行在虚拟机的原因？  <br>我觉得主要是为了避免系统语言（例如C语言、C++等）与平台的强耦合性，不易移植的缺点，从而实现“一次编写，到处运行”的平台无关性。","like_count":1},{"had_liked":false,"id":20764,"user_name":"G1","can_delete":false,"product_type":"c1","uid":1179568,"ip_address":"","ucode":"94630965EE7AFD","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/b0/dca98a0d.jpg","comment_is_top":false,"comment_ctime":1534736680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5829703976","product_id":100010301,"comment_content":"元空间和永久代只是不同版本下的方法区实现，所以原文中用方法区称呼是正确的","like_count":1},{"had_liked":false,"id":18237,"user_name":"网络已断开","can_delete":false,"product_type":"c1","uid":1062138,"ip_address":"","ucode":"FBE0527E62A82B","user_header":"","comment_is_top":false,"comment_ctime":1533201896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5828169192","product_id":100010301,"comment_content":"                iconst_2;<br>                istore_1;<br>                iload_1;<br>                ifeq    L14;<br>                getstatic       Field java&#47;lang&#47;System.out:&quot;Ljava&#47;io&#47;PrintStream;&quot;;<br>                ldc     String &quot;Hello,Java!&quot;;<br>                invokevirtual   Method java&#47;io&#47;PrintStream.println:&quot;(Ljava&#47;lang&#47;String;)V&quot;;<br>        L14:    stack_frame_type append;<br>                locals_map int;<br>                iload_1;<br>                iconst_1;<br>                if_icmpne       L27;<br>                getstatic       Field java&#47;lang&#47;System.out:&quot;Ljava&#47;io&#47;PrintStream;&quot;;<br>                ldc     String &quot;Hello,JVM!&quot;;<br>                invokevirtual   Method java&#47;io&#47;PrintStream.println:&quot;(Ljava&#47;lang&#47;String;)V&quot;;<br>        L27:    stack_frame_type same;<br>                return;<br><br><br>line1:入栈2<br>line2:栈顶int存入第二个局部变量(第一个存放的是this)<br>line3:局部变中量表第二个局部变量入栈<br>line4:判断栈顶是否为零(为2不为0)<br>line10:局部变中量表第二个局部变量入栈<br>line11:入栈1<br>line12:比较栈顶是否相等(1和2自然是不等的)","like_count":1},{"had_liked":false,"id":17501,"user_name":"王刚","can_delete":false,"product_type":"c1","uid":1103821,"ip_address":"","ucode":"4763CC9A937C38","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/cd/6ebfc468.jpg","comment_is_top":false,"comment_ctime":1532690578,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5827657874","product_id":100010301,"comment_content":"老师我想问下，Java虚拟机指的就是jre吗？<br>如果不是Java虚拟机和jre有啥区别嘛？","like_count":1,"discussions":[{"author":{"id":1119014,"avatar":"https://static001.geekbang.org/account/avatar/00/11/13/26/ea36255d.jpg","nickname":"Ace","note":"","ucode":"CBC5C5EED89708","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263984,"discussion_content":"简单来说：JDK包括JRE，JRE包括JVM。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589276052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16978,"user_name":"Hizkijah","can_delete":false,"product_type":"c1","uid":1106569,"ip_address":"","ucode":"C32996967BC5E4","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/89/2c07a3c1.jpg","comment_is_top":false,"comment_ctime":1532347477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827314773","product_id":100010301,"comment_content":"1楼说的第二个无法输出，我验证了可以输出啊。","like_count":1},{"had_liked":false,"id":16808,"user_name":"、","can_delete":false,"product_type":"c1","uid":1162040,"ip_address":"","ucode":"9BA80F04C1D5E2","user_header":"https://static001.geekbang.org/account/avatar/00/11/bb/38/2fb5c4ce.jpg","comment_is_top":false,"comment_ctime":1532224875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827192171","product_id":100010301,"comment_content":"字节码不懂  不会题目","like_count":1},{"had_liked":false,"id":16695,"user_name":"韶华易逝~","can_delete":false,"product_type":"c1","uid":1178905,"ip_address":"","ucode":"FF0ED2F14B533B","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/19/068c5e8c.jpg","comment_is_top":false,"comment_ctime":1532099320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827066616","product_id":100010301,"comment_content":"老师，hotspot分层编译，并使用额外编译线程。那么c1和c2是在什么时候进行编译的啊，应用程序启动时还是启动后的运行时啊？","like_count":1},{"had_liked":false,"id":16693,"user_name":"kmax","can_delete":false,"product_type":"c1","uid":1074928,"ip_address":"","ucode":"C737BA2D30F4BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/f0/830d3c1f.jpg","comment_is_top":false,"comment_ctime":1532099041,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827066337","product_id":100010301,"comment_content":"开门红，期待后面有一些具体案例实践分析","like_count":1},{"had_liked":false,"id":16682,"user_name":"mover","can_delete":false,"product_type":"c1","uid":1183271,"ip_address":"","ucode":"1FAA06D227B4B3","user_header":"","comment_is_top":false,"comment_ctime":1532095879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827063175","product_id":100010301,"comment_content":"你好，在回答Ryan-hou时你的回答：这里的直接运行指的是不经过任何转换(编译)，直接在硬件上跑。即便是C++，也不可以直接运行。<br><br>这个地方可以展开说一下吗？c++不可以直接执行，why？c++不是编译成机器码了吗？JAVA像c++那样直接编译成目标机器的机器码为什么不现实？","like_count":1},{"had_liked":false,"id":16678,"user_name":"Aaron_涛","can_delete":false,"product_type":"c1","uid":1180617,"ip_address":"","ucode":"067F3CBB1F036C","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/c9/9a9d82ab.jpg","comment_is_top":false,"comment_ctime":1532093816,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827061112","product_id":100010301,"comment_content":"我用jdk8运行了下，两个都输出了呀，我javap看了下是两条ifeq，没有得出上面那个人说的下面没有输出这是为啥，不过我看到了虚拟机对boolean是看成整形","like_count":1},{"had_liked":false,"id":16621,"user_name":"隔离样","can_delete":false,"product_type":"c1","uid":1183002,"ip_address":"","ucode":"34BC6CED888FFB","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/1a/2c364284.jpg","comment_is_top":false,"comment_ctime":1532054077,"is_pvip":false,"replies":[{"id":"5760","content":"哈哈，一般初高中应该使用工程性没那么强的语言吧？","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532066576,"ip_address":"","comment_id":16621,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5827021373","product_id":100010301,"comment_content":"初中还是高中时真的学的是c+","like_count":1,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420875,"discussion_content":"哈哈，一般初高中应该使用工程性没那么强的语言吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532066576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350494,"user_name":"Geek_98f531","can_delete":false,"product_type":"c1","uid":3038168,"ip_address":"","ucode":"D47D0592BEAC6C","user_header":"","comment_is_top":false,"comment_ctime":1656946949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656946949","product_id":100010301,"comment_content":"老师，方法区的数据结构属于堆吗？因为我感觉，方法区和堆区只是功能上的划分，从结构上看，应该都是堆才对。","like_count":0},{"had_liked":false,"id":349701,"user_name":"liin","can_delete":false,"product_type":"c1","uid":1038705,"ip_address":"","ucode":"92AE8958DDED4E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/71/8e38dc01.jpg","comment_is_top":false,"comment_ctime":1656235674,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1656235674","product_id":100010301,"comment_content":"老师给的第二个链接页面，右侧有快捷链接，能找到下载asmtools源码的地方，然后再用ant进行编译为jar就可以了。附下载地址：http:&#47;&#47;hg.openjdk.java.net&#47;code-tools&#47;asmtools&#47;archive&#47;tip.zip","like_count":0},{"had_liked":false,"id":348589,"user_name":"SirNicholas","can_delete":false,"product_type":"c1","uid":1282442,"ip_address":"","ucode":"4A7B97494B463B","user_header":"https://static001.geekbang.org/account/avatar/00/13/91/8a/e7d6c8c3.jpg","comment_is_top":false,"comment_ctime":1655217222,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655217222","product_id":100010301,"comment_content":"18年刚出来极客时间买了这门课程,记得文中老师说JVM时为了让程序员只需要关注业务代码无需关注虚拟机实现,那请问雨笛老师：现在国内后端面试java基本上大小公司都会面试gc,jvm的底层知识。那对于程序员发展来说,大家把重心或多或少都转移到JVM上，这是不是违背了JVM的初衷呢？本来是解放程序员的事情，现在大家又重新来研究JVM是不是对技术发展起到负反馈作用了呢？我认识的人有大牛但不会专门研究JVM这些，而且大部分人也很难达到提出虚拟机规范实现的标准。如果真要研究JVM最终肯定得回到操作系统，因为os是比JVM还要底层的也是JVM当初发展的基石。那现在大家研究JVM,面试也会问JVM有什么意义呢？直接研究操作系统不是更加直接有效的方法吗？","like_count":0},{"had_liked":false,"id":345341,"user_name":"Bumblebee","can_delete":false,"product_type":"c1","uid":2051293,"ip_address":"","ucode":"B879C8A511D08D","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","comment_is_top":false,"comment_ctime":1652197468,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652197468","product_id":100010301,"comment_content":"总结<br>一、jvm能做什么？<br>        ①  提供Java程序一次编译到处运行的平台；<br>        ②  自动化管理内存；<br>        ③  程序编译成字节码后，虚拟机能够识别字节码程序，将字节码转换成机器码；<br><br>二、Jvm内存模型有那些部分？<br>       ①  程序计数器（记录程序执行的下一条指令）<br>       ②  方法区（主要存在类信息）<br>       ③  堆  （通一jvm内的所有线程共享，主要存储运行时产生的对象）<br>       ④  虚拟机栈  （线程独享，主要存储Java方法调用的局部变量）<br>       ⑤  本地方法栈<br><br>三、jvm翻译字节码成机器码的方式有那些？<br>       ①  解释执行（将字节码逐条翻译成机器码并执行）<br>       ②  及时编译（JIT，即将一个方法中的所有字节码编译成机器码，在执行）<br><br>四、 解释执行与及时编译有那些区别？<br>      ①  及时编译能结合程序运行时的数据，做到最优，但是首次执行时需要等待编译；<br>      ②  解释执行无需等待编译；<br><br>总结的不对的，希望老师与同学们多多指正！<br>","like_count":0},{"had_liked":false,"id":344090,"user_name":"吴晓江","can_delete":false,"product_type":"c1","uid":2886001,"ip_address":"","ucode":"06C3FD7766C6D0","user_header":"","comment_is_top":false,"comment_ctime":1651232651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651232651","product_id":100010301,"comment_content":"章尾的小作业，看这篇很有帮助 https:&#47;&#47;wenjie.store&#47;archives&#47;ant-asmtools-awk","like_count":0},{"had_liked":false,"id":343005,"user_name":"苏成","can_delete":false,"product_type":"c1","uid":2668694,"ip_address":"","ucode":"80A8E7B243DD73","user_header":"https://static001.geekbang.org/account/avatar/00/28/b8/96/716ba431.jpg","comment_is_top":false,"comment_ctime":1650590630,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1650590630","product_id":100010301,"comment_content":"提问，为什么我生成的不是int类型而是byte类型呢？","like_count":0},{"had_liked":false,"id":343004,"user_name":"苏成","can_delete":false,"product_type":"c1","uid":2668694,"ip_address":"","ucode":"80A8E7B243DD73","user_header":"https://static001.geekbang.org/account/avatar/00/28/b8/96/716ba431.jpg","comment_is_top":false,"comment_ctime":1650590541,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1650590541","product_id":100010301,"comment_content":"public class Foo {<br>  public static void main(String[] paramArrayOfString) {<br>    byte b = 2;<br>    if (b != 0)<br>      System.out.println(&quot;Hello, Java!&quot;); <br>    if (b == 2)<br>      System.out.println(&quot;Hello, JVM!&quot;); <br>  }<br>}<br>为什么我运行之后生生产的class是这样啊","like_count":0},{"had_liked":false,"id":339520,"user_name":"利威尔兵长","can_delete":false,"product_type":"c1","uid":2756739,"ip_address":"","ucode":"FDE0BD5BFB1B4A","user_header":"https://static001.geekbang.org/account/avatar/00/2a/10/83/0facd0eb.jpg","comment_is_top":false,"comment_ctime":1648170284,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648170284","product_id":100010301,"comment_content":".class文件就是Java字节码文件，Java字节码相当于JVM的机器语言。<br><br>操作码（opcode）被固定为一个字节。一个字节8位，理论上最多支持256个操作码。java实际上使用了200左右的字节码。还有一些留给调试操作。<br><br>虚方法到目标方法的映射，解释执行可能要老老实实再找一遍，而即时编译后已经将目标方法编译好放在那里，无需再进行一次转换。<br><br>虚函数的开销之一是要使用函数指针来定位函数入口，比起直接获取函数入口来说，多了一次间接寻址，此时，CPU的指令缓存会被刷新，调用时程序跳转，再一次刷线缓存。 虚函数的另一个开销是，无法进行inline，是性能损失较大的地方，无法inline，就意味着每次函数调用，都得要建立和销毁一次函数栈帧，费时间又费空间。","like_count":0},{"had_liked":false,"id":337615,"user_name":"枫林血舞","can_delete":false,"product_type":"c1","uid":2809867,"ip_address":"","ucode":"EE7F6DA78D21EA","user_header":"https://static001.geekbang.org/account/avatar/00/2a/e0/0b/6f667b2c.jpg","comment_is_top":false,"comment_ctime":1646915953,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646915953","product_id":100010301,"comment_content":"特意写了这段代码，通过jclasslib看了下字节码发现：Java中将boolean值看成了常量：iconst_1（常量值int类型，且值为1）。","like_count":0},{"had_liked":false,"id":336439,"user_name":"כן אני אמריקאי","can_delete":false,"product_type":"c1","uid":1527429,"ip_address":"","ucode":"56C5C2B369121B","user_header":"https://static001.geekbang.org/account/avatar/00/17/4e/85/ef0108cd.jpg","comment_is_top":false,"comment_ctime":1646146518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646146518","product_id":100010301,"comment_content":"感兴趣的朋友可以阅读一下我的文章：https:&#47;&#47;juejin.cn&#47;post&#47;7057503611248443400","like_count":0},{"had_liked":false,"id":335220,"user_name":"花花世界小人物","can_delete":false,"product_type":"c1","uid":2662844,"ip_address":"","ucode":"3E995D63845C06","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL3xax4aG4h59x50C7LQ5K7BicvIEicakyfE0lV4Pyib6OsYc1jC7Qa37g2v8qhib5BQiaB2DfB4DMG5Cw/132","comment_is_top":false,"comment_ctime":1645413917,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645413917","product_id":100010301,"comment_content":"学习总结：<br>为什么使用jvm<br>1.一次编译多处运行<br>2.托管服务<br>编译方式<br>1.解释执行 优点：程序执行中无需再编译；缺点：启动时间长。<br>2.及时编译 优点：编译是有程序的信息，可以做优化峰值性能比较友好；缺点：执行时需要花时间编译<br>java 7 HotSpot 采用混合编译,及时编译器：c1,c2,graal<br>","like_count":0},{"had_liked":false,"id":330337,"user_name":"Geek_0b457c","can_delete":false,"product_type":"c1","uid":1963872,"ip_address":"","ucode":"61D2AFD4E286AD","user_header":"","comment_is_top":false,"comment_ctime":1641918370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641918370","product_id":100010301,"comment_content":"不想开虚拟机不想远程的可以使用 Cmder https:&#47;&#47;cmder.net&#47;","like_count":0},{"had_liked":false,"id":328586,"user_name":"Geek_885d39","can_delete":false,"product_type":"c1","uid":2877777,"ip_address":"","ucode":"397FAAE01C652E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1mN1YORUe7JOc4lFnSB0zfuO9KtpHCCwKD6YdlKb8Ncora1t4icf8wCb3owMx0T5M6YRz4cLOge8pQIRgjAapYA/132","comment_is_top":false,"comment_ctime":1640781024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640781024","product_id":100010301,"comment_content":"我在windows电脑上使用命令行javac Foo.java得到的Foo.class文件如下，boolean为啥没有变成int?<br>public class Foo {<br>  public static void main(String[] paramArrayOfString) {<br>    boolean bool = true;<br>    if (bool)<br>      System.out.println(&quot;Hello, Java!&quot;); <br>    if (bool == true)<br>      System.out.println(&quot;Hello, JVM!&quot;); <br>  }<br>}<br>","like_count":0},{"had_liked":false,"id":326769,"user_name":"和光同尘","can_delete":false,"product_type":"c1","uid":1994380,"ip_address":"","ucode":"E35F36CA298A98","user_header":"https://static001.geekbang.org/account/avatar/00/1e/6e/8c/49d94d09.jpg","comment_is_top":false,"comment_ctime":1639665805,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1639665805","product_id":100010301,"comment_content":"java设计之初不是因为跨平台才加的JVM嘛","like_count":0},{"had_liked":false,"id":314121,"user_name":"sotondolphin","can_delete":false,"product_type":"c1","uid":2306394,"ip_address":"","ucode":"136444B47ACDC5","user_header":"","comment_is_top":false,"comment_ctime":1632849910,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1632849910","product_id":100010301,"comment_content":"在 HotSpot 里面，上述翻译过程有两种形式：第一种是解释执行，即逐条将字节码翻译成机器码并执行；第二种是即时编译（Just-In-Time compilation，JIT），即将一个方法中包含的所有字节码编译成机器码后再执行。<br><br>第一种和第二种的解释是不是颠倒了?","like_count":0},{"had_liked":false,"id":307280,"user_name":"徐奔","can_delete":false,"product_type":"c1","uid":2405937,"ip_address":"","ucode":"A3BFD9C1964BFF","user_header":"https://static001.geekbang.org/account/avatar/00/24/b6/31/2c102457.jpg","comment_is_top":false,"comment_ctime":1629001049,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629001049","product_id":100010301,"comment_content":"作者发的网址我貌似不能访问了，我是去maven仓库里下载的<br>https:&#47;&#47;mvnrepository.com&#47;search?q=asmtools","like_count":0},{"had_liked":false,"id":297898,"user_name":"迪","can_delete":false,"product_type":"c1","uid":2112003,"ip_address":"","ucode":"BCE20E8C48A286","user_header":"https://static001.geekbang.org/account/avatar/00/20/3a/03/aba3c9b5.jpg","comment_is_top":false,"comment_ctime":1623834509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623834509","product_id":100010301,"comment_content":"1、Java虚拟机的意义<br>1.1、“一次编写，到处运行”，一旦一个程序被转换成 Java 字节码，那么它便可以在不同平台上的虚拟机实现里运行；<br>1.2、虚拟机带来了一个托管环境（Managed Runtime）。这个托管环境能够代替我们处理一些代码中冗长而且容易出错的部分。其中最广为人知的当属自动内存管理与垃圾回收，这部分内容甚至催生了一波垃圾回收调优的业务。除此之外，托管环境还提供了诸如数组越界、动态类型、安全权限等等的动态检测，使我们免于书写这些无关业务逻辑的代码。<br>2、Java字节码<br>从虚拟机视角来看，执行 Java 代码首先需要将它编译而成的 class 文件加载到 Java 虚拟机中。加载后的 Java 类会被存放于方法区（Method Area）中。实际运行时，虚拟机会执行方法区内的代码。执行时需要将字节码翻译成机器码，有【解释执行】和【即时编译】(JIT)两种，线程共享： 方法区、堆； 线程私有： PC寄存器、Java方法栈、本地方法栈；<br>3、Java虚拟机的运行效率<br>为了提高运行效率，标准 JDK 中的 HotSpot 虚拟机采用的是一种混合执行的策略。它会解释执行 Java 字节码，然后会将其中反复执行的热点代码，以方法为单位进行即时编译，翻译成机器码后直接运行在底层硬件之上。HotSpot 装载了多个不同的即时编译器，以便在编译时间和生成代码的执行效率之间做取舍。","like_count":0},{"had_liked":false,"id":290428,"user_name":"von","can_delete":false,"product_type":"c1","uid":1736813,"ip_address":"","ucode":"403C8CF955AFF3","user_header":"","comment_is_top":false,"comment_ctime":1619539277,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619539277","product_id":100010301,"comment_content":"前者的优势在于无需等待编译，而后者的优势在于实际运行速度更快（为什么后者更快呢？）。","like_count":0},{"had_liked":false,"id":285512,"user_name":"ck","can_delete":false,"product_type":"c1","uid":1142348,"ip_address":"","ucode":"2335A22314296A","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/4c/494b2907.jpg","comment_is_top":false,"comment_ctime":1616852967,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616852967","product_id":100010301,"comment_content":"在windows上下载了gawk. 然后将该文件中awk路径设置为环境变量, 但在执行awk &#39;NR==1,&#47;iconst_1&#47;{sub(&#47;iconst_1&#47;, &quot;iconst_2&quot;)} 1&#39; Foo.jasm.1 &gt; Foo.jasm 后抛出如下错误:<br>awk: &#39;NR==1,&#47;iconst_1&#47;{sub(&#47;iconst_1&#47;,<br>awk: ^ invalid char &#39;&#39;&#39; in expression<br>将命令中的单引号和双引号改为如下即可:<br>awk &quot;NR==1,&#47;iconst_1&#47;{sub(&#47;iconst_1&#47;, \\&quot;iconst_2\\&quot;)} 1&quot; Foo.jasm.1 &gt; Foo.jasm ","like_count":0},{"had_liked":false,"id":236922,"user_name":"Geek_86221b","can_delete":false,"product_type":"c1","uid":2079142,"ip_address":"","ucode":"2622E5C21238F8","user_header":"","comment_is_top":false,"comment_ctime":1595586248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595586248","product_id":100010301,"comment_content":"问个小白问题，字节码解释执行的具体过程是什么，难道是读一个字节码，然后翻译成机器码然后再执行机器码，然后再解释下一个字节码吗","like_count":0},{"had_liked":false,"id":224420,"user_name":"宿臾洛城","can_delete":false,"product_type":"c1","uid":1564267,"ip_address":"","ucode":"362CC728E256F7","user_header":"https://static001.geekbang.org/account/avatar/00/17/de/6b/adee88bb.jpg","comment_is_top":false,"comment_ctime":1591373538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591373538","product_id":100010301,"comment_content":"因为编译成class文件以后，true被编译成了1，在ams文件中展示的就是iconst_1。<br>而awk那句话的意思是将第一次出现的iconst_1修改为iconst_2，也就是将被编译成的1改成了2。<br>所以在转为class文件的时候，boolean值被修改成了2。而其他的没有改变。因为2!=0，所以只输出了<br>Hello，Java！","like_count":0},{"had_liked":false,"id":212180,"user_name":"见南山","can_delete":false,"product_type":"c1","uid":1118111,"ip_address":"","ucode":"6A8BB82B7573CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/9f/f4b06bd5.jpg","comment_is_top":false,"comment_ctime":1588071453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588071453","product_id":100010301,"comment_content":"jvm提供解释执行和即时编译来将java高级语言编译成java字节码class文件，将内存划分为堆栈，栈分为标记线程运行位置的pc计数器，存储方法调用次序的方法栈和本地方法栈。堆则是方法区和堆，方法区存储的就是class文件，堆里面则是申请的对象。","like_count":0},{"had_liked":false,"id":212176,"user_name":"见南山","can_delete":false,"product_type":"c1","uid":1118111,"ip_address":"","ucode":"6A8BB82B7573CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/9f/f4b06bd5.jpg","comment_is_top":false,"comment_ctime":1588071095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588071095","product_id":100010301,"comment_content":"记录下: java作为高级语言是无法直接运行在硬件，必须编译为机器码才行。jvm出现提供将java语言转换为中间语言java字节码，更接近机器码，只要编译成字节码就能在各个硬件机器上执行，同时提供了优化，垃圾回收等机制。而像c++则不同直接转换为机器码执行，我理解是与硬件相关的，无法在多平台执行。","like_count":0},{"had_liked":false,"id":211490,"user_name":"任鑫","can_delete":false,"product_type":"c1","uid":1142025,"ip_address":"","ucode":"9803EB15B634C3","user_header":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","comment_is_top":false,"comment_ctime":1587972944,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1587972944","product_id":100010301,"comment_content":"”即时编译拥有程序的运行时信息，并且能够根据这个信息做出相应的优化。“，老师以及各位同学，这段应该怎么理解呢？","like_count":0,"discussions":[{"author":{"id":3038168,"avatar":"","nickname":"Geek_98f531","note":"","ucode":"D47D0592BEAC6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578747,"discussion_content":"反射","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656992905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1142025,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6d/09/ffeabc27.jpg","nickname":"任鑫","note":"","ucode":"9803EB15B634C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3038168,"avatar":"","nickname":"Geek_98f531","note":"","ucode":"D47D0592BEAC6C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578795,"discussion_content":"jit","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657017922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":578747,"ip_address":""},"score":578795,"extra":""}]}]},{"had_liked":false,"id":211015,"user_name":"叶中柱","can_delete":false,"product_type":"c1","uid":1891335,"ip_address":"","ucode":"52729FC0F87670","user_header":"","comment_is_top":false,"comment_ctime":1587881640,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587881640","product_id":100010301,"comment_content":"我理解解释编译同即时编译是不是类比请求是查库跟查内存。   <br><br>接口性能优化:第一次请求回源查库并写入内存并返回，第二次直接查内存并返回<br><br>热点代码:先解释编译，程序执行，若方法执行过于频繁则被即时编译成机器码，再次执行方法时不用编译直接执行机器码<br><br>如果理解有偏差还望指正","like_count":0},{"had_liked":false,"id":209769,"user_name":"晓双","can_delete":false,"product_type":"c1","uid":1476696,"ip_address":"","ucode":"59CA9DB77697D5","user_header":"https://static001.geekbang.org/account/avatar/00/16/88/58/3e19586a.jpg","comment_is_top":false,"comment_ctime":1587611315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587611315","product_id":100010301,"comment_content":"java代码运行是由编译器编译成.class文件。然后由虚拟机读取编译成汇编，等到操作系统来执行的时候会把汇编编译成机器码来执行。不知道是这样不？","like_count":0},{"had_liked":false,"id":206628,"user_name":"慕高迪","can_delete":false,"product_type":"c1","uid":1448126,"ip_address":"","ucode":"EB1CB5EA4E3A90","user_header":"https://static001.geekbang.org/account/avatar/00/16/18/be/ad3127e0.jpg","comment_is_top":false,"comment_ctime":1586911895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586911895","product_id":100010301,"comment_content":"jvm像是一个适配器，连接java程序和机器。从而保证java程序的运行。并且为java程序提供了托管环境。","like_count":0},{"had_liked":false,"id":171715,"user_name":"rike","can_delete":false,"product_type":"c1","uid":1583833,"ip_address":"","ucode":"920AAD0BD9245C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","comment_is_top":false,"comment_ctime":1578996099,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578996099","product_id":100010301,"comment_content":"我的按照步骤执行的，到执行10行java Foo命令时，提示Error: Could not find or load main class Foo，在windows上把编译后能执行的字节码放在centos上也不行，不知怎么回事？","like_count":0,"discussions":[{"author":{"id":1583833,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3XKbwTv6WTssolgqZjZCkiazHgl2IdBYfwVfAcB7Ff3krsIQeBIBFQLQE1Kw91LFbl3lic2EzgdfNiciaYDlJlELA/132","nickname":"rike","note":"","ucode":"920AAD0BD9245C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134966,"discussion_content":"知道怎么回事了，把环境变量classpath去掉好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579057979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145363,"user_name":"黑色毛衣","can_delete":false,"product_type":"c1","uid":1135912,"ip_address":"","ucode":"FF7E235F91BA5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","comment_is_top":false,"comment_ctime":1572258247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572258247","product_id":100010301,"comment_content":"java 有两种编译方式：JIT 和 AOT，AOT 是没用吗？是因为他是启动的时候全部编译，效率太低？","like_count":0},{"had_liked":false,"id":144200,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1185504,"ip_address":"","ucode":"34A37F73A48E7F","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","comment_is_top":false,"comment_ctime":1571878230,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571878230","product_id":100010301,"comment_content":"再回头来看，发现全是干货，得好好再看一次了","like_count":0},{"had_liked":false,"id":143886,"user_name":"文文小杰","can_delete":false,"product_type":"c1","uid":1342184,"ip_address":"","ucode":"1D38ED443007AD","user_header":"https://static001.geekbang.org/account/avatar/00/14/7a/e8/0930b207.jpg","comment_is_top":false,"comment_ctime":1571803264,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571803264","product_id":100010301,"comment_content":"为啥我的用JD-GUI打开class文件都是下面这样的T_T不是你们说的int：<br>public class Foo {<br>public static void main(String[] paramArrayOfString) {<br>boolean bool = true;<br>if (bool)<br>System.out.println(&quot;Hello, Java!&quot;); <br>if (bool == true)<br>System.out.println(&quot;Hello, JVM!&quot;); <br>}<br>}","like_count":0},{"had_liked":false,"id":143254,"user_name":"技术骨干","can_delete":false,"product_type":"c1","uid":1098720,"ip_address":"","ucode":"8FCF8DE6D29201","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/e0/3db22579.jpg","comment_is_top":false,"comment_ctime":1571657314,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1571657314","product_id":100010301,"comment_content":"什么是虚方法呢？","like_count":0,"discussions":[{"author":{"id":1014146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/82/c3cccc38.jpg","nickname":"IT生涯路漫漫","note":"","ucode":"4954D1CBEB4E44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310921,"discussion_content":"抽象类的抽象方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602133845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119014,"avatar":"https://static001.geekbang.org/account/avatar/00/11/13/26/ea36255d.jpg","nickname":"Ace","note":"","ucode":"CBC5C5EED89708","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263986,"discussion_content":"虚方法是C++的，Java与之类似的是接口方法。即一个接口方法的实现可能有多个，运行时才会决定真正使用哪一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589276201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142167,"user_name":"长脖子树","can_delete":false,"product_type":"c1","uid":1182802,"ip_address":"","ucode":"D9090EF67EEB1B","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/52/f25c3636.jpg","comment_is_top":false,"comment_ctime":1571303165,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1571303165","product_id":100010301,"comment_content":"第二遍读专栏, 想问个问题, java 解释执行时, 是否会缓存解释后生成的机器码? 或者说为什么不缓存? 和解释性的语言比如 python 是否类似","like_count":0},{"had_liked":false,"id":136334,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1569411246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569411246","product_id":100010301,"comment_content":"老师java1.8 jdk 带的javac生成的字节码，由IDEA反编译之后如下，导致我测试的时候两句都没有打印，有什么方法禁用javac的优化吗?<br> public class Foo {<br>    public Foo() {<br>    }<br><br>    public static void main(String[] var0) {<br>        boolean var1 = true;<br>        if (var1) {<br>            System.out.println(&quot;Hello, Java!&quot;);<br>        }<br><br>        if (var1) {<br>            System.out.println(&quot;Hello, JVM!&quot;);<br>        }<br><br>    }<br>}","like_count":0},{"had_liked":false,"id":125787,"user_name":"冬瓜蔡","can_delete":false,"product_type":"c1","uid":1117673,"ip_address":"","ucode":"2F04A446D28201","user_header":"https://static001.geekbang.org/account/avatar/00/11/0d/e9/2f02a383.jpg","comment_is_top":false,"comment_ctime":1566260740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566260740","product_id":100010301,"comment_content":"编译器将Java文件编译成字节码文件，然后不同平台对应的jvm将字节码转换成平台可识别的机器码，这样就可以将同一套字节码运行在不同平台上，相当于jvm帮助我们屏蔽了不同平台之间的差异。","like_count":0},{"had_liked":false,"id":103874,"user_name":"色即是空","can_delete":false,"product_type":"c1","uid":1189638,"ip_address":"","ucode":"46B8975ED087B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/06/7ab75a5b.jpg","comment_is_top":false,"comment_ctime":1560557436,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560557436","product_id":100010301,"comment_content":"HotSpot，不知道是什么？","like_count":0},{"had_liked":false,"id":100413,"user_name":"搬砖小少年","can_delete":false,"product_type":"c1","uid":1549787,"ip_address":"","ucode":"F0EB201A6B4D2A","user_header":"https://static001.geekbang.org/account/avatar/00/17/a5/db/e4773f61.jpg","comment_is_top":false,"comment_ctime":1559551903,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559551903","product_id":100010301,"comment_content":"我这边显示的是下面这一整块东东，哪位道友解释一下，谢谢<br>$ java Foo<br>▒▒▒▒: ▒Ҳ▒▒▒▒▒▒޷▒▒▒▒▒▒▒▒▒ Foo<br>","like_count":0},{"had_liked":false,"id":99028,"user_name":"我知道了嗯","can_delete":false,"product_type":"c1","uid":1138471,"ip_address":"","ucode":"9186EC1F32C490","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/27/a6873bc9.jpg","comment_is_top":false,"comment_ctime":1559132727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559132727","product_id":100010301,"comment_content":"字节码是不是就是class文件？如果是的话，那么机器码又是怎么样的","like_count":0},{"had_liked":false,"id":95878,"user_name":"余章胜","can_delete":false,"product_type":"c1","uid":1428900,"ip_address":"","ucode":"1FC48EAE09EFE1","user_header":"https://static001.geekbang.org/account/avatar/00/15/cd/a4/bffb956c.jpg","comment_is_top":false,"comment_ctime":1558240047,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558240047","product_id":100010301,"comment_content":"为什么 Java 要在虚拟机里运行？这个问题能再讲彻底一年么？","like_count":0},{"had_liked":false,"id":95220,"user_name":"风到哪里去了","can_delete":false,"product_type":"c1","uid":1344144,"ip_address":"","ucode":"0420D275230C9F","user_header":"","comment_is_top":false,"comment_ctime":1557990971,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557990971","product_id":100010301,"comment_content":"对于JVM的编译机制会把部分代码编译成机器码，Android从dalvik到ART的虚拟机优化过程中，完全采取了AOT的编译形式。","like_count":0},{"had_liked":false,"id":89665,"user_name":"Snail","can_delete":false,"product_type":"c1","uid":1242674,"ip_address":"","ucode":"58346C4D80AA94","user_header":"https://static001.geekbang.org/account/avatar/00/12/f6/32/c9d8fd60.jpg","comment_is_top":false,"comment_ctime":1556241440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556241440","product_id":100010301,"comment_content":"就这么简单的一段Foo.java代码，编译成功之后竟然运行不起来。。。 我是完全照搬文章最后面的操作","like_count":0},{"had_liked":false,"id":89511,"user_name":"Geek_15237d","can_delete":false,"product_type":"c1","uid":1093016,"ip_address":"","ucode":"2958BF2DE601DA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7CIlLxbun5LFhKnPM82kMdxdDqp5qXPgStIdrBsq0G54hVLAVCiaDsuH56x63oG8RVp9zz926LxhA/132","comment_is_top":false,"comment_ctime":1556191373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556191373","product_id":100010301,"comment_content":"笔记:Java语言为什么需要再Java虚拟机上运行？答:Java语言是一中高级比较抽象的语言，不能像c++那样直接运行在机器的硬件上，需要经过一系列的转换操作才能运行，而Java虚拟机就是提供这个转换操作的。Java代码首先别编译为.class文件的字节码，这样Java代码就可以在任何平台的虚拟机上运行了。","like_count":0},{"had_liked":false,"id":85919,"user_name":"阿May的海绵宝宝","can_delete":false,"product_type":"c1","uid":1203058,"ip_address":"","ucode":"AA2B28DF8BEF80","user_header":"https://static001.geekbang.org/account/avatar/00/12/5b/72/4f8a4297.jpg","comment_is_top":false,"comment_ctime":1555292642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555292642","product_id":100010301,"comment_content":"请问老师,是只有即时编译中才存在指令重排序吧？","like_count":0},{"had_liked":false,"id":85053,"user_name":"Jthan","can_delete":false,"product_type":"c1","uid":1112381,"ip_address":"","ucode":"E771101B231566","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/3d/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1554968059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554968059","product_id":100010301,"comment_content":"【在计息资源充足的情况下，字节码的解释执行和即使编译可同时进行】<br>1.请问计息资源充足是指？<br>2.可以在程序启动时指定某些方法进行JIT吗？<br>多谢！","like_count":0},{"had_liked":false,"id":80903,"user_name":"换个名字","can_delete":false,"product_type":"c1","uid":1464255,"ip_address":"","ucode":"3AAE7D9124E27E","user_header":"https://static001.geekbang.org/account/avatar/00/16/57/bf/656a57c6.jpg","comment_is_top":false,"comment_ctime":1553752748,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553752748","product_id":100010301,"comment_content":"我把改完后的字节码文件，用反编译工具打开，发现原来的boolean类型已经变成byte了<br>","like_count":0},{"had_liked":false,"id":79876,"user_name":"tiankonghewo","can_delete":false,"product_type":"c1","uid":1476427,"ip_address":"","ucode":"7A55A9C17DD9DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/4b/16ea3997.jpg","comment_is_top":false,"comment_ctime":1553566927,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1553566927","product_id":100010301,"comment_content":"栈帧在内存空间都是连续分布的吧？不然怎么重叠呢？","like_count":0,"discussions":[{"author":{"id":1603144,"avatar":"https://static001.geekbang.org/account/avatar/00/18/76/48/0e67a1e4.jpg","nickname":"🇶  🇺  🇸 🇹","note":"","ucode":"A328642EE48A0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299930,"discussion_content":"我的理解，是不是说栈帧的分配可以不连续。不用顺序分配栈帧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597882453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79858,"user_name":"Prince Baron","can_delete":false,"product_type":"c1","uid":1473838,"ip_address":"","ucode":"214E6364FD6860","user_header":"https://static001.geekbang.org/account/avatar/00/16/7d/2e/2bc2ba6f.jpg","comment_is_top":false,"comment_ctime":1553564491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553564491","product_id":100010301,"comment_content":"老师，JNI有两款编译器C1和C2，解释器有名字吗？","like_count":0},{"had_liked":false,"id":78850,"user_name":"Paul","can_delete":false,"product_type":"c1","uid":1445466,"ip_address":"","ucode":"85653228A7AF5E","user_header":"https://static001.geekbang.org/account/avatar/00/16/0e/5a/617f28bf.jpg","comment_is_top":false,"comment_ctime":1553257513,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1553257513","product_id":100010301,"comment_content":"Jvm是如何判断哪些代码是解释执行，哪些代码是即时编译的呢？有相应的标准吗？代码全部采用解释执行，性能是不是更好？","like_count":0},{"had_liked":false,"id":78492,"user_name":"一去二三里","can_delete":false,"product_type":"c1","uid":1466810,"ip_address":"","ucode":"0BA468490D5AFF","user_header":"https://static001.geekbang.org/account/avatar/00/16/61/ba/fec75d3a.jpg","comment_is_top":false,"comment_ctime":1553159230,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553159230","product_id":100010301,"comment_content":"看不懂 jasm里面得jvm指令集，这个影响后续得课程吗？","like_count":0},{"had_liked":false,"id":78485,"user_name":"","can_delete":false,"product_type":"c1","uid":1377891,"ip_address":"","ucode":"7A36F53463EAD3","user_header":"https://static001.geekbang.org/account/avatar/00/15/06/63/e75c2ac5.jpg","comment_is_top":false,"comment_ctime":1553157134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553157134","product_id":100010301,"comment_content":"public class Foo<br>{<br>  public static void main(String[] paramArrayOfString)<br>  {<br>    int i = 2;<br>    if (i != 0) {<br>      System.out.println(&quot;Hello, Java!&quot;);<br>    }<br>    if (i != 0) {<br>      System.out.println(&quot;Hello, JVM!&quot;);<br>    }<br>  }<br>}<br>为什么jasm反向生成的class，是这样的啊，boolean类型变成了int类型","like_count":0},{"had_liked":false,"id":77377,"user_name":"Theodore","can_delete":false,"product_type":"c1","uid":1055049,"ip_address":"","ucode":"0735C2A64295FC","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/49/9452b2fd.jpg","comment_is_top":false,"comment_ctime":1552914747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552914747","product_id":100010301,"comment_content":"Oracle jdk怎么做这个实验？idea 有对应asm插件怎么用？","like_count":0},{"had_liked":false,"id":77219,"user_name":"‭vayi","can_delete":false,"product_type":"c1","uid":1463829,"ip_address":"","ucode":"2689EE53C8C179","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/15/45becc7f.jpg","comment_is_top":false,"comment_ctime":1552889635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552889635","product_id":100010301,"comment_content":"asmtools下载下来后自己要用ant构建一下才能得到jar的。。。","like_count":0},{"had_liked":false,"id":76225,"user_name":"Mark","can_delete":false,"product_type":"c1","uid":1125474,"ip_address":"","ucode":"01437C4021E82E","user_header":"https://static001.geekbang.org/account/avatar/00/11/2c/62/b5fcbf2b.jpg","comment_is_top":false,"comment_ctime":1552553609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552553609","product_id":100010301,"comment_content":"后期调试里不顺辣么多线程，线程诞生的方式是不是有点问题<br>TreadFactory 了解下","like_count":0},{"had_liked":false,"id":75934,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1552493782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552493782","product_id":100010301,"comment_content":"栈祯中存放操作数，这个操作数是什么？","like_count":0},{"had_liked":false,"id":72279,"user_name":"Abc简简简简","can_delete":false,"product_type":"c1","uid":1132720,"ip_address":"","ucode":"5A0A5648B9E6F7","user_header":"https://static001.geekbang.org/account/avatar/00/11/48/b0/f9ad2d76.jpg","comment_is_top":false,"comment_ctime":1551571218,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551571218","product_id":100010301,"comment_content":"小结：java代码是怎样运行的？可以从两个角度回答，一个人虚拟机的角度加载运行，一个是硬件角度，解释或编译","like_count":0},{"had_liked":false,"id":69052,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1550651981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550651981","product_id":100010301,"comment_content":"国外的海关官员知识面都这么广吗？还好订阅了老师的课，否则就拒签了，😄","like_count":0},{"had_liked":false,"id":67410,"user_name":"阿U","can_delete":false,"product_type":"c1","uid":1171359,"ip_address":"","ucode":"161A8E74E0D612","user_header":"https://static001.geekbang.org/account/avatar/00/11/df/9f/6e3e1b77.jpg","comment_is_top":false,"comment_ctime":1550141185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550141185","product_id":100010301,"comment_content":"老师 我执行完那段 java -jar asmtools.jar jdis Foo.class &gt; Foo.jasm.1之后报错<br>Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError:org&#47;openjdk&#47;asmtools&#47;Main : Unsupported major.minor version 52.0<br>我网上查了一下说是  jkd和jre版本不一致 我看了 我的是一样的","like_count":0},{"had_liked":false,"id":66981,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1550050594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550050594","product_id":100010301,"comment_content":"刚开始看您这一系列的文章，感觉写的真棒！<br>我想请教几个问题：<br>1、在JVM里面，代码被JIT编译后，JVM是如何切换到机器码的呢？<br>2、C1编译后，字节码是不会被清理出内存的，这样理解对吗？<br>3、那C2编译后，C1编译的代码是否会被清理出内存呢？<br>感谢！","like_count":0},{"had_liked":false,"id":63503,"user_name":"颇忒妥","can_delete":false,"product_type":"c1","uid":1026448,"ip_address":"","ucode":"AA86AD1049BC2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/90/0c5ed3d9.jpg","comment_is_top":false,"comment_ctime":1548385649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548385649","product_id":100010301,"comment_content":"老师，您在文章里讲到C1（client）和C2（server）两种编译器，那么在启动JVM的时候添加了-server参数，那么JVM是依然会同时使用C1、C2，还是说只会使用C2呢？","like_count":0},{"had_liked":false,"id":61203,"user_name":"阿姐的阿杰","can_delete":false,"product_type":"c1","uid":1001156,"ip_address":"","ucode":"89F5CF4D1E0C2D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/46/c4/128338f8.jpg","comment_is_top":false,"comment_ctime":1547636909,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1547636909","product_id":100010301,"comment_content":"请教老师：「栈帧的大小是提前计算好的」请问是如何确定栈帧的大小的呢？困扰了好久。","like_count":0,"discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351229,"discussion_content":"局部变量类型大小是在编译时就确定的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614181405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61117,"user_name":"jack Wong","can_delete":false,"product_type":"c1","uid":1356930,"ip_address":"","ucode":"EDF88971815846","user_header":"https://static001.geekbang.org/account/avatar/00/14/b4/82/62548de6.jpg","comment_is_top":false,"comment_ctime":1547622265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547622265","product_id":100010301,"comment_content":"郑老师你好，关于翻译出来的jasm文件有个问题想请教一下<br>super public class Foo<br>\tversion 52:0<br>{<br><br><br>public Method &quot;&lt;init&gt;&quot;:&quot;()V&quot;<br>\tstack 1 locals 1<br>{<br>\t\taload_0;<br>\t\tinvokespecial\tMethod java&#47;lang&#47;Object.&quot;&lt;init&gt;&quot;:&quot;()V&quot;;<br>\t\treturn;<br>}<br><br>public static Method main:&quot;([Ljava&#47;lang&#47;String;)V&quot;<br>\tstack 2 locals 2<br>{<br>\t\ticonst_1;<br>\t\tistore_1;<br>\t\tiload_1;<br>\t\tifeq\tL14;<br>\t\tgetstatic\tField java&#47;lang&#47;System.out:&quot;Ljava&#47;io&#47;PrintStream;&quot;;<br>\t\tldc\tString &quot;Hello, Java!&quot;;<br>\t\tinvokevirtual\tMethod java&#47;io&#47;PrintStream.println:&quot;(Ljava&#47;lang&#47;String;)V&quot;;<br>\tL14:\tstack_frame_type append;<br>\t\tlocals_map int;<br>\t\tiload_1;<br>\t\ticonst_1;<br>\t\tif_icmpne\tL27;<br>\t\tgetstatic\tField java&#47;lang&#47;System.out:&quot;Ljava&#47;io&#47;PrintStream;&quot;;<br>\t\tldc\tString &quot;Hello, JVM!&quot;;<br>\t\tinvokevirtual\tMethod java&#47;io&#47;PrintStream.println:&quot;(Ljava&#47;lang&#47;String;)V&quot;;<br>\tL27:\tstack_frame_type same;<br>\t\treturn;<br>}<br><br>} &#47;&#47; end Class Foo<br>有两个iconst_1,我尝试两个都改成iconst_2,发现两个if都可以进入，如果我就将第一个iconst_1改成iconst_2那就可以，其实这两个iconst_1有什么不一样呢","like_count":0},{"had_liked":false,"id":60239,"user_name":"roie","can_delete":false,"product_type":"c1","uid":1371983,"ip_address":"","ucode":"0CC9598364820A","user_header":"https://static001.geekbang.org/account/avatar/00/14/ef/4f/8b7e1f1e.jpg","comment_is_top":false,"comment_ctime":1547450380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547450380","product_id":100010301,"comment_content":"我在这节老师练习代码，最后一个指令java Foo 操作爆出这个错误，不知道什么意思？大佬帮忙解决下，错误如下：<br>Error: A JNI error has occurred, please check your installation and try again<br>Exception in thread &quot;main&quot; java.lang.VerifyError: Operand stack underflow<br>Exception Details:<br>  Location:<br>    Foo.main([Ljava&#47;lang&#47;String;)V @0: istore_1<br>  Reason:<br>    Attempt to pop empty stack.<br>  Current Frame:<br>    bci: @0<br>    flags: { }<br>    locals: { &#39;[Ljava&#47;lang&#47;String;&#39; }<br>    stack: { }<br>  Bytecode:<br>    0x0000000: 3c1b 9900 0bb2 0003 1201 b600 0504 1ba0<br>    0x0000010: 000b b200 0312 02b6 0005 b1<br>  Stackmap Table:<br>    append_frame(@13,Integer)<br>    same_frame(@26)<br><br>        at java.lang.Class.getDeclaredMethods0(Native Method)<br>        at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)<br>        at java.lang.Class.privateGetMethodRecursive(Class.java:3048)<br>        at java.lang.Class.getMethod0(Class.java:3018)<br>        at java.lang.Class.getMethod(Class.java:1784)<br>        at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544<br>)<br>        at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)","like_count":0},{"had_liked":false,"id":58639,"user_name":"jack Wong","can_delete":false,"product_type":"c1","uid":1356930,"ip_address":"","ucode":"EDF88971815846","user_header":"https://static001.geekbang.org/account/avatar/00/14/b4/82/62548de6.jpg","comment_is_top":false,"comment_ctime":1547165200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547165200","product_id":100010301,"comment_content":"想请教一下作者大大，文中提及到的栈帧是不是jvm 中每个线程的私有内存空间呢？主内存的各个副本","like_count":0},{"had_liked":false,"id":57776,"user_name":"书策稠浊","can_delete":false,"product_type":"c1","uid":1307497,"ip_address":"","ucode":"A29875CE15FDA3","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","comment_is_top":false,"comment_ctime":1546908602,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1546908602","product_id":100010301,"comment_content":"Java是一次编写，一次编译，到处运行，c++是一次编写，多次编译，到处运行，不同的只是编译而已，常用的操作系统就这么几种，根本不需要编译多少次。所以我觉得用可移植性来说Java的优势有点说不过去。","like_count":0,"discussions":[{"author":{"id":1014146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/82/c3cccc38.jpg","nickname":"IT生涯路漫漫","note":"","ucode":"4954D1CBEB4E44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310922,"discussion_content":"Java最早诞生的时候是用来做硬件设备嵌入式软件的，可能不同设备它们的运行环境天差地别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602134125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53581,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1545697948,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545697948","product_id":100010301,"comment_content":"老师问个问题：<br>  jvm编译过程有两个：1.解释执行 2.即时编译，即时编译将直接将字节码翻译为机器码，那为什么不在启动时直接将jar里的文件字节码翻译为机器码，然后在做执行，这样效率会更快吗？","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392535,"discussion_content":"这样就把很多用不上的代码也翻译成机器码了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631029839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52312,"user_name":"贾鹤鸣   ","can_delete":false,"product_type":"c1","uid":1091327,"ip_address":"","ucode":"52F87F513576D7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a6/ff/4a8c99f1.jpg","comment_is_top":false,"comment_ctime":1545361296,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1545361296","product_id":100010301,"comment_content":"文中提到<br>`从 Java 7 开始，HotSpot 默认采用分层编译的方式`<br>我网上找了下貌似，Java 8 默认是关闭这种方式的，有没有直接展示各版本差异对比，以及验证方法的地方呢。","like_count":0},{"had_liked":false,"id":50627,"user_name":"summer_Day","can_delete":false,"product_type":"c1","uid":1334131,"ip_address":"","ucode":"41C5A129911B49","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/73/23040664.jpg","comment_is_top":false,"comment_ctime":1545017808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545017808","product_id":100010301,"comment_content":"厉害","like_count":0},{"had_liked":false,"id":48038,"user_name":"easy","can_delete":false,"product_type":"c1","uid":1077728,"ip_address":"","ucode":"10FEA3D65B2536","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/e0/ebe7d07c.jpg","comment_is_top":false,"comment_ctime":1544328212,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544328212","product_id":100010301,"comment_content":"老师，您好，堆内存dump出来百分之98都是不可达对象，怎么回事？","like_count":0},{"had_liked":false,"id":46153,"user_name":"Spark","can_delete":false,"product_type":"c1","uid":1219781,"ip_address":"","ucode":"9F4F6170B516AA","user_header":"https://static001.geekbang.org/account/avatar/00/12/9c/c5/3de92354.jpg","comment_is_top":false,"comment_ctime":1543854912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543854912","product_id":100010301,"comment_content":"每当调用一个Java方法，虚拟机会在该线程的Java方法栈中生成一个栈帧，用以存放局部变量和字节码的操作数。请问，字节码的操作数是什么？","like_count":0},{"had_liked":false,"id":37433,"user_name":"intuition","can_delete":false,"product_type":"c1","uid":1083657,"ip_address":"","ucode":"94D61C78277850","user_header":"https://static001.geekbang.org/account/avatar/00/10/89/09/d660509d.jpg","comment_is_top":false,"comment_ctime":1541584553,"is_pvip":false,"replies":[{"id":"14124","content":"个人感觉应该是静态编译的各种语言中C++比较突出，一次编译到处运行的各种语言中Java比较典型。<br><br>你可以用LLVM把C++编译成bitcode到处运行，也可以用AOT把Java编译成机器码。只不过不是那么”流行”","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1542280800,"ip_address":"","comment_id":37433,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541584553","product_id":100010301,"comment_content":"老师你好，我有个地方还是想不通，为什么java采用一次编译，到处运行的这种方式，而不是C++的不同平台都进行编译， java这样设计 加了中间层 反而执行效率降低，那这种设计的初衷是什么呢？  ","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428337,"discussion_content":"个人感觉应该是静态编译的各种语言中C++比较突出，一次编译到处运行的各种语言中Java比较典型。\n\n你可以用LLVM把C++编译成bitcode到处运行，也可以用AOT把Java编译成机器码。只不过不是那么”流行”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542280800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35773,"user_name":"Rophie","can_delete":false,"product_type":"c1","uid":1172250,"ip_address":"","ucode":"34C0C92D033D04","user_header":"https://static001.geekbang.org/account/avatar/00/11/e3/1a/17d8ec44.jpg","comment_is_top":false,"comment_ctime":1540790526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540790526","product_id":100010301,"comment_content":"为什么asmtools 下载不了？ 那位能够共享一下？","like_count":0},{"had_liked":false,"id":34237,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1540045352,"is_pvip":false,"replies":[{"id":"12750","content":"如果把虚拟机也当作一个机器，它所接收的代码格式就可以叫做”机器码”。Java虚拟机的机器码，我们有一个约定俗成的名字叫Java字节码","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1540819972,"ip_address":"","comment_id":34237,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1540045352","product_id":100010301,"comment_content":"“举例来说，下图的中间列，正是用Java写的Helloworld程序编译而成的字节码。”<br>......<br>“# 最左列是偏移；中间列是虚拟机读的机器码；最右侧是给人读的代码<br>0x00:  b2 00 02     getstatic java.lang.System.out”<br>......<br><br>-------------------<br>这里是否有误，一个写的是字节码，一个又说是机器码，上面那句话里的是机器码吧？还是虚拟机读的是字节码？ <br>","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427153,"discussion_content":"如果把虚拟机也当作一个机器，它所接收的代码格式就可以叫做”机器码”。Java虚拟机的机器码，我们有一个约定俗成的名字叫Java字节码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540819972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33556,"user_name":"有凤来仪","can_delete":false,"product_type":"c1","uid":1268869,"ip_address":"","ucode":"324254732B24A0","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/85/921f4f99.jpg","comment_is_top":false,"comment_ctime":1539825078,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539825078","product_id":100010301,"comment_content":"老师问个问题，java代码最终运行在jvm还是操作系统呢？如果是jvm，为啥还要转为机器码呢","like_count":0},{"had_liked":false,"id":31601,"user_name":"dream","can_delete":false,"product_type":"c1","uid":1117793,"ip_address":"","ucode":"65B33D32FA8BE9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/61/ae68f8eb.jpg","comment_is_top":false,"comment_ctime":1539243094,"is_pvip":false,"replies":[{"id":"11576","content":"第二篇有讲解。boolean在字节码中被映射为int类型。这里我们在尝试整数2是true还是false，还是it depends。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1539359512,"ip_address":"","comment_id":31601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539243094","product_id":100010301,"comment_content":"最后小作业中：$ awk &#39;NR==1,&#47;iconst_1&#47;{sub(&#47;iconst_1&#47;, &quot;iconst_2&quot;)} 1&#39; Foo.jasm.1 &gt; Foo.jasm  这个命令，我只知道awk 在linux中是类似于vim的与记事本相关的命令，但是中间的命令到底做了什么一直不明白，经过查资料归纳如下，不对的希望多加指正：<br>awk是linux下一个强大的文本分析工具<br>NR(Number of Record)：行号，当前处理的文本行的行号。<br>sub(regex,sub,string)sub 函数执行一次子串替换。它将第一次出现的子串用 regex 替换。第三个参数是可选的，默认为 $0。<br>$0\t完整的输入记录<br>$n\t当前记录的第n个字段，字段间由FS分隔<br>iconst_1 为 pattern<br>&#47;iconst_1&#47;   两个&#47;表示正则表达式的开始结束符号<br>最后那个1为定值，非0<br>参考资料如下：<br>https:&#47;&#47;blog.csdn.net&#47;xp5xp6&#47;article&#47;details&#47;50531396<br>http:&#47;&#47;www.runoob.com&#47;linux&#47;linux-comm-awk.html<br>http:&#47;&#47;www.runoob.com&#47;w3cnote&#47;awk-built-in-functions.html<br><br>但是把第一个iconst_1替换为iconst_2有什么用呢？有点不理解。","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426424,"discussion_content":"第二篇有讲解。boolean在字节码中被映射为int类型。这里我们在尝试整数2是true还是false，还是it depends。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539359512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":29510,"user_name":"chenfei","can_delete":false,"product_type":"c1","uid":1137367,"ip_address":"","ucode":"3AF73DDA407061","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/d7/2bcc13a5.jpg","comment_is_top":false,"comment_ctime":1538398935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538398935","product_id":100010301,"comment_content":"你好，既然类都被加载到方法区了，反射调用是否有可能直接访问方法区，还是要必须访问类型类对象？","like_count":0},{"had_liked":false,"id":29325,"user_name":"maytwo","can_delete":false,"product_type":"c1","uid":1257647,"ip_address":"","ucode":"C9BC0021C35FEB","user_header":"https://static001.geekbang.org/account/avatar/00/13/30/af/86684a0e.jpg","comment_is_top":false,"comment_ctime":1538353762,"is_pvip":false,"replies":[{"id":"10613","content":"下AArch64版本的OpenJDK","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1538405558,"ip_address":"","comment_id":29325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1538353762","product_id":100010301,"comment_content":"老师，运行在x86的java程序，怎样才能运行在arm架构","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425552,"discussion_content":"下AArch64版本的OpenJDK","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538405558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28261,"user_name":"兰传科安卓青铜","can_delete":false,"product_type":"c1","uid":1249226,"ip_address":"","ucode":"3E81A32EC2D4F3","user_header":"","comment_is_top":false,"comment_ctime":1538035699,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1538035699","product_id":100010301,"comment_content":"第一种是解释执行，即逐条将字节码翻译成机器码并执行；第二种是即时编译（Just-In-Time compilation...<br>JIT和ART的区别我没太理解，边翻译边执行不是JIT吗？","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392536,"discussion_content":"边翻译边执行的是解释器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631029969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26908,"user_name":"D→_→M","can_delete":false,"product_type":"c1","uid":1184017,"ip_address":"","ucode":"5EFDE9E2ED2C8B","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/11/52a78856.jpg","comment_is_top":false,"comment_ctime":1537773795,"is_pvip":false,"replies":[{"id":"10289","content":"awk就是一个文本处理修改工具，要用时查查man文档即可。<br><br>这一条awk指令相当于用记事本打开，搜索iconst1，替换为iconst2。你可以就在记事本这样的GUI程序里操作，也挺方便的。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1538115928,"ip_address":"","comment_id":26908,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537773795","product_id":100010301,"comment_content":"做作业的时候发现自己了解的真的是太少了，又去看了几篇java字节码个awk的文章才勉强把作业搞懂。看了一些awk的用法文章，了解了一些语法，但还不是很懂老师的那天awk命令，老师能给讲解一下吗？","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424753,"discussion_content":"awk就是一个文本处理修改工具，要用时查查man文档即可。\n\n这一条awk指令相当于用记事本打开，搜索iconst1，替换为iconst2。你可以就在记事本这样的GUI程序里操作，也挺方便的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538115928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25149,"user_name":"L","can_delete":false,"product_type":"c1","uid":1221794,"ip_address":"","ucode":"B8536DC3681D0E","user_header":"https://static001.geekbang.org/account/avatar/00/12/a4/a2/87654b24.jpg","comment_is_top":false,"comment_ctime":1537256054,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1537256054","product_id":100010301,"comment_content":"既然解释执行的时候都已经将字节码翻译成机器码了，为什么还要再对热点代码进行即时编译呢？为什么不能在解释执行的同时将已经翻译成机器码的代码保存起来，下次执行的时候如果是已经翻译过的代码就直接执行机器码，如果是未翻译过的那就进行解释执行？","like_count":0,"discussions":[{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392537,"discussion_content":"占空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631030012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23061,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1222211,"ip_address":"","ucode":"8175463FB4705B","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/43/cb6ab349.jpg","comment_is_top":false,"comment_ctime":1536127747,"is_pvip":false,"replies":[{"id":"8469","content":"可以直接看第16 17篇，你的问题基本上都覆盖到了","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1536330992,"ip_address":"","comment_id":23061,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536127747","product_id":100010301,"comment_content":"即时编译器收集信息会不会产生额外的开销？这个开销会不会随着单位时间内访问次数的增大而增大？Java的动态编译和C++的静态编译都是转换成机器码，Java的优势在哪，运行期间的优化方案有哪些？<br><br>阅读完后我还有这些疑问，麻烦老师解答一下😃","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423395,"discussion_content":"可以直接看第16 17篇，你的问题基本上都覆盖到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536330992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21146,"user_name":"dingwood","can_delete":false,"product_type":"c1","uid":1153828,"ip_address":"","ucode":"460EB0C6E8C611","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/24/1e4883c6.jpg","comment_is_top":false,"comment_ctime":1534939306,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534939306","product_id":100010301,"comment_content":"“栈帧存储局部变量以及字节码的操作数，栈帧的大小是提前计算好的 ”    ，郑老师，这段话中 字节码的操作数 是指什么？不明白这个概念。 另外 栈帧的大小 在哪可以看到，在linux 用ulimit -a ，显示的stack大小即为栈帧大小？ 两个问题，盼复，谢谢！","like_count":0},{"had_liked":false,"id":19943,"user_name":"D.Onlyone","can_delete":false,"product_type":"c1","uid":1189376,"ip_address":"","ucode":"DE79914E3B84F5","user_header":"https://static001.geekbang.org/account/avatar/00/12/26/00/2de4f71e.jpg","comment_is_top":false,"comment_ctime":1534172557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534172557","product_id":100010301,"comment_content":"看来我还是太菜，能看懂，就是作业完成不了，😂，还是看的评论才弄好，为啥我就看不懂这些字节码?求老师给推荐个书.","like_count":0},{"had_liked":false,"id":19712,"user_name":"蓝白之间","can_delete":false,"product_type":"c1","uid":1190236,"ip_address":"","ucode":"FE50E0D4B05FC1","user_header":"https://static001.geekbang.org/account/avatar/00/12/29/5c/6e2e1ffd.jpg","comment_is_top":false,"comment_ctime":1533988634,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533988634","product_id":100010301,"comment_content":"C++如何运行在不同操作系统的呢？比如Linux 和windows ","like_count":0},{"had_liked":false,"id":18643,"user_name":"匿名小板凳","can_delete":false,"product_type":"c1","uid":1186977,"ip_address":"","ucode":"8291BC51EE78CB","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/a1/4e063c44.jpg","comment_is_top":false,"comment_ctime":1533519243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533519243","product_id":100010301,"comment_content":"老师好，Java虚拟机在执行时怎么定义热点方法和热点代码的？","like_count":0},{"had_liked":false,"id":18603,"user_name":"三分热狗","can_delete":false,"product_type":"c1","uid":1156744,"ip_address":"","ucode":"9CAD96CA4B37DF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqckmvZia5LKRafjqOOBxk6LmJn273RLnw7giaibD1SsN7o01LKfpRiaUCKH6u7hPyOujT6Jspg3z19lg/132","comment_is_top":false,"comment_ctime":1533484352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533484352","product_id":100010301,"comment_content":"思路清晰 通俗易懂 受益匪浅","like_count":0},{"had_liked":false,"id":18570,"user_name":"hacker time","can_delete":false,"product_type":"c1","uid":1017296,"ip_address":"","ucode":"41F0870C832ECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/d0/71bc9d31.jpg","comment_is_top":false,"comment_ctime":1533460513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533460513","product_id":100010301,"comment_content":"解释器的程序能讲解一下吗？","like_count":0},{"had_liked":false,"id":18552,"user_name":"三思","can_delete":false,"product_type":"c1","uid":1194214,"ip_address":"","ucode":"0FFCF3683AAE5D","user_header":"https://static001.geekbang.org/account/avatar/00/12/38/e6/fa815274.jpg","comment_is_top":false,"comment_ctime":1533445534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533445534","product_id":100010301,"comment_content":"PC寄存器和栈什么关系啊，一直对这儿不太理解","like_count":0},{"had_liked":false,"id":18041,"user_name":"张皮皮","can_delete":false,"product_type":"c1","uid":1193531,"ip_address":"","ucode":"537D4F9B382D0D","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/3b/20731848.jpg","comment_is_top":false,"comment_ctime":1533099694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533099694","product_id":100010301,"comment_content":"听之后又重新了解了一些，之前看过，不过忘了，作业暂时还没做","like_count":0},{"had_liked":false,"id":18015,"user_name":"jikelinj","can_delete":false,"product_type":"c1","uid":1191184,"ip_address":"","ucode":"254E49297941B1","user_header":"http://thirdwx.qlogo.cn/mmopen/eKfCXGrAiaUgRmHMr1q0rDOAibCpy6p7bFQkjWEooOMQNv4JUcic1X6XoQDNO3eWK7QlzSzKwxRDmzffKlHic4rQxRLFawiaICQ7N/132","comment_is_top":false,"comment_ctime":1533086765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533086765","product_id":100010301,"comment_content":"这个平台还不够完善，只能给作者留言。希望老师一定要看到留言给解答一下吧","like_count":0},{"had_liked":false,"id":18013,"user_name":"jikelinj","can_delete":false,"product_type":"c1","uid":1191184,"ip_address":"","ucode":"254E49297941B1","user_header":"http://thirdwx.qlogo.cn/mmopen/eKfCXGrAiaUgRmHMr1q0rDOAibCpy6p7bFQkjWEooOMQNv4JUcic1X6XoQDNO3eWK7QlzSzKwxRDmzffKlHic4rQxRLFawiaICQ7N/132","comment_is_top":false,"comment_ctime":1533086214,"is_pvip":false,"replies":[{"id":"6319","content":"在汇编后，也就是调用jasm.Main后，用javap查看一下Foo类的字节码，看有没有iconst_2","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1533157531,"ip_address":"","comment_id":18013,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1533086214","product_id":100010301,"comment_content":"老师，我的demo怎么两个都可以打印输出？<br>hello java 和hello jvm都可以，但是我看到留言中有位高手的详解中说第二个不打印，有点郁闷","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421359,"discussion_content":"在汇编后，也就是调用jasm.Main后，用javap查看一下Foo类的字节码，看有没有iconst_2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533157531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17842,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1532995999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532995999","product_id":100010301,"comment_content":"终于把JVM中的解释执行和JIT及时编译分清楚了！讲得浅显易懂！","like_count":0},{"had_liked":false,"id":17839,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1532995219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532995219","product_id":100010301,"comment_content":"终于把JVM中的解释执行和JIT及时编译分清楚了！讲得浅显易懂！","like_count":0},{"had_liked":false,"id":17748,"user_name":"Bale","can_delete":false,"product_type":"c1","uid":1189349,"ip_address":"","ucode":"F9AABEA9ED24C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/25/e5/921492c1.jpg","comment_is_top":false,"comment_ctime":1532925135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532925135","product_id":100010301,"comment_content":"老实……原谅我做作业慢了<br>我这边windows是可以做做作业的，首先把.gz里的.zip打开然后进入asmtool6.0&#47;lib中，把asmtools.jar解压到指定位置，然后将作业代码，asmtools的路径对应修改即可。<br>原理请看评论第一高手","like_count":0},{"had_liked":false,"id":17688,"user_name":"迈克擂","can_delete":false,"product_type":"c1","uid":1191586,"ip_address":"","ucode":"FFA43826FC7526","user_header":"https://static001.geekbang.org/account/avatar/00/12/2e/a2/cdd182e5.jpg","comment_is_top":false,"comment_ctime":1532876477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532876477","product_id":100010301,"comment_content":"想请问老师:静态常量池和方法区是怎样的关系呢？Java类加载到方法区，和类中的静态常量和静态块加载的顺序是怎样的呢？希望老师看到能够解答一下。","like_count":0},{"had_liked":false,"id":17563,"user_name":"红烧清蒸","can_delete":false,"product_type":"c1","uid":1142906,"ip_address":"","ucode":"9E045195735433","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/7a/64f1c75a.jpg","comment_is_top":false,"comment_ctime":1532747718,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532747718","product_id":100010301,"comment_content":"我按作业执行最后还是都打印了。我原来Foo.class的字节码是0:iconst_1，Foo.jasm.1的字节码是iconst_1，Foo.jasm的字节码变成了iconst_2，运行java cp asmtools.jar org.openjdk.asmtools.jasm.Main Foo.jasm后Foo.class字节码变成了0:iconst_2，我想知道wsm没有成功，我用的是jdk1.8，awk版本是20070501，asmtools.jar是通过hg clone拉下来有ant编译的","like_count":0},{"had_liked":false,"id":17548,"user_name":"Douglas","can_delete":false,"product_type":"c1","uid":1073027,"ip_address":"","ucode":"CFDE3D76B9DAE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/83/bb728e53.jpg","comment_is_top":false,"comment_ctime":1532740091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532740091","product_id":100010301,"comment_content":"老师，Java 虚拟机会在当前线程的 Java 方法栈中生成一个栈帧，用以存放局部变量以及字节码的操作数。这个局部变量应该是一个引用吧，真正的值是存储在堆里面。这个帧栈是提前计算好的，那具体有多大，对变量有什么限制吗？","like_count":0},{"had_liked":false,"id":17526,"user_name":"Douglas","can_delete":false,"product_type":"c1","uid":1073027,"ip_address":"","ucode":"CFDE3D76B9DAE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/83/bb728e53.jpg","comment_is_top":false,"comment_ctime":1532709085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532709085","product_id":100010301,"comment_content":"老师，Java 虚拟机会在当前线程的 Java 方法栈中生成一个栈帧，用以存放局部变量以及字节码的操作数。我想知道这个局部变量可以有多大，如果是个大对象，比如一个含有几百兆的字节数组的对象，比如文件数据，是不是对系统的性能有很大影响？","like_count":0},{"had_liked":false,"id":17434,"user_name":"镰仓","can_delete":false,"product_type":"c1","uid":1011300,"ip_address":"","ucode":"0548B222E194C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/64/456c280d.jpg","comment_is_top":false,"comment_ctime":1532650670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532650670","product_id":100010301,"comment_content":"非常好，简洁，打击准确。对于我意愿深入理解Android 虚拟机提供了学习指导。继续学习","like_count":0},{"had_liked":false,"id":17109,"user_name":"咖啡猫口里的咖啡猫🐱","can_delete":false,"product_type":"c1","uid":1036565,"ip_address":"","ucode":"FE2441B3A40375","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d1/15/7d47de48.jpg","comment_is_top":false,"comment_ctime":1532440436,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532440436","product_id":100010301,"comment_content":"老师怎么好编译jdk8，或以后的，，两天了，能不能介绍的文章出处啊😊，我还是喜欢自己有代码调试的感觉","like_count":0},{"had_liked":false,"id":16960,"user_name":"lubibo","can_delete":false,"product_type":"c1","uid":1180794,"ip_address":"","ucode":"707A70AAD6232D","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/7a/a15ca9a8.jpg","comment_is_top":false,"comment_ctime":1532330362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532330362","product_id":100010301,"comment_content":"想问一下java方法栈和本地方法栈有什么区别","like_count":0},{"had_liked":false,"id":16954,"user_name":"vimfun","can_delete":false,"product_type":"c1","uid":1007359,"ip_address":"","ucode":"EAB2281FC0552A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/ff/295bcf2c.jpg","comment_is_top":false,"comment_ctime":1532325629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532325629","product_id":100010301,"comment_content":"先编译为Java bytecode<br><br>运行时 即时编译 分C1. C2, G. 多种可能<br><br>先C1 再 C2<br><br><br>java9有了aot解决启动时间问题<br><br>asmtools  jasm&#47;jdis<br>","like_count":0},{"had_liked":false,"id":16938,"user_name":"bosiam","can_delete":false,"product_type":"c1","uid":1183123,"ip_address":"","ucode":"CBBB86D1D13123","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/93/64dc7d2a.jpg","comment_is_top":false,"comment_ctime":1532316270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532316270","product_id":100010301,"comment_content":"对于占据大部分的不常用的代码，我们无需耗费时间将其编译成机器码，而是采取解释执行的方式运行；另一方面，对于仅占据小部分的热点代码，我们则可以将其编译成机器码，以达到理想的运行速度。<br><br>这句话有个疑问：<br>解释执行的方式运行也是需要编译成机器码的对吧，只不过是逐条编译？","like_count":0},{"had_liked":false,"id":16930,"user_name":"Desperado","can_delete":false,"product_type":"c1","uid":1095088,"ip_address":"","ucode":"6F100205DFF3B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/b5/b0/7f350c5a.jpg","comment_is_top":false,"comment_ctime":1532310709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532310709","product_id":100010301,"comment_content":"希望案列在手","like_count":0},{"had_liked":false,"id":16923,"user_name":"性能","can_delete":false,"product_type":"c1","uid":1137192,"ip_address":"","ucode":"BBFA2A31B02B8F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyhbzdkFM64HvRATbWjc3hkic7icUszl9hU9hpIMZcibKH4wWam4SHfkcvM7MUoKjGDRrvYGXuvR91Q/132","comment_is_top":false,"comment_ctime":1532308132,"is_pvip":false,"replies":[{"id":"5916","content":"即时编译就是一个编译器，里面有很多不同的优化，对应不同的算法。触发即时编译用的是JVM维护的统计方法调用次数的计数器。编译时间取决于编译器自己的效率。由于程序的不确定性，在多线程环境下即时编译器干的活可能多可能少。","user_name":"作者回复","user_name_real":"郑雨迪","uid":"1176688","ctime":1532419525,"ip_address":"","comment_id":16923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1532308132","product_id":100010301,"comment_content":"老师，即时编译是啥算法？编译哪些代码？何时编译完成？为啥我每次压测启动后，top命令查看，同样的代码编译线程工作时长不太一样？","like_count":0,"discussions":[{"author":{"id":1176688,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f4/70/2f61fa20.jpg","nickname":"郑雨迪","note":"","ucode":"F7CA1AE501EAFF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420969,"discussion_content":"即时编译就是一个编译器，里面有很多不同的优化，对应不同的算法。触发即时编译用的是JVM维护的统计方法调用次数的计数器。编译时间取决于编译器自己的效率。由于程序的不确定性，在多线程环境下即时编译器干的活可能多可能少。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532419525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16907,"user_name":"ybin","can_delete":false,"product_type":"c1","uid":1177825,"ip_address":"","ucode":"5FE507A91A121A","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/e1/bffdc547.jpg","comment_is_top":false,"comment_ctime":1532305903,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532305903","product_id":100010301,"comment_content":"想问下，方法中的局部变量是在方法结束时出栈回收，那方法中的循环或是if块中的变量是在循环或是if结束后被出栈被回收呢，还是在方法结束后再回收呢，毕竟if中定义的变量还是不能被if外的代码使用？","like_count":0},{"had_liked":false,"id":16897,"user_name":"李子","can_delete":false,"product_type":"c1","uid":1183044,"ip_address":"","ucode":"CFE04B8A9504DF","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/44/d3c21481.jpg","comment_is_top":false,"comment_ctime":1532302876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532302876","product_id":100010301,"comment_content":"听上去，栈溢出除了跟方法调用层级有关，也跟方法的局部变量多少大小有关。<br>有些性能调优会让把线程栈内存调低一点，这是为什么？只是为了能有更多的线程么？","like_count":0},{"had_liked":false,"id":16893,"user_name":"秋","can_delete":false,"product_type":"c1","uid":1170555,"ip_address":"","ucode":"FE43908DE2AC57","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/7b/3f8d9fc9.jpg","comment_is_top":false,"comment_ctime":1532287815,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532287815","product_id":100010301,"comment_content":"&gt;&gt; Java 作为一门高级程序语言，它的语法非常复杂，抽象程度也很高..直接在硬件上运行不现实<br><br>c++的语法和抽象程度不比Java低，但是在本地跑，感觉这句话不是很准确，逻辑可以调整下<br>","like_count":0},{"had_liked":false,"id":16881,"user_name":"孙歌","can_delete":false,"product_type":"c1","uid":1181437,"ip_address":"","ucode":"E22874B1A6564D","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/fd/494803f2.jpg","comment_is_top":false,"comment_ctime":1532273666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532273666","product_id":100010301,"comment_content":"老师，您好！想问一下方法区存储Java类是采用什么结构形式来存储的呢，还有方法区的Java类会不会被垃圾回收呢？","like_count":0},{"had_liked":false,"id":16875,"user_name":"和风暖林","can_delete":false,"product_type":"c1","uid":1183812,"ip_address":"","ucode":"3FF31DB24C2065","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/44/e7437824.jpg","comment_is_top":false,"comment_ctime":1532270101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532270101","product_id":100010301,"comment_content":"写得很好呀，期待后面的内容","like_count":0},{"had_liked":false,"id":16851,"user_name":"小奶狗","can_delete":false,"product_type":"c1","uid":1178236,"ip_address":"","ucode":"DC810503571DD2","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/7c/f8f38ad0.jpg","comment_is_top":false,"comment_ctime":1532255145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532255145","product_id":100010301,"comment_content":"老师，关于题目，为什么执行awk后，反编译Foo.class，反编译后的代码和Foo.java都不同了，表现在“初始化变量为2”了（所以改动后只会打印Hello,Java!），可我们没直接对Foo.class做改动啊。还有用javap -c Foo.class，得到的结果有一段为“Compiled from Foo.jasm”，我觉得应该是&quot;Compiled from Foo.java&quot;才对，到底awk这一步做了什么，好疑惑。","like_count":0},{"had_liked":false,"id":16845,"user_name":"加多","can_delete":false,"product_type":"c1","uid":1101824,"ip_address":"","ucode":"B2192A2D58C444","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/00/9d05af66.jpg","comment_is_top":false,"comment_ctime":1532251007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532251007","product_id":100010301,"comment_content":"请问Jdk8里面的方法区也不属于堆的吗？","like_count":0},{"had_liked":false,"id":16844,"user_name":"xzchaoo","can_delete":false,"product_type":"c1","uid":1183665,"ip_address":"","ucode":"D44459FCAB5569","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/b1/2bf45bc3.jpg","comment_is_top":false,"comment_ctime":1532250911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532250911","product_id":100010301,"comment_content":"对于小作业，为何编译器对这两种if产生了不一样的字节码呢？就这个例子而言，两者应该是等价的。","like_count":0},{"had_liked":false,"id":16825,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1180675,"ip_address":"","ucode":"7C867F0F3364BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/03/8fde8434.jpg","comment_is_top":false,"comment_ctime":1532239416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532239416","product_id":100010301,"comment_content":"很不错，解决了我许多疑问！大概多久更新一集，希望每天更新一集","like_count":0},{"had_liked":false,"id":16796,"user_name":"杨春鹏","can_delete":false,"product_type":"c1","uid":1172056,"ip_address":"","ucode":"518F38232F97B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg","comment_is_top":false,"comment_ctime":1532215028,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532215028","product_id":100010301,"comment_content":"老师，解释执行是逐行将字节码编译成机器码。如何理解为这里的“逐行”。是所谓的一行代码吗，也就是按照分号来划分？","like_count":0},{"had_liked":false,"id":16784,"user_name":"小菜鸟","can_delete":false,"product_type":"c1","uid":1114659,"ip_address":"","ucode":"16E75180BEFD4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/23/bd476313.jpg","comment_is_top":false,"comment_ctime":1532183352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532183352","product_id":100010301,"comment_content":"老师好！问下！何时将字节码加载到jvm呢","like_count":0},{"had_liked":false,"id":16783,"user_name":"小菜鸟","can_delete":false,"product_type":"c1","uid":1114659,"ip_address":"","ucode":"16E75180BEFD4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/23/bd476313.jpg","comment_is_top":false,"comment_ctime":1532183130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532183130","product_id":100010301,"comment_content":"你好！有个疑问问下哈！<br>什么时候会将字节码加载到jvm的方法区呢？<br>另外您说的编译是指什么？当java文件变为class文件的时候不就是已经编译过了吗？这个时候在jvm中存放的不就是class文件了吗","like_count":0},{"had_liked":false,"id":16748,"user_name":"Lisa Li","can_delete":false,"product_type":"c1","uid":1046663,"ip_address":"","ucode":"4F7CF929FF4C6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/87/0491e9e5.jpg","comment_is_top":false,"comment_ctime":1532151208,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532151208","product_id":100010301,"comment_content":"我可以理解为class文件先被解释执行，等收集到足够的信息之后，C1会对其中的的热点代码进行优化（方法为单位），C2又会对C1中的热点代码(等收集到足够信息）进行优化（方法为单位).对吗？","like_count":0},{"had_liked":false,"id":16746,"user_name":"天敌","can_delete":false,"product_type":"c1","uid":1059944,"ip_address":"","ucode":"CD29A622197197","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/68/c299bc71.jpg","comment_is_top":false,"comment_ctime":1532150709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532150709","product_id":100010301,"comment_content":"老师，我的代码报错 java.lang.UnsupportedClassVersionError, 请问是因为我使用jdk1.7的原因吗？如果是，请问我需要采用什么版本的jdk？","like_count":0},{"had_liked":false,"id":16731,"user_name":"阿土","can_delete":false,"product_type":"c1","uid":1183019,"ip_address":"","ucode":"2DBEAD80B0CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/2b/4814d3db.jpg","comment_is_top":false,"comment_ctime":1532141286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532141286","product_id":100010301,"comment_content":"老师你好，看了你的讲解之后终于明白为什么服务刚启动的时候响应速度比较慢，是因为这个时候还没有即时编译完成，请求过一段时间之后即时编译差不多完成性能就有了很大提升。那么除了这个原因还有别的原因导致刚启动的服务比较慢么？","like_count":0},{"had_liked":false,"id":16708,"user_name":"xianhai","can_delete":false,"product_type":"c1","uid":1073505,"ip_address":"","ucode":"906578663CEB3E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/61/677e8f92.jpg","comment_is_top":false,"comment_ctime":1532128664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532128664","product_id":100010301,"comment_content":"运行asmtools那一步时出错。Foo.class：1 Error invalid character in input","like_count":0},{"had_liked":false,"id":16702,"user_name":"Bin","can_delete":false,"product_type":"c1","uid":1088827,"ip_address":"","ucode":"1A298415CAD963","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/3b/bc67bfbe.jpg","comment_is_top":false,"comment_ctime":1532103425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532103425","product_id":100010301,"comment_content":"hotspot长时间运行后，字节码都会变成机器码吗？还是说有一个比例或者虚拟机只即时编译热点代码，那么虚拟机以什么样的标准去判断热点代码呢？","like_count":0},{"had_liked":false,"id":16694,"user_name":"韶华易逝~","can_delete":false,"product_type":"c1","uid":1178905,"ip_address":"","ucode":"FF0ED2F14B533B","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/19/068c5e8c.jpg","comment_is_top":false,"comment_ctime":1532099108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532099108","product_id":100010301,"comment_content":"老师，上述中提到即时编译有c1和c2，主要应对client端型程序和server端长时间运行型程序。7版本的hotspot的又使用额外线程进行分层编译。我迷惑的是c1和c2是什么时候编译，应用启动还是启动后的运行时？","like_count":0},{"had_liked":false,"id":16692,"user_name":"程序设计的艺术","can_delete":false,"product_type":"c1","uid":1107847,"ip_address":"","ucode":"CA3817C11CD9E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/87/9ad59b98.jpg","comment_is_top":false,"comment_ctime":1532098685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532098685","product_id":100010301,"comment_content":"在方法内实例化了很多个对象，调用其方法，会不会因为对象过多引起堆内存泄漏或者溢出？谢谢","like_count":0},{"had_liked":false,"id":16691,"user_name":"程序设计的艺术","can_delete":false,"product_type":"c1","uid":1107847,"ip_address":"","ucode":"CA3817C11CD9E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/87/9ad59b98.jpg","comment_is_top":false,"comment_ctime":1532098576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532098576","product_id":100010301,"comment_content":"我现在在后台应用中new了很多对象，都是方法内实例化的，如果大并发的话，会不会有问题？","like_count":0},{"had_liked":false,"id":16684,"user_name":"mover","can_delete":false,"product_type":"c1","uid":1183271,"ip_address":"","ucode":"1FAA06D227B4B3","user_header":"","comment_is_top":false,"comment_ctime":1532096108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532096108","product_id":100010301,"comment_content":"理论上讲，即时编译后的 Java 程序的执行效率，是可能超过 C++ 程序的。<br><br>你好，理论上讲，可能超过，那么实际上呢，是什么情况？从统计上来看，实现同样的功能，JAVA程序比c++慢多少？慢一倍？10%？","like_count":0},{"had_liked":false,"id":16683,"user_name":"ProgramGeek","can_delete":false,"product_type":"c1","uid":1008217,"ip_address":"","ucode":"3F0E3963C4FB57","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/59/a01a5ddd.jpg","comment_is_top":false,"comment_ctime":1532096019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532096019","product_id":100010301,"comment_content":"关于热点代码通过C2编译器编译，那怎么检测热点代码呢？其次即时编译在一些场景会逆优化退回解释执行，那一般在哪些场景会逆优化呢？","like_count":0},{"had_liked":false,"id":16677,"user_name":"Axis","can_delete":false,"product_type":"c1","uid":1033046,"ip_address":"","ucode":"84ADBCF5893049","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/56/0ad8772a.jpg","comment_is_top":false,"comment_ctime":1532093644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532093644","product_id":100010301,"comment_content":"我希望能深度介绍下c2编译器  尤其是sea of node  谢谢","like_count":0},{"had_liked":false,"id":16676,"user_name":"Axis","can_delete":false,"product_type":"c1","uid":1033046,"ip_address":"","ucode":"84ADBCF5893049","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/56/0ad8772a.jpg","comment_is_top":false,"comment_ctime":1532093595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532093595","product_id":100010301,"comment_content":"我希望能介绍一下c2 特别是sea of node的相关论文","like_count":0},{"had_liked":false,"id":16672,"user_name":"kyrano","can_delete":false,"product_type":"c1","uid":1108052,"ip_address":"","ucode":"9270A3D17412A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/54/a650a973.jpg","comment_is_top":false,"comment_ctime":1532089207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532089207","product_id":100010301,"comment_content":"“Java 虚拟机不要求栈帧在内存空间里连续分布” 能说下底层是如何实现不连续的吗？","like_count":0},{"had_liked":false,"id":16669,"user_name":"包子","can_delete":false,"product_type":"c1","uid":1051996,"ip_address":"","ucode":"C82F8BDF4E3907","user_header":"https://static001.geekbang.org/account/avatar/00/10/0d/5c/ef42b1c1.jpg","comment_is_top":false,"comment_ctime":1532088658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532088658","product_id":100010301,"comment_content":"不全部jit编译的原因，个人觉得是由于边运行边编译可以采集运行时信息用于优化编译。还有其他原因么","like_count":0}]}