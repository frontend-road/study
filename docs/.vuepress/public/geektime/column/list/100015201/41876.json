{"id":41876,"title":"24 | 深入解析声明式API（一）：API对象的奥秘","content":"<p>你好，我是张磊。今天我和你分享的主题是：深入解析声明式API之API对象的奥秘。</p><p>在上一篇文章中，我为你详细讲解了Kubernetes声明式API的设计、特点，以及使用方式。</p><p>而在今天这篇文章中，我就来为你讲解一下Kubernetes声明式API的工作原理，以及如何利用这套API机制，在Kubernetes里添加自定义的API对象。</p><p>你可能一直就很好奇：当我把一个YAML文件提交给Kubernetes之后，它究竟是如何创建出一个API对象的呢？</p><p>这得从声明式API的设计谈起了。</p><p>在Kubernetes项目中，一个API对象在Etcd里的完整资源路径，是由：Group（API组）、Version（API版本）和Resource（API资源类型）三个部分组成的。</p><p>通过这样的结构，整个Kubernetes里的所有API对象，实际上就可以用如下的树形结构表示出来：</p><p><img src=\"https://static001.geekbang.org/resource/image/70/da/709700eea03075bed35c25b5b6cdefda.png?wh=1820*783\" alt=\"\"><br>\n在这幅图中，你可以很清楚地看到<strong>Kubernetes里API对象的组织方式，其实是层层递进的。</strong></p><p>比如，现在我要声明要创建一个CronJob对象，那么我的YAML文件的开始部分会这么写：</p><pre><code>apiVersion: batch/v2alpha1\nkind: CronJob\n...\n</code></pre><p>在这个YAML文件中，“CronJob”就是这个API对象的资源类型（Resource），“batch”就是它的组（Group），v2alpha1就是它的版本（Version）。</p><!-- [[[read_end]]] --><p>当我们提交了这个YAML文件之后，Kubernetes就会把这个YAML文件里描述的内容，转换成Kubernetes里的一个CronJob对象。</p><p>那么，<span class=\"orange\">Kubernetes是如何对Resource、Group和Version进行解析，从而在Kubernetes项目里找到CronJob对象的定义呢？</span></p><p><strong>首先，Kubernetes会匹配API对象的组。</strong></p><p>需要明确的是，对于Kubernetes里的核心API对象，比如：Pod、Node等，是不需要Group的（即：它们的Group是“”）。所以，对于这些API对象来说，Kubernetes会直接在/api这个层级进行下一步的匹配过程。</p><p>而对于CronJob等非核心API对象来说，Kubernetes就必须在/apis这个层级里查找它对应的Group，进而根据“batch”这个Group的名字，找到/apis/batch。</p><p>不难发现，这些API Group的分类是以对象功能为依据的，比如Job和CronJob就都属于“batch” （离线业务）这个Group。</p><p><strong>然后，Kubernetes会进一步匹配到API对象的版本号。</strong></p><p>对于CronJob这个API对象来说，Kubernetes在batch这个Group下，匹配到的版本号就是v2alpha1。</p><p>在Kubernetes中，同一种API对象可以有多个版本，这正是Kubernetes进行API版本化管理的重要手段。这样，比如在CronJob的开发过程中，对于会影响到用户的变更就可以通过升级新版本来处理，从而保证了向后兼容。</p><p><strong>最后，Kubernetes会匹配API对象的资源类型。</strong></p><p>在前面匹配到正确的版本之后，Kubernetes就知道，我要创建的原来是一个/apis/batch/v2alpha1下的CronJob对象。</p><p>这时候，<span class=\"orange\">APIServer就可以继续创建这个CronJob对象了</span>。为了方便理解，我为你总结了一个如下所示流程图来阐述这个创建过程：</p><p><img src=\"https://static001.geekbang.org/resource/image/df/6f/df6f1dda45e9a353a051d06c48f0286f.png?wh=1867*748\" alt=\"\"><br>\n<strong>首先</strong>，当我们发起了创建CronJob的POST请求之后，我们编写的YAML的信息就被提交给了APIServer。</p><p>而APIServer的第一个功能，就是过滤这个请求，并完成一些前置性的工作，比如授权、超时处理、审计等。</p><p><strong>然后</strong>，请求会进入MUX和Routes流程。如果你编写过Web Server的话就会知道，MUX和Routes是APIServer完成URL和Handler绑定的场所。而APIServer的Handler要做的事情，就是按照我刚刚介绍的匹配过程，找到对应的CronJob类型定义。</p><p><strong>接着</strong>，APIServer最重要的职责就来了：根据这个CronJob类型定义，使用用户提交的YAML文件里的字段，创建一个CronJob对象。</p><p>而在这个过程中，APIServer会进行一个Convert工作，即：把用户提交的YAML文件，转换成一个叫作Super Version的对象，它正是该API资源类型所有版本的字段全集。这样用户提交的不同版本的YAML文件，就都可以用这个Super Version对象来进行处理了。</p><p><strong>接下来</strong>，APIServer会先后进行Admission()和Validation()操作。比如，我在上一篇文章中提到的Admission Controller和Initializer，就都属于Admission的内容。</p><p>而Validation，则负责验证这个对象里的各个字段是否合法。这个被验证过的API对象，都保存在了APIServer里一个叫作Registry的数据结构中。也就是说，只要一个API对象的定义能在Registry里查到，它就是一个有效的Kubernetes API对象。</p><p><strong>最后</strong>，APIServer会把验证过的API对象转换成用户最初提交的版本，进行序列化操作，并调用Etcd的API把它保存起来。</p><p>由此可见，声明式API对于Kubernetes来说非常重要。所以，<strong>APIServer这样一个在其他项目里“平淡无奇”的组件，却成了Kubernetes项目的重中之重</strong>。它不仅是Google Borg设计思想的集中体现，也是Kubernetes项目里唯一一个被Google公司和RedHat公司双重控制、其他势力根本无法参与其中的组件。</p><p>此外，由于同时要兼顾性能、API完备性、版本化、向后兼容等很多工程化指标，所以Kubernetes团队在APIServer项目里大量使用了Go语言的代码生成功能，来自动化诸如Convert、DeepCopy等与API资源相关的操作。这部分自动生成的代码，曾一度占到Kubernetes项目总代码的20%~30%。</p><p>这也是为何，在过去很长一段时间里，在这样一个极其“复杂”的APIServer中，添加一个Kubernetes风格的API资源类型，是一个非常困难的工作。</p><p>不过，在Kubernetes v1.7 之后，这个工作就变得轻松得多了。这，当然得益于一个全新的API插件机制：CRD。</p><p>CRD的全称是Custom Resource Definition。顾名思义，它指的就是，允许用户在Kubernetes中添加一个跟Pod、Node类似的、新的API资源类型，即：自定义API资源。</p><p>举个例子，<span class=\"orange\">我现在要为Kubernetes添加一个名叫Network的API资源类型</span>。</p><p>它的作用是，一旦用户创建一个Network对象，那么Kubernetes就应该使用这个对象定义的网络参数，调用真实的网络插件，比如Neutron项目，为用户创建一个真正的“网络”。这样，将来用户创建的Pod，就可以声明使用这个“网络”了。</p><p>这个Network对象的YAML文件，名叫example-network.yaml，它的内容如下所示：</p><pre><code>apiVersion: samplecrd.k8s.io/v1\nkind: Network\nmetadata:\n  name: example-network\nspec:\n  cidr: &quot;192.168.0.0/16&quot;\n  gateway: &quot;192.168.0.1&quot;\n</code></pre><p>可以看到，我想要描述“网络”的API资源类型是Network；API组是<code>samplecrd.k8s.io</code>；API 版本是v1。</p><p>那么，<span class=\"orange\">Kubernetes又该如何知道这个API（<code>samplecrd.k8s.io/v1/network</code>）的存在呢？</span></p><p>其实，上面的这个YAML文件，就是一个具体的“自定义API资源”实例，也叫CR（Custom Resource）。而为了能够让Kubernetes认识这个CR，你就需要让Kubernetes明白这个CR的宏观定义是什么，也就是CRD（Custom Resource Definition）。</p><p>这就好比，你想让计算机认识各种兔子的照片，就得先让计算机明白，兔子的普遍定义是什么。比如，兔子“是哺乳动物”“有长耳朵，三瓣嘴”。</p><p>所以，接下来，我就先编写一个CRD的YAML文件，它的名字叫作network.yaml，内容如下所示：</p><pre><code>apiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: networks.samplecrd.k8s.io\nspec:\n  group: samplecrd.k8s.io\n  version: v1\n  names:\n    kind: Network\n    plural: networks\n  scope: Namespaced\n</code></pre><p>可以看到，在这个CRD中，我指定了“<code>group: samplecrd.k8s.io</code>”“<code>version: v1</code>”这样的API信息，也指定了这个CR的资源类型叫作Network，复数（plural）是networks。</p><p>然后，我还声明了它的scope是Namespaced，即：我们定义的这个Network是一个属于Namespace的对象，类似于Pod。</p><p>这就是一个Network API资源类型的API部分的宏观定义了。这就等同于告诉了计算机：“兔子是哺乳动物”。所以这时候，Kubernetes就能够认识和处理所有声明了API类型是“<code>samplecrd.k8s.io/v1/network</code>”的YAML文件了。</p><p>接下来，我还需要让Kubernetes“认识”这种YAML文件里描述的“网络”部分，比如“cidr”（网段），“gateway”（网关）这些字段的含义。这就相当于我要告诉计算机：“兔子有长耳朵和三瓣嘴”。</p><p>这时候呢，我就需要稍微做些代码工作了。</p><p><strong>首先，我要在GOPATH下，创建一个结构如下的项目：</strong></p><blockquote>\n<p>备注：在这里，我并不要求你具有完备的Go语言知识体系，但我会假设你已经了解了Golang的一些基本知识（比如，知道什么是GOPATH）。而如果你还不了解的话，可以在涉及到相关内容时，再去查阅一些相关资料。</p>\n</blockquote><pre><code>$ tree $GOPATH/src/github.com/&lt;your-name&gt;/k8s-controller-custom-resource\n.\n├── controller.go\n├── crd\n│   └── network.yaml\n├── example\n│   └── example-network.yaml\n├── main.go\n└── pkg\n    └── apis\n        └── samplecrd\n            ├── register.go\n            └── v1\n                ├── doc.go\n                ├── register.go\n                └── types.go\n</code></pre><p>其中，pkg/apis/samplecrd就是API组的名字，v1是版本，而v1下面的types.go文件里，则定义了Network对象的完整描述。我已经把这个项目<a href=\"https://github.com/resouer/k8s-controller-custom-resource\">上传到了GitHub上</a>，你可以随时参考。</p><p><strong>然后，我在pkg/apis/samplecrd目录下创建了一个register.go文件，用来放置后面要用到的全局变量</strong>。这个文件的内容如下所示：</p><pre><code>package samplecrd\n\nconst (\n GroupName = &quot;samplecrd.k8s.io&quot;\n Version   = &quot;v1&quot;\n)\n</code></pre><p><strong>接着，我需要在pkg/apis/samplecrd目录下添加一个doc.go文件（Golang的文档源文件）</strong>。这个文件里的内容如下所示：</p><pre><code>// +k8s:deepcopy-gen=package\n\n// +groupName=samplecrd.k8s.io\npackage v1\n</code></pre><p>在这个文件中，你会看到+&lt;tag_name&gt;[=value]格式的注释，这就是Kubernetes进行代码生成要用的Annotation风格的注释。</p><p>其中，+k8s:deepcopy-gen=package意思是，请为整个v1包里的所有类型定义自动生成DeepCopy方法；而<code>+groupName=samplecrd.k8s.io</code>，则定义了这个包对应的API组的名字。</p><p>可以看到，这些定义在doc.go文件的注释，起到的是全局的代码生成控制的作用，所以也被称为Global Tags。</p><p><strong>接下来，我需要添加types.go文件</strong>。顾名思义，它的作用就是定义一个Network类型到底有哪些字段（比如，spec字段里的内容）。这个文件的主要内容如下所示：</p><pre><code>package v1\n...\n// +genclient\n// +genclient:noStatus\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n\n// Network describes a Network resource\ntype Network struct {\n // TypeMeta is the metadata for the resource, like kind and apiversion\n metav1.TypeMeta `json:&quot;,inline&quot;`\n // ObjectMeta contains the metadata for the particular object, including\n // things like...\n //  - name\n //  - namespace\n //  - self link\n //  - labels\n //  - ... etc ...\n metav1.ObjectMeta `json:&quot;metadata,omitempty&quot;`\n \n Spec networkspec `json:&quot;spec&quot;`\n}\n// networkspec is the spec for a Network resource\ntype networkspec struct {\n Cidr    string `json:&quot;cidr&quot;`\n Gateway string `json:&quot;gateway&quot;`\n}\n\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n\n// NetworkList is a list of Network resources\ntype NetworkList struct {\n metav1.TypeMeta `json:&quot;,inline&quot;`\n metav1.ListMeta `json:&quot;metadata&quot;`\n \n Items []Network `json:&quot;items&quot;`\n}\n</code></pre><p>在上面这部分代码里，你可以看到Network类型定义方法跟标准的Kubernetes对象一样，都包括了TypeMeta（API元数据）和ObjectMeta（对象元数据）字段。</p><p>而其中的Spec字段，就是需要我们自己定义的部分。所以，在networkspec里，我定义了Cidr和Gateway两个字段。其中，每个字段最后面的部分比如<code>json:\"cidr\"</code>，指的就是这个字段被转换成JSON格式之后的名字，也就是YAML文件里的字段名字。</p><blockquote>\n<p>如果你不熟悉这个用法的话，可以查阅一下Golang的文档。</p>\n</blockquote><p>此外，除了定义Network类型，你还需要定义一个NetworkList类型，用来描述<strong>一组Network对象</strong>应该包括哪些字段。之所以需要这样一个类型，是因为在Kubernetes中，获取所有X对象的List()方法，返回值都是<x>List类型，而不是X类型的数组。这是不一样的。</x></p><p>同样地，在Network和NetworkList类型上，也有代码生成注释。</p><p>其中，+genclient的意思是：请为下面这个API资源类型生成对应的Client代码（这个Client，我马上会讲到）。而+genclient:noStatus的意思是：这个API资源类型定义里，没有Status字段。否则，生成的Client就会自动带上UpdateStatus方法。</p><p>如果你的类型定义包括了Status字段的话，就不需要这句+genclient:noStatus注释了。比如下面这个例子：</p><pre><code>// +genclient\n\n// Network is a specification for a Network resource\ntype Network struct {\n metav1.TypeMeta   `json:&quot;,inline&quot;`\n metav1.ObjectMeta `json:&quot;metadata,omitempty&quot;`\n \n Spec   NetworkSpec   `json:&quot;spec&quot;`\n Status NetworkStatus `json:&quot;status&quot;`\n}\n</code></pre><p>需要注意的是，+genclient只需要写在Network类型上，而不用写在NetworkList上。因为NetworkList只是一个返回值类型，Network才是“主类型”。</p><p>而由于我在Global Tags里已经定义了为所有类型生成DeepCopy方法，所以这里就不需要再显式地加上+k8s:deepcopy-gen=true了。当然，这也就意味着你可以用+k8s:deepcopy-gen=false来阻止为某些类型生成DeepCopy。</p><p>你可能已经注意到，在这两个类型上面还有一句<code>+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object</code>的注释。它的意思是，请在生成DeepCopy的时候，实现Kubernetes提供的runtime.Object接口。否则，在某些版本的Kubernetes里，你的这个类型定义会出现编译错误。这是一个固定的操作，记住即可。</p><p>不过，你或许会有这样的顾虑：这些代码生成注释这么灵活，我该怎么掌握呢？</p><p>其实，上面我所讲述的内容，已经足以应对99%的场景了。当然，如果你对代码生成感兴趣的话，我推荐你阅读<a href=\"https://blog.openshift.com/kubernetes-deep-dive-code-generation-customresources/\">这篇博客</a>，它详细地介绍了Kubernetes的代码生成语法。</p><p><strong>最后，我需要再编写一个pkg/apis/samplecrd/v1/register.go文件</strong>。</p><p>在前面对APIServer工作原理的讲解中，我已经提到，“registry”的作用就是注册一个类型（Type）给APIServer。其中，Network资源类型在服务器端注册的工作，APIServer会自动帮我们完成。但与之对应的，我们还需要让客户端也能“知道”Network资源类型的定义。这就需要我们在项目里添加一个register.go文件。它最主要的功能，就是定义了如下所示的addKnownTypes()方法：</p><pre><code>package v1\n...\n// addKnownTypes adds our types to the API scheme by registering\n// Network and NetworkList\nfunc addKnownTypes(scheme *runtime.Scheme) error {\n scheme.AddKnownTypes(\n  SchemeGroupVersion,\n  &amp;Network{},\n  &amp;NetworkList{},\n )\n \n // register the type in the scheme\n metav1.AddToGroupVersion(scheme, SchemeGroupVersion)\n return nil\n}\n</code></pre><p>有了这个方法，Kubernetes就能够在后面生成客户端的时候，“知道”Network以及NetworkList类型的定义了。</p><p>像上面这种<strong>register.go文件里的内容其实是非常固定的，你以后可以直接使用我提供的这部分代码做模板，然后把其中的资源类型、GroupName和Version替换成你自己的定义即可。</strong></p><p>这样，Network对象的定义工作就全部完成了。可以看到，它其实定义了两部分内容：</p><ul>\n<li>第一部分是，自定义资源类型的API描述，包括：组（Group）、版本（Version）、资源类型（Resource）等。这相当于告诉了计算机：兔子是哺乳动物。</li>\n<li>第二部分是，自定义资源类型的对象描述，包括：Spec、Status等。这相当于告诉了计算机：兔子有长耳朵和三瓣嘴。</li>\n</ul><p>接下来，<span class=\"orange\">我就要使用Kubernetes提供的代码生成工具，为上面定义的Network资源类型自动生成clientset、informer和lister。</span>其中，clientset就是操作Network对象所需要使用的客户端，而informer和lister这两个包的主要功能，我会在下一篇文章中重点讲解。</p><p>这个代码生成工具名叫<code>k8s.io/code-generator</code>，使用方法如下所示：</p><pre><code># 代码生成的工作目录，也就是我们的项目路径\n$ ROOT_PACKAGE=&quot;github.com/resouer/k8s-controller-custom-resource&quot;\n# API Group\n$ CUSTOM_RESOURCE_NAME=&quot;samplecrd&quot;\n# API Version\n$ CUSTOM_RESOURCE_VERSION=&quot;v1&quot;\n\n# 安装k8s.io/code-generator\n$ go get -u k8s.io/code-generator/...\n$ cd $GOPATH/src/k8s.io/code-generator\n\n# 执行代码自动生成，其中pkg/client是生成目标目录，pkg/apis是类型定义目录\n$ ./generate-groups.sh all &quot;$ROOT_PACKAGE/pkg/client&quot; &quot;$ROOT_PACKAGE/pkg/apis&quot; &quot;$CUSTOM_RESOURCE_NAME:$CUSTOM_RESOURCE_VERSION&quot;\n</code></pre><p>代码生成工作完成之后，我们再查看一下这个项目的目录结构：</p><pre><code>$ tree\n.\n├── controller.go\n├── crd\n│   └── network.yaml\n├── example\n│   └── example-network.yaml\n├── main.go\n└── pkg\n    ├── apis\n    │   └── samplecrd\n    │       ├── constants.go\n    │       └── v1\n    │           ├── doc.go\n    │           ├── register.go\n    │           ├── types.go\n    │           └── zz_generated.deepcopy.go\n    └── client\n        ├── clientset\n        ├── informers\n        └── listers\n</code></pre><p>其中，pkg/apis/samplecrd/v1下面的zz_generated.deepcopy.go文件，就是自动生成的DeepCopy代码文件。</p><p>而整个client目录，以及下面的三个包（clientset、informers、 listers），都是Kubernetes为Network类型生成的客户端库，这些库会在后面编写自定义控制器的时候用到。</p><p>可以看到，到目前为止的这些工作，其实并不要求你写多少代码，主要考验的是“复制、粘贴、替换”这样的“基本功”。</p><p>而有了这些内容，现在你就可以<span class=\"orange\">在Kubernetes集群里创建一个Network类型的API对象</span>了。我们不妨一起来试验下。</p><p><strong>首先</strong>，使用network.yaml文件，在Kubernetes中创建Network对象的CRD（Custom Resource Definition）：</p><pre><code>$ kubectl apply -f crd/network.yaml\ncustomresourcedefinition.apiextensions.k8s.io/networks.samplecrd.k8s.io created\n</code></pre><p>这个操作，就告诉了Kubernetes，我现在要添加一个自定义的API对象。而这个对象的API信息，正是network.yaml里定义的内容。我们可以通过kubectl get命令，查看这个CRD：</p><pre><code>$ kubectl get crd\nNAME                        CREATED AT\nnetworks.samplecrd.k8s.io   2018-09-15T10:57:12Z\n</code></pre><p><strong>然后</strong>，我们就可以创建一个Network对象了，这里用到的是example-network.yaml：</p><pre><code>$ kubectl apply -f example/example-network.yaml \nnetwork.samplecrd.k8s.io/example-network created\n</code></pre><p>通过这个操作，你就在Kubernetes集群里创建了一个Network对象。它的API资源路径是<code>samplecrd.k8s.io/v1/networks</code>。</p><p>这时候，你就可以通过kubectl get命令，查看到新创建的Network对象：</p><pre><code>$ kubectl get network\nNAME              AGE\nexample-network   8s\n</code></pre><p>你还可以通过kubectl describe命令，看到这个Network对象的细节：</p><pre><code>$ kubectl describe network example-network\nName:         example-network\nNamespace:    default\nLabels:       &lt;none&gt;\n...API Version:  samplecrd.k8s.io/v1\nKind:         Network\nMetadata:\n  ...\n  Generation:          1\n  Resource Version:    468239\n  ...\nSpec:\n  Cidr:     192.168.0.0/16\n  Gateway:  192.168.0.1\n</code></pre><p>当然 ，你也可以编写更多的YAML文件来创建更多的Network对象，这和创建Pod、Deployment的操作，没有任何区别。</p><h2>总结</h2><p>在今天这篇文章中，我为你详细解析了Kubernetes声明式API的工作原理，讲解了如何遵循声明式API的设计，为Kubernetes添加一个名叫Network的API资源类型。从而达到了通过标准的kubectl create和get操作，来管理自定义API对象的目的。</p><p>不过，创建出这样一个自定义API对象，我们只是完成了Kubernetes声明式API的一半工作。</p><p>接下来的另一半工作是：为这个API对象编写一个自定义控制器（Custom Controller）。这样， Kubernetes才能根据Network API对象的“增、删、改”操作，在真实环境中做出相应的响应。比如，“创建、删除、修改”真正的Neutron网络。</p><p>而这，正是Network这个API对象所关注的“业务逻辑”。</p><p>这个业务逻辑的实现过程，以及它所使用的Kubernetes API编程库的工作原理，就是我要在下一篇文章中讲解的主要内容。</p><h2>思考题</h2><p>在了解了CRD的定义方法之后，你是否已经在考虑使用CRD（或者已经使用了CRD）来描述现实中的某种实体了呢？能否分享一下你的思路？（举个例子：某技术团队使用CRD描述了“宿主机”，然后用Kubernetes部署了Kubernetes）</p><p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p>","comments":[{"had_liked":false,"id":33501,"user_name":"北卡","can_delete":false,"product_type":"c1","uid":1218128,"ip_address":"","ucode":"2D947A61689FC6","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/50/bde525b1.jpg","comment_is_top":false,"comment_ctime":1539798385,"is_pvip":false,"replies":[{"id":"12060","content":"没错。我觉得这部分才是运维最喜欢的。谁不喜欢写代码呢？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539822041,"ip_address":"","comment_id":33501,"utype":1}],"discussion_count":2,"race_medal":0,"score":"285007639921","product_id":100015201,"comment_content":"运维人员会心碎?<br>我是运维人员，此刻看完我感到很兴奋。","like_count":67,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426976,"discussion_content":"没错。我觉得这部分才是运维最喜欢的。谁不喜欢写代码呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1539822041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1845394,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/28/92/436735f5.jpg","nickname":"晞月520","note":"","ucode":"4F05E02A5C1608","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287683,"discussion_content":"现在来看 运维人员也要学习python 和go了  心碎","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593509438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33261,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1539767796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"207698198004","product_id":100015201,"comment_content":"一般来说，扩展api server (或者说添加自定义 resource )有两种方式：<br>1. 通过创建CRDs, 主API server可以处理 CRDs 的 REST 请求（CRUD）和持久性存储。简单，不需要其他的编程。更适用于声明式的API，和kubernetes高度集成统一。<br>2. API Aggregation, 一个独立的API server。主API server委托此独立的API server处理自定义resource。 需要编程，但能够更加灵活的控制API的行为，更加灵活的自定义存储，以及与API不同版本之间的转换。一般更适用于命令模式，或者复用已经存在REST API代码，不直接支持kubectl 和 k8s UI, 不支持scope resource in a cluster&#47;namespace.<br><br>自定义 resource 可以使你方便的存取结构化的resource 数据。但是只有和controller组合在一起才是声明式API。声明式API允许你定义一个期望的状态。controller通过解读结构化的resource数据，获得期望状态，从而不断的调协期望状态和实际状态。<br><br>综上，今天文档中的types.go 应该是给controller来理解CRDs的schema用的。只有掌握了resource的schema，才能解释并得到用户创建的resource API object。<br>而 kubectl create -f resourcedefinition.yaml 或者 自定义API server， 则定义了RESTful API endpoint. 用于接受 REST 请求，改变 resource 的期望状态。<br>","like_count":49},{"had_liked":false,"id":35619,"user_name":"小金刚","can_delete":false,"product_type":"c1","uid":1019593,"ip_address":"","ucode":"F5987C7F44EDA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/c9/9f783069.jpg","comment_is_top":false,"comment_ctime":1540712979,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"156159535635","product_id":100015201,"comment_content":"可以用 kubebuild 自动生成项目框架，添加自己的 CRD 并实现 controller 即可。","like_count":37},{"had_liked":false,"id":41898,"user_name":"小明root","can_delete":false,"product_type":"c1","uid":1231573,"ip_address":"","ucode":"BE080897AC53DB","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/d5/a2cd57c9.jpg","comment_is_top":false,"comment_ctime":1542869408,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"151866724768","product_id":100015201,"comment_content":"我是运维人员，我很心碎.....我不会go语言","like_count":36,"discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308466,"discussion_content":"我是程序员，但不会go","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1600958609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331540,"discussion_content":"我是运维人员， 我很兴奋， 我会go和python","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1606896856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2405411,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b4/23/0e296758.jpg","nickname":"姜尧","note":"","ucode":"D813E046DD81E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364528,"discussion_content":"7年开发刚转运维，我不会go，但我猜很简单，希望不要打脸……","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617508971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1740409,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/8e/79/f9d5dd3a.jpg","nickname":"吕超","note":"","ucode":"B36883984BE16B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354317,"discussion_content":"不会就学嘛，谁还不是一路七七八八学过来的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615274390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2405411,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b4/23/0e296758.jpg","nickname":"姜尧","note":"","ucode":"D813E046DD81E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589100,"discussion_content":"过了一年半了，已经学会golang了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664419247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"辽宁"},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183711,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/df/e0eb437e.jpg","nickname":"无痕","note":"","ucode":"61B92B75092E4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2405411,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b4/23/0e296758.jpg","nickname":"姜尧","note":"","ucode":"D813E046DD81E8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589947,"discussion_content":"转运维了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665409776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":589100,"ip_address":"浙江"},"score":589947,"extra":""}]},{"author":{"id":1657948,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4c/5c/9ea0f752.jpg","nickname":"程序猿不圆","note":"","ucode":"BC8926A84A07C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370372,"discussion_content":"刚从超哥的《趣谈Linux操作系统》过来，艰难的学到这里才知道学习Kubernetes还要会go，只能含泪滚去学go了......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619394508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1785821,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3f/dd/f918566d.jpg","nickname":"夏目","note":"","ucode":"038B4FDFE8A306","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1657948,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4c/5c/9ea0f752.jpg","nickname":"程序猿不圆","note":"","ucode":"BC8926A84A07C8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543055,"discussion_content":"学习一点基础语法就够了如果有其他语言基础，一天的时间就能把基础语法看完，没必要把所有内容都看一遍。我在菜鸟上面学的 https://www.runoob.com/go/go-structures.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640940246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":370372,"ip_address":""},"score":543055,"extra":""}]},{"author":{"id":1805809,"avatar":"","nickname":"ccz 开发(谢不邀)","note":"","ucode":"B8803B050AAC68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343901,"discussion_content":"碎碎平安~！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611212165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33176,"user_name":"千寻","can_delete":false,"product_type":"c1","uid":1058635,"ip_address":"","ucode":"44A559E38819C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/4b/170654bb.jpg","comment_is_top":false,"comment_ctime":1539756408,"is_pvip":false,"replies":[{"id":"12035","content":"因为生成的代码是给下一篇写控制器代码用的，哈哈","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539783708,"ip_address":"","comment_id":33176,"utype":1}],"discussion_count":5,"race_medal":0,"score":"108913938808","product_id":100015201,"comment_content":"我从代码开始，就按着步骤走，最后创建network的CRD和example-network都成功了，<br>但是我直接将cdr&#47;network.yml和example&#47;example-network.yml文件单独拿出来，并没有执行代码生成那些步骤，发现也创建成功了，搞得有点懵。<br>老师可以说一下这大概是什么回事吗？","like_count":26,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426947,"discussion_content":"因为生成的代码是给下一篇写控制器代码用的，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539783708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1500888,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e6/d8/8939848a.jpg","nickname":"Andy","note":"","ucode":"E895030BE6D4CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":536738,"discussion_content":"老师 你太调皮了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638860171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":426947,"ip_address":""},"score":536738,"extra":""}]},{"author":{"id":1797584,"avatar":"","nickname":"叶峥瑶","note":"","ucode":"170E0F29BC6D4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348717,"discussion_content":"所以为啥不说清楚呢 秀了半天的代码最后发现没啥用","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612688474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113864,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/08/7c18d8a4.jpg","nickname":"团","note":"","ucode":"D56ABBCE4E4D90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533889,"discussion_content":"如果代码在这里没用。那资源的字段定义都在代码里，如果没有代码那部分，只部署两个yaml，那validation那步，对字段的校验是如何通过的?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638011894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2524415,"avatar":"https://static001.geekbang.org/account/avatar/00/26/84/ff/419e9e68.jpg","nickname":"Cara","note":"","ucode":"AAD0FCC3B8BBB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377399,"discussion_content":"哈哈哈你给我看笑了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622627552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63762,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1548490789,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"74562934821","product_id":100015201,"comment_content":"我是开发人员，会go,也会C++，也自己设计过业务协议，看到这篇异常兴奋","like_count":17,"discussions":[{"author":{"id":1482350,"avatar":"https://static001.geekbang.org/account/avatar/00/16/9e/6e/6ba20b5a.jpg","nickname":"Song","note":"","ucode":"6409701195771A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555401,"discussion_content":"太卷了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646893343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277063,"user_name":"Vndi","can_delete":false,"product_type":"c1","uid":2114744,"ip_address":"","ucode":"23DA6A7BE63E9F","user_header":"https://static001.geekbang.org/account/avatar/00/20/44/b8/d5fe40fb.jpg","comment_is_top":false,"comment_ctime":1612251017,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48856891273","product_id":100015201,"comment_content":"CRD就像你去数据库定义一张表，CR就像表里的记录","like_count":12},{"had_liked":false,"id":33096,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1539744747,"is_pvip":false,"replies":[{"id":"11984","content":"当然！","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539745834,"ip_address":"","comment_id":33096,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48784385003","product_id":100015201,"comment_content":"好好好。之前学习过这些内容，但是很不系统，只是大概知道怎么回事，很多细节没有穿起来。跟老师比起来，我太不善于总结了。<br>磊哥大神，等我把你的课都学会了，能跟着你干吗？<br><br>另外我看到有人问需要把代码重新编译进k8s中么？不需要。作为插件应该是可以热插拔的。比如service catalog，flannel，都不要求你重启k8s。<br>在k8s里定义了你的CR后，controller可以作为一个container跑在k8s集群里，来响应CR的增删改。<br><br>","like_count":12,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426933,"discussion_content":"当然！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539745834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218367,"avatar":"https://static001.geekbang.org/account/avatar/00/12/97/3f/70f08a80.jpg","nickname":"SakuraTears","note":"","ucode":"998B20C428EA7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554868,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646643659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1340211,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIh68mljZzz1SWJia94GaQ68tBE43zpCgHZsPJLEnlFl6uK49eEHdKdlutbItNKviaqOQ6kclMs1C0w/132","nickname":"herbxu","note":"","ucode":"AA6D45478D2A2D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525,"discussion_content":"张老师，请教个问题；\nInitializers在1.4时已经被社区废弃，目前主要使用Mutating Admission Webhook来注入，我看并没有什么本质区别的，社区基于什么原因去除了Initializers。性能，复杂度吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561641335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33311,"user_name":"小宇宙","can_delete":false,"product_type":"c1","uid":1029649,"ip_address":"","ucode":"BBFFC39CB9E26F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b6/11/e8506a04.jpg","comment_is_top":false,"comment_ctime":1539778280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44489451240","product_id":100015201,"comment_content":"用CRD来开发定义自主化的operator ，将有状态的应用自动化","like_count":10},{"had_liked":false,"id":57233,"user_name":"骨汤鸡蛋面","can_delete":false,"product_type":"c1","uid":1050002,"ip_address":"","ucode":"2AC141A523E710","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/92/b609f7e3.jpg","comment_is_top":false,"comment_ctime":1546693609,"is_pvip":true,"replies":[{"id":"22068","content":"对的，内置和外挂的区别","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1548053840,"ip_address":"","comment_id":57233,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35906431977","product_id":100015201,"comment_content":"自定义resource的Controller 单独运行，只是通过client-go 与api 交互？ 是否可以认为，k8s内建的Resource 对应的Controller，由Controller-manager 统一管理呢？","like_count":8,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435474,"discussion_content":"对的，内置和外挂的区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548053840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54888,"user_name":"yuanlinios","can_delete":false,"product_type":"c1","uid":1223176,"ip_address":"","ucode":"0861321E352FE0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/nhLS152kEs5J65bBpM2fzMn4agfoow8xibFzNSDcmo9Oiby2lNB4hWRcetRWFyY2y05IJu8GbkZer9BUiahtadU0w/132","comment_is_top":false,"comment_ctime":1545978119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35905716487","product_id":100015201,"comment_content":".&#47;generate-groups.sh all &quot;$ROOT_PACKAGE&#47;pkg&#47;client&quot; &quot;$ROOT_PACKAGE&#47;pkg&#47;apis&quot; &quot;$CUSTOM_RESOURCE_NAME:$CUSTOM_RESOURCE_VERSION&quot;<br>Generating deepcopy funcs<br>F1228 01:11:20.543446    2908 deepcopy.go:866] Hit an unsupported type invalid type.<br>","like_count":8},{"had_liked":false,"id":32967,"user_name":"Vincen","can_delete":false,"product_type":"c1","uid":1218185,"ip_address":"","ucode":"1029A901EC7BA0","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/89/9312b3a2.jpg","comment_is_top":false,"comment_ctime":1539738266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31604509338","product_id":100015201,"comment_content":"从kubernetes用户到kubernetes玩家成长中...","like_count":7},{"had_liked":false,"id":65874,"user_name":"疯狂的小企鹅","can_delete":false,"product_type":"c1","uid":1029578,"ip_address":"","ucode":"3BB71C53382BAD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/ca/c3949f49.jpg","comment_is_top":false,"comment_ctime":1549714474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27319518250","product_id":100015201,"comment_content":"提示 Hit an unsupported type invalid type的同学，可以先安装下k8s.io&#47;apimachinery包。应该是deepcopy找不到metav1.ObjectMeta和metav1.TypeMeta<br>go get -u k8s.io&#47;apimachinery","like_count":6},{"had_liked":false,"id":228490,"user_name":"DayDayUp","can_delete":false,"product_type":"c1","uid":1610552,"ip_address":"","ucode":"9C53659518AB74","user_header":"https://static001.geekbang.org/account/avatar/00/18/93/38/71615300.jpg","comment_is_top":false,"comment_ctime":1592710466,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"23067546946","product_id":100015201,"comment_content":"看了好兴奋，真的感觉自己能够从一个旁观者慢慢变成一个开发贡献者","like_count":6},{"had_liked":false,"id":58525,"user_name":"Joe","can_delete":false,"product_type":"c1","uid":1033290,"ip_address":"","ucode":"79AC38C1F44D76","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/4a/c02c597b.jpg","comment_is_top":false,"comment_ctime":1547104123,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23021940603","product_id":100015201,"comment_content":"Generating deepcopy funcs<br>F0110 15:05:38.168635   11946 deepcopy.go:866] Hit an unsupported type invalid type.<br><br>按文档走了一半，报错~ 这个是什么问题呀？","like_count":5,"discussions":[{"author":{"id":1639496,"avatar":"","nickname":"joeycheng","note":"","ucode":"22917FA3BC0BAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277628,"discussion_content":"可能是go版本的原因,用1.13+试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591084085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34675,"user_name":"Pixar","can_delete":false,"product_type":"c1","uid":1197659,"ip_address":"","ucode":"E653387BA8EA16","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/5b/07858c33.jpg","comment_is_top":false,"comment_ctime":1540257312,"is_pvip":false,"replies":[{"id":"12350","content":"你提交了一个CR yaml了不是？反正是存在etcd里，给你返回即可。不过kubernetes 并不懂字段的意思。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540259719,"ip_address":"","comment_id":34675,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23015093792","product_id":100015201,"comment_content":"有一个问题张老师，一直不是特别清楚… 通过 crd 创建的自定义资源我还并没有定义他的结构，为什么就可以通过 kubectl get 拿到这个资源的详情呢？","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427295,"discussion_content":"你提交了一个CR yaml了不是？反正是存在etcd里，给你返回即可。不过kubernetes 并不懂字段的意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540259719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33597,"user_name":"swordholder","can_delete":false,"product_type":"c1","uid":1002569,"ip_address":"","ucode":"3D1361126AD3CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/49/d21c134f.jpg","comment_is_top":false,"comment_ctime":1539830564,"is_pvip":false,"replies":[{"id":"12081","content":"因为你还没有调用生成的client，register.go是客户端用来进行初始化的代码的一部分。你这两步做完，服务端已经知道这个crd了，客户端也得有办法知道啊。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539850614,"ip_address":"","comment_id":33597,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23014667044","product_id":100015201,"comment_content":"register.go会将自定义Type注册到APIServer，那register.go本身是怎么交给APIServer，然后被APIServer调用注册过程的？<br><br>$ kubectl apply -f crd&#47;network.yaml<br>$ kubectl apply -f example&#47;example-network.yaml <br><br>执行完这两步，自定义的Newwork对象被创建出来，怎么感觉register.go并没有被用到","like_count":6,"discussions":[{"author":{"id":1175329,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/21/69c181b8.jpg","nickname":"Rain","note":"","ucode":"603DFFAC6A3755","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302101,"discussion_content":"感觉这里的逻辑有些混淆，这里写的代码应该都是给下一篇自定义控制器用的，调API创建CRD对象，本身不需要编码。register.go在生成的客户端代码中用到了：pkg/client/clientset/versioned/scheme/register.go","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1598788867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427008,"discussion_content":"因为你还没有调用生成的client，register.go是客户端用来进行初始化的代码的一部分。你这两步做完，服务端已经知道这个crd了，客户端也得有办法知道啊。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1539850614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004666,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/7a/bf7e6f40.jpg","nickname":"Driveby","note":"","ucode":"81D7796F9277DB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576634,"discussion_content":"将 go 相关的代码介绍挪到下一篇去，能解决很多人的疑惑。\n\n说白了 cr 像一个协议，api server 与 controller 需要以同一种协议来理解 cr","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655714213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344081,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c4/91/a017bf72.jpg","nickname":"coconut","note":"","ucode":"07B95C7A6AC2F7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572725,"discussion_content":"我也感觉有点奇怪：我本来以为Network api对象时POST /apis/samplecrd.k8s.io/v1/Network时，接着apiserver会调用到register.go注册的&#34;接口实现&#34;。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652935464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323976,"user_name":"丶海口","can_delete":false,"product_type":"c1","uid":1002881,"ip_address":"","ucode":"F06707B787F3DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/81/8dd164fb.jpg","comment_is_top":false,"comment_ctime":1638246951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18818116135","product_id":100015201,"comment_content":"使用最新版本 cd 到 code-generator 目录去执行会报错，改成这样就好了：<br># 代码生成的工作目录，也就是我们的项目路径<br>ROOT_PACKAGE=&quot;github.com&#47;resouer&#47;k8s-controller-custom-resource&quot;<br># API Group<br>CUSTOM_RESOURCE_NAME=&quot;samplecrd&quot;<br># API Version<br>CUSTOM_RESOURCE_VERSION=&quot;v1&quot;<br># Code-Generator Directory<br>EXEC_DIR=$GOPATH&#47;src&#47;k8s.io&#47;code-generator<br><br># 安装 k8s.io&#47;code-generator<br>go get -u k8s.io&#47;code-generator&#47;...<br><br># 执行代码自动生成，其中pkg&#47;client是生成目标目录，pkg&#47;apis是类型定义目录<br>&quot;${EXEC_DIR}&quot;&#47;generate-groups.sh all &quot;$ROOT_PACKAGE&#47;pkg&#47;client&quot; &quot;$ROOT_PACKAGE&#47;pkg&#47;apis&quot; &quot;$CUSTOM_RESOURCE_NAME:$CUSTOM_RESOURCE_VERSION&quot; --go-header-file &quot;${EXEC_DIR}&quot;&#47;hack&#47;boilerplate.go.txt -v 10","like_count":5},{"had_liked":false,"id":34535,"user_name":"圣诞使者","can_delete":false,"product_type":"c1","uid":1028183,"ip_address":"","ucode":"E59436F6392122","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b0/57/a84d633e.jpg","comment_is_top":false,"comment_ctime":1540200190,"is_pvip":false,"replies":[{"id":"12357","content":"这是个自己的帮助库","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540260593,"ip_address":"","comment_id":34535,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18720069374","product_id":100015201,"comment_content":"老师，我照着你的代码敲了一遍，这个pkg&#47;signals目录是自己创建的吗？我这个生成完代码也没有这个目录。","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427239,"discussion_content":"这是个自己的帮助库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540260593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221043,"user_name":"waterjiao","can_delete":false,"product_type":"c1","uid":1283989,"ip_address":"","ucode":"74F2F75BF0CA6F","user_header":"https://static001.geekbang.org/account/avatar/00/13/97/95/aad51e9b.jpg","comment_is_top":false,"comment_ctime":1590390688,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"14475292576","product_id":100015201,"comment_content":"deepcopy的作用是什么？runtime.Object是什么呢？是Network这个资源在k8s客户端的形态呢？","like_count":4},{"had_liked":false,"id":213268,"user_name":"刘小鹏","can_delete":false,"product_type":"c1","uid":1988055,"ip_address":"","ucode":"7DCD9A4705277A","user_header":"https://static001.geekbang.org/account/avatar/00/1e/55/d7/67c517c0.jpg","comment_is_top":false,"comment_ctime":1588346552,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14473248440","product_id":100015201,"comment_content":"老师，容器是单进程模型的，那在一个容器中能运行多个不同进程么？多个相同进程又可以么？","like_count":3,"discussions":[{"author":{"id":2179383,"avatar":"https://static001.geekbang.org/account/avatar/00/21/41/37/b89f3d67.jpg","nickname":"我在睡觉","note":"","ucode":"6503B611151D3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339187,"discussion_content":"可以，但是你要先说明你这么做的目的是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609557363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32923,"user_name":"Joe Black","can_delete":false,"product_type":"c1","uid":1052528,"ip_address":"","ucode":"21FE222A286445","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/70/c8680841.jpg","comment_is_top":false,"comment_ctime":1539735709,"is_pvip":false,"replies":[{"id":"11972","content":"当然不需要。你就按文章里的步骤来就全妥了。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539743618,"ip_address":"","comment_id":32923,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14424637597","product_id":100015201,"comment_content":"这章会让运维人员心碎的...幸好俺会Go语言! <br>请教下这个生成的代码，还得合并到apiserver的代码树中吧？还是得重新编译apiserver吧？毕竟Go目前还没有动态加载机制。","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426912,"discussion_content":"当然不需要。你就按文章里的步骤来就全妥了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539743618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545176,"discussion_content":"实际就是类似你在linux环境下，下载了代码，本地编译后就可以使用了。这个CRD也是本集群使用。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641870895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322600,"user_name":"jason","can_delete":false,"product_type":"c1","uid":2680235,"ip_address":"","ucode":"0886E1D88BB7CC","user_header":"https://static001.geekbang.org/account/avatar/00/28/e5/ab/cece3199.jpg","comment_is_top":false,"comment_ctime":1637494731,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10227429323","product_id":100015201,"comment_content":"v1.22.2执行create -f network.yaml报错，error validating &quot;network.yaml&quot;: error validating data: [ValidationError(CustomResourceDefinition.spec): unknown field &quot;version&quot;","like_count":2},{"had_liked":false,"id":136772,"user_name":"tuyu","can_delete":false,"product_type":"c1","uid":1448863,"ip_address":"","ucode":"B235325B541408","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BIRpwViaN51yynIeFonD7QRlwDCVtKibrG956NTxzEqibOZZVjhMMgibOPmd3VicfYxpknZsic1oJq8KicZvXkmmiajuQg/132","comment_is_top":false,"comment_ctime":1569505759,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10159440351","product_id":100015201,"comment_content":"老师你好, 问一下这个metav1是啥意思","like_count":2,"discussions":[{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545182,"discussion_content":"名称而已，把meta/v1用这个用metav1来代替，以免重名。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641870958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304001,"user_name":"limix","can_delete":false,"product_type":"c1","uid":1166614,"ip_address":"","ucode":"76401FF54AE0D8","user_header":"https://static001.geekbang.org/account/avatar/00/11/cd/16/981cc4f8.jpg","comment_is_top":false,"comment_ctime":1627179866,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5922147162","product_id":100015201,"comment_content":"样例程序中的逻辑，本地测试时，发现了不少问题，不过这不是重点，重点是我看了看官方的文档，发现最新的k8s版本的Api对象的创建已经可以通过openapi schema来实现了，也添加了webhook转换，1.16版本也已经稳定了。目前比较困惑文章中的实现和当前k8s新特性的关系~ 有一种是不是我现在文章中的实现已经不推荐使用了","like_count":1,"discussions":[{"author":{"id":1675456,"avatar":"https://static001.geekbang.org/account/avatar/00/19/90/c0/91df1add.jpg","nickname":"Lambo","note":"","ucode":"B49DA767A4F439","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387063,"discussion_content":"同样的问题，希望能有人解答~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627967373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142874,"user_name":"Geek_260c9a","can_delete":false,"product_type":"c1","uid":1602233,"ip_address":"","ucode":"6A95A19F12ECB5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoxRRRXqZ3FjR7kaeTmj73C6zjeX8SWDX70Tg0OOBG44vQ4Xtr7xphVeHhdtp6RwbwrTMfaOFTkRQ/132","comment_is_top":false,"comment_ctime":1571571951,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5866539247","product_id":100015201,"comment_content":"没有弄明白生成这些代码和CRD可以被k8s 识别的必然联系。","like_count":1,"discussions":[{"author":{"id":1195204,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3c/c4/4ee2968a.jpg","nickname":"艾利特-G","note":"","ucode":"8C4DA0ABE77CDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203033,"discussion_content":"个人理解，就跟编程思想里的反射概念相似。提交了一个yaml给API server，就注册了相关对象的URL和属性进去了，大多web框架也是在配置文件里定义URL然后再另写一个类来实现里面的逻辑。\n这里生成的代码就像web框架生成的基础代码一样。\n我想应该是在operator写好之后编译成镜像部署在集群里，通过RBAC给operator的容器授予权限操作这里定义的CR，operator估计也是有框架的，可能还有k8s维护的基础镜像。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583986711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2121783,"avatar":"https://static001.geekbang.org/account/avatar/00/20/60/37/fdbacf02.jpg","nickname":"叫我小卢","note":"","ucode":"A789E8407A0DBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380603,"discussion_content":"CRD只是定义了一个api resource, 但是这个resource具体有什么含义，api server是不清楚的，如果要想具体解析这个api resource，那么就需要你自己编写一个controller, 也就是文章中生成的代码，这个代码通过生成的client和api server通信，生成的client和api sercer通信链接时会注册自己想要什么样的数据结构，也就是在register.go中定义的。controller拿到数据后就可以对这个resource进行调度了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624602395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004666,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/7a/bf7e6f40.jpg","nickname":"Driveby","note":"","ucode":"81D7796F9277DB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576635,"discussion_content":"说实在的，没有联系，这些代码是给 controller 使用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655714380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113987,"user_name":"半夜谁在看电视","can_delete":false,"product_type":"c1","uid":1165314,"ip_address":"","ucode":"6C72D23B517BC7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/cjichzNjhghHD9DJEXCBrh5iagbSIepia3vshGhDy7le4aicnT9cKHvSC0iaDYnSeWg9S4SxAPaOlAJcmib2DRicvgeyA/132","comment_is_top":false,"comment_ctime":1563198518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858165814","product_id":100015201,"comment_content":"CRD方式是否能在生产环境中使用吗？","like_count":1},{"had_liked":false,"id":73373,"user_name":"iuwai","can_delete":false,"product_type":"c1","uid":1071032,"ip_address":"","ucode":"4DC94CEFDE1A0F","user_header":"https://static001.geekbang.org/account/avatar/00/10/57/b8/cd055bed.jpg","comment_is_top":false,"comment_ctime":1551872760,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5846840056","product_id":100015201,"comment_content":"看到能对k8s进行二次开发，很兴奋！不过，自定义APIserver在具体的实践中有哪些实际的用途呢？","like_count":1},{"had_liked":false,"id":67436,"user_name":"Charles","can_delete":false,"product_type":"c1","uid":1201560,"ip_address":"","ucode":"C8C8A4F2B6C20F","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/98/a49061ab.jpg","comment_is_top":false,"comment_ctime":1550146500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5845113796","product_id":100015201,"comment_content":"老师, 你讲课中使用到的容器的镜像有没有统一的地址可以给一下, 找对应的镜像真心不容易啊","like_count":1},{"had_liked":false,"id":55445,"user_name":"blackpiglet","can_delete":false,"product_type":"c1","uid":1032928,"ip_address":"","ucode":"58AA8329C91767","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/e0/7188aa0a.jpg","comment_is_top":false,"comment_ctime":1546180854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841148150","product_id":100015201,"comment_content":"看到这挺兴奋的，感觉 rook、etcd-operator、prometheus-operator 应该都是这么做的。","like_count":1},{"had_liked":false,"id":37850,"user_name":"zz@zz","can_delete":false,"product_type":"c1","uid":1108783,"ip_address":"","ucode":"87B2AD97471FBC","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/2f/63004f1a.jpg","comment_is_top":false,"comment_ctime":1541751590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5836718886","product_id":100015201,"comment_content":"报错 Generating deepcopy funcs<br>F1109 16:09:50.592462   59073 main.go:81] Error: Failed executing generator: some packages had errors:<br>type &quot;vendor&#47;k8s.io&#47;apimachinery&#47;pkg&#47;runtime.Object&quot; in k8s:deepcopy-gen:interfaces tag of type vendor&#47;k8s.io&#47;apimachinery&#47;pkg&#47;runtime.Object is not an interface, but: &quot;&quot;<br><br>go get -u k8s.io&#47;apimachinery 后好了","like_count":1},{"had_liked":false,"id":33401,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1539782666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5834749962","product_id":100015201,"comment_content":"今天这些代码，包括生成的代码都是controller用的。其实整个项目的目录结构，就是一个sample controller。大家等着老师下回分解吧 ：）<br><br>通过读代码和注释，我的理解是 Controller 调用 register.go 中 addToScheme 方法，来添加自定义 resource types(定义在types.go中) 到 Scheme数据结构中，并把Scheme传入eventRecorder。这样recorder就可以生成并记录自定义 types相关的events了。并且可以把event传送给INFO log，不知道是不是就是我们在describe里看到的events呢？","like_count":1},{"had_liked":false,"id":33270,"user_name":"swordholder","can_delete":false,"product_type":"c1","uid":1002569,"ip_address":"","ucode":"3D1361126AD3CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/49/d21c134f.jpg","comment_is_top":false,"comment_ctime":1539769460,"is_pvip":false,"replies":[{"id":"12036","content":"你仔细看一下apiserver那张图？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539783745,"ip_address":"","comment_id":33270,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5834736756","product_id":100015201,"comment_content":"怎么感觉register.go没有用到，它是什么时机把自定义Type注册到APIServer的？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426959,"discussion_content":"你仔细看一下apiserver那张图？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539783745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341069,"user_name":"江东","can_delete":false,"product_type":"c1","uid":1793475,"ip_address":"","ucode":"391A62BC7039B3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/5d/c3/69019d24.jpg","comment_is_top":false,"comment_ctime":1649327069,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649327069","product_id":100015201,"comment_content":"是不是可以理解为：etcd中最终存储的是用户最初提交的yml 而不是apiserver在admission和validation后的api对象","like_count":0},{"had_liked":false,"id":337259,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1646723812,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1646723812","product_id":100015201,"comment_content":"如果你用的是最新版的kubenetes，并且遇到了下面这个错误-The CustomResourceDefinition &quot;networks.samplecrd.k8s.io&quot; is invalid<br>那么请把这里的network.yaml的namespace修改下，不要使用k8s.io或者kubernetes.io后缀，改为*.x-k8s.io;<br>参考文档地址：https:&#47;&#47;github.com&#47;kubernetes&#47;community&#47;blob&#47;master&#47;sig-architecture&#47;api-review-process.md#what-apis-need-to-be-reviewed<br><br>附赠一下我的network.yaml文件内容：<br><br>apiVersion: apiextensions.k8s.io&#47;v1<br>kind: CustomResourceDefinition<br>metadata:<br>  # name must match the spec fields below, and be in the form: &lt;plural&gt;.&lt;group&gt;<br>  name: networks.samplecrd.x-k8s.io<br>spec:<br>  # group name to use for REST API: &#47;apis&#47;&lt;group&gt;&#47;&lt;version&gt;<br>  group: samplecrd.x-k8s.io<br>  versions:<br>    - name: v1<br>      # Each version can be enabled&#47;disabled by Served flag.<br>      served: true<br>      # One and only one version must be marked as the storage version.<br>      storage: true<br>      schema:<br>        openAPIV3Schema:<br>          type: object<br>          properties:<br>            spec:<br>              type: object<br>              properties:<br>                cronSpec:<br>                  type: string<br>                image:<br>                  type: string<br>                replicas:<br>                  type: integer<br>  # either Namespaced or Cluster<br>  scope: Namespaced<br>  names:<br>    # plural name to be used in the URL: &#47;apis&#47;&lt;group&gt;&#47;&lt;version&gt;&#47;&lt;plural&gt;<br>    plural: networks<br>    # singular name to be used as an alias on the CLI and for display<br>    singular: network<br>    # kind is normally the CamelCased singular type. Your resource manifests use this.<br>    kind: Network<br>    shortNames:<br>    - nw","like_count":0,"discussions":[{"author":{"id":1346098,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/32/ba870394.jpg","nickname":"邢哲源","note":"","ucode":"0DF345FB61B069","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559215,"discussion_content":"你的这个example-network.yaml文件有部分还是不正确的。openAPIV3Schema中的spec应该是描述cidr和gateway。\n\n正确的格式如下：\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: networks.samplecrd.x-k8s.io\nspec:\n  group: samplecrd.x-k8s.io\n  versions:\n    - name: v1\n      served: true\n      storage: true\n      schema:\n        openAPIV3Schema:\n          type: object\n          properties:\n            spec:\n              type: object\n              properties:\n                cidr:\n                  type: string\n                gateway:\n                  type: string\n  names:\n    kind: Network\n    singular: network\n    plural: networks\n    shortNames:\n      - nw\n  scope: Namespaced","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648646973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1346098,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/32/ba870394.jpg","nickname":"邢哲源","note":"","ucode":"0DF345FB61B069","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":559378,"discussion_content":"是的，我后面改了，没有更新，多谢指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648724903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":559215,"ip_address":""},"score":559378,"extra":""}]}]},{"had_liked":false,"id":335281,"user_name":"豆豆","can_delete":false,"product_type":"c1","uid":1275407,"ip_address":"","ucode":"97788B134C3212","user_header":"https://static001.geekbang.org/account/avatar/00/13/76/0f/c7c8021d.jpg","comment_is_top":false,"comment_ctime":1645438637,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1645438637","product_id":100015201,"comment_content":"之前死磕这一块，啃不下去。跳槽后，同事跟我说，直接上kubebuilder，我不想，我就想搞懂，回过头来，一行一行的看这几节关于operator的开发章节，就想搞清楚内部原理，终于看懂了，终于搞明白了。","like_count":1,"discussions":[{"author":{"id":1675966,"avatar":"https://static001.geekbang.org/account/avatar/00/19/92/be/8de4e1fe.jpg","nickname":"kaizen","note":"","ucode":"313EEA97AEC7C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576005,"discussion_content":"不错，看到kubebuilder，查了下什么东西，如获至宝，犹如神助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655223012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333519,"user_name":"窝窝头","can_delete":false,"product_type":"c1","uid":1063866,"ip_address":"","ucode":"5C2635ED6484F8","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/ba/3b30dcde.jpg","comment_is_top":false,"comment_ctime":1644393120,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644393120","product_id":100015201,"comment_content":"很多k8s辅助业务所需的一些资源都可以通过这种方式去注册声明使用了，而不需要额外的数据存储服务来支撑，对于运维或者相关开发人员来说绝对是好事","like_count":0},{"had_liked":false,"id":332187,"user_name":"壮壮341914","can_delete":false,"product_type":"c1","uid":2400293,"ip_address":"","ucode":"CDBF8F49C8B3B2","user_header":"https://static001.geekbang.org/account/avatar/00/24/a0/25/35efee8e.jpg","comment_is_top":false,"comment_ctime":1643090439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643090439","product_id":100015201,"comment_content":"我运行go get -u k8s.io&#47;code-generator&#47;... 会报错Your configuration specifies to merge with the ref &#39;refs&#47;heads&#47;master&#39;<br>from the remote, but no such ref was fetched. 有同学知道是什么问题吗","like_count":0},{"had_liked":false,"id":324983,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1638770804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638770804","product_id":100015201,"comment_content":"为 Kubernetes 添加一个名叫 Network 的 API 资源类型。从而达到了通过标准的 kubectl create 和 get 操作，来管理自定义 API 对象的目的。","like_count":0},{"had_liked":false,"id":323602,"user_name":"团","can_delete":false,"product_type":"c1","uid":1113864,"ip_address":"","ucode":"D56ABBCE4E4D90","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/08/7c18d8a4.jpg","comment_is_top":false,"comment_ctime":1638013197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638013197","product_id":100015201,"comment_content":"有一个疑问，Network资源类型的字段是在go代码里定义的，在yaml文件里没看到字段的定义。这篇文章中，代码还没有做任何执行，就通过两个yaml文件创建了Network资源和对应的资源对象，但是前面的说创建对象时在validation阶段会校验字段的正确性，可这时kubernetes怎么知道对象中应该有什么字段呢？如果不知道字段定义，是怎么做的validate，然后将对象存入registry呢?","like_count":0},{"had_liked":false,"id":316070,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1634120229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634120229","product_id":100015201,"comment_content":"第二十四课:深入解析声明式API（一）：API对象的奥秘<br>在k8s中，一个API对象在Etcd里完整的资源路径，是由：Group，Version和Resource组成。其中核心API，比如Pod、Node等，不需要Group（Group是“”）","like_count":0},{"had_liked":false,"id":295135,"user_name":"我才是疯子","can_delete":false,"product_type":"c1","uid":1899884,"ip_address":"","ucode":"87620FC7E1CB3A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ibZV11xYoMwUjRr8YOc1x9SPK0KbricciamhiazKnx7B46PDZXIU0gibH86IMNn73qcexhbtOny9srOG0Xw99sCrEg/132","comment_is_top":false,"comment_ctime":1622259692,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622259692","product_id":100015201,"comment_content":"go get -u k8s.io&#47;code-generator&#47;... 报错 （go1.16.1 go1.14.2都试过）<br># k8s.io&#47;code-generator&#47;cmd&#47;applyconfiguration-gen&#47;generators<br>k8s.io&#47;code-generator@v0.21.1&#47;cmd&#47;applyconfiguration-gen&#47;generators&#47;openapi.go:116:40: cannot use info (type &quot;gopkg.in&#47;yaml.v2&quot;.MapSlice) as type *&quot;gopkg.in&#47;yaml.v3&quot;.Node in argument to openapi_v2.NewDocument<br>k8s.io&#47;code-generator@v0.21.1&#47;cmd&#47;applyconfiguration-gen&#47;generators&#47;openapi.go:116:66: not <br><br>enough arguments in call to compiler.NewContext<br>        have (string, nil)<br>        want (string, *&quot;gopkg.in&#47;yaml.v3&quot;.Node, *compiler.Context)<br>","like_count":0},{"had_liked":false,"id":290315,"user_name":"起床君","can_delete":false,"product_type":"c1","uid":1473232,"ip_address":"","ucode":"E49429D6821A6F","user_header":"https://static001.geekbang.org/account/avatar/00/16/7a/d0/57d50170.jpg","comment_is_top":false,"comment_ctime":1619494880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619494880","product_id":100015201,"comment_content":"# 问题1：安装k8s.io&#47;code-generator，如果出现&quot;Hit an unsupported type invalid type for invalid type&quot;，就删掉重装一下<br>[[ -d $GOPATH&#47;src&#47;k8s.io&#47;code-generator ]] || go get -u -d k8s.io&#47;code-generator&#47;...<br><br># 问题2：如果没有生成响应的文件，手动执行下响应的generator，并添加 -v 5 --alsologtostderr参数<br># 2.1 发现错误：could not import k8s.io&#47;klog&#47;v2 (Config.Importer.Import(k8s.io&#47;klog&#47;v2) returned nil but no error)<br># 2.1解决： cp -r $GOPATH&#47;pkg&#47;mod&#47;k8s.io&#47;klog&#47;v2@v2.8.0  $GOPATH&#47;src&#47;k8s.io&#47;klog&#47;v2<br># 2.2 错误： &#47;Users&#47;lzd&#47;.gvm&#47;pkgsets&#47;go1.16.3&#47;global&#47;src&#47;k8s.io&#47;apimachinery&#47;pkg&#47;apis&#47;meta&#47;v1&#47;register.go:57:2: cannot use &amp;(ListOptions literal) (value of type *ListOptions) as &quot;k8s.io&#47;apimachinery&#47;pkg&#47;runtime&quot;.Object value in array or slice literal: missing method DeepCopyObject<br># 2.2 解决：types.go上的k8s注释一定要挨着结构体&#47;&#47; +k8s:deepcopy-gen:interfaces=k8s.io&#47;apimachinery&#47;pkg&#47;runtime.Object，不然可能没有匹配，以致于没有生成DeepCopyObject","like_count":0},{"had_liked":false,"id":289147,"user_name":"晓波","can_delete":false,"product_type":"c1","uid":1311843,"ip_address":"","ucode":"F65573FB3C0E51","user_header":"https://static001.geekbang.org/account/avatar/00/14/04/63/112780b3.jpg","comment_is_top":false,"comment_ctime":1618889655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618889655","product_id":100015201,"comment_content":"生成crd代码的脚本，其中<br># API Group<br>$ CUSTOM_RESOURCE_NAME=&quot;samplecrd&quot;<br><br>CUSTOM_RESOURCE_NAME 建议应该改名为：CUSTOM_GROUP_NAME，不然比较容易误导人","like_count":0},{"had_liked":false,"id":287668,"user_name":"李显良","can_delete":false,"product_type":"c1","uid":1228340,"ip_address":"","ucode":"0A79CB419E4F89","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/34/de6d9ce7.jpg","comment_is_top":false,"comment_ctime":1618099402,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618099402","product_id":100015201,"comment_content":"这些生成的自定义crd是编译到api-server还是那个组件？","like_count":0},{"had_liked":false,"id":286699,"user_name":"姜尧","can_delete":false,"product_type":"c1","uid":2405411,"ip_address":"","ucode":"D813E046DD81E8","user_header":"https://static001.geekbang.org/account/avatar/00/24/b4/23/0e296758.jpg","comment_is_top":false,"comment_ctime":1617509301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617509301","product_id":100015201,"comment_content":"这个做完了，怎么让其他人使用？有dockerhub这种可以push的地方吗","like_count":0},{"had_liked":false,"id":284845,"user_name":"卢承灏","can_delete":false,"product_type":"c1","uid":1672266,"ip_address":"","ucode":"80805A03308CA4","user_header":"https://static001.geekbang.org/account/avatar/00/19/84/4a/50940078.jpg","comment_is_top":false,"comment_ctime":1616495985,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1616495985","product_id":100015201,"comment_content":"各种姿势都试过了，最后之后clientset里面的versioned能生成。。。是不是和go版本有关。。。","like_count":0,"discussions":[{"author":{"id":1698112,"avatar":"https://static001.geekbang.org/account/avatar/00/19/e9/40/912ecac1.jpg","nickname":"Y.","note":"","ucode":"E4736F6C40154F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361791,"discussion_content":"你是只能生成clientset么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616757783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284079,"user_name":"types","can_delete":false,"product_type":"c1","uid":2449777,"ip_address":"","ucode":"8B50927EF1804F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDUJyeq54fiaXAgF62tNeocO3lHsKT4mygEcNoZLnibg6ONKicMgCgUHSfgW8hrMUXlwpNSzR8MHZwg/132","comment_is_top":false,"comment_ctime":1616058794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616058794","product_id":100015201,"comment_content":"请教个问题，CRD定义二了Group&#47;API&#47;Resouce.<br>此时直接通过CR yaml可以创建出资源。<br>请问API Server 如何对CR 的格式进行校验呢？？？<br>我写入一个不存在的字段，CR也能被正常创建，但是如果是POD&#47;Deployment的yaml格式不正确，kubectl apply 会提示错误的。","like_count":0},{"had_liked":false,"id":281702,"user_name":"轻喃","can_delete":false,"product_type":"c1","uid":1628795,"ip_address":"","ucode":"5D5989E3D4D84C","user_header":"https://static001.geekbang.org/account/avatar/00/18/da/7b/21cb1287.jpg","comment_is_top":false,"comment_ctime":1614852260,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1614852260","product_id":100015201,"comment_content":"按照老师的操作，生成了cilent库，但是没有生成deepcopy代码，很奇怪","like_count":0,"discussions":[{"author":{"id":2400293,"avatar":"https://static001.geekbang.org/account/avatar/00/24/a0/25/35efee8e.jpg","nickname":"壮壮341914","note":"","ucode":"CDBF8F49C8B3B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548220,"discussion_content":"我也是 后续有解决嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643091094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1628795,"avatar":"https://static001.geekbang.org/account/avatar/00/18/da/7b/21cb1287.jpg","nickname":"轻喃","note":"","ucode":"5D5989E3D4D84C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2400293,"avatar":"https://static001.geekbang.org/account/avatar/00/24/a0/25/35efee8e.jpg","nickname":"壮壮341914","note":"","ucode":"CDBF8F49C8B3B2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567592,"discussion_content":"没有哦可能是有变化了吧，文章有年限了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650952532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":548220,"ip_address":""},"score":567592,"extra":""}]}]},{"had_liked":false,"id":267042,"user_name":"冲冲冲","can_delete":false,"product_type":"c1","uid":1614908,"ip_address":"","ucode":"82F7D8829E3797","user_header":"https://static001.geekbang.org/account/avatar/00/18/a4/3c/e7e1c0f0.jpg","comment_is_top":false,"comment_ctime":1607580208,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1607580208","product_id":100015201,"comment_content":"Generating deepcopy funcs<br>Generating clientset for samplecrd:v1 at github.com&#47;resouer&#47;k8s-controller-custom-resource&#47;pkg&#47;client&#47;clientset<br>Generating listers for samplecrd:v1 at github.com&#47;resouer&#47;k8s-controller-custom-resource&#47;pkg&#47;client&#47;listers<br>Generating informers for samplecrd:v1 at github.com&#47;resouer&#47;k8s-controller-custom-resource&#47;pkg&#47;client&#47;informers<br><br>这四句我只有client那个看到了效果，其他还是一点变化都没有，有人和我一样么","like_count":0,"discussions":[{"author":{"id":2400293,"avatar":"https://static001.geekbang.org/account/avatar/00/24/a0/25/35efee8e.jpg","nickname":"壮壮341914","note":"","ucode":"CDBF8F49C8B3B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548221,"discussion_content":"解决了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643091108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2558254,"avatar":"https://static001.geekbang.org/account/avatar/00/27/09/2e/9421273d.jpg","nickname":"甜橙","note":"","ucode":"AC98BAED91B43E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370969,"discussion_content":"所以这个是怎么解决的？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619599115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1698112,"avatar":"https://static001.geekbang.org/account/avatar/00/19/e9/40/912ecac1.jpg","nickname":"Y.","note":"","ucode":"E4736F6C40154F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361794,"discussion_content":"解决了么？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616757958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266669,"user_name":"Marshall","can_delete":false,"product_type":"c1","uid":1476507,"ip_address":"","ucode":"0FB004E8163F44","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/9b/8bebc8b6.jpg","comment_is_top":false,"comment_ctime":1607434064,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1607434064","product_id":100015201,"comment_content":"这里面的gopath是apiserver的gopath吗","like_count":0,"discussions":[{"author":{"id":2156207,"avatar":"https://static001.geekbang.org/account/avatar/00/20/e6/af/acf4a949.jpg","nickname":"山外青山楼外楼外楼","note":"","ucode":"19FDB1FA5D394F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341202,"discussion_content":"不是吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610350123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253413,"user_name":"Geek_b6df54","can_delete":false,"product_type":"c1","uid":1655970,"ip_address":"","ucode":"55D7E998D83878","user_header":"","comment_is_top":false,"comment_ctime":1602731564,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602731564","product_id":100015201,"comment_content":"请问一下，k8s project layout 里的api文件夹和apis文件夹在概念上的区别是什么","like_count":0},{"had_liked":false,"id":248869,"user_name":"求渔","can_delete":false,"product_type":"c1","uid":1103671,"ip_address":"","ucode":"6EABC5A0C703C9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/37/d8c8acdf.jpg","comment_is_top":false,"comment_ctime":1600339464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600339464","product_id":100015201,"comment_content":"用 Kubernetes 部署了 Kubernetes，是指把一个k8s当做类似saltstack的工具去做其他k8s的部署吧？！","like_count":0},{"had_liked":false,"id":130328,"user_name":"Geek_603e81","can_delete":false,"product_type":"c1","uid":1338668,"ip_address":"","ucode":"FA9ECB1E6D707B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJerY3WgO21tR7ZTREl99rqII9YNIe2lAkTa53EL1UL4zOgId6o9FOnqLYERwania0m4pyslfkfeug/132","comment_is_top":false,"comment_ctime":1567426503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567426503","product_id":100015201,"comment_content":".&#47;generate-groups.sh all &quot;github.com&#47;k8s-controller-custom-resource&#47;pkg&#47;client&quot;  &quot;gitbub.com&#47;k8s-controller-custom-resource&#47;pkg&#47;apis&quot; &quot;samplecrd:v1&quot; <br>Generating deepcopy funcs<br>.&#47;generate-groups.sh: line 71: GOPATH: unbound variable 代码生成有问题，有谁知道这么怎么解决么？","like_count":0},{"had_liked":false,"id":130019,"user_name":"Wiwen","can_delete":false,"product_type":"c1","uid":1156306,"ip_address":"","ucode":"91466C0AE76903","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/d2/c483b836.jpg","comment_is_top":false,"comment_ctime":1567352353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567352353","product_id":100015201,"comment_content":"应该是pkg&#47;apis&#47;samplecrd&#47;v1下面添加doc.go, register.go types.go三个文件吧","like_count":0},{"had_liked":false,"id":112885,"user_name":"Geek_92d7a9","can_delete":false,"product_type":"c1","uid":1546709,"ip_address":"","ucode":"EEA6F253A4F110","user_header":"","comment_is_top":false,"comment_ctime":1562837267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562837267","product_id":100015201,"comment_content":"请问是执行 generate-group.sh 時，把相關的实作丢给API server吗？ 我的意思是API server 在何时获知有新定义的对象...有点不太确定<br>谢谢","like_count":0},{"had_liked":false,"id":67434,"user_name":"Charles","can_delete":false,"product_type":"c1","uid":1201560,"ip_address":"","ucode":"C8C8A4F2B6C20F","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/98/a49061ab.jpg","comment_is_top":false,"comment_ctime":1550146132,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550146132","product_id":100015201,"comment_content":"正好学过go, 可以派上用场了","like_count":0},{"had_liked":false,"id":55462,"user_name":"HHHumbert","can_delete":false,"product_type":"c1","uid":1300847,"ip_address":"","ucode":"04089DE3F0E093","user_header":"https://static001.geekbang.org/account/avatar/00/13/d9/6f/8f5a4f02.jpg","comment_is_top":false,"comment_ctime":1546187140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546187140","product_id":100015201,"comment_content":"typo: 接着，我需要在 pkg&#47;apis&#47;samplecrd 目录下添加一个 doc.go 文件<br>应为: pkg&#47;apis&#47;samplecrd&#47;v1 目录下","like_count":0},{"had_liked":false,"id":36192,"user_name":"星星王","can_delete":false,"product_type":"c1","uid":1219635,"ip_address":"","ucode":"09C97283309BC4","user_header":"https://static001.geekbang.org/account/avatar/00/12/9c/33/45eea921.jpg","comment_is_top":false,"comment_ctime":1540972002,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540972002","product_id":100015201,"comment_content":"磊哥问个问题，kubernetes.io 里面说audit属于audit.k8s.io API group 但是我apiserver启动项中添加 --runtime-config=audit.k8s.io&#47;v1alpha1后 apiserver启动不了 报错 unknown api groups audit.k8s.io😣","like_count":0},{"had_liked":false,"id":34270,"user_name":"silver","can_delete":false,"product_type":"c1","uid":1186740,"ip_address":"","ucode":"908E3C8560D6E1","user_header":"https://static001.geekbang.org/account/avatar/00/12/1b/b4/a6db1c1e.jpg","comment_is_top":false,"comment_ctime":1540079367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540079367","product_id":100015201,"comment_content":"resource的定义通过CustomResourceDefinition，这是否意味k8s在创建resource时只能对field的type进行validation?比如说它不能检查一个field的数值为空或超出某个最大值?","like_count":0},{"had_liked":false,"id":33762,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1229457,"ip_address":"","ucode":"4E20DFD3D4FF82","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/91/fba79b87.jpg","comment_is_top":false,"comment_ctime":1539874839,"is_pvip":false,"replies":[{"id":"12113","content":"建议还是多实践这里讲解的内容","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539876071,"ip_address":"","comment_id":33762,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539874839","product_id":100015201,"comment_content":"老师好，作为一个运维，觉得你讲的内容好深，学得好吃力，不知能否分享一些实际生产环境的troubleshooting 的案例和思路？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427042,"discussion_content":"建议还是多实践这里讲解的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539876071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33159,"user_name":"mgxian","can_delete":false,"product_type":"c1","uid":1014806,"ip_address":"","ucode":"7B7E77E6A83B87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","comment_is_top":false,"comment_ctime":1539751572,"is_pvip":false,"replies":[{"id":"12034","content":"当然是给下一篇写controller用的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539783675,"ip_address":"","comment_id":33159,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539751572","product_id":100015201,"comment_content":"请问老师 通过那个CustomResourceDefinition相关的ymal文件已经可以正常定义查看crd了 为什么还需要写相关的go代码呢？生成的clients又是给谁用的呢？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426944,"discussion_content":"当然是给下一篇写controller用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539783675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":33133,"user_name":"mgxian","can_delete":false,"product_type":"c1","uid":1014806,"ip_address":"","ucode":"7B7E77E6A83B87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","comment_is_top":false,"comment_ctime":1539748218,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539748218","product_id":100015201,"comment_content":"启动一个服务 （deployment+service）watch 相关api 处理相关的业务逻辑","like_count":0}]}