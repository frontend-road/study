{"id":468857,"title":"03 | 初窥门径：我们要搭建一个怎样的微服务实战项目？","content":"<p>你好，我是姚秋辰。</p><p>在上一节课，我跟你介绍了Spring Cloud的发展背景以及各个组件库，此刻，你一定已经跃跃欲试想要立马开始动手编写实战项目了吧？别着急，今天咱先别忙着敲代码，让我先为你勾画出实战项目的全景蓝图。</p><p>这节课，我会跟你聊一聊我们这个优惠券平台项目的整体功能和模块，以及每个功能点的技术选型和背后的依据，让你从宏观的角度来了解一下我们整个项目的概貌和大致的走向，帮助你更轻松地学习后面的课程。首先，我来带你了解一下这个实战项目的业务功能。</p><h2>优惠券平台项目介绍</h2><p>相信你一定参与过双11或者618之类的电商大促活动，体验过各种眼花缭乱的优惠券和营销规则计算。而我们的实战项目，就是要搭建一个简化版的营销优惠计算系统，实现优惠券模板的创建、用户领取优惠券、下单核销优惠券和订单价格试计算等功能。</p><p>我曾经参与了一线电商新零售平台营销中心业务从0到1的搭建，与淘系营销优惠平台UMP对接过很多花式营销玩法。根据我过去的经验，如果我要实现一个“领取优惠券”的功能，那么我首先是要创建一个营销规则模板。这个模板就像是一个模具一样，每张优惠券都通过这个模具来铸造，并最终发放到用户手中。</p><p>使用模板的好处是可以对优惠券消费规则做一层抽象，比如满减类、打折类这些优惠券只是具体的优惠金额不同，但是玩法类似，我们把相类似的玩法功能抽象成一个模板，就可以简化具体优惠券的创建和核销流程。</p><!-- [[[read_end]]] --><p>在这个实战项目中，我也借鉴了之前的工作经验，把整个项目划分为了优惠券模板服务、计算服务、用户服务和平台类组件这四大模块。它们的功能是这样的：</p><ul>\n<li>\n<p><strong>优惠券模板服务</strong>：模板规则是创建具体优惠券的前置条件，每种类型的模板都是一个计算公式，这个公式约定了优惠计算的方式。在这个项目中，模板服务实现了模板规则的创建、克隆、分页查找等功能。另外，我将在项目里定义满减、随机立减、满折、晚间双倍优惠等多种券模板类型。</p>\n</li>\n<li>\n<p><strong>优惠计算服务</strong>：这个模块是根据用户购物车中的商品信息（单价、数量、所属门店）和优惠券信息，来计算当前订单优惠后的价格。另外，如果用户有多张优惠券，我还提供了“优惠金额试算”服务，帮助用户挑选最省钱的优惠券。</p>\n</li>\n<li>\n<p><strong>用户服务</strong>：这是暴露给外部用户使用的接口，它依赖于模板服务和优惠计算服务完成底层逻辑，主要业务场景是用户领券、订单价格试算、下单核销和订单金额试算等功能。</p>\n</li>\n<li>\n<p><strong>平台类组件</strong>：主要包括一些业务无关的中心化组件，比如Gateway网关等等，你将在Spring Cloud课程中逐渐接触到平台类组件的搭建。</p>\n</li>\n</ul><p>从整体来看，优惠券模板服务和优惠计算服务是基础服务，用户服务是对用户开放的接口，它依赖于这两个基础服务来完成业务逻辑。而平台类组件则提供了横向的微服务特性支持，比如微服务网关、链路追踪功能等等，你可以把它们理解为“微服务中间件”。我们通过下面这幅图来看一下这四个模块之间的关联关系：</p><p><img src=\"https://static001.geekbang.org/resource/image/b0/01/b06e7ba06965b497f07285b571f8fa01.jpg?wh=2000x1039\" alt=\"\"></p><p>我们在<a href=\"https://time.geekbang.org/column/article/467319\">开篇词</a>中提到，为了帮你顺利过渡到Spring Cloud实战，我会先用Spring Boot搭建出这个优惠券平台的单体应用，然后在这个基础上做Spring Cloud改造。</p><h2>Spring Boot实战项目规划</h2><p>从项目实施的角度来看，Spring Boot阶段的任务相对简单。我们会用两节课搭建起优惠券平台的三个业务模块，并按照模块之间的先后依赖顺序进行改造。在第一节课中，我将带你搭建一个单体应用版的优惠券模板服务，在这个过程中我们会使用spring-data-jpa和spring-web实现系统搭建。其中，spring-data-jpa是用来实现数据库CRUD操作的组件，而spring-web是开发RESTFul风格的API接口所需要用到的组件。接着在第二节课中，我们将使用同样的技术搭建订单优惠计算服务和用户服务。</p><p>这里你要注意，在Spring Boot的阶段，用户服务是一个“超级单体应用”，我把优惠券模板服务和订单优惠计算服务都打包到了用户服务中，跨模块的服务调用都是通过本地方法完成的，因此你只用启动用户服务就可以执行所有模块的业务功能。</p><p>在搭建项目的过程中，我会带你重点掌握以下这三个技术点：</p><ol>\n<li><strong>项目搭建</strong>：分层构建项目结构，并借助Maven实现依赖项管理；</li>\n<li><strong>数据操作</strong>：我会带你快速入门spring-data-jpa实战，分别通过接口声明、自定义SQL和JpaRepository三种方式实现数据库CRUD操作；</li>\n<li><strong>开放对外API</strong>：快速入门spring-web实战，通过注解对外暴露RESTful风格的API。</li>\n</ol><p>此外，我还会不断跟你分享一些我平时工作中积累的小技巧，比如防御型编程、如何借助插件自动生成代码和数据校验、JPA级联关系的误区、计算密集型服务的特点、模板设计模式的应用等等，相信这些内容可以给你一些工作上的启发。</p><p>Spring Boot的官方社区提供了一个非常简单的Hello World教程，如果你没有太多Spring Boot的使用经验，那么可以通过这个教程链接<a href=\"https://spring.io/quickstart\">Spring Quickstart Guide</a>来了解Spring Boot的搭建过程。</p><p>在Spring Boot阶段我们搭建好优惠券平台的单体应用后，接下来就可以进行Spring Cloud微服务化改造了。</p><h2>Spring Cloud实战项目全景规划</h2><p>我们先来看一下优惠券平台采用微服务架构，整体的技术方案规划和技术选型是怎样的。下面这张图里列举的技术框架都是目前一线广泛使用的开源组件。</p><p><img src=\"https://static001.geekbang.org/resource/image/65/a7/65a733f0e38c0a374bd1d0ecbf2d18a7.jpg?wh=2000x1039\" alt=\"\"></p><p>看到图中的这些技术点，我想此刻的你一定很懵，不知道这些技术框架的用途，也不知道该从何处下手来做改造。那么，接下来让我跟你聊聊我如何设计Spring Cloud实战课程的技术选型以及总体的搭建流程，这样你就能做到心中有数，学起来也能得心应手了。</p><p>根据微服务学习的路径以及各个组件的难易程度，我把整个微服务框架由浅入深分为了三个不同的阶段：</p><p>第一阶段：搭建基础的微服务功能，实现<strong>微服务之间的通信</strong>；</p><p>第二阶段：为各个模块构建<strong>服务容错</strong>、<strong>分布式配置中心</strong>、<strong>分布式链路追踪能力</strong>；</p><p>第三阶段：进一步实现<strong>微服务网关</strong>、<strong>消息驱动</strong>和<strong>分布式事务</strong>。</p><p>下面我们来看下每个阶段主要做些什么以及对应的技术选型。</p><h3>第一阶段</h3><p>在第一阶段，我们主要实现<strong>微服务之间的通信</strong>，将用户微服务、优惠券模板服务和订单优惠计算服务拆分为独立部署的业务系统，通过注册中心来实现服务注册和服务发现，让各个微服务之间可以互相调用。这个阶段涉及的关键技术是Nacos注册中心、Loadbalancer客户端负载均衡组件和OpenFeign服务间调用组件。</p><p>我们知道，微服务之间的服务通信有一个前提条件，就是你要知道将要调用的服务器地址是什么。这个寻址的任务是交由Nacos注册中心和Loadbalancer负载均衡器共同来完成的。</p><p>Nacos是Alibaba出品的服务治理组件，它作为一个注册中心组件，负责收集所有服务节点的地址信息并维护服务注册表，所有服务上线之后都会向它汇报状态。Loadbalancer则承担了负载均衡的任务，在客户端发起服务调用的时候，它会负责从Nacos的注册表中挑选一台目标服务器。而OpenFeign组件是一个“锦上添花”的组件，它能够简化基于HTTP的远程服务调用，让我们就像使用本地接口一样方便地发起远程服务调用。</p><p>为什么我会选择Nacos+Loadbalancer作为选型方案呢？其实，在早期版本的Spring Cloud微服务架构选型中，Eureka + Ribbon是一个使用最为广泛的组合，它们是Netflix公司贡献给Spring Cloud项目的服务治理+负载均衡组件。</p><p>我们在上节课中讲过，Netflix正在退出Spring Cloud的历史舞台。Eureka和Ribbon已经进入了维护状态。其中，Ribbon更是在Spring Cloud I 版之后，就从官方组件库中被移除了。这意味着Eureka和Ribbon已经进入了“暮年”，不会再有重大的功能更新，如果你在项目中使用Netflix组件库，那么在未来将无法享受Spring Cloud社区发布的新功能。</p><p>因此，在考虑技术选型的时候，我选择了<strong>后劲更足、功能更为强大</strong>的Nacos和Spring Cloud官方开源的Loadbalancer组件。大致来讲，在第一阶段，我会分为三个部分来带你搭建起微服务之间的通信：</p><ol>\n<li><strong>服务治理</strong>：服务治理的重点是搭建基础的跨服务调用功能。我会把用户服务、优惠计算服务和订单服务改造成可以独立启动的微服务，并借助Nacos的服务发现功能，通过Webflux组件中的WebClient实现基于HTTP的跨服务间的调用；</li>\n<li><strong>负载均衡</strong>：在这部分，我们将在服务治理的基础上，引入Loadbalancer组件为跨服务调用添加负载均衡的能力。除此之外，我会对Loadbalancer组件的扩展接口做自定义开发，实现一个金丝雀测试的负载均衡场景；</li>\n<li><strong>简化服务调用</strong>：我将使用OpenFeign组件对用户服务进行改造，将原先复杂的WebClient调用替换为简洁的OpenFeign调用。</li>\n</ol><h3>第二阶段</h3><p>在第二阶段，我们的实战重点有三个：</p><ul>\n<li>利用服务容错提高微服务架构的可用性；</li>\n<li>搭建全链路的分布式链路追踪能力；</li>\n<li>实现统一的配置管理和动态属性推送。</li>\n</ul><p>这个阶段涉及的技术组件是Nacos Config、Sentinel、Sleuth+Zipkin+ELK。</p><p>在微服务架构中，<strong>服务容错</strong>是保障服务高可用的一个重要手段。在这个项目中，我们选择用Sentinel作为服务容错组件，它也是Alibaba贡献给Spring Cloud的。Sentinel秉承了阿里系“大而全”的传统，只这一款组件就可以实现<strong>降级</strong>、<strong>熔断</strong>、<strong>流量整形</strong>等多种服务容错途径。</p><p><strong>链路追踪</strong>也是微服务架构中一个很重要的功能，线上异常排查全靠它提供线索。我使用了Spring Cloud官方开源的Sleuth实现了日志打标功能，使用全局唯一标记将一次跨微服务调用链上的各个环节全部串联起来。</p><p>光打标还没用，我还结合了Zipkin组件实现<strong>调用链的可视化检索</strong>，将调用链上各个阶段的请求按顺序显示在页面上，这样，我们就可以一目了然定位到线上异常发生在哪个环节。另外，我使用了目前业界主流的ELK组合（Elastic Search + Logstash + Kibana）作为日志检索系统。</p><p>在<strong>配置项管理</strong>的技术选型方面，我使用了Nacos Config作为最终方案。借助Nacos Config我们可以轻松实现配置项的远程获取和动态推送，在配置项的应用隔离和环境隔离方面Nacos也是一把好手，我将会在配置管理的实战环节讲述更多的配置项花式玩法。相比较Spring Cloud的另一款配置管理组件Spring Cloud Config来说，Nacos的搭建更加容易且更易于上手，而且可以更好地支持“配置项”回滚的功能。</p><p>在后面的课程中，我将按照下面的顺序来实现这些能力：</p><ol>\n<li><strong>配置管理</strong>：配置管理的重点是将三个微服务应用接入到Nacos Config配置中心，使用远程配置中心存储部分配置项。</li>\n<li><strong>服务容错</strong>：搭建Sentinel Dashboard控制台，通过控制台将降级规则和流量整形规则应用到业务埋点中。</li>\n<li><strong>链路追踪</strong>：这部分的重点是搭建分布式链路追踪与日志系统。</li>\n</ol><h3>第三阶段</h3><p>在第三阶段，我们的实战重点有三个：</p><ul>\n<li>搭建微服务网关作为统一流量入口；</li>\n<li>使用消息驱动组件对接RabbitMQ；</li>\n<li>通过分布式事务保证数据一致性。</li>\n</ul><p>这个阶段涉及的技术组件是Gateway、Stream和Seata。</p><p><strong>微服务网关</strong>是架设在外部网关（如Ngnix）和内部微服务之间的一座桥梁，我选用Spring Cloud Gateway作为网关组件。Gateway不光担任了路由转发的重任，同时它提供了丰富的谓词组合实现复杂的路由判断逻辑。除此以外，你还可以在网关层定义拦截器，对来访请求执行一段特殊的业务逻辑。</p><p>曾经微服务网关的头把交椅是Netflix贡献的Zuul组件，但Zuul 2.0的开源发布一拖再拖，且性能并未达到预期效果。Spring Cloud官方迫不得已，还没等到Zuul 2.0发布，就自己发布了一款开源网关组件Spring Cloud Gateway。基于这些原因，Gateway当之无愧成为了网关层的不二选择。</p><p><strong>消息队列和消息驱动</strong>是老牌技术了，它并不是微服务特有的功能，我之所以在课程中加入了消息驱动这个内容，主要有两个原因。一是我想让你了解Spring Cloud开源的消息驱动组件“Stream”，它可以大幅降低应用系统和消息组件之间的对接流程。二是消息组件在如今有非常丰富的使用场景，我希望将“<strong>消息组件的应用场景</strong>”作为一个知识拓展点，帮助你开阔眼界。</p><p><strong>分布式事务</strong>是微服务环境下保证事务一致性的终极手段。在课程中我将主要介绍两种比较有代表性的Seata分布式事务解决方案，一种是没有代码侵入的Seata AT方案，另一种是蚂蚁金服贡献的资源锁定+补偿型的Seata TCC方案。</p><p>好，到这里，我们就完整了解了整个项目的全景规划，以及对应的技术选型。现在，我们来回顾一下这节课的重点内容。</p><h2>总结</h2><p>在整个项目中，我们先通过Spring Boot快速落地了优惠券平台的三个业务模块，然后，在Spring Cloud实战阶段，我们分为三个阶段对Spring Boot项目进行微服务化改造：</p><ul>\n<li>第一个阶段使用Nacos、Loadbalancer和OpenFeign实现了跨服务的调用；</li>\n<li>第二阶段使用Sentinel、Nacos Config和Sleuth实现了服务容错、配置管理和分布式链路追踪；</li>\n<li>第三阶段使用Gateway、Stream和Seata实现了微服务网关、消息事件驱动和分布式事务。</li>\n</ul><p>在学习专栏的过程中，我不建议你“跳章节”学习，正确的姿势是顺着专栏的各个阶段稳步推进。因为每一个阶段的内容都有前后关系，后一个技术组件或多或少都依赖于前面课程中用到的组件，如果跳跃了几个章节，很容易漏掉一些关键步骤的配置和搭建过程，导致项目无法启动。</p><p>学习过程中我们难免会碰到各种问题，需要求助于搜索引擎。你也许用得比较多的是国内的搜索引擎，但经常查到千篇一律的文章，又或者看一个解决方案还需要注册会员或者付费，体验相当不好。</p><p>因此，我推荐你偶尔尝试使用Google和<a href=\"https://stackoverflow.com\">stackoverflow</a>两个网站来查询解决方案。这两个网站是对我的工作最有帮助的两位老师，不仅能帮助你解决问题，还可以锻炼你的英文阅读能力。要知道英文能力对技术人员来说还是相当重要的，尤其是当你想要了解一些前沿技术或者阅读一些论文的时候。所以，提高英文阅读能力要靠你平时的不断积累才行。</p><h2>思考题</h2><p>最后，请你思考一下，还有哪些微服务的技术点是你想了解的，你可以在留言区提出感兴趣的技术，在后期我可以把呼声比较高的技术点通过加餐的形式分享给你，让我们这个课程能够持续更新和演进。我在留言区等你。</p><p>好啦，这节课就结束啦。欢迎你把这节课分享给更多对Spring Cloud感兴趣的朋友。我是姚秋辰，我们下节课再见！</p>","neighbors":{"left":{"article_title":"02 | 微服务全家桶：走进 Spring Cloud 的世界","id":467967},"right":{"article_title":"04 | 十八般兵器：如何搭建项目所需的开发环境？","id":469935}},"comments":[{"had_liked":false,"id":326976,"user_name":"Pyr0man1ac","can_delete":false,"product_type":"c1","uid":1587820,"ip_address":"","ucode":"6F760FDF1CB5B1","user_header":"https://static001.geekbang.org/account/avatar/00/18/3a/6c/acefe61a.jpg","comment_is_top":false,"comment_ctime":1639810283,"is_pvip":false,"replies":[{"id":"118842","content":"行家，一眼就发现我漏掉的一个模块了，之前课程里我都会通过security组件做一个oauth鉴权模块。这次没有加上，我后期看考虑在代码里坐上这部分。<br><br>话说同学，你的头像和我一位同事一样，不会是同一个人吧","user_name":"作者回复","comment_id":326976,"uid":"2819998","ip_address":"","utype":1,"ctime":1639823169,"user_name_real":"作者"}],"discussion_count":5,"race_medal":0,"score":"66064319723","product_id":100101301,"comment_content":"姚老师 能否扩展下微服务中鉴权相关知识点","like_count":16,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539741,"discussion_content":"行家，一眼就发现我漏掉的一个模块了，之前课程里我都会通过security组件做一个oauth鉴权模块。这次没有加上，我后期看考虑在代码里坐上这部分。\n\n话说同学，你的头像和我一位同事一样，不会是同一个人吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639823170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1587820,"avatar":"https://static001.geekbang.org/account/avatar/00/18/3a/6c/acefe61a.jpg","nickname":"Pyr0man1ac","note":"","ucode":"6F760FDF1CB5B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":539745,"discussion_content":"啊这 不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639824631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":539741,"ip_address":""},"score":539745,"extra":""}]},{"author":{"id":1055475,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","nickname":"iLeGeND","note":"","ucode":"4055A628A6E97C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561019,"discussion_content":"代码在哪\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649514849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075267,"avatar":"https://static001.geekbang.org/account/avatar/00/10/68/43/1fe64086.jpg","nickname":"zero_","note":"","ucode":"14D3AD3D997112","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550715,"discussion_content":"期待喲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644681243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1563904,"avatar":"https://static001.geekbang.org/account/avatar/00/17/dd/00/4a7b9a9f.jpg","nickname":"风筝","note":"","ucode":"4A847EA6A2A1AB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540165,"discussion_content":"鉴权如果是API服务提供给app用的，我都是在网关做cookie检验，如果是后台服务，一般搭配oauth2，然后网关层面拿token去oauth服务检验，直接返回用户信息对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639976515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327532,"user_name":"chon","can_delete":false,"product_type":"c1","uid":1068925,"ip_address":"","ucode":"1C32170972F726","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7d/dd852b04.jpg","comment_is_top":false,"comment_ctime":1640163538,"is_pvip":true,"replies":[{"id":"119232","content":"其实就是在CP和AP之间做一个选择。如果用长会话做健康检查，并且用CP方案在注册中心集群内做状态同步，那么就是一种偏向一致性的实现模式。而大部分注册中心在一致性和可用性之间选择的是偏向可用性，AP方案，对一致性采取了一定的容忍，只要最终一致即可。如果要适当提高一致性，你可以调整心跳频率和剔除判定的时间，提高服务剔除的响应速度<br><br>微服务下的很多场景都是偏向最终一致性","user_name":"作者回复","comment_id":327532,"uid":"2819998","ip_address":"","utype":1,"ctime":1640191507,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"35999901906","product_id":100101301,"comment_content":"我看前面有同学留言讨论优雅下线。我也有个相关问题。如果容器应用突然挂了，由于上游应用和注册中心同步需要时间，流量一段时间内还是会打到挂了的应用。这样500错误很多很难看。dubbo因为基于zookeeper就没这问题，能很快发现应用挂了。sc有啥好的方案能快速发现下游应用挂了，避免流量打到挂了的下游吗？","like_count":8,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540911,"discussion_content":"其实就是在CP和AP之间做一个选择。如果用长会话做健康检查，并且用CP方案在注册中心集群内做状态同步，那么就是一种偏向一致性的实现模式。而大部分注册中心在一致性和可用性之间选择的是偏向可用性，AP方案，对一致性采取了一定的容忍，只要最终一致即可。如果要适当提高一致性，你可以调整心跳频率和剔除判定的时间，提高服务剔除的响应速度\n\n微服务下的很多场景都是偏向最终一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640191507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326778,"user_name":"李嘉颖","can_delete":false,"product_type":"c1","uid":1249474,"ip_address":"","ucode":"1D6631DC5F800F","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/c2/38939d66.jpg","comment_is_top":false,"comment_ctime":1639671347,"is_pvip":false,"replies":[{"id":"118741","content":"后面会讲到sentinel的流控和熔断规则，以及扩展sentinel实现基于来源的限流，dashboard二次开发接入nacos做规则持久化","user_name":"作者回复","comment_id":326778,"uid":"2819998","ip_address":"","utype":1,"ctime":1639722259,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"35999409715","product_id":100101301,"comment_content":"我想深入一点了解一下限流降级熔断","like_count":8,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539459,"discussion_content":"后面会讲到sentinel的流控和熔断规则，以及扩展sentinel实现基于来源的限流，dashboard二次开发接入nacos做规则持久化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639722259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326946,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1639791776,"is_pvip":true,"replies":[{"id":"118843","content":"奥利给~","user_name":"作者回复","comment_id":326946,"uid":"2819998","ip_address":"","utype":1,"ctime":1639823216,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"31704562848","product_id":100101301,"comment_content":"很接地气，请老师加餐讲讲基于k8s的微服务弹性落地方案，谢谢老师","like_count":7,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539742,"discussion_content":"奥利给~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639823216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326799,"user_name":"Layne","can_delete":false,"product_type":"c1","uid":1479934,"ip_address":"","ucode":"1FEAACD900AB39","user_header":"https://static001.geekbang.org/account/avatar/00/16/94/fe/5fbf1bdc.jpg","comment_is_top":false,"comment_ctime":1639704825,"is_pvip":true,"replies":[{"id":"118742","content":"我考虑后面用加餐的方式，添加一部分容器的知识介绍。课程里在日志系统搭建这里也会简单介绍一下docker的使用","user_name":"作者回复","comment_id":326799,"uid":"2819998","ip_address":"","utype":1,"ctime":1639722310,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"31704475897","product_id":100101301,"comment_content":"希望老师讲解一些微服务部署相关方面的知识内容，如容器类似的知识，怎么与微服务结合使用。","like_count":7,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539461,"discussion_content":"我考虑后面用加餐的方式，添加一部分容器的知识介绍。课程里在日志系统搭建这里也会简单介绍一下docker的使用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639722310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075267,"avatar":"https://static001.geekbang.org/account/avatar/00/10/68/43/1fe64086.jpg","nickname":"zero_","note":"","ucode":"14D3AD3D997112","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550716,"discussion_content":"期待唷","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644681272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326939,"user_name":"卡特","can_delete":false,"product_type":"c1","uid":1060491,"ip_address":"","ucode":"FF63677089E701","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/8b/32a8c5a0.jpg","comment_is_top":false,"comment_ctime":1639784556,"is_pvip":true,"replies":[{"id":"118844","content":"可以，不光skywalking，像jaegertracing之类的都可以用（jaeger也是受zipkin启发搞出来的）。zipkin本身不用集成SDK到项目代码里，只要通过sleuth-zipkin插件就可以间接集成，我在项目中会通过RabbitMQ接收链路信息，服务将链路信息发送给RMQ，zipkin通过监听RMQ来获取数据。只用添加三两行配置就能实现","user_name":"作者回复","comment_id":326939,"uid":"2819998","ip_address":"","utype":1,"ctime":1639823505,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"27409588332","product_id":100101301,"comment_content":"非侵入的Skywalking可以替换Zipkin吗？SDK侵入比较严重","like_count":6,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539743,"discussion_content":"可以，不光skywalking，像jaegertracing之类的都可以用（jaeger也是受zipkin启发搞出来的）。zipkin本身不用集成SDK到项目代码里，只要通过sleuth-zipkin插件就可以间接集成，我在项目中会通过RabbitMQ接收链路信息，服务将链路信息发送给RMQ，zipkin通过监听RMQ来获取数据。只用添加三两行配置就能实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639823505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326943,"user_name":"破发者","can_delete":false,"product_type":"c1","uid":1401266,"ip_address":"","ucode":"3B3091527479F2","user_header":"https://static001.geekbang.org/account/avatar/00/15/61/b2/f36c1d40.jpg","comment_is_top":false,"comment_ctime":1639789555,"is_pvip":false,"replies":[{"id":"118841","content":"bingo，大体上就是这样。不过更深层次还要考虑以什么角度做服务切分，比如领域建模等等。像大厂里会供着一些领域建模的专家，比如订单域交易域这些核心领域的架构，还是挺吃经验的。<br><br>独立拆分部署是微服务表现形式，是表象，不过为了支持这种表象，我们还有很多infra层面的技术支持，这就是后面我们要介绍的各个组件了<br>","user_name":"作者回复","comment_id":326943,"uid":"2819998","ip_address":"","utype":1,"ctime":1639823074,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"23114626035","product_id":100101301,"comment_content":"老师，如果一笔业务交易是调用了多个服务之后才完成，每个服务都能单独部署，是不是这样就可以称之为使用了微服务？","like_count":5,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539740,"discussion_content":"bingo，大体上就是这样。不过更深层次还要考虑以什么角度做服务切分，比如领域建模等等。像大厂里会供着一些领域建模的专家，比如订单域交易域这些核心领域的架构，还是挺吃经验的。\n\n独立拆分部署是微服务表现形式，是表象，不过为了支持这种表象，我们还有很多infra层面的技术支持，这就是后面我们要介绍的各个组件了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639823074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327200,"user_name":"威威威小哥","can_delete":false,"product_type":"c1","uid":1794075,"ip_address":"","ucode":"D1833693BB1957","user_header":"https://static001.geekbang.org/account/avatar/00/1b/60/1b/37a1eb91.jpg","comment_is_top":false,"comment_ctime":1639976784,"is_pvip":false,"replies":[{"id":"119030","content":"这部分我倒是没有涉及，很多公司是提供了一种平台化的服务来做幂等性检查，接口参数里带有的幂等ID字段，方法先用这个ID调用幂等校验服务做一层检查。我这里所说的平台化服务，就是公司层面开发的供给各个业务方使用的基础服务，比如像ID生成器这类服务。","user_name":"作者回复","comment_id":327200,"uid":"2819998","ip_address":"","utype":1,"ctime":1640001241,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"18819845968","product_id":100101301,"comment_content":"老师能在项目中顺带讲下接口幂等解决方案吗","like_count":4,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540249,"discussion_content":"这部分我倒是没有涉及，很多公司是提供了一种平台化的服务来做幂等性检查，接口参数里带有的幂等ID字段，方法先用这个ID调用幂等校验服务做一层检查。我这里所说的平台化服务，就是公司层面开发的供给各个业务方使用的基础服务，比如像ID生成器这类服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640001241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326912,"user_name":"来来","can_delete":false,"product_type":"c1","uid":2173616,"ip_address":"","ucode":"A8FD16CDFBC732","user_header":"https://static001.geekbang.org/account/avatar/00/21/2a/b0/f72ee91c.jpg","comment_is_top":false,"comment_ctime":1639746398,"is_pvip":false,"replies":[{"id":"118787","content":"这部分没有单独展开讲，优雅退出方案就是尽可能减少nacos instance下线和后台服务下线之间的时间差。这里要结合你的部署方案来看。现在大多公司都会选择k8s容器编排，新建POD然后等完全启动好之后关停老的POD，那么你可以在老的pod关闭之前设置一个hook，主动调用nacos服务的Delete方法做下线&#47;nacos&#47;v1&#47;ns&#47;instance，然后在执行关停POD的操作。","user_name":"作者回复","comment_id":326912,"uid":"2819998","ip_address":"","utype":1,"ctime":1639799865,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"18819615582","product_id":100101301,"comment_content":"老师有没有spring cloud优雅下线的方面的讲解","like_count":4,"discussions":[{"author":{"id":2850716,"avatar":"","nickname":"leven.chen","note":"","ucode":"89756C2B56B2D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539765,"discussion_content":"可以结合K8s 的preStop生命周期函数，在停机前通知注册中心注销对应的instance","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1639835053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539652,"discussion_content":"这部分没有单独展开讲，优雅退出方案就是尽可能减少nacos instance下线和后台服务下线之间的时间差。这里要结合你的部署方案来看。现在大多公司都会选择k8s容器编排，新建POD然后等完全启动好之后关停老的POD，那么你可以在老的pod关闭之前设置一个hook，主动调用nacos服务的Delete方法做下线/nacos/v1/ns/instance，然后在执行关停POD的操作。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639799866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326885,"user_name":"AYOU","can_delete":false,"product_type":"c1","uid":1048845,"ip_address":"","ucode":"BEF18C1DB4B621","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/0d/75b3cb10.jpg","comment_is_top":false,"comment_ctime":1639732827,"is_pvip":false,"replies":[{"id":"118752","content":"dubbo应用面没有想想的广，虽然阿里系在维护dubbo但在集团内部实际用的是另一套框架hsf，而且dubbo在国外应用也比较少，所以我用了更spring cloud原生的openfiegn。不过如果要替换dubbo是很平滑的，因为nacos本身和dubbo就可以无缝集成","user_name":"作者回复","comment_id":326885,"uid":"2819998","ip_address":"","utype":1,"ctime":1639744894,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"18819602011","product_id":100101301,"comment_content":"老师为啥不用dubbo做跨服务调用呢","like_count":4,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539531,"discussion_content":"dubbo应用面没有想想的广，虽然阿里系在维护dubbo但在集团内部实际用的是另一套框架hsf，而且dubbo在国外应用也比较少，所以我用了更spring cloud原生的openfiegn。不过如果要替换dubbo是很平滑的，因为nacos本身和dubbo就可以无缝集成","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1639744894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1060491,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2e/8b/32a8c5a0.jpg","nickname":"卡特","note":"","ucode":"FF63677089E701","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":539608,"discussion_content":"\ndubbo替换openfeign 其他组件比如网关，链路跟踪 ，容错处理需要重新适配吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639784750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":539531,"ip_address":""},"score":539608,"extra":""}]}]},{"had_liked":false,"id":326824,"user_name":"胡杨","can_delete":false,"product_type":"c1","uid":1018595,"ip_address":"","ucode":"F45F74239BE289","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/e3/11fd3b72.jpg","comment_is_top":false,"comment_ctime":1639710964,"is_pvip":true,"replies":[{"id":"118738","content":"ID生成器是个很复杂的平台类服务，高并发的ID分发要求分段批量获取+预加载模式，每个发号器预先领取一个号段，在即将消耗完之前从中心节点继续领号。而且对于订单类场景，还要设置特殊的号段分发规则，否则竞争对手可以根据ID来大致估算出你一天的订单量。对于某些金融行业要求的“非跳号”的ID分发就更加麻烦一些。<br><br>我们这个练手项目还不需要深入到发号器的业务逻辑，用DB incremental ID简单解决了","user_name":"作者回复","comment_id":326824,"uid":"2819998","ip_address":"","utype":1,"ctime":1639722064,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"18819580148","product_id":100101301,"comment_content":"能不能再加一个基础服务，就是ID生成器服务","like_count":4,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539456,"discussion_content":"ID生成器是个很复杂的平台类服务，高并发的ID分发要求分段批量获取+预加载模式，每个发号器预先领取一个号段，在即将消耗完之前从中心节点继续领号。而且对于订单类场景，还要设置特殊的号段分发规则，否则竞争对手可以根据ID来大致估算出你一天的订单量。对于某些金融行业要求的“非跳号”的ID分发就更加麻烦一些。\n\n我们这个练手项目还不需要深入到发号器的业务逻辑，用DB incremental ID简单解决了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639722064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328781,"user_name":"NARUTO","can_delete":false,"product_type":"c1","uid":1234420,"ip_address":"","ucode":"D4ECADEBAFD4FF","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/f4/ce6acfc0.jpg","comment_is_top":false,"comment_ctime":1640878665,"is_pvip":false,"replies":[{"id":"119802","content":"MQ大同小异，底层用metaq还是rabbitmq对上层应用来讲是无感知的，rabbitmq的应用更为广泛","user_name":"作者回复","comment_id":328781,"uid":"2819998","ip_address":"","utype":1,"ctime":1640928171,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"14525780553","product_id":100101301,"comment_content":"为什么不用RocketMQ讲解案例","like_count":3,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542994,"discussion_content":"MQ大同小异，底层用metaq还是rabbitmq对上层应用来讲是无感知的，rabbitmq的应用更为广泛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640928171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326897,"user_name":"leven.chen","can_delete":false,"product_type":"c1","uid":2850716,"ip_address":"","ucode":"89756C2B56B2D6","user_header":"","comment_is_top":false,"comment_ctime":1639736213,"is_pvip":false,"replies":[{"id":"118753","content":"如果是新项目的话，从0-1搭建，用最新的release版就可以了，如果是老项目就要考虑升级成本了，不同版本的升级成本差别很大，比如是G-&gt;H升版就相对很轻松，而H-&gt;I很多netflix组件已经被除名了，如果之前是用netflix组件库那就最好原地不动。","user_name":"作者回复","comment_id":326897,"uid":"2819998","ip_address":"","utype":1,"ctime":1639745114,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"14524638101","product_id":100101301,"comment_content":"请问老师 springcloud 生产环境选用哪个版本啊？有没有好的脚手架通知","like_count":3,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539532,"discussion_content":"如果是新项目的话，从0-1搭建，用最新的release版就可以了，如果是老项目就要考虑升级成本了，不同版本的升级成本差别很大，比如是G-&gt;H升版就相对很轻松，而H-&gt;I很多netflix组件已经被除名了，如果之前是用netflix组件库那就最好原地不动。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639745115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2850716,"avatar":"","nickname":"leven.chen","note":"","ucode":"89756C2B56B2D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":539767,"discussion_content":"因为项目周期和团队开发人力问题，感觉从头开始搭建基础服务开发工作量有点大，有没有老师之前用过比较好的脚手架工程推荐？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639835175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":539532,"ip_address":""},"score":539767,"extra":""}]}]},{"had_liked":false,"id":328329,"user_name":"~","can_delete":false,"product_type":"c1","uid":2495621,"ip_address":"","ucode":"BE5E3BD6EE3665","user_header":"https://static001.geekbang.org/account/avatar/00/26/14/85/73e55be5.jpg","comment_is_top":false,"comment_ctime":1640671885,"is_pvip":false,"replies":[{"id":"119578","content":"哦呦，这是遇到同行了呀，时过境迁，不知道ump现在还是不是ZH在带，又是否还在XX、YZ他们的共享事业部下面。往事如过眼云烟，那些痛的记忆，落在春的泥土里。什么alsc-ump，马什么梅？我已经忘掉过去，不在那个圈子里染味儿了。<br><br>同学，别看咱只是实习生，别闷头写代码，有空也抬头跟主管抽几根烟，吃几顿饭。带坏小孩子（逃~）","user_name":"作者回复","comment_id":328329,"uid":"2819998","ip_address":"","utype":1,"ctime":1640674150,"user_name_real":"作者"}],"discussion_count":2,"race_medal":0,"score":"10230606477","product_id":100101301,"comment_content":"老师，我看到 ump 这三个字母 DNA 都动了，alsc-ump 您有参与构建吗？小组里天天准备分享 ump 的内容，我还是实习生，感觉看不懂。。。。","like_count":2,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542169,"discussion_content":"哦呦，这是遇到同行了呀，时过境迁，不知道ump现在还是不是ZH在带，又是否还在XX、YZ他们的共享事业部下面。往事如过眼云烟，那些痛的记忆，落在春的泥土里。什么alsc-ump，马什么梅？我已经忘掉过去，不在那个圈子里染味儿了。\n\n同学，别看咱只是实习生，别闷头写代码，有空也抬头跟主管抽几根烟，吃几顿饭。带坏小孩子（逃~）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640674151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2495621,"avatar":"https://static001.geekbang.org/account/avatar/00/26/14/85/73e55be5.jpg","nickname":"~","note":"","ucode":"BE5E3BD6EE3665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543056,"discussion_content":"谢谢老师，把代码 review 了一遍，很有感受。没想到学习 spring cloud 的同时还能把实习的东西回顾一遍，太感谢了~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640941281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327374,"user_name":"派崔克·韩","can_delete":false,"product_type":"c1","uid":1019410,"ip_address":"","ucode":"1D18D6497B2BD7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/12/d11d268b.jpg","comment_is_top":false,"comment_ctime":1640088120,"is_pvip":true,"replies":[{"id":"119146","content":"后面出完之后我在用加餐聊聊用k8s做弹性","user_name":"作者回复","comment_id":327374,"uid":"2819998","ip_address":"","utype":1,"ctime":1640089506,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"10230022712","product_id":100101301,"comment_content":"老师有机会可否讲一下autoscaling，现在公司还停留在手动启动service的阶段，谢谢<br>","like_count":2,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540587,"discussion_content":"后面出完之后我在用加餐聊聊用k8s做弹性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640089506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326888,"user_name":"森林","can_delete":false,"product_type":"c1","uid":1121185,"ip_address":"","ucode":"087EBD3FA738A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/a1/efcf7306.jpg","comment_is_top":false,"comment_ctime":1639733591,"is_pvip":false,"replies":[{"id":"118755","content":"是的，使用kubernetes做容器编排，不过限于篇幅的原因，这节专栏对运维部分没有重点涉及。看看如果类似需求的声音比较大的话，我后期可以写加餐介绍下k8s下的弹性方案","user_name":"作者回复","comment_id":326888,"uid":"2819998","ip_address":"","utype":1,"ctime":1639745347,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"10229668183","product_id":100101301,"comment_content":"老师能对比下springcloud方案和kubernetes方案吗？感觉就算用springcloud组件实现微服务，但微服务大规模部署运维还得是k8s。","like_count":2,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539534,"discussion_content":"是的，使用kubernetes做容器编排，不过限于篇幅的原因，这节专栏对运维部分没有重点涉及。看看如果类似需求的声音比较大的话，我后期可以写加餐介绍下k8s下的弹性方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639745347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004349,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/3d/1189e48a.jpg","nickname":"微思","note":"","ucode":"853C48AA183A7B","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541570,"discussion_content":"群众的呼声很高~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640446917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346078,"user_name":"迈向架构师","can_delete":false,"product_type":"c1","uid":1637228,"ip_address":"","ucode":"2476594CF76001","user_header":"https://static001.geekbang.org/account/avatar/00/18/fb/6c/12fdc372.jpg","comment_is_top":false,"comment_ctime":1652804736,"is_pvip":true,"replies":[{"id":"126723","content":"后面的金丝雀例子只是用来引导负载均衡部分的学习，真正做企业级负载均衡的话要依赖公司内部的灰度方案","user_name":"作者回复","comment_id":346078,"uid":"2819998","ip_address":"","utype":1,"ctime":1654236759,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5947772032","product_id":100101301,"comment_content":"我在想 ，这个项目到时灰度发布是整合到负载均衡那边？<br><br>有些方案是直接从网关那边做这些功能的，会不会耦合低一些呢？<br>","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574657,"discussion_content":"后面的金丝雀例子只是用来引导负载均衡部分的学习，真正做企业级负载均衡的话要依赖公司内部的灰度方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654236760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336773,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1646361829,"is_pvip":false,"replies":[{"id":"123090","content":"开头不得整点山珍海味，往后读，就是大排档了","user_name":"作者回复","comment_id":336773,"uid":"2819998","ip_address":"","utype":1,"ctime":1646405100,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5941329125","product_id":100101301,"comment_content":"好家伙，没开始学呢，这名词组件就整出来不少，有点消化不良","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554496,"discussion_content":"开头不得整点山珍海味，往后读，就是大排档了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646405100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333366,"user_name":"bye_bug","can_delete":false,"product_type":"c1","uid":2729490,"ip_address":"","ucode":"0DB208C7F8C29C","user_header":"https://static001.geekbang.org/account/avatar/00/29/a6/12/aa5ec251.jpg","comment_is_top":false,"comment_ctime":1644311756,"is_pvip":false,"replies":[{"id":"122043","content":"这个笔记流十分优秀啊！","user_name":"作者回复","comment_id":333366,"uid":"2819998","ip_address":"","utype":1,"ctime":1644748634,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5939279052","product_id":100101301,"comment_content":"<br><br>#笔记<br><br>实战项目是一个“优惠券计算系统”<br><br>项目组成：<br>优惠券模板服务 + 优惠券计算服务 + 用户服务 + 基础平台服务，其中“用户服务”通过前两个服务的底层计算完成实际功能，“基础平台服务”为微服务相关服务。<br><br>项目实施步骤：<br>1. 先使用 Spring Boot 实现一个单体版本系统，完成前三个服务，其中服务调用在本地完成。<br>2. 微服务拆分 - 基础部分：“服务注册”，“负载均衡”，“服务调用”。实现基本的“服务间通信”。<br>3. 微服务拆分 - 进阶部分：“配置中心”，“服务容错”（限流等），“链路追踪”（ELK，方便系统排错）。实现进阶的“服务治理和异常排查”<br>4. 微服务拆分 - 高级部分：“统一网关”，“消息队列”，“分布式事务”。实现更高级的“服务能力建设和管理”","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550817,"discussion_content":"这个笔记流十分优秀啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644748635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330105,"user_name":"会飞的鱼","can_delete":false,"product_type":"c1","uid":2220587,"ip_address":"","ucode":"9498D63BA769F3","user_header":"https://static001.geekbang.org/account/avatar/00/21/e2/2b/5eab1490.jpg","comment_is_top":false,"comment_ctime":1641798423,"is_pvip":false,"replies":[{"id":"120282","content":"分布式session很多大厂也在用redis来存登录态信息，不用标准框架自己手撸一个也不难。第三方登录基本都是用oauth2，spring cloud也提供了oauth2的依赖包，这部分我考虑后期做个扩展阅读来讲一下","user_name":"作者回复","comment_id":330105,"uid":"2819998","ip_address":"","utype":1,"ctime":1641820829,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5936765719","product_id":100101301,"comment_content":"老师，可以讲下分布式Session、第三方登录+支付相关的内容吗","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545080,"discussion_content":"分布式session很多大厂也在用redis来存登录态信息，不用标准框架自己手撸一个也不难。第三方登录基本都是用oauth2，spring cloud也提供了oauth2的依赖包，这部分我考虑后期做个扩展阅读来讲一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641820829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329534,"user_name":"charmsongo","can_delete":false,"product_type":"c1","uid":1609051,"ip_address":"","ucode":"4FBEE716E93A1A","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","comment_is_top":false,"comment_ctime":1641390372,"is_pvip":false,"replies":[{"id":"120021","content":"批量插入，如果要追求快，那么用原生的jdbc add batch就可以，每个不同DB厂商的batch包含的记录条数是不同的，以前在淘系业务里我做过批量导入到处可以达到每秒数万记录的速率","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641400322,"ip_address":"","comment_id":329534,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5936357668","product_id":100101301,"comment_content":"大数据量的批量插入和批量更新如何更好的处理？","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544131,"discussion_content":"批量插入，如果要追求快，那么用原生的jdbc add batch就可以，每个不同DB厂商的batch包含的记录条数是不同的，以前在淘系业务里我做过批量导入到处可以达到每秒数万记录的速率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641400322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327489,"user_name":"PueC","can_delete":false,"product_type":"c1","uid":1400170,"ip_address":"","ucode":"6CE6B22DA69416","user_header":"https://static001.geekbang.org/account/avatar/00/15/5d/6a/83f7eb7f.jpg","comment_is_top":false,"comment_ctime":1640145782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5935113078","product_id":100101301,"comment_content":"消息总线","like_count":1},{"had_liked":false,"id":326979,"user_name":"Geek_e306aa","can_delete":false,"product_type":"c1","uid":2697821,"ip_address":"","ucode":"DEDA4E86097B36","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ULSZxjHNT5ZMormTYmqSZvoCbKd0q6oN8V78QaLdzqkqs1AXMShysNczsOOVJrblE4dxhBuibDvkgIlzVAw2qeQ/132","comment_is_top":false,"comment_ctime":1639812714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5934780010","product_id":100101301,"comment_content":"希望能够了解一下集群的搭建，譬如说mysql,redis等服务的集群搭建，k8s技术等","like_count":1},{"had_liked":false,"id":326883,"user_name":"杨灿光","can_delete":false,"product_type":"c1","uid":2868167,"ip_address":"","ucode":"C834784F7EE9B1","user_header":"https://static001.geekbang.org/account/avatar/00/2b/c3/c7/625d3415.jpg","comment_is_top":false,"comment_ctime":1639731697,"is_pvip":false,"replies":[{"id":"118751","content":"没问题，这里是使用stream组件对接的rabbit的各种玩法，包括requeue重试，死信队列，消息降级，延迟消息这些应用都有会落地","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1639744661,"ip_address":"","comment_id":326883,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5934698993","product_id":100101301,"comment_content":"消息队列相关知识 我看这里只默认了RabbitMQ 类似的介绍或者使用会遇到的一些问题希望老师能稍微介绍一些啦 谢谢","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539530,"discussion_content":"没问题，这里是使用stream组件对接的rabbit的各种玩法，包括requeue重试，死信队列，消息降级，延迟消息这些应用都有会落地","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639744661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1060491,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2e/8b/32a8c5a0.jpg","nickname":"卡特","note":"","ucode":"FF63677089E701","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":539609,"discussion_content":"私有化部署场景，想尽量减少中间价数量，Redis最新版本支持消息队列，要是能替换rabbitmq就更好了，Redis基本大型项目都必备","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1639784932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":539530,"ip_address":""},"score":539609,"extra":""}]}]},{"had_liked":false,"id":326812,"user_name":"201","can_delete":false,"product_type":"c1","uid":1048264,"ip_address":"","ucode":"C49ABFCDBDB93C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c8/715ce68f.jpg","comment_is_top":false,"comment_ctime":1639708005,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5934675301","product_id":100101301,"comment_content":"老师加油更新。","like_count":1},{"had_liked":false,"id":326804,"user_name":"猿人谷","can_delete":false,"product_type":"c1","uid":1100149,"ip_address":"","ucode":"85106C7FB14C43","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/75/62ce2d69.jpg","comment_is_top":false,"comment_ctime":1639706488,"is_pvip":true,"replies":[{"id":"118740","content":"订单金额试算完全正确，就是在下单前告诉你用哪个优惠券能省最多钱。另一个其实是订单计算，就是直接核销优惠券参与最后的下单了","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1639722183,"ip_address":"","comment_id":326804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5934673784","product_id":100101301,"comment_content":"老师好，用户服务里说的订单价格试算和订单金额试算有什么区别？<br>我的理解：<br>- 订单价格试算：就是凑单试算满足可使用优惠券（如还差20元就可以使用优惠券等场景）<br>- 订单金额试算：就是多张优惠券（或多种优惠条件）时试算使用哪种优惠券最划算<br><br>不知道理解是否正确，望老师指正。","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539458,"discussion_content":"订单金额试算完全正确，就是在下单前告诉你用哪个优惠券能省最多钱。另一个其实是订单计算，就是直接核销优惠券参与最后的下单了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639722183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326803,"user_name":"被圣光照黑了","can_delete":false,"product_type":"c1","uid":1400926,"ip_address":"","ucode":"60B4F4F67700E1","user_header":"https://static001.geekbang.org/account/avatar/00/15/60/5e/b9624166.jpg","comment_is_top":false,"comment_ctime":1639705540,"is_pvip":false,"replies":[{"id":"118739","content":"后面会讲到sentinel如何配置限流规则，对sentinel做定制实现基于来源的限流，以及对dashboard二次开发实现规则持久化","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1639722107,"ip_address":"","comment_id":326803,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5934672836","product_id":100101301,"comment_content":"我想深入一点了解一下限流降级熔断","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539457,"discussion_content":"后面会讲到sentinel如何配置限流规则，对sentinel做定制实现基于来源的限流，以及对dashboard二次开发实现规则持久化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639722108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353547,"user_name":"一只奔跑的猪","can_delete":false,"product_type":"c1","uid":2727404,"ip_address":"上海","ucode":"33FA830F525E0B","user_header":"https://static001.geekbang.org/account/avatar/00/29/9d/ec/06a31392.jpg","comment_is_top":false,"comment_ctime":1659535684,"is_pvip":false,"replies":[{"id":"128733","content":"没有sprint经验的话确实会比较吃力，那么同学先放下课程，我给你讲几个简单教程来学习一下，熟悉熟悉spring做了啥事儿<br><br>1）最好的学习网站内往往是开源项目的主页，那就是https:&#47;&#47;spring.io&#47; <br>2）Spring官网大致了解下spring的一些功能模块都做了什么：https:&#47;&#47;spring.io&#47;projects&#47;spring-framework<br>3）通过spring官方的quick start来一个小demo快速体验spring开发<br><br>有了上面这几步，基本对spring有了个简单认识，接着尝试自己安装个mysql，通过spring-data试试怎么连DB做增删改查（可以发挥自学能力网上找点sample）<br><br>到这里基本上spring的搬砖工作也都体验好了，下载个maven，尝试用maven的方式编译项目，理解mvn生命周期。<br><br>有了这些基础，再来学习课程就会顺利不少","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1659943095,"ip_address":"上海","comment_id":353547,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659535684","product_id":100101301,"comment_content":"姚老师，完全没有spring的经验，看这个感觉好吃力，请问我还需要看吗","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583188,"discussion_content":"没有sprint经验的话确实会比较吃力，那么同学先放下课程，我给你讲几个简单教程来学习一下，熟悉熟悉spring做了啥事儿\n\n1）最好的学习网站内往往是开源项目的主页，那就是https://spring.io/ \n2）Spring官网大致了解下spring的一些功能模块都做了什么：https://spring.io/projects/spring-framework\n3）通过spring官方的quick start来一个小demo快速体验spring开发\n\n有了上面这几步，基本对spring有了个简单认识，接着尝试自己安装个mysql，通过spring-data试试怎么连DB做增删改查（可以发挥自学能力网上找点sample）\n\n到这里基本上spring的搬砖工作也都体验好了，下载个maven，尝试用maven的方式编译项目，理解mvn生命周期。\n\n有了这些基础，再来学习课程就会顺利不少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659943095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329542,"user_name":"evis","can_delete":false,"product_type":"c1","uid":2031972,"ip_address":"","ucode":"6AF7AB5D7907E9","user_header":"https://static001.geekbang.org/account/avatar/00/1f/01/64/61477e61.jpg","comment_is_top":false,"comment_ctime":1641393341,"is_pvip":false,"replies":[{"id":"120020","content":"在后面的课文中有源码的地址，会提供每阶段的全部配套的程序","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641400120,"ip_address":"","comment_id":329542,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641393341","product_id":100101301,"comment_content":"老师，第一阶段单体应用，第二阶段改造微服务，这两个阶段的过程在哪跟着做呢？  只有这篇文章的文字版吗？","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544130,"discussion_content":"在后面的课文中有源码的地址，会提供每阶段的全部配套的程序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641400120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328209,"user_name":"蜜汁炒酸奶","can_delete":false,"product_type":"c1","uid":1292556,"ip_address":"","ucode":"2A7729D4E5568F","user_header":"https://static001.geekbang.org/account/avatar/00/13/b9/0c/f43cdde4.jpg","comment_is_top":false,"comment_ctime":1640605893,"is_pvip":false,"replies":[{"id":"119503","content":"会有很多很多spring cloud的内容，serverless木有放进来","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640613656,"ip_address":"","comment_id":328209,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1640605893","product_id":100101301,"comment_content":"老师，不知后期会有springcloud与serverless之间的相关的内容么","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541955,"discussion_content":"会有很多很多spring cloud的内容，serverless木有放进来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640613656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1292556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/b9/0c/f43cdde4.jpg","nickname":"蜜汁炒酸奶","note":"","ucode":"2A7729D4E5568F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":542279,"discussion_content":"好的，谢谢老师。我好奇他俩在以后的关系，所以问了一下老师这块问题。最近也看了几篇在serverless部署springcloud的文章，看他们目前是SD、CB、LB等这些平台侧的功能交给serverless，只留下业务侧，有种直接退化为一个个springboot应用，看不到与springcloud本身有什么特别的关系了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640699780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":541955,"ip_address":""},"score":542279,"extra":""}]}]},{"had_liked":false,"id":327078,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1639905527,"is_pvip":true,"replies":[{"id":"119149","content":"要像追女神一样，穷追猛打","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640089967,"ip_address":"","comment_id":327078,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639905527","product_id":100101301,"comment_content":"好,准备追下去了","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540590,"discussion_content":"要像追女神一样，穷追猛打","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1640089968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326935,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1639775030,"is_pvip":false,"replies":[{"id":"118839","content":"后面搭建项目的时候就会放出来了，可以先睹为快<br><br>https:&#47;&#47;gitee.com&#47;banxian-yao&#47;geekbang-coupon-center","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1639822899,"ip_address":"","comment_id":326935,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639775030","product_id":100101301,"comment_content":"老师，项目源代码，哪里可以获取到呢？","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539738,"discussion_content":"后面搭建项目的时候就会放出来了，可以先睹为快\n\nhttps://gitee.com/banxian-yao/geekbang-coupon-center","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639822899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}