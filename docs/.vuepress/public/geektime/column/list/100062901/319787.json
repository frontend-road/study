{"id":319787,"title":"21 | 高性能设计，一切都围绕着契约精神","content":"<p>你好，我是乔新亮。这一讲，我们来聊聊如何实现架构的高性能设计。</p><p>前面我们讲过，产品思维有两个核心关键词：“契约精神”和“洞察人性”。其实高性能设计，也和契约精神是密切相关的。我将其总结为：高性能设计，一切围绕着契约精神。</p><p>你可能会想，高性能设计不就是可以支撑大流量、高并发的架构设计吗？和契约精神又有什么关系？</p><p>其实关系很大。所谓的高性能，实际上，是与业务强相关的。比如，对于一台网络游戏服务器来说，可以支撑 400 名玩家同时在线，就算高性能；对于一台流媒体服务器来说，可以支撑 10,000 用户同时在线观看，就算高性能。</p><p>当然，数据可能不准确，但逻辑大体如此。在实际的业务场景中，还会有许多其他技术指标被引入。比如游戏需要关注连接稳定性、视频需要关注延时，等等。</p><p>明确了性能和业务的关系，下面我们就来聊聊，如何进行高性能设计，也借此加深对契约精神的认知和理解。</p><h2>契约精神是高性能架构设计的“拦路虎”</h2><p>首先，我们要清楚，高性能设计可以大体拆解为两大步骤：</p><ol>\n<li>清晰描述、定义性能目标；</li>\n<li>设计并实现这个目标。</li>\n</ol><p>而高性能架构的设计目标，是通过三类指标来具体定义的，分别是：</p><ol>\n<li>系统响应时间，一般指服务/交易处理的时间，也包括网络响应时间；</li>\n<li>系统吞吐量，一般指系统的每秒交易量，通常需要结合并发量共同描述；</li>\n<li>系统容量，通常代表系统的可用资源数量，包括硬盘容量、网络带宽等。</li>\n</ol><!-- [[[read_end]]] --><p>但要注意：虽然我们有三类高性能指标，但彼此不能孤立地看待，否则就会出现问题。比如，在定义系统响应时间目标时，如果不与系统吞吐量关联起来，就会变得缺乏实践意义 —— 一旦流量的压力高峰到来，系统往往就不遂人愿了。</p><p>这意味着，我们要学会识别架构设计中的组件（或服务），首先弄清哪些组件需要明确高性能指标，再针对性地用以上三个指标做清晰定义。</p><p>除此之外，对于系统响应时间，我们还有一个更直观的监控指标，叫做 Top 百分数 （Top Percentile），简称 TP。比如， TP 90 = 2s，意思是，90% 的请求的响应时间都在 2s  内；那么  TP  99 = 2s 的意思就是 99%  的请求的响应时间都在  2s 内；我们一般说的  RT  =  2s，指的是平均响应时间，可以作为参考，但实际意义可能并不大。我个人一般会重点看  TP  90  和  TP  99 的数据。</p><p>当我们明确了  TP  90  或者  TP  99 这一有关系统响应时间的指标时，一个交付给用户的“契约”就出现了。守好诸多类似的契约，也就是保证了高性能设计。但学习需要适当地进行延展思考，比如此时，我们应该多问自己一句：这个契约意味着什么？</p><p>对于没有经验的程序员或架构师来说，这里其实存在一个隐含的假设，某种意义上，也算是一种侥幸心理：如果该系统在业务流量低峰场景下，满足了响应时间等性能指标，也就意味着，该系统在任何场景下，都能满足这些指标。</p><p>你可能会觉得有点绕， 那我换个说法来描述刚刚签订的高性能“契约”：本系统、组件、服务承诺在任何情况、任何资源、任何压力高峰下，都保证  TP  90  =  2s 。</p><p>是不是立刻就有了不一样的感觉？好像契约发生了变化，光是读出来，就让人心里一抖。</p><p>其实到此时，还谈不上契约是否发生了变化，因为打从一开始，这个契约就是不明确、不清晰、不具体的。</p><p>注意，这里还没有谈架构设计和研发能力，问题就已经出现了。很多时候，我们会被工作中出现的一些实际问题所困扰，其根源往往不在于相关责任人缺乏设计能力，而在于签订的“契约”并不明确。团队不可能实现和保卫一个“空中花园”。</p><p>所以，我总说，高性能设计，一切围绕着契约精神。所以接下来，我们的内容都将围绕着“如何将契约描述清楚”这件事来展开。</p><h2>有上限的“契约”才能交付</h2><p>我曾经培养过许多架构师。一开始在做高性能设计时，他们常常会这样描述给用户的“契约”：</p><p>“该架构最高支持 200 万并发流量，TP 90 = 2s 。”</p><p>在不考虑业务需求的情况下，这个契约看似是没问题的。这意味着：对于第 1 名连接服务器的用户来说，TP 90 = 2s ；但对于第 300 万名连接服务器的用户来说，契约又是什么呢？答案是，没有，或者说比较模糊。</p><p><strong>如果目标不清晰，隐患就埋下了。高性能设计非常看重系统响应时间的一致性，尤其是在不同的服务阶段，并发量和吞吐量发生变化的时候。</strong></p><p>对于管理者或架构师而言，理想的契约应该是“保证设计流量内的用户 TP 90 = 2s，超出并发限制的用户，则暂时不在契约承诺的范围内。”。</p><p>这就要求我们通过四大步骤去思考所谓高性能架构的设计问题：</p><p>第一步，当服务器不超过 200 万并发用户时，TP 90 = 2s 。</p><p>第二步，当连接服务器的并发用户数量超过 200 万，达到 250 万时，保证有 200 万用户的 TP 90 = 2s ，拒绝其他用户的连接请求。</p><p>第三步，为设计容量外的用户提供服务器排队机制，并附带具体、明确的系统提示。</p><p>第四步，3 分钟内完成扩容，保证并发用户数量小于等于 250 万时，任何在线用户的 TP 90 = 2s。</p><p>其实，这样才构成了一个可以履行的契约：无论流量波动如何，该架构始终支持 200 万用户的 TP 90 = 2s；高峰时期，其他用户会被拒绝访问或进行排队，但系统能在三分钟内完成扩容，支持 250 万并发在线用户，并且保证其中任何一个用户的 TP 90 = 2s  。</p><p>在某种程度上，这也是对业务诉求的精确表达，对于业务发展来说至关重要。很多同学设计的架构和契约，压根没有控制上限。他们想当然地认为，流量不可能出现太大的变化或波动。对于用户来说，这无异于一张“空头支票”。</p><p>所以说，要做高性能设计，一定要明确目标，并交付给用户；没有清晰的目标，也就没有针对性的设计，怎么能实现高性能的架构呢？</p><p>目标清晰后，我们再来看看，高性能架构如何设计并落地。</p><h2>实现高性能架构的关键技术点</h2><p>落地也不难，有三项工作最为关键，分别是：</p><ol>\n<li>为架构做好“保护系统”；</li>\n<li>使架构具备扩容能力；</li>\n<li>提升系统各组件处理能力。</li>\n</ol><p><strong>保护系统，是为应对容量规划外的过载而设计的，通过流量控制来具体实现。</strong></p><p>所谓流量控制，就是当实际并发压力，超过设计性能的时候，人为阻断服务器连接，告知用户需要排队或“稍后再试”。</p><p>经常玩游戏的同学可能知道，对于网络游戏来说，流量控制是个基础设计，基本上所有的服务器都有“排队机制”。</p><p>流量控制有两种具体的实践，一种是面向连接数做控制，一种是面向用户数做控制。前者让用户在不断尝试连接时，有一定成功的可能；后者则保证用户对系统的期望是一致的 —— 要么可以登录、要么不能登录。具体应该选择哪种方式，取决于业务的实际诉求。</p><p><strong>而对于扩容能力来说，一般要包括储备额外的计算资源和具备快速弹性扩容能力。</strong></p><p>你可能会说，既然已经有计算资源了，为什么不提前进行扩容呢？</p><p>工作经验比较丰富的同学可能会知道其中的“隐情”：一般来说，该做的系统扩容，通常很早就完成了，架构设计真正缺乏的是应急手段。毕竟，你不能“不分青红皂白”，将每个系统的应急扩容都提前做好。一个经营稳健的企业，是不会允许这样的开销出现的。</p><p>另一个关键要素在于扩容速度。扩容工作是需要一小时、一分钟，还是一秒钟完成，其差别非常之大。“天下武功，唯快不破”，就算架构设计做得不好，如果响应够快，很多情况下，也是能解决问题的。</p><p>无论是利用公有云扩容，还是私有云扩容，目标都应该是一致的。想象一下这样的场景：</p><p>双十一来了，你通过监控平台，看到在线用户数量快速增长，很快突破了 200 万，流量控制机制开始生效，新用户进入排队序列。你考虑了 3 秒钟，然后做了一个决定：系统需要扩容。于是，你轻轻地输入一个数字，按下回车。3 秒钟后，排队序列消失了。你对旁边的同学说，继续监控吧！然后悠闲地端起茶杯，离开了座位。</p><p>这将是一种多么美妙的工作状态？更棒的是，以上场景完全有可能实现。</p><p>至此，我们聊过了契约，也聊过了应急处理，也就意味着，我们把握住了高性能设计的“头”和“尾”。最后，我们再简单谈一下“中间”部分，也就是对系统各组件处理能力的提升。</p><p>在高性能设计中，对于每个组件/服务都要确定目标，进行设计，然后进行评审和测试，确保满足性能需求。对于架构负责人来说，性能设计一定要尽早开始，具体工作内容包括：</p><ul>\n<li>需求早期收集</li>\n<li>容量分析</li>\n<li>估算与建模</li>\n<li>技术研究</li>\n<li>设计、开发、跟踪</li>\n<li>测试计划执行</li>\n<li>风险与绩效管理</li>\n<li>实时监控与容量管理</li>\n</ul><p>工作内容和流程可能有些多，但这更多属于标准化的研发管理流程，这里列出来仅供参考，实际执行的时候，需要参考具体的业务和企业情况做调整。</p><p><strong>在这中间，有一点需要额外注意，我们称之为“对系统资源的争抢问题”。</strong></p><p>对于一个组件或服务，并发压力增大，响应时间却没有变化，意味着在请求的处理过程中，没有发生对资源的争抢和排队。同理，当响应时间随着并发压力的增大而变长时，一般都意味着这些请求引起了对系统资源的争抢。</p><p><strong>对于无状态的服务，理论上可以通过集群扩容，无限增加系统的并发处理能力，简单、直接地解决问题；</strong></p><p><strong>但对于有状态的数据服务而言，比如缓存或数据访问，就要考虑资源争抢问题，并针对性地设计、处理</strong>。</p><p>所以，高性能架构在设计落地时，一个重要的任务，就是去发现那些可能出现资源争抢的模块，并一一进行隔离。</p><p>谈到“隔离”，在架构维度有两种方案，一种是在应用层进行隔离，也就是说，在业务功能层面就开始隔离；一种是基础软件层面进行隔离，比如与数据库相关的“读写分离”概念，就是在基础软件层面进行隔离。</p><p>对应到具体的实施方法上，有三种主要的“隔离”技巧，你可以多做了解：</p><ol>\n<li>缓存机制，适用于部分场景，可以解决数据库资源的争抢问题；</li>\n<li>EDA 架构，适用于处理时间较长的代码逻辑，需要提前区分哪些模块可以做同步处理，哪些模块可以做异步处理；</li>\n<li>提前进行预处理，以空间换时间，这也是一种卓有成效的处理手段。</li>\n</ol><p>当然了，方法还有很多，听完这节课后，你可以单独再做了解，并将了解到的方法，在评论区分享给大家。</p><p>做好隔离后，我们也要注意提升架构的可扩展性，具体方法可以参考<a href=\"https://time.geekbang.org/column/article/317135\">《架构设计，专业分工和协作精神的体现》</a>，这里不再重复。</p><p>至此，关于高性能设计的三个最重要的步骤就讲完了，我们总结一下，分别是：</p><ol>\n<li>为架构做好“保护系统”：做好系统的流量控制；</li>\n<li>使架构具备扩容能力：储备额外的计算资源，提升弹性扩容的速度；</li>\n<li>提升系统各组件处理能力：识别高并发情境中的资源争抢情况，同时注意保留架构的可扩展性。</li>\n</ol><p>最后，我们也要对测试工作保持关注。可能你在 PRE  环境做过压测，但后来发现，实际的业务复杂度是远远超过想象的。</p><p>针对这种问题，行业内的解决方案更偏向“全链路生产压测”，说白了，就是在生产环境准备数据、进行压测。如果一个系统通过了全链路压测，那就可以基本确认没有性能问题了。</p><h2>结语</h2><p>从我的角度来看，<strong>技术行业发展到今天，基本不存在太多的技术挑战了。</strong></p><p>如果你能将业务问题抽象为一个技术问题，那么不管是寻求同事的帮助，还是 Google、看书、到知识平台付费学习，都能解决你的疑惑。</p><p>所以，在理清高性能架构设计的整体思路后，困惑、焦虑，应该从你的认知中消失。具体到数据库设计、缓存设计、队列使用等技术细节，我认为都不是问题。关键之处，是要守住契约，按照我们今天所讲的三大步骤尝试落地。</p><p>过去的几年间，我曾在多个企业内建设高性能的 IT 系统架构，很好地服务了用户，使用的就是我们今天所讲的各个方法和思维框架。我个人感觉，过程也是相对轻松的。</p><p>需要注意的是，如果时间充足且落实到位，系统确实不会出现高性能问题。可是实际情况是，团队没有时间做完整的高性能设计，没有预算做全链路压测，所以埋下了隐患。</p><p>这时，我建议相关负责人要去识别最关键的服务，针对性地进行设计、测试，确保关键服务没有问题，并且，为非关键服务提供降级和熔断处理的开关。</p><p>另外一个比较常见的情况，是企业决策层将高性能的设计问题和技术问题混为一谈：看似是技术能力太过欠缺，其实是契约和设计没有做好。<strong>任何复杂问题都可以被拆解为简单问题，只要拆解得足够细致。一定要牢记这一点，这种思维能力是技术人的安身立命之本。</strong></p><p>当然，如果你有问题或想交流的内容，也不要犹豫，立刻在评论区写出来，我会认真回复。</p><p>我们下一讲再见。</p>","comments":[{"had_liked":false,"id":267879,"user_name":"如水","can_delete":false,"product_type":"c1","uid":1579110,"ip_address":"","ucode":"9747078B31B889","user_header":"https://static001.geekbang.org/account/avatar/00/18/18/66/53ce5d28.jpg","comment_is_top":false,"comment_ctime":1607960521,"is_pvip":true,"replies":[{"id":"97333","content":"你好，如水<br>谢谢分享、讨论。我们一起讨论：<br>1  中国操作系统的问题是失去的窗口期，造一个好用的操作系统其实并不难，但难得是周边的生态。所以这个问题目前还真不是技术问题。<br>2 延申出来看，其实比如登月，人工智能，自动驾驶等等，还是有技术挑战的<br>3  从第二点来看，可以区分为把这个技术作为一个产品，还是使用产品；比如我们是使用云计算产品，还是研发云计算产品，做一个好的云计算产品还有很大的挑战，但是使用一个云计算产品，没有什么挑战了<br>4  我们的上下文，中国大部分公司还是commerce公司，就是商业公司，其实更多的是使用技术，从这点上来说，基本没有挑战，很多的所谓技术挑战只是在重复造轮子。<br>5  如果觉得自己技术牛，最好的证明就是创业去开一家公司，把自己的技术做成产品卖出去；否则就是在使用技术，那么能不能用好才是衡量的标准<br>6  但是，放在不同的公司，有可能因为人员能力问题，这些可能还是技术挑战，这是有可能的。我这里说的是趋势，有上下文，就如同做技术的，一定要有context。<br><br>谢谢分享，无私的分享你的观点，一起讨论，共同进步，感谢。","user_name":"作者回复","comment_id":267879,"uid":"1151524","ip_address":"","utype":1,"ctime":1608079010,"user_name_real":"乔新亮"}],"discussion_count":4,"race_medal":0,"score":"173406652361","product_id":100062901,"comment_content":"技术行业发展到今天，基本不存在太多的技术挑战了。这句话我不赞同，我还没看到中国有好用的操作系统，这个技术没挑战吗？","like_count":41,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511771,"discussion_content":"你好，如水\n谢谢分享、讨论。我们一起讨论：\n1  中国操作系统的问题是失去的窗口期，造一个好用的操作系统其实并不难，但难得是周边的生态。所以这个问题目前还真不是技术问题。\n2 延申出来看，其实比如登月，人工智能，自动驾驶等等，还是有技术挑战的\n3  从第二点来看，可以区分为把这个技术作为一个产品，还是使用产品；比如我们是使用云计算产品，还是研发云计算产品，做一个好的云计算产品还有很大的挑战，但是使用一个云计算产品，没有什么挑战了\n4  我们的上下文，中国大部分公司还是commerce公司，就是商业公司，其实更多的是使用技术，从这点上来说，基本没有挑战，很多的所谓技术挑战只是在重复造轮子。\n5  如果觉得自己技术牛，最好的证明就是创业去开一家公司，把自己的技术做成产品卖出去；否则就是在使用技术，那么能不能用好才是衡量的标准\n6  但是，放在不同的公司，有可能因为人员能力问题，这些可能还是技术挑战，这是有可能的。我这里说的是趋势，有上下文，就如同做技术的，一定要有context。\n\n谢谢分享，无私的分享你的观点，一起讨论，共同进步，感谢。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1608079010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337714,"discussion_content":"对于乔老师说的第五条，我很赞同的。我们部门内部在界定一个好的产品的时候，标准就是自己出去开公司，我们手上研发的产品能不能活下来。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609054146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1001225,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/09/316b0aa1.jpg","nickname":"张浩","note":"","ucode":"DBEAFFB7660813","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384679,"discussion_content":"很赞同乔老师说的，对目前自己来说，把技术用好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626698562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2143900,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI45zO9GOMquhD0ia1wTBSwtJ1juPcpFTSrOGicGW3jf6JclaudauHicN8OpADArQKL8zPtDicEx4aicgA/132","nickname":"逆风一战九","note":"","ucode":"83127627F6F37C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347424,"discussion_content":"第四五两条更加认同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612229886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267373,"user_name":"李克光","can_delete":false,"product_type":"c1","uid":1398998,"ip_address":"","ucode":"3F0BD2CC59924F","user_header":"https://static001.geekbang.org/account/avatar/00/15/58/d6/4050cbe5.jpg","comment_is_top":false,"comment_ctime":1607698159,"is_pvip":false,"replies":[{"id":"97212","content":"你好，李克光<br>谢谢分享，这种领悟和分享特别好，还帮助了别人。","user_name":"作者回复","comment_id":267373,"uid":"1151524","ip_address":"","utype":1,"ctime":1607868812,"user_name_real":"乔新亮"}],"discussion_count":2,"race_medal":0,"score":"35967436527","product_id":100062901,"comment_content":"&quot;任何复杂问题都可以被拆解为简单问题，只要拆解得足够细致。一定要牢记这一点，这种思维能力是技术人的安身立命之本。&quot;   --乔老师很好诠释了《 道德经》中 “天下难事，必作于易；天下大事，必作于细。是以圣人终不为大，故能成其大&quot; 。<br>非常感谢乔老师的技术传道，让我贯通了很多思路，收获良多。","like_count":9,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511620,"discussion_content":"你好，李克光\n谢谢分享，这种领悟和分享特别好，还帮助了别人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607868812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592845,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4e/0d/17eeaf8e.jpg","nickname":"duxiaohe","note":"","ucode":"0AB7DC1BB4B61C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573858,"discussion_content":"把大象放冰箱里说的就是拆解问题的思维","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653692509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267186,"user_name":"E","can_delete":false,"product_type":"c1","uid":1075666,"ip_address":"","ucode":"80B68506B590EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/69/d2/8a53f0a3.jpg","comment_is_top":false,"comment_ctime":1607645607,"is_pvip":true,"replies":[{"id":"97225","content":"你好，E<br>人生永远是在不确定性中寻找确定性，不断的做决策。","user_name":"作者回复","comment_id":267186,"uid":"1151524","ip_address":"","utype":1,"ctime":1607869559,"user_name_real":"乔新亮"}],"discussion_count":1,"race_medal":0,"score":"27377449383","product_id":100062901,"comment_content":"乔老师看似在讲架构设计，实际上是在讲技术治理，契约精神是治理过程中的指导思想，乔老师也说到契约不可能无上限，因此本质上依然是在给大家布道“Trade-Off”思想。","like_count":7,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511539,"discussion_content":"你好，E\n人生永远是在不确定性中寻找确定性，不断的做决策。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607869559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268151,"user_name":"Weehua","can_delete":false,"product_type":"c1","uid":1170152,"ip_address":"","ucode":"91C0C2699D4EE4","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/e8/d49dfa94.jpg","comment_is_top":false,"comment_ctime":1608084793,"is_pvip":false,"replies":[{"id":"97419","content":"你好，Weehua<br>握手","user_name":"作者回复","comment_id":268151,"uid":"1151524","ip_address":"","utype":1,"ctime":1608163317,"user_name_real":"乔新亮"}],"discussion_count":1,"race_medal":0,"score":"14492986681","product_id":100062901,"comment_content":"我也非常认同乔老师的观点：在当今中国的互联网环境中，大部分公司都在使用技术，如何使用好技术我认为没有太大的挑战，我们遇到的坑，遇到的技术问题，大部分都是别人走过的路。2年前，带团队开始从0到1做大数据平台相关建设，其中遇到了很多挑战，最后都是通过各种学习和交流得到了很好的解决。<br><br>大部分公司发展很快，还没有到稳定的阶段，分工也不会那么细，所以在技术深度这块我认为是远远不够的。但是到了一定阶段，一定要慢下来，聚焦核心技术，还是要做一些优化的，所谓的技术壁垒，就是一直不断的做这些小优化，量变到质变。作为技术管理者，怎么使用技术，做事的思维和认知感觉才是最难的。","like_count":4,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511860,"discussion_content":"你好，Weehua\n握手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608163317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282157,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1615110961,"is_pvip":false,"replies":[{"id":"102474","content":"你好， leslie<br>design for failure是高可用的设计理念，也是人生处世哲学。<br>分享的特别好，谢谢","user_name":"作者回复","comment_id":282157,"uid":"1151524","ip_address":"","utype":1,"ctime":1615164521,"user_name_real":"乔新亮"}],"discussion_count":1,"race_medal":0,"score":"5910078257","product_id":100062901,"comment_content":"其实&quot;高可用和高性能&quot;可以放到一起：本质就是SRE，我们看看京东、阿里的双11其实非常典型的体现了这点。架构代码和架构的代价、硬件基础架构和资源合理使用、业务的取舍和问题的重要性。<br>可能自己在这条路上用了大量的经历研究：根据业务的合理性与重要性去合理的使用资源，对于不确定性和关键业务可能的问题做好充足的灾难预演与危机应对策略，早年”熔断“被太多各行的人去笑，可是放到今天而言-这种格局之大实在钦佩。自己在某些行业都经历且处理&#47;经历过极限危机，如果当时不曾合理处置对于所在企业就是重大事故。<br>Google的SRE中的一句话至今提醒这些年的我”没有Bug的程序是程序的特殊状态“，这几年很多人提出过运维无价值时我曾说过一句话”你做不到你的车子不在路上不抛锚，万一这个问题在高速公里上发生时，没有人帮你解决问题难道你要推你的车子下高速么“。<br>以上是个人对于高可用和高性能的一点薄见：还请老师指正。","like_count":2,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516644,"discussion_content":"你好， leslie\ndesign for failure是高可用的设计理念，也是人生处世哲学。\n分享的特别好，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615164521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267345,"user_name":"spark","can_delete":false,"product_type":"c1","uid":1116667,"ip_address":"","ucode":"2F128E884F400F","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/fb/52a662b2.jpg","comment_is_top":false,"comment_ctime":1607687054,"is_pvip":false,"replies":[{"id":"97214","content":"你好，spark<br>专业， 卓越，为你点赞","user_name":"作者回复","comment_id":267345,"uid":"1151524","ip_address":"","utype":1,"ctime":1607868864,"user_name_real":"乔新亮"}],"discussion_count":2,"race_medal":0,"score":"5902654350","product_id":100062901,"comment_content":"对高性能的自顶向下的认知：流量控制、扩容、提升各组件的处理能力<br>对高性能的分解：<br>一，架构角度：硬件、异步、中间件、缓存、负载均衡、读写分离，集群，分片；<br>二，技术角度：网络IO模型、无锁多线程并行、数据结构、算法、网络传输时间、IO时间；<br><br>我写代码追求性能最好，至少要比竞争对手好。我们团队有人一个接口2s照常上线，我至少要优化的50ms以内。<br>从商业竞争角度看高性能，其实高性能不是壁垒，别人很容易超越，例如加个128G内存就可以从2s提升到10ms。","like_count":1,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511607,"discussion_content":"你好，spark\n专业， 卓越，为你点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607868864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170152,"avatar":"https://static001.geekbang.org/account/avatar/00/11/da/e8/d49dfa94.jpg","nickname":"Weehua","note":"","ucode":"91C0C2699D4EE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335056,"discussion_content":"曾经我也喜欢追求代码的性能，直到我看到Linux的设计哲学中的一句话：过早的优化是万恶之源。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608082955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267344,"user_name":"glutton","can_delete":false,"product_type":"c1","uid":1200223,"ip_address":"","ucode":"F73A9EC0C83E53","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/5f/d10a39c4.jpg","comment_is_top":false,"comment_ctime":1607686933,"is_pvip":false,"replies":[{"id":"97215","content":"你好，glutton<br>T型人才，一定要有自己专业的一个领域，这是一竖； 广度也要有，有专业的领域后，可以向周围延申，不仅仅是技术，还包括软技能，比如沟通能力，决策力，团队管理能力等。<br>任何事情，认知改变肯定是效果最好的。","user_name":"作者回复","comment_id":267344,"uid":"1151524","ip_address":"","utype":1,"ctime":1607869004,"user_name_real":"乔新亮"}],"discussion_count":1,"race_medal":0,"score":"5902654229","product_id":100062901,"comment_content":"还有一个点需要向乔老师请教，目前技术调整或者是技术壁垒基本不存在了，应届生基本对组件啥的很清楚了。。。<br>那么，程序员该如何提高自己竞争力呢？听课过程中，有一些点，比如提升认知?改变思维方式?可是感觉又欠缺实现路径。。。","like_count":1,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511606,"discussion_content":"你好，glutton\nT型人才，一定要有自己专业的一个领域，这是一竖； 广度也要有，有专业的领域后，可以向周围延申，不仅仅是技术，还包括软技能，比如沟通能力，决策力，团队管理能力等。\n任何事情，认知改变肯定是效果最好的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607869004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267252,"user_name":"Anyou Liu","can_delete":false,"product_type":"c1","uid":1546881,"ip_address":"","ucode":"EFEA665B2DF650","user_header":"https://static001.geekbang.org/account/avatar/00/17/9a/81/cd6d5e1e.jpg","comment_is_top":false,"comment_ctime":1607660510,"is_pvip":false,"replies":[{"id":"97220","content":"你好，Anyou Liu<br>测试环境肯定资源不能和生产配置一样。<br>这个时候一种是做好容量规划，测试环境和生产环境和处理有关的参数等比缩小，其他基本参数一样，通过分析进行计算。<br>第二种是在生产环境进行全链路压测，业界也有这样的工具。","user_name":"作者回复","comment_id":267252,"uid":"1151524","ip_address":"","utype":1,"ctime":1607869332,"user_name_real":"乔新亮"}],"discussion_count":8,"race_medal":0,"score":"5902627806","product_id":100062901,"comment_content":"乔老师，测试环境资源有限，配置不如生产，数据量也达不到生产的要求，往往测试环境没问题的，到了生产环境性能还是有问题，测试环境的指标往往也不能直接类比到生产，有没有什么好的解决办法？","like_count":1,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511567,"discussion_content":"你好，Anyou Liu\n测试环境肯定资源不能和生产配置一样。\n这个时候一种是做好容量规划，测试环境和生产环境和处理有关的参数等比缩小，其他基本参数一样，通过分析进行计算。\n第二种是在生产环境进行全链路压测，业界也有这样的工具。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607869332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170152,"avatar":"https://static001.geekbang.org/account/avatar/00/11/da/e8/d49dfa94.jpg","nickname":"Weehua","note":"","ucode":"91C0C2699D4EE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335057,"discussion_content":"预发环境。很多大公司都有预发环境，你可以认为和生产环境是一套，但还是会有一些隔离，在预发环境进行性能压测或者功能回归才是最真实的。特别对于大数据和算法类的测试，在测试环境只能联调功能而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608083194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1546881,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9a/81/cd6d5e1e.jpg","nickname":"Anyou Liu","note":"","ucode":"EFEA665B2DF650","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1170152,"avatar":"https://static001.geekbang.org/account/avatar/00/11/da/e8/d49dfa94.jpg","nickname":"Weehua","note":"","ucode":"91C0C2699D4EE4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335113,"discussion_content":"预发环境也是有的，但是达不到生产的配置，公司没有那么多成本再搞一个跟生产一样的环境，测试环境也会测性能，但是测出来的结果到生产就达不到，大部分时间都是修好了问题再到生产观察，最好是能提前发现性能问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608094224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335057,"ip_address":""},"score":335113,"extra":""},{"author":{"id":1170152,"avatar":"https://static001.geekbang.org/account/avatar/00/11/da/e8/d49dfa94.jpg","nickname":"Weehua","note":"","ucode":"91C0C2699D4EE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1546881,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9a/81/cd6d5e1e.jpg","nickname":"Anyou Liu","note":"","ucode":"EFEA665B2DF650","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335181,"discussion_content":"预发就是生产环境，只是在逻辑上有些区分，不需要单独建立。性能测试，一定要在生产环境做的，硬件配置也很重要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608111454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335113,"ip_address":""},"score":335181,"extra":""},{"author":{"id":1546881,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9a/81/cd6d5e1e.jpg","nickname":"Anyou Liu","note":"","ucode":"EFEA665B2DF650","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1170152,"avatar":"https://static001.geekbang.org/account/avatar/00/11/da/e8/d49dfa94.jpg","nickname":"Weehua","note":"","ucode":"91C0C2699D4EE4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335318,"discussion_content":"那这个感觉就是在生产压测，做好数据的隔离，还得模拟生产的流量，这个没有这样实践过，感觉还是对技术有点要求的，这个估计大厂才会这么搞啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608167668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335181,"ip_address":""},"score":335318,"extra":""}]},{"author":{"id":1241842,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f2/f2/2a9a6e9a.jpg","nickname":"行与修","note":"","ucode":"11F21B663EF6D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334343,"discussion_content":"也有此问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607827666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279643,"user_name":"adang","can_delete":false,"product_type":"c1","uid":1143712,"ip_address":"","ucode":"0F2ECF8B92D46B","user_header":"https://static001.geekbang.org/account/avatar/00/11/73/a0/7dcc9212.jpg","comment_is_top":false,"comment_ctime":1613887394,"is_pvip":false,"replies":[{"id":"101669","content":"你好，adang<br>分享的特别好","user_name":"作者回复","comment_id":279643,"uid":"1151524","ip_address":"","utype":1,"ctime":1613996783,"user_name_real":"乔新亮"}],"discussion_count":1,"race_medal":0,"score":"1613887394","product_id":100062901,"comment_content":"契约精神正是现在团队缺失的，每年 618、双 11、双 12 公司运维、运营、研发全员戒备监测系统是否有异常，出现异常马上处理，每次大促结束再全员复盘总结，对发现的问题进行修改，下一次再这样循环。据团队老人讲，现在已经好多了，只是不放心所以才全员盯着，基本上不会出现大问题，以前是全员通宵忙救火。即使到现在也没有很清晰的目录，一切都是差不多就行，到时候再说，顶多在大促前预先准备好扩容。<br><br>老师说的明确目标履行契约，我的整理是事先要做好明确的分析和研究，把每个细节都考虑清楚，在执行过程中做好监测跟踪，收集反馈并及时做出调整。可很多研发人员和管理者不愿意静下心来细致的思考分析，理由是，想的再细也会有遗漏，太浪费时间，只有真正做了才会发现问题，想的差不多就开始做，做的过程中再调整，才是最快的。结果也就没有了契约精神。<br><br>还有一个原因是研发人员对于违约成本没有切身体会，出了问题调整呗，没啥大不了，但是在商业合作方面，这样的事情那是大忌，因为事前没有约定清楚，那么出了问题全是要用钱解决的，所以就特别注意，锱铢必较。这也就回到了老师一直说的，要站在公司发展的角度看问题。","like_count":0,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515811,"discussion_content":"你好，adang\n分享的特别好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613996783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277879,"user_name":"小乙哥","can_delete":false,"product_type":"c1","uid":1063308,"ip_address":"","ucode":"C77E79BEA0C325","user_header":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","comment_is_top":false,"comment_ctime":1612653491,"is_pvip":false,"replies":[{"id":"101291","content":"你好，小乙哥<br>棒","user_name":"作者回复","comment_id":277879,"uid":"1151524","ip_address":"","utype":1,"ctime":1613274701,"user_name_real":"乔新亮"}],"discussion_count":1,"race_medal":0,"score":"1612653491","product_id":100062901,"comment_content":"1.契约其实就是业务要求的目标，围绕这个目标，达成结果就是契约精神的体验。<br>2.具体的实现目标方法论，就是高性能设计的过程。核心是三大步: 保护系统；弹性设计；组建能力建设(这块会包含很多的术，比如分库分表，缓存等)","like_count":0,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515201,"discussion_content":"你好，小乙哥\n棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613274701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267558,"user_name":"行与修","can_delete":false,"product_type":"c1","uid":1241842,"ip_address":"","ucode":"11F21B663EF6D3","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/f2/2a9a6e9a.jpg","comment_is_top":false,"comment_ctime":1607828212,"is_pvip":false,"replies":[{"id":"97208","content":"你好，行与修<br>功能是basic view，业务、架构都在这个view中，高可用，高性能，监控等是扩展view，所以，都会和basic view有关系。","user_name":"作者回复","comment_id":267558,"uid":"1151524","ip_address":"","utype":1,"ctime":1607868630,"user_name_real":"乔新亮"}],"discussion_count":1,"race_medal":0,"score":"1607828212","product_id":100062901,"comment_content":"高可用设计，高性能设计背后是业务设计，架构设计，体系配套设计的全过程方法论。实践中需要以产品为基础持续优化提升，是一个演进过程，无法一蹴而就，往往不是一两个项目所能承载的。回看这三篇，乔老师的课程设计思路也是值得学习的！","like_count":0,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511680,"discussion_content":"你好，行与修\n功能是basic view，业务、架构都在这个view中，高可用，高性能，监控等是扩展view，所以，都会和basic view有关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607868630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267341,"user_name":"glutton","can_delete":false,"product_type":"c1","uid":1200223,"ip_address":"","ucode":"F73A9EC0C83E53","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/5f/d10a39c4.jpg","comment_is_top":false,"comment_ctime":1607686770,"is_pvip":false,"replies":[{"id":"97217","content":"你好，glutton<br>契约里面首先肯定有目标，还有一层意思是承诺，一诺千金。<br>关注max，类似tp100了，这种对于时间极度敏感的特别考验技术。","user_name":"作者回复","comment_id":267341,"uid":"1151524","ip_address":"","utype":1,"ctime":1607869159,"user_name_real":"乔新亮"}],"discussion_count":1,"race_medal":0,"score":"1607686770","product_id":100062901,"comment_content":"契约，这个词儿用的很独特，我理解契约其实是目标的另一种表达方式<br>生产环境压测，才能真实反应系统上限和可能的问题。这块我有切身体会，测试环境压测没有问题，一上生产，耗时不符合预期，最后排查，是某个机房的数据库服务器网卡有问题，虽然这是一个特殊的例子，我是以此来表达，只有生产才是对用户交付的环境。<br>耗时方面，除了分位数，一些特殊的场景，需要关注下max，虽然压测过程中，tp99数据很理想，但是max过长，也需要单独优化（比如一些需要预热的场景，第一笔请求处理可能过长）","like_count":0,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511604,"discussion_content":"你好，glutton\n契约里面首先肯定有目标，还有一层意思是承诺，一诺千金。\n关注max，类似tp100了，这种对于时间极度敏感的特别考验技术。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607869159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267232,"user_name":"Geek_2e6a7e","can_delete":false,"product_type":"c1","uid":2027323,"ip_address":"","ucode":"BCDD3367AC16FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyPPFIyvytj0LJrpHicVrTqibuLWLWcR5VqzArSHZicwJYC6gKrIF6GTxx4MakS6xiaxZBCw8icCPB8wQ/132","comment_is_top":false,"comment_ctime":1607654631,"is_pvip":true,"replies":[{"id":"97223","content":"你好，Geek_2e6a7e<br>TiDB是无法提供性能指标的，就如同mysql，redis没法提供性能指标。<br>但一个OMS是有性能指标的，oms的数据库mysql是有性能指标的。通过最外面的服务的性能指标层层进行分解，最后会得出对于oms的mysql数据库的性能指标。<br>同样的思路可以分析实用了TiDB的应用的性能指标。","user_name":"作者回复","comment_id":267232,"uid":"1151524","ip_address":"","utype":1,"ctime":1607869494,"user_name_real":"乔新亮"}],"discussion_count":6,"race_medal":0,"score":"1607654631","product_id":100062901,"comment_content":"加入你提供的服务是数据库，比如TiDB,怎样来提供性能指标。","like_count":0,"discussions":[{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511554,"discussion_content":"你好，Geek_2e6a7e\nTiDB是无法提供性能指标的，就如同mysql，redis没法提供性能指标。\n但一个OMS是有性能指标的，oms的数据库mysql是有性能指标的。通过最外面的服务的性能指标层层进行分解，最后会得出对于oms的mysql数据库的性能指标。\n同样的思路可以分析实用了TiDB的应用的性能指标。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607869494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1151524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/24/2598abb0.jpg","nickname":"乔新亮","note":"","ucode":"9AD19CCB64F2D3","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334919,"discussion_content":"拿具体的场景来进行测试，是最有效的办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608027423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2027323,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyPPFIyvytj0LJrpHicVrTqibuLWLWcR5VqzArSHZicwJYC6gKrIF6GTxx4MakS6xiaxZBCw8icCPB8wQ/132","nickname":"Geek_2e6a7e","note":"","ucode":"BCDD3367AC16FD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334604,"discussion_content":"现在像OLAP系统，层出不穷。各种分布式数据库，各说各的优势。一般是通过标准测试集来评测，但评测结果也是各说各话。如果你是公司负责底层数据库系统，如何向上层系统提供性能指标？因为业务一直要你提供相关数据？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607914019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1170152,"avatar":"https://static001.geekbang.org/account/avatar/00/11/da/e8/d49dfa94.jpg","nickname":"Weehua","note":"","ucode":"91C0C2699D4EE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2027323,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyPPFIyvytj0LJrpHicVrTqibuLWLWcR5VqzArSHZicwJYC6gKrIF6GTxx4MakS6xiaxZBCw8icCPB8wQ/132","nickname":"Geek_2e6a7e","note":"","ucode":"BCDD3367AC16FD","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":335058,"discussion_content":"直接让业务方配合压测就行了呗？或者让他们提供一些数据你们自己测试，给测试报告。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608083297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":334604,"ip_address":""},"score":335058,"extra":""},{"author":{"id":2027323,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyPPFIyvytj0LJrpHicVrTqibuLWLWcR5VqzArSHZicwJYC6gKrIF6GTxx4MakS6xiaxZBCw8icCPB8wQ/132","nickname":"Geek_2e6a7e","note":"","ucode":"BCDD3367AC16FD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1170152,"avatar":"https://static001.geekbang.org/account/avatar/00/11/da/e8/d49dfa94.jpg","nickname":"Weehua","note":"","ucode":"91C0C2699D4EE4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335063,"discussion_content":"关键业务多呀，各个事业部都有这需求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608084154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335058,"ip_address":""},"score":335063,"extra":""},{"author":{"id":1170152,"avatar":"https://static001.geekbang.org/account/avatar/00/11/da/e8/d49dfa94.jpg","nickname":"Weehua","note":"","ucode":"91C0C2699D4EE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2027323,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyPPFIyvytj0LJrpHicVrTqibuLWLWcR5VqzArSHZicwJYC6gKrIF6GTxx4MakS6xiaxZBCw8icCPB8wQ/132","nickname":"Geek_2e6a7e","note":"","ucode":"BCDD3367AC16FD","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":335180,"discussion_content":"那只能提供一些通用的数据指标了！OLAP方面，比较click house适合单表查询，gp适合复杂的sql，druid适合高并发下的聚合等。然后让业务方试用，基于真实的业务表现来再来做下一步计划。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608111327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335063,"ip_address":""},"score":335180,"extra":""}]}]}]}