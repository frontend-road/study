{"id":80459,"title":"春节7天练 | Day 7：贪心、分治、回溯和动态规划","content":"<p>你好，我是王争。今天是节后的第一个工作日，也是我们“春节七天练”的最后一篇。</p><hr><h2>几种算法思想必知必会的代码实现</h2><h3>回溯</h3><ul>\n<li>\n<p>利用回溯算法求解八皇后问题</p>\n</li>\n<li>\n<p>利用回溯算法求解0-1背包问题</p>\n</li>\n</ul><h3>分治</h3><ul>\n<li>利用分治算法求一组数据的逆序对个数</li>\n</ul><h3>动态规划</h3><ul>\n<li>\n<p>0-1背包问题</p>\n</li>\n<li>\n<p>最小路径和（详细可看@Smallfly整理的 Minimum Path Sum）</p>\n</li>\n<li>\n<p>编程实现莱文斯坦最短编辑距离</p>\n</li>\n<li>\n<p>编程实现查找两个字符串的最长公共子序列</p>\n</li>\n<li>\n<p>编程实现一个数据序列的最长递增子序列</p>\n</li>\n</ul><h2>对应的LeetCode练习题（@Smallfly 整理）</h2><ul>\n<li>Regular Expression Matching（正则表达式匹配）</li>\n</ul><p>英文版：<a href=\"https://leetcode.com/problems/regular-expression-matching/\">https://leetcode.com/problems/regular-expression-matching/</a></p><p>中文版：<a href=\"https://leetcode-cn.com/problems/regular-expression-matching/\">https://leetcode-cn.com/problems/regular-expression-matching/</a></p><ul>\n<li>Minimum Path Sum（最小路径和）</li>\n</ul><p>英文版：<a href=\"https://leetcode.com/problems/minimum-path-sum/\">https://leetcode.com/problems/minimum-path-sum/</a></p><p>中文版：<a href=\"https://leetcode-cn.com/problems/minimum-path-sum/\">https://leetcode-cn.com/problems/minimum-path-sum/</a></p><!-- [[[read_end]]] --><ul>\n<li>Coin Change （零钱兑换）</li>\n</ul><p>英文版：<a href=\"https://leetcode.com/problems/coin-change/\">https://leetcode.com/problems/coin-change/</a></p><p>中文版：<a href=\"https://leetcode-cn.com/problems/coin-change/\">https://leetcode-cn.com/problems/coin-change/</a></p><ul>\n<li>Best Time to Buy and Sell Stock（买卖股票的最佳时机）</li>\n</ul><p>英文版：<a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock/</a></p><p>中文版：<a href=\"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/\">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/</a></p><ul>\n<li>Maximum Product Subarray（乘积最大子序列）</li>\n</ul><p>英文版：<a href=\"https://leetcode.com/problems/maximum-product-subarray/\">https://leetcode.com/problems/maximum-product-subarray/</a></p><p>中文版：<a href=\"https://leetcode-cn.com/problems/maximum-product-subarray/\">https://leetcode-cn.com/problems/maximum-product-subarray/</a></p><ul>\n<li>Triangle（三角形最小路径和）</li>\n</ul><p>英文版：<a href=\"https://leetcode.com/problems/triangle/\">https://leetcode.com/problems/triangle/</a></p><p>中文版：<a href=\"https://leetcode-cn.com/problems/triangle/\">https://leetcode-cn.com/problems/triangle/</a></p><hr><p>到此为止，七天的练习就结束了。这些题目都是我精选出来的，是基础数据结构和算法中最核心的内容。建议你一定要全部手写练习。如果一遍搞不定，你可以结合前面的章节，多看几遍，反复练习，直到能够全部搞定为止。</p><p>学习数据结构和算法，最好的方法就是练习和实践。我相信这在任何知识的学习过程中都适用。</p><p>最后，祝你工作顺利！学业进步！</p>","neighbors":{"left":{"article_title":"春节7天练 | Day 6：图","id":81218},"right":{"article_title":"用户故事 | Jerry银银：这一年我的脑海里只有算法","id":81230}},"comments":[{"had_liked":false,"id":66034,"user_name":"kai","can_delete":false,"product_type":"c1","uid":1018452,"ip_address":"","ucode":"443ED92B59AB8C","user_header":"","comment_is_top":false,"comment_ctime":1549854942,"is_pvip":true,"replies":[{"id":"24743","content":"感谢您参与春节七天练的活动，为了表彰你在活动中的优秀表现，赠送您99元专栏通用阅码，我们会在3个工作日之内完成礼品发放，如有问题请咨询小明同学，微信geektime002。","user_name":"编辑回复","user_name_real":"王锦","uid":"1058895","ctime":1550804639,"ip_address":"","comment_id":66034,"utype":2}],"discussion_count":2,"race_medal":0,"score":"53089462494","product_id":100017301,"comment_content":"听了老师的课程，第一遍的时候，只是在读，现在开始回顾：<br>课程相关的知识点，做了笔记：https:&#47;&#47;github.com&#47;guokaide&#47;algorithm&#47;blob&#47;master&#47;summary&#47;algorithm.md<br>课程涉及的题目，也在逐步总结当中：<br>https:&#47;&#47;github.com&#47;guokaide&#47;algorithm&#47;blob&#47;master&#47;questions&#47;questions.md<br><br>希望和大家一起进步，欢迎小伙伴们一起来讨论~<br>","like_count":13,"discussions":[{"author":{"id":1058895,"avatar":"https://static001.geekbang.org/account/avatar/00/10/28/4f/48e48553.jpg","nickname":"@阿锦啊","note":"","ucode":"3C5F00333D7174","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438683,"discussion_content":"感谢您参与春节七天练的活动，为了表彰你在活动中的优秀表现，赠送您99元专栏通用阅码，我们会在3个工作日之内完成礼品发放，如有问题请咨询小明同学，微信geektime002。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550804639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000417,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","nickname":"sam","note":"","ucode":"8D48F4B9045947","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361374,"discussion_content":"优秀！学习的榜样！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616655423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66208,"user_name":"黄丹","can_delete":false,"product_type":"c1","uid":1245295,"ip_address":"","ucode":"29C209F0D78996","user_header":"https://static001.geekbang.org/account/avatar/00/13/00/6f/aacb013d.jpg","comment_is_top":false,"comment_ctime":1549892373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18729761557","product_id":100017301,"comment_content":"课程的最后一天，也是新年上班的第一天，感谢王老师的教育和陪伴，祝您生活开心，工作顺利。<br>今天的题目比前几天的都难一点，只做了三题，太累了TaT。对于动态规划和贪心总觉得很巧妙，如果想不到动态转移方程式，就很难做，但要是想到了，真的是豁然开朗。对于这一类题，还是要多锻炼，找动态转移方程式要从最后一个结果出发，去想这个结果可以由什么得到，知道之前所有结点的信息，如何推导出当前结点的信息，其实和高中学的归纳法有一点点像。 <br>下面给出我今天做的三题的解题思路和代码<br>1.\tProblem 121. Best Time to Buy and Sell Stock<br>解题思路：这道题很久以前做的，我们可以维持两个变量 - 分别对应于最小谷值和最大利润（销售价格和最低价格之间的最大差异）的minprice 和maxprofit。<br>代码：https:&#47;&#47;github.com&#47;yyxd&#47;leetcode&#47;blob&#47;master&#47;src&#47;leetcode&#47;array&#47;easy&#47;Problem121.java<br>2.\tProblem 120. Triangle<br>解题思路：这道题给一个由整数组成的三角形，自上而下寻找顶点到三角形边的最短的一条路径，设置一个数组A[0...n-1][0...n-1]，A[i][j]代表到达第i行第j列结点的最短路径 * DP转移方程式为：A[i][j]=min(A[i-1][j-1],A[i-1][j])+triangle[i][j] * 其中二维数组可以简化为一维数组，因为我们只需要上一行结点的信息 * 然后遍历到达最后一行的节点的路径，找到最短路径的值<br>代码：https:&#47;&#47;github.com&#47;yyxd&#47;leetcode&#47;blob&#47;master&#47;src&#47;leetcode&#47;dp&#47;Problem120_Triangle.java<br>3.\tProblem 322. Coin Change<br>解题思路：这道题是给定具有n个不同金额的硬币（硬币个数无限）coins[0...n-1]，给一个整数amount，是否给的硬币能正好达到整数，给出能组成整数最少需要的硬币个数. 解法是设置一个数组A[0...amount],进行初始化A[0]=0;A[1...amount] = -1;保存的是当给定金额为i时，所需要的最少的硬币。 * dp转移方程式为 A[k] = 1+min(A[k-coins[0]],A[k-coins[1]],....A[k-coins[n-1]]). * 这里要注意的是判断A[k]是否有解<br>代码：https:&#47;&#47;github.com&#47;yyxd&#47;leetcode&#47;blob&#47;master&#47;src&#47;leetcode&#47;dp&#47;Problem322_CoinChange.java<br>课程完结撒花，真的学到好多，自己以后还会反复回顾的，再次感谢王争老师，还有每天负责朗读的声音好好听的修阳小哥哥。<br>","like_count":4},{"had_liked":false,"id":65983,"user_name":"kai","can_delete":false,"product_type":"c1","uid":1018452,"ip_address":"","ucode":"443ED92B59AB8C","user_header":"","comment_is_top":false,"comment_ctime":1549816725,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18729685909","product_id":100017301,"comment_content":"动态规划，感觉是面试必考内容，今天跟着这些题目再来复习一遍~","like_count":3},{"had_liked":false,"id":66035,"user_name":"李皮皮皮皮皮","can_delete":false,"product_type":"c1","uid":1200281,"ip_address":"","ucode":"3BF1DEE4A12359","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/99/44378317.jpg","comment_is_top":false,"comment_ctime":1549854956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14434756844","product_id":100017301,"comment_content":"每天一道算法题，风雨无阻（过年偷懒不算😛）","like_count":3},{"had_liked":false,"id":66028,"user_name":"kai","can_delete":false,"product_type":"c1","uid":1018452,"ip_address":"","ucode":"443ED92B59AB8C","user_header":"","comment_is_top":false,"comment_ctime":1549853742,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10139788334","product_id":100017301,"comment_content":"8皇后问题<br><br>public class EightQueen {<br><br>    private static final int QUEEN_NUMBER = 8;      &#47;&#47; 皇后个数<br>    private int[] columns = new int[QUEEN_NUMBER];  &#47;&#47; 每个皇后存储的列 (row, col), row天然不相等<br>    private int total = 0;<br><br>    public int solution() {<br>        queen(0);<br>        return total;<br>    }<br><br>    private void queen(int row) {<br>        if (row == QUEEN_NUMBER) {<br>            total++;<br>        } else {<br>            for (int col = 0; col != QUEEN_NUMBER; col++) {<br>                columns[row] = col;<br>                if (isPut(row)) {<br>                    queen(row+1);<br>                }<br>            }<br>        }<br>    }<br><br>    private boolean isPut(int row) {<br>         for (int i = 0; i != row; i++) {<br>             if (columns[row] == columns[i] || row - i == Math.abs(columns[row]-columns[i])) {<br>                 return false;<br>             }<br>         }<br>         return true;<br>    }<br><br>}","like_count":2},{"had_liked":false,"id":66014,"user_name":"Richard","can_delete":false,"product_type":"c1","uid":1325215,"ip_address":"","ucode":"706E9E4A88353D","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/9f/f2eaaa8a.jpg","comment_is_top":false,"comment_ctime":1549851704,"is_pvip":false,"replies":[{"id":"24744","content":"感谢您参与春节七天练的活动，为了表彰你在活动中的优秀表现，赠送您99元专栏通用阅码，我们会在3个工作日之内完成礼品发放，如有问题请咨询小明同学，微信geektime002。","user_name":"编辑回复","user_name_real":"王锦","uid":"1058895","ctime":1550804666,"ip_address":"","comment_id":66014,"utype":2}],"discussion_count":1,"race_medal":0,"score":"10139786296","product_id":100017301,"comment_content":"老师留的题都很不错，正在刷之前没做过的LeetCode题。<br>参与下答对三题送课程的活动:<br>Day 1：<br>1.求众数(Python)<br>class Solution:<br>    def majorityElement(self, nums):<br>        return sorted(nums)[len(nums) &#47;&#47; 2]<br>2.缺失的第一个正数(Golang)<br>func firstMissingPositive(nums []int) int {<br>    if len(nums) == 0 {<br>\t\treturn 1<br>\t}<br><br>\tvar arr = make([]bool, len(nums)+1)<br>\tvar idx = 1<br>\tfor i := 0; i &lt; len(nums); i++ {<br>\t\tif nums[i] &gt;= 0 &amp;&amp; nums[i] &lt; len(arr) {<br>\t\t\tarr[nums[i]] = true<br>\t\t}<br>\t}<br><br>\tfor i := 1; i &lt; len(arr); i++ {<br>\t\tif arr[i] == false {<br>\t\t\tidx = i<br>\t\t\tbreak<br>\t\t} else {<br>\t\t\tidx = i + 1<br>\t\t}<br>\t}<br><br>\treturn idx<br>}<br>Day 7:<br>3. 买卖股票的最佳时机(Python)<br>class Solution:<br>    def maxProfit(self, prices):<br>        if not prices:<br>            return 0<br>        min_price = prices[0]<br>        res = 0<br>        for i in prices[1:]:<br>            min_price = min(min_price, i)<br>            if res &lt; i - min_price:<br>                res = i - min_price<br>        return res<br>","like_count":2,"discussions":[{"author":{"id":1058895,"avatar":"https://static001.geekbang.org/account/avatar/00/10/28/4f/48e48553.jpg","nickname":"@阿锦啊","note":"","ucode":"3C5F00333D7174","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438678,"discussion_content":"感谢您参与春节七天练的活动，为了表彰你在活动中的优秀表现，赠送您99元专栏通用阅码，我们会在3个工作日之内完成礼品发放，如有问题请咨询小明同学，微信geektime002。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550804666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65968,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1549805912,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10139740504","product_id":100017301,"comment_content":"这冲刺压力有点大了😓","like_count":3},{"had_liked":false,"id":65997,"user_name":"mgxian","can_delete":false,"product_type":"c1","uid":1014806,"ip_address":"","ucode":"7B7E77E6A83B87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","comment_is_top":false,"comment_ctime":1549845029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5844812325","product_id":100017301,"comment_content":"买卖股票的最佳时机 go 语言实现<br>package main<br><br>import &quot;fmt&quot;<br><br>func maxProfit(prices []int) int {<br>\tmax := -1<br>\tfor i := 0; i &lt; len(prices); i++ {<br>\t\tfor j := i + 1; j &lt; len(prices); j++ {<br>\t\t\tprofit := prices[j] - prices[i]<br>\t\t\tif profit &gt; 0 &amp;&amp; profit &gt; max {<br>\t\t\t\tmax = profit<br>\t\t\t}<br>\t\t}<br>\t}<br><br>\tif max == -1 {<br>\t\treturn 0<br>\t}<br><br>\treturn max<br>}<br><br>func main() {<br>\ttestData1 := []int{7, 1, 5, 3, 6, 4}<br>\ttestData2 := []int{7, 6, 4, 3, 1}<br><br>\tfmt.Println(maxProfit(testData1))<br>\tfmt.Println(maxProfit(testData2))<br>}<br>","like_count":1},{"had_liked":false,"id":275110,"user_name":"云之崖","can_delete":false,"product_type":"c1","uid":1003366,"ip_address":"","ucode":"724C0614F40EC1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/66/1f8fccfb.jpg","comment_is_top":false,"comment_ctime":1611309989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611309989","product_id":100017301,"comment_content":"1年左右断断续续，终于学完了所有章节，这些练习题大部分不看提示都能搞得定了。","like_count":0},{"had_liked":false,"id":172924,"user_name":"xxxxL","can_delete":false,"product_type":"c1","uid":1129309,"ip_address":"","ucode":"F84BB5ACD1241E","user_header":"https://static001.geekbang.org/account/avatar/00/11/3b/5d/15c4817a.jpg","comment_is_top":false,"comment_ctime":1579358947,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579358947","product_id":100017301,"comment_content":"请问这个在哪里呢（详细可看 @Smallfly 整理的 Minimum Path Sum）","like_count":0},{"had_liked":false,"id":170324,"user_name":"马志远","can_delete":false,"product_type":"c1","uid":1480892,"ip_address":"","ucode":"AAD8875343E5FC","user_header":"https://static001.geekbang.org/account/avatar/00/16/98/bc/6d5affd3.jpg","comment_is_top":false,"comment_ctime":1578568804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578568804","product_id":100017301,"comment_content":"第一遍","like_count":0},{"had_liked":false,"id":130724,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1567519587,"is_pvip":false,"replies":[{"id":"49802","content":"抱歉，这个我也不懂啊","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1567724425,"ip_address":"","comment_id":130724,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567519587","product_id":100017301,"comment_content":"请教下老师，遇到一个问题，给多个银行账号，假如每个账号每天都有交易，这样在坐标中可以画出时间和交易金额的曲线，求哪个曲线的更平滑或波动更大，银行账号的交易额度可能相差很大，银行账号交易梳理可能多个。","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466091,"discussion_content":"抱歉，这个我也不懂啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567724425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112457,"user_name":"好运连连","can_delete":false,"product_type":"c1","uid":1105081,"ip_address":"","ucode":"2A339281321E2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/b9/946b181d.jpg","comment_is_top":false,"comment_ctime":1562739618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562739618","product_id":100017301,"comment_content":"老师，具体的是这样，比如物流公司，用户下单，需要根据最短路线或者最少花费来找出合适的中转路线。 比如需要送货到B城市，A城市发货，但是，很多路线，需要选最合适的路线，比如A到D中转再到E中转最后送货到B。","like_count":0},{"had_liked":false,"id":112273,"user_name":"好运连连","can_delete":false,"product_type":"c1","uid":1105081,"ip_address":"","ucode":"2A339281321E2A","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/b9/946b181d.jpg","comment_is_top":false,"comment_ctime":1562712326,"is_pvip":false,"replies":[{"id":"40902","content":"麻烦说具体点吧 太笼统了","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1562739345,"ip_address":"","comment_id":112273,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562712326","product_id":100017301,"comment_content":"老师，请教下。关于物流中转路线，应该采用哪种算法合适？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457650,"discussion_content":"麻烦说具体点吧 太笼统了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562739345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68556,"user_name":"Nereus","can_delete":false,"product_type":"c1","uid":1349403,"ip_address":"","ucode":"FF98125564FAFE","user_header":"","comment_is_top":false,"comment_ctime":1550544356,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1550544356","product_id":100017301,"comment_content":"零钱兑换 - GO<br><br>func coinChange(coins []int, amount int) int {<br>\tvar dp []int = make([]int, amount+1)<br>\tfor _, record := range coins {<br>\t\tif amount &gt;= record {<br>\t\t\tdp[record] = 1<br>\t\t}<br>\t}<br><br>\tfor i := 1; i &lt;= amount; i++ {<br>\t\tdp[i] = amount + 1<br>\t\tfor _, record := range coins {<br>\t\t\tif i-record &gt;= 0 {<br>\t\t\t\tdp[i] = min(dp[i-record]+1, dp[i])<br>\t\t\t}<br>\t\t}<br>\t}<br><br>\tif dp[amount] &gt; amount {<br>\t\treturn -1<br>\t}<br><br>\treturn dp[amount]<br>}<br><br>func min(a, b int) int {<br>\tif a &lt; b {<br>\t\treturn a<br>\t}<br>\treturn b<br>}<br><br>","like_count":0},{"had_liked":false,"id":67705,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1550226228,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550226228","product_id":100017301,"comment_content":"买卖股票的最佳时机 go 语言实现<br><br>func maxProfit(prices []int) int {<br><br>\tmax:=0<br>\tfor i:=0;i&lt;len(prices);i++{<br>\t\tfor j:=0;j&lt;i;j++{<br>\t\t\tnum:=prices[i]-prices[j]<br>\t\t\tif num&gt;max{<br>\t\t\t\tmax=num<br>\t\t\t}<br>\t\t}<br>\t}<br>\treturn max<br>}","like_count":0},{"had_liked":false,"id":67634,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1550214345,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550214345","product_id":100017301,"comment_content":"零钱兑换 go语言实现<br>func coinChange(coins []int, amount int) int {<br>    if amount==0{<br>\t\treturn 0<br>\t}<br>\tif len(coins)==0 &amp;&amp; amount!=0{<br>\t\treturn -1<br>\t}<br><br>\tisSmall:=true<br>\tfor _,coin:=range coins{<br>\t\tif coin&lt;=amount{<br>\t\t\tisSmall=false<br>\t\t}<br>\t}<br>\tif isSmall{<br>\t\treturn -1<br>\t}<br>\tgrid:=make([]int,amount+1)<br><br><br>\tfor _,coin:=range coins{<br>\t\tif coin&lt;=amount{<br>\t\t\tgrid[coin]=1<br>\t\t}<br>\t\tif coin==amount{<br>\t\t\treturn 1<br>\t\t}<br>\t}<br>\tfor i:=2;i&lt;amount+1;i++{<br>\t\tnewGrid:=make([]int,amount+1)<br>\t\tfor j:=1;j&lt;amount+1;j++{<br>\t\t\tfor _,coin:=range coins{<br>\t\t\t\tif grid[j]==1 &amp;&amp; j+coin&lt;=amount{<br>\t\t\t\t\tnewGrid[j]=1<br>\t\t\t\t\tnewGrid[j+coin]=1<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t\tgrid=newGrid<br>\t\tif grid[amount]==1{<br>\t\t\treturn i<br>\t\t}<br>\t}<br>\treturn -1<br>}","like_count":0},{"had_liked":false,"id":67590,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1550203366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550203366","product_id":100017301,"comment_content":"最小路径和 go实现<br><br>func minPathSum(grid [][]int) int {<br>    l:=len(grid)<br>\tw:=len(grid[0])<br>\tsum:=make([][]int,l)<br>\tfor i:=0;i&lt;l;i++{<br>\t\tsum[i]=make([]int,w)<br>\t}<br>\tsum[0][0]=grid[0][0]<br>\tfor i:=1;i&lt;w;i++{<br>\t\tsum[0][i]=grid[0][i]+sum[0][i-1]<br>\t}<br>\tfor j:=1;j&lt;l;j++{<br>\t\tsum[j][0]=grid[j][0]+sum[j-1][0]<br>\t}<br>\tfor i:=1;i&lt;l;i++{<br>\t\tfor j:=1;j&lt;w;j++{<br>\t\t\tsum[i][j]=less(sum[i-1][j],sum[i][j-1])+grid[i][j]<br>\t\t}<br>\t}<br><br>\treturn sum[l-1][w-1]<br>}<br><br>func less(i,j int) int{<br>\tif i&gt;j{<br>\t\treturn j<br>\t}else{<br>\t\treturn i<br>\t}<br>}","like_count":0},{"had_liked":false,"id":67582,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1550201764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550201764","product_id":100017301,"comment_content":"正则表达式匹配 go语言实现，还是看别人的提示搞出来的<br>func isMatch(s string, p string) bool {<br>    if len(p)==0{<br>\t\tif len(s)==0{<br>\t\t\treturn true<br>\t\t}else{<br>\t\t\treturn false<br>\t\t}<br>\t}<br>\tif len(p)==1{<br>\t\tif len(s)==1 &amp;&amp; (s[0]==p[0] || p[0]==&#39;.&#39;){<br>\t\t\treturn true<br>\t\t} else {<br>\t\t\treturn false<br>\t\t}<br>\t}<br>\tif p[1]!=&#39;*&#39;{<br>\t\tif len(s)==0{<br>\t\t\treturn false<br>\t\t}<br>\t\treturn (s[0]==p[0]||p[0]==&#39;.&#39;) &amp;&amp; isMatch(s[1:],p[1:])<br>\t}else{<br>\t\tfor ;len(s)!=0 &amp;&amp; (s[0]==p[0]||p[0]==&#39;.&#39;);{<br>\t\t\tif isMatch(s,p[2:]){<br>\t\t\t\treturn true<br>\t\t\t}<br>\t\t\ts=s[1:]<br>\t\t}<br>\t\treturn isMatch(s,p[2:])<br>\t}<br><br><br><br>\treturn true<br>}","like_count":0},{"had_liked":false,"id":67437,"user_name":"TryTs","can_delete":false,"product_type":"c1","uid":1036276,"ip_address":"","ucode":"1DD1E974D461A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/f4/26b95f0b.jpg","comment_is_top":false,"comment_ctime":1550146736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550146736","product_id":100017301,"comment_content":"&#47;&#47;零钱兑换<br>#include&lt;iostream&gt;<br>#include&lt;algorithm&gt;<br>using namespace std;<br>int coins[10];<br>int amount;<br>int k;&#47;&#47;k代表纸币的数目<br>int dp[20];&#47;&#47;代表面值最大，也可以采用动态扩容的方式 <br>int cmax = 32767;<br>int coinChange(int coins[],int amount){<br>\tfor(int i = 1;i &lt;= amount;i++){<br>\t\tdp[i] = cmax;<br>\t\tfor(int j = 0;j &lt; k;j++){<br>\t\t\tint t = coins[j];<br>\t\t\tif(i &gt;= t &amp;&amp; coins[i - t] != cmax){<br>\t\t\t\tdp[i] = min(dp[i - t] + 1,dp[i]);<br>\t\t\t}<br>\t\t}<br>\t}<br>\tif(dp[amount] &lt; cmax &amp;&amp; dp[amount] &gt; 0){<br>\t\treturn dp[amount];<br>\t}<br>\telse<br>\t\treturn -1;<br>}<br>int main(){<br>\tk = 0;<br>\twhile(true){<br>\t\tcin&gt;&gt;k;<br>\t\tfor(int i = 0;i &lt; k;i++){<br>\t\t\tcin&gt;&gt;coins[i];<br>\t\t} <br>\t\tcin&gt;&gt;amount;<br>\t\tcout&lt;&lt;coinChange(coins,amount)&lt;&lt;endl;<br>\t}\t<br>}","like_count":0},{"had_liked":false,"id":67220,"user_name":"TryTs","can_delete":false,"product_type":"c1","uid":1036276,"ip_address":"","ucode":"1DD1E974D461A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/f4/26b95f0b.jpg","comment_is_top":false,"comment_ctime":1550112492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550112492","product_id":100017301,"comment_content":"回溯0-1背包问题<br>#include&lt;iostream&gt;<br>using namespace std;<br>int v[10] = {2,2,4,6,3};<br>int M;&#47;&#47;代表背包的容积 <br>int n;<br>int cmax = 0;<br><br>void f(int w,int k){<br>&#47;&#47;\tif(w == 0){<br>&#47;&#47;\t\tif(w &gt; max) max = w;<br>&#47;&#47;\t}<br>\tif(w == M || k == n){<br>\t\tif(w &gt; cmax) cmax = w;<br>\t\treturn ;<br>\t} <br>\tf(w,k + 1);<br>\tif(w + v[k] &lt;= M){<br>\t\tf(w + v[k],k + 1);<br>\t}<br>}<br>int main(){<br>\t&#47;&#47;v[] = {2,2,4,6,3};<br>\tM = 9;<br>\tn = 5;<br>\tf(0,0);<br>\tcout&lt;&lt;cmax&lt;&lt;endl;<br>}","like_count":0},{"had_liked":false,"id":67201,"user_name":"TryTs","can_delete":false,"product_type":"c1","uid":1036276,"ip_address":"","ucode":"1DD1E974D461A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/f4/26b95f0b.jpg","comment_is_top":false,"comment_ctime":1550109768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550109768","product_id":100017301,"comment_content":"#include&lt;iostream&gt;<br>#include&lt;cmath&gt;<br>using namespace std;<br><br>int queen[100];<br>int sum = 0;<br>int n;<br>void Print(){<br>\t&#47;&#47;cout&lt;&lt;&quot;ss&quot;&lt;&lt;endl;<br>\tfor(int i = 0;i &lt; n;i++){<br>\t\tcout&lt;&lt;&quot;(&quot;&lt;&lt;i+1&lt;&lt;&quot;,&quot;&lt;&lt;queen[i] + 1&lt;&lt;&quot;)&quot;;<br>\t}<br>\tsum++;<br>\tcout&lt;&lt;endl;<br>}<br><br>void Queen(int queen[],int k){<br>\tif(k == n) {<br>\t\tPrint(); <br>\t\t&#47;&#47;return ;<br>\t}<br>    int j = 0;<br>    for(int i = 0;i &lt; n;i++){<br>    \t&#47;&#47;j = i;<br>    \tfor( j = 0;j &lt; k;j++){<br>    \t\tif((queen[j] == i)||(abs(queen[j] - i) == abs(k - j)))<br>\t\t\t\tbreak;<br>\t\t}<br>\t\tif(j == k){<br>\t\t\tqueen[k] = i;<br>\t\t\tQueen(queen,k+1); <br>\t\t}<br>\t}<br>}<br>int main(){<br>\tcin&gt;&gt;n;<br>\tQueen(queen,0);<br>\tcout&lt;&lt;sum&lt;&lt;endl;<br>}","like_count":0},{"had_liked":false,"id":66454,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1549941186,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1549941186","product_id":100017301,"comment_content":"第一题，把39讲的代码改了一下。。。<br><br>public class Pattern {<br>  private boolean matched = false;<br>  private char[] pattern; &#47;&#47; 正则表达式<br>  private int plen; &#47;&#47; 正则表达式长度<br><br>  public Pattern(char[] pattern, int plen) {<br>    this.pattern = pattern;<br>    this.plen = plen;<br>  }<br><br>  public boolean match(char[] text, int tlen) { &#47;&#47; 文本串及长度<br>    matched = false;<br>    if (pattern[0]=&#39;*&#39;)<br>           return matched;<br>   int i = 0;<br>   int j = 0;<br>   while (i&lt;=plen&amp;&amp;j&lt;=tlen&amp;&amp;pattern[i]!=text[j]&amp;&amp;pattern[i]!=&#39;.&#39;)<br>         i++;<br>    rmatch(0, 0, text, tlen);<br>    return matched;<br>  }<br><br>  private void rmatch(int ti, int pj, char[] text, int tlen) {<br>    if (matched) return; &#47;&#47; 如果已经匹配了，就不要继续递归了<br>    if (ti == tlen){ &#47;&#47;文本串到结尾了<br>      matched = true; <br>      return;<br>    }<br>    if (pattern[pj] == &#39;*&#39;) { &#47;&#47; * 匹配任意个字符<br>      for (int k = 0; k &lt;= tlen-ti&amp;&amp;tex[ti+k]==text[ti]; ++k) {<br>        rmatch(ti+k, pj+1, text, tlen);<br>      }<br>    } else if (pattern[pj] == &#39;.&#39;) { &#47;&#47; . 匹配 0 个或者 1 个字符<br>      rmatch(ti, pj+1, text, tlen); <br>      rmatch(ti+1, pj+1, text, tlen); <br>    } else if (ti &lt; tlen &amp;&amp; pattern[pj] == text[ti]) { &#47;&#47; 纯字符匹配才行<br>      rmatch(ti+1, pj+1, text, tlen);<br>    }<br>  }<br>}","like_count":0},{"had_liked":false,"id":66405,"user_name":"成楠Peter","can_delete":false,"product_type":"c1","uid":1252977,"ip_address":"","ucode":"4D13E7368D8CF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/71/9dcbe6c4.jpg","comment_is_top":false,"comment_ctime":1549935759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549935759","product_id":100017301,"comment_content":"感觉，明天就是专栏的最后一天","like_count":0},{"had_liked":false,"id":66061,"user_name":"C_love","can_delete":false,"product_type":"c1","uid":1043613,"ip_address":"","ucode":"F268D1867C90C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/9d/4d705f03.jpg","comment_is_top":false,"comment_ctime":1549867116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549867116","product_id":100017301,"comment_content":"Best Time to Buy and Sell Stoc...<br><br>class Solution {<br>    public int maxProfit(int[] prices) {<br>        if (prices == null || prices.length == 0 || prices.length == 1) {<br>            return 0;<br>        }<br>        <br>        int max = 0;<br>        int start = 0;<br>        <br>        for (int i = 1; i &lt; prices.length; i++) {<br>            if (prices[i] &lt; prices[start]) {<br>                start = i;<br>            } else {<br>                max = Math.max(max, prices[i] - prices[start]);<br>            }<br>        }<br>        return max;<br>    }<br>}","like_count":0},{"had_liked":false,"id":66048,"user_name":"ext4","can_delete":false,"product_type":"c1","uid":1180826,"ip_address":"","ucode":"FC881AECAC1974","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/9a/f2c0a206.jpg","comment_is_top":false,"comment_ctime":1549861901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549861901","product_id":100017301,"comment_content":"最小路径和<br>class Solution {<br>  public:<br>    int minPathSum(vector&lt; vector&lt;int&gt; &gt;&amp; grid) {<br>      int m = grid.size();<br>      if (m == 0) return 0;<br>      int n = grid[0].size();<br>      if (n == 0) return 0;<br>      int matrix[m][n];<br>      int accum = 0;<br>      for (int i = 0; i &lt; m; i++) {<br>        accum += grid[i][0];<br>        matrix[i][0] = accum;<br>      }<br>      accum = 0;<br>      for (int j = 0; j &lt; n; j++) {<br>        accum += grid[0][j];<br>        matrix[0][j] = accum;<br>      }<br>      for (int i = 1; i &lt; m; i++) {<br>        for (int j = 1; j &lt; n; j++) {<br>          matrix[i][j] = min(matrix[i - 1][j], matrix[i][j - 1]) + grid[i][j];<br>        }<br>      }<br>      return matrix[m - 1][n - 1];<br>    }<br>};<br>","like_count":0},{"had_liked":false,"id":66039,"user_name":"Kyle Liu","can_delete":false,"product_type":"c1","uid":1109324,"ip_address":"","ucode":"21EBDE63DE30A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/4c/4f645bda.jpg","comment_is_top":false,"comment_ctime":1549855904,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549855904","product_id":100017301,"comment_content":"有兴趣朋友可以将思路分析提交到https:&#47;&#47;github.com&#47;kylesliu&#47;awesome-golang-leetcode，欢迎大家提issue","like_count":0},{"had_liked":false,"id":65990,"user_name":"幻月剑","can_delete":false,"product_type":"c1","uid":1120906,"ip_address":"","ucode":"44F7B62F5CB4E9","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/8a/ae50ecbb.jpg","comment_is_top":false,"comment_ctime":1549842070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549842070","product_id":100017301,"comment_content":"一刷完成，题目没有做，算是草草学了一遍，等第二遍将题目都做完","like_count":0},{"had_liked":false,"id":65979,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1549814755,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1549814755","product_id":100017301,"comment_content":"七七八八跟着老师复习了遍算法，印象最深刻的无疑是老师结合具体的应用场景讲利用的数据结构与算法！棒棒哒","like_count":0},{"had_liked":false,"id":65971,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1549808647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549808647","product_id":100017301,"comment_content":"这期题目好难，而且在Web网页上找对应的课程有点麻烦，能否在每个Day的文章中加上对应文章的链接呢?","like_count":0},{"had_liked":false,"id":65967,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1549805735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549805735","product_id":100017301,"comment_content":"正则表达式<br>public boolean isMatch(String s, String p) {<br><br>    if (s == null || p == null) {<br>        return false;<br>    }<br>    boolean[][] dp = new boolean[s.length()+1][p.length()+1];<br>    dp[0][0] = true;<br>    for (int i = 0; i &lt; p.length(); i++) {<br>        if (p.charAt(i) == &#39;*&#39; &amp;&amp; dp[0][i-1]) {<br>            dp[0][i+1] = true;<br>        }<br>    }<br>    for (int i = 0 ; i &lt; s.length(); i++) {<br>        for (int j = 0; j &lt; p.length(); j++) {<br>            if (p.charAt(j) == &#39;.&#39;) {<br>                dp[i+1][j+1] = dp[i][j];<br>            }<br>            if (p.charAt(j) == s.charAt(i)) {<br>                dp[i+1][j+1] = dp[i][j];<br>            }<br>            if (p.charAt(j) == &#39;*&#39;) {<br>                if (p.charAt(j-1) != s.charAt(i) &amp;&amp; p.charAt(j-1) != &#39;.&#39;) {<br>                    dp[i+1][j+1] = dp[i+1][j-1];<br>                } else {<br>                    dp[i+1][j+1] = (dp[i+1][j] || dp[i][j+1] || dp[i+1][j-1]);<br>                }<br>            }<br>        }<br>    }<br>    return dp[s.length()][p.length()];<br>}<br><br>leetcode的排名第一的答案，搬过来了","like_count":1}]}