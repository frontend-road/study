{"id":254156,"title":"07 | 正则有哪些常见的流派及其特性？","content":"<p>你好，我是涂伟忠。今天我来给你讲讲正则常见的流派及其特性。</p><p>你可能要问了，讲正则流派有啥用呢？不如多来点实战啊。其实，我们去了解正则的演变过程是很有必要的。因为你一旦了解了正则的演变过程之后，就能够更加正确地去使用正则，尤其是在 Linux系统中。</p><p>那我们就先来看一个有关Linux系统的例子，你先来感受一下。</p><p>如果你在 Linux 系统的一些命令行中使用正则，比如使用 grep 过滤内容的时候，你可能会发现结果非常诡异，就像下图这样，在grep命令中，使用正则\\d+取不到数据，甚至在 egrep 中输出了英文字母d那一行。</p><p><img src=\"https://static001.geekbang.org/resource/image/f1/09/f183b6fb3fba964ab9a9c3f8aa159b09.png?wh=740*494?wh=740*494\" alt=\"\"></p><p>这个执行结果的原因就和正则的演变有着密不可分的关系。那到底有什么样的关系呢？我们接着往下看，我从正则的发展历史给你讲起。</p><h2>正则表达式简史</h2><p>正则表达式的起源，可以追溯到，早期神经系统如何工作的研究。在20世纪40年代，有两位神经生理学家（Warren  McCulloch和Walter Pitts），研究出了一种用数学方式来描述神经网络的方法。</p><p>1956年，一位数学家（Stephen Kleene）发表了一篇标题为《<a href=\"https://www.doc88.com/p-9763182364861.html\">神经网络事件表示法和有穷自动机</a>》的论文。这篇论文描述了一种叫做“正则集合（Regular Sets）”的符号。</p><!-- [[[read_end]]] --><p>随后，大名鼎鼎的Unix之父Ken Thompson于1968年发表了文章《<a href=\"https://www.fing.edu.uy/inco/cursos/intropln/material/p419-thompson.pdf\">正则表达式搜索算法</a>》，并且将正则引入了自己开发的编辑器qed，以及之后的编辑器ed中，然后又移植到了大名鼎鼎的文本搜索工具grep中。自此，正则表达式被广泛应用到Unix系统或类Unix系统(如macOS、Linux)的各种工具中。</p><p>随后，由于正则功能强大，非常实用，越来越多的语言和工具都开始支持正则。不过遗憾的是，由于没有尽早确立标准，导致各种语言和工具中的正则虽然功能大致类似，但仍然有不少细微差别。</p><p>于是，诞生于1986年的POSIX开始进行标准化的尝试。<a href=\"https://standards.ieee.org/develop/wg/POSIX.html\">POSIX</a>作为一系列规范，定义了Unix操作系统应当支持的功能，其中也包括正则表达式的规范。因此，Unix系统或类Unix系统上的大部分工具，如grep、sed、awk等，均遵循该标准。我们把这些遵循POSIX正则表达式规范的正则表达式，称为<strong>POSIX流派</strong>的正则表达式。</p><p>在1987年12月，Larry Wall发布了Perl语言第一版，因其功能强大一票走红，所引入的正则表达式功能大放异彩。之后Perl语言中的正则表达式不断改进，影响越来越大。于是在此基础上，1997年又诞生了<a href=\"http://www.pcre.org/\">PCRE</a>——<strong>Perl兼容正则表达式</strong>（Perl Compatible Regular Expressions）。</p><p>PCRE是一个兼容Perl语言正则表达式的解析引擎，是由Philip Hazel开发的，为很多现代语言和工具所普遍使用。除了Unix上的工具遵循POSIX标准，PCRE现已成为其他大部分语言和工具隐然遵循的标准。</p><p>之后，正则表达式在各种计算机语言或各种应用领域得到了更为广泛的应用和发展。<strong>POSIX流派</strong> 与 <strong>PCRE流派</strong> 是目前正则表达式流派中的两大最主要的流派。</p><h2>正则表达式流派</h2><p>就像前面说的一样，目前正则表达式主要有两大流派（Flavor）：POSIX流派与PCRE流派。下面我们分别来看看。</p><h3>1. POSIX流派</h3><p>这里我们先简要介绍一下POSIX流派。POSIX 规范定义了正则表达式的两种标准：</p><ul>\n<li><strong>BRE标准</strong>（Basic Regular Expression 基本正则表达式）；</li>\n<li><strong>ERE标准</strong>（Extended Regular Expression 扩展正则表达式）。</li>\n</ul><p>接下来，我们一起来看一下这两种标准的异同点。</p><h4>BRE标准 和 ERE标准</h4><p>早期BRE与ERE标准的区别主要在于，BRE标准不支持量词问号和加号，也不支持多选分支结构管道符。BRE标准在使用花括号，圆括号时要转义才能表示特殊含义。BRE标准用起来这么不爽，于是有了 ERE标准，在使用花括号，圆括号时不需要转义了，还支持了问号、加号 和 多选分支。</p><p>我们现在使用的Linux发行版，大多都集成了GNU套件。GNU在实现POSIX标准时，做了一定的扩展，主要有以下三点扩展。</p><ol>\n<li>GNU BRE支持了 +、?，但转义了才表示特殊含义，即需要用<code>\\+、\\?</code>表示。</li>\n<li>GNU BRE支持管道符多选分支结构，同样需要转义，即用 <code>\\|</code>表示。</li>\n<li>GNU ERE也支持使用反引用，和BRE一样，使用 \\1、\\2…\\9 表示。</li>\n</ol><p>BRE标准和ERE标准的详细区别，我给了你一个参考图，你可以看一下，浅黄色背景是BRE和ERE不同的地方，三处天蓝色字体是GNU扩展。</p><p><img src=\"https://static001.geekbang.org/resource/image/53/6f/53fe0982c70fe89dff733345a6816e6f.png?wh=960*540\" alt=\"\"></p><p>总之，GNU BRE 和 GNU ERE 它们的功能特性并没有太大区别，区别是在于部分语法层面上，主要是一些字符要不要转义。</p><h4>POSIX字符组</h4><p>POSIX流派还有一个特殊的地方，就是有自己的字符组，叫POSIX字符组。这个类似于我们之前学习的 \\d 表示数字，\\s表示空白符等，POSIX中也定义了一系列的字符组。具体的清单和解释如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c3/ya/c32024952cb6af3f78d9c08d9b5b3yya.png?wh=1162*1022\" alt=\"\"></p><h3>2. PCRE流派</h3><p>除了POSIX标准外，还有一个Perl分支，也就是我们现在熟知的PCRE。随着Perl语言的发展，Perl语言中的正则表达式功能越来越强悍，为了把Perl语言中正则的功能移植到其他语言中，PCRE就诞生了。</p><p>目前大部分常用编程语言都是源于PCRE标准，这个流派显著特征是有\\d、\\w、\\s这类字符组简记方式。</p><p>不过，虽然PCRE流派是从Perl语言中衍生出来的，但与Perl语言中的正则表达式在语法上还是有一些细微差异，比如PHP的preg正则表达式(Perl Regular Expression)与Perl正则表达式的差异可看<a href=\"http://php.net/manual/zh/reference.pcre.pattern.differences.php\">这里</a>。</p><p>考虑到目前绝大部分常用编程语言所采用的正则引擎，基本都属于PCRE流派的现实情况，我们的课程也是主要讲解PCRE流派。前面，对于正则表达式语法元素的解释都是以PCRE流派为准。</p><h4>PCRE流派的兼容问题</h4><p>虽然PCRE流派是与Perl正则表达式相兼容的流派，但这种兼容在各种语言和工具中还存在程度上的差别，这包括了直接兼容与间接兼容两种情况。</p><p>而且，即便是直接兼容，也并非完全兼容，还是存在部分不兼容的情况。原因也很简单，Perl语言中的正则表达式在不断改进和升级之中，其他语言和工具不可能完全做到实时跟进与更新。</p><ul>\n<li><strong>直接兼容</strong>，PCRE流派中与Perl正则表达式直接兼容的语言或工具。比如Perl、PHP  preg、PCRE库等，一般称之为Perl系。</li>\n<li><strong>间接兼容</strong>，比如Java系（包括Java、Groovy、Scala等）、Python系（包括Python2和Python3）、JavaScript系（包括原生JavaScript和扩展库XRegExp）、.Net系（包括C#、VB.Net等）等。</li>\n</ul><h2>在Linux中使用正则</h2><p>在遵循POSIX规范的UNIX/LINUX系统上，按照 <strong>BRE标准</strong> 实现的有 grep、sed 和 vi/vim 等，而按照 <strong>ERE标准</strong> 实现的有 egrep、awk 等。</p><p>在UNIX/LINUX系统里PCRE流派与POSIX流派的对比，我为你整理了一个表，你可以看一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/eb/85/ebfd65253886552f034c50da3674ce85.png?wh=1506*1000\" alt=\"\"></p><p>刚刚我们提到了工具对应的实现标准，其实有一些工具实现同时兼容多种正则标准，比如前面我们讲到的 grep 和 sed。如果在使用时加上-E选项，就是使用ERE标准；如果加上-P选项，就是使用PCRE标准。</p><pre><code>使用 ERE 标准\ngrep -E '[[:digit:]]+' access.log\n\n使用 PCRE 标准\ngrep -P '\\d+' access.log\n\n</code></pre><p>在使用具体命令时，如何知道属于哪个流派呢？你不用担心太多了记不住。在Linux系统中有个 man 命令可以帮助我们。比如，我在 macOS 上执行 man grep ，可以看到选项 -G 是指定使用 BRE标准（默认），-E是ERE标准，-P是PCRE标准。所以，在使用具体工具时，你通过这个方法查一下命令的说明就好了。</p><p><img src=\"https://static001.geekbang.org/resource/image/1d/bc/1d43a1287e7881b87428ede0f85b63bc.png?wh=1468*678\" alt=\"\"></p><p>我们再看开篇提出的问题。</p><p>通过今天的学习，我们搞懂了各流派的差异，以及命令实现的是哪个正则标准。在 grep 中使用 \\d+ 查找不到结果，是因为 grep 属于 BRE 流派，不支持 \\d 来表示数字，加号也要转义才能表示量词的一到多次，所以无法找出数字那一行。如果你一定要用BRE流派，可以通过<strong>使<strong><strong>用</strong></strong>POSIX字符组</strong> 和 <strong>转义加号</strong> 来实现。而egrep属于ERE流派，也不支持 \\d，\\d 相当于字母 d，所以找到了字母那一行。</p><p><img src=\"https://static001.geekbang.org/resource/image/f1/09/f183b6fb3fba964ab9a9c3f8aa159b09.png?wh=740*494?wh=740*494\" alt=\"\"></p><p>在grep命令中，你可以指定参数-P来使用PCRE流派，这样就和我们之前学习到的是一致的了。知道了原因之后，你应该能写出相应的解决方法。下图是一些能工作的方法。</p><p><img src=\"https://static001.geekbang.org/resource/image/a3/b2/a3bbeb6aa533cd06ea5d8f3b9e0b96b2.png?wh=780*626\" alt=\"\"></p><p>为了方便加深你的理解，我给你提供了一个例子来帮你巩固。你可以使用下面的文本，在Linux中使用grep命令练习查找包含一到多个数字的行。</p><pre><code>123456\nabcdef\n\\d\n\\d+\nd+\n</code></pre><h2>总结</h2><p>好了，今天的内容讲完了，我来带你总结回顾一下。</p><p>今天我带你简单回顾了下正则表达式的历史。正则主要有两大流派，分别是POSIX流派和PCRE流派。其中POSIX流派有两个标准，分别是BRE标准和ERE标准，<strong>一般情况下，我们面对的都是GNU BRE和GNU ERE。它们的主要区别在于，前者要转义。</strong>另外， POSIX流派一个特点就是有自己的字符组POSIX 字符组，这不同于常见的 \\d 等字符组。</p><p>PCRE流派是如今大多数编程语言实现的流派，最大的特点就是支持\\d\\s\\w等，我们前面讲的内容也是基于这个流派进行的。</p><p>如果你需要在类Unix平台命令等上使用正则，使用前需要搞清楚工具属于哪个标准，比如grep、sed、vi/vim 等属于BRE标准，egrep、awk 属于ERE标准。而sed -P、grep -P等属于PCRE流派。这些也不需要死记硬背，使用时用man命令看一下就好了。</p><p>我在这里给你放了一张今天所讲内容的总结脑图，你可以看一下。另外我还给你提供了一个记忆小窍门，你可以着重记忆一下这句话：<strong>GNU ERE名称中有两个E，不需要再转义。而GNU BRE 只有一个E，使用时“花圆问管加”时都要转义</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/23/2f/239d9c1cc82d840b7b27492c7b4c222f.png?wh=1920*1519\" alt=\"\"></p><p>此外，我还给了你一个Linux/Unix工具与正则表达式的POSIX规范（余晟）的<a href=\"https://www.infoq.cn/article/2011/07/regular-expressions-6-POSIX/\">参考链接</a>，你可以看一下。</p><h2>课后思考</h2><p>最后，我们来做一个小练习吧。在Linux上使用grep命令，分别实现使用不同的标准（即 BRE、ERE、PCRE ），来查找含有 ftp、http 或 https 的行。你可以动手体验一下不同标准的区别。</p><pre><code>https://time.geekbang.org\nftp://ftp.ncbi.nlm.nih.gov\nwww.baidu.com\nwww.ncbi.nlm.nih.gov\n</code></pre><p>好，今天的课程就结束了，希望可以帮助到你，也希望你在下方的留言区和我参与讨论，并把文章分享给你的朋友或者同事，一起交流一下。</p>","neighbors":{"left":{"article_title":"06 | 转义：正则中转义需要注意哪些问题？","id":252887},"right":{"article_title":"08 | 应用1：正则如何处理 Unicode 编码的文本？","id":254642}},"comments":[{"had_liked":false,"id":231058,"user_name":"设置昵称","can_delete":false,"product_type":"c1","uid":2011478,"ip_address":"","ucode":"9D31E4CE81CF3F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/b1/56/74078318.jpg","comment_is_top":false,"comment_ctime":1593572392,"is_pvip":false,"replies":[{"id":"85595","content":"感谢分享","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593793938,"ip_address":"","comment_id":231058,"utype":1}],"discussion_count":1,"race_medal":0,"score":"61723114536","product_id":100053301,"comment_content":"好像 Mac 中自带的 grep 早就不支持 -P 这个模式了,需要 brew install grep ,用这个版本覆盖系统的版本才能用 -P 这个参数","like_count":15,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500140,"discussion_content":"感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593793938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229868,"user_name":"虹炎","can_delete":false,"product_type":"c1","uid":1600615,"ip_address":"","ucode":"9E28ACEBFB26D5","user_header":"https://static001.geekbang.org/account/avatar/00/18/6c/67/07bcc58f.jpg","comment_is_top":false,"comment_ctime":1593169298,"is_pvip":false,"replies":[{"id":"84809","content":"赞，没问题。<br>https?  如果这个来表示 http 和 https 呢？","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593174376,"ip_address":"","comment_id":229868,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27362973074","product_id":100053301,"comment_content":"我的答案：<br>grep &#39;ftp\\|http\\|https\\|&#39; b.txt\t\t#POSIX-BRE标准<br>grep -E &#39;ftp|http|https&#39;  b.txt\t\t#POSIX-ERE标准<br>egrep &#39;ftp|http|https&#39; b.txt\t\t#POSIX-ERE标准<br>grep -P &#39;ftp|http|https&#39; b.txt\t\t#PCRE","like_count":7,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499676,"discussion_content":"赞，没问题。\nhttps?  如果这个来表示 http 和 https 呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593174376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1540705,"avatar":"https://static001.geekbang.org/account/avatar/00/17/82/61/5aabf184.jpg","nickname":"Fan","note":"","ucode":"32D7E6483D28FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287792,"discussion_content":"是我搞错了，是POSIX NFA引擎","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593539047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1540705,"avatar":"https://static001.geekbang.org/account/avatar/00/17/82/61/5aabf184.jpg","nickname":"Fan","note":"","ucode":"32D7E6483D28FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287791,"discussion_content":"grep是NFA引擎的，写在最后面的https会永远匹配不了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593538906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251508,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1601628380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18781497564","product_id":100053301,"comment_content":"正则难就难在不同流派，之前对此相当困惑","like_count":3},{"had_liked":false,"id":229836,"user_name":"Robot","can_delete":false,"product_type":"c1","uid":1181473,"ip_address":"","ucode":"7215462D5AC0FA","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/21/b3394aa2.jpg","comment_is_top":false,"comment_ctime":1593159216,"is_pvip":false,"replies":[{"id":"84811","content":"对的","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593174482,"ip_address":"","comment_id":229836,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14478061104","product_id":100053301,"comment_content":"## BRE<br>grep &#39;\\(f\\|ht\\)tps\\?.*&#39; a.txt<br><br>## ERE<br>grep -E &#39;(f|ht)tps?.*&#39; a.txt<br><br>## PCRE<br>grep -P &#39;(f|ht)tps?.*&#39; a.txt","like_count":3,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499661,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593174482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229966,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1593228705,"is_pvip":true,"replies":[{"id":"84924","content":"对的，ERE 和 PCRE 主要区别在于字符组，PCRE功能更丰富些，比如支持了 环视。<br><br>这里有一个详细的 Regex cheatsheet  可以参考：<br>https:&#47;&#47;remram44.github.io&#47;regex-cheatsheet&#47;regex.html","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593272158,"ip_address":"","comment_id":229966,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5888196001","product_id":100053301,"comment_content":"PCRE:  grep -P &#39;https?|ftp&#39;<br>ERE:  grep -E &#39;https?|ftp&#39;<br>BRE: grep  &#39;https\\?\\|ftp&#39;<br><br>这里 ERE 和 PCRE 是一样的写法了","like_count":1,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499718,"discussion_content":"对的，ERE 和 PCRE 主要区别在于字符组，PCRE功能更丰富些，比如支持了 环视。\n\n这里有一个详细的 Regex cheatsheet  可以参考：\nhttps://remram44.github.io/regex-cheatsheet/regex.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593272158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280981,"user_name":"lhs","can_delete":false,"product_type":"c1","uid":1252206,"ip_address":"","ucode":"41178CC21337FB","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/6e/1bc87ac8.jpg","comment_is_top":false,"comment_ctime":1614511216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614511216","product_id":100053301,"comment_content":"PCRE标准:grep -P &#39;(ftp|https?):&#47;&#47;.+&#39; <br>BRE标准:grep &#39;\\(ftp\\|https\\{0,1\\}\\):&#47;&#47;.\\{1,\\}&#39; <br>ERE标准:grep -E &#39;(ftp|https?):&#47;&#47;.+&#39;<br>BRE标准中需要转义圆括号、管道符号，量词?和+需要用区间\\{0,1\\}和\\{1,\\}表示,ERE标准中，圆括号、管道符号不需要转义,也支持量词?和+号。<br>","like_count":0},{"had_liked":false,"id":256093,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1603526131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603526131","product_id":100053301,"comment_content":"正则主要有两大流派，分别是 POSIX 流派和 PCRE 流派。其中 POSIX 流派有两个标准，分别是 BRE 标准和 ERE 标准，一般情况下，我们面对的都是 GNU BRE 和 GNU ERE。它们的主要区别在于，前者要转义。另外， POSIX 流派一个特点就是有自己的字符组 POSIX 字符组，这不同于常见的 \\d 等字符组。","like_count":0},{"had_liked":false,"id":249268,"user_name":"风","can_delete":false,"product_type":"c1","uid":1444483,"ip_address":"","ucode":"E1CE0825AAF805","user_header":"https://static001.geekbang.org/account/avatar/00/16/0a/83/f916f903.jpg","comment_is_top":false,"comment_ctime":1600533203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600533203","product_id":100053301,"comment_content":"请教老师，ECMAScript 支持的是哪个流派的","like_count":0},{"had_liked":false,"id":231142,"user_name":"wenxuan","can_delete":false,"product_type":"c1","uid":1171262,"ip_address":"","ucode":"36840291028D94","user_header":"https://static001.geekbang.org/account/avatar/00/11/df/3e/718d6f1b.jpg","comment_is_top":false,"comment_ctime":1593592495,"is_pvip":false,"replies":[{"id":"85473","content":"是的，不支持，如果想用可以考虑使用 perl 命令代替<br>https:&#47;&#47;askubuntu.com&#47;questions&#47;1050693&#47;sed-with-pcre-like-grep-p","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593705226,"ip_address":"","comment_id":231142,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593592495","product_id":100053301,"comment_content":"GNU sed不支持PCRE吧，没有-P选项","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500173,"discussion_content":"是的，不支持，如果想用可以考虑使用 perl 命令代替\nhttps://askubuntu.com/questions/1050693/sed-with-pcre-like-grep-p","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593705226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229818,"user_name":"felix","can_delete":false,"product_type":"c1","uid":1086157,"ip_address":"","ucode":"DF514D0BB9B508","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/cd/d39e568c.jpg","comment_is_top":false,"comment_ctime":1593155583,"is_pvip":false,"replies":[{"id":"84812","content":"可以参考一下这个 https:&#47;&#47;regex101.com&#47;r&#47;mJCvRx&#47;1<br>正则：var[\\w\\W]+?};<br>你可以再根据实际情况修改下","user_name":"作者回复","user_name_real":"伟忠","uid":"1112089","ctime":1593174760,"ip_address":"","comment_id":229818,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593155583","product_id":100053301,"comment_content":"还是得再请教老师！<br>输入是<br>var para = {<br>\ta: &#39;test;test&#39;,<br>\tb: {<br>\t\tc: a,<br>\t}<br>};<br>function funtest {<br>};<br><br>输出是<br>var para = {<br>\ta: &#39;test;test&#39;,<br>\tb: {<br>\t\tc: a,<br>\t}<br>};<br><br>【下面是上个问题2020-06-24】<br>谢谢老师对上个问题的回答，但是用单个字符}或;作为结尾肯定覆盖不了全部情况，变量里面也可能有括号。<br>所以我的问题是怎么拿到第一个以};一起结尾的字符串？谢谢！<br>var para = {<br>a: &#39;test;test&#39;,<br>b: {<br>c: a,<br>}<br>};<br>function funtest {<br>};<br><br>【下面是上个问题2020-06-22】<br>没什么基础，看完了这几期课程，还是有点晕。有个例子想老师帮我看看：<br>我想拿到script里的一个变量，script如下所示：<br>&lt;script&gt;<br>var para = {<br>a: &#39;test;test&#39;,<br>};<br>function funtest {<br>};<br>&lt;&#47;script&gt;<br><br>目标是拿到para这个变量，想法是拿到第一个};前的内容，但是目前只会拿到第一个;前的内容，但是;有时会出现在引号里面，想问下老师怎么修改如下python正则<br>var para = ([^;]+);","like_count":0,"discussions":[{"author":{"id":1112089,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/19/05a2695f.jpg","nickname":"伟忠","note":"","ucode":"FE77CF20ED6065","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499655,"discussion_content":"可以参考一下这个 https://regex101.com/r/mJCvRx/1\n正则：var[\\w\\W]+?};\n你可以再根据实际情况修改下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593174760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}