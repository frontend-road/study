{"id":413634,"title":"05｜get hands dirty：做一个图片服务器有多难？","content":"<p>你好，我是陈天。</p><p>上一讲我们只用了百来行代码就写出了 HTTPie 这个小工具，你是不是有点意犹未尽，今天我们就来再写一个实用的小例子，看看Rust还能怎么玩。</p><p>再说明一下，代码看不太懂完全没有关系，先不要强求理解，跟着我的节奏一行行写就好，<strong>先让自己的代码跑起来，感受 Rust 和自己常用语言的区别，看看代码风格是什么样的，就可以了</strong>。</p><p>今天的例子是我们在工作中都会遇到的需求：构建一个 Web Server，对外提供某种服务。类似上一讲的 HTTPie ，我们继续找一个已有的开源工具用 Rust 来重写，但是今天来挑战一个稍大一点的项目：构建一个类似 <a href=\"https://github.com/thumbor/thumbor\">Thumbor</a> 的图片服务器。</p><h2>Thumbor</h2><p>Thumbor 是 Python 下的一个非常著名的图片服务器，被广泛应用在各种需要动态调整图片尺寸的场合里。</p><p>它可以通过一个很简单的 HTTP 接口，实现图片的动态剪切和大小调整，另外还支持文件存储、替换处理引擎等其他辅助功能。我在之前的创业项目中还用过它，非常实用，性能也还不错。</p><p>我们看它的例子：</p><pre><code class=\"language-bash\">http://&lt;thumbor-server&gt;/300x200/smart/thumbor.readthedocs.io/en/latest/_images/logo-thumbor.png\n</code></pre><!-- [[[read_end]]] --><p>在这个例子里，Thumbor 可以对这个图片最后的 URL 使用 smart crop 剪切，并调整大小为 300x200 的尺寸输出，用户访问这个 URL 会得到一个 300x200 大小的缩略图。</p><p><strong>我们今天就来实现它最核心的功能，对图片进行动态转换</strong>。你可以想一想，如果用你最熟悉的语言，要实现这个服务，怎么设计，需要用到些什么库，大概用多少行代码？如果用 Rust 的话，又大概会多少行代码？</p><p>带着你自己的一些想法，开始用 Rust 构建这个工具吧！目标依旧是，用大约 200 行代码实现我们的需求。</p><h3>设计分析</h3><p>既然是图片转换，最基本的肯定是要支持各种各样的转换功能，比如调整大小、剪切、加水印，甚至包括图片的滤镜但是，<strong>图片转换服务的难点其实在接口设计上</strong>，如何设计一套易用、简洁的接口，让图片服务器未来可以很轻松地扩展。</p><p>为什么这么说，你想如果有一天，产品经理来找你，突然想让原本只用来做缩略图的图片服务，支持老照片的滤镜效果，你准备怎么办？</p><p>Thumbor 给出的答案是，把要使用的处理方法的接口，按照一定的格式、一定的顺序放在 URL 路径中，不使用的图片处理方法就不放：</p><pre><code class=\"language-plain\">/hmac/trim/AxB:CxD/(adaptative-)(full-)fit-in/-Ex-F/HALIGN/VALIGN/smart/filters:FILTERNAME(ARGUMENT):FILTERNAME(ARGUMENT)/*IMAGE-URI*\n</code></pre><p>但这样不容易扩展，解析起来不方便，也很难满足对图片做多个有序操作的要求，比如对某个图片我想先加滤镜再加水印，对另一个图片我想先加水印再加滤镜。</p><p>另外，如果未来要加更多的参数，一个不小心，还很可能和已有的参数冲突，或者造成 API 的破坏性更新（breaking change）。作为开发者，我们永远不要低估产品经理那颗什么奇葩想法都有的躁动的心。</p><p>所以，在构思这个项目的时候，<strong>我们需要找一种更简洁且可扩展的方式，来描述对图片进行的一系列有序操作</strong>，比如说：先做 resize，之后对 resize 的结果添加一个水印，最后统一使用一个滤镜。</p><p>这样的有序操作，对应到代码中，可以用列表来表述，列表中每个操作可以是一个 enum，像这样：</p><pre><code class=\"language-rust\">// 解析出来的图片处理的参数\nstruct ImageSpec {\n    specs: Vec&lt;Spec&gt;\n}\n\n// 每个参数的是我们支持的某种处理方式\nenum Spec {\n    Resize(Resize),\n    Crop(Crop),\n    ...\n}\n\n// 处理图片的 resize\nstruct Resize {\n    width: u32,\n    height: u32\n}\n</code></pre><p>现在需要的数据结构有了，刚才分析了 thumbor 使用的方式拓展性不好，<strong>那我们如何设计一个任何客户端可以使用的、体现在 URL 上的接口，使其能够解析成我们设计的数据结构呢</strong>？</p><p>使用 querystring 么？虽然可行，但它在图片处理步骤比较复杂的时候，容易无序增长，比如我们要对某个图片做七八次转换，这个 querystring 就会非常长。</p><p>我这里的思路是使用 protobuf。protobuf 可以描述数据结构，几乎所有语言都有对 protobuf 的支持。当用 protobuf 生成一个 image spec 后，我们可以将其序列化成字节流。但字节流无法放在 URL 中，怎么办？我们可以用 base64 转码！</p><p>顺着这个思路，来试着写一下描述 image spec 的 protobuf 消息的定义：</p><pre><code class=\"language-protobuf\">message ImageSpec { repeated Spec specs = 1; }\n\nmessage Spec {\n  oneof data {\n    Resize resize = 1;\n    Crop crop = 2;\n    ...\n  }\n}\n\n...\n</code></pre><p>这样我们就可以在 URL 中，嵌入通过 protobuf  生成的 base64 字符串，来提供可扩展的图片处理参数。处理过的 URL 长这个样子：</p><pre><code class=\"language-plain\">http://localhost:3000/image/CgoKCAjYBBCgBiADCgY6BAgUEBQKBDICCAM/&lt;encoded origin url&gt;\n</code></pre><p><code>CgoKCAjYBBCgBiADCgY6BAgUEBQKBDICCAM</code> 描述了我们上面说的图片的处理流程：先做 resize，之后对 resize 的结果添加一个水印，最后统一使用一个滤镜。它可以用下面的代码实现：</p><pre><code class=\"language-rust\">fn print_test_url(url: &amp;str) {\n    use std::borrow::Borrow;\n    let spec1 = Spec::new_resize(600, 800, resize::SampleFilter::CatmullRom);\n    let spec2 = Spec::new_watermark(20, 20);\n    let spec3 = Spec::new_filter(filter::Filter::Marine);\n    let image_spec = ImageSpec::new(vec![spec1, spec2, spec3]);\n    let s: String = image_spec.borrow().into();\n    let test_image = percent_encode(url.as_bytes(), NON_ALPHANUMERIC).to_string();\n    println!(\"test url: http://localhost:3000/image/{}/{}\", s, test_image);\n}\n</code></pre><p>使用 protobuf 的好处是，序列化后的结果比较小巧，而且任何支持 protobuf 的语言都可以生成或者解析这个接口。</p><p>好，接口我们敲定好，接下来就是做一个 HTTP 服务器提供这个接口。在 HTTP 服务器对 /image 路由的处理流程里，我们需要从 URL 中获取原始的图片，然后按照 image spec 依次处理，最后把处理完的字节流返回给用户。</p><p>在这个流程中，显而易见能够想到的优化是，<strong>为原始图片的获取过程，提供一个 LRU（Least Recently Used）缓存</strong>，因为访问外部网络是整个路径中最缓慢也最不可控的环节。</p><p><img src=\"https://static001.geekbang.org/resource/image/70/9c/705642e227462ca4a100f73c343af89c.jpg?wh=1920x1140\" alt=\"图片\"></p><p>分析完后，是不是感觉 thumbor 也没有什么复杂的？不过你一定会有疑问：200 行代码真的可以完成这么多工作么？我们先写着，完成之后再来统计一下。</p><h3>protobuf 的定义和编译</h3><p>这个项目我们需要很多依赖，就不一一介绍了，未来在你的学习、工作中，大部分依赖你都会渐渐遇到和使用到。</p><p>我们照样先 “cargo new thumbor” 生成项目，然后在项目的 Cargo.toml 中添加这些依赖：</p><pre><code class=\"language-bash\">[dependencies]\naxum = \"0.2\" # web 服务器\nanyhow = \"1\" # 错误处理\nbase64 = \"0.13\" # base64 编码/解码\nbytes = \"1\" # 处理字节流\nimage = \"0.23\" # 处理图片\nlazy_static = \"1\" # 通过宏更方便地初始化静态变量\nlru = \"0.6\" # LRU 缓存\npercent-encoding = \"2\" # url 编码/解码\nphoton-rs = \"0.3\" # 图片效果\nprost = \"0.8\" # protobuf 处理\nreqwest = \"0.11\" # HTTP cliebnt\nserde = { version = \"1\", features = [\"derive\"] } # 序列化/反序列化数据\ntokio = { version = \"1\", features = [\"full\"] } # 异步处理\ntower = { version = \"0.4\", features = [\"util\", \"timeout\", \"load-shed\", \"limit\"] } # 服务处理及中间件\ntower-http = { version = \"0.1\", features = [\"add-extension\", \"compression-full\", \"trace\" ] } # http 中间件\ntracing = \"0.1\" # 日志和追踪\ntracing-subscriber = \"0.2\" # 日志和追踪\n\n[build-dependencies]\nprost-build = \"0.8\" # 编译 protobuf\n</code></pre><p>在项目根目录下，生成一个 abi.proto 文件，写入我们支持的图片处理服务用到的数据结构：</p><pre><code class=\"language-protobuf\">syntax = \"proto3\";\n\npackage abi; // 这个名字会被用作编译结果，prost 会产生：abi.rs\n\n// 一个 ImageSpec 是一个有序的数组，服务器按照 spec 的顺序处理\nmessage ImageSpec { repeated Spec specs = 1; }\n\n// 处理图片改变大小\nmessage Resize {\n  uint32 width = 1;\n  uint32 height = 2;\n\n  enum ResizeType {\n    NORMAL = 0;\n    SEAM_CARVE = 1;\n  }\n\n  ResizeType rtype = 3;\n\n  enum SampleFilter {\n    UNDEFINED = 0;\n    NEAREST = 1;\n    TRIANGLE = 2;\n    CATMULL_ROM = 3;\n    GAUSSIAN = 4;\n    LANCZOS3 = 5;\n  }\n\n  SampleFilter filter = 4;\n}\n\n// 处理图片截取\nmessage Crop {\n  uint32 x1 = 1;\n  uint32 y1 = 2;\n  uint32 x2 = 3;\n  uint32 y2 = 4;\n}\n\n// 处理水平翻转\nmessage Fliph {}\n// 处理垂直翻转\nmessage Flipv {}\n// 处理对比度\nmessage Contrast { float contrast = 1; }\n// 处理滤镜\nmessage Filter {\n  enum Filter {\n    UNSPECIFIED = 0;\n    OCEANIC = 1;\n    ISLANDS = 2;\n    MARINE = 3;\n    // more: https://docs.rs/photon-rs/0.3.1/photon_rs/filters/fn.filter.html\n  }\n  Filter filter = 1;\n}\n\n// 处理水印\nmessage Watermark {\n  uint32 x = 1;\n  uint32 y = 2;\n}\n\n// 一个 spec 可以包含上述的处理方式之一\nmessage Spec {\n  oneof data {\n    Resize resize = 1;\n    Crop crop = 2;\n    Flipv flipv = 3;\n    Fliph fliph = 4;\n    Contrast contrast = 5;\n    Filter filter = 6;\n    Watermark watermark = 7;\n  }\n}\n\n</code></pre><p>这包含了我们支持的图片处理服务，以后可以轻松扩展它来支持更多的操作。</p><p>protobuf 是一个向下兼容的工具，所以在服务器不断支持更多功能时，还可以和旧版本的客户端兼容。在 Rust 下，我们可以用 <a href=\"https://github.com/tokio-rs/prost\">prost</a> 来使用和编译 protobuf。同样，在项目根目录下，创建一个 build.rs，写入以下代码：</p><pre><code class=\"language-rust\">fn main() {\n    prost_build::Config::new()\n        .out_dir(\"src/pb\")\n        .compile_protos(&amp;[\"abi.proto\"], &amp;[\".\"])\n        .unwrap();\n}\n</code></pre><p>build.rs 可以在编译 cargo 项目时，做额外的编译处理。这里我们使用 prost_build 把 abi.proto 编译到 src/pb 目录下。</p><p>这个目录现在还不存在，你需要  <code>mkdir src/pb</code> 创建它。运行  <code>cargo build</code>，你会发现在 src/pb 下，有一个 abi.rs 文件被生成出来，这个文件包含了从 protobuf 消息转换出来的 Rust 数据结构。我们先不用管 prost 额外添加的各种标记宏，就把它们当成普通的数据结构使用即可。</p><p>接下来，我们创建 src/pb/mod.rs，第三讲说过，<strong>一个目录下的所有代码，可以通过 mod.rs 声明</strong>。在这个文件中，我们引入 abi.rs，并且撰写一些辅助函数。这些辅助函数主要是为了，让 ImageSpec 可以被方便地转换成字符串，或者从字符串中恢复。</p><p>另外，我们还写了一个测试确保功能的正确性，你可以  <code>cargo test</code> 测试一下。记得在 main.rs 里添加  <code>mod pb;</code> 引入这个模块。</p><pre><code class=\"language-rust\">use base64::{decode_config, encode_config, URL_SAFE_NO_PAD};\nuse photon_rs::transform ::SamplingFilter;\nuse prost::Message;\nuse std::convert::TryFrom;\n\nmod abi; // 声明 abi.rs\npub use abi::*;\n\nimpl ImageSpec {\n    pub fn new(specs: Vec&lt;Spec&gt;) -&gt; Self {\n        Self { specs }\n    }\n}\n\n// 让 ImageSpec 可以生成一个字符串\nimpl From&lt;&amp;ImageSpec&gt; for String {\n    fn from(image_spec: &amp;ImageSpec) -&gt; Self {\n        let data = image_spec.encode_to_vec();\n        encode_config(data, URL_SAFE_NO_PAD)\n    }\n}\n\n// 让 ImageSpec 可以通过一个字符串创建。比如 s.parse().unwrap()\nimpl TryFrom&lt;&amp;str&gt; for ImageSpec {\n    type Error = anyhow::Error;\n\n    fn try_from(value: &amp;str) -&gt; Result&lt;Self, Self::Error&gt; {\n        let data = decode_config(value, URL_SAFE_NO_PAD)?;\n        Ok(ImageSpec::decode(&amp;data[..])?)\n    }\n}\n\n// 辅助函数，photon_rs 相应的方法里需要字符串\nimpl filter::Filter {\n    pub fn to_str(&amp;self) -&gt; Option&lt;&amp;'static str&gt; {\n        match self {\n            filter::Filter::Unspecified =&gt; None,\n            filter::Filter::Oceanic =&gt; Some(\"oceanic\"),\n            filter::Filter::Islands =&gt; Some(\"islands\"),\n            filter::Filter::Marine =&gt; Some(\"marine\"),\n        }\n    }\n}\n\n// 在我们定义的 SampleFilter 和 photon_rs 的 SamplingFilter 间转换\nimpl From&lt;resize::SampleFilter&gt; for SamplingFilter {\n    fn from(v: resize::SampleFilter) -&gt; Self {\n        match v {\n            resize::SampleFilter::Undefined =&gt; SamplingFilter::Nearest,\n            resize::SampleFilter::Nearest =&gt; SamplingFilter::Nearest,\n            resize::SampleFilter::Triangle =&gt; SamplingFilter::Triangle,\n            resize::SampleFilter::CatmullRom =&gt; SamplingFilter::CatmullRom,\n            resize::SampleFilter::Gaussian =&gt; SamplingFilter::Gaussian,\n            resize::SampleFilter::Lanczos3 =&gt; SamplingFilter::Lanczos3,\n        }\n    }\n}\n\n// 提供一些辅助函数，让创建一个 spec 的过程简单一些\nimpl Spec {\n    pub fn new_resize_seam_carve(width: u32, height: u32) -&gt; Self {\n        Self {\n            data: Some(spec::Data::Resize(Resize {\n                width,\n                height,\n                rtype: resize::ResizeType::SeamCarve as i32,\n                filter: resize::SampleFilter::Undefined as i32,\n            })),\n        }\n    }\n\n    pub fn new_resize(width: u32, height: u32, filter: resize::SampleFilter) -&gt; Self {\n        Self {\n            data: Some(spec::Data::Resize(Resize {\n                width,\n                height,\n                rtype: resize::ResizeType::Normal as i32,\n                filter: filter as i32,\n            })),\n        }\n    }\n\n    pub fn new_filter(filter: filter::Filter) -&gt; Self {\n        Self {\n            data: Some(spec::Data::Filter(Filter {\n                filter: filter as i32,\n            })),\n        }\n    }\n\n    pub fn new_watermark(x: u32, y: u32) -&gt; Self {\n        Self {\n            data: Some(spec::Data::Watermark(Watermark { x, y })),\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::borrow::Borrow;\n    use std::convert::TryInto;\n\n    #[test]\n    fn encoded_spec_could_be_decoded() {\n        let spec1 = Spec::new_resize(600, 600, resize::SampleFilter::CatmullRom);\n        let spec2 = Spec::new_filter(filter::Filter::Marine);\n        let image_spec = ImageSpec::new(vec![spec1, spec2]);\n        let s: String = image_spec.borrow().into();\n        assert_eq!(image_spec, s.as_str().try_into().unwrap());\n    }\n}\n\n</code></pre><h3>引入 HTTP 服务器</h3><p>处理完和 protobuf  相关的内容，我们来处理 HTTP 服务的流程。Rust 社区有很多高性能的 Web 服务器，比如<a href=\"https://github.com/actix/actix-web\">actix-web</a> 、<a href=\"https://github.com/SergioBenitez/Rocket\">rocket</a> 、<a href=\"https://github.com/seanmonstar/warp\">warp</a> ，以及最近新出的 <a href=\"https://github.com/tokio-rs/axum\">axum</a>。我们就来用新鲜出炉的 axum 做这个服务器。</p><p>根据 axum 的文档，我们可以构建出下面的代码：</p><pre><code class=\"language-rust\">use axum::{extract::Path, handler::get, http::StatusCode, Router};\nuse percent_encoding::percent_decode_str;\nuse serde::Deserialize;\nuse std::convert::TryInto;\n\n// 引入 protobuf 生成的代码，我们暂且不用太关心他们\nmod pb;\n\nuse pb::*;\n\n// 参数使用 serde 做 Deserialize，axum 会自动识别并解析\n#[derive(Deserialize)]\nstruct Params {\n    spec: String,\n    url: String,\n}\n\n#[tokio::main]\nasync fn main() {\n    // 初始化 tracing\n    tracing_subscriber::fmt::init();\n\n    // 构建路由\n    let app = Router::new()\n        // `GET /image` 会执行 generate 函数，并把 spec 和 url 传递过去\n        .route(\"/image/:spec/:url\", get(generate));\n\n    // 运行 web 服务器\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\n    tracing::debug!(\"listening on {}\", addr);\n    axum::Server::bind(&amp;addr)\n        .serve(app.into_make_service())\n        .await\n        .unwrap();\n}\n\n// 目前我们就只把参数解析出来\nasync fn generate(Path(Params { spec, url }): Path&lt;Params&gt;) -&gt; Result&lt;String, StatusCode&gt; {\n    let url = percent_decode_str(&amp;url).decode_utf8_lossy();\n    let spec: ImageSpec = spec\n        .as_str()\n        .try_into()\n        .map_err(|_| StatusCode::BAD_REQUEST)?;\n\t\tOk(format!(\"url: {}\\n spec: {:#?}\", url, spec))\n}\n</code></pre><p>把它们添加到 main.rs 后，使用  <code>cargo run</code> 运行服务器。然后我们就可以用上一讲做的 HTTPie 测试（eat your own dog food）：</p><pre><code class=\"language-rust\">httpie get \"http://localhost:3000/image/CgoKCAjYBBCgBiADCgY6BAgUEBQKBDICCAM/https%3A%2F%2Fimages%2Epexels%2Ecom%2Fphotos%2F2470905%2Fpexels%2Dphoto%2D2470905%2Ejpeg%3Fauto%3Dcompress%26cs%3Dtinysrgb%26dpr%3D2%26h%3D750%26w%3D1260\"\nHTTP/1.1 200 OK\n\ncontent-type: \"text/plain\"\ncontent-length: \"901\"\ndate: \"Wed, 25 Aug 2021 18:03:50 GMT\"\n\nurl: https://images.pexels.com/photos/2470905/pexels-photo-2470905.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=2&amp;h=750&amp;w=1260\n spec: ImageSpec {\n    specs: [\n        Spec {\n            data: Some(\n                Resize(\n                    Resize {\n                        width: 600,\n                        height: 800,\n                        rtype: Normal,\n                        filter: CatmullRom,\n                    },\n                ),\n            ),\n        },\n        Spec {\n            data: Some(\n                Watermark(\n                    Watermark {\n                        x: 20,\n                        y: 20,\n                    },\n                ),\n            ),\n        },\n        Spec {\n            data: Some(\n                Filter(\n                    Filter {\n                        filter: Marine,\n                    },\n                ),\n            ),\n        },\n    ],\n</code></pre><p>Wow，Web 服务器的接口部分我们已经能够正确处理了。</p><p>写到这里，如果出现的语法让你觉得迷茫，不要担心。因为我们还没有讲所有权、类型系统、泛型等内容，所以很多细节你会看不懂。今天这个例子，你只要跟我的思路走，了解整个处理流程就可以了。</p><h3>获取源图并缓存</h3><p>好，当接口已经可以工作之后，我们再来处理获取源图的逻辑。</p><p>根据之前的设计，需要<strong>引入 LRU cache 来缓存源图</strong>。一般 Web 框架都会有中间件来处理全局的状态，axum 也不例外，可以使用 AddExtensionLayer 添加一个全局的状态，这个状态目前就是 LRU cache，在内存中缓存网络请求获得的源图。</p><p>我们把 main.rs 的代码，改成下面的代码：</p><pre><code class=\"language-rust\">use anyhow::Result;\nuse axum::{\n    extract::{Extension, Path},\n    handler::get,\n    http::{HeaderMap, HeaderValue, StatusCode},\n    AddExtensionLayer, Router,\n};\nuse bytes::Bytes;\nuse lru::LruCache;\nuse percent_encoding::{percent_decode_str, percent_encode, NON_ALPHANUMERIC};\nuse serde::Deserialize;\nuse std::{\n    collections::hash_map::DefaultHasher,\n    convert::TryInto,\n    hash::{Hash, Hasher},\n    sync::Arc,\n};\nuse tokio::sync::Mutex;\nuse tower::ServiceBuilder;\nuse tracing::{info, instrument};\n\nmod pb;\n\nuse pb::*;\n\n#[derive(Deserialize)]\nstruct Params {\n    spec: String,\n    url: String,\n}\ntype Cache = Arc&lt;Mutex&lt;LruCache&lt;u64, Bytes&gt;&gt;&gt;;\n\n#[tokio::main]\nasync fn main() {\n    // 初始化 tracing\n    tracing_subscriber::fmt::init();\n    let cache: Cache = Arc::new(Mutex::new(LruCache::new(1024)));\n    // 构建路由\n    let app = Router::new()\n        // `GET /` 会执行\n        .route(\"/image/:spec/:url\", get(generate))\n        .layer(\n            ServiceBuilder::new()\n                .layer(AddExtensionLayer::new(cache))\n                .into_inner(),\n        );\n\n    // 运行 web 服务器\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\n\n    print_test_url(\"https://images.pexels.com/photos/1562477/pexels-photo-1562477.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=3&amp;h=750&amp;w=1260\");\n\n    info!(\"Listening on {}\", addr);\n\n    axum::Server::bind(&amp;addr)\n        .serve(app.into_make_service())\n        .await\n        .unwrap();\n}\n\nasync fn generate(\n    Path(Params { spec, url }): Path&lt;Params&gt;,\n    Extension(cache): Extension&lt;Cache&gt;,\n) -&gt; Result&lt;(HeaderMap, Vec&lt;u8&gt;), StatusCode&gt; {\n    let spec: ImageSpec = spec\n        .as_str()\n        .try_into()\n        .map_err(|_| StatusCode::BAD_REQUEST)?;\n\n    let url: &amp;str = &amp;percent_decode_str(&amp;url).decode_utf8_lossy();\n    let data = retrieve_image(&amp;url, cache)\n        .await\n        .map_err(|_| StatusCode::BAD_REQUEST)?;\n\n    // TODO: 处理图片\n\n    let mut headers = HeaderMap::new();\n\n    headers.insert(\"content-type\", HeaderValue::from_static(\"image/jpeg\"));\n    Ok((headers, data.to_vec()))\n}\n\n#[instrument(level = \"info\", skip(cache))]\nasync fn retrieve_image(url: &amp;str, cache: Cache) -&gt; Result&lt;Bytes&gt; {\n    let mut hasher = DefaultHasher::new();\n    url.hash(&amp;mut hasher);\n    let key = hasher.finish();\n\n    let g = &amp;mut cache.lock().await;\n    let data = match g.get(&amp;key) {\n        Some(v) =&gt; {\n            info!(\"Match cache {}\", key);\n            v.to_owned()\n        }\n        None =&gt; {\n            info!(\"Retrieve url\");\n            let resp = reqwest::get(url).await?;\n            let data = resp.bytes().await?;\n            g.put(key, data.clone());\n            data\n        }\n    };\n\n    Ok(data)\n}\n\n// 调试辅助函数\nfn print_test_url(url: &amp;str) {\n    use std::borrow::Borrow;\n    let spec1 = Spec::new_resize(500, 800, resize::SampleFilter::CatmullRom);\n    let spec2 = Spec::new_watermark(20, 20);\n    let spec3 = Spec::new_filter(filter::Filter::Marine);\n    let image_spec = ImageSpec::new(vec![spec1, spec2, spec3]);\n    let s: String = image_spec.borrow().into();\n    let test_image = percent_encode(url.as_bytes(), NON_ALPHANUMERIC).to_string();\n    println!(\"test url: http://localhost:3000/image/{}/{}\", s, test_image);\n}\n</code></pre><p>这段代码看起来多，其实主要就是添加了 retrieve_image 这个函数。对于图片的网络请求，我们先把 URL 做个哈希，在 LRU 缓存中查找，找不到才用 reqwest 发送请求。<br>\n你可以  <code>cargo run</code> 运行一下现在的代码：</p><pre><code class=\"language-rust\">❯ RUST_LOG=info cargo run --quiet\n\ntest url: http://localhost:3000/image/CgoKCAj0AxCgBiADCgY6BAgUEBQKBDICCAM/https%3A%2F%2Fimages%2Epexels%2Ecom%2Fphotos%2F1562477%2Fpexels%2Dphoto%2D1562477%2Ejpeg%3Fauto%3Dcompress%26cs%3Dtinysrgb%26dpr%3D3%26h%3D750%26w%3D1260\nAug 26 16:43:45.747&nbsp; INFO server2: Listening on 127.0.0.1:3000\n</code></pre><p>为了测试方便，我放了个辅助函数可以生成一个测试 URL，在浏览器中打开后会得到一个和源图一模一样的图片。这就说明，网络处理的部分，我们就搞定了。</p><h3>图片处理</h3><p>接下来，我们就可以处理图片了。Rust 下有一个不错的、偏底层的 <a href=\"https://github.com/image-rs/image\">image</a> 库，围绕它有很多上层的库，包括我们今天要使用 <a href=\"https://github.com/silvia-odwyer/photon\">photon_rs</a>。</p><p>我扫了一下它的源代码，感觉它不算一个特别优秀的库，内部有太多无谓的内存拷贝，所以性能还有不少提升空间。就算如此，从 photon_rs 自己的 <a href=\"https://silvia-odwyer.github.io/photon/\">benchmark</a> 看，也比 PIL / ImageMagick 性能好太多，这也算是 Rust 性能强大的一个小小佐证吧。</p><p><img src=\"https://static001.geekbang.org/resource/image/a2/e0/a236c61c10516437d529a00cff66a4e0.png?wh=1496x752\" alt=\"图片\"></p><p>因为 photo_rs 使用简单，这里我们也不太关心更高的性能，就暂且用它。然而，作为一个有追求的开发者，我们知道，有朝一日可能要用不同的 image 引擎替换它，所以我们设计一个 Engine trait：</p><pre><code class=\"language-rust\">// Engine trait：未来可以添加更多的 engine，主流程只需要替换 engine\npub trait Engine {\n    // 对 engine 按照 specs 进行一系列有序的处理\n    fn apply(&amp;mut self, specs: &amp;[Spec]);\n    // 从 engine 中生成目标图片，注意这里用的是 self，而非 self 的引用\n    fn generate(self, format: ImageOutputFormat) -&gt; Vec&lt;u8&gt;;\n}\n</code></pre><p>它提供两个方法，<strong>apply 方法对 engine 按照 specs 进行一系列有序的处理，generate 方法从 engine 中生成目标图片</strong>。</p><p>那么 apply 方法怎么实现呢？我们可以再设计一个 trait，这样可以为每个 Spec 生成对应处理：</p><pre><code class=\"language-rust\">// SpecTransform：未来如果添加更多的 spec，只需要实现它即可\npub trait SpecTransform&lt;T&gt; {\n    // 对图片使用 op 做 transform\n    fn transform(&amp;mut self, op: T);\n}\n</code></pre><p>好，有了这个思路，我们创建 src/engine 目录，并添加 src/engine/mod.rs，在这个文件里添加对 trait 的定义：</p><pre><code class=\"language-rust\">use crate::pb::Spec;\nuse image::ImageOutputFormat;\n\nmod photon;\npub use photon::Photon;\n\n// Engine trait：未来可以添加更多的 engine，主流程只需要替换 engine\npub trait Engine {\n    // 对 engine 按照 specs 进行一系列有序的处理\n    fn apply(&amp;mut self, specs: &amp;[Spec]);\n    // 从 engine 中生成目标图片，注意这里用的是 self，而非 self 的引用\n    fn generate(self, format: ImageOutputFormat) -&gt; Vec&lt;u8&gt;;\n}\n\n// SpecTransform：未来如果添加更多的 spec，只需要实现它即可\npub trait SpecTransform&lt;T&gt; {\n    // 对图片使用 op 做 transform\n    fn transform(&amp;mut self, op: T);\n}\n</code></pre><p>接下来我们再生成一个文件 src/engine/photon.rs，对 photon 实现 Engine trait，这个文件主要是一些功能的实现细节，就不详述了，你可以看注释。</p><pre><code class=\"language-rust\">use super::{Engine, SpecTransform};\nuse crate::pb::*;\nuse anyhow::Result;\nuse bytes::Bytes;\nuse image::{DynamicImage, ImageBuffer, ImageOutputFormat};\nuse lazy_static::lazy_static;\nuse photon_rs::{\n    effects, filters, multiple, native::open_image_from_bytes, transform, PhotonImage,\n};\nuse std::convert::TryFrom;\n\nlazy_static! {\n    // 预先把水印文件加载为静态变量\n    static ref WATERMARK: PhotonImage = {\n        // 这里你需要把我 github 项目下的对应图片拷贝到你的根目录\n        // 在编译的时候 include_bytes! 宏会直接把文件读入编译后的二进制\n        let data = include_bytes!(\"../../rust-logo.png\");\n        let watermark = open_image_from_bytes(data).unwrap();\n        transform::resize(&amp;watermark, 64, 64, transform::SamplingFilter::Nearest)\n    };\n}\n\n// 我们目前支持 Photon engine\npub struct Photon(PhotonImage);\n\n// 从 Bytes 转换成 Photon 结构\nimpl TryFrom&lt;Bytes&gt; for Photon {\n    type Error = anyhow::Error;\n\n    fn try_from(data: Bytes) -&gt; Result&lt;Self, Self::Error&gt; {\n        Ok(Self(open_image_from_bytes(&amp;data)?))\n    }\n}\n\nimpl Engine for Photon {\n    fn apply(&amp;mut self, specs: &amp;[Spec]) {\n        for spec in specs.iter() {\n            match spec.data {\n                Some(spec::Data::Crop(ref v)) =&gt; self.transform(v),\n                Some(spec::Data::Contrast(ref v)) =&gt; self.transform(v),\n                Some(spec::Data::Filter(ref v)) =&gt; self.transform(v),\n                Some(spec::Data::Fliph(ref v)) =&gt; self.transform(v),\n                Some(spec::Data::Flipv(ref v)) =&gt; self.transform(v),\n                Some(spec::Data::Resize(ref v)) =&gt; self.transform(v),\n                Some(spec::Data::Watermark(ref v)) =&gt; self.transform(v),\n                // 对于目前不认识的 spec，不做任何处理\n                _ =&gt; {}\n            }\n        }\n    }\n\n    fn generate(self, format: ImageOutputFormat) -&gt; Vec&lt;u8&gt; {\n        image_to_buf(self.0, format)\n    }\n}\n\nimpl SpecTransform&lt;&amp;Crop&gt; for Photon {\n    fn transform(&amp;mut self, op: &amp;Crop) {\n        let img = transform::crop(&amp;mut self.0, op.x1, op.y1, op.x2, op.y2);\n        self.0 = img;\n    }\n}\n\nimpl SpecTransform&lt;&amp;Contrast&gt; for Photon {\n    fn transform(&amp;mut self, op: &amp;Contrast) {\n        effects::adjust_contrast(&amp;mut self.0, op.contrast);\n    }\n}\n\nimpl SpecTransform&lt;&amp;Flipv&gt; for Photon {\n    fn transform(&amp;mut self, _op: &amp;Flipv) {\n        transform::flipv(&amp;mut self.0)\n    }\n}\n\nimpl SpecTransform&lt;&amp;Fliph&gt; for Photon {\n    fn transform(&amp;mut self, _op: &amp;Fliph) {\n        transform::fliph(&amp;mut self.0)\n    }\n}\n\nimpl SpecTransform&lt;&amp;Filter&gt; for Photon {\n    fn transform(&amp;mut self, op: &amp;Filter) {\n        match filter::Filter::from_i32(op.filter) {\n            Some(filter::Filter::Unspecified) =&gt; {}\n            Some(f) =&gt; filters::filter(&amp;mut self.0, f.to_str().unwrap()),\n            _ =&gt; {}\n        }\n    }\n}\n\nimpl SpecTransform&lt;&amp;Resize&gt; for Photon {\n    fn transform(&amp;mut self, op: &amp;Resize) {\n        let img = match resize::ResizeType::from_i32(op.rtype).unwrap() {\n            resize::ResizeType::Normal =&gt; transform::resize(\n                &amp;mut self.0,\n                op.width,\n                op.height,\n                resize::SampleFilter::from_i32(op.filter).unwrap().into(),\n            ),\n            resize::ResizeType::SeamCarve =&gt; {\n                transform::seam_carve(&amp;mut self.0, op.width, op.height)\n            }\n        };\n        self.0 = img;\n    }\n}\n\nimpl SpecTransform&lt;&amp;Watermark&gt; for Photon {\n    fn transform(&amp;mut self, op: &amp;Watermark) {\n        multiple::watermark(&amp;mut self.0, &amp;WATERMARK, op.x, op.y);\n    }\n}\n\n// photon 库竟然没有提供在内存中对图片转换格式的方法，只好手工实现\nfn image_to_buf(img: PhotonImage, format: ImageOutputFormat) -&gt; Vec&lt;u8&gt; {\n    let raw_pixels = img.get_raw_pixels();\n    let width = img.get_width();\n    let height = img.get_height();\n\n    let img_buffer = ImageBuffer::from_vec(width, height, raw_pixels).unwrap();\n    let dynimage = DynamicImage::ImageRgba8(img_buffer);\n\n    let mut buffer = Vec::with_capacity(32768);\n    dynimage.write_to(&amp;mut buffer, format).unwrap();\n    buffer\n}\n</code></pre><p>好，图片处理引擎就搞定了。这里用了一个水印图片，你可以去 <a href=\"https://github.com/tyrchen/geektime-rust/tree/master/05_thumbor\">GitHub repo</a> 下载，然后放在项目根目录下。我们同样把 engine  模块加入 main.rs，并引入 Photon：</p><pre><code class=\"language-rust\">mod engine;\nuse engine::{Engine, Photon};\nuse image::ImageOutputFormat;\n</code></pre><p>还记得 src/main.rs 的代码中，我们留了一个 TODO 么？</p><pre><code>// TODO: 处理图片\n\nlet mut headers = HeaderMap::new();\n\nheaders.insert(&quot;content-type&quot;, HeaderValue::from_static(&quot;image/jpeg&quot;));\nOk((headers, data.to_vec()))\n</code></pre><p>我们把这段替换掉，使用刚才写好的 Photon 引擎处理：</p><pre><code class=\"language-rust\">// 使用 image engine 处理\nlet mut engine: Photon = data\n    .try_into()\n    .map_err(|_| StatusCode::INTERNAL_SERVER_ERROR)?;\nengine.apply(&amp;spec.specs);\n\nlet image = engine.generate(ImageOutputFormat::Jpeg(85));\n\ninfo!(\"Finished processing: image size {}\", image.len());\nlet mut headers = HeaderMap::new();\n\nheaders.insert(\"content-type\", HeaderValue::from_static(\"image/jpeg\"));\nOk((headers, image))\n</code></pre><p>这样整个服务器的全部流程就完成了，完整的代码可以在 <a href=\"https://github.com/tyrchen/geektime-rust/tree/master/05_thumbor\">GitHub repo</a> 访问。</p><p>我在网上随手找了一张图片来测试下效果。用  <code>cargo build --release</code> 编译 thumbor 项目，然后打开日志运行：</p><pre><code class=\"language-rust\">RUST_LOG=info target/release/thumbor\n</code></pre><p>打开测试链接，在浏览器中可以看到左下角的处理后图片。（原图片来自 <a href=\"https://www.pexels.com/photo/woman-behind-banana-leaves-1562477/\">pexels</a>，发布者 <a href=\"https://www.pexels.com/@minan1398\">Min An</a>）</p><p><img src=\"https://static001.geekbang.org/resource/image/7f/f2/7f69bebe4f911f7587455966bdf3eaf2.jpg?wh=1533x2250\" alt=\"\" title=\"方便看对比效果，把两张图拼到一起了\"></p><p>成功了！这就是我们的 Thumbor 服务根据用户的请求缩小到 500x800、加了水印和 Marine 滤镜后的效果。</p><p>从日志看，第一次请求时因为没有缓存，需要请求源图，所以总共花了 400ms；如果你再刷新一下，后续对同一图片的请求，会命中缓存，花了大概 200ms。</p><pre><code class=\"language-bash\">Aug 25 15:09:28.035  INFO thumbor: Listening on 127.0.0.1:3000\nAug 25 15:09:30.523  INFO retrieve_image{url=\"&lt;https://images.pexels.com/photos/1562477/pexels-photo-1562477.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=3&amp;h=750&amp;w=1260&gt;\"}: thumbor: Retrieve url\nAug 25 15:09:30.950  INFO thumbor: Finished processing: image size 52674\nAug 25 15:09:35.037  INFO retrieve_image{url=\"&lt;https://images.pexels.com/photos/1562477/pexels-photo-1562477.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=3&amp;h=750&amp;w=1260&gt;\"}: thumbor: Match cache 13782279907884137652\nAug 25 15:09:35.254  INFO thumbor: Finished processing: image size 52674\n</code></pre><p>这个版本目前是一个没有详细优化过的版本，性能已经足够好。而且，像 Thumbor 这样的图片服务，前面还有 CDN（Content Distribution Network）扛压力，只有 CDN 需要回源时，才会访问到，所以也可以不用太优化。</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/9e/aca9f3e8acdd0e0daf07707c3a73cc9e.jpg?wh=1920x1140\" alt=\"图片\"></p><p>最后来看看目标完成得如何。如果不算 protobuf 生成的代码，Thumbor 这个项目，到目前为止我们写了 324 行代码：</p><pre><code class=\"language-rust\">❯ tokei src/main.rs src/engine/* src/pb/mod.rs\n-------------------------------------------------------------------------------\n&nbsp;Language&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Files&nbsp; &nbsp; &nbsp; &nbsp; Lines&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Code&nbsp; &nbsp; &nbsp;Comments&nbsp; &nbsp; &nbsp; &nbsp;Blanks\n-------------------------------------------------------------------------------\n&nbsp;Rust&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 394&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 324&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;22&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;48\n-------------------------------------------------------------------------------\n&nbsp;Total&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 394&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 324&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;22&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;48\n-------------------------------------------------------------------------------\n</code></pre><p>三百多行代码就把一个图片服务器的核心部分搞定了，不仅如此，还充分考虑到了架构的可扩展性，用 trait 实现了主要的图片处理流程，并且引入了缓存来避免不必要的网络请求。虽然比我们预期的 200 行代码多了 50% 的代码量，但我相信它进一步佐证了 Rust 强大的表达能力。</p><p>而且，<strong>通过合理使用 protobuf 定义接口和使用 trait 做图片引擎，未来添加新的功能非常简单</strong>，可以像搭积木一样垒上去，不会影响已有的功能，完全符合开闭原则（<a href=\"https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle\">Open-Closed Principle</a>）。</p><p>作为一门系统级语言，Rust 使用独特的内存管理方案，零成本地帮我们管理内存；作为一门高级语言，Rust 提供了足够强大的类型系统和足够完善的标准库，帮我们很容易写出低耦合、高内聚的代码。</p><h2>小结</h2><p>今天讲的 Thumbor 要比上一讲的 HTTPie 难度高一个数量级（完整代码在 <a href=\"https://github.com/tyrchen/geektime-rust/tree/master/05_thumbor\">GitHub repo</a> ），所以细节理解不了不打紧，但我相信你会进一步被 Rust 强大的表现力、抽象能力和解决实际问题的能力折服。</p><p>比如说，我们通过 Engine trait 分离了具体的图片处理引擎和主流程，让主流程变得干净清爽；同时在处理 protobuf 生成的数据结构时，大量使用了 From<t> / TryFrom<t> trait 做数据类型的转换，也是一种解耦（关注点分离）的思路。</t></t></p><p>听我讲得这么流畅，你是不是觉得我写的时候肯定不会犯错。其实并没有，我在用 axum 写源图获取的流程时，就因为使用 Mutex 的错误而被编译器毒打，花了些时间才解决。</p><p>但这种毒打是非常让人心悦诚服且快乐的，因为我知道，<strong>这样的并发问题一旦泄露到生产环境，解决起来大概率会毫无头绪，只能一点点试错可能有问题的代码</strong>，那个时候代价就远非和编译器搏斗的这十来分钟可比了。</p><p>所以只要你入了门，写 Rust 代码的过程绝对是一种享受，绝大多数错误在编译时就被揪出来了，你的代码只要编译能通过，基本上不需要担心它运行时的正确性。</p><p>也正是因为这样，在前期学习 Rust 的时候编译很难通过，导致我们直观感觉它是一门难学的语言，但其实它又很容易上手。这听起来矛盾，但确实是我自己的感受：它之所以学起来有些费力，有点像讲拉丁语系的人学习中文一样，<strong>要打破很多自己原有的认知，去拥抱新的思想和概念</strong>。但是只要多写多思考，时间长了，理解起来就是水到渠成的事。</p><h2>思考题</h2><p>之前提到通过合理使用 protobuf 定义接口和使用 trait 做图片引擎，未来添加新的功能非常简单。如果你学有余力，可以自己尝试一下。</p><p>我们看如何添加新功能：</p><ul>\n<li>首先添加新的 proto，定义新的 spec</li>\n<li>然后为 spec 实现 SpecTransform trait 和一些辅助函数</li>\n<li>最后在 Engine 中使用 spec</li>\n</ul><p>如果要换图片引擎呢？也很简单：</p><ul>\n<li>添加新的图片引擎，像 Photon 那样，实现 Engine trait 以及为每种 spec 实现 SpecTransform Trait。</li>\n<li>在 main.rs 里使用新的引擎。</li>\n</ul><p>欢迎在留言区分享你的思考，如果你觉得有收获，也欢迎你分享给你身边的朋友，邀他一起挑战。你的 Rust 学习第五次打卡成功，我们下一讲见！</p>","comments":[{"had_liked":false,"id":310006,"user_name":"葡萄","can_delete":false,"product_type":"c1","uid":1018673,"ip_address":"","ucode":"6E8597D1B09807","user_header":"http://thirdwx.qlogo.cn/mmopen/ajNVdqHZLLDoDeeNST87MZEdfT8n7yEWp06KsFCTs2ssFh2tbHu413nibrRObOia1Zn9pqiaHgIicVkSHRZM3LHOEA/132","comment_is_top":false,"comment_ctime":1630455183,"is_pvip":false,"replies":[{"id":"112312","content":"谢谢赏识。我希望这门课不光能教会大家语言本身，更重要的是如何用语言提供的能力优雅地解决实际问题。有的人能用 C 写出面向对象的代码；有的人能用 Java 写出 Fortran 的感觉。Rust 为我们提供了强大的抽象能力，我们要用好它。:)","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630463138,"ip_address":"","comment_id":310006,"utype":1}],"discussion_count":2,"race_medal":0,"score":"194903983503","product_id":100085301,"comment_content":"看老师的项目，语言已经不是最重要的了。思路和组织结构真是赏心悦目。","like_count":46,"discussions":[{"author":{"id":1347630,"avatar":"https://static001.geekbang.org/account/avatar/00/14/90/2e/0b8ee026.jpg","nickname":"盆栽Charming","note":"","ucode":"1AC57A471D8699","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391421,"discussion_content":"同样感觉，一个很复杂的事情，怎么能说的这么简单而又清晰。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1630459904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526094,"discussion_content":"谢谢赏识。我希望这门课不光能教会大家语言本身，更重要的是如何用语言提供的能力优雅地解决实际问题。有的人能用 C 写出面向对象的代码；有的人能用 Java 写出 Fortran 的感觉。Rust 为我们提供了强大的抽象能力，我们要用好它。:)","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630463138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310034,"user_name":"pedro","can_delete":false,"product_type":"c1","uid":1200704,"ip_address":"","ucode":"F40C839DDFD599","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/40/e57a736e.jpg","comment_is_top":false,"comment_ctime":1630463120,"is_pvip":false,"replies":[{"id":"112333","content":"如果你觉得每个项目都有个 target，项目多了不好清理，那么可以编辑 ~&#47;.cargo&#47;config，让所有项目的编译结果都放在同一个目录下（不过这样无法同时编译多个项目，cargo 有文件锁）：<br><br>```<br>[build]<br>target-dir = &quot;&#47;Users&#47;tchen&#47;.target&quot;<br>```<br><br>如果你觉得编译后的结果太大，倒也不用担心，release build 比较小，目前 9M，这里还可以用很多方法进一步优化：<br><br>```<br>❯ ls -l ~&#47;.target&#47;release&#47;thumbor<br>-rwxr-xr-x  2 tchen  staff  9562656 Aug 30 12:09 &#47;Users&#47;tchen&#47;.target&#47;release&#47;thumbor*<br>```<br><br>至于如果你觉得编译的中间文件太大，nodejs  的 node_modules，python 的 virtualenv，都是吃磁盘的主。:)","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630470136,"ip_address":"","comment_id":310034,"utype":1}],"discussion_count":3,"race_medal":0,"score":"91824776336","product_id":100085301,"comment_content":"最让人无法接受的点：<br><br>```shell<br>du -h -d 1 .&#47;target<br>395M\t.&#47;target&#47;rls<br>901M\t.&#47;target&#47;debug<br>1.3G\t.&#47;target<br>```","like_count":21,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526107,"discussion_content":"如果你觉得每个项目都有个 target，项目多了不好清理，那么可以编辑 ~/.cargo/config，让所有项目的编译结果都放在同一个目录下（不过这样无法同时编译多个项目，cargo 有文件锁）：\n\n```\n[build]\ntarget-dir = &amp;quot;/Users/tchen/.target&amp;quot;\n```\n\n如果你觉得编译后的结果太大，倒也不用担心，release build 比较小，目前 9M，这里还可以用很多方法进一步优化：\n\n```\n❯ ls -l ~/.target/release/thumbor\n-rwxr-xr-x  2 tchen  staff  9562656 Aug 30 12:09 /Users/tchen/.target/release/thumbor*\n```\n\n至于如果你觉得编译的中间文件太大，nodejs  的 node_modules，python 的 virtualenv，都是吃磁盘的主。:)","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1630470136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2992421,"avatar":"","nickname":"Rex Wang","note":"","ucode":"FB419F40A5BA65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573625,"discussion_content":"可以把程序拷出来然后cargo clean","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653553964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2727445,"avatar":"https://static001.geekbang.org/account/avatar/00/29/9e/15/e499fc69.jpg","nickname":"FRANK","note":"","ucode":"D0D24185E99A67","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559948,"discussion_content":"我是写个程序把target都删了，哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649074403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310245,"user_name":"码生笔谈","can_delete":false,"product_type":"c1","uid":1229329,"ip_address":"","ucode":"EBAD30BEE4E17D","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/11/323358ed.jpg","comment_is_top":false,"comment_ctime":1630567486,"is_pvip":false,"replies":[{"id":"112422","content":"reqwest 和 tracing_subscriber 已经是顶级 namespace，如果你想直接使用 get，你可以 use reqwest::get，但你如果就是要通过 crate 名引入其功能，可以直接使用，就跟我们可以直接用 std::sync::Arc 一样。Rust 下只要你加了依赖，对应的依赖就可以访问了，不存在 import 的过程。use 只是简化 namespace。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630593624,"ip_address":"","comment_id":310245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70350044222","product_id":100085301,"comment_content":"为什么在main.rs中并没有见到引入：<br>use tracing_subscriber;<br>use reqwest;<br>却可以直接使用？","like_count":17,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526170,"discussion_content":"reqwest 和 tracing_subscriber 已经是顶级 namespace，如果你想直接使用 get，你可以 use reqwest::get，但你如果就是要通过 crate 名引入其功能，可以直接使用，就跟我们可以直接用 std::sync::Arc 一样。Rust 下只要你加了依赖，对应的依赖就可以访问了，不存在 import 的过程。use 只是简化 namespace。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630593624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310163,"user_name":"Fan","can_delete":false,"product_type":"c1","uid":1115232,"ip_address":"","ucode":"3BF28670FD9407","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","comment_is_top":false,"comment_ctime":1630507344,"is_pvip":false,"replies":[{"id":"112424","content":"👍","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630594010,"ip_address":"","comment_id":310163,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53170114896","product_id":100085301,"comment_content":"逻辑清晰，喜欢这种教学方式。从项目，问题入手，也不是纠结于语法细节。","like_count":12,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526151,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630594010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310026,"user_name":"Christian","can_delete":false,"product_type":"c1","uid":1089000,"ip_address":"","ucode":"D84F866015BA07","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/e8/39433235.jpg","comment_is_top":false,"comment_ctime":1630461840,"is_pvip":false,"replies":[{"id":"112334","content":"苦干，实干，巧干。让勤勉追上时间的脚步。:)","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630470443,"ip_address":"","comment_id":310026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53170069392","product_id":100085301,"comment_content":"感概什么时候才能达到老师这样的高度？","like_count":13,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526104,"discussion_content":"苦干，实干，巧干。让勤勉追上时间的脚步。:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630470443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310339,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1118976,"ip_address":"","ucode":"35F4FFAC4A4B15","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/00/a4a2065f.jpg","comment_is_top":false,"comment_ctime":1630598684,"is_pvip":false,"replies":[{"id":"112439","content":"嗯，会的，后续的文章我们紧扣数据结构在栈和堆上的关系展开，我觉得这很重要，但似乎没有人这样讲解。接下来的课程你会慢慢看到的。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630632122,"ip_address":"","comment_id":310339,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31695369756","product_id":100085301,"comment_content":" Rust，相比起有运行时Go语言，运行效率不再话下。另外，作为现代系统级编程语言，在工程实践，依赖管理，相比起C、C++要好很多，但是比起Go稍微复杂一些。<br><br>语言学习难度还是挺大的，很多新概念，新名词都要理解，不过写起来还是挺爽的。用半年实践反复学习实践，希望能啃下这门语言。<br><br>希望老师从先行者的角度，对一些难点，易错点，平时不容易接触的到的地方给学生们做下讲解，看书和看网上资料千篇一律，没什么新奇的地方，大多讲的不够透。","like_count":7,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526201,"discussion_content":"嗯，会的，后续的文章我们紧扣数据结构在栈和堆上的关系展开，我觉得这很重要，但似乎没有人这样讲解。接下来的课程你会慢慢看到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630632122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310133,"user_name":"Custer","can_delete":false,"product_type":"c1","uid":1020822,"ip_address":"","ucode":"8AEA5544C94D57","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/96/575d42c3.jpg","comment_is_top":false,"comment_ctime":1630494848,"is_pvip":true,"replies":[{"id":"112369","content":"几个选择：<br><br>- 你可以直接在 image 库上实现<br>- 使用 imagemagick: https:&#47;&#47;github.com&#47;nlfiedler&#47;magick-rust<br>- 使用 opencv: https:&#47;&#47;github.com&#47;twistedfall&#47;opencv-rust<br>- 使用 piet: https:&#47;&#47;github.com&#47;linebender&#47;piet<br>- 或者任何 C&#47;C++ image 库（需要做一下 rust binding）","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630512459,"ip_address":"","comment_id":310133,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27400298624","product_id":100085301,"comment_content":"请问老师还有什么新的图片引擎吗？可以推荐一个吗？在 github 和 crates.io 上没有找到相似的，谢谢老师","like_count":6,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526138,"discussion_content":"几个选择：\n\n- 你可以直接在 image 库上实现\n- 使用 imagemagick: https://github.com/nlfiedler/magick-rust\n- 使用 opencv: https://github.com/twistedfall/opencv-rust\n- 使用 piet: https://github.com/linebender/piet\n- 或者任何 C/C++ image 库（需要做一下 rust binding）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630512459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1080653,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7d/4d/d98865b2.jpg","nickname":"老实人Honey","note":"","ucode":"EA4AB5C0C33090","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393015,"discussion_content":"学有余力的朋友，你写出来，用上新的图片引擎了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631203089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310129,"user_name":"Custer","can_delete":false,"product_type":"c1","uid":1020822,"ip_address":"","ucode":"8AEA5544C94D57","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/96/575d42c3.jpg","comment_is_top":false,"comment_ctime":1630493164,"is_pvip":true,"replies":[{"id":"112362","content":"Wow，你是第一个把思考题答案贴出来的！看得出理解了代码，并且还研究了一下 photon_rs 的能力。非常棒！","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630506095,"ip_address":"","comment_id":310129,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27400296940","product_id":100085301,"comment_content":"添加新功能：<br>1. 首先添加新的 proto<br>```proto<br>message PaddingBottom {<br>  uint32 x = 1;<br>}<br><br>&#47;&#47; 一个 spec 可以包含上述的处理方式之一<br>message Spec {<br>  oneof data {<br>    ...<br>    Watermark watermark = 7; &#47;&#47; 处理水印<br>    PaddingBottom  paddingBottom = 8; &#47;&#47; 填充图片<br>  }<br>}<br>```<br><br>2. 定义新的 spec然后为 spec 实现 SpecTransform trait 和一些辅助函数<br><br><br>```rust<br>&#47;&#47; File: 在文件 `pb&#47;mod.rs` 中<br>&#47;&#47; 提供一些辅助函数，让创建一个 spec 的过程简单一些<br>impl Spec {<br>    ...<br>    pub fn new_padding_bottom(x: u32) -&gt; Self {<br>        Self {<br>            data: Some(spec::Data::PaddingBottom(PaddingBottom { x }))<br>        }<br>    }<br>}<br>```<br>3. 最后在 Engine 中使用 spec<br>```rust<br>impl Engine for Photon {<br>    fn apply(&amp;mut self, specs: &amp;[Spec]) {<br>        for spec in specs.iter() {<br>            match spec.data {<br>                Some(spec::Data::Crop(ref v)) =&gt; self.transform(v),<br>                ...<br>                Some(spec::Data::PaddingBottom(ref v)) =&gt; self.transform(v),<br>                _ =&gt; {}<br>...<br>impl SpecTransform&lt;&amp;PaddingBottom&gt; for Photon {<br>    fn transform(&amp;mut self, op: &amp;PaddingBottom) {<br>        let rgba = Rgba::new(255_u8, 255_u8, 255_u8, 255_u8);<br>        let img = transform::padding_bottom(&amp;mut self.0, op.x, rgba);<br>        self.0 = img;<br>    }<br>}<br>```<br>4. 在 main.rs 函数中使用<br>```rust<br>&#47;&#47; 调试辅助函数<br>fn print_test_url(url: &amp;str) {<br>    use std::borrow::Borrow;<br>    let spec1 = Spec::new_resize(500, 800, resize::SampleFilter::CatmullRow);<br>    let spec2 = Spec::new_watermark(20, 20);<br>    let spec3 = Spec::new_padding_bottom(100); &#47;&#47; new<br>    let spec4 = Spec::new_filter(filter::Filter::Marine);<br>    let image_spec = ImageSpec::new(vec![spec1, spec2, spec3, spec4]);<br>    let s: String = image_spec.borrow().into();<br>    let test_image = percent_encode(url.as_bytes(), NON_ALPHANUMERIC).to_string();<br>    println!(&quot;test url: http:&#47;&#47;localhost:3000&#47;image&#47;{}&#47;{}&quot;, s, test_image);<br>}<br>```","like_count":7,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526137,"discussion_content":"Wow，你是第一个把思考题答案贴出来的！看得出理解了代码，并且还研究了一下 photon_rs 的能力。非常棒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630506095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1091920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a9/50/28f5532c.jpg","nickname":"杨东冬","note":"","ucode":"EC7F71FED376EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391574,"discussion_content":"这位同学是否可以微信聊下？我的微信2780224","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630536402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310035,"user_name":"茶底","can_delete":false,"product_type":"c1","uid":1188926,"ip_address":"","ucode":"687DD3686A84D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/24/3e/692a93f7.jpg","comment_is_top":false,"comment_ctime":1630463838,"is_pvip":false,"replies":[{"id":"112316","content":"哈哈大佬也是坚持不懈学出来的，看到差距就已经看到学习方向了，加油💪","user_name":"编辑回复","user_name_real":"叶如芊","uid":"2547771","ctime":1630464326,"ip_address":"","comment_id":310035,"utype":2}],"discussion_count":1,"race_medal":0,"score":"23105300318","product_id":100085301,"comment_content":"逻辑清晰，泪目了，我咋就这么菜","like_count":5,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526108,"discussion_content":"哈哈大佬也是坚持不懈学出来的，看到差距就已经看到学习方向了，加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630464326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346228,"user_name":"Geek_51b96f","can_delete":false,"product_type":"c1","uid":2765460,"ip_address":"","ucode":"22AFDF96A8863D","user_header":"","comment_is_top":false,"comment_ctime":1652929871,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18832799055","product_id":100085301,"comment_content":"0.24版的image库中DynamicImage的write_to方法签名从<br>```<br>pub fn write_to&lt;W: Write, F: Into&lt;ImageOutputFormat&gt;&gt;(<br>        &amp;self,<br>        w: &amp;mut W,<br>        format: F,<br>    ) -&gt; ImageResult&lt;()&gt; {<br>...<br>}<br>```<br>变成了<br>```<br>pub fn write_to&lt;W: Write + Seek, F: Into&lt;ImageOutputFormat&gt;&gt;(<br>        &amp;self,<br>        w: &amp;mut W,<br>        format: F,<br>    ) -&gt; ImageResult&lt;()&gt; {<br>}<br>```<br><br>image_to_buf函数的最后几行需要改成<br>```<br>let mut buffer = Cursor::new(Vec::with_capacity(32768));<br>dynimage.write_to(&amp;mut buffer, format).unwrap();<br>buffer.into_inner()<br>```<br>老师的代码用的是0.23版的，如果用最新的库就需要修改一下，否则会出现编译错误","like_count":5,"discussions":[{"author":{"id":1325204,"avatar":"https://static001.geekbang.org/account/avatar/00/14/38/94/93825064.jpg","nickname":"李金超","note":"","ucode":"BE74D34DD6EDEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585586,"discussion_content":"还可以这样修改：\ndynimage.write_to(&amp;mut Cursor::new(&amp;mut buffer), format).unwrap();\n其他保持不变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661685222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311763,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1401568,"ip_address":"","ucode":"FA942636EE0CC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/62/e0/d2ff52da.jpg","comment_is_top":false,"comment_ctime":1631452270,"is_pvip":false,"replies":[{"id":"112991","content":"对","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1631515017,"ip_address":"","comment_id":311763,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14516354158","product_id":100085301,"comment_content":"老师，现在只能硬抄，以后会把基础知识都讲一遍的吗？","like_count":4,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526732,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631515017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335427,"user_name":"嵩","can_delete":false,"product_type":"c1","uid":1082928,"ip_address":"","ucode":"7CB4B8EAD84E8F","user_header":"https://static001.geekbang.org/account/avatar/00/10/86/30/a5eff028.jpg","comment_is_top":false,"comment_ctime":1645515757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10235450349","product_id":100085301,"comment_content":"现在axum需要从routing下拿 get ：axum:: {routing:: {get, post}}","like_count":2},{"had_liked":false,"id":330179,"user_name":"老实人Honey","can_delete":false,"product_type":"c1","uid":1080653,"ip_address":"","ucode":"EA4AB5C0C33090","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/4d/d98865b2.jpg","comment_is_top":false,"comment_ctime":1641831502,"is_pvip":true,"replies":[{"id":"120698","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642293496,"ip_address":"","comment_id":330179,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10231766094","product_id":100085301,"comment_content":"用opencv-rust实现了fliph，挺艰辛的<br>https:&#47;&#47;github.com&#47;honwhy&#47;first_rs&#47;tree&#47;opencv&#47;thumbor","like_count":2,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546307,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642293496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314000,"user_name":"枸杞红茶","can_delete":false,"product_type":"c1","uid":2738941,"ip_address":"","ucode":"03D80953AF984E","user_header":"https://static001.geekbang.org/account/avatar/00/29/ca/fd/4e6dd31c.jpg","comment_is_top":false,"comment_ctime":1632797327,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10222731919","product_id":100085301,"comment_content":"Protobuf 介绍  https:&#47;&#47;www.jianshu.com&#47;p&#47;a24c88c0526a","like_count":2,"discussions":[{"author":{"id":1390032,"avatar":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","nickname":"阿成","note":"","ucode":"CEC3CD65FB9333","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406100,"discussion_content":"建议还是看google的文档：\nhttps://developers.google.com/protocol-buffers/docs/proto3\n虽然需要一点英语阅读能力，不过靠猜也基本上能理解了，太偏看不懂的的地方可以先跳过……","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1634700915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311515,"user_name":"ㅤ","can_delete":false,"product_type":"c1","uid":1480100,"ip_address":"","ucode":"8CFEE667C7102E","user_header":"https://static001.geekbang.org/account/avatar/00/16/95/a4/86c4cb52.jpg","comment_is_top":false,"comment_ctime":1631265301,"is_pvip":false,"replies":[{"id":"112871","content":"传统的用于网络协议定义可选字段的方法是 TLV(Type&#47;Tag Length Value)，见：https:&#47;&#47;en.wikipedia.org&#47;wiki&#47;Type%E2%80%93length%E2%80%93value。但这种方法对内存不友好，protobuf 在此基础上发展了变长的编码方式，其实质还是 TLV，只不过将这三者的定义巧妙融合在了 protobuf 的定义语言中。所以：<br><br>```proto<br>message Crop {<br>  uint32 x1 = 1;<br>  uint32 y1 = 2;<br>  uint32 x2 = 3;<br>  uint32 y2 = 4;<br>}<br>```<br>的 uint32 确定了 length（以及对应的编程语言的类型），而 = 1 则声明了 tag。当你序列化一个 Crop struct 到 protobuf 二进制时，每个字段的值会带上 tag 和 length。这样别人就能通过这个信息反序列化出来。<br><br>这就是 prost 里编译出来的 tag 的作用。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1631283841,"ip_address":"","comment_id":311515,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10221199893","product_id":100085301,"comment_content":"陈老师，我想问一下  prost这个依赖的tag是有什么作用么？看了文档也不大理解。","like_count":2,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526644,"discussion_content":"传统的用于网络协议定义可选字段的方法是 TLV(Type/Tag Length Value)，见：https://en.wikipedia.org/wiki/Type%E2%80%93length%E2%80%93value。但这种方法对内存不友好，protobuf 在此基础上发展了变长的编码方式，其实质还是 TLV，只不过将这三者的定义巧妙融合在了 protobuf 的定义语言中。所以：\n\n```proto\nmessage Crop {\n  uint32 x1 = 1;\n  uint32 y1 = 2;\n  uint32 x2 = 3;\n  uint32 y2 = 4;\n}\n```\n的 uint32 确定了 length（以及对应的编程语言的类型），而 = 1 则声明了 tag。当你序列化一个 Crop struct 到 protobuf 二进制时，每个字段的值会带上 tag 和 length。这样别人就能通过这个信息反序列化出来。\n\n这就是 prost 里编译出来的 tag 的作用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631283841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311280,"user_name":"ㅤ","can_delete":false,"product_type":"c1","uid":1480100,"ip_address":"","ucode":"8CFEE667C7102E","user_header":"https://static001.geekbang.org/account/avatar/00/16/95/a4/86c4cb52.jpg","comment_is_top":false,"comment_ctime":1631153476,"is_pvip":false,"replies":[{"id":"112808","content":"哈哈体会学习的过程，get hands dirty是感性感受Rust能干啥，从07所有权开始咱们就回归理性，深入具体知识点学习，搞明白之前不懂的地方。要坚持打卡啊，加油💪","user_name":"编辑回复","user_name_real":"叶如芊","uid":"2547771","ctime":1631158476,"ip_address":"","comment_id":311280,"utype":2}],"discussion_count":1,"race_medal":0,"score":"10221088068","product_id":100085301,"comment_content":"现在处于看得懂的阶段，自己写的话，为什么要引用，这边为什么又不要。。。 只能靠编译硬改","like_count":2,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526548,"discussion_content":"哈哈体会学习的过程，get hands dirty是感性感受Rust能干啥，从07所有权开始咱们就回归理性，深入具体知识点学习，搞明白之前不懂的地方。要坚持打卡啊，加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631158476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310288,"user_name":"鱼龙帅","can_delete":false,"product_type":"c1","uid":1022367,"ip_address":"","ucode":"4BC94037750AF2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKBM3Q8ibgwVibREUulIsuRymSqLWQqexMSCOx9aYngDlra5swsvc9IgUkIwibvMX0IerWSwKFcuSzuw/132","comment_is_top":false,"comment_ctime":1630577847,"is_pvip":false,"replies":[{"id":"112420","content":"你是编译成 release 了么？<br><br>cargo build --release<br><br>在某些计算量特别大的库（比如图片库）下，debug build 和 release build 的差别非常大。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630593390,"ip_address":"","comment_id":310288,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10220512439","product_id":100085301,"comment_content":"为啥我访问的就没有那么快？每次都是要10秒左右才来，显示是有match cache,但是还是都挺久的，哪里的姿势不对","like_count":2,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526185,"discussion_content":"你是编译成 release 了么？\n\ncargo build --release\n\n在某些计算量特别大的库（比如图片库）下，debug build 和 release build 的差别非常大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630593390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022367,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKBM3Q8ibgwVibREUulIsuRymSqLWQqexMSCOx9aYngDlra5swsvc9IgUkIwibvMX0IerWSwKFcuSzuw/132","nickname":"鱼龙帅","note":"","ucode":"4BC94037750AF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391765,"discussion_content":"恩恩，编译成release后就快了，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630630627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310025,"user_name":"Geek_ff1914","can_delete":false,"product_type":"c1","uid":2365351,"ip_address":"","ucode":"D03CC0EC7FC44A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/HO3KVBk8wePF8BYoTibKSlpUpBmZl6b1eZV3VftiatM1HjQuh1Fu2Q1QCZgVXQwQxiaDXK7c6dialmEm5l9UibnbicAw/132","comment_is_top":false,"comment_ctime":1630461665,"is_pvip":false,"replies":[{"id":"112313","content":"加油💪","user_name":"编辑回复","user_name_real":"叶如芊","uid":"2547771","ctime":1630463963,"ip_address":"","comment_id":310025,"utype":2}],"discussion_count":1,"race_medal":0,"score":"10220396257","product_id":100085301,"comment_content":"总有一天，我也会像你一样强！","like_count":2,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526103,"discussion_content":"加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630463963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333836,"user_name":"Alice","can_delete":false,"product_type":"c1","uid":1926134,"ip_address":"","ucode":"6D8F901229B182","user_header":"https://static001.geekbang.org/account/avatar/00/1d/63/f6/225df928.jpg","comment_is_top":false,"comment_ctime":1644559240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5939526536","product_id":100085301,"comment_content":"如果有使用 photon-rs: 0.3.1 版本时，src&#47;engine&#47;photon.rs 中的 **fn image_to_buf** 方法，因为 dynimage.rs 中的 write_to 方法参数前面有变动：<br><br>pub fn write_to&lt;W: Write + Seek, F: Into&lt;ImageOutputFormat&gt;&gt;<br><br>可以使用 std::io::Cursor 简单 wrap 一下，即可正常编译：<br><br>    &#47;&#47; A Cursor is a type which wraps another I&#47;O object to provide a Seek implementation.<br>    let mut buffer = Cursor::new(Vec::with_capacity(32768));<br>    dynimage.write_to(&amp;mut buffer, format).unwrap();<br>    <br>    buffer.into_inner()","like_count":1},{"had_liked":false,"id":329920,"user_name":"老实人Honey","can_delete":false,"product_type":"c1","uid":1080653,"ip_address":"","ucode":"EA4AB5C0C33090","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/4d/d98865b2.jpg","comment_is_top":false,"comment_ctime":1641646424,"is_pvip":true,"replies":[{"id":"120705","content":"👍 非常棒","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642293713,"ip_address":"","comment_id":329920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5936613720","product_id":100085301,"comment_content":"增加了一个油画效果<br>message Oil {<br>    int32 radius = 1;<br>    double intensity = 2;<br>}<br>message Spec {<br>    oneof data {<br>        Resize resize = 1;<br>        Crop crop = 2;<br>        Flipv flipv = 3;<br>        Fliph fliph = 4;<br>        Contrast contrast = 5;<br>        Filter filter = 6;<br>        Watermark Watermark = 7;<br>        Oil oil = 8;<br>    }<br>}<br><br>impl SpecTransform&lt;&amp;Oil&gt; for Photon {<br>    fn transform(&amp;mut self, op: &amp;Oil) {<br>        effects::oil(&amp;mut self.0, op.radius, op.intensity);<br>    }<br>}<br><br>    let spec1 = Spec::new_resize(500, 800, resize::SampleFilter::CatmullRom);<br>    let spec2 = Spec::new_watermark(20, 20);<br>    let spec3 = Spec::new_filter(filter::Filter::Marine);<br>    let spec4 = Spec::new_oil(4, 55.0);<br>    let image_spec = ImageSpec::new(vec![spec1, spec2, spec3, spec4]);","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546314,"discussion_content":"👍 非常棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642293713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313038,"user_name":"深山何处钟","can_delete":false,"product_type":"c1","uid":1100117,"ip_address":"","ucode":"5D42024E40D751","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/55/3b2526ce.jpg","comment_is_top":false,"comment_ctime":1632223492,"is_pvip":false,"replies":[{"id":"113395","content":"对 thumbor 用到了 protobuf（使用的是 prost: https:&#47;&#47;github.com&#47;tokio-rs&#47;prost），你本地需要有 protoc 编译器。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1632239508,"ip_address":"","comment_id":313038,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5927190788","product_id":100085301,"comment_content":"运行cargo build就报这个错误，网上找了很久都没有解决。希望老师帮忙解决：<br><br>process didn&#39;t exit successfully: `C:\\Users\\XWANG270\\Videos\\thumbor\\target\\debug\\build\\thumbor-dd8ed449ce21f347\\build-script-build` (exit code: 101)<br>  --- stderr<br>  thread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Custom { kind: PermissionDenied, error: &quot;failed to invoke protoc (hint: https:&#47;&#47;docs.rs&#47;prost-build&#47;#sourcing-protoc): Access is denied. (os error 5)&quot; }&#39;, build.rs:6:10<br><br>意思是我本地没有protoc？","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527205,"discussion_content":"对 thumbor 用到了 protobuf（使用的是 prost: https://github.com/tokio-rs/prost），你本地需要有 protoc 编译器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632239508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310978,"user_name":"兴小狸","can_delete":false,"product_type":"c1","uid":1140825,"ip_address":"","ucode":"8A1CDD3F0A59C0","user_header":"","comment_is_top":false,"comment_ctime":1631008146,"is_pvip":false,"replies":[{"id":"112688","content":"哈哈没事，现在你的懵是不知道这是啥的懵，之前是啥都不知道的懵。你进步了，继续学习就行:)","user_name":"编辑回复","user_name_real":"叶如芊","uid":"2547771","ctime":1631022136,"ip_address":"","comment_id":310978,"utype":2}],"discussion_count":1,"race_medal":0,"score":"5925975442","product_id":100085301,"comment_content":"敲了一遍，但还是懵~","like_count":1,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526420,"discussion_content":"哈哈没事，现在你的懵是不知道这是啥的懵，之前是啥都不知道的懵。你进步了，继续学习就行:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631022136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310189,"user_name":"大哉乾元","can_delete":false,"product_type":"c1","uid":2738552,"ip_address":"","ucode":"1FE07EB60046ED","user_header":"","comment_is_top":false,"comment_ctime":1630542627,"is_pvip":false,"replies":[{"id":"112423","content":"1. HTTP 协议需要基本了解（请求和响应长什么样子，都有什么方法（GET, POST, PUT, DELETE, PATCH, HEAD 等），HTTP 头（比如 content-type），状态码，MIME 类型，如何做 content negotiation 等）<br>2. Request &#47; Response 模型需要了解<br>3. 一般的 web 框架的路由结构，middleware 结构和并发处理模型需要了解<br><br>建议了解 http 协议后，简单看某个 web 框架的文档，比如 expressjs：https:&#47;&#47;expressjs.com&#47;en&#47;guide&#47;routing.html<br>4. ","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630594000,"ip_address":"","comment_id":310189,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5925509923","product_id":100085301,"comment_content":"从嵌入式过来的，涉及到web相关的东西就有点抓瞎，请问下老师这方面除了http协议外一般还需要哪方面的背景知识，有推荐的资料不？","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526157,"discussion_content":"1. HTTP 协议需要基本了解（请求和响应长什么样子，都有什么方法（GET, POST, PUT, DELETE, PATCH, HEAD 等），HTTP 头（比如 content-type），状态码，MIME 类型，如何做 content negotiation 等）\n2. Request / Response 模型需要了解\n3. 一般的 web 框架的路由结构，middleware 结构和并发处理模型需要了解\n\n建议了解 http 协议后，简单看某个 web 框架的文档，比如 expressjs：https://expressjs.com/en/guide/routing.html\n4. ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630594000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014505,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/e9/da5c0203.jpg","nickname":"亚伦碎语","note":"","ucode":"F32E5E1B63CC90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391591,"discussion_content":"用Rust写嵌入式也挺好的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630545360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2738552,"avatar":"","nickname":"大哉乾元","note":"","ucode":"1FE07EB60046ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1014505,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7a/e9/da5c0203.jpg","nickname":"亚伦碎语","note":"","ucode":"F32E5E1B63CC90","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391633,"discussion_content":"想全面发展，哈哈。现在嵌入式相关岗位很少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630560456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391591,"ip_address":""},"score":391633,"extra":""}]}]},{"had_liked":false,"id":310183,"user_name":"老荀","can_delete":false,"product_type":"c1","uid":1214893,"ip_address":"","ucode":"C32E743518DECD","user_header":"https://static001.geekbang.org/account/avatar/00/12/89/ad/4efd929a.jpg","comment_is_top":false,"comment_ctime":1630537776,"is_pvip":true,"replies":[{"id":"112392","content":"最好吧？","user_name":"编辑回复","user_name_real":"郭蕾","uid":"1000473","ctime":1630544698,"ip_address":"","comment_id":310183,"utype":2}],"discussion_count":2,"race_medal":0,"score":"5925505072","product_id":100085301,"comment_content":"我有预感。这会是目前网上最少的Rust中文课程。期待","like_count":1,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526156,"discussion_content":"最好吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630544698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1214893,"avatar":"https://static001.geekbang.org/account/avatar/00/12/89/ad/4efd929a.jpg","nickname":"老荀","note":"","ucode":"C32E743518DECD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391819,"discussion_content":"最好！sorry，打错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630643720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310142,"user_name":"苏苏","can_delete":false,"product_type":"c1","uid":2038353,"ip_address":"","ucode":"35A4EC6F75D453","user_header":"https://static001.geekbang.org/account/avatar/00/1f/1a/51/ac2d80fc.jpg","comment_is_top":false,"comment_ctime":1630500547,"is_pvip":true,"replies":[{"id":"112363","content":"确保你在 Cargo.toml 中有：<br><br>```toml<br>[build-dependencies]<br>prost-build = &quot;0.8&quot;<br>```<br><br>你可以参考 github repo 上的代码。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630506280,"ip_address":"","comment_id":310142,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5925467843","product_id":100085301,"comment_content":" prost_build::Config::new()<br>failed to resolve: use of undeclared crate or module `prost_build`<br>not found in `prost_build`rustc","like_count":1,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526143,"discussion_content":"确保你在 Cargo.toml 中有：\n\n```toml\n[build-dependencies]\nprost-build = &amp;quot;0.8&amp;quot;\n```\n\n你可以参考 github repo 上的代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630506280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135226,"avatar":"https://static001.geekbang.org/account/avatar/00/11/52/7a/28f05d9b.jpg","nickname":"Jay","note":"","ucode":"0CCB5B2F604F79","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392506,"discussion_content":"Cargo.toml有prost-build = &#34;0.8&#34;,但是依然有这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631022002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2206794,"avatar":"","nickname":"Geek3847","note":"","ucode":"5EC8E975EFB1D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1135226,"avatar":"https://static001.geekbang.org/account/avatar/00/11/52/7a/28f05d9b.jpg","nickname":"Jay","note":"","ucode":"0CCB5B2F604F79","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":393464,"discussion_content":"是不是 build-dependencies 单词拼错了？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631442309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392506,"ip_address":""},"score":393464,"extra":""}]}]},{"had_liked":false,"id":357298,"user_name":"First Star","can_delete":false,"product_type":"c1","uid":1137507,"ip_address":"江苏","ucode":"9C284E52824AE9","user_header":"https://static001.geekbang.org/account/avatar/00/11/5b/63/b230f3a5.jpg","comment_is_top":false,"comment_ctime":1663141985,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663141985","product_id":100085301,"comment_content":"   Compiling thumbor v0.1.0 (&#47;Users&#47;chenmx&#47;develop-code&#47;rust&#47;greektime-chentian&#47;thumbor)<br>error[E0308]: mismatched types<br>  --&gt; src&#47;main.rs:89:5<br>   |<br>89 |     Ok((headers, data.to_vec()))<br>   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `StatusCode`, found struct `anyhow::Error`<br>   |<br>   = note: expected enum `Result&lt;_, StatusCode&gt;`<br>              found enum `Result&lt;_, anyhow::Error&gt;`<br><br>For more information about this error, try `rustc --explain E0308`.<br>error: could not compile `thumbor` due to previous error","like_count":0},{"had_liked":false,"id":354073,"user_name":"mihello","can_delete":false,"product_type":"c1","uid":1287406,"ip_address":"广东","ucode":"4B1E7B7A141606","user_header":"https://static001.geekbang.org/account/avatar/00/13/a4/ee/b960a322.jpg","comment_is_top":false,"comment_ctime":1660058595,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660058595","product_id":100085301,"comment_content":"卡在这一章一个月","like_count":0},{"had_liked":false,"id":353060,"user_name":"阿白","can_delete":false,"product_type":"c1","uid":2856345,"ip_address":"北京","ucode":"9CA2CC9FDF483F","user_header":"https://static001.geekbang.org/account/avatar/00/2b/95/99/2fcf3050.jpg","comment_is_top":false,"comment_ctime":1659103000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659103000","product_id":100085301,"comment_content":"服务启动，但是为什么连不上127.0.0.1:3000。<br>","like_count":0},{"had_liked":false,"id":352049,"user_name":"Faith信","can_delete":false,"product_type":"c1","uid":1795456,"ip_address":"","ucode":"036367598C46BE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/80/52161b2f.jpg","comment_is_top":false,"comment_ctime":1658365635,"is_pvip":true,"replies":[{"id":"128037","content":"这讲实战涉及的知识点多一点，语法和重点概念学完欢迎再来挑战😎","user_name":"编辑回复","user_name_real":"编辑","uid":"2547771","ctime":1658387031,"ip_address":"","comment_id":352049,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1658365635","product_id":100085301,"comment_content":"还是看完《Rust权威指南》再来学","like_count":0,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580825,"discussion_content":"这讲实战涉及的知识点多一点，语法和重点概念学完欢迎再来挑战😎","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658387032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348460,"user_name":"小杰","can_delete":false,"product_type":"c1","uid":2853200,"ip_address":"","ucode":"BBDF8E9F348F65","user_header":"https://static001.geekbang.org/account/avatar/00/2b/89/50/aee9fdab.jpg","comment_is_top":false,"comment_ctime":1655117783,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655117783","product_id":100085301,"comment_content":"&#47;&#47;看了两遍文章，然后回答下课后问题，挺懵的，只能根据老师的提示，然后看了下其他人的回答，写出来的<br><br><br>&#47;&#47;1、首先添加新的 proto，定义新的 spec <br><br>&#47;&#47; abi.proto<br><br>&#47;&#47; 增加新的功能<br>message AddNewFeature{<br>}<br><br>message Spec {<br>  oneof data {<br><br>    &#47;&#47; the code before the teacher<br><br>    AddNewFeature addnewfeature = 8;<br>  }<br>}<br><br>&#47;&#47;这里得运行下cargo run 来生成 abi.rs的rust标准结构<br><br><br>&#47;&#47;2、 然后为 spec 实现 SpecTransform trait 和一些辅助函数 在 mod.rs&#47;pd<br>impl Spec {<br><br>    &#47;&#47;the code before the teacher<br><br>    pub fn new_feature() -&gt; Self{<br>        Self { <br>            data: Some(spec::Data::Addnewfeature(AddNewFeature{})) <br>        }<br>    }<br>}<br><br>&#47;&#47;3、实现 Engine trait 以及为每种 spec 实现 SpecTransform Trait。 photon.rs<br>impl Engine for Photon {<br>    fn apply(&amp;mut self, specs: &amp;[Spec]) {<br>        for spec in specs.iter() {<br>            match spec.data {<br><br>                &#47;&#47;the code before the teacher &#47;&#47;<br><br>                Some(spec::Data::Addnewfeature((ref v))) =&gt; self.transform(v),<br>                &#47;&#47; 对于目前不认识的 spec，不做任何处理<br>                _ =&gt; {}<br>            }<br>        }<br>    }<br><br>    fn generate(self, format: ImageOutputFormat) -&gt; Vec&lt;u8&gt; {<br>        image_to_buf(self.0, format)<br>    }<br>}<br><br>&#47;&#47;4、在 main.rs 里使用新的引擎<br><br>&#47;&#47; 调试辅助函数<br>fn print_test_url(url: &amp;str) {<br><br>    &#47;&#47;the code before the teacher &#47;&#47;<br><br>    use std::borrow::Borrow;<br>    let spec1 = Spec::new_resize(500, 800, resize::SampleFilter::CatmullRom);<br>    let spec2 = Spec::new_watermark(20, 20);<br>    let spec3 = Spec::new_filter(filter::Filter::Marine);<br>    let spec4= Spec::new_feature();<br>    let image_spec = ImageSpec::new(vec![spec1, spec2, spec3, spec4]);<br><br>    &#47;&#47;the code before the teacher &#47;&#47;<br><br>}<br><br>&#47;&#47; 总的来说，老师已经给我们写好的全部，我们就造轮子就可以了。geektime的老师都太强了","like_count":0},{"had_liked":false,"id":347243,"user_name":"Jack","can_delete":false,"product_type":"c1","uid":1118101,"ip_address":"","ucode":"3A158B8A3A3206","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/95/c0431d66.jpg","comment_is_top":false,"comment_ctime":1653845318,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653845318","product_id":100085301,"comment_content":"陈老师 我这里执行远远大于400ms，不知道原因是什么<br><br>3.3 GHz 四核Intel Core i5<br>32 GB 1867 MHz DDR3<br><br>May 30 01:15:15.104  INFO retrieve_image{url=&quot;https:&#47;&#47;images.pexels.com&#47;photos<br>May 30 01:15:28.442  INFO A05_thumbor: Finished processing: image size 52674<br>May 30 01:16:09.530  INFO retrieve_image{url=&quot;https:&#47;&#47;images.pexels.com&#47;photos<br>May 30 01:16:17.827  INFO A05_thumbor: Finished processing: image size 52674<br>May 30 01:24:49.565  INFO retrieve_image{url=&quot;https:&#47;&#47;images.pexels.com&#47;photos<br>May 30 01:24:57.882  INFO A05_thumbor: Finished processing: image size 52674","like_count":0},{"had_liked":false,"id":347030,"user_name":"人来人往@","can_delete":false,"product_type":"c1","uid":2226242,"ip_address":"","ucode":"F0687F6C0CDD13","user_header":"https://static001.geekbang.org/account/avatar/00/21/f8/42/7f66197c.jpg","comment_is_top":false,"comment_ctime":1653634410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653634410","product_id":100085301,"comment_content":"看不懂代码啊，挠头","like_count":0},{"had_liked":false,"id":346816,"user_name":"Mr.Hat","can_delete":false,"product_type":"c1","uid":2546409,"ip_address":"","ucode":"2CC0A0A7884850","user_header":"https://static001.geekbang.org/account/avatar/00/26/da/e9/b28f8f50.jpg","comment_is_top":false,"comment_ctime":1653455953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653455953","product_id":100085301,"comment_content":"纵观所有评论好像只有我一个windows 11, build失败的，缺少cmake安装包<br>proto安装编译需要cmake，https:&#47;&#47;cmake.org&#47;download&#47; 这里下载对应版本的cmake，我下载的是msi文件，安装之后设置path to all user. 重新开终端，编译通过。","like_count":0},{"had_liked":false,"id":345615,"user_name":"ELSE","can_delete":false,"product_type":"c1","uid":1172907,"ip_address":"","ucode":"72448D7271C8B0","user_header":"https://static001.geekbang.org/account/avatar/00/11/e5/ab/56f348e5.jpg","comment_is_top":false,"comment_ctime":1652432353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652432353","product_id":100085301,"comment_content":"一节课15分钟，但初学者就算硬抄，COPY，编译运行，看看代码，也要两个小时，应该说这节课难度还是有点高了，换个角度，内容比较充实，哈哈","like_count":0},{"had_liked":false,"id":345609,"user_name":"ELSE","can_delete":false,"product_type":"c1","uid":1172907,"ip_address":"","ucode":"72448D7271C8B0","user_header":"https://static001.geekbang.org/account/avatar/00/11/e5/ab/56f348e5.jpg","comment_is_top":false,"comment_ctime":1652430360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652430360","product_id":100085301,"comment_content":"几节课下来还是啥也不会，不过“eat your own dog food”倒是个实践的好办法","like_count":0},{"had_liked":false,"id":343634,"user_name":"Geek_d24136","can_delete":false,"product_type":"c1","uid":2901873,"ip_address":"","ucode":"58F33F02996E1A","user_header":"","comment_is_top":false,"comment_ctime":1650962474,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650962474","product_id":100085301,"comment_content":"老师，前面执行都正常了，到最后一步日志打印看结果的时候，一直停在那里不反应。realease已执行。","like_count":0},{"had_liked":false,"id":343039,"user_name":"Geek_3b4ddd","can_delete":false,"product_type":"c1","uid":2979203,"ip_address":"","ucode":"64D5425C76FE53","user_header":"","comment_is_top":false,"comment_ctime":1650606568,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1650606568","product_id":100085301,"comment_content":"打开日志运行是指什么呀？----来自小白","like_count":0,"discussions":[{"author":{"id":2901873,"avatar":"","nickname":"Geek_d24136","note":"","ucode":"58F33F02996E1A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567625,"discussion_content":"就是在命令行里输入执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650961270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337747,"user_name":"J. Zow","can_delete":false,"product_type":"c1","uid":2147092,"ip_address":"","ucode":"D1AE90674AB182","user_header":"https://static001.geekbang.org/account/avatar/00/20/c3/14/484f4489.jpg","comment_is_top":false,"comment_ctime":1647006965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647006965","product_id":100085301,"comment_content":"我处理出来的图片 很花，有类似情况的同学吗","like_count":0},{"had_liked":false,"id":333805,"user_name":"zoomdong","can_delete":false,"product_type":"c1","uid":1460980,"ip_address":"","ucode":"AA0B8F945D9935","user_header":"https://static001.geekbang.org/account/avatar/00/16/4a/f4/513d26e8.jpg","comment_is_top":false,"comment_ctime":1644544926,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644544926","product_id":100085301,"comment_content":"思路太清晰了，虽然有些代码实现目前我还看不懂，但整体流程以及结构设计是很清晰易懂的。","like_count":0},{"had_liked":false,"id":333079,"user_name":"史前秀","can_delete":false,"product_type":"c1","uid":1322711,"ip_address":"","ucode":"E0086E6082A084","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7G7MEmlPibp0RXemTB2gA8HkM9ahapKZHEYJsBmanic7z8Yyw5bicS7S2vDH1O5xicib8yKnp1w0A2CpqhdLFAUwTsQ/132","comment_is_top":false,"comment_ctime":1644049502,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1644049502","product_id":100085301,"comment_content":"跟着敲了一遍，有个疑问🤔️<br>```rust<br>image_spec.encode_to_vec();<br>```<br>encode_to_vec 这个方法 是在那里定义的 clione 提示。","like_count":0,"discussions":[{"author":{"id":1926134,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/63/f6/225df928.jpg","nickname":"Alice","note":"","ucode":"6D8F901229B182","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550460,"discussion_content":"可以使用 vscode 来协助学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644559484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331339,"user_name":"墨风","can_delete":false,"product_type":"c1","uid":1978693,"ip_address":"","ucode":"AE2D663693CA6A","user_header":"https://static001.geekbang.org/account/avatar/00/1e/31/45/be51ab1d.jpg","comment_is_top":false,"comment_ctime":1642557164,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642557164","product_id":100085301,"comment_content":"error[E0433]: failed to resolve: use of undeclared crate or module `prost_build`<br> --&gt; src&#47;main.rs:3:18<br>  |<br>3 |     prost_build::Config::new()<br>  |                  ^^^^^^ not found in `prost_build`<br>  |<br>help: consider importing this struct<br>  |<br>2 | use base64::Config;<br><br>```<br><br>fn main() {<br>    prost_build::Config::new()<br>        .out_dir(&quot;src&#47;proto&quot;)<br>        .compile_protos(&amp;[&quot;abi.proto&quot;], &amp;[&quot;.&quot;])<br>        .unwrap();<br>}<br>```<br>  |","like_count":0},{"had_liked":false,"id":330609,"user_name":"松松","can_delete":false,"product_type":"c1","uid":1337030,"ip_address":"","ucode":"EB2A80CF7BCA4B","user_header":"https://static001.geekbang.org/account/avatar/00/14/66/c6/d779dfb6.jpg","comment_is_top":false,"comment_ctime":1642067678,"is_pvip":false,"replies":[{"id":"120684","content":"对。不过我还是比较喜欢 mod.rs 的写法，更加 clean","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642292615,"ip_address":"","comment_id":330609,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642067678","product_id":100085301,"comment_content":"Rust 2018 之后好像不要求非得整个 mod.rs 了","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546293,"discussion_content":"对。不过我还是比较喜欢 mod.rs 的写法，更加 clean","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642292615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330392,"user_name":"无下限HENTAI","can_delete":false,"product_type":"c1","uid":2888176,"ip_address":"","ucode":"8D45A12C25861A","user_header":"","comment_is_top":false,"comment_ctime":1641964981,"is_pvip":false,"replies":[{"id":"120689","content":"cargo build 成功执行了么？你是把 github 上的代码直接 clone 下来运行的么？","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642292925,"ip_address":"","comment_id":330392,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1641964981","product_id":100085301,"comment_content":"老师好，我在做完`build.rs`之后`cargo build`，但并没有生成`abi.rs`，请问可能原因是什么？<br>我用的是win10系统，rust版本1.57<br>目前文件结构如下：<br>```<br>C:.<br>│  .gitignore<br>│  abi.proto<br>│  Cargo.lock<br>│  Cargo.toml<br>│<br>└─src<br>    │  build.rs<br>    │  main.rs<br>    │<br>    └─pb<br>```<br>运行cargo build之后，src&#47;pb文件夹中并未出现`abi.rs`，所有文件直接复制您的代码也不行，可能是为什么呢？","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546298,"discussion_content":"cargo build 成功执行了么？你是把 github 上的代码直接 clone 下来运行的么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642292925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337030,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/c6/d779dfb6.jpg","nickname":"松松","note":"","ucode":"EB2A80CF7BCA4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546044,"discussion_content":"build.rs在Cargo.toml（及src）同一层而不是在src里头 (●&#39;◡&#39;●)","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1642137587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330041,"user_name":"锅菌鱼","can_delete":false,"product_type":"c1","uid":1131961,"ip_address":"","ucode":"82EC0452ED0E38","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b9/3db96ade.jpg","comment_is_top":false,"comment_ctime":1641747486,"is_pvip":true,"replies":[{"id":"120703","content":"这里用 protobuf 的意义在于 protobuf 可以用很少量的字节表述丰富的数据，thumbor 使用字符串来描述要做的动作，会导致 url 非常长。","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642293691,"ip_address":"","comment_id":330041,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641747486","product_id":100085301,"comment_content":"老师，问个问题，都用http服务器了，这里是不是可以不用protobuf了，把http协议接口的定义好即可？","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546312,"discussion_content":"这里用 protobuf 的意义在于 protobuf 可以用很少量的字节表述丰富的数据，thumbor 使用字符串来描述要做的动作，会导致 url 非常长。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642293691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328137,"user_name":"newzai","can_delete":false,"product_type":"c1","uid":1102367,"ip_address":"","ucode":"D5E34D427D65FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/1f/2ef2514b.jpg","comment_is_top":false,"comment_ctime":1640570610,"is_pvip":false,"replies":[{"id":"120781","content":"据我所知，目前还没有很好地库支持 extension","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642309667,"ip_address":"","comment_id":328137,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1640570610","product_id":100085301,"comment_content":"protobuf 在rust重怎么操作 extensions字段。那个库支持？prost貌似不支持","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546420,"discussion_content":"据我所知，目前还没有很好地库支持 extension","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642309668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327514,"user_name":"hughieyu","can_delete":false,"product_type":"c1","uid":1206690,"ip_address":"","ucode":"FC1A64B2BAB784","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/a2/c30ac459.jpg","comment_is_top":false,"comment_ctime":1640158364,"is_pvip":false,"replies":[{"id":"120794","content":"看你函数内部是要 self 的所有权还是引用，需要具体问题具体分析。一般来说，先从 &amp;self 开始。","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1642310151,"ip_address":"","comment_id":327514,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640158364","product_id":100085301,"comment_content":"请问老师，接口设计中什么情况下用传入`self`的方式每次情况创建一个(文中Engine trait的定义方式)， 什么情况下使用&amp;self的方式全局共享一个(如下)<br>```rust<br>pub trait Engine {<br>    fn handle(&amp;self, image: Vec&lt;u8&gt;, specs: &amp;[Spec]) -&gt; Result&lt;Vec&lt;u8&gt;, anyhow::Error&gt;;<br>}<br>```","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546434,"discussion_content":"看你函数内部是要 self 的所有权还是引用，需要具体问题具体分析。一般来说，先从 &amp;self 开始。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642310151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327049,"user_name":"HeviLUO","can_delete":false,"product_type":"c1","uid":1647381,"ip_address":"","ucode":"C6AFBA2D025039","user_header":"https://static001.geekbang.org/account/avatar/00/19/23/15/c06a1586.jpg","comment_is_top":false,"comment_ctime":1639885707,"is_pvip":false,"replies":[{"id":"118958","content":"excalidraw https:&#47;&#47;github.com&#47;excalidraw&#47;excalidraw","user_name":"编辑回复","user_name_real":"编辑","uid":"2547771","ctime":1639921790,"ip_address":"","comment_id":327049,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1639885707","product_id":100085301,"comment_content":"老师你好，你的图画得很清晰也很好看<br>是用什么工具画的呢？","like_count":0,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540025,"discussion_content":"excalidraw https://github.com/excalidraw/excalidraw","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639921790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326331,"user_name":"GeekLGZ","can_delete":false,"product_type":"c1","uid":2865881,"ip_address":"","ucode":"7D105634AF5B54","user_header":"https://static001.geekbang.org/account/avatar/00/2b/ba/d9/3d3cff21.jpg","comment_is_top":false,"comment_ctime":1639472410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639472410","product_id":100085301,"comment_content":"逻辑结构太清晰了","like_count":0},{"had_liked":false,"id":321630,"user_name":"卢旺达","can_delete":false,"product_type":"c1","uid":2092779,"ip_address":"","ucode":"998AD8E5AA5513","user_header":"https://static001.geekbang.org/account/avatar/00/1f/ee/eb/552f5ea6.jpg","comment_is_top":false,"comment_ctime":1636969512,"is_pvip":false,"replies":[{"id":"118918","content":"在编译的时候传入这个 env。你可以看看我 github repo 的更新，用了更好的方式，不用手工去控制了。","user_name":"作者回复","user_name_real":"编辑","uid":"1079375","ctime":1639853041,"ip_address":"","comment_id":321630,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636969512","product_id":100085301,"comment_content":"老师你好，github repo 代码里build.rs里的<br> let build_enabled = option_env!(&quot;BUILD_PROTO&quot;)<br>        .map(|v| v == &quot;1&quot;)<br>        .unwrap_or(false);<br>BUILD_PROTO怎么赋值成1啊，我试了好多方式，都没成功。","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539879,"discussion_content":"在编译的时候传入这个 env。你可以看看我 github repo 的更新，用了更好的方式，不用手工去控制了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639853041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320854,"user_name":"HelloW","can_delete":false,"product_type":"c1","uid":1066136,"ip_address":"","ucode":"AF6B118886478A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIZW6MusQWI8LyGxvKJcUyPcodqKN9tKxTIZs1bVweiaO2NJtC1zh5diarg8UhaYuorqlicrNibIR21zA/132","comment_is_top":false,"comment_ctime":1636531754,"is_pvip":false,"replies":[{"id":"116398","content":"请参考 github repo 上的代码：https:&#47;&#47;github.com&#47;tyrchen&#47;geektime-rust&#47;blob&#47;master&#47;05_thumbor&#47;Cargo.toml。这是在 windows&#47;linux 上都编译通过的版本。如果系统没有装 openssl lib 可能导致问题，遇到 openssl 的问题，可以安装平台对应的 openssl 版本，或者像链接中那样使用 rustls。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1636557220,"ip_address":"","comment_id":320854,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636531754","product_id":100085301,"comment_content":"在编译proto文件的时候出现了错误。 error: could not compile `openssl-sys` 在prost的GitHub上也没找到相关的issue。 不知道如何解决呢。 第一步就卡住了，╮(╯▽╰)╭","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530144,"discussion_content":"请参考 github repo 上的代码：https://github.com/tyrchen/geektime-rust/blob/master/05_thumbor/Cargo.toml。这是在 windows/linux 上都编译通过的版本。如果系统没有装 openssl lib 可能导致问题，遇到 openssl 的问题，可以安装平台对应的 openssl 版本，或者像链接中那样使用 rustls。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636557220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318386,"user_name":"迎风的树叶","can_delete":false,"product_type":"c1","uid":2358746,"ip_address":"","ucode":"FE606E6F34CA27","user_header":"https://static001.geekbang.org/account/avatar/00/23/fd/da/ef5532b6.jpg","comment_is_top":false,"comment_ctime":1635264430,"is_pvip":true,"replies":[{"id":"116579","content":"你需要在 terminal 中使用环境变量。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1636642555,"ip_address":"","comment_id":318386,"utype":1}],"discussion_count":3,"race_medal":4,"score":"1635264430","product_id":100085301,"comment_content":"RUST_LOG=info target&#47;release&#47;thumbor 这个RUST_LOG在VS Code里面一起输入为啥会报错？<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529218,"discussion_content":"你需要在 terminal 中使用环境变量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636642555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2809311,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/dd/df/8c84df4a.jpg","nickname":"Geek_0b3cde","note":"","ucode":"3948ACECA7953C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409029,"discussion_content":"windows环境下 调用应该改为 `$Env:RUST_LOG=&#39;info&#39;; target/release/thumbor`\n参考：https://doc.rust-lang.org/book/ch12-05-working-with-environment-variables.html","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635352512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2358746,"avatar":"https://static001.geekbang.org/account/avatar/00/23/fd/da/ef5532b6.jpg","nickname":"迎风的树叶","note":"","ucode":"FE606E6F34CA27","race_medal":4,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409281,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635408842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317181,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1634701080,"is_pvip":false,"replies":[{"id":"115247","content":"慢慢来，不着急","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1635123291,"ip_address":"","comment_id":317181,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634701080","product_id":100085301,"comment_content":"今日吐槽：<br>1. 太硬核了，我这个后来的根本赶不上先头部队的进度……<br>2. 第一次编译花了能有10分钟？ 太慢了，大概是时候整个镜像了……<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528703,"discussion_content":"慢慢来，不着急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635123291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316166,"user_name":"InfoQ_31da8ff7fcb1","can_delete":false,"product_type":"c1","uid":1485279,"ip_address":"","ucode":"AEF58B6E4F9E59","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIzVGyhMctYa2jumzLicZVLia0UCTqrWfiaY8pY4c3AbGH2tH5TxONcbicoXGdE3ia43TpXxbZWPZoS6Jg/132","comment_is_top":false,"comment_ctime":1634188774,"is_pvip":false,"replies":[{"id":"115274","content":"你可以看看后面的介绍 trait 的内容，这种 trait  是泛型trait。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1635131317,"ip_address":"","comment_id":316166,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1634188774","product_id":100085301,"comment_content":"```<br>&#47;&#47; SpecTransform：未来如果添加更多的 spec，只需要实现它即可<br>pub trait SpecTransform&lt;T&gt; {<br>    &#47;&#47; 对图片使用 op 做 transform<br>    fn transform(&amp;mut self, op: T);<br>}<br>```<br>这个trait我理解是不是用来弥补rust不支持函数重载而产生的呢？","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528289,"discussion_content":"你可以看看后面的介绍 trait 的内容，这种 trait  是泛型trait。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635131317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1390032,"avatar":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","nickname":"阿成","note":"","ucode":"CEC3CD65FB9333","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406096,"discussion_content":"我觉得可以这么理解，本质上是多态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634699912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315432,"user_name":"Geek_67a5d1","can_delete":false,"product_type":"c1","uid":2683525,"ip_address":"","ucode":"5D8AA78BEB84AE","user_header":"","comment_is_top":false,"comment_ctime":1633903091,"is_pvip":true,"replies":[{"id":"115296","content":"Vec 是自动增长的，这里相当于我在创建时预留了 32k 的空间，如果 32k 大小内的图片，就只需要这一次分配，如果在使用过程中实际用到的要大于 32k，那么就会有额外的分配。这里用 with_capacity() 相对于 new() 来说，能多省一些分配次数","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1635133310,"ip_address":"","comment_id":315432,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1633903091","product_id":100085301,"comment_content":"请问老师，let mut buffer = Vec::with_capacity(32768)，这个数字是从哪里来的呢，对图片处理不是很熟悉，请老师指点一下","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527981,"discussion_content":"Vec 是自动增长的，这里相当于我在创建时预留了 32k 的空间，如果 32k 大小内的图片，就只需要这一次分配，如果在使用过程中实际用到的要大于 32k，那么就会有额外的分配。这里用 with_capacity() 相对于 new() 来说，能多省一些分配次数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635133310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1390032,"avatar":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","nickname":"阿成","note":"","ucode":"CEC3CD65FB9333","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406098,"discussion_content":"我估计就是一个预估的值…… 反正 vec 可变长的……\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634700672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314797,"user_name":"三叶虫tlb","can_delete":false,"product_type":"c1","uid":1010499,"ip_address":"","ucode":"A8236974932E6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/43/b6bcab56.jpg","comment_is_top":false,"comment_ctime":1633438768,"is_pvip":false,"replies":[{"id":"114175","content":"慢慢来，别着急","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1633813602,"ip_address":"","comment_id":314797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1633438768","product_id":100085301,"comment_content":"一行行把代码抄过来，虽然能编译成功并跑起来，但有很多地方不懂。","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527791,"discussion_content":"慢慢来，别着急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633813602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314408,"user_name":"Ryan","can_delete":false,"product_type":"c1","uid":1053460,"ip_address":"","ucode":"11155E0BD72A14","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/14/e5a80f4b.jpg","comment_is_top":false,"comment_ctime":1633003284,"is_pvip":false,"replies":[{"id":"113974","content":"可以使用 enum_dispatch：https:&#47;&#47;docs.rs&#47;enum_dispatch&#47;0.3.7&#47;enum_dispatch&#47;。<br><br>不过这样的代码一般也就是出现一次，如果 enum 内部的分支不多，是否需要额外引入一个包解决这个问题值得商榷。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1633320567,"ip_address":"","comment_id":314408,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1633003284","product_id":100085301,"comment_content":"match spec.data {                Some(spec::Data::Crop(ref v)) =&gt; self.transform(v),                Some(spec::Data::Contrast(ref v)) =&gt; self.transform(v),                Some(spec::Data::Filter(ref v)) =&gt; self.transform(v),                Some(spec::Data::Fliph(ref v)) =&gt; self.transform(v),                Some(spec::Data::Flipv(ref v)) =&gt; self.transform(v),                Some(spec::Data::Resize(ref v)) =&gt; self.transform(v),                Some(spec::Data::Watermark(ref v)) =&gt; self.transform(v),                &#47;&#47; 对于目前不认识的 spec，不做任何处理                _ =&gt; {}            }<br><br>在Photon的Engine实现里，apply方法的match匹配中有什么好的写法吗？感觉也很重复。","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527676,"discussion_content":"可以使用 enum_dispatch：https://docs.rs/enum_dispatch/0.3.7/enum_dispatch/。\n\n不过这样的代码一般也就是出现一次，如果 enum 内部的分支不多，是否需要额外引入一个包解决这个问题值得商榷。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633320567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314384,"user_name":"余泽锋","can_delete":false,"product_type":"c1","uid":1003207,"ip_address":"","ucode":"5AB1499746C003","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/c7/8c2d0a3d.jpg","comment_is_top":false,"comment_ctime":1632992838,"is_pvip":false,"replies":[{"id":"113975","content":"👍","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1633320573,"ip_address":"","comment_id":314384,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1632992838","product_id":100085301,"comment_content":"很喜欢老师的风格，很硬核","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527667,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633320573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313779,"user_name":"Jediii","can_delete":false,"product_type":"c1","uid":1487824,"ip_address":"","ucode":"7F92F9C52D6220","user_header":"https://static001.geekbang.org/account/avatar/00/16/b3/d0/1b44f763.jpg","comment_is_top":false,"comment_ctime":1632662256,"is_pvip":false,"replies":[{"id":"113722","content":"我不确定你代码的上下文是什么，你可以 clone 我的 github repo https:&#47;&#47;github.com&#47;tyrchen&#47;geektime-rust 对比对应的代码。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1632796533,"ip_address":"","comment_id":313779,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1632662256","product_id":100085301,"comment_content":"老师您好，这段代码 Some(f) =&gt; filters::filter(&amp;mut self.0, f.to_str().unwrap())，f 的类型是 Filter 这个 enum 的类型，然后 f.to_str() 会报错，并没有 to_str() 这个方法。<br>希望老师解答，谢谢！","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527466,"discussion_content":"我不确定你代码的上下文是什么，你可以 clone 我的 github repo https://github.com/tyrchen/geektime-rust 对比对应的代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632796533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042555,"avatar":"","nickname":"zzuse","note":"","ucode":"4CC849CC70F116","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405763,"discussion_content":"github 对比 pb/mod.rs, 加辅助代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634639635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1487824,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b3/d0/1b44f763.jpg","nickname":"Jediii","note":"","ucode":"7F92F9C52D6220","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397972,"discussion_content":"已解决！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632709137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313381,"user_name":"面白","can_delete":false,"product_type":"c1","uid":1741221,"ip_address":"","ucode":"F42A585AE12F19","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7I0UXOWuARmefWAM9vBt8hDjWWglmshRQgThUhYOia2LcMIZSsyk6K0ia2Hx8J3KPoXHQXxalbxKBQ/132","comment_is_top":false,"comment_ctime":1632402192,"is_pvip":true,"replies":[{"id":"113523","content":"你可以使用 tracing-appender：https:&#47;&#47;github.com&#47;tokio-rs&#47;tracing&#47;tree&#47;master&#47;tracing-appender","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1632464175,"ip_address":"","comment_id":313381,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1632402192","product_id":100085301,"comment_content":"请问在windows环境下，如何设置输出日志到文件？","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527332,"discussion_content":"你可以使用 tracing-appender：https://github.com/tokio-rs/tracing/tree/master/tracing-appender","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632464175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":312837,"user_name":"红鲤鱼与绿鲤鱼与驴baci","can_delete":false,"product_type":"c1","uid":1199902,"ip_address":"","ucode":"CB7D8A522D665E","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/1e/cb8ddbe9.jpg","comment_is_top":false,"comment_ctime":1632046008,"is_pvip":false,"replies":[{"id":"113409","content":"创建 pb 目录，不是 pd","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1632241053,"ip_address":"","comment_id":312837,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1632046008","product_id":100085301,"comment_content":"老师 上面 您说在src 目录创建pd 然后运行 cargo build 我这里报了如下错误是怎么回事呢 <br>--- stderr<br>  thread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }&#39;, build.rs:6:10<br>  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace<br>","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527132,"discussion_content":"创建 pb 目录，不是 pd","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632241053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197941,"avatar":"https://static001.geekbang.org/account/avatar/00/12/47/75/4d59b6b5.jpg","nickname":"乱匠","note":"","ucode":"9FAC4E465C3582","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395045,"discussion_content":"也不是 pd，😄😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632199266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197941,"avatar":"https://static001.geekbang.org/account/avatar/00/12/47/75/4d59b6b5.jpg","nickname":"乱匠","note":"","ucode":"9FAC4E465C3582","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395044,"discussion_content":"这个问题我以前遇到过，需要手动创建 src/pb 目录，注意是 pb 不是 bp，我当时因为打反了导致一直无法生成出来代码...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632199217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311612,"user_name":"老实人Honey","can_delete":false,"product_type":"c1","uid":1080653,"ip_address":"","ucode":"EA4AB5C0C33090","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/4d/d98865b2.jpg","comment_is_top":false,"comment_ctime":1631336425,"is_pvip":true,"replies":[{"id":"112996","content":"这个我倒没用过。如果不想用 photon-rs，可以使用 image 库。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1631515688,"ip_address":"","comment_id":311612,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631336425","product_id":100085301,"comment_content":"就这个https:&#47;&#47;github.com&#47;linebender&#47;piet 举例，翻了docs也不知道这个东西能不能做resize，做flip","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526680,"discussion_content":"这个我倒没用过。如果不想用 photon-rs，可以使用 image 库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631515688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310692,"user_name":"Geek_be0d87","can_delete":false,"product_type":"c1","uid":2192311,"ip_address":"","ucode":"8259B623EEDCC6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/bqWMox7TsotHiapiaEbJG6YKLfOqYib1b65oW5FA2qiboazIjfSia3VdP90aMKtg3qsibIviaRsYSp9aFia2hYEqgumibug/132","comment_is_top":false,"comment_ctime":1630842338,"is_pvip":false,"replies":[{"id":"112560","content":"prost-build 只在 build.rs 中使用，所以只需要放在 build-dependencies 下。你可以比较下 github repo 里的源代码，看看哪里出了问题。","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630861591,"ip_address":"","comment_id":310692,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1630842338","product_id":100085301,"comment_content":"为什么我的必须把prost-build放到dependencies里 才可以找到包 在build-dependencies会找不到","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526308,"discussion_content":"prost-build 只在 build.rs 中使用，所以只需要放在 build-dependencies 下。你可以比较下 github repo 里的源代码，看看哪里出了问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630861591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1390032,"avatar":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","nickname":"阿成","note":"","ucode":"CEC3CD65FB9333","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406101,"discussion_content":"你估计是 build-dependencies 拼错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634700979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310332,"user_name":"0@1","can_delete":false,"product_type":"c1","uid":1549191,"ip_address":"","ucode":"932A4139DB8169","user_header":"https://static001.geekbang.org/account/avatar/00/17/a3/87/eb923eb3.jpg","comment_is_top":false,"comment_ctime":1630597248,"is_pvip":false,"replies":[{"id":"112435","content":"过奖了，我得继续努力才能配得上这个称赞 :)","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630632056,"ip_address":"","comment_id":310332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630597248","product_id":100085301,"comment_content":"讲Rust最好的老师，没有之一了","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526200,"discussion_content":"过奖了，我得继续努力才能配得上这个称赞 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630632056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310267,"user_name":"空格","can_delete":false,"product_type":"c1","uid":1192357,"ip_address":"","ucode":"D9936389242329","user_header":"https://static001.geekbang.org/account/avatar/00/12/31/a5/c56e7e37.jpg","comment_is_top":false,"comment_ctime":1630573273,"is_pvip":false,"replies":[{"id":"112421","content":"可以，如果文件在内存中，crc64 是纯计算","user_name":"作者回复","user_name_real":"Tyr","uid":"1079375","ctime":1630593428,"ip_address":"","comment_id":310267,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630573273","product_id":100085301,"comment_content":"陈老师，像 rust 能不能支持 wasm 在浏览器端计算大文件的  crc64 值","like_count":0,"discussions":[{"author":{"id":1079375,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/4f/e74f870c.jpg","nickname":"Tyr","note":"","ucode":"EAAFC8063202E0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526178,"discussion_content":"可以，如果文件在内存中，crc64 是纯计算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630593428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}