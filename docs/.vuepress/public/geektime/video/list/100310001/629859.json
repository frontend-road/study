{"id":629859,"title":"112｜理论盘点：基础但不简单的 TCP 协议","content":"<p><strong>课后习题</strong><br>\n请你参考 Python 官方文档关于 socket 库的示例，实现两个程序通过 TCP 协议实现简单通信。</p><p>文档参考地址如下：<br>\n<a href=\"https://docs.python.org/zh-cn/3.10/library/socket.html#example\">https://docs.python.org/zh-cn/3.10/library/socket.html#example</a></p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":368526,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1676424564,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"服务端如下\n# Echo server program\nimport socket\n\nHOST = &#39;&#39;                 # Symbolic name meaning all available interfaces\nPORT = 50007              # Arbitrary non-privileged port\nwith socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n    s.bind((HOST, PORT))\n    s.listen(1)\n    conn, addr = s.accept()\n    with conn:\n        print(&#39;Connected by&#39;, addr)\n        while True:\n            data = conn.recv(1024)\n            if not data: break\n            conn.sendall(data)\n\n\n\n客户端如下\n# Echo client program\nimport socket\n\nHOST = &#39;127.0.0.1&#39;    # The remote host\nPORT = 50007              # The same port as used by the server\nwith socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n    s.connect((HOST, PORT))\n    s.sendall(b&#39;Hello, world&#39;)\n    data = s.recv(1024)\nprint(&#39;Received&#39;, repr(data))","like_count":1},{"had_liked":false,"id":385314,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702432965,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"你可以使用 Python 的 `socket` 库来通过 TCP 协议实现两个程序之间的简单通信。以下是一个示例：\n\n**服务器端**：\n\n```python\nimport socket\n\n# 创建一个 socket 对象\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# 绑定到一个地址和端口\ns.bind((&#39;localhost&#39;, 12345))\n\n# 开始 TCP 监听\ns.listen(5)\n\nwhile True:\n    # 建立客户端连接\n    c, addr = s.accept()\n\n    print(&#39;连接地址：&#39;, addr)\n\n    # 发送数据\n    c.send(b&#39;欢迎访问菜鸟教程！&#39;)\n\n    # 关闭连接\n    c.close()\n```\n\n**客户端**：\n\n```python\nimport socket\n\n# 创建一个 socket 对象\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# 连接到服务器\ns.connect((&#39;localhost&#39;, 12345))\n\n# 接收数据\nprint(s.recv(1024))\n\n# 关闭连接\ns.close()\n```\n\n在这个示例中，服务器监听 localhost 的 12345 端口，当客户端连接到这个端口时，服务器会发送一条欢迎消息。客户端连接到服务器，接收这条消息，然后关闭连接。\n\n**注意**：这两个程序需要在同一台机器上的不同终端窗口中运行，或者在两台连接到同一网络的机器上运行。你需要先运行服务器端的程序，然后再运行客户端的程序。\n\n希望这个答案对你有所帮助！","like_count":0}]}