{"id":629677,"title":"01｜编程环境：工欲善其事，必先利其器","content":"<p>你好，我是王健伟。</p><p>俗话说，“工欲善其事，必先利其器”，今天我们就来说说编程环境的搭建。</p><p>搭建一个良好的编程环境对于后续的学习非常重要，所谓好的编程环境，是指这个编程环境易学，易用，让使用者很少出错，即便出现错误也能根据一些信息快速定位出错的位置。</p><p>偶尔会听到有人建议开发者用纯记事本写程序而不采用任何编程环境，通过这样的方式锻炼自己编写程序的能力。这种说法是令人匪夷所思的！</p><p>这节课，我们就从C++编程环境的搭建，创建最基本的能运行的C++程序以及Visual Studio中程序的调试方法这几个方面，帮助你快速搞定一个C++语言的编程环境，让后续的学习更加便捷、高效。</p><h1>C++编程环境搭建</h1><p>咱们这门课所展示的各种范例，会在Windows操作系统平台上进行演示。对于演示环境的要求不高，我一般使用Visual Studio，版本上不建议使用比Visual Studio 2005更老的版本，以免在太老的开发环境下出现某些范例无法成功演示的窘境。注意，<strong>能使用高版本，尽量不使用低版本。</strong></p><p>这门课程采用的演示环境是Visual Studio 2022集成开发环境。该环境使用简单，调试方便，这意味着讲解和演示会变得特别方便，同时也能大大降低你对一些复杂知识的理解难度。</p><!-- [[[read_end]]] --><p>为了让你顺利地开始学习，在这里将详细地阐述一下Visual Studio 2022的安装过程（在线安装，需要网络支持）。</p><p>Visual Studio 2022是目前微软公司推出的最新版本集成开发环境，可以直接访问<a href=\"https://visualstudio.microsoft.com/zh-hans/\">网站</a>。这个页面就有Visual Studio 2022的下载，分为三个版本：社区版（Community）、专业版（Professional）、企业版（Enterprise）。其中社区版是可以免费使用的，下载社区版即可。</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/ef/2ac73a9175016b669baeb27da3f9a5ef.png?wh=427x454\" alt=\"图片\" title=\"图1&nbsp; Visual Studio 2012可供下载的三个版本\"></p><p>在图1中单击Community 2022，此时会将一个大概2MB的可执行文件下载到自己的电脑上，这个可执行文件实际是个下载器，运行该下载器，它会按步骤提示下载和安装Visual Studio 2022。</p><p>这种安装方式属于在线下载和安装，整个过程可能会持续半小时到数小时之间，安装时长主要取决于网速和计算机速度。</p><p>安装过程中会出现选择框，让用户选择安装哪些组件，如图2所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/e0/61/e0658b2bdb4ef85ed048bfb139f21a61.png?wh=1226x453\" alt=\"图片\" title=\"图2&nbsp; Visual Studio 2022安装选项\"></p><p>这里只选择“使用C++的桌面开发”以及“通用Windows平台开发”，在选择这两个选项时，安装界面右侧会出现额外的安装详细信息，里面有很多可以勾选的项，保持默认，不做进一步勾选。</p><p>请记住一个原则：<strong>只安装看上去和C++开发有关的选项，即便错过了一些选项，以后可以重复这个步骤补充安装，但切不可图省事而完全安装</strong>，因为那可能会耗费数十甚至上百GB的磁盘空间，完全没有必要。</p><p>在图2左侧靠下的“位置”处，可以单击“更改”，尽量把安装位置设置到非C盘（非系统盘）的位置以尽量减少对系统盘空间的耗费，系统盘空间非常宝贵，一旦空间耗尽可能会导致计算机运行变慢甚至崩溃等各种问题。这一点也请切记！</p><p>安装完成后，很可能在计算机的桌面上看不到Visual Studio 2022程序图标，此时必须到操作系统左下角，单击“开始”按钮，然后往下翻，一直找到Visual Studio 2022图标，如图3所示，用鼠标单击并按住图形部分拖动到桌面上以创建桌面快捷方式，下次双击桌面上的该图标即可运行Visual Studio 2022。</p><p><img src=\"https://static001.geekbang.org/resource/image/87/5b/87b23f3cba7a07d304ba067978f6a75b.png?wh=264x102\" alt=\"图片\" title=\"图3&nbsp; 开始菜单中的Visual Studio 2022运行图标\"></p><p>双击Visual Studio 2022图标以运行Visual Studio 2022，启动界面如图4所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/a3/f1/a3b2219a43991cda4b26c6ff9a06dff1.png?wh=1002x667\" alt=\"图片\" title=\"图4&nbsp; Visual Studio 2022启动界面\"></p><p>单击图4的右下角的“继续但无需代码”链接直接进入到开发环境中，因为这是个集成开发环境，可以开发很多种计算机编程语言所编写的代码，所以第一步先设置开发环境为C++语言，在开发环境中，进行这样几步操作。</p><ol>\n<li>选择菜单“工具、导入和导出设置”命令；</li>\n<li>在弹出的对话框中，选择最下面的“重置所有设置”选项并单击“下一步”按钮；</li>\n<li>选择下面的“否，仅重置设置，从而覆盖当前设置”项并单击“下一步”按钮；</li>\n<li>选择“Visual C++”选项并单击“完成”按钮。</li>\n</ol><p>等待数秒时间，设置完成后单击“关闭”按钮并退出整个Visual Studio 2022，就完成了将开发环境设置为C++语言的操作步骤。</p><p>Visual Studio 2022会不定时更新，当需要更新时，在Visual Studio 2022界面上会有提示。单击提示会出现一些操作步骤，按照操作步骤进行操作就可以在线更新。值得一提的是，可能需要注册一个账号才能进行正常的在线更新，我们直接根据系统提示进行注册即可。</p><h1>创建最基本的能运行的C++程序</h1><p>安装好之后，为了后续做范例演示的方便，我们要做的第一件事就是创建一个最基本的能运行的C++程序。</p><p>在Visual Studio 2022中，只需要点几下菜单，就能创建出一个最基本的能运行的C++程序，其他的Visual Studio版本操作也类似，你可以参考下面的步骤。</p><ol>\n<li>启动Visual Studio 2022；</li>\n<li>在启动界面，单击右下角“创建新项目”选项，会弹出如图5所示的对话框，选择“控制台应用”选项，并单击“下一步”按钮；</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/4b/3c/4bf87b4eb2a52cb87ee407b966f15d3c.png?wh=988x651\" alt=\"图片\" title=\"图5&nbsp; Visual Studio 2022创建新项目\"></p><ol start=\"3\">\n<li>让系统新创建一个项目，请记住，Visual Studio 2022中，任何一个可执行程序都是通过新建一个项目的方式得来，所以新建一个项目是必须的。在图6中，我们还需要填写一些项目的配置信息：项目名称、位置以及解决方案名称。</li>\n</ol><p><strong>项目名称：</strong>为创建的项目起的名字，例如输入MyProject。</p><p><strong>位置：</strong>保存此项目的位置，可以直接输入一个目录路径，或单击后面的“…”按钮，选择一个已存在的目录名，这里导航到事先创建好的路径：C:\\Users\\KuangXiang\\Desktop\\C++（可根据需要自由选择路径）。</p><p><strong>解决方案名称：</strong>一个解决方案里可以包含多个项目，Visual Studio开发环境硬性要求一个项目必须被包含在一个解决方案里。同时，一个项目最终可以生成一个可执行程序，所以创建MyProject项目时，Visual Studio 2022会连带创建一个解决方案，并让MyProject项目包含在该解决方案里。</p><p>解决方案名称这里输入MySolution。</p><p><img src=\"https://static001.geekbang.org/resource/image/26/10/26c14554948c0a5d1348b36df49d8b10.png?wh=560x355\" alt=\"图片\" title=\"图6&nbsp; 新项目的一些配置信息\"></p><p>4.&nbsp;单击图6右下角的 “创建”按钮，系统就会开始创建项目，几秒钟后，系统会创建好一个叫MyProject的项目，正好位于MySolution解决方案之下。如图7所示。</p><p>因版本不断升级变化，每个人看到的界面内容可能会略有差异，这不要紧，不过一定注意，不要随意改动内容，以免出错。</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/f2/a867cyy7c97572f473cea79d89f0c0f2.png?wh=1228x454\" alt=\"图片\" title=\"图7&nbsp; 成功创建了一个新项目\"></p><p>如果你使用的是其他Visual Studio版本，创建项目的步骤大同小异，只要能创建一个基于控制台的C++程序项目供后续学习使用即可。如果不确定自己使用的Visual Studio版本如何创建项目，通过搜索引擎搜索诸如“Visual Studio 2022创建新C++项目”这样的关键词组合就能找到详细答案。</p><p>之后，展开图7左侧的“源文件”文件夹的树状分支，会发现其中包含一个MyProject.cpp文件。这是系统依据图6所起的项目名称生成的一个源码文件，里面已经包含一些C++源码，其实目前系统生成的该项目已经能够编译并运行了。</p><p><strong>项目要先编译、链接、生成可执行程序，然后才能运行</strong>。这一整套动作用快捷键Ctrl+F5就可以完成，该快捷键在很多Visual Studio版本中通用，记住它。如果出现一个提示窗口，可以按提示窗口中的Yes，也可以直接按回车键进行确认。</p><p>如果按Ctrl+F5键之后Visual Studio 2022没任何反应，可能是这个快捷键被其他软件所占用，此时可以用Visual Studio 2022中的菜单命令代替，依次单击如图8所示的菜单命令“调试、开始执行（不调试）”命令也能达到编译、链接、生成可执行程序并开始执行的效果。</p><p><img src=\"https://static001.geekbang.org/resource/image/9a/82/9a97a43cda37fda6ed957593bb7dca82.png?wh=254x197\" alt=\"图片\" title=\"图8&nbsp; 编译生成可执行程序并执行\"></p><p>可执行程序运行起来后，出现一个背景为黑色的窗口，其中显示Hello World字符串如图9所示。</p><p>因为刚才创建项目时选择的是“控制台应用”，这种“控制台应用”项目运行后显示的正是一个黑色窗口，该窗口中会显示程序执行的结果，通过该窗口显示运行结果完全能够满足本课程的学习要求。</p><p><img src=\"https://static001.geekbang.org/resource/image/5a/e9/5a57c24033a1b7799bc45f0f1c4212e9.png?wh=1154x114\" alt=\"图片\" title=\"图9&nbsp; 可执行程序的执行结果\"></p><p>此时按任意键，黑窗口就会关闭。可执行程序执行结果中之所以会显示Hello World！，是因为在MyProject.cpp源码文件中有如图10所示代码行的缘故，代码的含义属于C++的基础开发知识，相信你一定非常熟悉，在这里就不多说了。</p><p><img src=\"https://static001.geekbang.org/resource/image/5f/3c/5fbde3c7f5f8ac7bfff4bfe8d6e37c3c.png?wh=481x169\" alt=\"图片\" title=\"图10&nbsp; 输出语句std::cout向屏幕输出字符串Hello World\"></p><h1>Visual Studio中程序的调试方法</h1><p>一切准备就绪后，我们讲述一下程序调试的方法，毕竟尤其是新手，在编写程序的过程中会经常犯错误，例如程序执行的效果并不是自己所期望的，程序运行崩溃，或者在阅读他人代码时要理清代码的执行流程等，都需要对程序进行调试。</p><h2>普通的断点调试（跟踪调试）</h2><p>首先，我介绍一下如何在Visual Studio 2022（其他Visual Studio版本也类似）中进行程序的调试。</p><ol>\n<li>快捷键F9（对应菜单“调试→切换断点”），用于给光标所在的行增加断点（设置断点）或取消该行已有的断点，断点行最前面会有一个红色的小圆球表示该行有一个断点，如图11所示，可以通过将光标定位到多个行并每次都按F9来为多个行增加断点。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/5f/9c/5f0637ae05f46cfd83de80e6f695cb9c.png?wh=396x120\" alt=\"图片\" title=\"图11&nbsp; 给某行增加断点后该行前面出现红色小圆球\"></p><ol start=\"2\">\n<li>快捷键F5（对应菜单“调试→开始调试”），用于开始执行程序，遇到第一个断点行就停下来，如图12所示，程序停到了第8行，这个红色圆球中间多了一个向右指向的黄色小箭头，表示程序执行流程停止到了这一行（虽然停止到了这一行，但是此刻这一行还没有被执行，表示即将要执行）。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/b0/bc/b0fe7e7423c8221aa420099f6a489dbc.png?wh=400x143\" alt=\"图片\" title=\"图12&nbsp; 断点停止到了第8行\"></p><ol start=\"3\">\n<li>\n<p>此时，因为程序执行流程已经停了下来，处于程序员（我们）的控制之中，所以就在此刻，可以多次使用快捷键F10（对应菜单“调试→逐过程”），从当前停下来的这行开始，一行一行的执行下去，一边逐行执行，一边可以观察程序的执行走向（比如如果是条件语句就会因为不同的条件执行不同的分支）以及各种变量的值，从而达到调试的目的。</p>\n</li>\n<li>\n<p>如果断点停在了一个自定义函数调用行，并且希望跟踪到这个函数里面的语句行中去，可以使用快捷键F11（对应菜单“调试→逐语句”），跳入到函数中继续跟踪调试。如果想从当前所在的函数跳出去，可以使用快捷键Shift+F11（对应菜单“调试→跳出”），就能够跳回到该函数的调用处并继续往下跟踪调试。</p>\n</li>\n</ol><h2>学会调试时查看内存中的内容</h2><p>在程序调试的过程中，学会查看内存中的内容对于深入掌握C/C++语言编程好处巨大。比如有时候需要看一看变量在内存中是如何存储的，或者某一块内存地址保存的是什么内容之类的问题，就都需要查看内存中的内容。</p><p>那么具体要怎么实现呢？</p><p>举个例子。下面是两行演示代码，按F9把断点设置到如下的printf行。</p><pre><code class=\"language-plain\">char aaa[1000] = \"safasdfa\\0def\";\nprintf(aaa);\n</code></pre><p>按F5执行整个程序，使断点停在printf行上，那么此时此刻，就相当于处在了调试程序中，如图13所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/84/3a/84fddc0afcce926fb8c12a99e303903a.png?wh=411x76\" alt=\"图片\" title=\"图13 正处于调试程序状态中\"></p><p>在此种状态下，按下快捷键alt+6或者选择菜单“调试→窗口→内存→内存1”，则在整个Visual Studio 2022的下方，就打开了内存查看窗口，如图14所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/e4/61/e4a77287c6b21b158fdf3b034d6a3561.png?wh=560x143\" alt=\"图片\" title=\"图14&nbsp; 在调试时可以打开调试窗口中的“内存”窗口来查看内存中的内容\"></p><p>我们只需要在图14左上角位置“地址”右侧的编辑框中输入地址符&amp;，后面跟要查看的变量名，然后按一下回车（比如这里输入&amp;aaa并按回车），就可以看该变量的地址所代表的内存中的内容了。</p><p>或者，在图13所示的第78行，双击选中aaa这个变量名，直接按住鼠标左键往图14中左上角位置“地址”右侧的编辑框中拖动并按回车，也能达到查看aaa变量所代表的内存中内容的目的，如图15所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/83/10/83a4820e27a6124c45994e94156e6010.png?wh=560x143\" alt=\"图片\" title=\"图15&nbsp; 变量aaa在内存中的内容\"></p><p>图15所示的内存窗口中，左上角的“地址”部分显示的0x00D3F288是变量aaa所代表的内存地址。</p><p>往下看，分成三部分。</p><p><strong>左侧部分</strong>显示的内存地址，是变量aaa的地址以及附近的内存地址。</p><p><strong>中间部分</strong>显示的是内存地址中保存的十六进制数字内容。</p><p>没错，内存中保存的数据都是二进制数据，为了方便观察，Visual Studio 2022中把这些二进制数据以十六进制形式显示出来，四位二进制数字显示为一位十六进制数字。</p><p><strong>右侧部分</strong>显示的是内存中的十六进制数字所代表的一些字符，有些可显示字符会显示出来，对于不可显示的字符就用.来代替。</p><p>程序代码中的“safasdfa\\0def”字样，与在中间的内存中的内容进行比较，可以看到，“\\0”这个转义字符在内存中显示的十六进制数字为00，其它的字符比如“a”这个字符在内存中显示的十六进制数字为61，十六进制的61正好是十进制的97，而十进制的97正好就是字符“a”的ASCII码。</p><p>所以，在内存中存放一个字符时，存放的其实就是该字符的ASCII码。</p><h2>快速监视窗口</h2><p>最后，我们来说一下如何使用快速监视窗口。当运行着的程序停到断点处时，也可以按Shift+F9（对应菜单：调试→快速监视），并在其中输入要监视的变量内容，这样也是可以看到变量中所保存的数据的。</p><p>比如输入&amp;aaa并按回车，可以看到aaa的地址，地址中的内容也是清晰可见的，如图16所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/c9/58/c9be7753db1bf2e457327b700a1e9458.png?wh=305x311\" alt=\"图片\" title=\"图16&nbsp; 快速监视窗口，用于快速查看变量的值、变量的地址等等\"></p><h1>小结</h1><p>到这里，今天的内容就讲解的差不多了。我们来总结一下。</p><p>这节课，我们对C++编程环境的搭建进行了详细讲解。主要包括Visual Studio 2022集成开发环境的详细安装步骤，在Visual Studio 2022集成开发环境中创建一个最基本的能够运行的C++ 程序的方法，以及在Visual Studio中程序的调试方法。</p><p>关于调试方法，有三个比较重要的方面。</p><ol>\n<li>在某行增加断点并执行到断点行、逐行执行程序、跳入到函数中继续跟踪以及从函数中跳出来；</li>\n<li>调试时在内存窗口查看内存中的内容；</li>\n<li>利用快速监视窗口查看变量的地址、值等。</li>\n</ol><p>C++编程环境虽然有很多，但对于初学者，编程环境的搭建和使用越简单越好。我不赞同在开始学习编程时花大量时间去学习诸如GDB这样的命令行调试工具，毕竟难以使用并且需要记忆很多命令。与此同时， 我们节省出精力来，去学习更重要的内容——C++程序的编写，不是更好嘛？</p><p>掌握了Visual Studio 2022中程序的调试方法，就可以在后面的学习中利用这些手段帮助自己快速地看懂别人所写的代码、快速地找到自己代码中存在的问题等，从而达到大幅度加速掌握新知识的效果。</p><p>从下个版块开始，我们就要真正进入到C++数据结构与算法知识的学习中去了，我将讲解各种常用的数据结构和算法。在此之前，强烈建议你把Visual Studio开发环境搭建好，方便后续动手实践每节课所讲的内容，让我们的学习效果事半功倍。</p><h1><strong>归纳思考</strong></h1><ol>\n<li>Visual Studio 2022集成开发环境中常用的快捷键有哪些？</li>\n<li>如何在调试程序时观察变量的内容？</li>\n<li>如何在调试程序时打开内存窗口以观察内存中的内容？</li>\n</ol><p>欢迎你在留言区和我互动。如果觉得有所收获，也可以分享给更多的朋友一起学习。我们下一讲见！</p>","neighbors":{"left":{"article_title":"开篇词｜学习数据结构与算法，也可以是件小事","id":628080},"right":{"article_title":"02｜顺序表（上）：如何实现快速地随机访问？","id":630683}},"comments":[{"had_liked":false,"id":368783,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"广东","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":true,"comment_ctime":1676704278,"is_pvip":false,"replies":[{"id":134337,"content":"👏👏","user_name":"作者回复","user_name_real":"编辑","uid":1104356,"ctime":1676809785,"ip_address":"广东","comment_id":368783,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100524201,"comment_content":"Mac环境大家可以使用VScode或者clion","like_count":4,"discussions":[{"author":{"id":1104356,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/e4/791d0f5e.jpg","nickname":"KuangXiang","note":"","ucode":"BEEB53A49BA695","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":605637,"discussion_content":"👏👏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676809785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370288,"user_name":"Geek_b3775c","can_delete":false,"product_type":"c1","uid":2919220,"ip_address":"上海","ucode":"811863B575B36D","user_header":"","comment_is_top":false,"comment_ctime":1678682118,"is_pvip":false,"replies":[{"id":135035,"content":"因这门课我参照了数十门同类课程和书籍以达到给大家传递最好的知识的效果，导致这两篇内容无意中用到了和其他本站同类的另一门课程类似的标题和内容表述，尽管我多次修改，但该课程作者仍旧很介意并认为和他的内容依旧很雷同。为避免冲突，我和内容负责同志多次沟通，最后将这些内容删除。算法时间和空间复杂度概念网上较很多，请大家参照着学习。对大家造成的不便还请大家给以理解和谅解。","user_name":"作者回复","user_name_real":"编辑","uid":1104356,"ctime":1678702189,"ip_address":"广东","comment_id":370288,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100524201,"comment_content":"为啥把算法复杂度讲解的那两篇删掉了，我还想再看一遍呢","like_count":3,"discussions":[{"author":{"id":1104356,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/e4/791d0f5e.jpg","nickname":"KuangXiang","note":"","ucode":"BEEB53A49BA695","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608862,"discussion_content":"我们这门课是靠编写完整详实的代码来吃饭的，所以不用太介意，学下去，自会发现他的价值。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1678702544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1104356,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/e4/791d0f5e.jpg","nickname":"KuangXiang","note":"","ucode":"BEEB53A49BA695","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608859,"discussion_content":"因这门课我参照了数十门同类课程和书籍以达到给大家传递最好的知识的效果，导致这两篇内容无意中用到了和其他本站同类的另一门课程类似的标题和内容表述，尽管我多次修改，但该课程作者仍旧很介意并认为和他的内容依旧很雷同。为避免冲突，我和内容负责同志多次沟通，最后将这些内容删除。算法时间和空间复杂度概念网上较很多，请大家参照着学习。对大家造成的不便还请大家给以理解和谅解。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1678702189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111985,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/b1/982ea185.jpg","nickname":"美妙的代码","note":"","ucode":"9DADD72C193296","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":617129,"discussion_content":"复杂度分析是整个算法学习的精髓，只要掌握了它，数据结构和算法的内容基本上就掌握了一半。实际情况是很多场景下，我们都不会分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683336910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373328,"user_name":"plh","can_delete":false,"product_type":"c1","uid":1031828,"ip_address":"四川","ucode":"D79F2B87AC3AD2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erEHTaQDkWqEYib9iabib8rACYpSFBHTPFmgicUKaib79MB6VIxNwiajHUS8kYFEKCGOjpibf0dibhIjqhfzg/132","comment_is_top":false,"comment_ctime":1682396098,"is_pvip":false,"replies":[{"id":136365,"content":"言之有理","user_name":"作者回复","user_name_real":"编辑","uid":1104356,"ctime":1682428526,"ip_address":"广东","comment_id":373328,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100524201,"comment_content":"c++ 环境的搭建应该属于 c++ 程序员的基本功. ","like_count":2,"discussions":[{"author":{"id":1104356,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/e4/791d0f5e.jpg","nickname":"KuangXiang","note":"","ucode":"BEEB53A49BA695","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":615774,"discussion_content":"言之有理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682428526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371622,"user_name":"1043","can_delete":false,"product_type":"c1","uid":1485365,"ip_address":"黑龙江","ucode":"AAA69CC175AEE3","user_header":"https://static001.geekbang.org/account/avatar/00/16/aa/35/1a4884f9.jpg","comment_is_top":false,"comment_ctime":1680109514,"is_pvip":false,"replies":[{"id":135592,"content":"讲实话，老师出的所有课程都是针对C++找工作求职方面的。针对你提到的信奥赛，我确实不熟不能乱答，但我想难度大不过就业水平。《C++新经典》五本书你都啃下来的话，C++基础知识和水平轻松超过90%同层次开发者，但作为开始学习C++，读《C++新经典》和《C++新经典：对象模型》这两本足以，加油💪。对象模型这本一定要读，神书，等你成长到一定程度你会懂的。","user_name":"作者回复","user_name_real":"作者","uid":1104356,"ctime":1680143680,"ip_address":"广东","comment_id":371622,"utype":1}],"discussion_count":2,"race_medal":4,"score":2,"product_id":100524201,"comment_content":"请问王老师，如果初中生学好老师的这套算法和数据结构再外加cpp语言基本功，我应该再买一本cpp新经典，老师能否指点一下，具体买哪一本吗？还是一套五本都买来通读更有利于学生参加信奥赛水平？","like_count":0,"discussions":[{"author":{"id":1104356,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/e4/791d0f5e.jpg","nickname":"KuangXiang","note":"","ucode":"BEEB53A49BA695","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611514,"discussion_content":"讲实话，老师出的所有课程都是针对C++找工作求职方面的。针对你提到的信奥赛，我确实不熟不能乱答，但我想难度大不过就业水平。《C++新经典》五本书你都啃下来的话，C++基础知识和水平轻松超过90%同层次开发者，但作为开始学习C++，读《C++新经典》和《C++新经典：对象模型》这两本足以，加油💪。对象模型这本一定要读，神书，等你成长到一定程度你会懂的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1680143681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485365,"avatar":"https://static001.geekbang.org/account/avatar/00/16/aa/35/1a4884f9.jpg","nickname":"1043","note":"","ucode":"AAA69CC175AEE3","race_medal":4,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611604,"discussion_content":"多谢老师解答，万分感谢👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680185508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"黑龙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370440,"user_name":"Yj.yolo","can_delete":false,"product_type":"c1","uid":2814082,"ip_address":"广东","ucode":"0ED1B41F124061","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f0/82/f235d91d.jpg","comment_is_top":false,"comment_ctime":1678813233,"is_pvip":false,"replies":[{"id":135080,"content":"对于我来说，教一个东西却没教懂别人，不如不教，因为那会给别人徒增烦恼浪费别人时间。😀😀","user_name":"作者回复","user_name_real":"编辑","uid":1104356,"ctime":1678840531,"ip_address":"广东","comment_id":370440,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100524201,"comment_content":"我真的很爱了，以前关于调试时候出现问题只能查，但是没有哪篇文章将VS基础调试讲的这么清楚详细，相见恨晚！","like_count":0,"discussions":[{"author":{"id":1104356,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/e4/791d0f5e.jpg","nickname":"KuangXiang","note":"","ucode":"BEEB53A49BA695","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609105,"discussion_content":"对于我来说，教一个东西却没教懂别人，不如不教，因为那会给别人徒增烦恼浪费别人时间。😀😀","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1678840532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368641,"user_name":"阿阳","can_delete":false,"product_type":"c1","uid":1165817,"ip_address":"江苏","ucode":"20A35FB86B1C5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","comment_is_top":false,"comment_ctime":1676518667,"is_pvip":false,"replies":[{"id":134258,"content":"github我不熟，在本机vs中解决方案下建立一个一个的项目倒是蛮简单的，右击解决方案即可。你的问题可以用搜索引擎查查看。","user_name":"作者回复","user_name_real":"编辑","uid":1104356,"ctime":1676539599,"ip_address":"广东","comment_id":368641,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100524201,"comment_content":"老师好，今后使用vs建立解决方案，在解决方案里建立项目，会自动生成一些项目配置文件。如果想把代码放在github上，我想建立个解决方案，然后在这个方案下为每一节课建立个项目，这种情况下该如何配置gitignore文件呢？","like_count":0,"discussions":[{"author":{"id":1104356,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d9/e4/791d0f5e.jpg","nickname":"KuangXiang","note":"","ucode":"BEEB53A49BA695","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":604996,"discussion_content":"github我不熟，在本机vs中解决方案下建立一个一个的项目倒是蛮简单的，右击解决方案即可。你的问题可以用搜索引擎查查看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676539599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}