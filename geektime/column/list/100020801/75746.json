{"id":75746,"title":"22 | MySQL有哪些“饮鸩止渴”提高性能的方法？","content":"<p>不知道你在实际运维过程中有没有碰到这样的情景：业务高峰期，生产环境的MySQL压力太大，没法正常响应，需要短期内、临时性地提升一些性能。</p><p>我以前做业务护航的时候，就偶尔会碰上这种场景。用户的开发负责人说，不管你用什么方案，让业务先跑起来再说。</p><p>但，如果是无损方案的话，肯定不需要等到这个时候才上场。今天我们就来聊聊这些临时方案，并着重说一说它们可能存在的风险。</p><h1>短连接风暴</h1><p>正常的短连接模式就是连接到数据库后，执行很少的SQL语句就断开，下次需要的时候再重连。如果使用的是短连接，在业务高峰期的时候，就可能出现连接数突然暴涨的情况。</p><p>我在第1篇文章<a href=\"https://time.geekbang.org/column/article/68319\">《基础架构：一条SQL查询语句是如何执行的？》</a>中说过，MySQL建立连接的过程，成本是很高的。除了正常的网络连接三次握手外，还需要做登录权限判断和获得这个连接的数据读写权限。</p><p>在数据库压力比较小的时候，这些额外的成本并不明显。</p><p>但是，短连接模型存在一个风险，就是一旦数据库处理得慢一些，连接数就会暴涨。max_connections参数，用来控制一个MySQL实例同时存在的连接数的上限，超过这个值，系统就会拒绝接下来的连接请求，并报错提示“Too many connections”。对于被拒绝连接的请求来说，从业务角度看就是数据库不可用。</p><!-- [[[read_end]]] --><p>在机器负载比较高的时候，处理现有请求的时间变长，每个连接保持的时间也更长。这时，再有新建连接的话，就可能会超过max_connections的限制。</p><p>碰到这种情况时，一个比较自然的想法，就是调高max_connections的值。但这样做是有风险的。因为设计max_connections这个参数的目的是想保护MySQL，如果我们把它改得太大，让更多的连接都可以进来，那么系统的负载可能会进一步加大，大量的资源耗费在权限验证等逻辑上，结果可能是适得其反，已经连接的线程拿不到CPU资源去执行业务的SQL请求。</p><p>那么这种情况下，你还有没有别的建议呢？我这里还有两种方法，但要注意，这些方法都是有损的。</p><p><strong>第一种方法：先处理掉那些占着连接但是不工作的线程。</strong></p><p>max_connections的计算，不是看谁在running，是只要连着就占用一个计数位置。对于那些不需要保持的连接，我们可以通过kill connection主动踢掉。这个行为跟事先设置wait_timeout的效果是一样的。设置wait_timeout参数表示的是，一个线程空闲wait_timeout这么多秒之后，就会被MySQL直接断开连接。</p><p>但是需要注意，在show processlist的结果里，踢掉显示为sleep的线程，可能是有损的。我们来看下面这个例子。</p><p><img src=\"https://static001.geekbang.org/resource/image/90/2a/9091ff280592c8c68665771b1516c62a.png?wh=1246*234\" alt=\"\"></p><center><span class=\"reference\">图1 sleep线程的两种状态</span></center><p>在上面这个例子里，如果断开session A的连接，因为这时候session A还没有提交，所以MySQL只能按照回滚事务来处理；而断开session B的连接，就没什么大影响。所以，如果按照优先级来说，你应该优先断开像session B这样的事务外空闲的连接。</p><p>但是，怎么判断哪些是事务外空闲的呢？session C在T时刻之后的30秒执行show processlist，看到的结果是这样的。</p><p><img src=\"https://static001.geekbang.org/resource/image/ae/25/ae6a9ceecf8517e47f9ebfc565f0f925.png?wh=1022*157\" alt=\"\"></p><center><span class=\"reference\">图2 sleep线程的两种状态，show processlist结果</span></center><p>图中id=4和id=5的两个会话都是Sleep 状态。而要看事务具体状态的话，你可以查information_schema库的innodb_trx表。</p><p><img src=\"https://static001.geekbang.org/resource/image/ca/e8/ca4b455c8eacbf32b98d1fe9ed9876e8.png?wh=755*682\" alt=\"\"></p><center><span class=\"reference\">图3 从information_schema.innodb_trx查询事务状态</span></center><p>这个结果里，trx_mysql_thread_id=4，表示id=4的线程还处在事务中。</p><p>因此，如果是连接数过多，你可以优先断开事务外空闲太久的连接；如果这样还不够，再考虑断开事务内空闲太久的连接。</p><p>从服务端断开连接使用的是kill connection + id的命令， 一个客户端处于sleep状态时，它的连接被服务端主动断开后，这个客户端并不会马上知道。直到客户端在发起下一个请求的时候，才会收到这样的报错“ERROR 2013 (HY000): Lost connection to MySQL server during query”。</p><p>从数据库端主动断开连接可能是有损的，尤其是有的应用端收到这个错误后，不重新连接，而是直接用这个已经不能用的句柄重试查询。这会导致从应用端看上去，“MySQL一直没恢复”。</p><p>你可能觉得这是一个冷笑话，但实际上我碰到过不下10次。</p><p>所以，如果你是一个支持业务的DBA，不要假设所有的应用代码都会被正确地处理。即使只是一个断开连接的操作，也要确保通知到业务开发团队。</p><p><strong>第二种方法：减少连接过程的消耗。</strong></p><p>有的业务代码会在短时间内先大量申请数据库连接做备用，如果现在数据库确认是被连接行为打挂了，那么一种可能的做法，是让数据库跳过权限验证阶段。</p><p>跳过权限验证的方法是：重启数据库，并使用–skip-grant-tables参数启动。这样，整个MySQL会跳过所有的权限验证阶段，包括连接过程和语句执行过程在内。</p><p>但是，这种方法特别符合我们标题里说的“饮鸩止渴”，风险极高，是我特别不建议使用的方案。尤其你的库外网可访问的话，就更不能这么做了。</p><p>在MySQL 8.0版本里，如果你启用–skip-grant-tables参数，MySQL会默认把 --skip-networking参数打开，表示这时候数据库只能被本地的客户端连接。可见，MySQL官方对skip-grant-tables这个参数的安全问题也很重视。</p><p>除了短连接数暴增可能会带来性能问题外，实际上，我们在线上碰到更多的是查询或者更新语句导致的性能问题。其中，查询问题比较典型的有两类，一类是由新出现的慢查询导致的，一类是由QPS（每秒查询数）突增导致的。而关于更新语句导致的性能问题，我会在下一篇文章和你展开说明。</p><h1>慢查询性能问题</h1><p>在MySQL中，会引发性能问题的慢查询，大体有以下三种可能：</p><ol>\n<li>\n<p>索引没有设计好；</p>\n</li>\n<li>\n<p>SQL语句没写好；</p>\n</li>\n<li>\n<p>MySQL选错了索引。</p>\n</li>\n</ol><p>接下来，我们就具体分析一下这三种可能，以及对应的解决方案。</p><p><strong>导致慢查询的第一种可能是，索引没有设计好。</strong></p><p>这种场景一般就是通过紧急创建索引来解决。MySQL 5.6版本以后，创建索引都支持Online DDL了，对于那种高峰期数据库已经被这个语句打挂了的情况，最高效的做法就是直接执行alter table 语句。</p><p>比较理想的是能够在备库先执行。假设你现在的服务是一主一备，主库A、备库B，这个方案的大致流程是这样的：</p><ol>\n<li>\n<p>在备库B上执行 set sql_log_bin=off，也就是不写binlog，然后执行alter table 语句加上索引；</p>\n</li>\n<li>\n<p>执行主备切换；</p>\n</li>\n<li>\n<p>这时候主库是B，备库是A。在A上执行 set sql_log_bin=off，然后执行alter table 语句加上索引。</p>\n</li>\n</ol><p>这是一个“古老”的DDL方案。平时在做变更的时候，你应该考虑类似gh-ost这样的方案，更加稳妥。但是在需要紧急处理时，上面这个方案的效率是最高的。</p><p><strong>导致慢查询的第二种可能是，语句没写好。</strong></p><p>比如，我们犯了在第18篇文章<a href=\"https://time.geekbang.org/column/article/74059\">《为什么这些SQL语句逻辑相同，性能却差异巨大？》</a>中提到的那些错误，导致语句没有使用上索引。</p><p>这时，我们可以通过改写SQL语句来处理。MySQL 5.7提供了query_rewrite功能，可以把输入的一种语句改写成另外一种模式。</p><p>比如，语句被错误地写成了 select * from t where id + 1 = 10000，你可以通过下面的方式，增加一个语句改写规则。</p><pre><code>mysql&gt; insert into query_rewrite.rewrite_rules(pattern, replacement, pattern_database) values (&quot;select * from t where id + 1 = ?&quot;, &quot;select * from t where id = ? - 1&quot;, &quot;db1&quot;);\n\ncall query_rewrite.flush_rewrite_rules();\n</code></pre><p>这里，call query_rewrite.flush_rewrite_rules()这个存储过程，是让插入的新规则生效，也就是我们说的“查询重写”。你可以用图4中的方法来确认改写规则是否生效。</p><p><img src=\"https://static001.geekbang.org/resource/image/47/8a/47a1002cbc4c05c74841591d20f7388a.png?wh=1734*385\" alt=\"\"></p><center><span class=\"reference\">图4 查询重写效果</span></center><p><strong>导致慢查询的第三种可能，就是碰上了我们在第10篇文章</strong><a href=\"https://time.geekbang.org/column/article/71173\"><strong>《MySQL为什么有时候会选错索引？》</strong></a><strong>中提到的情况，MySQL选错了索引。</strong></p><p>这时候，应急方案就是给这个语句加上force index。</p><p>同样地，使用查询重写功能，给原来的语句加上force index，也可以解决这个问题。</p><p>上面我和你讨论的由慢查询导致性能问题的三种可能情况，实际上出现最多的是前两种，即：索引没设计好和语句没写好。而这两种情况，恰恰是完全可以避免的。比如，通过下面这个过程，我们就可以预先发现问题。</p><ol>\n<li>\n<p>上线前，在测试环境，把慢查询日志（slow log）打开，并且把long_query_time设置成0，确保每个语句都会被记录入慢查询日志；</p>\n</li>\n<li>\n<p>在测试表里插入模拟线上的数据，做一遍回归测试；</p>\n</li>\n<li>\n<p>观察慢查询日志里每类语句的输出，特别留意Rows_examined字段是否与预期一致。（我们在前面文章中已经多次用到过Rows_examined方法了，相信你已经动手尝试过了。如果还有不明白的，欢迎给我留言，我们一起讨论）。</p>\n</li>\n</ol><p>不要吝啬这段花在上线前的“额外”时间，因为这会帮你省下很多故障复盘的时间。</p><p>如果新增的SQL语句不多，手动跑一下就可以。而如果是新项目的话，或者是修改了原有项目的 表结构设计，全量回归测试都是必要的。这时候，你需要工具帮你检查所有的SQL语句的返回结果。比如，你可以使用开源工具pt-query-digest(<a href=\"https://www.percona.com/doc/percona-toolkit/3.0/pt-query-digest.html\">https://www.percona.com/doc/percona-toolkit/3.0/pt-query-digest.html</a>)。</p><h1>QPS突增问题</h1><p>有时候由于业务突然出现高峰，或者应用程序bug，导致某个语句的QPS突然暴涨，也可能导致MySQL压力过大，影响服务。</p><p>我之前碰到过一类情况，是由一个新功能的bug导致的。当然，最理想的情况是让业务把这个功能下掉，服务自然就会恢复。</p><p>而下掉一个功能，如果从数据库端处理的话，对应于不同的背景，有不同的方法可用。我这里再和你展开说明一下。</p><ol>\n<li>\n<p>一种是由全新业务的bug导致的。假设你的DB运维是比较规范的，也就是说白名单是一个个加的。这种情况下，如果你能够确定业务方会下掉这个功能，只是时间上没那么快，那么就可以从数据库端直接把白名单去掉。</p>\n</li>\n<li>\n<p>如果这个新功能使用的是单独的数据库用户，可以用管理员账号把这个用户删掉，然后断开现有连接。这样，这个新功能的连接不成功，由它引发的QPS就会变成0。</p>\n</li>\n<li>\n<p>如果这个新增的功能跟主体功能是部署在一起的，那么我们只能通过处理语句来限制。这时，我们可以使用上面提到的查询重写功能，把压力最大的SQL语句直接重写成\"select 1\"返回。</p>\n</li>\n</ol><p>当然，这个操作的风险很高，需要你特别细致。它可能存在两个副作用：</p><ol>\n<li>\n<p>如果别的功能里面也用到了这个SQL语句模板，会有误伤；</p>\n</li>\n<li>\n<p>很多业务并不是靠这一个语句就能完成逻辑的，所以如果单独把这一个语句以select 1的结果返回的话，可能会导致后面的业务逻辑一起失败。</p>\n</li>\n</ol><p>所以，方案3是用于止血的，跟前面提到的去掉权限验证一样，应该是你所有选项里优先级最低的一个方案。</p><p>同时你会发现，其实方案1和2都要依赖于规范的运维体系：虚拟化、白名单机制、业务账号分离。由此可见，更多的准备，往往意味着更稳定的系统。</p><h1>小结</h1><p>今天这篇文章，我以业务高峰期的性能问题为背景，和你介绍了一些紧急处理的手段。</p><p>这些处理手段中，既包括了粗暴地拒绝连接和断开连接，也有通过重写语句来绕过一些坑的方法；既有临时的高危方案，也有未雨绸缪的、相对安全的预案。</p><p>在实际开发中，我们也要尽量避免一些低效的方法，比如避免大量地使用短连接。同时，如果你做业务开发的话，要知道，连接异常断开是常有的事，你的代码里要有正确地重连并重试的机制。</p><p>DBA虽然可以通过语句重写来暂时处理问题，但是这本身是一个风险高的操作，做好SQL审计可以减少需要这类操作的机会。</p><p>其实，你可以看得出来，在这篇文章中我提到的解决方法主要集中在server层。在下一篇文章中，我会继续和你讨论一些跟InnoDB有关的处理方法。</p><p>最后，又到了我们的思考题时间了。</p><p>今天，我留给你的课后问题是，你是否碰到过，在业务高峰期需要临时救火的场景？你又是怎么处理的呢？</p><p>你可以把你的经历和经验写在留言区，我会在下一篇文章的末尾选取有趣的评论跟大家一起分享和分析。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h1>上期问题时间</h1><p>前两期我给你留的问题是，下面这个图的执行序列中，为什么session B的insert语句会被堵住。</p><p><img src=\"https://static001.geekbang.org/resource/image/3a/1e/3a7578e104612a188a2d574eaa3bd81e.png?wh=942*270\" alt=\"\"><br>\n我们用上一篇的加锁规则来分析一下，看看session A的select语句加了哪些锁：</p><ol>\n<li>\n<p>由于是order by c desc，第一个要定位的是索引c上“最右边的”c=20的行，所以会加上间隙锁(20,25)和next-key lock (15,20]。</p>\n</li>\n<li>\n<p>在索引c上向左遍历，要扫描到c=10才停下来，所以next-key lock会加到(5,10]，这正是阻塞session B的insert语句的原因。</p>\n</li>\n<li>\n<p>在扫描过程中，c=20、c=15、c=10这三行都存在值，由于是select *，所以会在主键id上加三个行锁。</p>\n</li>\n</ol><p>因此，session A 的select语句锁的范围就是：</p><ol>\n<li>\n<p>索引c上 (5, 25)；</p>\n</li>\n<li>\n<p>主键索引上id=15、20两个行锁。</p>\n</li>\n</ol><p>这里，我再啰嗦下，你会发现我在文章中，每次加锁都会说明是加在“哪个索引上”的。因为，锁就是加在索引上的，这是InnoDB的一个基础设定，需要你在分析问题的时候要一直记得。</p><p>评论区留言点赞板：</p><blockquote>\n<p>@HuaMax 给出了正确的解释。</p>\n</blockquote><blockquote>\n<p>@Justin 同学提了个好问题，&lt;=到底是间隙锁还是行锁？其实，这个问题，你要跟“执行过程”配合起来分析。在InnoDB要去找“第一个值”的时候，是按照等值去找的，用的是等值判断的规则；找到第一个值以后，要在索引内找“下一个值”，对应于我们规则中说的范围查找。</p>\n</blockquote><blockquote>\n<p>@信信 提了一个不错的问题，要知道最终的加锁是根据实际执行情况来的。所以，如果一个select * from … for update 语句，优化器决定使用全表扫描，那么就会把主键索引上next-key lock全加上。</p>\n</blockquote><blockquote>\n<p>@nero 同学的问题，提示我需要提醒大家注意，“有行”才会加行锁。如果查询条件没有命中行，那就加next-key lock。当然，等值判断的时候，需要加上优化2（即：索引上的等值查询，向右遍历时且最后一个值不满足等值条件的时候，next-key lock退化为间隙锁。）。</p>\n</blockquote><blockquote>\n<p>@小李子、@发条橙子同学，都提了很好的问题，这期高质量评论很多，你也都可以去看看。</p>\n</blockquote><p>最后，我要为元旦期间还坚持学习的同学们，点个赞 ^_^</p><p></p>","comments":[{"had_liked":false,"id":56650,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":true,"comment_ctime":1546516613,"is_pvip":false,"replies":[{"id":"20423","content":"先说明下，binlog是没有“恢复redolog”的能力的哈。其它部分分析得很好👍🏿<br><br>Binlog 这么大，说明是大事务，崩溃恢复的时候要处理的redolog 很多，估计耗时间耗在这。<br><br>这种磁盘空间满的情况，以前我的处理方法是把最老的binlog移动到别的盘（如果确定日志已经备份到备份系统了就删掉），目的是腾出空间让这个事务执行完成。<br>后面可以考虑这种方案，强制重启还是有点伤的，不过核心还是做好监控，不让出现磁盘100%写满的情况","user_name":"作者回复","comment_id":56650,"uid":"1264162","ip_address":"","utype":1,"ctime":1546524546,"user_name_real":"林晓斌"}],"discussion_count":10,"race_medal":0,"score":"9.223372321869099e+18","product_id":100020801,"comment_content":"最近才发生了个案列:<br>由于一个delete大事务导致磁盘空间满了,数据库hang住,连接不上,所以无法kill掉该大事务<br>当时的观察到的现象是:<br>binlog有一个文件已经达到50多G<br>lsof | grep delete 该tmp文件100多G<br>redo log还是只有4个组,每个文件1G<br>undo log大概有100来G<br>由于数据库连不上,只有把连接切到从库,kill掉主库的进程。过了几分钟,binlog文件才缩小为原来的大小。把主库启起来,但是recovery非常慢。后面kill掉,又以innodb_force_recovery=3恢复,recovery也是半天没反应。由于这个库也不是重要的库,就把新的主库的备份文件重做了之前的主库,以从库启起来<br><br>通过最近的学习+测试分析了下,为什么binlog达到了50多G。tmp文件100多G.<br>由于binlog_cache不够用,把binlog写进了tmp文件中,binlog文件50多G,说明事务已经执行完成,是binlog在fsync阶段,把空间占满了。fsync并不是一个move而是相当于copy。要等binlog完全落盘以后,才会删除之前的tmp文件。redo log由于是循环写,而且在事务执行过程中,就会把redo log分为mtx落地到磁盘上。所以没有一次性暴增,还是以1G的大小持续写.<br>我也是后续做测试,观察在事务进行中,redo log文件一直都有变化。binlog没有变化<br>binlog是在事务执行完以后,才一次性fsync到磁盘<br>但是为什么recovery=3的情况下,还比较耗时。我估计是之前脏页较多,而redo log又全部被覆盖掉,<br>需要先通过binlog来恢复redo log,然后再通过redo log来恢复数据页。<br><br>请问老师有没有更好的办法来处理这种hang住的情况?<br>如果在操作系统层面kill掉执行的线程,就好了。<br>昨天提到的问题3,我也没有测试出来Sending to client这个状态.是之前别人问到的,我也挺懵","like_count":67,"discussions":[{"author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60333,"discussion_content":"我碰到这么一个问题，后半夜1点到5点之间，经常出现连接数峰值1000左右，平时200左右，抓执行的Sql发现经常有大量的sleep线程，而且time是0或1，而innodb_trx表里就30多个事物在执行，也没有锁等待。排除了被爬的可能，开发说代码没问题，有1个多月了，到现在我们也没解决。连接数一旦跑满，我就批量kill掉slelect线程。大神，有什么排查思路吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574727962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":164774,"discussion_content":"肯定有什么服务在跑，你把sql语句整理一下，和业务沟通呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581220269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":60333,"ip_address":""},"score":164774,"extra":""},{"author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":175493,"discussion_content":"查一下这些链接的ip，看看是从哪个机器连过来的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581956233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":60333,"ip_address":""},"score":175493,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":587749,"discussion_content":"服务端没感知到客户端连接关闭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663251177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":60333,"ip_address":"广东"},"score":587749,"extra":""}]},{"author":{"id":2076283,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/7b/47200692.jpg","nickname":"贺子","note":"","ucode":"A64DC9D9CF7CCD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315672,"discussion_content":"为啥redo依旧是4g？但是binlog那么大？我还有个疑问，当事务特别大的时候，会不会因为没有可以覆写的redo文件而导致数据库夯住呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603301506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2049478,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/45/c6/ba5176a6.jpg","nickname":"从不卖萌","note":"","ucode":"E9B7B1C8FAFE0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539992,"discussion_content":"很棒！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639911917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435168,"discussion_content":"先说明下，binlog是没有“恢复redolog”的能力的哈。其它部分分析得很好👍🏿\n\nBinlog 这么大，说明是大事务，崩溃恢复的时候要处理的redolog 很多，估计耗时间耗在这。\n\n这种磁盘空间满的情况，以前我的处理方法是把最老的binlog移动到别的盘（如果确定日志已经备份到备份系统了就删掉），目的是腾出空间让这个事务执行完成。\n后面可以考虑这种方案，强制重启还是有点伤的，不过核心还是做好监控，不让出现磁盘100%写满的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546524546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272996,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/a4/7f7c1955.jpg","nickname":"死磕郎一世","note":"","ucode":"86C1197C3FB2A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381869,"discussion_content":"某人应该是DBA吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625267784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1832759,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/f7/37/8d3be740.jpg","nickname":"逸枫枫枫","note":"","ucode":"29C1CA3628456B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1272996,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/a4/7f7c1955.jpg","nickname":"死磕郎一世","note":"","ucode":"86C1197C3FB2A0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578118,"discussion_content":"确实感觉某人对数据库很有研究 很多地方都有他的评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656520826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381869,"ip_address":""},"score":578118,"extra":""}]},{"author":{"id":1302149,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","nickname":"tyy","note":"","ucode":"C3B436E6562744","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21322,"discussion_content":"老师能不能开一讲讲讲group by怎么优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569467481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56000,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1318970,"ip_address":"","ucode":"2417242560360A","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/3a/90db6a24.jpg","comment_is_top":false,"comment_ctime":1546369719,"is_pvip":false,"replies":[{"id":"20157","content":"1. Kill 掉备份线程在当时是最好的办法了。不过我之前确实也没碰到过show create table 不能kill的情况，我看下代码，如果能复现出来加入那篇文章中<br>2. 嗯，80060这个问题是因为要truncate，所以要回收脏页导致慢，不过这个问题在5.5.23就优化掉了哦，看你使用的是5.6，可能是别的原因。truncate如果不是被锁，而是已经在执行了，确实还是别做别的事情，等结束最好；<br>3. 这个语句是因为子查询要用临时表，跟order by 无关的（你看到的阶段还没开始order by 操作）。这个语句的临时表都能多到把磁盘打满，增加tmp_table_size是没用的。<br>就是说这三个方法里面2和3其实都无效。你们当时的选择很精准呀。<br>而且前面提出“重启无效”的这个人值得团队内大力表扬（是不是就是你😄）<br>另外这个语句，看着像有机会优化的样子，核心方向是去掉临时表<br>4.可以只删掉其中一个独立索引，再加一个联合索引，就是变成(a,b)和(b)这两种索引，也就是把(a)改成(a,b)，这样是加法，相对比较安全。删除索引是一个要很小心的操作，少删一个多一份安全，之后再通过观察索引b的使用情况，确定没必要再删。interset确实一般都比较慢。<br>5. 正常回滚很快的，是不是大事务回滚？这种还是得从消除大事务入手<br><br>","user_name":"作者回复","comment_id":56000,"uid":"1264162","ip_address":"","utype":1,"ctime":1546392959,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"345143753399","product_id":100020801,"comment_content":"不是专业DBA，遇到过几次数据库问题，有的能解决，有的好像除了重启或者干等着没啥好办法。<br>MySQL5.6版本遇到的部分问题：<br><br>1. 几个线程处于killed状态一直kill不掉（1天），然后备份的时候MySQL backup flush all tables with read lock的时候被阻塞，后面的线程只能等待flush table, kill backup以后也没有办法kill那几个killed状态的语句（processlist显示的killed状态的语句的就是show columns, show create table这样的），后面没办法，重启了server。（看到老师后面第25讲有关于kill的解释，非常期待新知识）<br><br>2. 一个非常大（大几百万行）的表truncate，结果后面所有的线程都阻塞了，类似于下面这个MySQL bug的场景，结果就是等这个truncate结束。没有继续干预。<br>https:&#47;&#47;bugs.mysql.com&#47;bug.php?id=80060<br><br>3.  某个新功能上线以后，一个记录操作人员操作页面操作时间KPI的功能，由于sql性能不好，在业务上线跑了3天后数据量增多到临界值，突然影响了整个系统性能。数据库发现是大量的sql执行状态是converting heap to MyISAM，sql写法类似 select (select * from table) where id(有索引)= xxxx order by yyyy<br>DBA以及他们团队要求重启。但是分析了几分钟后提供了几个意见给&quot;DBA&quot;，并解释重启解决不了问题：首先这个问题重启是解决不了，因为每次这个sql查询全表，查询分配的临时表空间不足了，需要把结果集转到磁盘上，重启了sql动作没变，参数没变所以重启解决不了问题。<br>页面查询也没法屏蔽，页面查询也无法过滤条件，<br>（1）和研发确认后，表数据删除不影响功能，只影响客户的KPI报表，先备份表，然后删除，后面等功能修复了再补回去。<br>（2）调整max_heap_table_size，tmp_table_size，扩大几倍<br>（3）给这个sql的唯一的一个order by字段加个索引。<br>同时催促研发提供hotfix。最终选择了最简单有效的（1）问题解决，研发迅速后面也发了hotfix解决了。<br><br>4. 某个消费高峰时间段，高频查询被触发，一天几十万次执行，由于存量数据越来越多，查询性能越来越慢，主要是索引没有很好规划，导致CPU资源使用飙升，后面的sql执行越来越慢。 最后尝试了给2个字段添加单独的索引，解决了50%的问题，看到执行计划，extra里面，索引合并使用了intersect，性能还是慢，然后立马drop原先的2个单独索引，创建两个字段的联合索引，问题解决了。<br><br>5. 死锁回滚，导致的MySQL hang住了，当时刚入门，只能简单复现死锁，没有保留所有的日志，现在想查也查不了了。。。<br>感觉大部分都是慢sql和高频事务导致的。<br><br>（当然后面的慢sql监控分析，项目上就很重视了。。）<br><br><br>今天看了这期专栏，发现5.7的这个功能，query_rewrite，受教了。等我们升到5.7以后，可以实际操练下。上面的问题3，也可以用这个功能了（因为是新业务，新表，特殊sql，完全可以起到hotfix的作用）。<br><br><br>请老师帮忙看下上面几次故障是否有更好，更专业的解决方案。多谢","like_count":81,"discussions":[{"author":{"id":2497728,"avatar":"https://static001.geekbang.org/account/avatar/00/26/1c/c0/b8ff566a.jpg","nickname":"我是大橙子132","note":"","ucode":"61660568CF07C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565789,"discussion_content":"老师 和 “学生” 问的漂亮 答得精彩。赞。虽然作为开发没对数据库搞这么多操作，但是看着就很享受，这就是技术的魅力吧。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650543290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102291,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/d3/827cdfd5.jpg","nickname":"Kai","note":"","ucode":"BE6985A02BEA7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546249,"discussion_content":"上面仁兄提的第二点，首先分多次delete limit 10W，然后再truncate，是不是可以避免一次性生产过大的binlog致使磁盘满的问题？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642253999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434909,"discussion_content":"1. Kill 掉备份线程在当时是最好的办法了。不过我之前确实也没碰到过show create table 不能kill的情况，我看下代码，如果能复现出来加入那篇文章中\n2. 嗯，80060这个问题是因为要truncate，所以要回收脏页导致慢，不过这个问题在5.5.23就优化掉了哦，看你使用的是5.6，可能是别的原因。truncate如果不是被锁，而是已经在执行了，确实还是别做别的事情，等结束最好；\n3. 这个语句是因为子查询要用临时表，跟order by 无关的（你看到的阶段还没开始order by 操作）。这个语句的临时表都能多到把磁盘打满，增加tmp_table_size是没用的。\n就是说这三个方法里面2和3其实都无效。你们当时的选择很精准呀。\n而且前面提出“重启无效”的这个人值得团队内大力表扬（是不是就是你😄）\n另外这个语句，看着像有机会优化的样子，核心方向是去掉临时表\n4.可以只删掉其中一个独立索引，再加一个联合索引，就是变成(a,b)和(b)这两种索引，也就是把(a)改成(a,b)，这样是加法，相对比较安全。删除索引是一个要很小心的操作，少删一个多一份安全，之后再通过观察索引b的使用情况，确定没必要再删。interset确实一般都比较慢。\n5. 正常回滚很快的，是不是大事务回滚？这种还是得从消除大事务入手\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1546392959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56653,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1546517195,"is_pvip":true,"replies":[{"id":"20428","content":"因为执行c=20的时候，由于要order by c desc, 就要先找到“最右边第一个c=20的行”，<br>这个怎么找呢，只能向右找到25，才能知道它左边那个20是“最右的20”<br><br>","user_name":"作者回复","comment_id":56653,"uid":"1264162","ip_address":"","utype":1,"ctime":1546525336,"user_name_real":"林晓斌"}],"discussion_count":12,"race_medal":2,"score":"280719391435","product_id":100020801,"comment_content":"我之前的描述有点问题，其实想问的是：为什么加了 order by c desc，第一个定位c=20 的行，会加上间隙锁 (20,25) 和 next-key lock (15,20]？<br><br>如果没有order by c desc，第一次命中c=15时，只会加上next-key lock(10.15]；<br>而有了order by c desc，我的理解是第一次命中c=20只需要加上next-key lock (15,20]<br><br>当然最后(20,25)还是加上了锁，老师的结论是对的，我也测试过了，但是我不知道如何解释。<br>唯一能想到的解释是order by c desc 并不会改变优化2这个原则：即等值查询时，会向右遍历且最后一个值不满足等值条件；同时order by c desc 带来一个类似于优化2的向左遍历原则。<br>进而导致最后的锁范围是(5,25)；而没有order by c desc的范围是(10,25]。<br>","like_count":65,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435170,"discussion_content":"因为执行c=20的时候，由于要order by c desc, 就要先找到“最右边第一个c=20的行”，\n这个怎么找呢，只能向右找到25，才能知道它左边那个20是“最右的20”\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1546525336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":3,"child_discussions":[{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":545482,"discussion_content":"老师，按照这个说法，如果没有order by desc。 如果也是c=20。 就要先找到最左边的第一个c=20的行，要扫描到c=15的行，岂不是要加(10，15)的间隙了呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641973230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":435170,"ip_address":""},"score":545482,"extra":""},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":545496,"discussion_content":"那如果是order by c asc。 是不是要找到最左边第一个c=20的行，然后要向左找到15，才能知道它右边那个20是最左边的20？ 因为找到15所以加了(10，15）的间隙？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641976882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":435170,"ip_address":""},"score":545496,"extra":""},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":545836,"discussion_content":"我想到一个完美解释层主问题的答案了，就是不管升序降序，一开始都是等值查询。 where c&gt;=15 and c&lt;=20的话，升序时第一次要找c=15，降序时第一次要找c=20。第一次都是根据B+树索引快速搜索能力定位，这种定位方式，找到的都是最左边那个节点（比如C=20有多条，最左边就是那个id最小的）。 所以升序的时候，已经找到最左边的c=15的节点了，不需要再继续往左边找第一个不满足的节点c=10（只针对第一次等值查询c=15的分析，后续的范围查询还是会遍历到这个节点的）。 但是降序的话，索引快速定位找到的还是最左边的c=20的节点，降序需要找最右边c=20的节点，这个时候需要往右扫描到第一个不满足的节点，即C=25","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1642063149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":435170,"ip_address":""},"score":545836,"extra":""}]},{"author":{"id":1606592,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/SnnUOnqRBBCJUeweO6S0CsjyysCb1qmb3Cm8ibkDFbH9yibugu8W2YWiatsWe1ibwKZxPzsRb5cmZ1rR6iavjTeSpwg/132","nickname":"朝雨","note":"","ucode":"C999D5AAC4A0D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338113,"discussion_content":"如果c是唯一索引，(20-25)为什么还会被锁？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609173830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1810189,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZHw73tgCqGKhvticUWGRz4icgicu4hFWfKtacoFJeItH7maNuNUmjnEgDTJvOibwUWgGV0p6guNPibMVWDV4BUmEmlA/132","nickname":"Ethan","note":"","ucode":"75F613D58909DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1606592,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/SnnUOnqRBBCJUeweO6S0CsjyysCb1qmb3Cm8ibkDFbH9yibugu8W2YWiatsWe1ibwKZxPzsRb5cmZ1rR6iavjTeSpwg/132","nickname":"朝雨","note":"","ucode":"C999D5AAC4A0D5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367599,"discussion_content":"不会锁住","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618404773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338113,"ip_address":""},"score":367599,"extra":""}]},{"author":{"id":2009461,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a9/75/dbccd12d.jpg","nickname":"稻草人","note":"","ucode":"6694EE2CD36B8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328095,"discussion_content":"我有个疑问是，为什么会加上(5,10)的间隙锁呢？我理解是向左遍历的时候遍历到10，发现不=15了，就加上(10,15)的间隙锁，而加不到(5,10)。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606053515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1887586,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLhicDSmL4vicPADhxxzOzukMar8nV5Tc3ic2dz4FQIxMX3WmX5a2V3sdD121eWpvfQI8NXIkkDZoDFw/132","nickname":"Geek_536b54","note":"","ucode":"F62BC7781D9212","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2009461,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a9/75/dbccd12d.jpg","nickname":"稻草人","note":"","ucode":"6694EE2CD36B8C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331503,"discussion_content":"select *  from t where c=20 for update \n假如索引是  1 3 5 8 8 20 20 25 正序 就是锁  (8,25) 。倒序就是 （5，25） 因为要找到最左边的8 才行，所以到了5才停止 这个大于5其实不包含5的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1606890599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328095,"ip_address":""},"score":331503,"extra":""},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2009461,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a9/75/dbccd12d.jpg","nickname":"稻草人","note":"","ucode":"6694EE2CD36B8C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335176,"discussion_content":"c的值正序来看：0，5，10，15，20，25。\nc>=15，想左侧扫描的时候，要扫描到10才会确定再往左扫描得到的c的值就比15小了。因为此时已经扫描到10了。再往前，只能比10更小或者等于10。凡是扫描到的对象都要加锁，所以此时10要加锁。加锁的单位是临键锁，也就是会加锁(5,10]，然后再根据加锁规则，费唯一索引查询到最后一个值，不等于目标值的时候，退化为间隙锁，(5,10]就变成了(5,10)。\n25也是同理，c<=20，要向右扫描到25的时候，才可以确定再往右侧扫描的话，就不会得到c<=20的值了，此时就停止扫描了。扫描的对象都要加锁，所以此时25要被加锁，加锁的单位是临键锁，即为(20,25]，然后再退化为间隙锁，即(20,25)。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1608110576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328095,"ip_address":""},"score":335176,"extra":""},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2009461,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a9/75/dbccd12d.jpg","nickname":"稻草人","note":"","ucode":"6694EE2CD36B8C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351285,"discussion_content":"访问到的对象都要被加锁，已经访问到10了，加锁的基本单位是next-key lock，所以..","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614226757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328095,"ip_address":""},"score":351285,"extra":""}]},{"author":{"id":1099484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c6/dc/37dac825.jpg","nickname":"阿豪","note":"","ucode":"AF3CB1CE262CEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406110,"discussion_content":"有个问题，order by desc应该是存储引擎返回结果后在sort buffer做的排序，查询的时候为什么会第一个定位最右边的c=20？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634703591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2062624,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/79/20/e31df916.jpg","nickname":"唐文亮","note":"","ucode":"57E040E716261A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305541,"discussion_content":"刚听完和你有同样的疑问，看了老师解释就懂，好问题！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599990531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56284,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1546416042,"is_pvip":false,"replies":[{"id":"20258","content":"就是这么实现的😓<br><br>C=10还是要锁的，如果不锁可能被删除","user_name":"作者回复","comment_id":56284,"uid":"1264162","ip_address":"","utype":1,"ctime":1546421347,"user_name_real":"林晓斌"}],"discussion_count":24,"race_medal":0,"score":"164755173290","product_id":100020801,"comment_content":"对于上期问题的解答，有一点不是特别理解，<br>因为order by desc，在索引c上向左遍历，对于（15， 25）这段区间没有问题，<br>然后，扫描到c=10才停下来，理论上把（10，15]这个区间锁上就应该是完备的了呀。（5，10]这段区间是否锁上对结果应该没有影响呀，为什么会需要（5，10] 这段的next-key lock ?<br>","like_count":38,"discussions":[{"author":{"id":1814215,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ae/c7/47631b20.jpg","nickname":"陆丕山","note":"","ucode":"DC82F5CED5B7FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275336,"discussion_content":"越看越像bug怎么办🤣，如果说可能会被删除，那么不止desc,其他的范围加锁的时候也会有被删除的可能，所以说被删不会造成什么后果吧","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1590690682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434974,"discussion_content":"就是这么实现的😓\n\nC=10还是要锁的，如果不锁可能被删除","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1546421347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","nickname":"x-ray","note":"","ucode":"8363F0C4D0AC0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332203,"discussion_content":"原本以为就我不懂，原来大家都和我存在一样的疑问，一开始越看越像bug那一条，后来看到有人提醒说，唯一索引才有。现在还是怎么都想不明白。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607092376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1124692,"avatar":"https://static001.geekbang.org/account/avatar/00/11/29/54/b9fec917.jpg","nickname":"菜鸟一枚","note":"","ucode":"34052769B97FEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1140175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","nickname":"x-ray","note":"","ucode":"8363F0C4D0AC0B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343621,"discussion_content":"引用上面的笔记回答下你的疑惑：next-key lock 是左开右闭，一个索引是落在了右闭上即为这个索引的next-key lock，这个和查询顺序无关。 所以c>=15 and c <=20 order by c desc 从右向左，扫描到c=10才停止，c=10的next-key lock为(5,10] 故c上加锁(5,25) 如果去除order by c desc即从左向右，扫描到c=25才停止，c=25的next-key lock为(20,25] 故c上加锁(10,25] 而不是(10，+∞)","likes_number":19,"is_delete":false,"is_hidden":false,"ctime":1611112380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":332203,"ip_address":""},"score":343621,"extra":""},{"author":{"id":1147759,"avatar":"https://static001.geekbang.org/account/avatar/00/11/83/6f/b471854f.jpg","nickname":"Yang","note":"","ucode":"3B7FC84D6BA1EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1124692,"avatar":"https://static001.geekbang.org/account/avatar/00/11/29/54/b9fec917.jpg","nickname":"菜鸟一枚","note":"","ucode":"34052769B97FEC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344301,"discussion_content":"这是正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611399014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":343621,"ip_address":""},"score":344301,"extra":""},{"author":{"id":2546691,"avatar":"https://static001.geekbang.org/account/avatar/00/26/dc/03/1d6f457e.jpg","nickname":"Nx","note":"","ucode":"0F34F16C5D5FEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1124692,"avatar":"https://static001.geekbang.org/account/avatar/00/11/29/54/b9fec917.jpg","nickname":"菜鸟一枚","note":"","ucode":"34052769B97FEC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369271,"discussion_content":"感谢你的分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618993675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":343621,"ip_address":""},"score":369271,"extra":""}]},{"author":{"id":1205485,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUhJakYu4BI7eFnheKDdibDjZqz32ia2rhN0Jz5YoR1ZRlDrLcFNr4MJnPg3WiaxaocWotOANeqsBibw/132","nickname":"小白","note":"","ucode":"862EA133563634","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263973,"discussion_content":"老师这个锁5是根据哪条实现的，能讲一下 吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589274938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1672786,"avatar":"https://static001.geekbang.org/account/avatar/00/19/86/52/91c7d112.jpg","nickname":"Garen","note":"","ucode":"0608C88F83EF0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37573,"discussion_content":"一脸懵逼，老师的回答直接让我懵逼*2。如果没有order by desc，是不是C=25也要被锁，不然还是可能被删除啊。但是跟优化2不符啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571639190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2760780,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKghO4kJwQ5ccuBA2Yox1WlZmq0JUICpNAsgYlOHX0wHGv48xVRKSvF9a6Eic5l2UOjFjnvTnsibibiaw/132","nickname":"Geek_94045a","note":"","ucode":"B8F23BA9D1411B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546446,"discussion_content":"有的功能歪果仁就没有啥理由 他就乐意那么写 也谈不上错 对性能也没啥影响 不能和歪果仁杠上 我们看有点反人类但是作者就不觉得反人类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642310362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2345261,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c9/2d/56d1b38a.jpg","nickname":"Ꮮ 🐶 Ᏼ","note":"","ucode":"28DC50ABD69B6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535579,"discussion_content":"先找到id=20，非唯一索引不确定个数还得找，找到25，加(20,25],优化成(20,25)\norder by c desc，找15的逻辑跟20是不一样的，需要从后往前找到15，非唯一索引再往前找，找到10，加(5,10]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638476704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2882162,"avatar":"","nickname":"Geek_bf19f6","note":"","ucode":"869D41CD1A291E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2345261,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c9/2d/56d1b38a.jpg","nickname":"Ꮮ 🐶 Ᏼ","note":"","ucode":"28DC50ABD69B6C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544293,"discussion_content":"既然找到10为什么不和找到25一样 退化成间隙锁呢？也就是为什么不是（5.10）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641459582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":535579,"ip_address":""},"score":544293,"extra":""}]},{"author":{"id":2317270,"avatar":"","nickname":"Geek_e5f501","note":"","ucode":"72A713EBAAFE41","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347208,"discussion_content":"还是不懂，为什么c=10上有锁，当扫描到 c=10这一行时，会加next key-lock(5,10],但由由于c!=15,这个next key-lock不是会退化成间隙锁(5,10)吗？求大佬解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612173845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2459923,"avatar":"https://static001.geekbang.org/account/avatar/00/25/89/13/0d3c5008.jpg","nickname":"最好不过","note":"","ucode":"C7DBCD08402DF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2317270,"avatar":"","nickname":"Geek_e5f501","note":"","ucode":"72A713EBAAFE41","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378589,"discussion_content":"这里查找到c=10是范围锁的查找过程所不会退化成间隙锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623295586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":347208,"ip_address":""},"score":378589,"extra":""}]},{"author":{"id":1887586,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLhicDSmL4vicPADhxxzOzukMar8nV5Tc3ic2dz4FQIxMX3WmX5a2V3sdD121eWpvfQI8NXIkkDZoDFw/132","nickname":"Geek_536b54","note":"","ucode":"F62BC7781D9212","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331501,"discussion_content":"select *  from t where c=20 for update \n假如索引是  1 3 5 8 8 20 20 25 正序 就是锁  (8,25) 。倒序就是 （5，25） 因为要找到最左边的8 才行，所以到了5才停止 这个大于5其实不包含5的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606890562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304580,"discussion_content":"两原则、两优化、一bug，(5,10)也锁就是那一bug吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599619917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1674552,"avatar":"","nickname":"Geek_1d7447","note":"","ucode":"F95C1FBA3191AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311987,"discussion_content":"一bug指的不是唯一索引上面的么，c是普通索引吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602556663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304580,"ip_address":""},"score":311987,"extra":""},{"author":{"id":1203576,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5d/78/f011d586.jpg","nickname":"遇见阳光","note":"","ucode":"378E5D37B3CD0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553581,"discussion_content":"因为是desc 那么先定位15的数据,由于是左开右闭区间此处倒序(15,10],那么正序的话(10,15]无法加到10的行锁 只能再从(5,10]开始加间隙锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645970663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304580,"ip_address":""},"score":553581,"extra":""}]},{"author":{"id":1478119,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8d/e7/e717eaec.jpg","nickname":"Havey","note":"","ucode":"972E96F300BD00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294067,"discussion_content":"这一点看的不明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595773582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1267207,"avatar":"","nickname":"御","note":"","ucode":"6515D71B94C721","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6241,"discussion_content":"主键ID加了三个行锁，为什么说只锁了15，20","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566807971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1721168,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","nickname":"凡","note":"","ucode":"80C2A6452AB9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1267207,"avatar":"","nickname":"御","note":"","ucode":"6515D71B94C721","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137485,"discussion_content":"因为 15 和 20 才需要回表查询 ，原则 2 用到了才会加锁\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1579186853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6241,"ip_address":""},"score":137485,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1721168,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","nickname":"凡","note":"","ucode":"80C2A6452AB9EA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164779,"discussion_content":"那为什么又说，c=10/15/20三行都存在值，由于是select *，所以会在主键Id上加三个行锁？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581220474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":137485,"ip_address":""},"score":164779,"extra":""},{"author":{"id":1721168,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","nickname":"凡","note":"","ucode":"80C2A6452AB9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":172788,"discussion_content":"确实第一遍看时没想明白，再次看一遍发现这里确实有问题，既然 10 是存在的值，根据原则 2 访问到了就需要加锁，这里 10 的主键也要加上行锁才对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581784552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":164779,"ip_address":""},"score":172788,"extra":""}]}]},{"had_liked":false,"id":102990,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1560343378,"is_pvip":false,"discussion_count":14,"race_medal":0,"score":"100344591186","product_id":100020801,"comment_content":"原文：<br><br>在扫描过程中，c=20、c=15、c=10 这三行都存在值，由于是 select *，(所以会在主键 id 上加三个行锁。1)<br><br>(主键索引上 id=15、20 两个行锁。2)<br><br>老师，(1) 和 (2) 的描述，是否有出入吖？谢谢","like_count":23,"discussions":[{"author":{"id":1305497,"avatar":"https://static001.geekbang.org/account/avatar/00/13/eb/99/8c4afacf.jpg","nickname":"轻松熊不轻松","note":"","ucode":"603AA750B6E62A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311125,"discussion_content":"我理解是查询条件是c [15,20]， 因此 索引c上虽然有3个next-key lock，但主键索引只锁符合查询条件的行 id 15和20 ~ 验证update t set d=d+1 id=10不锁等，update t set d=d+1 c=10就会锁等","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602230671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1675475,"avatar":"https://static001.geekbang.org/account/avatar/00/19/90/d3/ab5db902.jpg","nickname":"Chiron","note":"","ucode":"76BBD1F32A35D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115794,"discussion_content":"同样的一脸懵逼","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578035579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148174,"avatar":"https://static001.geekbang.org/account/avatar/00/11/85/0e/e6640576.jpg","nickname":"阿声","note":"","ucode":"EEA5F2E9D4FC9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587567,"discussion_content":"在扫描索引c的过程中，c=10、c=15、c=20这三行被扫到了，所以在索引c上这三行加锁。\n\n由于是 select *，需要回表查主键索引，索引c上符合查询条件的只有c=15、c=20，所以只有这两条会回表，对应的主键索引id=15、id=20。\n\n所以在主键索引上，id=15、id=20这两行加锁。\n\n所以你标记的第一点(所以会在主键 id 上加三个行锁。1)，应该是笔误，改为（所以会在索引c 上加三个行锁。1）合适。\n\n通过分析得到一个模糊的推断，加锁扫描到的行跟需要回表的行的筛选逻辑并不是一致的、有差异，判断加锁是需要分开进行分析。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1663148137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063308,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","nickname":"小乙哥","note":"","ucode":"C77E79BEA0C325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":402358,"discussion_content":"实验之后，发现id=10这行没有锁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1633869499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1327313,"avatar":"https://static001.geekbang.org/account/avatar/00/14/40/d1/fb6f402a.jpg","nickname":"melon","note":"","ucode":"AFBE9426C10AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199122,"discussion_content":"id 为10的记录没有加行锁 老师少说了点东西吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583557526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545838,"discussion_content":"主键锁是只有回表的才需要加，就是15和20。如果是C索引扫描到的都要加，那25也扫描到了，不止是10","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642064450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170925,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/ed/e6eed95e.jpg","nickname":"Flying","note":"","ucode":"CA3DCE897F2013","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345526,"discussion_content":"那些没有疑问的是怎么做到的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611734367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335188,"discussion_content":"在主键索引记录锁上，id=15，id=20上面有行锁，id=10和id=25都没有行锁。\n在非主键索引上，c=10，c=15，c=20上面有行锁，c=5和c=25都没有行锁。\n在非主键索引上，间隙锁有：(5,10)、(10,15)、(15,20)、(20,25)、四个间隙锁，合起来也就是一个大的间隙锁(5,25)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608112756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328286,"discussion_content":"一脸懵逼+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606118765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1080985,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","nickname":"Khirye","note":"","ucode":"6C54C126FA54B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213257,"discussion_content":"旁友，你试验一下就知道了，我试过了，确定是10、15、20三个行锁，老师最后一句写错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585061598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1723955,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/4e/33/029194b5.jpg","nickname":"谁还不是个小公主是咋滴","note":"","ucode":"8E35446E63541A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1080985,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","nickname":"Khirye","note":"","ucode":"6C54C126FA54B8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340092,"discussion_content":"没写错，id=10上没有行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609901912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":213257,"ip_address":""},"score":340092,"extra":""}]},{"author":{"id":1649282,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGAV2NgUo0VVNjiagIJCZmPHvogtAJcUib6icLCbR4vcvfziashHZjpZ0FUxSdawFnHGUSmIaePvDaWQ/132","nickname":"Geek_b74670","note":"","ucode":"083AF837FB0112","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50774,"discussion_content":"👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573768640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134895,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/2f/7b04140c.jpg","nickname":"孫やさん","note":"","ucode":"C60877C1C71685","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46598,"discussion_content":"是啊，是不是后面的写错了，不是两个行锁，是三个呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573186421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1232273,"avatar":"https://static001.geekbang.org/account/avatar/00/12/cd/91/3d6c53f8.jpg","nickname":"Nash.Z","note":"","ucode":"76B14722664402","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25362,"discussion_content":"同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570510071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56411,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1318970,"ip_address":"","ucode":"2417242560360A","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/3a/90db6a24.jpg","comment_is_top":false,"comment_ctime":1546439814,"is_pvip":false,"replies":[{"id":"20375","content":"总结的非常好，而且现象很全面。<br>核心的一个点是：kill query 只是终止当前执行语句，并不会让事务回滚👍🏿","user_name":"作者回复","comment_id":56411,"uid":"1264162","ip_address":"","utype":1,"ctime":1546481813,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"96035720326","product_id":100020801,"comment_content":"老师好，看到有的同学在讨论锁的释放问题。<br><br>之前分析过一个锁表异常，很多用workbench或者类似客户端的同学可能会遇到，<br>复现方式：<br>Step 1：显示的打开一个事务，或者把autocommit=0，或者mysql workbench中把自动提交的置灰按钮打开以后<br>Step 2: 执行一个sql（比如，update或者delete之类的），然后sql还没有返回执行结果的中途点击workbench 自带的那个stop的红色的按钮。<br>这个时候很多人可能就不再做其他操作，大多会认为执行已经结束了。但是实际上，锁还在继续锁着的并不会释放。<br><br>系统日志记录：<br>（1）processlist的状态是sleep，info为null<br>（2）innodb_trx的状态是running，trx_query为null<br>（3）performance_schema.events_statements_current表中的，<br>sql_text，digest_text：是有正确的sql的。---这个5.6以后就有了，如果ps打开的话，应该是可以看到的。<br>message_text ：Query execution was interrupted<br>（4）inoodb_locks，lock_waits，以及show engine innodb status，只有出现锁等待的时候才会记录，如果只有一个事务的记录行锁，或者表锁，是不会记录的。（不知道是否有参考控制，还是默认的）<br>（5）关于行锁记录数的问题，从测试的结果看，inoodb_trx的locked rows，当我点停止的时候，锁定行数保持不变了，当我继续点击执行的时候，锁定记录行数会在之前的记录上向上累加，并不是从0开始。<br><br>然后查了audit log以后发现，客户端（mysqlworkbench）送给server端的是KILL QUERY thread_id，而不是Kill thread_id，<br>所以MySQL只是终止了事务中的statement执行，但是并不会释放锁，因为目前的琐的获取和释放都是基于事务结束的（提交或者回滚）。<br>这里面关于kill query&#47; thread_id的区别解释<br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.6&#47;en&#47;kill.html<br><br>解决方法：<br>自己解决：kill 对应的thread_id，或者关闭执行窗口（这个时候会送个quit给server端）。<br>别人解决：有super权限的人kill thread_id。<br><br>关于kill的那个文章，其实对所有DDL，DML的操作释放过程，还没有全部搞清楚，期待老师的第25讲。","like_count":23,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435025,"discussion_content":"总结的非常好，而且现象很全面。\n核心的一个点是：kill query 只是终止当前执行语句，并不会让事务回滚👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546481813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115149,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","nickname":"柯察金","note":"","ucode":"F722BF8FCD2C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390986,"discussion_content":"哦哦哦，又确认了一遍，老师之前的确提到了两者不一样，不好意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630213485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115149,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","nickname":"柯察金","note":"","ucode":"F722BF8FCD2C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390985,"discussion_content":"我看老师之前的意思，kill threadId 跟 kill query threadId 是差不多的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630213384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56768,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1546560010,"is_pvip":false,"replies":[{"id":"20472","content":"对的，readonly对super无效；<br>一方面是尽量不要给业务super<br>一方面你做完readonly还会去确认binlog有没有变，这个意识很好哦","user_name":"作者回复","comment_id":56768,"uid":"1264162","ip_address":"","utype":1,"ctime":1546564552,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"83150938634","product_id":100020801,"comment_content":"分享一个主从切换时遇到的问题，主从切换前主库要改为只读，设置只读后，show master status发现binlog一直在变化，当时应用没断开。<br>主库并不是其他库的从库，怎么搞的呢？<br>检查业务用户权限发现拥有super权限，查看授权语句原来是grant all on *.* to user，这里要说的是*.* 权限就太大了，而且这个也很容易被误解，需要特别注意。","like_count":20,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435223,"discussion_content":"对的，readonly对super无效；\n一方面是尽量不要给业务super\n一方面你做完readonly还会去确认binlog有没有变，这个意识很好哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546564552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56514,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1546480271,"is_pvip":false,"replies":[{"id":"20371","content":"嗯，因为执行索引遍历的顺序不一样，其实锁范围不一样也算合理啦😄","user_name":"作者回复","comment_id":56514,"uid":"1264162","ip_address":"","utype":1,"ctime":1546481621,"user_name_real":"林晓斌"}],"discussion_count":7,"race_medal":0,"score":"57381055119","product_id":100020801,"comment_content":"对于上期问题的解答，有一点不是特别理解，<br>因为order by desc，在索引c上向左遍历，对于（15， 25）这段区间没有问题，<br>然后，扫描到c=10才停下来，理论上把（10，15]这个区间锁上就应该是完备的了呀。（5，10]这段区间是否锁上对结果应该没有影响呀，为什么会需要（5，10] 这段的next-key lock ?<br>2019-01-02<br> 作者回复<br>就是这么实现的😓<br><br>C=10还是要锁的，如果不锁可能被删除<br><br>我的回复：<br>所以，如果把sql改成<br>select * from t where c&gt;=15 and c&lt;=20 order by c asc lock in share mode;<br>那锁的范围就应该是索引c上（10，25）了吧。<br>同样查询条件，不同的order顺序，锁的范围不一样，稍微感觉有一点奇怪...<br>","like_count":14,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435084,"discussion_content":"嗯，因为执行索引遍历的顺序不一样，其实锁范围不一样也算合理啦😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546481621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012958,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/de/d11b9762.jpg","nickname":"meglory","note":"","ucode":"24CA7BBB0998FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303186,"discussion_content":"如果是考虑到10可能被删，所以要加(5,10] next key lock，那么理论上25也可能被删是不是也要加上(25,30］呢？而且5 30也有可能被删啊，那这样就得全表锁上了_(•̀ω•́ 」∠)_","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599180508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1695382,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJiaPZmuibaYlicRJzS0iaeHcVJ9N8F00fsXicdlcJNZia7C0NtQ66ICUXr4Wb7RELcKMiaJUGpibhHF1axA/132","nickname":"北城以北","note":"","ucode":"A8B6CB18EBA58C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1012958,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/74/de/d11b9762.jpg","nickname":"meglory","note":"","ucode":"24CA7BBB0998FD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308671,"discussion_content":"同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601025672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303186,"ip_address":""},"score":308671,"extra":""},{"author":{"id":1124692,"avatar":"https://static001.geekbang.org/account/avatar/00/11/29/54/b9fec917.jpg","nickname":"菜鸟一枚","note":"","ucode":"34052769B97FEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1695382,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJiaPZmuibaYlicRJzS0iaeHcVJ9N8F00fsXicdlcJNZia7C0NtQ66ICUXr4Wb7RELcKMiaJUGpibhHF1axA/132","nickname":"北城以北","note":"","ucode":"A8B6CB18EBA58C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343626,"discussion_content":"引用上面的笔记回答下你的疑惑：next-key lock 是左开右闭，一个索引是落在了右闭上即为这个索引的next-key lock，这个和查询顺序无关。 所以c>=15 and c <=20 order by c desc 从右向左，扫描到c=10才停止，c=10的next-key lock为(5,10] 故c上加锁(5,25) 如果去除order by c desc即从左向右，扫描到c=25才停止，c=25的next-key lock为(20,25] 故c上加锁(10,25] 而不是(10，+∞)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611112675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308671,"ip_address":""},"score":343626,"extra":""}]},{"author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299648,"discussion_content":"一路看下来，还是没看懂为啥从5开始锁，不应该是(10,15.]吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597759035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/17/b0/dda316ee.jpg","nickname":"啊浩","note":"","ucode":"BD0354188B7693","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74045,"discussion_content":"楼上同学的疑问我也存在~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575625965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48220,"discussion_content":"为什么select * from t where c>=15 and c<=20 order by c asc lock in share mode;\n那锁的范围就应该是索引c上（10，25）？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573465231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68506,"user_name":"沙漠里的骆驼","can_delete":false,"product_type":"c1","uid":1012559,"ip_address":"","ucode":"5EC18A71B3A594","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/4f/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1550536348,"is_pvip":true,"replies":[{"id":"24488","content":"👍","user_name":"作者回复","comment_id":68506,"uid":"1264162","ip_address":"","utype":1,"ctime":1550652635,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"44500209308","product_id":100020801,"comment_content":"qps(查询语句)突然增大的情况，我们的实践是:<br>1. 账号、接口级别的限流。<br>2.引导到备库执行","like_count":11,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439709,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550652635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62465,"user_name":"Moby","can_delete":false,"product_type":"c1","uid":1122734,"ip_address":"","ucode":"A9CFD37FD8B5C7","user_header":"https://static001.geekbang.org/account/avatar/00/11/21/ae/416a7d6d.jpg","comment_is_top":false,"comment_ctime":1548063509,"is_pvip":false,"replies":[{"id":"22093","content":"这没问题呀<br><br>begin; select * from t where c&gt;=15 and c&lt;=20 order by c desc lock in share mode;<br>锁的范围是这样的：<br>索引c上，next-key lock: (5，10],(10,15],(15,20];<br>索引id上，行锁: id=15和id=20","user_name":"作者回复","comment_id":62465,"uid":"1264162","ip_address":"","utype":1,"ctime":1548078170,"user_name_real":"林晓斌"}],"discussion_count":5,"race_medal":0,"score":"44497736469","product_id":100020801,"comment_content":"丁奇老师好，不好意思，学渣看得比较慢。关于前两期的问题，我有一点没搞懂。就是你说的：&quot;session A 在 select 语句锁的范围是 1.... ; 2.在主键索引上id=10、15、20三个行锁”，经我测试(MySQL版本：5.7.17-log; 隔离级别：可重复读)：“session <br>A: begin; select * from t where c&gt;=15 and c&lt;=20 order by c desc lock in share mode;&quot;、&quot;session B:  update t set c=1010 where id=10; Query ok&quot;、”session C:  update t set c=1515 where id=15;block...“。即：为什么id=10这一行可以更新数据？而id=15、20这两行更新数据就被阻塞？","like_count":10,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437226,"discussion_content":"这没问题呀\n\nbegin; select * from t where c&amp;gt;=15 and c&amp;lt;=20 order by c desc lock in share mode;\n锁的范围是这样的：\n索引c上，next-key lock: (5，10],(10,15],(15,20];\n索引id上，行锁: id=15和id=20","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548078170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1834977,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ff/e1/ea2b6cef.jpg","nickname":"有头发的程序员","note":"","ucode":"48B9B1C5CC4E3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305991,"discussion_content":"update t21 set c=1010 where id=10;  会请求锁(10,10) 这个二级索引(删除 10,10这个原二级索引,新增一个1010,10的二级索引). 所以被block住了.   如果 update t21 set d=1010 where id=10;  就不会请求锁二级索引, 可以成功执行.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600143893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/17/b0/dda316ee.jpg","nickname":"啊浩","note":"","ucode":"BD0354188B7693","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74046,"discussion_content":"老师我想问一下，为什么我执行update t21 set c=1010 where id=10;的结果是block，按照原则一 id=10的这一行确实也会锁住啊，所以想请教一下老师，这是为什么呢？\n\nCREATE TABLE `t21` (\n  `id` int(11) NOT NULL,\n  `c` int(11) DEFAULT NULL,\n  `d` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `c` (`c`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nmysql> select version();\n+-----------+\n| version() |\n+-----------+\n| 5.6.27    |\n+-----------+\n\nmysql> show variables like  &#34;tx_isolation&#34;;\n+---------------+-----------------+\n| Variable_name | Value           |\n+---------------+-----------------+\n| tx_isolation  | REPEATABLE-READ |\n+---------------+-----------------+\n1 row in set (0.00 sec)\n\n\nSessoinA：\n\nBEGIN;\nSELECT * from t21 where c>=15 and c<=20 order by c desc lock in share mode;\n\nSessionB：\nupdate t21 set c=1010 where id=10;\n-- blocked","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575626027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1161200,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/f0/a570f68a.jpg","nickname":"wang","note":"","ucode":"5D569805C6A923","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/17/b0/dda316ee.jpg","nickname":"啊浩","note":"","ucode":"BD0354188B7693","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":140911,"discussion_content":"这个应该是修改索引c上的值时，被索引c锁住了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579366351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74046,"ip_address":""},"score":140911,"extra":""},{"author":{"id":1099170,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c5/a2/4ece341b.jpg","nickname":"Ivan.Qi","note":"","ucode":"36F46A4D1F0EAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/17/b0/dda316ee.jpg","nickname":"啊浩","note":"","ucode":"BD0354188B7693","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":198008,"discussion_content":"个人看法。觉得是21讲图8的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583462012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74046,"ip_address":""},"score":198008,"extra":""}]}]},{"had_liked":false,"id":115019,"user_name":"mongo","can_delete":false,"product_type":"c1","uid":1113124,"ip_address":"","ucode":"F39FE783793A17","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/24/7d43d807.jpg","comment_is_top":false,"comment_ctime":1563454542,"is_pvip":false,"replies":[{"id":"42026","content":"在算法导论面前，这个专栏的内容算很浅的😆","user_name":"作者回复","comment_id":115019,"uid":"1264162","ip_address":"","utype":1,"ctime":1563474055,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"40218160206","product_id":100020801,"comment_content":"看完了《算法导论》那本书的前20章，看到了动态规划。再来看老师的专栏，发现我终于可以无障碍get到本专栏的知识了。","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458930,"discussion_content":"在算法导论面前，这个专栏的内容算很浅的😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563474055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56304,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1546419059,"is_pvip":false,"replies":[{"id":"20327","content":"1. Next-key lock是前开后闭区间呀，有扫描到25，所以(20,25]<br><br>2. Rows_examined 是server层统计的，这个不满足的值没返回给server<br><br>3. 你show processlist 结果发我看下，代码中没搜到😓","user_name":"作者回复","comment_id":56304,"uid":"1264162","ip_address":"","utype":1,"ctime":1546442416,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"40201124723","product_id":100020801,"comment_content":"老师,我有几个问题:<br>1.如果把order by去掉或者order by c asc,往右扫描,为什么没有加[25,30)next-key lock?<br>2.执行session A,为什么slow log里的Rows_examined为2?按照答案来讲不应该是为3嘛<br>3.thread states里sending data包括sending data to the client,<br>另外还有一种state是Sending to client(5.7.8之前叫Writing to net)是writing a packet to the client.<br>请问针对发送数据给客户端,这两种状态有什么区别？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434980,"discussion_content":"1. Next-key lock是前开后闭区间呀，有扫描到25，所以(20,25]\n\n2. Rows_examined 是server层统计的，这个不满足的值没返回给server\n\n3. 你show processlist 结果发我看下，代码中没搜到😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546442416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150120,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1573464717,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"35933203085","product_id":100020801,"comment_content":"评论区的都是高手中的高手啊","like_count":8,"discussions":[{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335695,"discussion_content":"是的 ,他们这样显得我很呆呆的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1608275747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282671,"discussion_content":"是的，都是大佬，我就是个渣渣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592041993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1324314,"avatar":"https://static001.geekbang.org/account/avatar/00/14/35/1a/9fa38dc9.jpg","nickname":"子瞻","note":"","ucode":"5C26FF10934534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165861,"discussion_content":"可不呢，卧虎藏龙的，我感觉自己简直都是个外行，大佬太多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581337466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88982,"user_name":"zws","can_delete":false,"product_type":"c1","uid":1240091,"ip_address":"","ucode":"18EC6E85F3431E","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/1b/650e3dbe.jpg","comment_is_top":false,"comment_ctime":1556054998,"is_pvip":false,"replies":[{"id":"32284","content":"业务开发基本都能用上的哈😆","user_name":"作者回复","comment_id":88982,"uid":"1264162","ip_address":"","utype":1,"ctime":1556384705,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"31620826070","product_id":100020801,"comment_content":"老师，如果不是专业的dba看着专栏是不是有点太深了。 老师可不可以把文章分下类，哪部分可以适合业务开发人员看。","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447971,"discussion_content":"业务开发基本都能用上的哈😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556384705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56773,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1546560842,"is_pvip":false,"replies":[{"id":"20476","content":"是的，以前有很多oracle专家，然后大家就觉得RC够用。<br><br>不过他们不是“以为够用”，他们是真的分析过业务场景，分析业务的用法，确认够用。这种是很好的实践","user_name":"作者回复","comment_id":56773,"uid":"1264162","ip_address":"","utype":1,"ctime":1546564938,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"31611331914","product_id":100020801,"comment_content":"我是从Oracle转到MySQL来的，先接触的Oracle再看MySQL就经常喜欢拿两者对比，包括表数据存储结构，二级索引的异同，redo，binlog，锁机制，以及默认隔离级别。<br>研究锁后，根据自己的理解得出一个结论，MySQL默认隔离级别选为RR也是无奈之举！<br>因为当时binlog还是语句格式，为了保证binlog事务顺序正确就得有gap和next key锁。<br>而对开发人员来说，他们未必清楚事务隔离级别，且大多数开发都是从Oracle转向MySQL的，故果断将隔离级别全部调整为RC。<br><br>","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435225,"discussion_content":"是的，以前有很多oracle专家，然后大家就觉得RC够用。\n\n不过他们不是“以为够用”，他们是真的分析过业务场景，分析业务的用法，确认够用。这种是很好的实践","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546564938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78888,"user_name":"devil","can_delete":false,"product_type":"c1","uid":1259625,"ip_address":"","ucode":"BB6090411BAA23","user_header":"https://static001.geekbang.org/account/avatar/00/13/38/69/864569a4.jpg","comment_is_top":false,"comment_ctime":1553269513,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"27323073289","product_id":100020801,"comment_content":"上期问题的答案有点不明白，为什么（5，10]会被加锁？第一个不满足条件的不是10吗？退化到间隙锁的情况也只会加锁（10，15],不退化应该是[10,15]<br><br>另外主键索引到底锁了几行，上面一句写的锁了10，15，20。下面写的锁了15，20","like_count":6,"discussions":[{"author":{"id":1721168,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","nickname":"凡","note":"","ucode":"80C2A6452AB9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":137500,"discussion_content":"引用别的同学的答案\n定位第一个值c=20时，其实还是使用了优化2，先向右查找到最后一个不满足条件的值，next-key退化为(20,25)，这时候给自己加了个(15,20]和(20,25)，然后order by desc 向左遍历，(10,15]满足c=15的等值条件，然后再向左遍历，(5,10]是最后一个不满足c=15等值条件的，现在的范围就是(5,10](10,15](15,20](20,25)。然后由于是 select *，根据原则2，会锁主键，这个间隙中的主键就是10,15,20，然后范围就是(5,25)。\n\n关于为什么会在 (5,10]加锁，我的猜测是：（10，15]   10 所在的索引用到了才会加锁，但是当前 10 是开区间，所以需要（5，10] 来保证 10 不会被删除","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579187105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1232273,"avatar":"https://static001.geekbang.org/account/avatar/00/12/cd/91/3d6c53f8.jpg","nickname":"Nash.Z","note":"","ucode":"76B14722664402","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25365,"discussion_content":"同问，希望老师能给解答一下","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570510472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WtHCCMoLJ2DvzqQwPYZyj2RlN7eibTLMHDMTSO4xIKjfKR1Eh9L98AMkkZY7FmegWyGLahRQJ5ibPzeeFtfpeSow/132","nickname":"脱缰的野马__","note":"","ucode":"D5F993E7232C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299651,"discussion_content":"看下来还是没明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597759295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164780,"discussion_content":"第一问，因为只有访问到10才知道不等于15，所以会有next-key lock加锁。\n第二问，我认为写错了吧。同样有这个疑问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581220638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65203,"user_name":"刘昆","can_delete":false,"product_type":"c1","uid":1197892,"ip_address":"","ucode":"2D387C4DDE264B","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/44/66a6ab1a.jpg","comment_is_top":false,"comment_ctime":1549102475,"is_pvip":true,"replies":[{"id":"23129","content":"是这样的，我们只是简写成(5,10],<br>这个是索引c上的next-key lock，<br>所以这个范围的左边界是 (c=5,id=5), 右边界是(c=10,id=10)<br><br>你举例里面，<br>insert into t values(6,5,6)  是（c=5, id=6);<br>insert into t values(7,5,6)  是（c=5, id=7);<br>这两个都落在上面的next-key lock的区间，所以是会被锁住的哦<br><br>好问题， 新年快乐","user_name":"作者回复","comment_id":65203,"uid":"1264162","ip_address":"","utype":1,"ctime":1549156710,"user_name_real":"林晓斌"}],"discussion_count":6,"race_medal":0,"score":"27318906251","product_id":100020801,"comment_content":"老师你好，上期问题里面我遇到一下问题：<br>insert into t values(6,5,6) =&gt; block<br>insert into t values(4,5,6) =&gt; no block<br>insert into t values(6,4,6) =&gt; no block<br>insert into t values(7,5,6) =&gt; block<br>insert into t values(7,4,6) =&gt; no block<br>根据你的解答，c 上面的 next-key lock 在 (5, 10]，那么上面的情况应该都不会阻塞还对呀？<br>Server version: 5.7.24-log MySQL Community Server (GPL)<br>","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438359,"discussion_content":"是这样的，我们只是简写成(5,10],\n这个是索引c上的next-key lock，\n所以这个范围的左边界是 (c=5,id=5), 右边界是(c=10,id=10)\n\n你举例里面，\ninsert into t values(6,5,6)  是（c=5, id=6);\ninsert into t values(7,5,6)  是（c=5, id=7);\n这两个都落在上面的next-key lock的区间，所以是会被锁住的哦\n\n好问题， 新年快乐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549156710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335198,"discussion_content":"加锁的时候，是加在索引上面的。对于非主键索引，它上面存储的是什么？是索引记录，这个索引记录除了索引字段的值之外，还要存储一个主键的值。例如c=15的索引上存储的是(c=15,id=15)这样一个记录同理，c=20的索引上面存储的是(c=20,id=20)。如果c索引上面一个间隙锁的区间为(15,20)，不仅仅表示待插入的数据行的c值不能在(15,20)这个区间内。待插入的数据行中的id的值，也不能再(15,20)上面。也就是说：完整的一个间隙锁的表示方式为: (c=15,id=15) 到 (c=20,id=20)。这个时候，如果插入一个(c=15,id=16)的行是不可以的，因为c=15，虽然满足了不在区间(c=15,c=20)这个条件，但是id=16违反了id的值不能在(id=15,id=20)这个范围的限制。\n下图简单列一些索引c接存储结果，更好理解一些：\nc：  (...10...15...20...) //此时15<c<20,不管id是多少都会失败。\nid： (...10...15...20...) //此时c=15,id>=16都会失败；c=15,id<=14都可以成功。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608114457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIG210UcWicnKgOjBJC3CUxiaRImsiaqscVLyABrA4Kshm7hReicSuyRvfe1x07ydoT8WknNh2QLxU3rA/132","nickname":"库尔斯","note":"","ucode":"BC2F220993C3ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225394,"discussion_content":"老师，(5 是开区间， 为什么 5 都被锁住了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586357340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1141957,"avatar":"","nickname":"忆季","note":"","ucode":"F62FB7F3D2F0CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1085569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIG210UcWicnKgOjBJC3CUxiaRImsiaqscVLyABrA4Kshm7hReicSuyRvfe1x07ydoT8WknNh2QLxU3rA/132","nickname":"库尔斯","note":"","ucode":"BC2F220993C3ED","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233664,"discussion_content":"这里应该是泛指，5并不单单指c，而是和c和id的组合，实际锁的是c+id，就如同丁老师回复的 (c=5,id=5)，所以(6,5,6)会被锁是因为虽然5是开区间，但是(6,5)组合是在区间之内的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586937833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":225394,"ip_address":""},"score":233664,"extra":""},{"author":{"id":1245599,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/9f/49e504d5.jpg","nickname":"一剑霜寒七百州","note":"","ucode":"DB0F9804BB4ABC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1085569,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIG210UcWicnKgOjBJC3CUxiaRImsiaqscVLyABrA4Kshm7hReicSuyRvfe1x07ydoT8WknNh2QLxU3rA/132","nickname":"库尔斯","note":"","ucode":"BC2F220993C3ED","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273191,"discussion_content":"忆季说的很对, 可以去看看21章, (5 是开区间, 对应的id=5 如果插入（c=5, id=6 / 7 )的话, 这个索引是在（c=5, id=5 ) 后面的, 所以会被锁住","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590418857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":225394,"ip_address":""},"score":273191,"extra":""},{"author":{"id":1008468,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/54/c9475cd0.jpg","nickname":"cz","note":"","ucode":"96385190176F78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1245599,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/9f/49e504d5.jpg","nickname":"一剑霜寒七百州","note":"","ucode":"DB0F9804BB4ABC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391358,"discussion_content":"老哥给力，按这个思路， 画个图， 终于弄明白了。 👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630417170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":273191,"ip_address":""},"score":391358,"extra":""}]}]},{"had_liked":false,"id":56893,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1140951,"ip_address":"","ucode":"1E1527C71FD9DB","user_header":"https://static001.geekbang.org/account/avatar/00/11/68/d7/714c3d89.jpg","comment_is_top":false,"comment_ctime":1546573297,"is_pvip":false,"replies":[{"id":"20534","content":"1. 第一次就是找c=20,这个就是一次等值查找<br>2. 案例5那个，等值查的是id=10,然后向右遍历。这两个，一个是有order by desc,索引的扫描方向不一样，“找第一个”的值也是不一样的","user_name":"作者回复","comment_id":56893,"uid":"1264162","ip_address":"","utype":1,"ctime":1546577552,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"27316377073","product_id":100020801,"comment_content":"老师，曾剑同学的问题<br>关于上期遗留问题的解答，我有一点疑惑：<br>解答中的1中，第一个要定位的是索引 c 上“最右边的”c=20 的行，为啥只会加上间隙锁（20,25）和next-key lock(15,20]呢，为啥不是两个next-key lock(15,20]和(20,25]呢？25上的行锁难道是退化的？老师上一篇文章中说到加锁的基本原则中第一点是加锁的基本单位是next-key lock，而退化都是基于索引上的等值查询才会发生呀？盼老师指点迷津。<br>您给回答是定位到c=20的时候，是等值查询，所以加的是(20,25)的间隙锁，25的行锁退化了，那么在上一期中的案例五：唯一索引范围锁 bug，那id&lt;=15,不也是先定位到id=15，然后向右扫描，那应该也是等值查询，那么应该加的是（15，20）间隙锁，那为啥你说的加的是（15，20],为啥这个id=20的行锁也加上了呢，为啥同样是范围查询，一个行锁退化了，一个没有退化呢，求老师指点迷津<br><br>","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435300,"discussion_content":"1. 第一次就是找c=20,这个就是一次等值查找\n2. 案例5那个，等值查的是id=10,然后向右遍历。这两个，一个是有order by desc,索引的扫描方向不一样，“找第一个”的值也是不一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546577552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120194,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1564805472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23039641952","product_id":100020801,"comment_content":"我在实际工作中没怎么遇到过这类问题，仅仅简单的进行过一些SQL语句的优化。<br>不过我觉得目前所在的公司的做法值得参考<br>1：加入公司会让专业DBA进行培训，讲公司数据库的使用规范和最佳实践<br>2：实际开发中建表语句会让架构师审核是否合适<br>3：开发的代码包括SQL语句会让架构师review<br>4：大促前基础架构部会监控慢SQL让解决<br>5：大促高峰会通过降日志减轻机器压力，还不行会通过先积压消息的方式减轻数据库的压力，最后还不行会通过开关不进行数据的持久化，只进行es的持久化来减轻数据库的压力<br>6：另外大促前也会进行数据的结转","like_count":6},{"had_liked":false,"id":56585,"user_name":"一大只😴","can_delete":false,"product_type":"c1","uid":1310960,"ip_address":"","ucode":"92F3D2B7F63568","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/f0/08409e78.jpg","comment_is_top":false,"comment_ctime":1546500045,"is_pvip":false,"replies":[{"id":"20430","content":"😓居然开了这个，生产不建议开哦","user_name":"作者回复","comment_id":56585,"uid":"1264162","ip_address":"","utype":1,"ctime":1546525467,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"23021336525","product_id":100020801,"comment_content":"老师，我找到我上次说RR隔离级别下，session 1:begin;select * from t where d=5 for update;  session 2:update t set d=5 where id=0;可以执行的原因了，我配置文件中禁用了间隙锁，innodb_locks_unsafe_for_binlog=on,改成off默认值就正常了。","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435132,"discussion_content":"😓居然开了这个，生产不建议开哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546525467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56522,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1546481698,"is_pvip":true,"replies":[{"id":"20385","content":"第一次是定位到15吧？不用往回去再找10了，第一次取的就是“最左边的15”了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546486271,"ip_address":"","comment_id":56522,"utype":1}],"discussion_count":4,"race_medal":2,"score":"23021318178","product_id":100020801,"comment_content":"select * from t where c&gt;=15 and c&lt;=20 order by c desc lock in share mode; 这条语句在索引C上锁的范围是(5,25)；<br>如果把order by c desc去掉，锁的范围即(10,25]；、<br>请问老师为什么加上order by c desc后差异这么大，第一次定位到c=20的时候，为什么还要继续往后再查一次呢；而没有order by c desc后，第一次定位到10，就不会往前再查一次，这个差异是什么导致的？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435091,"discussion_content":"第一次是定位到15吧？不用往回去再找10了，第一次取的就是“最左边的15”了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546486271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335359,"discussion_content":"假如表中c的索引值是这样的，每一值都有两个重复的。\n0\t0\t5\t5\t10\t10\t15\t15\t20\t20\t25\t25\n\n1. 如果是使用where 15<=c<=20 order by c asc lock in share mode，在定位c=15和c=20的时候，是先定位到第几个15和第几个20？\n2. 如果是使用where 15<=c<=20 order by c desc lock in share mode，在定位c=15和c=20的时候，是先定位到第几个15和第几个20？\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608172828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374664,"discussion_content":"按照上面老师说的，asc定位到最左边的15，desc定位到最右边的15","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621306516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335359,"ip_address":""},"score":374664,"extra":""},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546012,"discussion_content":"第一次根据B+树索引快速搜索能力，找到的都是最左边那个。 这就是为什么asc时，不需要继续往左边找到不满足的数据，因为它已经找到最左边那个节点了。但是desc的话，B+树第一次还是找到最左边那个，所以需要往右边遍历找最右边那个，必须要扫描到第一个不满足的节点，它左边那个才是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642128519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335359,"ip_address":""},"score":546012,"extra":""}]}]},{"had_liked":false,"id":56233,"user_name":"曾剑","can_delete":false,"product_type":"c1","uid":1304922,"ip_address":"","ucode":"55466F93BE9978","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/5a/a6f2ec4b.jpg","comment_is_top":false,"comment_ctime":1546409608,"is_pvip":false,"replies":[{"id":"20237","content":"就是优化2，找第一个值的时候是等值查询","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546411853,"ip_address":"","comment_id":56233,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18726278792","product_id":100020801,"comment_content":"老师，关于上期遗留问题的解答，我有一点疑惑：<br>解答中的1中，第一个要定位的是索引 c 上“最右边的”c=20 的行，为啥只会加上间隙锁（20,25）和next-key lock(15,20]呢，为啥不是两个next-key lock(15,20]和(20,25]呢？25上的行锁难道是退化的？老师上一篇文章中说到加锁的基本原则中第一点是加锁的基本单位是next-key lock，而退化都是基于索引上的等值查询才会发生呀？盼老师指点迷津。<br>","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434959,"discussion_content":"就是优化2，找第一个值的时候是等值查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546411853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135033,"user_name":"李鑫磊","can_delete":false,"product_type":"c1","uid":1101615,"ip_address":"","ucode":"D06517CFCEEE00","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/2f/4f89f22a.jpg","comment_is_top":false,"comment_ctime":1568984381,"is_pvip":false,"replies":[{"id":"52042","content":"看连接池怎么实现的了，不过确实大多数连接池的一个基本功能就是维护长连接","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1569261893,"ip_address":"","comment_id":135033,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14453886269","product_id":100020801,"comment_content":"用数据库连接池应该不存在短连接的情况的吧？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468010,"discussion_content":"看连接池怎么实现的了，不过确实大多数连接池的一个基本功能就是维护长连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569261893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72075,"user_name":"黄继立","can_delete":false,"product_type":"c1","uid":1201686,"ip_address":"","ucode":"18948D6458E719","user_header":"https://static001.geekbang.org/account/avatar/00/12/56/16/f8b22bf5.jpg","comment_is_top":false,"comment_ctime":1551514589,"is_pvip":false,"replies":[{"id":"26133","content":"👍<br><br>尤其是第二点，可以在测试环境就发现问题，是最好","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551529574,"ip_address":"","comment_id":72075,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14436416477","product_id":100020801,"comment_content":"老师您好：<br>     首先要感谢您的分享，您以上的例子在我的线上环境都出现过。 一般情况都是慢sql 语句没有使用索引，我们所有线上的数据库，全部部署了实时kill 脚本，针对查询语句全部进行一个阀值的制定，例如是5秒，超过以后自动kill，这样会保证线上的稳定。 二就是在测试环境严格把控没有使用索引的语句。 ","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441449,"discussion_content":"👍\n\n尤其是第二点，可以在测试环境就发现问题，是最好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551529574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317847,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1b/d7/868d26ce.jpg","nickname":"songhyunmin","note":"","ucode":"D5A98668CD8532","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":174147,"discussion_content":"小黄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581873672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":145553,"discussion_content":"怎么解决误杀的问题呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579570825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67174,"user_name":"林肯","can_delete":false,"product_type":"c1","uid":1008582,"ip_address":"","ucode":"D2C97220230DE5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/c6/d6ea3df3.jpg","comment_is_top":false,"comment_ctime":1550107818,"is_pvip":false,"replies":[{"id":"23804","content":"先看看buffer pool的设置<br>数据库服务器，80%其实还好啦~😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550127698,"ip_address":"","comment_id":67174,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14435009706","product_id":100020801,"comment_content":"老师，请教个问题。我们线上有台数据库服务器内存长期高达80%，由2核4g升级到4核8g，占用cpu略降(10%），内存仍然是80%多。我观察到我们的连接数长期在600多，是不是连接数导致的？挥或者还可能有哪些原因？谢谢","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439091,"discussion_content":"先看看buffer pool的设置\n数据库服务器，80%其实还好啦~😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550127698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56423,"user_name":"长杰","can_delete":false,"product_type":"c1","uid":1312212,"ip_address":"","ucode":"DD52C9494005F7","user_header":"https://static001.geekbang.org/account/avatar/00/14/05/d4/e06bf86d.jpg","comment_is_top":false,"comment_ctime":1546441366,"is_pvip":false,"replies":[{"id":"20330","content":"好问题，这个确实不好找<br><br>1. 慢查询日志里面关注“变更以后新出现的”慢查询；<br>2. 一般先关注总扫描行数最多的语句<br>3. 从show processlist看线索<br><br>确实，这种情况能多快查出来，有运气因素😓<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546442809,"ip_address":"","comment_id":56423,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14431343254","product_id":100020801,"comment_content":"在平时的工作中有时候会遇到业务新上一个功能，sql没及时给dba进行审核，导致有些高频sql没有加索引，引起数据库的并发高。通过慢sql分析找到缺索引的表，及时执行alter语句加索引，问题便可得到解决。但有时候由慢sql导致的并发高会导致一些正常高效的sql变慢，通过慢sql排名分析，排名靠前的sql并不是真正需要优化的，如何快速定位慢sql，老师有没有好的方法？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435028,"discussion_content":"好问题，这个确实不好找\n\n1. 慢查询日志里面关注“变更以后新出现的”慢查询；\n2. 一般先关注总扫描行数最多的语句\n3. 从show processlist看线索\n\n确实，这种情况能多快查出来，有运气因素😓\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546442809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066229,"avatar":"https://static001.geekbang.org/account/avatar/00/10/44/f5/486d696c.jpg","nickname":"ethan","note":"","ucode":"DA70975A40ABE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360719,"discussion_content":"2. 一般先关注总扫描行数最多的语句 \n-------------\n实践告诉我，这个是最快最有效通常最准确的办法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616508978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94848,"user_name":"龙江源","can_delete":false,"product_type":"c1","uid":1440618,"ip_address":"","ucode":"532AB291E9AE73","user_header":"https://static001.geekbang.org/account/avatar/00/15/fb/6a/dfa676df.jpg","comment_is_top":false,"comment_ctime":1557909737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10147844329","product_id":100020801,"comment_content":"老师，您好。看了您的专栏收获非常大，加锁实际上跟索引的遍历方式关系非常紧密，就是老师讲的用到哪里，锁到哪里。<br>讲一下我试验过程中发现的几个例子：<br>1.select * from t where c &gt; 10 for update;<br>这条SQL的锁范围，初看应该是索引C (10,∞]，主键索引id=15,20,25的行；但实验发现在sessionB不能插入(3,3,3)，和预期不一致；<br>查看执行计划，发现mysql选择了使用主键索引遍历，所以锁定了所有行和间隙。（这个其实和d=5是一样的，只不过这个案例是有索引但是mysql没有选择使用）<br>mysql&gt; explain select * from t where c &gt; 10 for update;<br>+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+<br>| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |<br>+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+<br>|  1 | SIMPLE      | t1    | NULL       | ALL  | c             | NULL | NULL    | NULL |    6 |    50.00 | Using where |<br>+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+<br>1 row in set, 1 warning (0.00 sec)<br>接下来又想了一个问题，这个时候索引C有没有被锁定？<br>想到可以利用覆盖查询来实现只锁二级索引，所以执行select id from t where c=15 lock in share mode来验证猜想。<br>mysql&gt; select id from t1 where c=15 lock in share mode\\g<br>+----+<br>| id |<br>+----+<br>| 15 |<br>+----+<br>可以执行成功，说明这个时候索引C是没有锁定的，符合“用到哪儿，锁到哪儿”这么一个原则。<br><br>2.select * from t where c &lt;= 10 for update;<br>这条SQL的锁范围，我初看猜想应该是索引C(-∞,15)，主键索引id=0,5,10的行；<br>但实际发现执行 update t set d=d+1 where c=15会被阻塞，经过实验，锁的范围是，索引C(-∞,15]，主键索引id=0,5,10的行；<br><br>差别在于索引C c=15 这个点是闭区间还是开区间？<br><br>我本来的想法是，c&lt;10锁定(-∞,10]这个范围；c=10锁定(5,15)这个范围；然后合并一下，锁定(-∞,15)。<br><br>结合老师今天答疑的分析，我有点想明白了，说说看我的理解哈，加锁是要结合实际执行过程来分析的，c&lt;=10的执行方式应该是遍历索引C，直到找到一个大于10的值，所以加锁的过程应该如下：<br>先找到索引C的第一个值0，锁定(-∞,0]；<br>继续遍历下一个值5，锁定(0,5]；<br>继续遍历下一个值10，锁定(5,10]；<br>继续遍历下一个值15，锁定(10,15]；由于15大于10，终止遍历索引；<br>所以最终锁定的范围是索引C (-∞,15]<br>","like_count":3},{"had_liked":false,"id":65774,"user_name":"Invictus_CD ","can_delete":false,"product_type":"c1","uid":1302400,"ip_address":"","ucode":"4B6BCCE71032D4","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/80/f5d91c66.jpg","comment_is_top":false,"comment_ctime":1549633209,"is_pvip":false,"replies":[{"id":"23263","content":"上一篇的案例4，session A的select语句没有order by c desc<br><br>区别就是在 “order by c desc”上<br>看一下30篇哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549669065,"ip_address":"","comment_id":65774,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10139567801","product_id":100020801,"comment_content":"老师好，这个课后题c≥15加锁和上一课的例子4的c≥10解释的不太一样啊。例子4的直接在10上面加的间隙锁啊，这个为啥要在5上面加呢？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438581,"discussion_content":"上一篇的案例4，session A的select语句没有order by c desc\n\n区别就是在 “order by c desc”上\n看一下30篇哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549669065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62801,"user_name":"Moby","can_delete":false,"product_type":"c1","uid":1122734,"ip_address":"","ucode":"A9CFD37FD8B5C7","user_header":"https://static001.geekbang.org/account/avatar/00/11/21/ae/416a7d6d.jpg","comment_is_top":false,"comment_ctime":1548161480,"is_pvip":false,"replies":[{"id":"22222","content":"嗯嗯，你说的对，我这里弄错了，应该是“主键索引上id=15、20两个行锁”<br><br>勘误啦 多谢","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548174400,"ip_address":"","comment_id":62801,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10138096072","product_id":100020801,"comment_content":"谢谢谢谢谢谢老师的回答！“作者回复<br>这没问题呀<br>begin; select * from t where c&gt;=15 and c&lt;=20 order by c desc lock in share mode;<br>锁的范围是这样的：<br>索引c上，next-key lock: (5，10],(10,15],(15,20];<br>索引id上，行锁: id=15和id=20”<br><br>不过在文末（二十二：MySQL有哪些”饮鸩止渴“提高性能的方法）上写的是“<br>因此，session A 的 select 语句锁的范围就是：1.索引c上(5,25); 2. 主键索引上id=10、15、20三个行锁”（写错了吧？）","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437355,"discussion_content":"嗯嗯，你说的对，我这里弄错了，应该是“主键索引上id=15、20两个行锁”\n\n勘误啦 多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548174400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374674,"discussion_content":"主键ID=10上面的锁应该是没问题呀，怎么又改成10上面没有锁了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621310254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164800,"discussion_content":"为什么要改成两个行锁，改错了吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581222399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57012,"user_name":"古娜拉黑暗之神·巴啦啦能量·堕落达","can_delete":false,"product_type":"c1","uid":1185642,"ip_address":"","ucode":"080BBCEF7DE985","user_header":"https://static001.geekbang.org/account/avatar/00/12/17/6a/c979163e.jpg","comment_is_top":false,"comment_ctime":1546600626,"is_pvip":false,"replies":[{"id":"21088","content":"对，我在第30篇会说到这个问题哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547107824,"ip_address":"","comment_id":57012,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10136535218","product_id":100020801,"comment_content":"老师，您好：<br>我引用一下 Ryoma 的留言，如下：<br>Ryoma<br>我之前的描述有点问题，其实想问的是：为什么加了 order by c desc，第一个定位c=20 的行，会加上间隙锁 (20,25) 和 next-key lock (15,20]？<br>如果没有order by c desc，第一次命中c=15时，只会加上next-key lock(10.15]；<br>而有了order by c desc，我的理解是第一次命中c=20只需要加上next-key lock (15,20]<br>当然最后(20,25)还是加上了锁，老师的结论是对的，我也测试过了，但是我不知道如何解释。<br>唯一能想到的解释是order by c desc 并不会改变优化2这个原则：即等值查询时，会向右遍历且最后一个值不满足等值条件；同时order by c desc 带来一个类似于优化2的向左遍历原则。<br>进而导致最后的锁范围是(5,25)；而没有order by c desc的范围是(10,25]。<br>2019-01-03<br> 作者回复<br>因为执行c=20的时候，由于要order by c desc, 就要先找到“最右边第一个c=20的行”，<br>这个怎么找呢，只能向右找到25，才能知道它左边那个20是“最右的20”<br><br>我的问题是：<br>1. 按照老师您说的，先找c=20，由于是order by c desc，所以要找最右边的20，即找到25。那如果c是唯一索引呢？是不是就不会找到25了（是否会加 (20,25) 的gap lock）？我把语句改造了一下，“select * from t_20 where id &gt;= 15 and id&lt;=20 ORDER BY id desc lock in share mode;”。发现当 session A 执行完这行语句不提交的时候，session B 执行 “insert into t_20 values(24,24,24);” 是阻塞的。也就是说也加了(20,25)的间隙锁。这又是为什么呢？<br>2. 间隙锁本身不冲突，但和插入语句冲突。那么delete语句呢?<br>我做了个如下实验（以下语句按时间顺序排序）：<br>session A<br>begin;<br>select * from t_20 where c=10 lock in share mode;<br><br>session B<br>delete from t_20 where c=15;<br>insert into t_20 values(16,16,16); <br>(blocked)<br><br>session B 中第一条delete语句执行正常，第二条insert语句被阻塞。<br>我的分析是：session A在索引c上的锁是：(5,10]  (10,15)；当session B把(15,15,15)这条记录删了之后，(10,15)的间隙就不存在了，所以此时session A在索引c上的锁变为：(5,10]  (10,20)。这时再在session B中插入(16,16,16)就被阻塞了。这个分析正确吗？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435358,"discussion_content":"对，我在第30篇会说到这个问题哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547107824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2697700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LFJZ4x47rvShGhsePLIxc8EzdlBxAmVAIjJ2FQZ4NEpo8E4JCZQEOb2NIfOuiaQLL6Otkt7W3Rmu6Tv3AkgYdRA/132","nickname":"键盘上的魔术","note":"","ucode":"A731D721FB8D3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546021,"discussion_content":"问题1是一个bug:唯一索引上的范围查询会访问到不满足条件的第一个值为止。&lt;=20需要找到25，即(20,25]。&gt;=15会找到10，即(5,10]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642131279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56787,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1546561688,"is_pvip":false,"replies":[{"id":"20473","content":"嗯嗯。看来你也是趟过好多坑啦，<br>CTAS不是好用法😄<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546564749,"ip_address":"","comment_id":56787,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136496280","product_id":100020801,"comment_content":"说一个锁全库(schema)的案例，数据库晚间定时任务执行CTAS操作，由于需要执行十几分钟，导致严重会话阻塞，全库所有表上的增删改查全被阻塞。<br>后改为先建表再插数解决。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435235,"discussion_content":"嗯嗯。看来你也是趟过好多坑啦，\nCTAS不是好用法😄\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546564749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56761,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1546558844,"is_pvip":false,"replies":[{"id":"20461","content":"👍🏿 立竿见影","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546561233,"ip_address":"","comment_id":56761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136493436","product_id":100020801,"comment_content":"小系统，昨天一直报CPU使用率高，报警阈值设定为CPU平均使用率0.8。<br>登录看进程都在执行同一条SQL，活动会话有40个，主机逻辑CPU只有4个，这负载能不高吗？<br>检查SQL，表很小不到两万行，创建一个复合索引后，负载立刻就消失不见啦😄","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435217,"discussion_content":"👍🏿 立竿见影","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546561233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56722,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1546528653,"is_pvip":false,"replies":[{"id":"20445","content":"👍🏿 知识点后来就是互相交织的😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546532896,"ip_address":"","comment_id":56722,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136463245","product_id":100020801,"comment_content":"经过老师这么一提醒,又想起了之前讲的redo log文件在切换的时候,是要把脏页持久化的,所以redo log被大事务占用了也没关系.脏页持久化只需要用最后更新的那个redo log文件,因为checkpoint随着redo log切换已经往前推了。所以也没有要恢复redo log这么一说了。而且redo log比binlog还要先落盘,确实binlog不应该有能力恢复redo log。<br>这个实例本来也就是存监控数据的,所以没有做好监控。(灯下黑)","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435195,"discussion_content":"👍🏿 知识点后来就是互相交织的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546532896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56670,"user_name":"斜面镜子 Bill","can_delete":false,"product_type":"c1","uid":1305242,"ip_address":"","ucode":"B5505F94540D52","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/9a/02d589f9.jpg","comment_is_top":false,"comment_ctime":1546519492,"is_pvip":false,"replies":[{"id":"20424","content":"是的，我见过太多这种悲剧了😓<br>还是得让做DDL的同学细心看着，拿不到MDL锁就暂时放弃，<br>这种有客户端重试的时候系统很快就连接耗尽了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546524713,"ip_address":"","comment_id":56670,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10136454084","product_id":100020801,"comment_content":"业务侧查询特地表A的SQL均通过显式地开启事务控制，存在部分的慢SQL，高并发的查询影响了表A查询的commit效率，没有及时释放DML锁，此时业务发起DDL操作，获取MDL写锁被阻塞，导致后续需要获取MDL读锁的SQL被阻塞，快速导致这个库的连接池被用完，阻塞了整个实例的查询！<br>","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435176,"discussion_content":"是的，我见过太多这种悲剧了😓\n还是得让做DDL的同学细心看着，拿不到MDL锁就暂时放弃，\n这种有客户端重试的时候系统很快就连接耗尽了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546524713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164784,"discussion_content":"查询语句还搞事务，真是吃饱了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581221247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56272,"user_name":"一大只😴","can_delete":false,"product_type":"c1","uid":1310960,"ip_address":"","ucode":"92F3D2B7F63568","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/f0/08409e78.jpg","comment_is_top":false,"comment_ctime":1546414798,"is_pvip":false,"replies":[{"id":"20262","content":"(5,10]没有退化了哦，这时候是范围查找（向左遍历）过来的，不是等值查询<br><br>其它没问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546422087,"ip_address":"","comment_id":56272,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10136349390","product_id":100020801,"comment_content":"上期思考题，按照加锁原则和优化来分析：<br>定位第一个值c=20时，其实还是使用了优化2，先向右查找到最后一个不满足条件的值，next-key退化为(20,25)，这时候给自己加了个(15,20]和(20,25)，然后order by desc 向左遍历，(10,15]满足c=15的等值条件，然后再向左遍历，(5,10]是最后一个不满足c=15等值条件的，根据优化2所以退化为(5,10)，现在的范围就是(5,10)(10,15](15,20](20,25)。然后由于是 select *，根据原则2，会锁主键，这个间隙中的主键就是10,15,20，然后范围就是(5,25)。<br>不知道这样想对不对，还请老师指点，谢谢。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434970,"discussion_content":"(5,10]没有退化了哦，这时候是范围查找（向左遍历）过来的，不是等值查询\n\n其它没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546422087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2739750,"avatar":"https://static001.geekbang.org/account/avatar/00/29/ce/26/f493253d.jpg","nickname":"源不息","note":"","ucode":"2B9FF0B611BC9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571558,"discussion_content":"单数主键的10没有锁呀\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652268204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56261,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1317909,"ip_address":"","ucode":"6C4E0BD31C4501","user_header":"https://static001.geekbang.org/account/avatar/00/14/1c/15/68680348.jpg","comment_is_top":false,"comment_ctime":1546413343,"is_pvip":false,"replies":[{"id":"20282","content":"好问题，很好的思考👍🏿<br><br>其实有更复杂的操作，因为需要别的只是，要放到后面展开","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546426206,"ip_address":"","comment_id":56261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136347935","product_id":100020801,"comment_content":"如果使用古老的DDL添加方法，那不是主备的binlog里面都没有Ddl的日志，如果用之前备份加上binlog 恢复的话，那不表结构不一致啦","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434968,"discussion_content":"好问题，很好的思考👍🏿\n\n其实有更复杂的操作，因为需要别的只是，要放到后面展开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546426206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56204,"user_name":"Max","can_delete":false,"product_type":"c1","uid":1302420,"ip_address":"","ucode":"E3F1CD8FCB66B3","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/94/84296110.jpg","comment_is_top":false,"comment_ctime":1546403625,"is_pvip":false,"replies":[{"id":"20235","content":"👍🏿很好的例子，show columns 是成本挺高的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546410141,"ip_address":"","comment_id":56204,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136338217","product_id":100020801,"comment_content":"我们的系统是用php开发的 php没有连接池 所以我就把thread_cache_size 调整一下 把创建过的连接cache起来 用的是thinkphp的框架 这个框架有个功能 每次打开表要show columhs from 表 qps只要到达4000-5000 每个语句状态opening Tom table 然后removing tmp table 造成cpu(system)会爆涨 后来调教了innodb_thread_concurrency=56 另外show colums from 表名 每次会在磁盘上创建一个几k的临时表 然后在删除掉 一到高并发对性能影响很大","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434956,"discussion_content":"👍🏿很好的例子，show columns 是成本挺高的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546410141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56119,"user_name":"石建磊","can_delete":false,"product_type":"c1","uid":1155403,"ip_address":"","ucode":"53A4E311D3DF62","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/4b/254480d3.jpg","comment_is_top":false,"comment_ctime":1546394262,"is_pvip":false,"replies":[{"id":"20200","content":"正常，主要看dirty比例，这个别太高就行","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546394873,"ip_address":"","comment_id":56119,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136328854","product_id":100020801,"comment_content":"老师好，innodb buffer 这个值基本都会用满，请问这个是正常的吗？还是可以优化的？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434936,"discussion_content":"正常，主要看dirty比例，这个别太高就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546394873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56030,"user_name":"冷笑的花猫","can_delete":false,"product_type":"c1","uid":1119029,"ip_address":"","ucode":"6C368FBB577470","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/35/45391914.jpg","comment_is_top":false,"comment_ctime":1546388561,"is_pvip":false,"replies":[{"id":"20158","content":"因为要确定找到的第一个c=15是最后一个","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546393013,"ip_address":"","comment_id":56030,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136323153","product_id":100020801,"comment_content":"文中提到c要扫描到10才能停下来，c&gt;=15且c&lt;=20，这个和10有啥关系呢？一直想不明白，请老师解惑。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434917,"discussion_content":"因为要确定找到的第一个c=15是最后一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546393013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283000,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1615514862,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5910482158","product_id":100020801,"comment_content":"老师,好。<br>最近遇到一个大事务,并且从库max_binlog_cache_size设置得太小,导致的复制中断。因为binlog文件的大小超过了binlog_cache_siez+max_binlog_cache_size.<br>官方文档建议:The maximum recommended value is 4GB; this is due to the fact that MySQL currently cannot work with binary log positions greater than 4GB<br>但是经过测试binlog超过4GB,也能正常写入并且同步复制也没问题。有两个问题:<br>1.超过了4GB是容易引起哪里出现问题？<br>2.为什么要做4GB的限制?<br>专栏都两年多了,我都以为老师平时也没时间关注留言,没想到昨天还看到老师在回复,点赞。以后还可以常来提问题吗？","like_count":1,"discussions":[{"author":{"id":1308729,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/39/4089c9b5.jpg","nickname":"胖子罗","note":"","ucode":"AF45AEED6064B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397479,"discussion_content":"同问 等老师回应","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632626983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224088,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1591271447,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5886238743","product_id":100020801,"comment_content":"丁老师，今天遇到一个问题，使用 truncate 清空一张只有299条数据的表时，导致MySQL活跃线程高达89的问题，同时伴随着磁盘写入有一个大的尖刺。<br>程序端也收到了报警：<br>### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 3000ms.&quot;<br><br>mysql实例QPS每秒4000左右，innodb buffer pool 是128G<br><br>为了避免再次发生这种问题，当我清空第二个表时，采取了 drop+create 的方式，没有发生类似问题。<br><br>然后，找了一个线上服务器进行了测试，<br>表 A 数据量 2000条<br>表 B 数据量 2000条<br>采取truncate的方式清空A表，观察show processlist<br>采取drop+create的方式清空B表，观察show processlist<br><br>通过 truncate清空时 可以看到很多 insert 处于 update 状态，下面是慢日志里的一些SQL信息(删掉了一些敏感信息)<br><br># Time: 2020-06-04T18:13:13.013135+08:00<br># Query_time: 8.725153  Lock_time: 4.886651  Rows_sent: 0  Rows_examined: 0  Rows_affected: 1<br># Bytes_sent: 19  Tmp_tables: 0  Tmp_disk_tables: 0  Tmp_table_sizes: 0<br># InnoDB_trx_id: 8FD4EE16<br># QC_Hit: No  Full_scan: No  Full_join: No  Tmp_table: No  Tmp_table_on_disk: No<br># Filesort: No  Filesort_on_disk: No  Merge_passes: 0<br>#   InnoDB_IO_r_ops: 0  InnoDB_IO_r_bytes: 0  InnoDB_IO_r_wait: 0.000000<br>#   InnoDB_rec_lock_wait: 0.000000  InnoDB_queue_wait: 0.000000<br>#   InnoDB_pages_distinct: 0<br>SET timestamp=1591265593;<br>INSERT INTO XXX;<br><br><br>疑问<br>1. truncate即使要遍历lru list刷脏，为什么这个表只有299条数据，磁盘写入量这么大，会有一个尖刺？innodb_flush_neighbors的值为0<br>2. 为啥换成drop加create没有这个问题<br>truncate会遍历lru list，drop不会吗？<br>truncate和drop+create有啥区别？<br>3. 活跃线程高的问题是什么导致的，同时导致很多慢日志，从以上慢日志可以看到，即使将 Query_time 的时间 8秒减去 Lock_time 的4.8秒，还有3秒多，这3秒多时间是什么时间？<br><br>谢谢","like_count":1,"discussions":[{"author":{"id":1324550,"avatar":"https://static001.geekbang.org/account/avatar/00/14/36/06/08c46bcd.jpg","nickname":"聂利","note":"","ucode":"808E064089724D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586706,"discussion_content":"truncate 这个是5.7 的bug 问题，会去刷新buffer_pool, 很多人遇到，8.0修复了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662448496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221370,"user_name":"超超不会飞","can_delete":false,"product_type":"c1","uid":1025894,"ip_address":"","ucode":"F30D3E62442954","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/66/d3e151c7.jpg","comment_is_top":false,"comment_ctime":1590483439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885450735","product_id":100020801,"comment_content":"说下我的理解，老师帮忙指正。<br><br>判断15是否是最左边的值，需要扫描到10才能证明15是最左边的值（避免15左边还有多个15），间隙锁 (5, 10)，next-key lock (5, 15]。<br>判断20是否是最右边的值，需要扫描到25才能证明20是最右边的值（避免第一个20后面还有多个20），间隙锁 (20, 25)，next-key lock (15, 25]，根据优化2退化为间隙锁，(15, 25)。<br>合起来后索引c上的 next-key lock (5, 25)。<br><br>为什么最右边扫描到 25 锁上的是 (20, 25]，最左边扫描到10锁上的却是 (5, 10]而不是 (10, 15]？<br>因为next-key lock 是左开右闭，(20,25] 能覆盖到25，(10, 15] 无法覆盖到10，只能用 (5, 10]来覆盖10。<br>","like_count":1},{"had_liked":false,"id":75904,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1318970,"ip_address":"","ucode":"2417242560360A","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/3a/90db6a24.jpg","comment_is_top":false,"comment_ctime":1552489710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5847457006","product_id":100020801,"comment_content":"<br>【原始问题】2. 一个非常大（大几百万行）的表truncate，结果后面所有的线程都阻塞了，类似于下面这个MySQL bug的场景，结果就是等这个truncate结束。没有继续干预。<br>https:&#47;&#47;bugs.mysql.com&#47;bug.php?id=80060<br>【老师回复】2. 嗯，80060这个问题是因为要truncate，所以要回收脏页导致慢，不过这个问题在5.5.23就优化掉了哦，看你使用的是5.6，可能是别的原因。truncate如果不是被锁，而是已经在执行了，确实还是别做别的事情，等结束最好；<br><br>【再次更新】我今天做change的时候和别人解释的时候又翻了下这个记录，发现应该还是5.7以后的版本才有。<br>80060这个bug最后的更新：<br>Fixed as of the upcoming 5.7.18, 8.0.1 release。不过在87884这个bug中，5.7.18的同学又report了，MySQLbug工作人员让升级到5.7.19。:-(<br><br>不过现在在删除超级大的全表，并且可能写入buffer_pool的话，如果有人想用truncate，一般都建议drop+create。","like_count":1},{"had_liked":false,"id":71664,"user_name":"念你如昔","can_delete":false,"product_type":"c1","uid":1323531,"ip_address":"","ucode":"FCAD88AB57D084","user_header":"https://static001.geekbang.org/account/avatar/00/14/32/0b/981b4e93.jpg","comment_is_top":false,"comment_ctime":1551408538,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5846375834","product_id":100020801,"comment_content":"为什么会扫描到c=10呢？10应该是开区间啊，即使是倒序，为什么要给10这一行加锁呢","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164781,"discussion_content":"因为只有访问到10，才知道不等于15了。所以要给10这一行加Next-key lock","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581220926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210519,"avatar":"https://static001.geekbang.org/account/avatar/00/12/78/97/fa101174.jpg","nickname":"年轻人","note":"","ucode":"CDD4612BAE3247","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284818,"discussion_content":"@SuperSnow 我的理解也是这样的，不知道对不对。这个desc从大向小的方向扫描索引，需要查找到10，结合原则 2，10这一行要加上 next-key lock。next-key lock 就是 (5, 10] 才能覆盖到它。如果是 (10, 15]，就覆盖不到它了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592650154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56130,"user_name":"Geek_477c02","can_delete":false,"product_type":"c1","uid":1218578,"ip_address":"","ucode":"CB9A714A50B977","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/12/a169bdcd.jpg","comment_is_top":false,"comment_ctime":1546395173,"is_pvip":false,"replies":[{"id":"20221","content":"这里正常执行就可以了，我们要说明的是“空闲事务”<br>而且， 在前面没有begin或start transaction的时候，其实就算加了lock in share mode ,执行完成后也马上释放锁了（因为事务结束了）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546396406,"ip_address":"","comment_id":56130,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841362469","product_id":100020801,"comment_content":"图一sessionB语句是不是应该添加share mode才会sleep？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434942,"discussion_content":"这里正常执行就可以了，我们要说明的是“空闲事务”\n而且， 在前面没有begin或start transaction的时候，其实就算加了lock in share mode ,执行完成后也马上释放锁了（因为事务结束了）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546396406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56063,"user_name":"Komine","can_delete":false,"product_type":"c1","uid":1040449,"ip_address":"","ucode":"1668595D691F3A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e0/41/8ae7a30a.jpg","comment_is_top":false,"comment_ctime":1546390705,"is_pvip":false,"replies":[{"id":"20163","content":"看上一篇（21）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546393091,"ip_address":"","comment_id":56063,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5841358001","product_id":100020801,"comment_content":"老师，mysql是给索引加锁，最终锁会加到主键索引上吗？即使where条件里用的是普通索引？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434926,"discussion_content":"看上一篇（21）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546393091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164812,"discussion_content":"如果是覆盖索引就不会给主键加锁，否则就会给主键加锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581222816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56002,"user_name":"Manjusaka","can_delete":false,"product_type":"c1","uid":1156145,"ip_address":"","ucode":"622B7C97CFDC92","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/31/e48393bf.jpg","comment_is_top":false,"comment_ctime":1546370867,"is_pvip":false,"replies":[{"id":"20146","content":"嗯，第二点说得特别好👍🏿<br><br>对内业务一般都会这么做，保护数据层，同时对业务层屏蔽数据细节，也减少业务的复杂性<br><br><br>在做云服务的时候也会做一层中间层，做一些类似限流的工作","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546387781,"ip_address":"","comment_id":56002,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841338163","product_id":100020801,"comment_content":"1. 短链接的处理存在一个问题，MySQL 主动关闭连接后 发送 FIN 客户端回应 ACK ，MySQL 端进入 WAIT1 或者 WAIT 2，客户端进入 CLOSE WAIT ，部分语言驱动，或者应用层连接池设计有错误的话，客户端会一直在 CLOSE WAIT 不进入 LAST ACK ，这一部分会导致线上链接泄漏<br>所以在修改这一部分设置前的确需要和开发确认底层驱动是否正确<br><br>2. 关于 QPS 暴增，我自己的想法是更多的还是要依靠在应用层的处理来解决，例如限流等，不然直接将大量请求暴露到数据层，可能会直接打崩整个缓存层和数据层，我觉得这是极不可取的做法","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434910,"discussion_content":"嗯，第二点说得特别好👍🏿\n\n对内业务一般都会这么做，保护数据层，同时对业务层屏蔽数据细节，也减少业务的复杂性\n\n\n在做云服务的时候也会做一层中间层，做一些类似限流的工作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546387781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55987,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1546360549,"is_pvip":false,"replies":[{"id":"20135","content":"desc的执行流程就是这样哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546361010,"ip_address":"","comment_id":55987,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5841327845","product_id":100020801,"comment_content":"为什么加上order by desc就会向左扫描？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434907,"discussion_content":"desc的执行流程就是这样哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546361010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164813,"discussion_content":"desc是降序啊，要向左扫描的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581222847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355805,"user_name":"Little Bird","can_delete":false,"product_type":"c1","uid":1712043,"ip_address":"北京","ucode":"CF310EF87749DD","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1f/ab/42fc8571.jpg","comment_is_top":false,"comment_ctime":1661762113,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661762113","product_id":100020801,"comment_content":"有两个小问题：<br>1、不太明白 update&#47;insert 语句为什么要加间隙锁呢？是不是只需要加行锁就足够了。<br>2、课后思考题中 索引 c 上 为什么要在 c=10 加行锁呢？没有被命中，感觉也没必要加行锁。","like_count":0},{"had_liked":false,"id":354745,"user_name":"晴天了","can_delete":false,"product_type":"c1","uid":1359669,"ip_address":"北京","ucode":"5310E02F8DF1F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/35/0e3a92a7.jpg","comment_is_top":false,"comment_ctime":1660740379,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660740379","product_id":100020801,"comment_content":"问下老师 慢日志是在服务层实现的吗","like_count":0},{"had_liked":false,"id":343444,"user_name":"Geek_7d76cd","can_delete":false,"product_type":"c1","uid":2875758,"ip_address":"","ucode":"166856026B4138","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/JQwSicKgsAW14NrZC8PVCFfDad3E71dmkTkXw3ZtI6HWCVELtRIxFwk8UlCWqSXlzcicibZ1XbtCKOmwklCbQ9Ieg/132","comment_is_top":false,"comment_ctime":1650855906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650855906","product_id":100020801,"comment_content":"老师，你好！<br>我是一名大三计算机学生，目前在学校也就只学过数据库系统概论（也不是很扎实），在之前的文章的学习过程中由于自己的基础不够扎实，对于一些知识点会需要自己上网去查。<br>遇到的问题：<br>             第一：网上文章比较多也比较杂，对于相关内容我自己也不能判断是否完全正确；<br>             第二：对于某一个知识点的前后不是很了解，使得学习的过程中感觉比较碎片化；<br>             第三：有时候找不到我想要的，浪费时间，效率比较低。<br>希望老师推荐一些关于本专栏比较权威的书，类似于Java核心技术这样的，在对不懂的知识点学习时效率更高，系统化。谢谢老师！！！","like_count":0},{"had_liked":false,"id":342240,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1650122976,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650122976","product_id":100020801,"comment_content":"短链接风暴，在qps很高的情况下，使用短链接会导致数据库频繁的处理建立连接的过程，影响性能，当连接数超过 max_connectin时，数据库将拒绝新的连接。<br>1.使用连接池<br>2.删掉sleep中的连接<br>3kill点正在处理事务的连接<br>4跳过权限验证。<br>慢查询语句未命中索引，索引使用错误，以及数据库选错索引可以通过创建索引，rewrite sql  force index的方式临时解决<br>下线业务解决。正确使用白名单，连接字符串，权限分配。","like_count":1},{"had_liked":false,"id":338450,"user_name":"周三不加班","can_delete":false,"product_type":"c1","uid":1429598,"ip_address":"","ucode":"22C9329A797E7A","user_header":"https://static001.geekbang.org/account/avatar/00/15/d0/5e/4098f123.jpg","comment_is_top":false,"comment_ctime":1647506617,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647506617","product_id":100020801,"comment_content":"这个专栏不但作者牛逼，读者也很牛逼，显得我呆呆的 ","like_count":0},{"had_liked":false,"id":333724,"user_name":"NULLPOINTER","can_delete":false,"product_type":"c1","uid":2910479,"ip_address":"","ucode":"8709B2C35C2B66","user_header":"https://static001.geekbang.org/account/avatar/00/2c/69/0f/c5133808.jpg","comment_is_top":false,"comment_ctime":1644486309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644486309","product_id":100020801,"comment_content":"老师  我做了一下实验，实际加锁的范围应该是[10,25);<br><br>可能是版本问题<br>版本 5.7.21 <br>Session A<br><br>select * from t where c&gt;=15 and c&lt;=20 order by c desc lock in share mode; <br><br>+----+------+------+<br><br>| id | c    | d    |<br><br>+----+------+------+<br><br>| 20 |   20 |   20 |<br><br>| 15 |   15 |   15 |<br><br>+----+------+------+<br><br>2 rows in set (0.00 sec)<br><br>mysql&gt; explain select * from t where c&gt;=15 and c&lt;=20 order by c desc lock in share mode \\G<br><br>*************************** 1. row ***************************<br><br>           id: 1<br><br>  select_type: SIMPLE<br><br>        table: t<br><br>   partitions: NULL<br><br>         type: range<br><br>possible_keys: c<br><br>          key: c<br><br>      key_len: 5<br><br>          ref: NULL<br><br>         rows: 2<br><br>     filtered: 100.00<br><br>        Extra: Using index condition<br><br>1 row in set, 1 warning (0.00 sec)<br><br><br>Session B;<br><br>mysql&gt; insert into t values(6,6,6);<br><br>Query OK, 1 row affected (0.00 sec)<br><br>mysql&gt; insert into t values(11,11,11);<br><br>^C^C -- query aborted<br><br>ERROR 1317 (70100): Query execution was interrupted<br><br>mysql&gt; insert into t values(21,21,21);<br><br>^C^C -- query aborted<br><br>ERROR 1317 (70100): Query execution was interrupted<br><br>mysql&gt; update t set d=11 where c=10;<br><br>^C^C -- query aborted<br><br>ERROR 1317 (70100): Query execution was interrupted<br><br>mysql&gt; update t set d=26 where c=25;<br><br>Query OK, 1 row affected (0.00 sec)<br><br>Rows matched: 1  Changed: 1  Warnings: 0","like_count":0},{"had_liked":false,"id":330915,"user_name":"idiot","can_delete":false,"product_type":"c1","uid":2526391,"ip_address":"","ucode":"D7A6E980B530B4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/fcftgBsticCicEEkuzB0GTkHIocX62YVTSvnhR1c94sccj42lVaYXrmcZyhzUI3l9NcvuN1rXLhXt2eBrZZ0Tw7A/132","comment_is_top":false,"comment_ctime":1642294035,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642294035","product_id":100020801,"comment_content":"方案3一开始看觉得挺酷的，但是想一下感觉应该禁用，这可能引起业务侧未预期的结果，逻辑执行失败还好，如果后续逻辑执行成功但是把数据搞脏了，包括其他存储的数据，就难以恢复了。","like_count":0},{"had_liked":false,"id":324919,"user_name":"LWD","can_delete":false,"product_type":"c1","uid":1986739,"ip_address":"","ucode":"DDA444DB113C01","user_header":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","comment_is_top":false,"comment_ctime":1638716973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638716973","product_id":100020801,"comment_content":"为什么降序会有(5,10]的间隙锁？<br>个人理解：首先c是非唯一索引,且是降序的,所以where c&gt;=15做筛选的时候就得向左访问到10才能筛选出符合的对象,而10对应的next-key lock就是(5,10]","like_count":0},{"had_liked":false,"id":315051,"user_name":"K","can_delete":false,"product_type":"c1","uid":1151163,"ip_address":"","ucode":"0ED6CDDE3A8F5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/90/bb/61dfc022.jpg","comment_is_top":false,"comment_ctime":1633672144,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633672144","product_id":100020801,"comment_content":"老师，为了减少对MySQL的连接，批量落大量(比如500条上下)的数据，MySQL有啥可以优化的点？","like_count":0},{"had_liked":false,"id":307043,"user_name":"国家二级睡觉运动员","can_delete":false,"product_type":"c1","uid":1634795,"ip_address":"","ucode":"6D28DBFDECF902","user_header":"https://static001.geekbang.org/account/avatar/00/18/f1/eb/386dab5c.jpg","comment_is_top":false,"comment_ctime":1628839633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628839633","product_id":100020801,"comment_content":"上期问题思路整理(按时间顺序):<br><br>sessionA - 普通索引 c<br>(1) 等值查询: 找到 c=20, 加上间隙锁 c(15,20),行锁 c=20;<br>(2) 等值查询: 向右找找看是否还有 c=20 的值, 找到 c=25, 加上next-key lock (20,25], 25不满足等值条件 c=20, 按照优化2, 将 next-key lock 退化成间隙锁 (20,25), 没有行锁;<br>(3) 范围查询: 从右向左查询, 直到 c=10, 加间隙锁(5,10), 行锁 c=10;<br>此时, c 上面的锁, 间隙锁 (5,25), 行锁 c=10,15,20;<br>普通索引 c 上得到的数据 ((c=15,id=15),(c=20,id=20))<br><br>sessionA - 主键索引 id<br>(1) select *, 回表查数据, 来到主键索引 id 上;<br>(2) 查 id = 15, next-key lock (10,15], 因为是唯一索引, 按照优化1, 退化成行锁 id = 15;<br>(3) 查 id = 20, next-key lock (15,20], 因为是唯一索引, 按照优化1, 退化成行锁 id = 20;<br>所以, 主键 id 上的锁, 行锁 id=15 , id = 20;<br><br>sessionB<br>insert(6,6,6) 被间隙锁 c(15,25) 阻塞;","like_count":0},{"had_liked":false,"id":303928,"user_name":"lch_fb5837","can_delete":false,"product_type":"c1","uid":2713238,"ip_address":"","ucode":"2FFD05462DEED7","user_header":"","comment_is_top":false,"comment_ctime":1627101329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627101329","product_id":100020801,"comment_content":"老师，我想问一下你<br>就是关于MYSQL编译性能有什么好的优化方案吗？","like_count":0},{"had_liked":false,"id":300870,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1625411598,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1625411598","product_id":100020801,"comment_content":"“在索引 c 上向左遍历，要扫描到 c=10 才停下来，所以 next-key lock 会加到 (5,10]，这正是阻塞 session B 的 insert 语句的原因。”  从右到左，不是应该是扫描到15就停下来了吗？","like_count":0},{"had_liked":false,"id":286084,"user_name":"伊贺","can_delete":false,"product_type":"c1","uid":1044870,"ip_address":"","ucode":"610C041F19CF40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f1/86/2c65933d.jpg","comment_is_top":false,"comment_ctime":1617153698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617153698","product_id":100020801,"comment_content":"问题咨询~<br>MySQL 实例被多个服务使用，存在连接占用不释放的情况，服务都是老服务，排查有些困难，可以通过修改 wait_timeout 缓解吗？设置多长时间比较合适？","like_count":0},{"had_liked":false,"id":284253,"user_name":"致良知","can_delete":false,"product_type":"c1","uid":2113915,"ip_address":"","ucode":"73C722E31B726A","user_header":"https://static001.geekbang.org/account/avatar/00/20/41/7b/cda2e622.jpg","comment_is_top":false,"comment_ctime":1616140609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616140609","product_id":100020801,"comment_content":"在扫描过程中，c=20、c=15、c=10 这三行都存在值，由于是 select *，所以会在主键 id 上加三个行锁。因此，session A 的 select 语句锁的范围就是：索引 c 上 (5, 25)；主键索引上 id=15、20 两个行锁。<br>什么鬼 上面说 三个行锁 下面 加两个行锁 ？？？？？？？？","like_count":0},{"had_liked":false,"id":282588,"user_name":"JasonZhi","can_delete":false,"product_type":"c1","uid":1282818,"ip_address":"","ucode":"6C23DCD592636D","user_header":"https://static001.geekbang.org/account/avatar/00/13/93/02/fcab58d1.jpg","comment_is_top":false,"comment_ctime":1615316753,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1615316753","product_id":100020801,"comment_content":"上一期题目的解答过程中：<br>1. 在扫描过程中，c=20、c=15、c=10 这三行都存在值，由于是 select *，所以会在主键 id 上加三个行锁。<br>2. 主键索引上 id=15、20 两个行锁。<br><br>这里第1点和第2点感觉没有对应上，虽然经过测试id=10确实是没有加行锁的，但是想不明白为什么没加？老师可以做一下解答吗？<br>","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374687,"discussion_content":"怎么测试的id=10上没有行锁的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621317707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275884,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1611712334,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1611712334","product_id":100020801,"comment_content":"如果是连接数过多，你可以优先断开事务外空闲太久的连接；如果这样还不够，再考虑断开事务内空闲太久的连接。~~~~~~都已经是空闲的线程了，理论上不应该使用CPU时间片的，为什么要杀掉呢？直接把max_connections调大岂不是就可以了？？？","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374689,"discussion_content":"占用连接数，还有一种情况就是连接都是正常的但是因为调大了max_connections，导致mysql的压力过大，所以优先考虑的不是调大max_connections","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621317904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270403,"user_name":"Geek_a2edf0","can_delete":false,"product_type":"c1","uid":2351810,"ip_address":"","ucode":"617F6ADB998E57","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/BdyGbicsMXzLDeOdUcFAthHrWK7PsWZ55kVK3g5YsCsYaAzCch168zGyXxxMibW2icqM4ibQcTXqm7Rhep5lIt594Q/132","comment_is_top":false,"comment_ctime":1609117130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609117130","product_id":100020801,"comment_content":"老师我一直有一个问题 关于主键id的，如果一个表在满足最坏的情况下（没设置主键自增id，也没有唯一非空字段）那么会生成一个rowid，它也是自增的，那么问题就来了，如果该表有一个普通索引，那么普通索引的叶子节点保存的是rowid这个值吗？（如果是主键，该叶子节点就是主键的id）","like_count":0},{"had_liked":false,"id":235846,"user_name":"zapup","can_delete":false,"product_type":"c1","uid":1397351,"ip_address":"","ucode":"388D6BB5D7B137","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/67/fcba0967.jpg","comment_is_top":false,"comment_ctime":1595221036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595221036","product_id":100020801,"comment_content":"案例：业务 bug 导致，细查发现时新增数据时未处理另一个业务的特殊属性（另一个表的字段），临时通过触发器扛下来了...","like_count":0},{"had_liked":false,"id":230038,"user_name":"xiaochao321","can_delete":false,"product_type":"c1","uid":1083596,"ip_address":"","ucode":"8F5AC46CD9400C","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/cc/11b10a6f.jpg","comment_is_top":false,"comment_ctime":1593246184,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593246184","product_id":100020801,"comment_content":"索引创建问题<br>sql语句不规范<br>没有使用索引<br>max connection<br>wait timeout<br>","like_count":0},{"had_liked":false,"id":229849,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1593163312,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1593163312","product_id":100020801,"comment_content":"是在是想不通为啥会c 要扫描到 10才停下来","like_count":0},{"had_liked":false,"id":226344,"user_name":"mgs2002","can_delete":false,"product_type":"c1","uid":1812970,"ip_address":"","ucode":"F5931108BD509B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","comment_is_top":false,"comment_ctime":1592042060,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1592042060","product_id":100020801,"comment_content":"遇到到线上环境数据库没有加索引导致查询奇慢的问题。。","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374690,"discussion_content":"访问到第一个c=15的时候，不确定左边还有没有c=15的值，c上面只有一个普通索引，不是唯一索引，所以要继续向左扫描，直到扫描到c=10","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621318069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216513,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1205485,"ip_address":"","ucode":"862EA133563634","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUhJakYu4BI7eFnheKDdibDjZqz32ia2rhN0Jz5YoR1ZRlDrLcFNr4MJnPg3WiaxaocWotOANeqsBibw/132","comment_is_top":false,"comment_ctime":1589274801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589274801","product_id":100020801,"comment_content":"思考题<br>在索引 c 上向左遍历，要扫描到 c=10 才停下来，所以 next-key lock 会加到 (5,10]<br>老师请问  扫描到10 停下来，是 （10，15] 家next-key lock  ,,怎么会加到  5呢，5扫描到了吗","like_count":0},{"had_liked":false,"id":215586,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1440429,"ip_address":"","ucode":"D8C66E7F61B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/15/fa/ad/3fa02ac7.jpg","comment_is_top":false,"comment_ctime":1589025691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589025691","product_id":100020801,"comment_content":"短链接暴增<br> 1  kill无用链接<br> 2 减少连接消耗<br>慢查询<br> 1 索引没设计好<br> 2 慢SQL ，导致所以不能生效的SQL 函数 编码<br> 3 用错索引 使用 for index解决<br>qps暴增<br> 1 白名单，规则<br> 2 单独用户删掉<br> 3select 1返回，误杀","like_count":0},{"had_liked":false,"id":204647,"user_name":"颜若儒","can_delete":false,"product_type":"c1","uid":1200667,"ip_address":"","ucode":"F29C52BA01E9BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/1b/978d93ac.jpg","comment_is_top":false,"comment_ctime":1586435409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586435409","product_id":100020801,"comment_content":"老师，请问下紧急创建索引那里设置 set_bin_log=off，是因为只是一个暂时方案所以不记录binlog吗","like_count":0},{"had_liked":false,"id":204572,"user_name":"咕小咚","can_delete":false,"product_type":"c1","uid":1267621,"ip_address":"","ucode":"1B6AF9766AB081","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/a5/4d8f6e7d.jpg","comment_is_top":false,"comment_ctime":1586423283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586423283","product_id":100020801,"comment_content":"老师，请问Online DDL添加索引的时候，为什么要先关掉binlog呢？","like_count":0},{"had_liked":false,"id":195038,"user_name":"乔丹","can_delete":false,"product_type":"c1","uid":1217413,"ip_address":"","ucode":"D832A9F97A0C7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/85/f5d9474c.jpg","comment_is_top":false,"comment_ctime":1585130024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585130024","product_id":100020801,"comment_content":"我遇到的线上问题就是： 应用层的连接是长连接，有个sql连接pool。但是偶发得会出现“ERROR 2013 (HY000): Lost connection to MySQL server during query”。 将long_query_time=1， 但未发现慢查询的语句。<br>","like_count":0},{"had_liked":false,"id":191528,"user_name":"运维老胡","can_delete":false,"product_type":"c1","uid":1227007,"ip_address":"","ucode":"DF398BEE296E11","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/ff/249da6da.jpg","comment_is_top":false,"comment_ctime":1584779333,"is_pvip":false,"replies":[{"id":"73473","content":"很典型的场景😆<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1584805399,"ip_address":"","comment_id":191528,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584779333","product_id":100020801,"comment_content":"昨天真实案例，开发下班前在用客户端连上的线上的库，执行了一条elete一亿条数据命令就下班了，导致业务挂了2个小时，由此可以看出，权限管控很重要，不能给开发人员直接开操作数据库的权限。在结束掉delete操作后，业务从从库读数据还是有大量的慢查询，从库CPU使用率80%+，加上索引才恢复，因此SQL上线前的性能检查很重要。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488193,"discussion_content":"很典型的场景😆\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584805399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188953,"user_name":"晓杰","can_delete":false,"product_type":"c1","uid":1441546,"ip_address":"","ucode":"1174C88EEBF8A6","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/0a/12faa44e.jpg","comment_is_top":false,"comment_ctime":1584439092,"is_pvip":false,"replies":[{"id":"72898","content":"不会，这个值还ok ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1584445604,"ip_address":"","comment_id":188953,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584439092","product_id":100020801,"comment_content":"请问老师，我看我们的生产库的最大连接数是5000，是不是太大了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487576,"discussion_content":"不会，这个值还ok ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584445604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187243,"user_name":"q*w1314","can_delete":false,"product_type":"c1","uid":1102693,"ip_address":"","ucode":"987868C2A546DC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/65/d4ffaa2f.jpg","comment_is_top":false,"comment_ctime":1584068803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584068803","product_id":100020801,"comment_content":"如何计算一条记录的大小，具体占用多大的空间。比如我一张表有千万条数据，一个3个字段，我该如何分配mysql服务器的占用空间呢？我是把三个字段占用的字节数相加乘总条数，得出一张表占用的空间，但是我计算出来的比实际存储显示占用的空间大，不明白，求解","like_count":0},{"had_liked":false,"id":184963,"user_name":"废材","can_delete":false,"product_type":"c1","uid":1347916,"ip_address":"","ucode":"DDB85EACFB257A","user_header":"https://static001.geekbang.org/account/avatar/00/14/91/4c/32c9403c.jpg","comment_is_top":false,"comment_ctime":1583459146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583459146","product_id":100020801,"comment_content":"qps高的解决方案中1和2的业务场景不理解，在一中，白名单的作用是什么，业务与白名单的关系是什么？2中的，独立数据库，关闭某个用户，是说qps高是由某几个用户造成的？","like_count":0},{"had_liked":false,"id":184922,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1583453484,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583453484","product_id":100020801,"comment_content":"遇到生产问题，业务系统连接不上，单连数据库也不行，最后登录数据库后台服务器，查看error.log，发现innodb_buffer_pool_size被后台某个定时任务击穿，无奈只能加大pool_size，强制重启数据库服务，问题得到了解决","like_count":0},{"had_liked":false,"id":168373,"user_name":"雪影绮缘","can_delete":false,"product_type":"c1","uid":1236895,"ip_address":"","ucode":"BB131E1EC110DE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/9f/18810a24.jpg","comment_is_top":false,"comment_ctime":1578057601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578057601","product_id":100020801,"comment_content":"求大佬微信号，有个问题请教下，还有，大佬水平太高，小弟求认识","like_count":0},{"had_liked":false,"id":164322,"user_name":"凡凡是谁爹","can_delete":false,"product_type":"c1","uid":1762093,"ip_address":"","ucode":"FC902F6A76B7CC","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e3/2d/0f8ee254.jpg","comment_is_top":false,"comment_ctime":1576935993,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576935993","product_id":100020801,"comment_content":"对于上期问题，我想问为啥是25的右开区间，desc递减序列，如果肯定要扫描到25这行啊，根据原则2，应该也会加锁啊，所以为啥不是25的闭区间","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164790,"discussion_content":"因为是降序，所以直接找到最右侧的20。如果是升序那就不同的，会扫描到25，然后变成(20,25]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581221727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154030,"user_name":"jian","can_delete":false,"product_type":"c1","uid":1185102,"ip_address":"","ucode":"21CDBBB8000F0C","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/4e/4636a81d.jpg","comment_is_top":false,"comment_ctime":1574350571,"is_pvip":false,"replies":[{"id":"59175","content":"多一个字段没关系，DML语句还是可以从A传给B并正确执行的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1574388271,"ip_address":"","comment_id":154030,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574350571","product_id":100020801,"comment_content":"请问在用alter table加索引时，老师说：<br>“1.在备库 B 上执行 set sql_log_bin=off，也就是不写 binlog，然后执行 alter table 语句加上索引；<br>   2.执行主备切换；”<br>在第1步的时候，如果A库执行了更新语句，而B库不写binlog。那么主备不一致，并且B成为主库，是不是有风险？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475357,"discussion_content":"多一个字段没关系，DML语句还是可以从A传给B并正确执行的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574388271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154017,"user_name":"jian","can_delete":false,"product_type":"c1","uid":1185102,"ip_address":"","ucode":"21CDBBB8000F0C","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/4e/4636a81d.jpg","comment_is_top":false,"comment_ctime":1574348047,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1574348047","product_id":100020801,"comment_content":"“DBA 虽然可以通过语句重写来暂时处理问题，但是这本身是一个风险高的操作，做好 SQL 审计可以减少需要这类操作的机会。”请问老师，什么是SQL审计？如何通过它减少重写的机会？ 望指点。","like_count":0,"discussions":[{"author":{"id":1066229,"avatar":"https://static001.geekbang.org/account/avatar/00/10/44/f5/486d696c.jpg","nickname":"ethan","note":"","ucode":"DA70975A40ABE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360734,"discussion_content":"上点规模的公司，开发是不允许直接干生产库的。\n如果有需要在生产库跑脚本，要走工单找leader审核有没有业务风险，然后dba再检查一遍有没有锁表之类的技术风险，有问题要打回修改重新提交，之后才会去执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616509996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164788,"discussion_content":"sql审计应该相当于sql的code review吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581221506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153313,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1574214036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574214036","product_id":100020801,"comment_content":"关于rewriter-query-rewrite-plugin的安装与使用，建议看下官方文档。<br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;rewriter-query-rewrite-plugin-installation.html","like_count":0},{"had_liked":false,"id":150129,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1573465605,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573465605","product_id":100020801,"comment_content":"如果语句这么写的话select * from t where c&gt;=15 and c&lt;=20 order by c asc lock in share mode;加的间隙锁应该是(15, 20]与(20, 25)吧？请老师帮忙解答我哪里理解错误了，感谢老师","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":164791,"discussion_content":"（10，15],(15,20],(20,25]","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581221737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148581,"user_name":"main","can_delete":false,"product_type":"c1","uid":1293581,"ip_address":"","ucode":"9E0B806245F11E","user_header":"https://static001.geekbang.org/account/avatar/00/13/bd/0d/f4799191.jpg","comment_is_top":false,"comment_ctime":1573033466,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573033466","product_id":100020801,"comment_content":"丁老师好，我是mysql5.6版本，有一个表a为innodb的，然后我第一次select * from a，然后一秒后再次select * from a，为什么我得pager made young还是0？？？innodb_old_blocks_time配置的是1000，求问，十分懵","like_count":0},{"had_liked":false,"id":105428,"user_name":"看不穿","can_delete":false,"product_type":"c1","uid":1259769,"ip_address":"","ucode":"8D35C36C7A35F0","user_header":"https://static001.geekbang.org/account/avatar/00/13/38/f9/2b4755b5.jpg","comment_is_top":false,"comment_ctime":1560997847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560997847","product_id":100020801,"comment_content":"老师，您在文中说，先在备库加索引，然后主备切换，把备库提升为主。<br>可是我遇到的问题时，如果把备库提升为主的话，备库会更慢，因为备库的innodb buffer pool没有预热，导致一开始的查询都是磁盘读，平时几秒的查询，一开始都得要几分钟才能查出来，请问是不是不应该轻易做主备切换。<br>我做的方法是定期把主库的innodb buffer pool热数据 dump到从库，详细步骤是：<br>http:&#47;&#47;blog.itpub.net&#47;28916011&#47;viewspace-2199483&#47;<br>请问老师，我这样的做法对吗","like_count":0},{"had_liked":false,"id":103279,"user_name":"Tunayoyo","can_delete":false,"product_type":"c1","uid":1447213,"ip_address":"","ucode":"E77AFDE575CE04","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/2d/8447e8c8.jpg","comment_is_top":false,"comment_ctime":1560408299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560408299","product_id":100020801,"comment_content":"老师，上期问题我又试了下session B里:<br>1.insert into t values(2,25,1);失败！25是不是应该包含在c的锁区间中？<br>2.update t set d=10 where id=10;成功!id=10是不是没有加行锁？","like_count":0},{"had_liked":false,"id":103243,"user_name":"Tunayoyo","can_delete":false,"product_type":"c1","uid":1447213,"ip_address":"","ucode":"E77AFDE575CE04","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/2d/8447e8c8.jpg","comment_is_top":false,"comment_ctime":1560403094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560403094","product_id":100020801,"comment_content":"老师，上期问题的答案手误，Session A锁的范围是行锁id=10、15、20和next-key lock c (5，25)。","like_count":0},{"had_liked":false,"id":103241,"user_name":"Tunayoyo","can_delete":false,"product_type":"c1","uid":1447213,"ip_address":"","ucode":"E77AFDE575CE04","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/2d/8447e8c8.jpg","comment_is_top":false,"comment_ctime":1560402789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560402789","product_id":100020801,"comment_content":"老师，session A锁住的范围应该是：主键索引上的id=10、15、20三行和c索引上的(5,20)。","like_count":0},{"had_liked":false,"id":103003,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1560346932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560346932","product_id":100020801,"comment_content":"老师，我是这样理解的，按照上一节课程，遍历的思维方式是从左至右。我调整了一下索引 c，从左至右排列如下：<br>+∞ 25 20 15 10 5 0 -∞<br><br>因此，next-key lock 可以划分为：<br>(+∞, 25]，(25, 20]，(20, 15]，(15, 10]，(10, 5]，(5, 0]，(0, -∞)<br><br>从左至右遍历索引 c：<br>1. 定位到 c=20 时，加 next-key lock (25, 20]。<br>2. 接着向右扫描，c=15，加 next-key lock (20, 15]。<br>3. 因为是范围查找，所以还得继续向右扫描，c=10，加 next-key lock (15, 10]，非等值查询，无法应用优化规则。扫到 c=10，不需要再扫描了，因此索引 c 加锁范围是 [10, 25)。<br><br>------<br><br>分析过程感觉上是对的，但是实际上是错的，而我不知道错在哪😂，求老师指点迷津，谢谢老师！！<br><br>老师，能『细说（例如：加 A 锁是根据规则 xx，加 B 是根据规则 yy）』一下，您分析这段『逆序』加锁的方法么？谢谢老师！","like_count":0},{"had_liked":false,"id":85598,"user_name":"Geek_6064de","can_delete":false,"product_type":"c1","uid":1484426,"ip_address":"","ucode":"3D994C104BA9CC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/d17fK3ewEw349ITn1rQk16VGDe2xr29aMEESbrv0OEgEmtfaHkCLqRiauYRBiblGEZLCovArrAL5AibjI5K7zib4Sw/132","comment_is_top":false,"comment_ctime":1555137888,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1555137888","product_id":100020801,"comment_content":"老师您好，有一个问题不解，还望老师帮忙解答。就是在上期问题中，如果sessionA中的select语句是order by c asc的话，sessionB就不会阻塞，这是为什么呢？排序方式还会对加锁范围有影响吗？","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":145573,"discussion_content":"跟开始位置，结束位置，扫描方向有关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579571389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82735,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1554288963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554288963","product_id":100020801,"comment_content":"索引c上，next-key lock: (5，10],(10,15],(15,20];<br>索引id上，行锁: id=15和id=20<br><br>为啥索引id  没有id=10的行锁？","like_count":0},{"had_liked":false,"id":75576,"user_name":"liao xueqiang","can_delete":false,"product_type":"c1","uid":1310325,"ip_address":"","ucode":"68713441579F6B","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/75/46742f12.jpg","comment_is_top":false,"comment_ctime":1552437259,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552437259","product_id":100020801,"comment_content":"每秒一次后台轮询刷盘，再加上崩溃恢复这个逻辑，InnoDB 就认为 redo log 在 commit 的时候就不需要 fsync 了，只会 write 到文件系统的 page cache 中就够了。<br><br>单独拎出这句话的话，还是没能理解这意思。这句话的前提是","like_count":0},{"had_liked":false,"id":66051,"user_name":"刘育飞","can_delete":false,"product_type":"c1","uid":1363642,"ip_address":"","ucode":"06600614E898CC","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/ba/f73555c7.jpg","comment_is_top":false,"comment_ctime":1549864071,"is_pvip":true,"replies":[{"id":"23399","content":"如果都有索引的查询，应该还好<br><br>还是给一下模拟的表结构，和比较耗费资源的语句，一起来看看","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549873397,"ip_address":"","comment_id":66051,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549864071","product_id":100020801,"comment_content":"请问如果一个表 有千万数据。写少 如账号表 读多，有千万客户 ，应该怎么优化查询 索引 跟主从都上了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438687,"discussion_content":"如果都有索引的查询，应该还好\n\n还是给一下模拟的表结构，和比较耗费资源的语句，一起来看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549873397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61775,"user_name":"unlock","can_delete":false,"product_type":"c1","uid":1335403,"ip_address":"","ucode":"9B1F899B960A20","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/6b/907a9557.jpg","comment_is_top":false,"comment_ctime":1547797529,"is_pvip":false,"replies":[{"id":"21919","content":"InnoDB可不存在“没有索引的表”哦<br><br>没有主键，系统会给创建一个的（隐藏的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547802968,"ip_address":"","comment_id":61775,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547797529","product_id":100020801,"comment_content":"老师，对于这句话“锁就是加在索引上的”，如果一个表没有主键、没有索引，还会加锁吗。<br>如果会加，加到哪","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436988,"discussion_content":"InnoDB可不存在“没有索引的表”哦\n\n没有主键，系统会给创建一个的（隐藏的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547802968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57031,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1546605346,"is_pvip":false,"replies":[{"id":"20568","content":"Show variables like “output”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546609216,"ip_address":"","comment_id":57031,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546605346","product_id":100020801,"comment_content":"为什么我的电脑上没有慢查询的日志文件，mysql5.7<br>ysql&gt; show VARIABLES like &#39;%slow%&#39;;<br>+---------------------------+--------------------------+<br>| Variable_name             | Value                    |<br>+---------------------------+--------------------------+<br>| log_slow_admin_statements | OFF                      |<br>| log_slow_slave_statements | OFF                      |<br>| slow_launch_time          | 2                        |<br>| slow_query_log            | ON                       |<br>| slow_query_log_file       | DESKTOP-76FNKS3-slow.log |<br>+---------------------------+--------------------------+<br><br>DESKTOP-76FNKS3-slow.log 这个文件再本地磁盘找不到","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435370,"discussion_content":"Show variables like “output”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546609216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57024,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1546604439,"is_pvip":false,"replies":[{"id":"20563","content":"搜一下用法吧😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546608546,"ip_address":"","comment_id":57024,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546604439","product_id":100020801,"comment_content":"mysql5.7为什么不存在下面的数据库和表 <br>mysql&gt; use query_rewrite;<br>ERROR 1049 (42000): Unknown database &#39;query_rewrite&#39;<br>mysql&gt;<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435367,"discussion_content":"搜一下用法吧😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546608546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56437,"user_name":"怀朔","can_delete":false,"product_type":"c1","uid":1006865,"ip_address":"","ucode":"52FAC1C2FD37B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/11/e1f36640.jpg","comment_is_top":false,"comment_ctime":1546443533,"is_pvip":false,"replies":[{"id":"20342","content":"今天这图是ppt画的😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546450655,"ip_address":"","comment_id":56437,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546443533","product_id":100020801,"comment_content":"老师 你用的画图软件是什么 觉得你画的很好看","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435035,"discussion_content":"今天这图是ppt画的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546450655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56305,"user_name":"木小易","can_delete":false,"product_type":"c1","uid":1143167,"ip_address":"","ucode":"B321EF018904C4","user_header":"https://static001.geekbang.org/account/avatar/00/11/71/7f/4eba4781.jpg","comment_is_top":false,"comment_ctime":1546419169,"is_pvip":false,"replies":[{"id":"20256","content":"Explain也是估算值…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546421234,"ip_address":"","comment_id":56305,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546419169","product_id":100020801,"comment_content":"老师，有时同一条sql，explain的rows与slow-log中的Rows examined差别很大，这个是什么原因呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434981,"discussion_content":"Explain也是估算值…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546421234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56258,"user_name":"Richie","can_delete":false,"product_type":"c1","uid":1111377,"ip_address":"","ucode":"1426E1B2E82A43","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/51/60e91438.jpg","comment_is_top":false,"comment_ctime":1546412674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546412674","product_id":100020801,"comment_content":"老师 com_admin_commands 这个很高是什么原因","like_count":0},{"had_liked":false,"id":56171,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1546399682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546399682","product_id":100020801,"comment_content":"oracle中可以通过spm固化sql语句的执行计划，对于处理类似执行计划突变或新上线的性能问题sql非常方便，一直没有在mysql中找到替代方案，今天终于知道可以使用query_rewrite功能替代啦。赞！","like_count":0}]}