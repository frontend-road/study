{"id":528692,"title":"06｜打破次元壁：容器该如何与外界互联互通","content":"<p>你好，我是Chrono。</p><p>在前面的几节课里，我们已经学习了容器、镜像、镜像仓库的概念和用法，也知道了应该如何创建镜像，再以容器的形式启动应用。</p><p>不过，用容器来运行“busybox”“hello world”这样比较简单的应用还好，如果是Nginx、Redis、MySQL这样的后台服务应用，因为它们运行在容器的“沙盒”里，完全与外界隔离，无法对外提供服务，也就失去了价值。这个时候，容器的隔离环境反而成为了一种负面特性。</p><p>所以，容器的这个“小板房”不应该是一个完全密闭的铁屋子，而是应该给它开几扇门窗，让应用在“足不出户”的情况下，也能够与外界交换数据、互通有无，这样“有限的隔离”才是我们真正所需要的运行环境。</p><p>那么今天，我就以Docker为例，来讲讲有哪些手段能够在容器与外部系统之间沟通交流。</p><h2>如何拷贝容器内的数据</h2><p>我们首先来看看Docker提供的 <code>cp</code> 命令，它可以在宿主机和容器之间拷贝文件，是最基本的一种数据交换功能。</p><p>试验这个命令需要先用 <code>docker run</code> 启动一个容器，就用Redis吧：</p><pre><code class=\"language-plain\">docker run -d --rm redis\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/b1/3d/b1783d59c7a8d9caca91f0fa67d01e3d.png?wh=1692x306\" alt=\"图片\"></p><p>注意这里使用了 <code>-d</code>、<code>--rm</code> 两个参数，表示运行在后台，容器结束后自动删除，然后使用 <code>docker ps</code> 命令可以看到Redis容器正在运行，容器ID是“062”。</p><!-- [[[read_end]]] --><p><code>docker cp</code> 的用法很简单，很类似Linux的“cp”“scp”，指定源路径（src path）和目标路径（dest path）就可以了。如果源路径是宿主机那么就是把文件拷贝进容器，如果源路径是容器那么就是把文件拷贝出容器，注意需要用<strong>容器名或者容器ID</strong>来指明是哪个容器的路径。</p><p>假设当前目录下有一个“a.txt”的文件，现在我们要把它拷贝进Redis容器的“/tmp”目录，如果使用容器ID，命令就会是这样：</p><pre><code class=\"language-plain\">docker cp a.txt 062:/tmp\n</code></pre><p>接下来我们可以使用 <code>docker exec</code> 命令，进入容器看看文件是否已经正确拷贝了：</p><pre><code class=\"language-plain\">docker exec -it 062 sh\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/77/45/774ea51e56cac8b9aefb6d326b1f1145.png?wh=990x182\" alt=\"图片\"></p><p>可以看到，在“/tmp”目录下，确实已经有了一个“a.txt”。</p><p>现在让我们再来试验一下从容器拷贝出文件，只需要把 <code>docker cp</code> 后面的两个路径调换一下位置：</p><pre><code class=\"language-plain\">docker cp 062:/tmp/a.txt ./b.txt\n</code></pre><p>这样，在宿主机的当前目录里，就会多出一个新的“b.txt”，也就是从容器里拿到的文件。</p><h2>如何共享主机上的文件</h2><p><code>docker cp</code> 的用法模仿了操作系统的拷贝命令，偶尔一两次的文件共享还可以应付，如果容器运行时经常有文件来往互通，这样反复地拷来拷去就显得很麻烦，也很容易出错。</p><p>你也许会联想到虚拟机有一种“共享目录”的功能。它可以在宿主机上开一个目录，然后把这个目录“挂载”进虚拟机，这样就实现了两者共享同一个目录，一边对目录里文件的操作另一边立刻就能看到，没有了数据拷贝，效率自然也会高很多。</p><p>沿用这个思路，容器也提供了这样的共享宿主机目录的功能，效果也和虚拟机几乎一样，用起来很方便，只需要在 <code>docker run</code> 命令启动容器的时候使用 <code>-v</code> 参数就行，具体的格式是“<strong>宿主机路径:容器内路径</strong>”。</p><p>我还是以Redis为例，启动容器，使用 <code>-v</code> 参数把本机的“/tmp”目录挂载到容器里的“/tmp”目录，也就是说让容器共享宿主机的“/tmp”目录：</p><pre><code class=\"language-plain\">docker run -d --rm -v /tmp:/tmp redis\n</code></pre><p>然后我们再用 <code>docker exec</code> 进入容器，查看一下容器内的“/tmp”目录，应该就可以看到文件与宿主机是完全一致的。</p><pre><code class=\"language-plain\">docker exec -it b5a sh    # b5a是容器ID\n</code></pre><p>你也可以在容器里的“/tmp”目录下随便做一些操作，比如删除文件、建立新目录等等，再回头观察一下宿主机，会发现修改会即时同步，这就表明容器和宿主机确实已经共享了这个目录。</p><p><code>-v</code> 参数挂载宿主机目录的这个功能，对于我们日常开发测试工作来说非常有用，我们可以在不变动本机环境的前提下，使用镜像安装任意的应用，然后直接以容器来运行我们本地的源码、脚本，非常方便。</p><p>这里我举一个简单的例子。比如我本机上只有Python 2.7，但我想用Python 3开发，如果同时安装Python 2和Python 3很容易就会把系统搞乱，所以我就可以这么做：</p><ol>\n<li>先使用 <code>docker pull</code> 拉取一个Python 3的镜像，因为它打包了完整的运行环境，运行时有隔离，所以不会对现有系统的Python 2.7产生任何影响。</li>\n<li>在本地的某个目录编写Python代码，然后用 <code>-v</code> 参数让容器共享这个目录。</li>\n<li>现在就可以在容器里以Python 3来安装各种包，再运行脚本做开发了。</li>\n</ol><pre><code class=\"language-plain\">docker pull python:alpine\ndocker run -it --rm -v `pwd`:/tmp python:alpine sh\n</code></pre><p>显然，这种方式比把文件打包到镜像或者 <code>docker cp</code> 会更加灵活，非常适合有频繁修改的开发测试工作。</p><h2>如何实现网络互通</h2><p>现在我们使用 <code>docker cp</code> 和 <code>docker run -v</code> 可以解决容器与外界的文件互通问题，但对于Nginx、Redis这些服务器来说，网络互通才是更要紧的问题。</p><p>网络互通的关键在于“打通”容器内外的网络，而处理网络通信无疑是计算机系统里最棘手的工作之一，有许许多多的名词、协议、工具，在这里我也没有办法一下子就把它都完全说清楚，所以只能从“宏观”层面讲个大概，帮助你快速理解。</p><p>Docker提供了三种网络模式，分别是<strong>null</strong>、<strong>host</strong>和<strong>bridge</strong>。</p><p><strong>null</strong>是最简单的模式，也就是没有网络，但允许其他的网络插件来自定义网络连接，这里就不多做介绍了。</p><p><strong>host</strong>的意思是直接使用宿主机网络，相当于去掉了容器的网络隔离（其他隔离依然保留），所有的容器会共享宿主机的IP地址和网卡。这种模式没有中间层，自然通信效率高，但缺少了隔离，运行太多的容器也容易导致端口冲突。</p><p>host模式需要在 <code>docker run</code> 时使用 <code>--net=host</code> 参数，下面我就用这个参数启动Nginx：</p><pre><code class=\"language-plain\">docker run -d --rm --net=host nginx:alpine\n</code></pre><p>为了验证效果，我们可以在本机和容器里分别执行 <code>ip addr</code> 命令，查看网卡信息：</p><pre><code class=\"language-plain\">ip addr                    # 本机查看网卡\ndocker exec xxx ip addr    # 容器查看网卡\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/51/41/512a1522f75e3b67a313b17d17e88d41.png?wh=1920x607\" alt=\"图片\" title=\"本机查看网卡\"></p><p><img src=\"https://static001.geekbang.org/resource/image/d3/f4/d34785c0a0be3yybf0d44231d2b7c6f4.png?wh=1920x657\" alt=\"图片\" title=\"容器查看网卡\"></p><p>可以看到这两个 <code>ip addr</code> 命令的输出信息是完全一样的，比如都是一个网卡ens160，IP地址是“192.168.10.208”，这就证明Nginx容器确实与本机共享了网络栈。</p><p>第三种<strong>bridge</strong>，也就是桥接模式，它有点类似现实世界里的交换机、路由器，只不过是由软件虚拟出来的，容器和宿主机再通过虚拟网卡接入这个网桥（图中的docker0），那么它们之间也就可以正常的收发网络数据包了。不过和host模式相比，bridge模式多了虚拟网桥和网卡，通信效率会低一些。</p><p><img src=\"https://static001.geekbang.org/resource/image/6e/60/6e0d05cf19720f44ca68f88238627460.jpg?wh=1920x1407\" alt=\"图片\"></p><p>和host模式一样，我们也可以用 <code>--net=bridge</code> 来启用桥接模式，但其实并没有这个必要，因为Docker默认的网络模式就是bridge，所以一般不需要显式指定。</p><p>下面我们启动两个容器Nginx和Redis，就像刚才说的，没有特殊指定就会使用bridge模式：</p><pre><code class=\"language-plain\">docker run -d --rm nginx:alpine    # 默认使用桥接模式\ndocker run -d --rm redis           # 默认使用桥接模式\n</code></pre><p>然后我们还是在本机和容器里执行 <code>ip addr</code> 命令（Redis容器里没有ip命令，所以只能在Nginx容器里执行）：</p><p><img src=\"https://static001.geekbang.org/resource/image/67/07/6738ac4730b15bc6f6760088bef13607.png?wh=1920x455\" alt=\"图片\"></p><p>对比一下刚才host模式的输出，就可以发现容器里的网卡设置与宿主机完全不同，eth0是一个虚拟网卡，IP地址是B类私有地址“172.17.0.2”。</p><p>我们还可以用 <code>docker inspect</code> 直接查看容器的ip地址：</p><pre><code class=\"language-plain\">docker inspect xxx |grep IPAddress\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/10/d6/10c86aecyy6c61ff8fdbd6333e7e00d6.png?wh=1328x490\" alt=\"图片\"></p><p>这显示出两个容器的IP地址分别是“172.17.0.2”和“172.17.0.3”，而宿主机的IP地址则是“172.17.0.1”，所以它们都在“172.17.0.0/16”这个Docker的默认网段，彼此之间就能够使用IP地址来实现网络通信了。</p><h2>如何分配服务端口号</h2><p>使用host模式或者bridge模式，我们的容器就有了IP地址，建立了与外部世界的网络连接，接下来要解决的就是网络服务的端口号问题。</p><p>你一定知道，服务器应用都必须要有端口号才能对外提供服务，比如HTTP协议用80、HTTPS用443、Redis是6379、MySQL是3306。<a href=\"hhttps://time.geekbang.org/column/article/528660\">第4讲</a>我们在学习编写Dockerfile的时候也看到过，可以用 <code>EXPOSE</code> 指令声明容器对外的端口号。</p><p>一台主机上的端口号数量是有限的，而且多个服务之间还不能够冲突，但我们打包镜像应用的时候通常都使用的是默认端口，容器实际运行起来就很容易因为端口号被占用而无法启动。</p><p>解决这个问题的方法就是加入一个“中间层”，由容器环境例如Docker来统一管理分配端口号，在本机端口和容器端口之间做一个“映射”操作，容器内部还是用自己的端口号，但外界看到的却是另外一个端口号，这样就很好地避免了冲突。</p><p><strong>端口号映射需要使用bridge模式，并且在 <code>docker run</code> 启动容器时使用 <code>-p</code> 参数，形式和共享目录的 <code>-v</code> 参数很类似，用 <code>:</code> 分隔本机端口和容器端口</strong>。比如，如果要启动两个Nginx容器，分别跑在80和8080端口上：</p><pre><code class=\"language-plain\">docker run -d -p 80:80 --rm nginx:alpine\ndocker run -d -p 8080:80 --rm nginx:alpine\n</code></pre><p>这样就把本机的80和8080端口分别“映射”到了两个容器里的80端口，不会发生冲突，我们可以用curl再验证一下：</p><p><img src=\"https://static001.geekbang.org/resource/image/f1/d8/f16b0d1a02af7fecd84fdb7c24bf12d8.png?wh=1692x1510\" alt=\"图片\"></p><p>使用 <code>docker ps</code> 命令能够在“PORTS”栏里更直观地看到端口的映射情况：</p><p><img src=\"https://static001.geekbang.org/resource/image/63/ed/63e151b4246feef89b9c7befd88f95ed.png?wh=1920x145\" alt=\"图片\"></p><h2>小结</h2><p>好了，今天我们一起学习了容器与外部系统之间沟通交流的几种方法。</p><p>你会发现，这些方法几乎消除了容器化的应用和本地应用因为隔离特性而产生的差异，而因为镜像独特的打包机制，容器技术显然能够比apt/yum更方便地安装各种应用，绝不会“污染”已有的系统。</p><p>今天的课里我列举了Python、Nginx等例子，你还可以举一反三，借鉴它们把本地配置文件加载到容器里适当的位置，再映射端口号，把Redis、MySQL、Node.js都运行起来，让容器成为我们工作中的得力助手。</p><p>照例简单小结一下这次的要点：</p><ol>\n<li><code>docker cp</code> 命令可以在容器和主机之间互相拷贝文件，适合简单的数据交换。</li>\n<li><code>docker run -v</code> 命令可以让容器和主机共享本地目录，免去了拷贝操作，提升工作效率。</li>\n<li>host网络模式让容器与主机共享网络栈，效率高但容易导致端口冲突。</li>\n<li>bridge网络模式实现了一个虚拟网桥，容器和主机都在一个私有网段内互联互通。</li>\n<li><code>docker run -p</code> 命令可以把主机的端口号映射到容器的内部端口号，解决了潜在的端口冲突问题。</li>\n</ol><h2>课下作业</h2><p>最后是课下作业时间，给你留两个思考题：</p><ol>\n<li>你能说出今天学的 <code>docker cp</code> 命令和第4讲Dockerfile里的COPY指令有什么区别吗？</li>\n<li>你觉得host模式和bridge模式各有什么优缺点，在什么场景下应用最合适？</li>\n</ol><p>欢迎积极留言讨论，我会第一时间给你回复，如果有收获也欢迎你转发给身边的朋友一起学习。</p><p>下节课是实战演练，下节课见。</p><p><img src=\"https://static001.geekbang.org/resource/image/46/bb/46ccb8yy8d265f4fcc8ea3e88f7565bb.jpg?wh=1920x2237\" alt=\"\"></p>","neighbors":{"left":{"article_title":"05｜镜像仓库：该怎样用好Docker Hub这个宝藏","id":528677},"right":{"article_title":"07｜实战演练：玩转Docker","id":528740}},"comments":[{"had_liked":false,"id":350520,"user_name":"xmr","can_delete":false,"product_type":"c1","uid":1009622,"ip_address":"","ucode":"1BBF165F91F10B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/d6/2f5cb85c.jpg","comment_is_top":false,"comment_ctime":1656985869,"is_pvip":false,"replies":[{"id":127498,"content":"awesome","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656986915,"ip_address":"","comment_id":350520,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"1.第四节的COPY是在构建镜像时把本地文件拷贝到镜像，而本节的cp命令是在容器运行后容器和宿主机互相拷贝文件，一个构建时，一个运行时。\n2.host性能好，隔离性差；bridge隔离性好，性能差了一点。host一般用在集群的边界需要和集群外通信的场景，比如ingress-nginx；bridge用于集群内部，如无特殊需求默认都是bridge。","like_count":30,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578712,"discussion_content":"awesome","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656986915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350433,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1656911032,"is_pvip":false,"replies":[{"id":127463,"content":"说的很好。\n\nCOPY指令会把文件拷贝进镜像，“永远存在”，而cp命令是暂时的。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656919639,"ip_address":"","comment_id":350433,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"1:第四节的copy命令是在容器启动过程中的COPY命令，该命令应该是在声明了“namespace”之后，所以这个时候进程看到的世界是一个隔离的环境；\n   而这里的COPY更像是站在“上帝视角（宿主机操作系统层面）”进行拷贝，所以这里不受“namespace”的约束；\n2:host就是简单粗暴效率高，适合小规模集群的简单拓扑结构；bridge适合大规模集群，有了bridge就有更多的可操作空间，比如XLAN和VXLAN这些，它可以提供更多的可定制化服务，比如流量控制、灰度策略这些，从而像flannel和Calico这些组件才有了更多的发挥余地。","like_count":22,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578622,"discussion_content":"说的很好。\n\nCOPY指令会把文件拷贝进镜像，“永远存在”，而cp命令是暂时的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656919639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009622,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/d6/2f5cb85c.jpg","nickname":"xmr","note":"","ucode":"1BBF165F91F10B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578707,"discussion_content":"COPY不是容器启动时执行的，而是在构建镜像的时候就执行了","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1656985959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606443,"discussion_content":"COPY和add的区别就是COPY从本地复制到镜像内部，add可以把远程资源复制进去，COPY不能解压文件，add可以解压文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677136253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350481,"user_name":"🙄","can_delete":false,"product_type":"c1","uid":1399058,"ip_address":"","ucode":"294786B5F39F8E","user_header":"https://static001.geekbang.org/account/avatar/00/15/59/12/49458cb3.jpg","comment_is_top":false,"comment_ctime":1656939336,"is_pvip":false,"replies":[{"id":127512,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656994849,"ip_address":"","comment_id":350481,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"COPY会生成新的layer，对于镜像是永久的。copy是在当前layer执行一个命令，不生成新的layer","like_count":8,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578752,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656994849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3231352,"avatar":"https://static001.geekbang.org/account/avatar/00/31/4e/78/ee4e12cc.jpg","nickname":"Lum","note":"","ucode":"7EF828425E685A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619429,"discussion_content":"这个真不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685091102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1460964,"avatar":"","nickname":"Geek__e106f3b957b0","note":"","ucode":"465B2BE0EA5EAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595640,"discussion_content":"好棒，还能结合之前的课程，我都没想到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670251914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350395,"user_name":"SuperSnow","can_delete":false,"product_type":"c1","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1656892422,"is_pvip":false,"replies":[{"id":127440,"content":"--rm是告诉docker容器运行完毕后直接删除，就是为了省事，不用再手动删除了。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656896168,"ip_address":"","comment_id":350395,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"docker run -d --rm redis\n--rm不是删除命令么？为什么要在这里用呢？","like_count":8,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578546,"discussion_content":"--rm是告诉docker容器运行完毕后直接删除，就是为了省事，不用再手动删除了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656896168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051873,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0c/e1/f663213e.jpg","nickname":"拾掇拾掇","note":"","ucode":"D775F374C2A1D3","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578552,"discussion_content":"第四节还是第三节说过的，你没仔细看哦","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1656898620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350439,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1656915672,"is_pvip":false,"replies":[{"id":127464,"content":"\n1.XXX就是容器id，或者是容器名。\n\n2.Redis镜像里没有安装ip命令，当然就无法使用了。“docker inspect”是docker的功能，与容器和镜像都没有关系。\n\n3.截图里没有，这个IP地址是docker预留的。\n\n4.“docker inspect”后面要接容器id或者名字，“adb”就是当时的容器id\n\n5.是的，我就是图省事。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656919781,"ip_address":"","comment_id":350439,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"请教老师几个问题啊：\nQ1：docker exec XXX ip addr\n容器查询IP的命令中，“XXX”是任意的吗？\nQ2：“Redis 容器里没有 ip 命令”，为什么？\n  如果Redis 容器里不能使用 ip 命令，那么，可以用“docker inspect”来查看其ip地址吗？\nQ3：“宿主机的 IP 地址则是“172.17.0.1””，哪里显示了宿主机的IP地址？图上并没有显示啊。\nQ4：“docker inspect adb”查出的不仅仅是redis和nginx的IP吧，是查出所有容器的IP吗？\n    必须用adb吗？ 用其他命令不行吗？\nQ5： “curl 127.1:8080 -I”，这个命令中“127.1”是“127.0.0.1”的缩写吗？","like_count":7,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578623,"discussion_content":"\n1.XXX就是容器id，或者是容器名。\n\n2.Redis镜像里没有安装ip命令，当然就无法使用了。“docker inspect”是docker的功能，与容器和镜像都没有关系。\n\n3.截图里没有，这个IP地址是docker预留的。\n\n4.“docker inspect”后面要接容器id或者名字，“adb”就是当时的容器id\n\n5.是的，我就是图省事。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656919781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606444,"discussion_content":"exec后面跟着的是容器运行的进程 id号不是镜像id号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677136338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350483,"user_name":"逗逼师父","can_delete":false,"product_type":"c1","uid":1017863,"ip_address":"","ucode":"ECC2D82F83CBE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/07/7804f4cc.jpg","comment_is_top":false,"comment_ctime":1656942820,"is_pvip":false,"replies":[{"id":127513,"content":"awesome","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656994861,"ip_address":"","comment_id":350483,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"1. docker cp是操作宿主和容器之间的文件传输，Dockfile里的COPY命令是在制作镜像时使用的。\n2. host效率高，bridge更加灵活；host在平时开发时比较适合，因为我们的电脑一般端口不容易冲突；bridge的话更适合在测试或者生产环境中去使用，可以灵活配置应用端口。","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578753,"discussion_content":"awesome","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656994862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350521,"user_name":"凉人。","can_delete":false,"product_type":"c1","uid":1659177,"ip_address":"","ucode":"4DB16004A62015","user_header":"https://static001.geekbang.org/account/avatar/00/19/51/29/24739c58.jpg","comment_is_top":false,"comment_ctime":1656986781,"is_pvip":false,"replies":[{"id":127515,"content":"当然有优势，每个容器可以自己用任意端口，不用担心冲突，开发变简单了，维护的成本也可以减少。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656994977,"ip_address":"","comment_id":350521,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"hi，想问个问题，如果我们用网桥模式，任然是外部一个端口映射容器内一个端口，这有什么优势吗","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578755,"discussion_content":"当然有优势，每个容器可以自己用任意端口，不用担心冲突，开发变简单了，维护的成本也可以减少。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656994977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350449,"user_name":"美妙的代码","can_delete":false,"product_type":"c1","uid":1111985,"ip_address":"","ucode":"9DADD72C193296","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/b1/982ea185.jpg","comment_is_top":false,"comment_ctime":1656920404,"is_pvip":true,"replies":[{"id":127484,"content":"默认是bridge模式，可以用ip addr命令，看容器里的网络情况，有veth就是bridge，直接用宿主机网卡就是host。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656922901,"ip_address":"","comment_id":350449,"utype":1}],"discussion_count":2,"race_medal":1,"score":2,"product_id":100114501,"comment_content":"老师，怎么修改容器的网络模式，host&#47;bridge 一般情况下都没有设置它，直接运行容器，怎么知道容器运行在什么模式下？  ","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578649,"discussion_content":"默认是bridge模式，可以用ip addr命令，看容器里的网络情况，有veth就是bridge，直接用宿主机网卡就是host。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656922901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/5066026c.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579961,"discussion_content":"docker run --net=host 或者 --net=bridge\n容器网络模式查看\ndocker inspect xxx --format &#39;{{json .NetworkSettings.Networks}}&#39; | jq","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1657784611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350611,"user_name":"六月","can_delete":false,"product_type":"c1","uid":1800818,"ip_address":"","ucode":"D94CD05F648A7B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/7a/72/a86c521e.jpg","comment_is_top":false,"comment_ctime":1657037277,"is_pvip":false,"replies":[{"id":127530,"content":"好像是不能吧，可以去看一下docker的官网文档。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1657071723,"ip_address":"","comment_id":350611,"utype":1}],"discussion_count":6,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"有一个问题想问一下，docker挂载目录进容器，宿主机的文件会覆盖掉容器的同名目录，但是，有时候想反过来，在挂载的目录里输出容器内原本同名目录下的文件，而不是被宿主机挂载的空目录覆盖掉。这个能实现么","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578863,"discussion_content":"好像是不能吧，可以去看一下docker的官网文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657071723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1800818,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/7a/72/a86c521e.jpg","nickname":"六月","note":"","ucode":"D94CD05F648A7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":578896,"discussion_content":"文档找不到这个资料。\n我就想实现镜像内置一些配置，在实例化容器的时候，也允许用户自定义配置，但是要挂载目录的话，这个就实现不了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657081654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":578863,"ip_address":"","group_id":0},"score":578896,"extra":""}]},{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606445,"discussion_content":"兄弟你自己操作一下不就知道了，-v是把宿主机目录映射给容器内部","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677136404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578893,"discussion_content":"同学，你实操成功了么？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657079399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1800818,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/7a/72/a86c521e.jpg","nickname":"六月","note":"","ucode":"D94CD05F648A7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578895,"discussion_content":"没实操成功，用Docker挺长时间的了，一直没解决这个问题。\n我本意是希望镜像内有默认配置，也能用自定义配置。\n但是，挂载目录就做不到这一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657081586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":578893,"ip_address":"","group_id":0},"score":578895,"extra":""},{"author":{"id":1110096,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/50/c348c2ea.jpg","nickname":"吕伟","note":"","ucode":"A443C94A717AD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1800818,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/7a/72/a86c521e.jpg","nickname":"六月","note":"","ucode":"D94CD05F648A7B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580175,"discussion_content":"你的这种需求可能只好先运行一次将需要往外挂载的目录cp出来到宿主机作一份母版备份，然后再重新-v挂载回去，再自定义修改","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1657955528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":578895,"ip_address":"","group_id":0},"score":580175,"extra":""}]}]},{"had_liked":false,"id":350495,"user_name":"朱雯","can_delete":false,"product_type":"c1","uid":1035744,"ip_address":"","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1656947291,"is_pvip":false,"replies":[{"id":127514,"content":"其实docker的模式我们简单了解一下就好，因为后面主要学的是Kubernetes。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656994902,"ip_address":"","comment_id":350495,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100114501,"comment_content":"问题1: cp命令是容器运行时拷贝进去 有点类似拷贝进入内存 copy是永久拷贝进镜像 等于是放入磁盘\n 问题2:实践中 一直使用bridge模式 为了隔离而花费那么一点效率我觉得完全值得。 \n最后 我一直以为只有bridge模式 当时面试官问我 docker容器的运行模式有哪些 我直接告诉他没什么网络模式 我就这么用的 现在才彻底搞明白😄\n","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578754,"discussion_content":"其实docker的模式我们简单了解一下就好，因为后面主要学的是Kubernetes。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656994902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350485,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1656944158,"is_pvip":false,"replies":[{"id":127495,"content":"哪个环境？我用VMWare是没有问题的。可以一起讨论解决。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656986842,"ip_address":"","comment_id":350485,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"mac 下的 网络 是有问题的，不能和宿主进行通信","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578709,"discussion_content":"哪个环境？我用VMWare是没有问题的。可以一起讨论解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656986842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3178958,"avatar":"https://static001.geekbang.org/account/avatar/00/30/81/ce/12a04184.jpg","nickname":"Code like CXK","note":"","ucode":"737E7E1EB40529","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588155,"discussion_content":"因为 mac 中使用 Docker 本质上还是创建了一个 Linux 虚拟机，所以只能和虚拟机的网卡通信，只有 Linux 下才能使用宿主机的网卡","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1663578135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351180,"user_name":"ゝ骑着小车去兜风。","can_delete":false,"product_type":"c1","uid":2600957,"ip_address":"","ucode":"35F9E5360DF42C","user_header":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","comment_is_top":false,"comment_ctime":1657593971,"is_pvip":false,"replies":[{"id":127747,"content":"是的，容器的IP地址是私有地址，要出去肯定要经过宿主机的网卡，也就是用宿主机的IP地址。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1657603465,"ip_address":"","comment_id":351180,"utype":1}],"discussion_count":5,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"老师你好，请教个问题。bridge模式下的容器ip可以理解成一个虚拟ip吧，这个虚拟ip在容器中可以理解为容器自己的ip，而在宿主机上可以直接与容器ip ping通，它们之家的通信是由虚拟网卡进行通信。如果当前这个容器的程序访问baidu的话，baidu服务端接收到的请求方ip应该还是容器对应的宿主机ip吧？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579661,"discussion_content":"是的，容器的IP地址是私有地址，要出去肯定要经过宿主机的网卡，也就是用宿主机的IP地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657603465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606446,"discussion_content":"好好学习学习网络，容器桥接在物理网卡上边，物理机网卡的上连交换机，交换机会把物理网卡的mac地址记录下来，然后在往上去汇聚层 核心层最后通过出口路由器通过nat转换出去先找dns，dns会把百度离你最近的服务器地址反回来，然后去百度拿数据最后把数据返回给物理网卡，通过桥接进入容器内部","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677136604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2600957,"avatar":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","nickname":"ゝ骑着小车去兜风。","note":"","ucode":"35F9E5360DF42C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608356,"discussion_content":"大佬有推荐的网络书吗，大学所学的计算机网络比较晦涩而且也忘了😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678380197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":606446,"ip_address":"陕西","group_id":0},"score":608356,"extra":""}]},{"author":{"id":2600957,"avatar":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","nickname":"ゝ骑着小车去兜风。","note":"","ucode":"35F9E5360DF42C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579681,"discussion_content":"那如果同一个宿主机内的两个容器之间进行网络通信，请求方的ip是宿主机ip还是容器ip","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657613183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/5066026c.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2600957,"avatar":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","nickname":"ゝ骑着小车去兜风。","note":"","ucode":"35F9E5360DF42C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579957,"discussion_content":"都可以，取决于设置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657784297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":579681,"ip_address":"","group_id":0},"score":579957,"extra":""}]}]},{"had_liked":false,"id":350594,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1657027939,"is_pvip":false,"replies":[{"id":127531,"content":"\n1.挂载目录可以理解成是目录映射，没什么特别的，不要想的太复杂。docker会自动创建目录。\n\n2.vethxxx就是虚拟网卡，在容器里用ip addr可以查看。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1657071843,"ip_address":"","comment_id":350594,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"老师，有几个小问题：\n\nQ1：使用-v挂载目录的时候，宿主机路径和容器内路径有什么讲究么？  我的理解是这两个路径没有的话，系统都会帮我们自动去创建吗？并做对应关系？\n\nQ2: 图中的「vethxxx」代表的是什么呢？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578864,"discussion_content":"\n1.挂载目录可以理解成是目录映射，没什么特别的，不要想的太复杂。docker会自动创建目录。\n\n2.vethxxx就是虚拟网卡，在容器里用ip addr可以查看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657071843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578890,"discussion_content":"谢谢老师回答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657079074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350462,"user_name":"zz","can_delete":false,"product_type":"c1","uid":2928356,"ip_address":"","ucode":"95EE516C265C4E","user_header":"https://static001.geekbang.org/account/avatar/00/2c/ae/e4/bf04215b.jpg","comment_is_top":false,"comment_ctime":1656927268,"is_pvip":false,"replies":[{"id":127488,"content":"great ","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656931522,"ip_address":"","comment_id":350462,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"问题1：\nCOPY命令的路径必须是”构建上下文路径“里的，不能随意指定文件。要从本地向镜像拷贝文件，就必须把这些文件放到一个专门的目录；\ncp命令，可以在宿主机和容器之间拷贝文件；\n问题2：\nhost模式，网络没有与宿主机隔离，优点：效率高，缺点：容器内部使用的端口就是主机的端口，容易造成宿主机的端口冲突；\nbridge模式：容器和足主机都在一耳光私有网段内互通互联，优点：容器端口和主机端口相互独立，易于端口的管理；缺点：bridge模式多了虚拟网桥和网卡，通信效率会低一些。","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578668,"discussion_content":"great ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656931522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350413,"user_name":"出云","can_delete":false,"product_type":"c1","uid":1477757,"ip_address":"","ucode":"5674C995C0E84F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8c/7d/cae6b979.jpg","comment_is_top":false,"comment_ctime":1656904214,"is_pvip":false,"replies":[{"id":127457,"content":"good","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656919432,"ip_address":"","comment_id":350413,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"docker cp 命令 的操作对象是容器， Dockerfile 中 COPY指令的操作对象是容器镜像。","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578616,"discussion_content":"good","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656919432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350408,"user_name":"拾掇拾掇","can_delete":false,"product_type":"c1","uid":1051873,"ip_address":"","ucode":"D775F374C2A1D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/e1/f663213e.jpg","comment_is_top":false,"comment_ctime":1656902275,"is_pvip":false,"replies":[{"id":127465,"content":"good","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656919786,"ip_address":"","comment_id":350408,"utype":1}],"discussion_count":1,"race_medal":1,"score":3,"product_id":100114501,"comment_content":"给运行的容器挂载目录，很复杂；建议大家运行容器前，挂载下目录","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578624,"discussion_content":"good","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656919786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359774,"user_name":"程帝洲","can_delete":false,"product_type":"c1","uid":2947181,"ip_address":"北京","ucode":"3477BAAAEF30A9","user_header":"","comment_is_top":false,"comment_ctime":1665852612,"is_pvip":false,"replies":[{"id":130888,"content":"首先要开发应用的时候定义好端口，然后在Dockerfile里expose暴露端口，最后在运行时映射端口。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1665914603,"ip_address":"北京","comment_id":359774,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"老师，你一般用什么方式追加端口的。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590609,"discussion_content":"首先要开发应用的时候定义好端口，然后在Dockerfile里expose暴露端口，最后在运行时映射端口。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665914603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357478,"user_name":"nc_ops","can_delete":false,"product_type":"c1","uid":3114351,"ip_address":"北京","ucode":"1A13CD76CECFDE","user_header":"https://static001.geekbang.org/account/avatar/00/2f/85/6f/1654f4b9.jpg","comment_is_top":false,"comment_ctime":1663297969,"is_pvip":false,"replies":[{"id":130104,"content":"宿主机会由一个虚拟网卡接入docker的私有网段，然后docker容器都在这个网段里。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1663307839,"ip_address":"北京","comment_id":357478,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"关于bridge模式有点疑问，“宿主机和容器在一个丝网网段内互联互通”，那如果宿主机的私网地址不在docker的默认网段，比如宿主机私网地址是192.168.0.1&#47;24，那bridge模式下创建出的容器的地址是和宿主机在同一网段，还是在docker的默认网段呢？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587824,"discussion_content":"宿主机会由一个虚拟网卡接入docker的私有网段，然后docker容器都在这个网段里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663307839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350953,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1657389425,"is_pvip":false,"replies":[{"id":127675,"content":"amazing！","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1657425871,"ip_address":"","comment_id":350953,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100114501,"comment_content":"思考题\n\n1. 首先是场景不同，docker cp 的是针对已经构建好的容器，而 Dockerfile 中的 COPY 则是用在容器的构建中。其次是对象不同，docker cp 两边的对象分别是宿主机目录以及容器中的目录，而 Dockerfile 中的 COPY 对象其实只有一个，就是容器，或者说是构建容器时的上下文环境。另外，功能也稍有区别，docker cp 如果发现指定的目录不存在就会报错，而 Dockerfile 中的 COPY 则会自动创建\n\n2. host 运用在宿主机和容器的应用少且不会频繁的动态挂载新的应用的场景下，而 bridge 可以更好地将宿主机和容器隔离开来，这样可以不受约束地在不同的容器中运行相同或者不同应用。个人觉得 bridge 模式受众面更广，毕竟创建容器的初衷就是为了隔离宿主机的环境，而网络又是环境中极其重要的一环，所以 bridge 对于容器是非常有必要的，可能这也是为什么 bridge 被设定为默认选项","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579394,"discussion_content":"amazing！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657425871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350405,"user_name":"拾掇拾掇","can_delete":false,"product_type":"c1","uid":1051873,"ip_address":"","ucode":"D775F374C2A1D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/e1/f663213e.jpg","comment_is_top":false,"comment_ctime":1656899480,"is_pvip":false,"replies":[{"id":127462,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1656919546,"ip_address":"","comment_id":350405,"utype":1}],"discussion_count":1,"race_medal":1,"score":3,"product_id":100114501,"comment_content":"1.我觉得两者差不多，都是把本机文件或目录复制到容器内，只不过dockerfile里的copy指令需要&quot;构建上下文&quot;\n2. 1).host：与本机共享网络栈，ip地址都相同，最大的好处就是性能，如果对网络传输效率要求比较高，可以选择host；最大的弊端就是不够灵活，端口过多可能会容易与本机端口冲突\n2).bridge：类似交换机、路由器当网络中转，性能没host好，通信效率也低，但是不容易端口冲突","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578621,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656919546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395701,"user_name":"叶明","can_delete":false,"product_type":"c1","uid":1412429,"ip_address":"江苏","ucode":"D0B4B7660DA766","user_header":"https://static001.geekbang.org/account/avatar/00/15/8d/4d/992070e8.jpg","comment_is_top":false,"comment_ctime":1731743769,"is_pvip":false,"replies":[{"id":143713,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1731898119,"ip_address":"北京","comment_id":395701,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"1、第四节的COPY是在构建镜像时把本地文件拷贝到镜像，与 docker cp 有 2 点区别，一是 COPY 只能拷贝上下文中的文件，而 docker run 没这个限制，二是 COPY 只能将文件从宿主机拷贝到镜像，是单向的，而 docker cp 是双向的，既可以将文件拷贝到容器，也可以将容器中的文件拷贝到宿主机。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654096,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731898119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389835,"user_name":"努力的蜡笔小新","can_delete":false,"product_type":"c1","uid":2625814,"ip_address":"广东","ucode":"3E68F31341CDDF","user_header":"","comment_is_top":false,"comment_ctime":1713602132,"is_pvip":false,"replies":[{"id":141845,"content":"可以试试用docker inspect 容器id","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1713781308,"ip_address":"北京","comment_id":389835,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"[root@docker ~]# docker run -d -p 80:8080 --rm nginx:alpine\n82505b3ced273622d618f88aa798c2d813e35382358365c787db0e9f0a6a0336\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint objective_mcclintock (07bc88d56003eddf0f2b6a15d091c3fdb4edc9622da8552d865d690c19e1bb70):  (iptables failed: iptables --wait -t nat -A DOCKER -p tcp -d 0&#47;0 --dport 80 -j DNAT --to-destination 172.17.0.4:8080 ! -i docker0: iptables: No chain&#47;target&#47;match by that name.\n (exit status 1)).\n有这个报错，为什么呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642733,"discussion_content":"可以试试用docker inspect 容器id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713781308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389132,"user_name":"Geek_8a0a23","can_delete":false,"product_type":"c1","uid":1140565,"ip_address":"上海","ucode":"605C1750C59918","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkfZpMx6JDjRiaa51DWRtncfQOy8Lblia1XkeIsXiccTG1nIKyaSic01H0IXgHM3KPSYJ1x51avblJAg/132","comment_is_top":false,"comment_ctime":1711638143,"is_pvip":false,"replies":[{"id":141598,"content":"就是运行或者停止状态的容器","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1711940354,"ip_address":"上海","comment_id":389132,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"我看到docker官网--rm参数的解释是 Automatically remove the container when it exits, 这里的exits怎么理解？对于一个redis容器，这个exits意味着什么？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640851,"discussion_content":"就是运行或者停止状态的容器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1711940354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380679,"user_name":"Geek_b4e756","can_delete":false,"product_type":"c1","uid":3712873,"ip_address":"浙江","ucode":"9F3D3FD3D523A0","user_header":"","comment_is_top":false,"comment_ctime":1693985033,"is_pvip":false,"replies":[{"id":138622,"content":"这个就是docker的局限了，看后面kubernetes用Service来解决。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1694162189,"ip_address":"上海","comment_id":380679,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"看到这个关于端口的部分，老师现在就产生了一个很大的疑问🤔，比如：微服务集群需要向注册中心注册自己的 ip:port ,如果跑在容器里的服务 都使用默认的端口 与宿主机端口映射，是怎么解决集群内部网络路由问题的啊？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627450,"discussion_content":"这个就是docker的局限了，看后面kubernetes用Service来解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694162189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377642,"user_name":"解忧","can_delete":false,"product_type":"c1","uid":2720795,"ip_address":"广东","ucode":"B9D5E46448A0D4","user_header":"https://static001.geekbang.org/account/avatar/00/29/84/1b/ad327fff.jpg","comment_is_top":false,"comment_ctime":1688951464,"is_pvip":false,"replies":[{"id":137630,"content":"nice","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1688970052,"ip_address":"北京","comment_id":377642,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"docker cp是解决容器与宿主机之间文件互通，COPY是宿主机文件拷贝到镜像","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623042,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688970052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376315,"user_name":"陆锦壮","can_delete":false,"product_type":"c1","uid":3647088,"ip_address":"广东","ucode":"9512FCF2677FF8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1839QGqxicYniaEXMneHTzFuRkgeCQylppmKs6pIwdfTyWZibZhiczIibAbgibz6eBQTJRthEibRcTfCwqbVwHXgbZWeQ/132","comment_is_top":false,"comment_ctime":1686669987,"is_pvip":false,"replies":[{"id":137238,"content":"用docker logs看看日志。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1686713695,"ip_address":"上海","comment_id":376315,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"docker run -d --net=host nginx:alpine 为什么我执行完命令，容器会自动退出（Exited (1)）","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620978,"discussion_content":"用docker logs看看日志。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686713695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376314,"user_name":"陆锦壮","can_delete":false,"product_type":"c1","uid":3647088,"ip_address":"广东","ucode":"9512FCF2677FF8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1839QGqxicYniaEXMneHTzFuRkgeCQylppmKs6pIwdfTyWZibZhiczIibAbgibz6eBQTJRthEibRcTfCwqbVwHXgbZWeQ/132","comment_is_top":false,"comment_ctime":1686669501,"is_pvip":false,"replies":[{"id":137240,"content":"docker inspect，看network。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1686713795,"ip_address":"上海","comment_id":376314,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"如何查看某个容器当前网络模式呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620980,"discussion_content":"docker inspect，看network。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686713795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375958,"user_name":"原则","can_delete":false,"product_type":"c1","uid":3574650,"ip_address":"广东","ucode":"12E98F3728CC53","user_header":"https://static001.geekbang.org/account/avatar/00/36/8b/7a/ec36ff82.jpg","comment_is_top":false,"comment_ctime":1686179703,"is_pvip":false,"replies":[{"id":137174,"content":"这个应该是Docker自己设置的，具体在哪里配置可以查一下它的文档。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1686202747,"ip_address":"北京","comment_id":375958,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"老师好，文中说容器默认的网段都是 B 类的私有地址，但是我这里的容器都是 C 类地址，192.168.x.x 这个是哪里配置的呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620475,"discussion_content":"这个应该是Docker自己设置的，具体在哪里配置可以查一下它的文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686202747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364364,"user_name":"就此丶别过吧","can_delete":false,"product_type":"c1","uid":1452057,"ip_address":"北京","ucode":"7F62A01B6CC8DB","user_header":"https://static001.geekbang.org/account/avatar/00/16/28/19/e45b4bbd.jpg","comment_is_top":false,"comment_ctime":1670901462,"is_pvip":false,"replies":[{"id":132471,"content":"这个还没注意过，试一下应该就可以知道。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1670979948,"ip_address":"北京","comment_id":364364,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"桥接模式 重启 ip会不会变动  ","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596427,"discussion_content":"这个还没注意过，试一下应该就可以知道。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670979948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606448,"discussion_content":"容器的ip地址每次重启会变的，只是时间问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677136688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361604,"user_name":"⛽️🦆","can_delete":false,"product_type":"c1","uid":1674059,"ip_address":"北京","ucode":"7D952CAFDBBD99","user_header":"https://static001.geekbang.org/account/avatar/00/19/8b/4b/9e0d334f.jpg","comment_is_top":false,"comment_ctime":1667694403,"is_pvip":false,"replies":[{"id":131523,"content":"容器内的端口号是被隔离的，所以一样没问题，但外部映射的端口不能一样，否则就冲突了。 ","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1667701427,"ip_address":"北京","comment_id":361604,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100114501,"comment_content":"老师，请教个问题，就是nginx 的端口映射80:80 8080:80 两个容器映射到内部的端口都是80，那么这两个容器端口不会冲突嘛？是因为分配的虚拟ip 不同，端口相同也没有问题？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592774,"discussion_content":"容器内的端口号是被隔离的，所以一样没问题，但外部映射的端口不能一样，否则就冲突了。 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1667701427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355531,"user_name":"黄骏","can_delete":false,"product_type":"c1","uid":1849733,"ip_address":"上海","ucode":"3C41D02F4F712C","user_header":"https://static001.geekbang.org/account/avatar/00/1c/39/85/c6110f83.jpg","comment_is_top":false,"comment_ctime":1661476747,"is_pvip":false,"replies":[{"id":129376,"content":"可以加上-a参数看看。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1661483445,"ip_address":"上海","comment_id":355531,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"运行后docker ps看不到，是不是因为nginx后台执行完成了？\n[root@10-16-43-4 docker]# docker run -d -p 80:80 --rm nginx:alpine\nEmulate Docker CLI using podman. Create &#47;etc&#47;containers&#47;nodocker to quiet msg.\nf5d13836024b4f53bf0ada188bbfedd212381b0cfc2a7e85270a2996d9db4967\n[root@10-16-43-4 docker]# docker ps \nEmulate Docker CLI using podman. Create &#47;etc&#47;containers&#47;nodocker to quiet msg.\nCONTAINER ID  IMAGE       COMMAND     CREATED     STATUS      PORTS       NAMES","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585327,"discussion_content":"可以加上-a参数看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661483445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1849733,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/39/85/c6110f83.jpg","nickname":"黄骏","note":"","ucode":"3C41D02F4F712C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585895,"discussion_content":"谢谢老师，今天跟着07课学习wordpress也没成功。后面使用-it交互模式看了日志，加上--privileged=true就ok了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661875912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354718,"user_name":"邓嘉文","can_delete":false,"product_type":"c1","uid":2332845,"ip_address":"北京","ucode":"FCEDFABFB48055","user_header":"https://static001.geekbang.org/account/avatar/00/23/98/ad/f9d755f2.jpg","comment_is_top":false,"comment_ctime":1660712114,"is_pvip":false,"replies":[{"id":129061,"content":"great","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1660727074,"ip_address":"北京","comment_id":354718,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"作业\n1. docker cp 是运行态的时候, dockerfile 是构建镜像的时候\n2. \nhost 比较方便, 直接映射主机端口, 不用配置中间层\n缺点是容易出现端口冲突, 比如开 2  redis 都是  6379 第二个就起来失败了\n\n bridge 是默认的方式, 不会出现端口冲突, 比如容器里面跑 2 个 redis 都是 6379 都会成功, 需要配置中间层才能和容器外通信, 比如 16379:6379, 26379:6379","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584303,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660727074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352782,"user_name":"郑小鹿","can_delete":false,"product_type":"c1","uid":1186808,"ip_address":"","ucode":"E8AF63B4CFCD6E","user_header":"https://static001.geekbang.org/account/avatar/00/12/1b/f8/01e7fc0e.jpg","comment_is_top":false,"comment_ctime":1658922974,"is_pvip":false,"replies":[{"id":128288,"content":"awesome","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658962159,"ip_address":"","comment_id":352782,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"问题回答：\n1、你能说出今天学的 docker cp 命令和第 4 讲 Dockerfile 里的 COPY 指令有什么区别吗？\ndocker cp 这个命令没有copy路径上下文的约束，可以copy整个OS下的文件，但是对于一些系统目录也是不支持copy的\nDockerfile中的COPY命令只对其文件中指定的上下文生效，如果指定了WORKDIR，则COPY命令中的文件只能是相对于WORKDIR的路径。通过COPY命令从宿主机上copy的内容会永久存在于容器镜像内。\n2、你觉得 host 模式和 bridge 模式各有什么优缺点，在什么场景下应用最合适？\nhost模式通信性能好，但是网络隔离性差，适合网络节点数少的情况\nbridge模式通信性能有损耗，但是网络配置更灵活，适合网络节点数多的情况\n\n\n课程总结：\n本文主要讲了在存储和网络两个方面容器和外界是如何联系的\n1、存储\ndocker cp 可以copy宿主机&#47;容器内文件到对方目录下，这种方式无法实时共享。\n这个命令指定的源文件和目的文件是两份文件吗？空间占用更多\n\ndocker run -v 可以实时共享文件，容器内和宿主机看到的是一份文件\n\n2、网络\n网络互通有三种模式\n1）null，没有设置网络，支持自定义网络插件\n2）host，使用宿主机网络，没有任何中间层，通信效率高，但是隔离性差，宿主机服务和容器内服务容易引发端口冲突\n3）bridge，桥接模式，也是docker的默认网络模式。通过软件虚拟出网桥和网卡，使得宿主机和容器之间能够正常通信\n","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581734,"discussion_content":"awesome","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658962159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352268,"user_name":"YueShi","can_delete":false,"product_type":"c1","uid":1625530,"ip_address":"","ucode":"8F7AFAE4641A7D","user_header":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","comment_is_top":false,"comment_ctime":1658489368,"is_pvip":true,"replies":[{"id":128151,"content":"\n1.-v可以用相对路径，比如“.&#47;”就是当前目录\n\n2.是的，构建的镜像肯定是只读层。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658490231,"ip_address":"","comment_id":352268,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"1. -v 挂载需要绝对路径，不支持相对路径（为了和数据卷命名做区别）\n2. docker cp是不是把数据拷贝到分层架构上的最上面的读写层了，哪怕是加上 ：ro 也是在读写层，而构建时的COPY是加载到只读层，不知道这样理解对吗？\n\n","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581095,"discussion_content":"\n1.-v可以用相对路径，比如“./”就是当前目录\n\n2.是的，构建的镜像肯定是只读层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658490231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352266,"user_name":"YueShi","can_delete":false,"product_type":"c1","uid":1625530,"ip_address":"","ucode":"8F7AFAE4641A7D","user_header":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","comment_is_top":false,"comment_ctime":1658488290,"is_pvip":true,"replies":[{"id":128150,"content":"跟拷贝的位置有关吧，如果是tmp目录就是rw了。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658490177,"ip_address":"","comment_id":352266,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"-rw-r--r-- 1  501 dialout     0 Jul 22 09:27 default.conf\n\n\ncp进去的默认权限 和用户，这个老师能带一嘴吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581094,"discussion_content":"跟拷贝的位置有关吧，如果是tmp目录就是rw了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658490177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352147,"user_name":"baalchina","can_delete":false,"product_type":"c1","uid":1026009,"ip_address":"","ucode":"19D147084567F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/d9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1658407125,"is_pvip":false,"replies":[{"id":128101,"content":"可以这么做","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658411599,"ip_address":"","comment_id":352147,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"请教，假设，为了负载均衡、冗余的目的，我在宿主机上建立了两个docker nginx，这两个网站显然要保证静态文件一致，那么建议的方案是将这些文件放在宿主机上，并且分别使用-v挂载给这两个nginx容器吗？（暂不考虑宿主机故障的风险）","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580942,"discussion_content":"可以这么做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658411599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069269,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/d5/73334a95.jpg","nickname":"doos","note":"","ucode":"7C9AF67F90E65C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606449,"discussion_content":"你可以把文件放在宿主机上边然后映射给容器内部，这样方便后续修改配置文件，放在内部，你需要对宿主机挂载的目录做可持久化存储","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677136810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351579,"user_name":"Matthew","can_delete":false,"product_type":"c1","uid":2843865,"ip_address":"","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1657955165,"is_pvip":false,"replies":[{"id":127871,"content":"意思是当前目录，这是shell的特殊语法","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1658026191,"ip_address":"","comment_id":351579,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"docker run -it --rm -v `pwd`:&#47;tmp python:alpine sh\n\n老师，`pwd`:&#47;tmp 这部分没看懂，`pwd` 是指宿主机的哪个目录？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580230,"discussion_content":"意思是当前目录，这是shell的特殊语法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658026191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351263,"user_name":"九暮","can_delete":false,"product_type":"c1","uid":3034677,"ip_address":"","ucode":"85DEB728BF6097","user_header":"https://static001.geekbang.org/account/avatar/00/2e/4e/35/d5d1aec8.jpg","comment_is_top":false,"comment_ctime":1657641609,"is_pvip":false,"replies":[{"id":127755,"content":"用docker ps看看容器的端口映射，再仔细检查一下启动命令，应该是哪一步的操作弄错了，可以再看一下后面的视频演示。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1657666475,"ip_address":"","comment_id":351263,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"hi，老师，在curl 127.1:80 -I这个命令的地方报错，出现curl: (56) Recv failure: 连接被对方重设这个错误\n我试着用0.0.0.0:80也会报这个错误\n这是什么原因呢？\n还有再用docker inspect xxx | grep IPAddress这个命令后，返回来的是空的，没有任何ip相关的信息\n但是通过docker exec xxx ip addr可以得到信息\n我在怀疑是我的网络配置有问题吗？\n","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579745,"discussion_content":"用docker ps看看容器的端口映射，再仔细检查一下启动命令，应该是哪一步的操作弄错了，可以再看一下后面的视频演示。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657666475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350894,"user_name":"墨龙","can_delete":false,"product_type":"c1","uid":1309681,"ip_address":"","ucode":"8C63C5D18E0877","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKvNozkiaiao1IyuCzEIMPiaNicB1hgEcad3X4DS6IAq5lnOiagf2690Q7Q1RmyBN89gNqYHeHHtY2RcqQ/132","comment_is_top":false,"comment_ctime":1657293038,"is_pvip":false,"replies":[{"id":127659,"content":"可以用logs命令看一下容器的日志，或者exec进容器里看看。","user_name":"作者回复","user_name_real":"编辑","uid":1181974,"ctime":1657353587,"ip_address":"","comment_id":350894,"utype":1}],"discussion_count":4,"race_medal":0,"score":5,"product_id":100114501,"comment_content":"docker run -d -p 80:80 --rm nginx:alpine 运行这个容器后，\n无论curl 127.1:80 -I还是curl 127.0.0.1:80 -I都没有响应，请问这会是什么原因呢？\n谢谢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579324,"discussion_content":"可以用logs命令看一下容器的日志，或者exec进容器里看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657353588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1521020,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epNYrp8dicGhQLchNkEQkp5x3BA4axJpKnqUtxkNTyjuzB9eEukQkJH0MUicPHCmQpWPUGlywG1TZPw/132","nickname":"Geek_386ea8","note":"","ucode":"5AEB0768292B10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597298,"discussion_content":"我也碰到同样问题，重启宿主机即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1671631577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3231579,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/tjZDHOybO07lltibjmDiaQKdpE1C3ul9c9wmUWwnVohS5fSEOPcfK2d9ZvKEHu6ibMLXYNUSrA23w08Ty5MFYMfzA/132","nickname":"Geek_ec6229","note":"","ucode":"24DF2FDA6BCE13","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596402,"discussion_content":"我也有同样的问题欸， exec进容器 curl 127.1:80正常，在宿主机就不行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670941649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/5066026c.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579954,"discussion_content":"先 docker ps 看看容器是否正常运行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657784150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}