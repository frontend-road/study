{"id":188612,"title":"05 | 数组：一秒钟，定义 1000 个变量","content":"<p>你好，我是胡光，咱们又见面了。通过前几节的学习，你已经了解了基本的程序结构。我们来简单总结一下，其中第一种结构就是顺序结构，它指的是我们所写的按照顺序执行的代码，执行完上一行，再执行下一行这种的。第二种就是分支结构，主要是用 if 条件分支语句来实现，主要特征是根据表达式的真假，选择性地执行后续代码。最后一种就是循环结构，用来重复执行某段代码的结构。</p><p>如果把程序比喻成工厂的话，现在你的工厂中已经有了各种各样的流水线，但这个工厂只是能生产产品还不行，还需要有存储的空间。今天，我们来学习的就是如何创建和使用工厂中的库房，本节之后，你的程序工厂就可以开工了！</p><h2>今日任务</h2><p>先来看看今天这10分钟的小任务吧。今天的任务是这样的，程序中读入一个整数 n，假设 n 不会大于 1000，请输出 1 到 n 的每一个数字二进制表示中的 1 的个数。</p><p>我举个例子哈，当 n 等于 7 的时候，我们把 1 到 7 的每个数字的二进制表示罗列出来，会得到下表所示内容：</p><p><img src=\"https://static001.geekbang.org/resource/image/da/4a/da9aa66b4391bcf6078e6d521d2a134a.jpg?wh=4136*1015\" alt=\"\" title=\"表1：1到7的二进制表示\"></p><p>根据表1中的内容，如果你的程序编写成功的话，程序应该分别输出1、1、2、1、2、2、3，这些输出内容分别代表每个数字二进制表示中 1 的数量。</p><p>对于这个任务，你想写出来一个可行的程序不难，例如：我们可以循环 n 次，每次计算一个数字二进制中 1 的数量。怎么计算一个数字二进制中 1 的数量呢？这个问题，你可能想采用如下程序来进行实现：</p><!-- [[[read_end]]] --><pre><code>int cnt = 0;\nwhile (n != 0) {\n    if (n % 2 == 1) cnt += 1; \n    n /= 2; \n}\n</code></pre><p>我解释下上面这段程序，它每次都会判断 n 的二进制末尾是不是 1，如果是 1，计数量 cnt 就加 1（+=表达式，我这里就不解释了，如果你不理解，可以自己查下），然后将 n 除以2，相当于去掉 n 的二进制表示的最后一位，这样就可以用 O(logn) 的时间复杂度（关于这个知识点，你也可以自行查阅相关资料，其实很简单）计算一个数字 n 二进制中 1 的数量。</p><p>以二进制数字110为例，末尾是0，计数量 cnt 不进入计算；然后使用二进制除法，让110除以2，即去掉最后一位的0，变成了11，此时末尾是1，计数量cnt 就加1；11再除以2，变成了1，此时末尾是1，计数量cnt 再次加1 。最后的n等于1，再除以2，n变成了0，循环结束。</p><p>可以看到，当我们输入数字6，二进制的表示是110时，整个程序中计数量cnt 共计算了2次，所以最后的输出结果是2 。</p><p>关于时间复杂度这个概念，后续我们还会进一步介绍，现在你可以简单地理解成为是程序运行的次数，例如 n=8 的时候，上面循环执行 3 次，也就是 log 以 2 为底 8 的对数的值。</p><p>如果你的方法像上面这么做的话，确实是一种可行的方法，可是效率不是很高。今天这个任务的要求是，对每一个数字，请用 O(1) 的时间复杂度计算得到其二进制表示中 1 的个数。O(1) 也就是 1 次，或者是与问题规模 n 无关的有限次，例如：2次、3次均可。下面就让我们来看看如何完成这个任务吧。</p><h2>必知必会，查缺补漏</h2><h4>1.数组：规模化存储工具</h4><p>我要给你介绍的第一个帮助我们完成今天任务的工具是：数组。所谓数组，你可以把这两个字对调过来理解，即组数，一组数据。</p><p>以往我们定义的变量，都是单一变量，例如：一个整型变量，一个浮点型变量，等等。可当我们要同时记录 n 个整型数据的时候，通过以往的知识，你能实现这个需求么？注意，这个里面的  n 是通过读入的一个变量，通常情况会有一个最大范围，例如：n 不会超过1000。你总不能定义1000个整型变量吧？</p><p>面对上面这种需求，数组就派上了用场，利用数组，我们可以定义存放一组数据的存储区，用法如下代码所示：</p><pre><code>int arr[1000];\n</code></pre><p>通过上述代码，我们很轻松的就定义了存储 1000 个整型变量的存储区 arr。这里相当于向计算机申请了可以存储1000个整型变量的存储空间。第一个存储整型数据的内存空间，也就是第一个整型变量，就是 arr[0]，第二个整型变量是 arr[1]，以此类推。arr 后面方括号里面的东西，我们称之为“数组下标”，数组下标从 0 开始，也就是说，代表 1000 个整型变量的数组，下标范围应该是 0 到 999，具体可以参考图1。<br>\n<img src=\"https://static001.geekbang.org/resource/image/dd/a3/dd48cf83f2e2a3510c50a72b9368bca3.jpg?wh=3525*1256\" alt=\"\" title=\"图1：数组示意图\"></p><p>有了数组以后，你就可以轻松的完成读入 n 个整型数据的任务了，参考代码如下：</p><pre><code>int n, arr[1000];\nscanf(&quot;%d&quot;, &amp;n);\nfor (int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, &amp;arr[i]);\n</code></pre><p>代码中，第一行定义了一个整型变量 n 和一个最多存储 1000 个整型元素的数组空间。第二行接下来读入 n 的值，第三行利用循环结构循环 n 次，循环变量 i 取值从 0 到 n-1，循环每次读入一个整型数据存放在 arr[i] 里面。</p><p>这样一段程序执行完后，n 个整型数据就被依次的存放在了 arr[0] 到 arr[n-1]中。当你想在程序中使用第三个整型数据的时候，只需要访问 arr[2] 即可。当然，上述循环变量的取值范围也可以调整到 1 到 n，这样做的话，相当于我们将 n 个整型数据存放在了 arr[1]到 arr[n] 处。</p><h4>2.字节与地址：数据的住所和门牌号</h4><p>在之前第2篇的学习中，不知道你还记不记得一个叫做 char 的数据类型，我们称其为字符型。当时在学习的时候，我们说，字符型数据形如：“a”“b”“c”“+”“-” 等被引号包裹着的内容。这次我将带你从 char 类型开始，深入理解两个概念：字节与地址。</p><p>什么是字节呢？它是计算机中最基本的存储单位，就像一个一个不可分割的小格子一样，存在于我们计算机的内存中。例如，我们通常所说的，一个32位整型元素占用4个字节，那就意味着这个元素需要占用4个小格子，不会存在某个元素占用 0.5 个小格子的情况。这就是所谓的不可分割。<br>\n<img src=\"https://static001.geekbang.org/resource/image/d7/9a/d7a4f1a553a70e730749f4af790e559a.jpg?wh=3412*1530\" alt=\"\" title=\"图2：字节示意图\"></p><p>任何类型的元素，整型也好，浮点型也罢，只要是想存储在计算机中，就一定要放在这些小格子里面，唯一的区别，就是每一种类型的元素占用的格子数量不一样。例如：32位整型占4个格子，double 双精度浮点型占 8 个格子。在这里，需要注意的是，每一种基础类型，在内存中存储时，一定是占用若干个连续的存储单元。</p><p>那么如何查看某个类型的元素究竟占用多大的存储空间呢？可以使用 sizeof 这个运算符，如下：</p><pre><code>int a;\nsizeof(a); // 计算 a 变量占用字节数量\nsizeof(int); // 计算一个整型元素占用字节数量\n</code></pre><p>正如你所看到的，sizeof 的使用，就像函数方法一样，我们想要查看什么元素或者类型所占用字节数量，就把什么传入 sizeof 即可，你可以使用 printf 语句输出 sizeof 表达式的值以查看结果。</p><p>了解了什么是字节以后，下面我们就要说一个更小的单位了，叫做比特，英文是 bit。这个是计算机中表示数据的最小单位。对比<strong>字节是存储数据的最基本单位，比特是表示信息的最基本单位。</strong></p><p>那什么又是比特呢？在其他参考资料上你可能知道，计算机里面的所有数据，均是用二进制来表示以及存储的，这里需要注意，是所有的。那么一个比特，就是一个二进制位，要么是 0，要么是 1。8比特位是 1 个字节，那么我们之前所说的32位整型，也就是占32个比特位的整数类型，换算一下，正好是占 4 个字节。</p><p>说完了字节的概念后，我们再来说说地址。</p><p>现在我们的一些小区里面都有一个集中式的邮箱，邮递员来投递信件的时候，只需要把信件放到相应的邮箱里面即可。而作为住户，会有一把能打开自己家邮箱的钥匙，找到自己的邮箱，取出信件即可。</p><p>如果把这个场景放在计算机中，住户其实就是 CPU，而邮箱就是内存。你会发现，住户之所以可以准确找到自己的邮箱，是因为每个邮箱上面有一个独立编号。那么 CPU 能够准确找到程序所需要数据的本质原因，也是因为每一个字节都有一个独立的编号，我们管这个编号，叫做：内存地址！下面我给你放了一张示意图：</p><p><img src=\"https://static001.geekbang.org/resource/image/ef/64/ef6ef4330f86c45d5c18202d06edf364.jpg?wh=4143*1022\" alt=\"\" title=\"图3：内存地址示意图\"></p><p>上图中，下面空白的格子就是我们所谓的字节，具体的数据信息，就是存储在这些格子里面的，格子上面的是十六进制数字，就是我们所谓的地址，你会看到，在内存中，字节的地址是连续的。</p><p>最后我们来总结一下，比特是数据表示的最小单位，就是我们通常所说的一个二进制位。字节是数据存储的最基本单位，存储在计算机中的数据，一定是占用若干个字节的存储空间。最后就是内存地址，是每一个字节的唯一标记。</p><h4>3.直观感受：内存地址</h4><p>你可能会觉得内存地址是一个很抽象的概念，不具体。其实我们可以像输出整型值一样，把内存地址也输出出来。</p><p>你还记得格式占位符的作用吧？不同数据类型，用不同的格式占位符输出，例如：%d 对应了十进制整型的输出。内存地址则采用 %p 这个格式占位符进行输出，下面给你一个演示程序，你可以在你的环境中运行一下：</p><pre><code>#include &lt;stdio.h&gt;\nint main() {\n    int a;\n    printf(&quot;%p\\n&quot;, &amp;a); // 输出 a 变量的地址\n    return 0;\n}\n</code></pre><p>代码中，首先定义一个了整型变量 a，然后使用 %p 占位符输出 a 变量的地址。单一的 &amp; 运算符放到变量前面，取到的就是这个变量的<strong>首地址</strong>。</p><p>为什么说是首地址呢？上一部分说了，一个32位整型变量会占用4个字节的存储空间，每一个字节都会有一个地址，那么你会发现，上面程序中的 a 变量实际上有 4 个地址，这 4 个地址究竟哪一个作为 a 变量的地址呢？答案是最靠前的那个地址，作为 a 变量的地址，也就是这个变量的首地址。<br>\n<img src=\"https://static001.geekbang.org/resource/image/83/10/8367f7c6d3405494a19b5c4289e4f710.jpg?wh=3914*1229\" alt=\"\" title=\"图4：变量的首地址\"></p><p>看到了变量的地址信息以后，下面就让我们来看一看与数组相关的地址信息，看下面这段程序：</p><pre><code>#include &lt;stdio.h&gt;\nint main() {\n    int arr[100];\n    printf(&quot;&amp;arr[0] = %p\\n&quot;, &amp;arr[0]); // 输出 arr[0] 的地址\n    printf(&quot;&amp;arr[1] = %p\\n&quot;, &amp;arr[1]); // 输出 arr[1] 的地址\n    printf(&quot;    arr = %p\\n&quot;, arr);     // 输出 arr 的信息\n    return 0;\n}\n</code></pre><p>上述代码，会输出三行信息，针对这三行信息，每个人的程序运行出来的结果很可能是不一样的，这一点没关系，可你一定会发现如下规律：第一个地址与第二个地址之间差4字节，而输出的第三个地址与第一个地址完全相同。</p><p>下面我就来解释一下这两个现象。</p><ul>\n<li>\n<p>第一，数组的每个元素之间在内存中是连续存储的，也就是对上面程序中的数组而言，第一个元素占头4个字节，第二个元素紧接着占接下来的4个字节的存储空间。再结合上面说到的变量首地址的概念，你就很容易理解为什么头两个地址之间差4了。</p>\n</li>\n<li>\n<p>第二，在程序中，当我们单独使用数组名字的时候，实际上就代表了整个数组的首地址，整个数组（arr[100]）的首地址就是数组中第一个元素的首地址，也就是 arr[0] 的地址。</p>\n</li>\n</ul><p>在这里，我们来进一步看一下这个等价关系，arr 等价于 &amp;arr[0]（取地址 arr[0]），实际上我们的地址也是支持+/-法的，也就是 arr + 0 等价于 arr[0] 的地址，那么 arr[1] 的地址等于 arr 加几呢？</p><p>你可能会认为是加 4，这种直觉还是值得鼓励的，可结果不正确，这个和地址的类型有关系，后面讲到指针的时候，我再详细的讲给你听。不过，事实上，arr + 1 就等价于 arr[1] 的地址，更一般的 arr + i 就等价于 arr[i] 的地址。关于地址上的+/-运算的规则，我在后续的文章中会详细进行讲解。</p><h4>4.再看 scanf 函数：其实我是一个“邮递员”</h4><p>有了上面对于地址的基本认识以后，我们再来回顾一下 scanf 函数的用法，你可能会有新的收获，看如下读入程序：</p><pre><code>#include &lt;stdio.h&gt;\nint main() {\n    int a;\n    scanf(&quot;%d&quot;, &amp;a);\n    return 0;\n}\n</code></pre><p>上面这个程序，就是一个最简单的读入程序，首先定义一个整型变量 a，然后读入一个整数，存储到 a 中。</p><p>学习完了地址以后，你就会意识到，我们传给 scanf 函数的，不是 a 变量，准确来说，而是 a 变量的地址。</p><p>为什么要把 a 变量的地址传递给 scanf 函数呢？这个很好理解，你就把 scanf 函数当成邮递员，邮递员得到了信件以后，需要知道这个数据放到哪个邮箱里面啊，而你需要做的就是把邮箱地址告诉这个邮递员即可，就是变量 a 的地址，这样 scanf 函数就能把获得的数据，准确的放到 a 变量所对应的内存单元中了。</p><h2>一起动手，搞事情</h2><h4>思考题：去掉倍数</h4><blockquote>\n<p>设计一个去掉倍数的程序，要求如下：<br>\n首先读入两个数字 n 和 m，n 的大小不会超过10，m 的大小都不会超过 10000；<br>\n接下来读入 n 个各不相同的正整数，输出 1 到 m 中，有哪些数字无法被这 n 个正整数中任意的一个整除。</p>\n</blockquote><p>下面给出一组输入和输出的样例，以供你来参考。</p><p>输入如下：</p><pre><code>3 12\n4 5 6\n</code></pre><p>输出如下：</p><pre><code>1 2 3 7 9 11\n</code></pre><h2>用数组，做递推</h2><p>有了对数组的基本认识之后，就让我们来看一下今天的任务应该如何求解。请你观察下面的位运算性质：</p><pre><code>y = x &amp; (x - 1)\n</code></pre><p>我们看到，我们将 x 与 x - 1 这两个数字做<strong>按位与</strong>（这个名词的含义很简单，你随便查查资料就知道了），按位与以后的结果再赋值给 y 变量，下面我们着重来讨论 y 变量与 x 变量之间的关系。</p><p>既然是位运算，我们就需要从二进制的角度来思考这个问题。首先思考 x - 1 的二进制表示与 x 二进制表示之间的关系，当 x 二进制表示的最后一位是 1 的时候，x - 1 就相当于将 x 最后的一位 1 变成了0，如果 x 二进制表示最后一位是 0 呢，计算 x - 1 的时候，就会试图向前借位，应该是找到最近的一位不为0的位置，将这一位变成 0，原先后面的 0 都变成 1，如下图所示：<br>\n<img src=\"https://static001.geekbang.org/resource/image/f2/96/f253de915071b2dcf400b5c2bb87d096.jpg?wh=2649*1171\" alt=\"\" title=\"图5：x 与 x-1 的二进制表示\"></p><p>图中打 * 的部分，代表了 x 与 x - 1 二进制表示中完全相同的部分。根据按位与操作的规则，相应位置都为1，结果位就为 1，那么 x 与上 x - 1 实际效果等效于去掉 x 二进制表示中的最后一位1，从而我们发现原来 y 变量与 x 变量在二进制表示中，只差一个 1。</p><p>回到原任务，如果我们用一个数组 f 记录相应数字二进制表示中 1 的数量，那么 f[i] 就代表 i 这个数字二进制表示中 1 的数量，从而我们可以推导得到 f[i] = f[i &amp; (i - 1)] + 1，也就是说 i 比 i &amp; (i - 1) 这个数字的二进制表示中的 1 的数量要多一个，这样我们通过一步计算就得到 f[i] 的结果。</p><p>下面给你准备了一份参考程序：</p><pre><code>#include &lt;stdio.h&gt;\nint f[1001];\nint main() {\n    int n;\n    scanf(&quot;%d&quot;, &amp;n);\n    f[0] = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        f[i] = f[i &amp; (i - 1)] + 1;\n    }\n    for (int i = 1; i &lt;= n; i++) {\n        if (i != 1) printf(&quot; &quot;);\n        printf(&quot;%d&quot;, f[i]);\n    }\n    printf(&quot;\\n&quot;);\n    return 0;\n}\n</code></pre><p>这个程序中，首先先读入一个整数 n，代表要求解的范围，然后循环 n 次，每一次通过递推公式 f[i] = f[i &amp; (i - 1)] + 1 计算得到 f[i] 的值，最后输出 1 到 n 中每个数字二进制表示中 1 的个数。</p><h2>课程小结</h2><p>通过今天这个任务，你会发现，有了数组以后，我们可以记录一些计算结果，这些计算结果可能对后续的计算有帮助，从而提高程序的执行效率。关于数组的使用，会成为你日后学习中的一个重点，今天就当先热个身吧。下面呢，我来总结一下今天课程中需要你记住的重点：</p><ol>\n<li>使用数组，可以很方便的定义出一组变量存储空间，数组下标从 0 开始。</li>\n<li>数据的最基本存储单位是字节，每一个字节都有一个独一无二的地址。</li>\n<li>一个变量占用若干个字节，第一个字节的地址，是这个变量的首地址，称为：变量地址。</li>\n</ol><p>记住今天这些，对于日后学习指针相关知识，会有很大的帮助。好了，今天就到这里了，我是胡光，我们下期见。</p>","comments":[{"had_liked":false,"id":215809,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1589107394,"is_pvip":true,"replies":[{"id":"80145","content":"整个思考过程很完整，很棒！尤其代码中的 j+=sum 很得循环精髓！d(^_^o)","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1589321542,"ip_address":"","comment_id":215809,"utype":1}],"discussion_count":2,"race_medal":5,"score":"14474009282","product_id":100043901,"comment_content":"茶艺师学编程：<br><br>思考题：去掉倍数设计一个去掉倍数的程序，<br>要求如下：<br>首先读入两个数字 n 和 m，n 的大小不会超过 10，m 的大小都不会超过 10000；<br>接下来读入 n 个各不相同的正整数，输出 1 到 m 中，有哪些数字无法被这 n 个正整数中任意的一个整除。<br><br>我卡在这道题快10多天了，踩了不少的坑。<br><br>1、没有想好核心算法<br>一看到“整除”，我反射性想到“%（取模，是否等于0）”。这想法在处理单个被除数还行，但是这里要处理复数的被除数，如果接着用“&amp;&amp;”，程序不会算出结果。<br><br>2、没有理解透彻“数组”<br>·我曾经试着给第二次输入的数用数组，问题是这里是在循环内这样做是没有意义，就算是输入成数组了，但我也不能拿一堆数字直接除以该数组获得结果<br>·我也试过给要输出的结果存进数组，幻想过能不能在数组里直接计算（剔除重复的、其他的可被整除数）<br><br>3、同样的，我也没有真的理解“循环”<br>看似要用“数组”，其实循环就能直接解决了·······<br><br>交作业：<br><br># include &lt;stdio.h&gt;<br><br>int sum[20005] = {0} ; &#47;&#47;创建用来存放计算结果的数组sum<br><br>int main(){<br>    int n, m, num, i, j; &#47;&#47;创建变量n,m（题目的第一次输入）num（第二次输入）,i,j(循环用的变量)<br>    printf(&quot;请输入要计算的两个数组：\\n（注意：第一个数字请不要超过10，第二个请不要超过10000）\\n&quot;);<br>    scanf( &quot;%d%d&quot; , &amp;n, &amp;m); &#47;&#47;第一次输入<br>    if( n &lt;= 10 &amp;&amp; m &lt;= 10000){<br>    <br>        for( i = 0 ; i &lt; n ; i++ ){<br>            scanf( &quot;%d&quot; , &amp;num ); &#47;&#47;第二次输入，按照n的数量输入n个数字<br>            for ( j = num ; j &lt;= m ; j += num ){ &#47;&#47;核心part1：在数组sum上标记输入的整数的倍数<br>                sum[j] = 1; &#47;&#47;方法为只要是在数组sum上第（输入的整数的倍数）位，对应的值为1<br>            }<br>        }<br>        for( i = 1 ; i &lt;= m ; i++ ){ &#47;&#47;核心part2：再开循环，在数组sum上一个个检查，看哪个位置的值为1<br>            if( sum[i] == 1 )continue; &#47;&#47;下面是循环输出数字，continue是“跳出循环”，对应的条件就是“在XX位置上的值为1”<br>            printf( &quot;%d\\t&quot; , i ); &#47;&#47;换句话说，就是在数组sum上的值为1的对应标号i就不与输出<br>        <br>        }<br>    }<br>    else printf(&quot;同学，超纲啦！&quot;);<br>    return 0 ;<br>}<br><br>&#47;&#47;其结果，就是通过循环（嵌套循环）、加法、数组标记、筛选（选择不输出）就到达了目的。","like_count":3,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494566,"discussion_content":"整个思考过程很完整，很棒！尤其代码中的 j+=sum 很得循环精髓！d(^_^o)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589321542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2011169,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/b0/21/a51fccb1.jpg","nickname":"自由之力","note":"","ucode":"E0F35240299700","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361406,"discussion_content":"看了半天，看不出这怎么判断是否整除的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616664186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172141,"user_name":"学写代码的猪","can_delete":false,"product_type":"c1","uid":1064616,"ip_address":"","ucode":"4EBA2329450B53","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/a8/66088c47.jpg","comment_is_top":false,"comment_ctime":1579095453,"is_pvip":true,"replies":[{"id":"66880","content":"d(^_^o)所以给大家推荐了三本书。资料比较多的内容，专栏里面就很少会讲，专栏里主要讲阻碍大家学习编程的部分。否则，32讲，可能才讲完语言。","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1579186009,"ip_address":"","comment_id":172141,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10169030045","product_id":100043901,"comment_content":"感觉老师课程的步子跨度还是比较大的，真的小白如果不花几倍的时间吸收消化，还真容易扯着蛋的，哈哈。","like_count":2,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481636,"discussion_content":"d(^_^o)所以给大家推荐了三本书。资料比较多的内容，专栏里面就很少会讲，专栏里主要讲阻碍大家学习编程的部分。否则，32讲，可能才讲完语言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579186009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2125055,"avatar":"","nickname":"王大菊学编程","note":"","ucode":"150CE9248CDDD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311703,"discussion_content":"讲的不够透，消化难。这个倍数题目本身就理解了好长时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602467485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1914961,"avatar":"","nickname":"yeslee","note":"","ucode":"075C083438C0E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265876,"discussion_content":"同感⊙﹏⊙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589449432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172081,"user_name":"Jinlee","can_delete":false,"product_type":"c1","uid":1644723,"ip_address":"","ucode":"8EDA9B0C5184EA","user_header":"https://static001.geekbang.org/account/avatar/00/19/18/b3/848ffa10.jpg","comment_is_top":false,"comment_ctime":1579083222,"is_pvip":false,"replies":[{"id":"66882","content":"啊，sorry，笔误，多写上去的！赞！👍","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1579186093,"ip_address":"","comment_id":172081,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10169017814","product_id":100043901,"comment_content":"老师，您给的示例代码中，10能被5整除，为啥也输出了呢","like_count":2,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481612,"discussion_content":"啊，sorry，笔误，多写上去的！赞！👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579186093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136841,"discussion_content":"感觉是老师写错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579167858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253408,"user_name":"乐毅","can_delete":false,"product_type":"c1","uid":1348052,"ip_address":"","ucode":"6361ADC9B0E8D5","user_header":"https://static001.geekbang.org/account/avatar/00/14/91/d4/3785c799.jpg","comment_is_top":false,"comment_ctime":1602729943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5897697239","product_id":100043901,"comment_content":"老师讲的很好，只是有个疑问，x &amp; (x - 1)这样的表达式很简单，老师是如何知道使用这种表达式的，您的思考过程是怎样的？","like_count":1},{"had_liked":false,"id":212713,"user_name":"Noah●^●","can_delete":false,"product_type":"c1","uid":1519230,"ip_address":"","ucode":"52EEB72E80BAF8","user_header":"https://static001.geekbang.org/account/avatar/00/17/2e/7e/acc47ee1.jpg","comment_is_top":false,"comment_ctime":1588181609,"is_pvip":false,"replies":[{"id":"79296","content":"不错！基本实现了功能！d(^_^o)","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1588659215,"ip_address":"","comment_id":212713,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5883148905","product_id":100043901,"comment_content":"&#47;&#47; 求二进制中 1 的个数<br>#include &lt;iostream&gt;<br><br>using namespace std;<br><br>int n;<br>int cnt;<br><br>int main(void)<br>{<br><br>    scanf(&quot;%d&quot;, &amp;n);<br>    for (int i = 1; i &lt;= n; i++)<br>    {<br>        int t = i;<br>        while (t)<br>        {<br><br>            if (t &amp; 1)<br>                cnt++;<br>            t &gt;&gt;= 1;<br>        }<br>        printf(&quot;%d &quot;, cnt);<br>        cnt = 0;<br>    }<br>    return 0;<br>}<br>","like_count":1,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493591,"discussion_content":"不错！基本实现了功能！d(^_^o)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588659215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172374,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1579163019,"is_pvip":true,"replies":[{"id":"66864","content":"后面讲到指针的时候，你就明白了。&amp;a传入的是a的地址，这样scanf才能把处理结果放到变量a里面。","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1579175730,"ip_address":"","comment_id":172374,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5874130315","product_id":100043901,"comment_content":"为什么scanf(“%d”,&amp;a);是用%d整数占位符替换的&amp;a的地址，不应该是%p吗？","like_count":1,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481715,"discussion_content":"后面讲到指针的时候，你就明白了。&amp;amp;a传入的是a的地址，这样scanf才能把处理结果放到变量a里面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579175730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171628,"user_name":"梅利奥猪猪毛丽莎肉酱","can_delete":false,"product_type":"c1","uid":1613155,"ip_address":"","ucode":"7F919F60F5814C","user_header":"https://static001.geekbang.org/account/avatar/00/18/9d/63/ba7797ba.jpg","comment_is_top":false,"comment_ctime":1578981892,"is_pvip":false,"replies":[{"id":"66632","content":"(｡ì _ í｡)好的，谢谢你的建议，d(^_^o)","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1579023911,"ip_address":"","comment_id":171628,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5873949188","product_id":100043901,"comment_content":"嗯还是相对比较基础的，对于萌新来说建议老师在图5种补充一个y=*****000000,这样萌新会看的更加轻松，和x做对比的确就差个1，至于前面的*号为什么一致，也是因为与的运算，因为1&amp;1=1， 0&amp;0=0，然后在结合下面的程序看，一看就看懂了","like_count":1,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481441,"discussion_content":"(｡ì _ í｡)好的，谢谢你的建议，d(^_^o)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579023911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1326905,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","nickname":"小呀么小二郎","note":"","ucode":"149540DCFDF43E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583009,"discussion_content":"感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659873704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171507,"user_name":"行问","can_delete":false,"product_type":"c1","uid":1039504,"ip_address":"","ucode":"F3AED699218475","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/90/c980113a.jpg","comment_is_top":false,"comment_ctime":1578956875,"is_pvip":false,"replies":[{"id":"66463","content":"二进制除法","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1578959729,"ip_address":"","comment_id":171507,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5873924171","product_id":100043901,"comment_content":"以二进制数字 110 为例，末尾是 0，计数量 cnt 不进入计算；然后 110 除以 2，即去掉最后一位的 0，变成了 11，此时末尾是 1，计数量 cnt 就加 1；11 再除以 2，变成了 1，此时末尾是 1，计数量 cnt 再次加 1 。最后的 n 等于 1，再除以 2，n 变成了 0，循环结束。<br><br>这个段落的叙述、逻辑，让初学者直接挂掉了。110 除以 2，即去掉最后一位的 0， 变成了 11。我在大脑、拿纸笔，反复的推算，它都不成立。以二进制除法？十进制除法？","like_count":1,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481386,"discussion_content":"二进制除法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578959729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348052,"avatar":"https://static001.geekbang.org/account/avatar/00/14/91/d4/3785c799.jpg","nickname":"乐毅","note":"","ucode":"6361ADC9B0E8D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311929,"discussion_content":"二进制数除以2就是右移一位，乘以2便是左移一位，如10左移一位就是100，再左移一位是1000","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602542355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1800640,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/79/c0/4c35b6ab.jpg","nickname":"不便明言","note":"","ucode":"745571262B75B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":153113,"discussion_content":"我这种小白就看了两晚，这篇上面这点才马马虎虎自己安心😂，我问这种零基础跟这颗感觉还是比较费劲啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580026955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133626,"discussion_content":"110是二进制表示的数字6，11是二进制表示的数字3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578977077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357051,"user_name":"look for","can_delete":false,"product_type":"c1","uid":1459157,"ip_address":"山东","ucode":"B19F0DED81B2BD","user_header":"https://static001.geekbang.org/account/avatar/00/16/43/d5/a7eaf722.jpg","comment_is_top":false,"comment_ctime":1662885798,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662885798","product_id":100043901,"comment_content":"思考题：<br><br>#include &lt;stdio.h&gt;<br><br>void main()<br>{<br>  int n, m, arr[10];<br>  scanf(&quot;%d&quot;, &amp;n);<br>  scanf(&quot;%d&quot;, &amp;m);<br><br>  for (int i = 0; i &lt; n; i++)<br>  {<br>    scanf(&quot;%d&quot;, &amp;arr[i]); &#47;&#47; 读入n个不相同的正整数，并存入数组<br>  }<br><br>  for (int i = 1; i &lt;= m; i++)<br>  {<br>    for (int j = 0; j &lt; n; j++)<br>    {<br>      if (i % arr[j] == 0)<br>      {<br>        break;<br>      }<br>      if (j == n - 1) &#47;&#47; 判断是否是执行到最后一个数<br>      {<br>        printf(&quot;%d\\t&quot;, i);<br>      }<br>    }<br>  }<br>}","like_count":0},{"had_liked":false,"id":353863,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"上海","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1659873758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659873758","product_id":100043901,"comment_content":"这节看了好几遍哇，有时候感觉自己看明白了，可是想着想着又把自己搞懵了","like_count":0},{"had_liked":false,"id":344586,"user_name":"郑小菜","can_delete":false,"product_type":"c1","uid":1546026,"ip_address":"","ucode":"B350EC4E18BFA3","user_header":"https://static001.geekbang.org/account/avatar/00/17/97/2a/84f3ee46.jpg","comment_is_top":false,"comment_ctime":1651657871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651657871","product_id":100043901,"comment_content":"“例如 n=8 的时候，上面循环执行 3 次” 不应该执行了4次吗？","like_count":0},{"had_liked":false,"id":343517,"user_name":"blackcat","can_delete":false,"product_type":"c1","uid":2976333,"ip_address":"","ucode":"268CE9B2DECA24","user_header":"https://static001.geekbang.org/account/avatar/00/2d/6a/4d/dcbef79a.jpg","comment_is_top":false,"comment_ctime":1650887769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650887769","product_id":100043901,"comment_content":"看了精选留言，我还是小白了。","like_count":0},{"had_liked":false,"id":343516,"user_name":"blackcat","can_delete":false,"product_type":"c1","uid":2976333,"ip_address":"","ucode":"268CE9B2DECA24","user_header":"https://static001.geekbang.org/account/avatar/00/2d/6a/4d/dcbef79a.jpg","comment_is_top":false,"comment_ctime":1650887619,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650887619","product_id":100043901,"comment_content":"#include&lt;stdio.h&gt;<br><br>int main()<br>{<br>    int n,m,x;<br>    scanf(&quot;%d %d&quot;,&amp;n,&amp;m);<br>    int a[n];<br>    for(int i=1;i&lt;=n;i++)<br>    {<br>        scanf(&quot;%d&quot;,&amp;x);<br>        a[i]=x;<br>    }<br>    int b[m];<br>    for(int j=1;j&lt;=m;j++)<br>    {<br>        for(int i=1;i&lt;=n;i++)<br>        {<br>            if(j%a[i]!=0)<br>            {<br>                b[j]=1;<br>            }<br>            else<br>            {<br>                b[j]=0;<br>                break;<br>            }<br>        }  <br>    }<br>    for(int j=1;j&lt;=m;j++)<br>    {<br>        if(b[j]==1)<br>        {<br>            printf(&quot;%d &quot;,j);<br>        }<br>    }<br>    <br>    return 0;<br>}<br>小白一枚，最近看同余原理，尝试了一下。","like_count":0},{"had_liked":false,"id":324922,"user_name":"浪里淘沙的小法师","can_delete":false,"product_type":"c1","uid":2441110,"ip_address":"","ucode":"93D5AEFC0E2436","user_header":"https://static001.geekbang.org/account/avatar/00/25/3f/96/ce0b9678.jpg","comment_is_top":false,"comment_ctime":1638717567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638717567","product_id":100043901,"comment_content":"思考题，去掉倍数<br>#include &lt;stdio.h&gt;<br>int main() {<br>  int m, n, arr[10];<br>  scanf(&quot;%d%d&quot;, &amp;n, &amp;m);<br>  printf(&quot;请输入%d个数字:&quot;, n);<br>  for (int i = 0; i &lt; n; i++) {<br>    scanf(&quot;%d&quot;, &amp;arr[i]); <br>  }<br>  printf(&quot;以下数字不能被上面%d个数整除:&quot;,n);<br>  for (int i = 1; i &lt;= m; i++) {<br>    int flag = 0;<br>    for (int j = 0; j &lt; n; j++) {<br>      if (i % arr[j] == 0) {<br>        flag = 1;<br>        break;<br>      }<br>    }<br>    if(flag==0){<br>      printf(&quot;%d &quot;,i);<br>    }<br>  }<br>  printf(&quot;\\n&quot;);<br>  return 0;<br>}","like_count":0},{"had_liked":false,"id":319875,"user_name":"点金","can_delete":false,"product_type":"c1","uid":1943082,"ip_address":"","ucode":"D3A60E3D89F3B6","user_header":"https://static001.geekbang.org/account/avatar/00/1d/a6/2a/d76eb2f6.jpg","comment_is_top":false,"comment_ctime":1635994635,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1635994635","product_id":100043901,"comment_content":"这个问题的时间复杂度是O(n)的吧，不是O(1)的","like_count":0,"discussions":[{"author":{"id":1459157,"avatar":"https://static001.geekbang.org/account/avatar/00/16/43/d5/a7eaf722.jpg","nickname":"look for","note":"","ucode":"B19F0DED81B2BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587235,"discussion_content":"是O(1)，求每个数的二进制表示中1的个数，根据公式只需计算一次。要求n个数的，所以才用的for循环。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662891219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316012,"user_name":"艾格北峰","can_delete":false,"product_type":"c1","uid":1346021,"ip_address":"","ucode":"81B3C1426C431A","user_header":"https://static001.geekbang.org/account/avatar/00/14/89/e5/2219d26f.jpg","comment_is_top":false,"comment_ctime":1634107423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634107423","product_id":100043901,"comment_content":"去除倍数程序：<br>#include &lt;stdio.h&gt;<br><br>int main() {<br>\tint n, m;<br>\tint c = 0;<br>\tint num = 0;<br>\tscanf(&quot;%d %d\\n&quot;, &amp;n, &amp;m);<br>\tint a[10] = {0};<br>\tint var[1000] = {0};<br>\tfor (int i = 0; i &lt; n; i++) {<br>\t\tscanf(&quot;%d&quot;, &amp;a[i]);<br>\t\t&#47;&#47;printf(&quot;%d &quot;, a[i]);<br>\t}<br>\tfor (int i = 1; i &lt;= m; i++) {<br>\t\tfor (int j = 0; j &lt; n; j++) {<br>\t\t\tif (i % a[j] != 0) {<br>\t\t\t\tc +=1;<br>\t\t\t} <br>\t\t}<br>\t\tif (c == n) {<br>\t\t\tvar[num] = i;<br>\t\t\tnum += 1;<br>\t\t}<br>\t\tc = 0;<br>\t\t<br>\t}<br>\tfor (int i = 0; i &lt; num; i++) {<br>\t\tprintf(&quot;%d&quot;, var[i]);<br>\t\tif (i &lt; num - 1) {<br>\t\t\tprintf(&quot; &quot;);<br>\t\t}<br>\t}<br>\tprintf(&quot;\\n&quot;);<br>\treturn 0;<br><br>}<br><br>","like_count":0},{"had_liked":false,"id":306854,"user_name":"韩非","can_delete":false,"product_type":"c1","uid":2731401,"ip_address":"","ucode":"49D34042D38B48","user_header":"https://static001.geekbang.org/account/avatar/00/29/ad/89/6d1fef61.jpg","comment_is_top":false,"comment_ctime":1628747500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628747500","product_id":100043901,"comment_content":"突然悟了，y=x &amp; (x - 1)是去掉x的最后一位的1，最后的y为x - 1,不过，那为什么不让y直接等于x -1呢，有什么坑吗🙃","like_count":0},{"had_liked":false,"id":303922,"user_name":"Sunny","can_delete":false,"product_type":"c1","uid":1097652,"ip_address":"","ucode":"3234A2143B14EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/bf/b4/7e672b6d.jpg","comment_is_top":false,"comment_ctime":1627098435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627098435","product_id":100043901,"comment_content":"老师讲的很好呀，终于理解了内存和地址的区别","like_count":0},{"had_liked":false,"id":278571,"user_name":"peterkalven","can_delete":false,"product_type":"c1","uid":1274118,"ip_address":"","ucode":"74AF1D2A01E563","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/06/e17159a9.jpg","comment_is_top":false,"comment_ctime":1613089339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613089339","product_id":100043901,"comment_content":"思考题：去掉倍数<br>#include &lt;stdio.h&gt;<br>int main(){<br>        int n, m;<br>        int small[10];<br>        int i,j;<br>        printf(&quot;please input n(&lt;10) and m(&lt;10000)\\n&quot;);<br>        scanf(&quot;%d %d&quot;,&amp;n,&amp;m);<br>        printf(&quot;please input %d numbers\\n&quot;, n);<br>        for(i=0;i&lt;n;i++){<br>                scanf(&quot;%d&quot;,&amp;small[i]);<br>        }<br>        printf(&quot;the output is :\\n &quot;);<br>        for(j=1;j&lt;=m;j++){<br>                for(i=0;i&lt;n;i++){<br>                        if(j % small[i] == 0){<br>                                break;<br>                        }<br>                }<br>                if(i==n){<br>                        printf(&quot;%-5d&quot;,j);<br>                }<br>        }<br>        printf(&quot;\\n&quot;);<br>        return 0;<br>}<br>","like_count":0},{"had_liked":false,"id":264361,"user_name":"蓦然回首","can_delete":false,"product_type":"c1","uid":1172090,"ip_address":"","ucode":"B17658DCFE6402","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/7a/38a27e47.jpg","comment_is_top":false,"comment_ctime":1606446597,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1606446597","product_id":100043901,"comment_content":"开发做的越久，越能体会到算法的重要性，数学的重要性","like_count":0},{"had_liked":false,"id":245782,"user_name":"Geek_bcffeb","can_delete":false,"product_type":"c1","uid":2031914,"ip_address":"","ucode":"9AED847F90391C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Es78ParAxh5fkAVd1Cm9cvehF0rxMEKLbcAiaMBJQVxA4t0EJVWMxrjdicBe8ib5hJicerrKpokicmkLyj0qefC6M3w/132","comment_is_top":false,"comment_ctime":1599050117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599050117","product_id":100043901,"comment_content":"#include&lt;stdio.h&gt;<br>&#47;*<br>任务：<br>\t输入一个整数n,n&lt;=1000<br>\t输出1 -- n 的每一个数字的二进制数表示的1的个数。<br>思路：<br>    十进制数在计算机中都是以二进制的形式存在的<br>\t设置一个屏蔽字：只一位为1，其余全为0，值为1的位为测试位<br>\t将所求数字与屏蔽字进行“位与”运算，判断被测试位是1还是0，为1计数加一<br>\t屏蔽字右移一位，继续进行前几步操作<br>*&#47;<br><br>int main()<br>{<br>\tint bit;<br>\tunsigned int n;<br>\tunsigned int mask;<br>\tprintf(&quot;请输入一个不会大于1000的正整数：&quot;);<br>\tscanf(&quot;%d&quot;, &amp;n);<br>\tif (n &gt; 1000)<br>\t{<br>\t\tprintf(&quot;输入不符合要求，请重新输入：&quot;);<br>\t\tscanf(&quot;%d&quot;, &amp;n);<br>\t}<br>\tfor (int i = 1; i &lt;= n; i++)<br>\t{<br>\t\tbit = 0;<br>\t\tmask = 0x8000;&#47;&#47;2^10=1024，n&lt;=1000，二进制位数不会超过11位，使用16位的屏蔽字即可；<br>\t\tfor (int j = 0; j &lt; 16; j++)<br>\t\t{<br>\t\t\tbit += (i &amp; mask) ? 1 : 0;<br>\t\t\tmask = mask &gt;&gt; 1;<br>\t\t}<br>\t\tprintf(&quot;%d &quot;, bit);<br>\t\tif (i % 10 == 0)<br>\t\t{<br>\t\t\tprintf(&quot;\\n&quot;);<br>\t\t}\t<br>\t}<br>\treturn 0;<br>}","like_count":0},{"had_liked":false,"id":245769,"user_name":"Geek_bcffeb","can_delete":false,"product_type":"c1","uid":2031914,"ip_address":"","ucode":"9AED847F90391C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Es78ParAxh5fkAVd1Cm9cvehF0rxMEKLbcAiaMBJQVxA4t0EJVWMxrjdicBe8ib5hJicerrKpokicmkLyj0qefC6M3w/132","comment_is_top":false,"comment_ctime":1599044942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599044942","product_id":100043901,"comment_content":"思考题：<br>#include&lt;stdio.h&gt;<br>&#47;*<br>设计一个去掉倍数的程序：<br>   1.首先读入两个数字n和m,n&lt;=10,m&lt;=10000<br>   2.读入个各不相同的正整数，输出1到m中，有哪些数字无法被这n个正整数中的任意一个整除<br>*&#47;<br><br>int main()<br>{<br>\tint n, m;<br>\tint arr[10000];<br>\tint count;&#47;&#47;计数<br>\tprintf(&quot;请输入两个正整数：前一个不超过10，后一个不超过10000！\\n&quot;);<br>\tscanf(&quot;%d&quot;, &amp;n);<br>\tscanf(&quot;%d&quot;, &amp;m);<br>\tif (n &gt; 10 || m &gt; 10000)<br>\t{<br>\t\tprintf(&quot;输入不符合标准，请重新输入！\\n&quot;);<br>\t\tscanf(&quot;%d&quot;, &amp;n);<br>\t\tscanf(&quot;%d&quot;, &amp;m);<br>\t}<br>\t&#47;&#47;将读入的n个正整数存放到数组中<br>\tfor (int i = 0; i &lt; n; i++)<br>\t{<br>\t\tscanf(&quot;%d&quot;, &amp;arr[i]);\t<br>\t}<br>\tfor (int j = 1; j &lt;=m; j++)<br>\t{<br>\t\tcount = 0;&#47;&#47;计数清零<br>\t\tfor (int k = 0; k &lt;n; k++)<br>\t\t{<br>\t\t\tif (j % arr[k] != 0)<br>\t\t\t{<br>\t\t\t\t&#47;&#47;不能整除就加1<br>\t\t\t\tcount += 1;<br>\t\t\t}<br>\t\t}<br>\t\tif (count == n)<br>\t\t{<br>\t\t\tprintf(&quot;%d &quot;, j);<br>\t\t}<br>\t}<br>\treturn 0;<br>}","like_count":0},{"had_liked":false,"id":216423,"user_name":"草帽Plasticine","can_delete":false,"product_type":"c1","uid":1980842,"ip_address":"","ucode":"411B748491FF32","user_header":"https://static001.geekbang.org/account/avatar/00/1e/39/aa/8eee323b.jpg","comment_is_top":false,"comment_ctime":1589256605,"is_pvip":false,"replies":[{"id":"80144","content":"没毛病！d(^_^o)","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1589321362,"ip_address":"","comment_id":216423,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589256605","product_id":100043901,"comment_content":"思考题：去掉倍数，第一次没看答案没看底下的评论，完全自己想的写出来还能符合题意太激动了啊啊啊<br>老师讲得太棒了！<br><br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br><br>int main()<br>{<br>    int n, m, num[10000], temp[10000];<br>    scanf(&quot;%d&quot;, &amp;n);<br>    scanf(&quot;%d&quot;, &amp;m);<br><br>    &#47;&#47; 读入用户输入的n个数字<br>    for (int i=0; i&lt;n; i++)<br>        scanf(&quot;%d&quot;, &amp;num[i]);<br><br>    &#47;&#47; 创建一个 1 ~ m 的数组<br>    for (int i=0; i&lt;m; i++)<br>        temp[i] = i+1;<br><br>    &#47;&#47; 让 1 ~ m 的数字分别判断是否能整除读入的n个数字<br>    for (int i=1; i&lt;=m; i++)<br>    {<br>        for (int j=0; j&lt;n; j++)<br>            {<br>             if (i%num[j]==0)<br>                temp[i-1] = 0;<br>            }<br>    }<br><br>    &#47;&#47; 打印符合条件的值<br>    for (int i=0; i&lt;m; i++)<br>    {<br>        if (temp[i] != 0) printf(&quot;%d &quot;, temp[i]);<br>    }<br><br>    return 0;<br>}<br>","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494810,"discussion_content":"没毛病！d(^_^o)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589321362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213297,"user_name":"小风","can_delete":false,"product_type":"c1","uid":1978402,"ip_address":"","ucode":"3EF421854BC81D","user_header":"https://static001.geekbang.org/account/avatar/00/1e/30/22/2b931d6e.jpg","comment_is_top":false,"comment_ctime":1588378343,"is_pvip":false,"replies":[{"id":"79299","content":"两个&amp;&amp;，这个是【条件与】, (a &amp;&amp; b) 这个条件与表达式的值只有 0 或者 1<br>而 &amp; 才是我们所说的位运算，按位与，(a &amp; b) 这个表达式的值，是 a 和 b 的二进制表示按位做与运算以后的结果，是一个整数范围的值。","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1588659512,"ip_address":"","comment_id":213297,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1588378343","product_id":100043901,"comment_content":"按位与不应该用＆＆计算吗，一个＆可以？","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493736,"discussion_content":"两个&amp;amp;&amp;amp;，这个是【条件与】, (a &amp;amp;&amp;amp; b) 这个条件与表达式的值只有 0 或者 1\n而 &amp;amp; 才是我们所说的位运算，按位与，(a &amp;amp; b) 这个表达式的值，是 a 和 b 的二进制表示按位做与运算以后的结果，是一个整数范围的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588659512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1978402,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/30/22/2b931d6e.jpg","nickname":"小风","note":"","ucode":"3EF421854BC81D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258181,"discussion_content":"嗯嗯，之前搞混了，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588659719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206603,"user_name":"Geek_Jia","can_delete":false,"product_type":"c1","uid":1914888,"ip_address":"","ucode":"7D0684C5C58478","user_header":"","comment_is_top":false,"comment_ctime":1586908836,"is_pvip":false,"replies":[{"id":"77306","content":"图例中也是每一个字节一个地址啊。你说的是图几？","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1587001171,"ip_address":"","comment_id":206603,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586908836","product_id":100043901,"comment_content":"“那么 CPU 能够准确找到程序所需要数据的本质原因，也是因为每一个字节都有一个独立的编号。”---------老师，文章中说每一个字节都有一个独立的地址，可是下面图例却显示的是每两个字节有一个独立地址，想不明白申请的内存空间的基本单位到底是什么呢？","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491840,"discussion_content":"图例中也是每一个字节一个地址啊。你说的是图几？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587001171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201350,"user_name":"1043","can_delete":false,"product_type":"c1","uid":1485365,"ip_address":"","ucode":"AAA69CC175AEE3","user_header":"https://static001.geekbang.org/account/avatar/00/16/aa/35/1a4884f9.jpg","comment_is_top":false,"comment_ctime":1585754537,"is_pvip":false,"replies":[{"id":"75369","content":"缓存设计，相当于内存数据的一个高速备份，不是独立的存储。你可以通过代码主动控制哪些数据被缓存。可你也要意识到，这些数据还是占用着内存的。除非你定义的是寄存器变量，不占用内存，可寄存器变量的数量，是特别有限的，和缓存还不是一个概念。","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1585793362,"ip_address":"","comment_id":201350,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1585754537","product_id":100043901,"comment_content":"写程序占用空间只能调用内存地址吗？如果字节占用的特别少不能直接去占用cpu的一级或者二级高速缓存吗？现在连三缓存不都已经设计出来了吗？这些缓存的访问速度远高于内存，如果能直接调用不是访问速度更快了吗？另外编写去掉倍数的程序是找一定范围内的质数的数量吗，限定范围为找两个数的比值把倍数去掉是指挑选出这两个数的比值后为质数的数才保留吗？","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490308,"discussion_content":"缓存设计，相当于内存数据的一个高速备份，不是独立的存储。你可以通过代码主动控制哪些数据被缓存。可你也要意识到，这些数据还是占用着内存的。除非你定义的是寄存器变量，不占用内存，可寄存器变量的数量，是特别有限的，和缓存还不是一个概念。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585793362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197235,"user_name":"落曦","can_delete":false,"product_type":"c1","uid":1475039,"ip_address":"","ucode":"C70F7E2EDC3FD7","user_header":"https://static001.geekbang.org/account/avatar/00/16/81/df/066ffab3.jpg","comment_is_top":false,"comment_ctime":1585364549,"is_pvip":false,"replies":[{"id":"74591","content":"这句话还有其他断句方式么？-_-|||","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1585382120,"ip_address":"","comment_id":197235,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1585364549","product_id":100043901,"comment_content":"作业 读了半天老师您语言的逻辑都没读懂有哪些数字无法被这 n 个正整数中任意的一个整除。这句话，自己动手就算出来了 <br>#include &lt;stdio.h&gt;<br>int main() {<br>\tint m,n;<br>\tint a[10000];<br>\tint i,j;<br>\tscanf(&quot;%d%d&quot;,&amp;n,&amp;m);<br>\tfor(i=0;i&lt;n;i++)<br>\t{<br>\t\tscanf(&quot;%d&quot;,&amp;a[i]);<br>\t} <br>\tfor(i=1;i&lt;=m;i++)<br>\t{<br>\t\tfor(j=0;j&lt;n;j++)<br>\t\t{<br>\t\t\tif(i%a[j]==0)<br>\t\t\t{<br>\t\t\t\tbreak;<br>\t\t\t}<br>\t\t\telse if(j==n-1) <br>\t\t\t{<br>\t\t\t\tprintf(&quot;%d&quot;,i);<br>\t\t\t}<br>\t\t}<br>\t}<br>    return 0;<br>}","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489478,"discussion_content":"这句话还有其他断句方式么？-_-|||","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585382120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1475039,"avatar":"https://static001.geekbang.org/account/avatar/00/16/81/df/066ffab3.jpg","nickname":"落曦","note":"","ucode":"C70F7E2EDC3FD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215776,"discussion_content":"读了二十多遍都没读懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585382321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180463,"user_name":"Aureliano","can_delete":false,"product_type":"c1","uid":1691411,"ip_address":"","ucode":"42F2492C9D7E47","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/4Xxu0PA1ibxeUSMrKBpEIB1HO10zY1AKossJrO9ajJIGAd3uibGvUlVPtrP5KOjaFH15TkWwKjmJKicHADtZcHEWQ/132","comment_is_top":false,"comment_ctime":1582288052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582288052","product_id":100043901,"comment_content":"当i足够大时f[i]=f[i&amp;(i-1)]+1=f[i&amp;(i-2^n)]+1,只是n越大递推公式需要初始化的数组元素越多","like_count":0},{"had_liked":false,"id":178652,"user_name":"Paradise","can_delete":false,"product_type":"c1","uid":1070878,"ip_address":"","ucode":"D92EACCBF6B3B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/57/1e/8ed4a7cf.jpg","comment_is_top":false,"comment_ctime":1581772612,"is_pvip":true,"replies":[{"id":"69367","content":"i对应了x<br>i&amp;（i-1）对应了y<br>y比x少一个1","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1581816176,"ip_address":"","comment_id":178652,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581772612","product_id":100043901,"comment_content":"由y = x &amp; (x - 1) 是怎么推导出f[i] = f[i &amp; (i - 1)] + 1呢。。","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483909,"discussion_content":"i对应了x\ni&amp;amp;（i-1）对应了y\ny比x少一个1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581816176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176932,"user_name":"🤪HappyJoo","can_delete":false,"product_type":"c1","uid":1234591,"ip_address":"","ucode":"96E1858F06BABA","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/9f/0213e8a0.jpg","comment_is_top":false,"comment_ctime":1581230773,"is_pvip":false,"replies":[{"id":"69095","content":"d(^_^o)有问题，多讨论，多交流。","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1581596210,"ip_address":"","comment_id":176932,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581230773","product_id":100043901,"comment_content":"还是不太明白或与那里是怎么回事，一知半解，等以后学得更深了，再回来看就懂了。老师的课程真好~<br><br>代码如下：<br>  1 #include &lt;stdio.h&gt;<br>  2 #include &lt;stdlib.h&gt;<br>  3 #include &lt;time.h&gt;<br>  4<br>  5 &#47;&#47;create a list that can have 1001 number.<br>  6 &#47;&#47;Get &quot;egmentation fault (core dumped)&quot; error when I enter 1008    .<br>  7 &#47;&#47;Don&#39;t know why it&#39;s 1008 not 1001.<br>  8 int f[1001];<br>  9<br> 10 &#47;&#47; main function<br> 11 int main(){<br> 12<br> 13     &#47;&#47; create an int as n<br> 14     int n;<br> 15<br> 16     &#47;&#47; input a number as n<br> 17     scanf(&quot;%d&quot;, &amp;n);<br> 18<br> 19     &#47;&#47; set the first number in the list to 0<br> 20     f[0] = 0;<br> 21<br> 22     &#47;&#47; insert how many 1 each number has to the list<br> 23     for (int i = 1; i &lt;= n; i++) {<br> 24         f[i] = f[i &amp; (i - 1)] + 1;<br> 25     }<br> 26<br> 27     &#47;&#47; print the resule in the list one by one<br> 28     &#47;&#47; you have to use a loop to output element in a list in C<br> 29     &#47;&#47; you can just use &#39;printf(&quot;%d&quot;, f[i]);&#39;, but it will get     an extra &#39; &#39; at the begining.<br> 30     for (int i = 1; i &lt;= n; i++) {<br> 31         if (i != 1) printf(&quot; &quot;); &#47;&#47;aviod the first space<br> 32         printf(&quot;%d&quot;, f[i]);<br> 33     }<br> 34<br> 35     &#47;&#47; print a new line<br> 36     printf(&quot;\\n&quot;);<br> 37<br> 38     &#47;&#47; return 0<br> 39     return 0;<br> 40 }<br> 41","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483253,"discussion_content":"d(^_^o)有问题，多讨论，多交流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581596210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174991,"user_name":"信念","can_delete":false,"product_type":"c1","uid":1673076,"ip_address":"","ucode":"3D32CA6E096CF8","user_header":"https://static001.geekbang.org/account/avatar/00/19/87/74/68c35700.jpg","comment_is_top":false,"comment_ctime":1580515360,"is_pvip":false,"replies":[{"id":"67986","content":"因为你没有输出啊！用printf输出sizeof的值","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1580524062,"ip_address":"","comment_id":174991,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1580515360","product_id":100043901,"comment_content":"vim test10.cpp<br>#include&lt;stdio.h&gt;<br><br>int main(){<br>int a;<br>sizeof(a); &#47;&#47; 计算 a 变量占用字节数量<br>sizeof(int); &#47;&#47; 计算一个整型元素占用字节数量<br>return 0;<br>}<br>gcc test10.cpp<br>.&#47;a.out<br>老师，我进行了上述操作，为什么屏幕上面没有任何回应呀？","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482588,"discussion_content":"因为你没有输出啊！用printf输出sizeof的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580524062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1673076,"avatar":"https://static001.geekbang.org/account/avatar/00/19/87/74/68c35700.jpg","nickname":"信念","note":"","ucode":"3D32CA6E096CF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157860,"discussion_content":"能问一下printf sizeof应该怎么写吗？这段理解不太好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580526960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174841,"user_name":"信念","can_delete":false,"product_type":"c1","uid":1673076,"ip_address":"","ucode":"3D32CA6E096CF8","user_header":"https://static001.geekbang.org/account/avatar/00/19/87/74/68c35700.jpg","comment_is_top":false,"comment_ctime":1580431351,"is_pvip":false,"replies":[{"id":"67958","content":"下面你就可以输入数据了，首先输入一个n的值，例如3，然后再输入n个值即可。","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1580442437,"ip_address":"","comment_id":174841,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1580431351","product_id":100043901,"comment_content":"vim test09.cpp<br>#include&lt;stdio.h&gt;<br>int main(){<br>int n, arr[1000];<br>scanf(&quot;%d&quot;, &amp;n);<br>for (int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, &amp;arr[i]);<br>return 0;<br>}<br>gcc test09.cpp<br>.&#47;a.out<br>这是我的操作，请问老师下面我应该打什么命令呀？<br>","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482542,"discussion_content":"下面你就可以输入数据了，首先输入一个n的值，例如3，然后再输入n个值即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580442437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1673076,"avatar":"https://static001.geekbang.org/account/avatar/00/19/87/74/68c35700.jpg","nickname":"信念","note":"","ucode":"3D32CA6E096CF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157746,"discussion_content":"我输入了一个3，按了回车键，又输了一个333，按了回车键，屏幕上面还是没有给出东西，老师能麻烦再具体一点吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580515071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172158,"user_name":"学写代码的猪","can_delete":false,"product_type":"c1","uid":1064616,"ip_address":"","ucode":"4EBA2329450B53","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/a8/66088c47.jpg","comment_is_top":false,"comment_ctime":1579097579,"is_pvip":true,"replies":[{"id":"66881","content":"yes！<br>d(^_^o)","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1579186037,"ip_address":"","comment_id":172158,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579097579","product_id":100043901,"comment_content":"思考题：去掉倍数<br>定义数组 a[m+1]，初始化值为0<br>想到最快的算法，把每个数的倍数[下标]的值置为1；<br>输出值还为0的数组下标","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481645,"discussion_content":"yes！\nd(^_^o)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579186037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171524,"user_name":"徐洲更","can_delete":false,"product_type":"c1","uid":1314643,"ip_address":"","ucode":"F8A323CB732D05","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/53/92a50f01.jpg","comment_is_top":false,"comment_ctime":1578961384,"is_pvip":true,"replies":[{"id":"66500","content":"对的，如果单纯的只是求n中二进制表示1的数量的话，那么直接求就好了，用不着递推。前后是两种性质完全不同的题目。","user_name":"作者回复","user_name_real":"胡炜燚","uid":"1374625","ctime":1578974378,"ip_address":"","comment_id":171524,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1578961384","product_id":100043901,"comment_content":"如果题目求的并不是1-n的1的数，而是n的1的数量，利用递推的解决方法的时间复杂度是不是就比最开始的方法高呢","like_count":0,"discussions":[{"author":{"id":1374625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/a1/ac36884c.jpg","nickname":"胡光","note":"","ucode":"601F29A45FC1E5","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481395,"discussion_content":"对的，如果单纯的只是求n中二进制表示1的数量的话，那么直接求就好了，用不着递推。前后是两种性质完全不同的题目。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578974378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064616,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3e/a8/66088c47.jpg","nickname":"学写代码的猪","note":"","ucode":"4EBA2329450B53","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":135554,"discussion_content":"那还是 while(n){n &amp;= n-1;cnt++;}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579096654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}