{"id":74687,"title":"19 | 为什么我只查一行的语句，也执行这么慢？","content":"<p>一般情况下，如果我跟你说查询性能优化，你首先会想到一些复杂的语句，想到查询需要返回大量的数据。但有些情况下，“查一行”，也会执行得特别慢。今天，我就跟你聊聊这个有趣的话题，看看什么情况下，会出现这个现象。</p><p>需要说明的是，如果MySQL数据库本身就有很大的压力，导致数据库服务器CPU占用率很高或ioutil（IO利用率）很高，这种情况下所有语句的执行都有可能变慢，不属于我们今天的讨论范围。</p><p>为了便于描述，我还是构造一个表，基于这个表来说明今天的问题。这个表有两个字段id和c，并且我在里面插入了10万行记录。</p><pre><code>mysql&gt; CREATE TABLE `t` (\n  `id` int(11) NOT NULL,\n  `c` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB;\n\ndelimiter ;;\ncreate procedure idata()\nbegin\n  declare i int;\n  set i=1;\n  while(i&lt;=100000) do\n    insert into t values(i,i);\n    set i=i+1;\n  end while;\nend;;\ndelimiter ;\n\ncall idata();\n</code></pre><p>接下来，我会用几个不同的场景来举例，有些是前面的文章中我们已经介绍过的知识点，你看看能不能一眼看穿，来检验一下吧。</p><h1>第一类：查询长时间不返回</h1><p>如图1所示，在表t执行下面的SQL语句：</p><pre><code>mysql&gt; select * from t where id=1;\n</code></pre><p>查询结果长时间不返回。</p><p><img src=\"https://static001.geekbang.org/resource/image/87/2a/8707b79d5ed906950749f5266014f22a.png?wh=436*70\" alt=\"\"></p><center><span class=\"reference\">图1 查询长时间不返回</span></center><p>一般碰到这种情况的话，大概率是表t被锁住了。接下来分析原因的时候，一般都是首先执行一下show processlist命令，看看当前语句处于什么状态。</p><p>然后我们再针对每种状态，去分析它们产生的原因、如何复现，以及如何处理。</p><h2>等MDL锁</h2><!-- [[[read_end]]] --><p>如图2所示，就是使用show processlist命令查看Waiting for table metadata lock的示意图。</p><p><img src=\"https://static001.geekbang.org/resource/image/50/28/5008d7e9e22be88a9c80916df4f4b328.png?wh=1312*213\" alt=\"\"></p><center><span class=\"reference\">图2 Waiting for table metadata lock状态示意图</span></center><p>出现<strong>这个状态表示的是，现在有一个线程正在表t上请求或者持有MDL写锁，把select语句堵住了。</strong></p><p>在第6篇文章<a href=\"https://time.geekbang.org/column/article/69862\">《全局锁和表锁 ：给表加个字段怎么有这么多阻碍？》</a>中，我给你介绍过一种复现方法。但需要说明的是，那个复现过程是基于MySQL 5.6版本的。而MySQL 5.7版本修改了MDL的加锁策略，所以就不能复现这个场景了。</p><p>不过，在MySQL 5.7版本下复现这个场景，也很容易。如图3所示，我给出了简单的复现步骤。<br>\n<img src=\"https://static001.geekbang.org/resource/image/74/ca/742249a31b83f4858c51bfe106a5daca.png?wh=940*147\" alt=\"\"></p><center><span class=\"reference\">图3 MySQL 5.7中Waiting for table metadata lock的复现步骤</span></center><p>session A 通过lock table命令持有表t的MDL写锁，而session B的查询需要获取MDL读锁。所以，session B进入等待状态。</p><p>这类问题的处理方式，就是找到谁持有MDL写锁，然后把它kill掉。</p><p>但是，由于在show processlist的结果里面，session A的Command列是“Sleep”，导致查找起来很不方便。不过有了performance_schema和sys系统库以后，就方便多了。（MySQL启动时需要设置performance_schema=on，相比于设置为off会有10%左右的性能损失)</p><p>通过查询sys.schema_table_lock_waits这张表，我们就可以直接找出造成阻塞的process id，把这个连接用kill 命令断开即可。</p><p><img src=\"https://static001.geekbang.org/resource/image/74/01/74fb24ba3826e3831eeeff1670990c01.png?wh=940*251\" alt=\"\"></p><center><span class=\"reference\">图4 查获加表锁的线程id</span></center><h2>等flush</h2><p>接下来，我给你举另外一种查询被堵住的情况。</p><p>我在表t上，执行下面的SQL语句：</p><pre><code>mysql&gt; select * from information_schema.processlist where id=1;\n</code></pre><p>这里，我先卖个关子。</p><p>你可以看一下图5。我查出来这个线程的状态是Waiting for table flush，你可以设想一下这是什么原因。<br>\n<img src=\"https://static001.geekbang.org/resource/image/2d/24/2d8250398bc7f8f7dce8b6b1923c3724.png?wh=1221*147\" alt=\"\"></p><center><span class=\"reference\">图5 Waiting for table flush状态示意图</span></center><p>这个状态表示的是，现在有一个线程正要对表t做flush操作。MySQL里面对表做flush操作的用法，一般有以下两个：</p><pre><code>flush tables t with read lock;\n\nflush tables with read lock;\n</code></pre><p>这两个flush语句，如果指定表t的话，代表的是只关闭表t；如果没有指定具体的表名，则表示关闭MySQL里所有打开的表。</p><p>但是正常这两个语句执行起来都很快，除非它们也被别的线程堵住了。</p><p>所以，出现Waiting for table flush状态的可能情况是：有一个flush tables命令被别的语句堵住了，然后它又堵住了我们的select语句。</p><p>现在，我们一起来复现一下这种情况，<strong>复现步骤</strong>如图6所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/2b/9c/2bbc77cfdb118b0d9ef3fdd679d0a69c.png?wh=939*203\" alt=\"\"></p><center><span class=\"reference\">图6 Waiting for table flush的复现步骤</span></center><p>在session A中，我故意每行都调用一次sleep(1)，这样这个语句默认要执行10万秒，在这期间表t一直是被session A“打开”着。然后，session B的flush tables t命令再要去关闭表t，就需要等session A的查询结束。这样，session C要再次查询的话，就会被flush 命令堵住了。</p><p>图7是这个复现步骤的show processlist结果。这个例子的排查也很简单，你看到这个show processlist的结果，肯定就知道应该怎么做了。</p><p><img src=\"https://static001.geekbang.org/resource/image/39/7e/398407014180be4146c2d088fc07357e.png?wh=1224*212\" alt=\"\"></p><center><span class=\"reference\">图 7 Waiting for table flush的show processlist 结果</span></center><h2>等行锁</h2><p>现在，经过了表级锁的考验，我们的select 语句终于来到引擎里了。</p><pre><code>mysql&gt; select * from t where id=1 lock in share mode; \n</code></pre><p>上面这条语句的用法你也很熟悉了，我们在第8篇<a href=\"https://time.geekbang.org/column/article/70562\">《事务到底是隔离的还是不隔离的？》</a>文章介绍当前读时提到过。</p><p>由于访问id=1这个记录时要加读锁，如果这时候已经有一个事务在这行记录上持有一个写锁，我们的select语句就会被堵住。</p><p>复现步骤和现场如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/3e/75/3e68326b967701c59770612183277475.png?wh=920*173\" alt=\"\"></p><center><span class=\"reference\">图 8 行锁复现</span></center><p><img src=\"https://static001.geekbang.org/resource/image/3c/8f/3c266e23fc307283aa94923ecbbc738f.png?wh=1285*223\" alt=\"\"></p><center><span class=\"reference\">图 9 行锁show processlist 现场</span></center><p>显然，session A启动了事务，占有写锁，还不提交，是导致session B被堵住的原因。</p><p>这个问题并不难分析，但问题是怎么查出是谁占着这个写锁。如果你用的是MySQL 5.7版本，可以通过sys.innodb_lock_waits 表查到。</p><p>查询方法是：</p><pre><code>mysql&gt; select * from t sys.innodb_lock_waits where locked_table='`test`.`t`'\\G\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/d8/18/d8603aeb4eaad3326699c13c46379118.png?wh=864*669\" alt=\"\"></p><center><span class=\"reference\">图10 通过sys.innodb_lock_waits 查行锁</span></center><p>可以看到，这个信息很全，4号线程是造成堵塞的罪魁祸首。而干掉这个罪魁祸首的方式，就是KILL QUERY 4或KILL 4。</p><p>不过，这里不应该显示“KILL QUERY 4”。这个命令表示停止4号线程当前正在执行的语句，而这个方法其实是没有用的。因为占有行锁的是update语句，这个语句已经是之前执行完成了的，现在执行KILL QUERY，无法让这个事务去掉id=1上的行锁。</p><p>实际上，KILL 4才有效，也就是说直接断开这个连接。这里隐含的一个逻辑就是，连接被断开的时候，会自动回滚这个连接里面正在执行的线程，也就释放了id=1上的行锁。</p><h1>第二类：查询慢</h1><p>经过了重重封“锁”，我们再来看看一些查询慢的例子。</p><p>先来看一条你一定知道原因的SQL语句：</p><pre><code>mysql&gt; select * from t where c=50000 limit 1;\n</code></pre><p>由于字段c上没有索引，这个语句只能走id主键顺序扫描，因此需要扫描5万行。</p><p>作为确认，你可以看一下慢查询日志。注意，这里为了把所有语句记录到slow log里，我在连接后先执行了 set long_query_time=0，将慢查询日志的时间阈值设置为0。</p><p><img src=\"https://static001.geekbang.org/resource/image/d8/3c/d8b2b5f97c60ae4fc4a03c616847503c.png?wh=873*88\" alt=\"\"></p><center><span class=\"reference\">图11 全表扫描5万行的slow log</span></center><p>Rows_examined显示扫描了50000行。你可能会说，不是很慢呀，11.5毫秒就返回了，我们线上一般都配置超过1秒才算慢查询。但你要记住：<strong>坏查询不一定是慢查询</strong>。我们这个例子里面只有10万行记录，数据量大起来的话，执行时间就线性涨上去了。</p><p>扫描行数多，所以执行慢，这个很好理解。</p><p>但是接下来，我们再看一个只扫描一行，但是执行很慢的语句。</p><p>如图12所示，是这个例子的slow log。可以看到，执行的语句是</p><pre><code>mysql&gt; select * from t where id=1；\n</code></pre><p>虽然扫描行数是1，但执行时间却长达800毫秒。</p><p><img src=\"https://static001.geekbang.org/resource/image/66/46/66f26bb885401e8e460451ff6b0c0746.png?wh=831*74\" alt=\"\"></p><center><span class=\"reference\">图12 扫描一行却执行得很慢</span></center><p>是不是有点奇怪呢，这些时间都花在哪里了？</p><p>如果我把这个slow log的截图再往下拉一点，你可以看到下一个语句，select * from t where id=1 lock in share mode，执行时扫描行数也是1行，执行时间是0.2毫秒。</p><p><img src=\"https://static001.geekbang.org/resource/image/bd/d2/bde83e269d9fa185b27900c8aa8137d2.png?wh=832*73\" alt=\"\"></p><center><span class=\"reference\">图 13 加上lock in share mode的slow log</span></center><p>看上去是不是更奇怪了？按理说lock in share mode还要加锁，时间应该更长才对啊。</p><p>可能有的同学已经有答案了。如果你还没有答案的话，我再给你一个提示信息，图14是这两个语句的执行输出结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/1f/1c/1fbb84bb392b6bfa93786fe032690b1c.png?wh=595*353\" alt=\"\"></p><center><span class=\"reference\">图14 两个语句的输出结果</span></center><p>第一个语句的查询结果里c=1，带lock in share mode的语句返回的是c=1000001。看到这里应该有更多的同学知道原因了。如果你还是没有头绪的话，也别着急。我先跟你说明一下复现步骤，再分析原因。</p><p><img src=\"https://static001.geekbang.org/resource/image/84/ff/84667a3449dc846e393142600ee7a2ff.png?wh=936*322\" alt=\"\"></p><center><span class=\"reference\">图15 复现步骤</span></center><p>你看到了，session A先用start transaction with consistent snapshot命令启动了一个事务，之后session B才开始执行update 语句。</p><p>session B执行完100万次update语句后，id=1这一行处于什么状态呢？你可以从图16中找到答案。</p><p><img src=\"https://static001.geekbang.org/resource/image/46/8c/46bb9f5e27854678bfcaeaf0c3b8a98c.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图16 id=1的数据状态</span></center><p>session B更新完100万次，生成了100万个回滚日志(undo log)。</p><p>带lock in share mode的SQL语句，是当前读，因此会直接读到1000001这个结果，所以速度很快；而select * from t where id=1这个语句，是一致性读，因此需要从1000001开始，依次执行undo log，执行了100万次以后，才将1这个结果返回。</p><p>注意，undo log里记录的其实是“把2改成1”，“把3改成2”这样的操作逻辑，画成减1的目的是方便你看图。</p><h1>小结</h1><p>今天我给你举了在一个简单的表上，执行“查一行”，可能会出现的被锁住和执行慢的例子。这其中涉及到了表锁、行锁和一致性读的概念。</p><p>在实际使用中，碰到的场景会更复杂。但大同小异，你可以按照我在文章中介绍的定位方法，来定位并解决问题。</p><p>最后，我给你留一个问题吧。</p><p>我们在举例加锁读的时候，用的是这个语句，select * from t where id=1 lock in share mode。由于id上有索引，所以可以直接定位到id=1这一行，因此读锁也是只加在了这一行上。</p><p>但如果是下面的SQL语句，</p><pre><code>begin;\nselect * from t where c=5 for update;\ncommit;\n</code></pre><p>这个语句序列是怎么加锁的呢？加的锁又是什么时候释放呢？</p><p>你可以把你的观点和验证方法写在留言区里，我会在下一篇文章的末尾给出我的参考答案。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h1>上期问题时间</h1><p>在上一篇文章最后，我留给你的问题是，希望你可以分享一下之前碰到过的、与文章中类似的场景。</p><p>@封建的风 提到一个有趣的场景，值得一说。我把他的问题重写一下，表结构如下：</p><pre><code>mysql&gt; CREATE TABLE `table_a` (\n  `id` int(11) NOT NULL,\n  `b` varchar(10) DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `b` (`b`)\n) ENGINE=InnoDB;\n</code></pre><p>假设现在表里面，有100万行数据，其中有10万行数据的b的值是’1234567890’， 假设现在执行语句是这么写的:</p><pre><code>mysql&gt; select * from table_a where b='1234567890abcd';\n</code></pre><p>这时候，MySQL会怎么执行呢？</p><p>最理想的情况是，MySQL看到字段b定义的是varchar(10)，那肯定返回空呀。可惜，MySQL并没有这么做。</p><p>那要不，就是把’1234567890abcd’拿到索引里面去做匹配，肯定也没能够快速判断出索引树b上并没有这个值，也很快就能返回空结果。</p><p>但实际上，MySQL也不是这么做的。</p><p>这条SQL语句的执行很慢，流程是这样的：</p><ol>\n<li>\n<p>在传给引擎执行的时候，做了字符截断。因为引擎里面这个行只定义了长度是10，所以只截了前10个字节，就是’1234567890’进去做匹配；</p>\n</li>\n<li>\n<p>这样满足条件的数据有10万行；</p>\n</li>\n<li>\n<p>因为是select *， 所以要做10万次回表；</p>\n</li>\n<li>\n<p>但是每次回表以后查出整行，到server层一判断，b的值都不是’1234567890abcd’;</p>\n</li>\n<li>\n<p>返回结果是空。</p>\n</li>\n</ol><p>这个例子，是我们文章内容的一个很好的补充。虽然执行过程中可能经过函数操作，但是最终在拿到结果后，server层还是要做一轮判断的。</p><p>评论区留言点赞板：</p><blockquote>\n<p>@赖阿甘 提到了等号顺序问题，实际上MySQL优化器执行过程中，where 条件部分， a=b和 b=a的写法是一样的。<br>\n@沙漠里的骆驼 提到了一个常见的问题。相同的模板语句，但是匹配行数不同，语句执行时间相差很大。这种情况，在语句里面有order by这样的操作时会更明显。<br>\n@Justin 回答了我们正文中的问题，如果id 的类型是整数，传入的参数类型是字符串的时候，可以用上索引。</p>\n</blockquote>","comments":[{"had_liked":false,"id":54285,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1545820838,"is_pvip":false,"replies":[{"id":"19688","content":"分析得非常好。<br>两个模式下，各增加一个session 4 : update t set c=100 where id=10看看哦<br><br>基本就全了👍🏿","user_name":"作者回复","comment_id":54285,"uid":"1264162","ip_address":"","utype":1,"ctime":1545832467,"user_name_real":"林晓斌"}],"discussion_count":19,"race_medal":0,"score":"787524836006","product_id":100020801,"comment_content":"最近几张干货越来越多了,很实用,收获不少.先回答今天的问题<br>版本5.7.13<br>rc模式下:<br>session 1:<br>begin;<br>select * from t where c=5 for update; <br>session 2:<br>delete from t where c=10 --等待<br>session 3:<br>insert into t values(100001,8) --成功<br>session 1:<br>commit<br>session 2:事务执行成功<br>rr模式下:<br>begin;<br>select * from t where c=5 for update; <br>session 2:<br>delete from t where c=10 --等待<br>session 3:<br>insert into t values(100001,8) --等待<br>session 1:<br>commit<br>session 2:事务执行成功<br>session 3：事务执行成功<br>从上面这两个简单的例子,可以大概看出上锁的流程.<br>不管是rr模式还是rc模式,这条语句都会先在server层对表加上MDL S锁,然后进入到引擎层。<br><br>rc模式下,由于数据量不大只有10W。通过实验可以证明session 1上来就把该表的所有行都锁住了。<br>导致其他事务要对该表的所有现有记录做更新,是阻塞状态。为什么insert又能成功?<br>说明rc模式下for update语句没有上gap锁,所以不阻塞insert对范围加插入意向锁,所以更新成功。<br>session 1commit后,session 2执行成功。表明所有行的x锁是在事务提交完成以后才释放。<br><br>rr模式下,session 1和session 2与rc模式下都一样,说明rr模式下也对所有行上了X锁。<br>唯一的区别是insert也等待了,是因为rr模式下对没有索引的更新,聚簇索引上的所有记录，都被加上了X锁。其次，聚簇索引每条记录间的间隙(GAP)，也同时被加上了GAP锁。由于gap锁阻塞了insert要加的插入意向锁,导致insert也处于等待状态。只有当session 1 commit完成以后。session 1上的所有锁才会释放,S2,S3执行成功<br><br>由于例子中的数据量还比较小,如果数据量达到千万级别,就比较直观的能看出,上锁是逐行上锁的一个过程.扫描一条上一条,直到所有行扫描完,rc模式下对所有行上x锁。rr模式下不仅对所有行上X锁,还对所有区间上gap锁.直到事务提交或者回滚完成后,上的锁才会被释放。","like_count":184,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434417,"discussion_content":"分析得非常好。\n两个模式下，各增加一个session 4 : update t set c=100 where id=10看看哦\n\n基本就全了👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545832467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1304123,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e6/3b/6d68cb72.jpg","nickname":"邹涛","note":"","ucode":"B81FF267A59CE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193397,"discussion_content":"\n版本：mysql 5.6.39\nCREATE TABLE `t` (\n  `a` int(11) NOT NULL,\n  `b` int(11) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\ninsert into t values(1,1),(2,2),(3,3),(4,4),(5,5);\n采用READ-COMMITTED隔离级别\n案例1、\nsession A：\nbegin;\nupdate t set a=6 where b=1;\nsession B：\nbegin;\nupdate t set a=7 where b=2;\nA和B均能执行成功\n问题1：官档上说对于RC且全表扫描的update，先逐行添加行锁然后释放掉不符合where条件的，那么session A成功对(1,1)加锁，理论上session B在扫描(1,1)并尝试加锁时会被阻塞，为何还能执行成功？官档链接：https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html\n\n案例2：\nsession A：\nbegin;\nupdate t set a=6 where b=1;\nsession B：\nbegin;\ndelete from t where b=2; -- 被阻塞\n问题2：为何案例1 中的session B不会被阻塞，而案例2的却被session A的行数阻塞，update和delete都是全部扫描，难道加锁机制不一样？\n\n作者回复:\n好问题，在read-commited隔离级别下，update语句\n有一个“semi-consistent” read优化，\n\n意思是，如果update语句碰到一个已经被锁了的行，会读入最新的版本，然后判断一下是不是满足查询条件，\na)如果不满足，就直接跳过；\nb) 如果满足，才进入锁等待\n\n你的第二个问题：这个策略，只对update有效，delete无效\n","likes_number":29,"is_delete":false,"is_hidden":false,"ctime":1583151147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312862,"discussion_content":"注意一下,层主对RC模式下的结论有些错误,\nRC模式下的 select * from t where c=5 for update;\n最终锁的只是c=5的record,不是全表,\n因为RC下,做了过滤,把不符合条件的数据进行了解锁!\n\n1.delete 执行时,由于扫描数据需要获取行锁,锁冲突,所以阻塞.\n2.而 update t set c=c+1 where c = 10 不会被阻塞,\n因为RC模式下,针对UPDATE操作,有个 &#34;semi-consistent&#34; read优化，保证其读到最新数据.\n\n挺迷惑的,现在有了确切的答案. \ndelete 不享受&#34;semi-consistent&#34;待遇\n","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1602837020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319917,"discussion_content":"我测试情况是rc下 &#34;update t set c=c+1 where c = 10 &#34; 也阻塞了!","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604194885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312862,"ip_address":""},"score":319917,"extra":""},{"author":{"id":2448277,"avatar":"https://static001.geekbang.org/account/avatar/00/25/5b/95/462890c6.jpg","nickname":"叶涛","note":"","ucode":"B45348979BE159","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367224,"discussion_content":"你测试的有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618299545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":319917,"ip_address":""},"score":367224,"extra":""}]},{"author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81981,"discussion_content":"rc模式下事务A会先锁住表里的行，然后语句执行完会释放不符合条件的锁，所以最终事务A只锁住了(i=5,c=5)这一行。可以用session 5验证:update t set c=100 where id=5;这个语句就会被阻塞","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1576304469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343828,"discussion_content":"RC 隔离级别下 mysql 版本 5.7.19 \nupdate t set c= c-1 where c =5 与 update t set c= c-1 where c =6 不阻塞\nupdate t set c= c-1 where c =5 与 delete from  t  where c =6 阻塞\nselect * from t  where c =5 for update 与 update t set c= c-1 where c =6  不阻塞\nselect * from t  where c =5 for update 与 delete from  t  where c =6 阻塞","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611192565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1308784,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","nickname":"某、人","note":"","ucode":"ADB42AA12A11C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344048,"discussion_content":"看评论下面的解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611264963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":343828,"ip_address":""},"score":344048,"extra":""}]},{"author":{"id":1287774,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a6/5e/b05254a6.jpg","nickname":"Mhy","note":"","ucode":"DE19BCAD1F856E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4836,"discussion_content":"请问在RC隔离级别下老师的session 4 : update t set c=100 where id=10这个SQL不会被阻塞的原因是什么，按理说已经被事务A的行锁锁住了所有行","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565763931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1357623,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJmBKrLvqOIXDDbj3ocEIJzqsQx2e5VLDBSX6LmofYtprWwKaVAmHUqU2z3mjREHX8n9eLLiavlPg/132","nickname":"wg1993","note":"","ucode":"D5112FEFDB1DF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1287774,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a6/5e/b05254a6.jpg","nickname":"Mhy","note":"","ucode":"DE19BCAD1F856E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89070,"discussion_content":"mysql在实际执行过程中server其实还是会过滤的，如果不满足锁的条件会调用unlock_row方法释放锁","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576748585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4836,"ip_address":""},"score":89070,"extra":""},{"author":{"id":1257046,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/56/aa3690ef.jpg","nickname":"云云","note":"","ucode":"1A08803F6EBD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1287774,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a6/5e/b05254a6.jpg","nickname":"Mhy","note":"","ucode":"DE19BCAD1F856E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":103761,"discussion_content":"RR模式下，For a unique index with a unique search condition, InnoDB locks only the index record found, not the gap before it. \nRC模式下，For UPDATE or DELETE statements, InnoDB holds locks only for rows that it updates or deletes. Record locks for nonmatching rows are released after MySQL has evaluated the WHERE condition. This greatly reduces the probability of deadlocks, but they can still happen.","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1577376685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4836,"ip_address":""},"score":103761,"extra":""}]},{"author":{"id":2925869,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/a5/2d/dce6f248.jpg","nickname":"风中告退","note":"","ucode":"6D157E902BECEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554059,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646203426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1322625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2e/81/1efeeb75.jpg","nickname":"winniewhwh","note":"","ucode":"0ED96152857B09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389538,"discussion_content":"数据库操纵语言是DML不是MDL","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629331574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1668117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJLgibqHsl97Oq3nvnEVz7V3kaGKLmia0Ja8c4yXO7QeLKiakganRJomNGgYToW4RnFs60zibDTHicjE5w/132","nickname":"学而不思则惘","note":"","ucode":"8ED2B08AA5A755","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1322625,"avatar":"https://static001.geekbang.org/account/avatar/00/14/2e/81/1efeeb75.jpg","nickname":"winniewhwh","note":"","ucode":"0ED96152857B09","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391253,"discussion_content":"这写的是mdl读锁，你看的是啥。。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1630372561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389538,"ip_address":""},"score":391253,"extra":""}]},{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327412,"discussion_content":"聚簇索引怎么会加gap锁呢。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605832976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327409,"discussion_content":"insert不是直接加插入意向锁——而是insert前，判断如果现有锁不与插入意向锁冲突的情况下，是直接写的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605832556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1304123,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e6/3b/6d68cb72.jpg","nickname":"邹涛","note":"","ucode":"B81FF267A59CE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193184,"discussion_content":"你好， \nRC模式下，添加测试结果如下：\nsession 5 ：\nupdate t set c=200 where c=20 --成功。？？？？？为啥这个能成功？？？？ \n而上述session 2:\ndelete from t where c=10 --等待 \n个人理解：这两个由于c没索引，所以要全表扫描，由于select * from t where c=5 for update;  这行被锁住，所以只能等待，按理说session5 跟session2是一样的结果需等待啊。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583134981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1541014,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/96/73ff13a0.jpg","nickname":"天亮前说晚安","note":"","ucode":"1D82EE562A7C71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":162186,"discussion_content":"这里元数据锁不会造成等待啊，元数据锁只有修改表结构的时候才会完成阻塞吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580970213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1541014,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/96/73ff13a0.jpg","nickname":"天亮前说晚安","note":"","ucode":"1D82EE562A7C71","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194085,"discussion_content":"不会造成锁等待,DDL和DML之间分别是MDL的写锁和MDL的读锁,所以表级别上的隐士锁以上列子是不会互斥的因为都是执行DML语句","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583189420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":162186,"ip_address":""},"score":194085,"extra":""}]}]},{"had_liked":false,"id":54435,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1545870464,"is_pvip":false,"replies":[{"id":"19748","content":"准确","user_name":"作者回复","comment_id":54435,"uid":"1264162","ip_address":"","utype":1,"ctime":1545875376,"user_name_real":"林晓斌"}],"discussion_count":6,"race_medal":0,"score":"469697305728","product_id":100020801,"comment_content":"RR隔离级别下，为保证binlog记录顺序，非索引更新会锁住全表记录，且事务结束前不会对不符合条件记录有逐步释放的过程。","like_count":110,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434454,"discussion_content":"准确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545875376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344187,"discussion_content":"保证binlog记录顺序，然后呢？ RC级别下难道就不需要保证binlog记录顺序，不是很懂","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1611318565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576108,"discussion_content":"https://www.hollischuang.com/archives/6427?spm=a2c6h.12873639.article-detail.4.a601addch9qNlF","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1655280228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":344187,"ip_address":""},"score":576108,"extra":""}]},{"author":{"id":2497728,"avatar":"https://static001.geekbang.org/account/avatar/00/26/1c/c0/b8ff566a.jpg","nickname":"我是大橙子132","note":"","ucode":"61660568CF07C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564593,"discussion_content":"主要还是保证可重复读，解决幻读问题吧？保证statement的binlog顺序是”顺带“好处吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650286232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2497728,"avatar":"https://static001.geekbang.org/account/avatar/00/26/1c/c0/b8ff566a.jpg","nickname":"我是大橙子132","note":"","ucode":"61660568CF07C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576107,"discussion_content":"RR也解决不了幻读啊。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655280160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":564593,"ip_address":""},"score":576107,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577426,"discussion_content":"rr就是解决了幻读......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656090294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":576107,"ip_address":""},"score":577426,"extra":""}]}]},{"had_liked":false,"id":54002,"user_name":"薛畅","can_delete":false,"product_type":"c1","uid":1307437,"ip_address":"","ucode":"1B665F467169F3","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/2d/711d73b2.jpg","comment_is_top":false,"comment_ctime":1545785290,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"250653888458","product_id":100020801,"comment_content":"回来老师的问题：<br>在 Read Committed 隔离级别下，会锁上聚簇索引中的所有记录；<br>在 Repeatable Read 隔离级别下，会锁上聚簇索引中的所有记录，并且会锁上聚簇索引内的所有 GAP；<br>在上面两个隔离级别的情况下，如果设置了 innodb_locks_unsafe_for_binlog 开启 semi-consistent read 的话，对于不满足查询条件的记录，MySQL 会提前放锁，不过加锁的过程是不可避免的。","like_count":59,"discussions":[{"author":{"id":1304123,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e6/3b/6d68cb72.jpg","nickname":"邹涛","note":"","ucode":"B81FF267A59CE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193231,"discussion_content":"innodb_locks_unsafe_for_binlog  应该只在RR模式下有用，RC模式下server层会有个类似判断解锁动作。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583139728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1813207,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/aa/d7/a417ad5b.jpg","nickname":"CharAt","note":"","ucode":"D7D44B48FC4E79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381187,"discussion_content":"RR模型下是一下全部锁？还是逐行扫描逐行加锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624946648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54097,"user_name":"老杨同志","can_delete":false,"product_type":"c1","uid":1246199,"ip_address":"","ucode":"3F334F0CFD3DE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/f7/3a493bec.jpg","comment_is_top":false,"comment_ctime":1545793685,"is_pvip":false,"replies":[{"id":"19568","content":"👍🏿 思路清晰<br><br><br>隔离级别再愉快地改成RR试试😄","user_name":"作者回复","comment_id":54097,"uid":"1264162","ip_address":"","utype":1,"ctime":1545794483,"user_name_real":"林晓斌"}],"discussion_count":6,"race_medal":0,"score":"203409256597","product_id":100020801,"comment_content":"愉快的做一下思考题<br>begin;<br>select * from t where c=5 for update;<br>commit;<br>历史知识的结论是，innodb先锁全表的所有行，返回server层，判断c是否等于5，然后释放c！=5的行锁。<br>验证方法：<br>事务A执行 锁住一行c！=5的记录 比如id =3 c=3<br> select * from t where id = 3 for update 或者 update t set c=4 where id =3<br>然后启动新事务B执行上面的语句select * from t where c=5 for update; 看看有没有被阻塞。<br>用于判断事务B的语句会不会试图锁不满足条件的记录。<br>然后把事务A和事务B的执行顺序对调一下，也就是先执行B在执行A。看看有没有阻塞，<br>判断在事务B加锁成功的情况下会不会释放不满足查询条件记录的行锁。<br>","like_count":48,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434353,"discussion_content":"👍🏿 思路清晰\n\n\n隔离级别再愉快地改成RR试试😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545794483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2113915,"avatar":"https://static001.geekbang.org/account/avatar/00/20/41/7b/cda2e622.jpg","nickname":"致良知","note":"","ucode":"73C722E31B726A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358897,"discussion_content":"这样的描述 思路还清晰  隔离级别都没有说明 作者 提问者的脑袋里是面粉  你这回答给了点水  成浆糊了哈\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616072896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1813207,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/aa/d7/a417ad5b.jpg","nickname":"CharAt","note":"","ucode":"D7D44B48FC4E79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2113915,"avatar":"https://static001.geekbang.org/account/avatar/00/20/41/7b/cda2e622.jpg","nickname":"致良知","note":"","ucode":"73C722E31B726A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381162,"discussion_content":"看不懂不要喷，先自己找原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624934363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":358897,"ip_address":""},"score":381162,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2113915,"avatar":"https://static001.geekbang.org/account/avatar/00/20/41/7b/cda2e622.jpg","nickname":"致良知","note":"","ucode":"73C722E31B726A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560038,"discussion_content":"是你水平不够,已经很清晰了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649138435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":358897,"ip_address":""},"score":560038,"extra":""}]},{"author":{"id":1338203,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6b/5b/16a93d9d.jpg","nickname":"- -","note":"","ucode":"FBB2869AD5FEA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308888,"discussion_content":"换成RR，先执行B，会阻塞A，为啥RR 不会释放不满足条件的行？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601110617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2052476,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Qq6oLfOTgKzjiculoUDicdv7WoY1iabPfOTumibWeInVP2Mnod9XVPrNSClvIiaLbvtDlIjRnWUNaXcYwREGzlcaDog/132","nickname":"Geek_在下蟑螂王","note":"","ucode":"E1F5BBB5BC5962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1338203,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6b/5b/16a93d9d.jpg","nickname":"- -","note":"","ucode":"FBB2869AD5FEA5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320598,"discussion_content":"回小将军的话，会有间隙锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604409300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308888,"ip_address":""},"score":320598,"extra":""}]}]},{"had_liked":false,"id":54382,"user_name":"沙漠里的骆驼","can_delete":false,"product_type":"c1","uid":1012559,"ip_address":"","ucode":"5EC18A71B3A594","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/4f/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1545839069,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"199114334685","product_id":100020801,"comment_content":"@高枕<br>这里有些资料提供给你参考: <br>1. 何登成的技术博客: 加锁分析 http:&#47;&#47;hedengcheng.com&#47;?p=771<br>2. 锁的常见种类: http:&#47;&#47;www.aneasystone.com&#47;archives&#47;2017&#47;11&#47;solving-dead-locks-two.html","like_count":46,"discussions":[{"author":{"id":1009527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/77/c1310aad.jpg","nickname":"剑衣清风","note":"","ucode":"470CD81F6612F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338203,"discussion_content":"更新下 何登成 的博客域名已经被抢注，可以看看这里 https://github.com/hedengcheng/tech","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1609212567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81982,"discussion_content":"很好的参考资料，谢谢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576304823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272315,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/nSvVtStiaQzslFM7YRnlhPyTgSHGoXvOqlSQS8rMEmfnFCtasNxRiaVfrRcMlkuOSq1iaReQD0CiaGHMVibsVMNkAxQ/132","nickname":"justin","note":"","ucode":"09AE502D6A28D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373648,"discussion_content":"写的相当不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620812852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119149,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1564532365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"164773289613","product_id":100020801,"comment_content":"课前思考<br>1：为啥只查一行的语句，也执行这么慢？<br>查的慢，基本上就是索引使用的问题，和查一行还是N行(N不是巨大)，没有必然联系。查一行慢，猜测没有走索引查询，且数据量比较大。<br>课后思考<br>1：阅后发现自己的无知，只查询一行的语句，也比较慢，原因从大到小可分为三种情况？<br>第一MySQL数据库本身被堵住了，比如：系统或网络资源不够<br>第二SQL语句被堵住了，比如：表锁，行锁等，导致存储引擎不执行对应的SQL语句<br>第三确实是索引使用不当，没有走索引<br>第四是表中数据的特点导致的，走了索引，但回表次数庞大<br>感谢老师的分享，真是醍醐灌顶呀😄","like_count":38},{"had_liked":false,"id":54095,"user_name":"小确幸","can_delete":false,"product_type":"c1","uid":1099329,"ip_address":"","ucode":"C090505CB2DB69","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/41/b868f086.jpg","comment_is_top":false,"comment_ctime":1545793563,"is_pvip":false,"replies":[{"id":"19569","content":"一般说全表扫描默认是值“扫瞄主键索引”","user_name":"作者回复","comment_id":54095,"uid":"1264162","ip_address":"","utype":1,"ctime":1545794511,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"138984747035","product_id":100020801,"comment_content":"问一下：索引扫描与全表扫描，有什么异同点？","like_count":32,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434352,"discussion_content":"一般说全表扫描默认是值“扫瞄主键索引”","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1545794511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2148247,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c7/97/fc90c7c3.jpg","nickname":"whoru","note":"","ucode":"5F7E10193089F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412107,"discussion_content":"准确来说全表扫描是指遍历主键索引的叶子节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636078206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54922,"user_name":"xm","can_delete":false,"product_type":"c1","uid":1254296,"ip_address":"","ucode":"9A08EB6F201D74","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/98/bd96932f.jpg","comment_is_top":false,"comment_ctime":1545982182,"is_pvip":false,"replies":[{"id":"19882","content":"嗯，这个是一种思路，见过这么干的😄","user_name":"作者回复","comment_id":54922,"uid":"1264162","ip_address":"","utype":1,"ctime":1545988658,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"117510099174","product_id":100020801,"comment_content":"@Elvis<br>Elvis<br><br>0<br>老师，最近项目mysql遇到一个难题， 表数据每天230万，一条语句的查询条件有1—40个，最坏情况下40，请问老师有没有好的建议，非常感谢<br>2018-12-27<br> 作者回复<br>这个是索引最头大的问题之一了… 如果有明显的某类组合查询是最多的还好，否则确实很麻烦。<br><br>我觉得应对这种大数据量的多条件的查询的话换种思路，将mysql复杂的组合查询条件导入到es中作为key，主键id作为value，复杂的查询经过es后得到主键id，之后走mysql会好很多，目前公司是这样做的，老师觉得怎么样？","like_count":28,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434612,"discussion_content":"嗯，这个是一种思路，见过这么干的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545988658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2562181,"avatar":"https://static001.geekbang.org/account/avatar/00/27/18/85/83ac977e.jpg","nickname":"半年 2号","note":"","ucode":"7F23C4532A5513","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540671,"discussion_content":"如果有很多种不同查询情况，是第一次查询就插入到es? 后面查询相同条件的就取es里面的id值? 但是如果在这查询条件下后面有新的数据进来尼，不会造成数据不完整吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640135278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54510,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1545886434,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"104625101538","product_id":100020801,"comment_content":"对于课后问题，select * from t where c=5 for update，<br>当级别为RR时，因为字段c上没有索引，会扫主键索引，这时会把表中的记录都加上X锁。同时，因为对于innodb来说，当级别为RR时，是可以解决幻读的，此时对于每条记录的间隙还要加上GAP锁。也就是说，表上每一条记录和每一个间隙都锁上了。<br>当级别为RC时，因为字段c上没有索引，会扫主键索引，这时会把表中的记录都加上X锁。<br><br>另外，之前看过相关文章，MySQL在实际实现中有些优化措施，比如当RC时，在MySQL server过滤条件，发现不满足后，会把不满足条件的记录释放锁（这里就是把 c!=5的记录释放锁），这里会违背两阶段的约束。当然，之前每条记录的加锁操作还是不能省略的。<br>还有，对于semi consistent read开启的情况下，也会提前释放锁。<br>","like_count":24,"discussions":[{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":185144,"discussion_content":"间隙 是什么东西？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582598432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54791,"user_name":"似水流年","can_delete":false,"product_type":"c1","uid":1304443,"ip_address":"","ucode":"D114A8E273133C","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/7b/71da8283.jpg","comment_is_top":false,"comment_ctime":1545963065,"is_pvip":false,"discussion_count":12,"race_medal":0,"score":"96035243577","product_id":100020801,"comment_content":"请问老师，为什么select blocking_pid from sys.schema_table_lock_waits;查不到mdl锁的进程id，显示为空。","like_count":22,"discussions":[{"author":{"id":1228852,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c0/34/0574bb44.jpg","nickname":"最初的印象","note":"","ucode":"4DD68307FA274E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131504,"discussion_content":"执行以下这句再试一下：update performance_schema.setup_instruments set ENABLED=&#39;YES&#39;,TIMED=&#39;YES&#39; where name=&#39;wait/lock/metadata/sql/mdl&#39;;","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1578841239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2034669,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0b/ed/4969d2f8.jpg","nickname":"柯南爱上指针","note":"","ucode":"5BF7E8AC28F9CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228852,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c0/34/0574bb44.jpg","nickname":"最初的印象","note":"","ucode":"4DD68307FA274E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290107,"discussion_content":"这句话是干啥的呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594346524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":131504,"ip_address":""},"score":290107,"extra":""},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2034669,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0b/ed/4969d2f8.jpg","nickname":"柯南爱上指针","note":"","ucode":"5BF7E8AC28F9CF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373692,"discussion_content":"启动metadata lock的监控，不然schema_table_lock_waits表没有数据","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1620826536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":290107,"ip_address":""},"score":373692,"extra":""},{"author":{"id":3004698,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/d9/1a/f5bb1a23.jpg","nickname":"LL","note":"","ucode":"1E498475B2D9EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228852,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c0/34/0574bb44.jpg","nickname":"最初的印象","note":"","ucode":"4DD68307FA274E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577516,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656158579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":131504,"ip_address":""},"score":577516,"extra":""}]},{"author":{"id":1937317,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8f/a5/d613dfc7.jpg","nickname":"小正","note":"","ucode":"D6D68DCC9650FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333675,"discussion_content":"文章里讲了，5.7以后是查sys.innodb_lock_waits","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607590562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2679253,"avatar":"https://static001.geekbang.org/account/avatar/00/28/e1/d5/c57a4bd8.jpg","nickname":"Prisoner","note":"","ucode":"AE469ACC071692","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394403,"discussion_content":"也是empty，mysql版本是 5.7.26-log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631869698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2213774,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLWlndLduM3SGiauJvia0oVdhH8FhbviaS9EsD0fM93PwEKg0Syk1I5strKbsZNoXE0klauTGAwW1DGQ/132","nickname":"陈新卫","note":"","ucode":"6EF232730D0FD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363999,"discussion_content":" 5.7.17-log 版本可以查询到锁表的连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617346220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","nickname":"x-ray","note":"","ucode":"8363F0C4D0AC0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331019,"discussion_content":"mariadb没有sys库咋搞？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606747677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484273,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/f1/8e3ce0e4.jpg","nickname":"🍋🥬🐟","note":"","ucode":"4191D6E6CB6D3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306926,"discussion_content":"锁等待的时候执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600419616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182120,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oCx7GX9P4w5cml1cpbFD1x21Biad3MLCTOhTPJvicRW3xp9C8xTgdiaOSdpFyvibKSfcD1LL4miaT7VtqqKms6rgujg/132","nickname":"zshanjun","note":"","ucode":"0C99216D6FBDB8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52376,"discussion_content":"我的也是empty","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574045478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030164,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/xEFZxrfm76MG5TBP2Bhfo8g8JPRuoKTYLmgcyvvzHswz4EpSC3SiaxP2ib6RYoAymicVVRTHJCMylHaNmFXOseUlg/132","nickname":"hq","note":"","ucode":"5630BE81A2D201","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":26704,"discussion_content":"我测的也是empty(⊙﹏⊙)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570614479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363803,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cf/5b/4b96b6f3.jpg","nickname":"别吵我睡觉","note":"","ucode":"A1BC2A1AB7CB82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22591,"discussion_content":"怎么@一下老师，我测也是empty","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569656828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98570,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1559032645,"is_pvip":false,"replies":[{"id":"37471","content":"在5.5及以后的版本中，lock table t1 write 就是通过加mdl写锁，来阻止其他线程访问的","user_name":"作者回复","comment_id":98570,"uid":"1264162","ip_address":"","utype":1,"ctime":1560473335,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"83163411269","product_id":100020801,"comment_content":"lock table t1 write这个写锁跟mdl写锁，本质上是不是一个东西？","like_count":19,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451740,"discussion_content":"在5.5及以后的版本中，lock table t1 write 就是通过加mdl写锁，来阻止其他线程访问的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560473335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54431,"user_name":"张永志","can_delete":false,"product_type":"c1","uid":1208727,"ip_address":"","ucode":"E54B75EF3F63B3","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/97/f1a3d398.jpg","comment_is_top":false,"comment_ctime":1545870009,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"78855281337","product_id":100020801,"comment_content":"RC隔离级别下，对非索引字段更新，有个锁全表记录的过程，不符合条件的会及时释放行锁，不必等事务结束时释放；而直接用索引列更新，只会锁索引查找值和行。<br><br><br>","like_count":18,"discussions":[{"author":{"id":1026078,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/1e/0b124c05.jpg","nickname":"冥王星","note":"","ucode":"995A56EF84E5F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579822,"discussion_content":"所以无法防止重复读和幻读吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657703075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78722,"user_name":"孙志强","can_delete":false,"product_type":"c1","uid":1325997,"ip_address":"","ucode":"9C070F1E4EC6FF","user_header":"https://static001.geekbang.org/account/avatar/00/14/3b/ad/31193b83.jpg","comment_is_top":false,"comment_ctime":1553224188,"is_pvip":true,"replies":[{"id":"28898","content":"你再看下08篇哈<br>简单说，一致性视图只是一个数组+一个高水位，是要靠undo log来获取老版本的数据的","user_name":"作者回复","comment_id":78722,"uid":"1264162","ip_address":"","utype":1,"ctime":1553415199,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"53092831740","product_id":100020801,"comment_content":"亲爱的老师,我这里有一个问题?困惑好久<br>一致性读为啥还要处理别的事务回滚日志?一致性读不是直接返回视图里的值吗?undo log在没有事务使用的时候会清除掉?","like_count":12,"discussions":[{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307567,"discussion_content":"一致性视图只是一个数组+一个高水位  到位。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600687993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444208,"discussion_content":"你再看下08篇哈\n简单说，一致性视图只是一个数组+一个高水位，是要靠undo log来获取老版本的数据的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1553415199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54788,"user_name":"滔滔","can_delete":false,"product_type":"c1","uid":1303342,"ip_address":"","ucode":"6968B5771AF79D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/2e/77ad18f4.jpg","comment_is_top":false,"comment_ctime":1545962792,"is_pvip":false,"replies":[{"id":"19863","content":"是的","user_name":"作者回复","comment_id":54788,"uid":"1264162","ip_address":"","utype":1,"ctime":1545974654,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"40200668456","product_id":100020801,"comment_content":"老师，我有个问题问，在讲隔离级别的时候讲过可重复读级别下，默认读操作(select查询，不是当前读)读到的是某条数据的某个历史版本，而所有这些历史版本数据都是以undo log的形式存在的对吗？需要找某个历史版本数据就直接执行对应undo log，而不是事先把历史版本的数据保存下来，是这样的吗？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434564,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545974654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74695,"user_name":"浩涛","can_delete":false,"product_type":"c1","uid":1390697,"ip_address":"","ucode":"DCF935D3F9FC6D","user_header":"https://static001.geekbang.org/account/avatar/00/15/38/69/7b11b341.jpg","comment_is_top":false,"comment_ctime":1552282667,"is_pvip":false,"replies":[{"id":"27533","content":"目前5.7是比较主流的，就用最新GA版本吧，记得做全量回归测试","user_name":"作者回复","comment_id":74695,"uid":"1264162","ip_address":"","utype":1,"ctime":1552407086,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"27322086443","product_id":100020801,"comment_content":"老师，我们公司今年打算迁数据库，也就是oracle迁到mysql，目前要决定选用哪个版本和分支，不知道要怎么分析，您有什么好的建议吗？","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442654,"discussion_content":"目前5.7是比较主流的，就用最新GA版本吧，记得做全量回归测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552407086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54889,"user_name":"蠢蠢欲动的腹肌","can_delete":false,"product_type":"c1","uid":1007326,"ip_address":"","ucode":"B10550BF463017","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/de/4e7ec66d.jpg","comment_is_top":false,"comment_ctime":1545978396,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"27315782172","product_id":100020801,"comment_content":"老师，您好<br>    我的mysql版本5.7.24，尝试的时候发现了如下问题<br>    锁住了表T<br>        mysql&gt; lock table T write;<br>        Query OK, 0 rows affected (0.00 sec)<br>   另一个terminal查询时被阻塞，但是查不到blocking_pid ，这是什么情况呢<br>   mysql&gt; select blocking_pid  from sys.schema_table_lock_waits;<br>   Empty set (0.00 sec)<br>  ps:发现查询schema_table_lock_waits表与lock table的语句不能放在一个terminal执行，否则会报<br>Table &#39;schema_table_lock_waits&#39; was not locked with LOCK TABLES<br>自行尝试的同学要注意下，老师有空的话也可以帮看看为什么。。。","like_count":6,"discussions":[{"author":{"id":1186252,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/cc/abb7bfe3.jpg","nickname":"Mr.0x16","note":"","ucode":"E1406E619EA8B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1351,"discussion_content":"执行一下select * from performance_schema.setup_instruments where name=&#39;wait/lock/metadata/sql/mdl&#39;，看一下ENABLED和TIMED是不是都是YES，只有两个都是YES的时候才能执行文章中说的操作。\n具体可以参考官方文档：\nhttps://dev.mysql.com/doc/refman/5.7/en/sys-schema-table-lock-waits.html\nhttps://dev.mysql.com/doc/refman/5.7/en/metadata-locks-table.html","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1562571954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1242455,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","nickname":"天天向上","note":"","ucode":"0CCCA6F4DCC480","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199161,"discussion_content":"老师在第6讲里讲了，lock tables 语法除了会限制别的线程的读写外，也限定了本线程接下来的操作对象。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583564717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350677,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9c/15/719f1f44.jpg","nickname":"等风来","note":"","ucode":"5B7FF74A51F534","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377254,"discussion_content":"排查一下是否开启performance_schema=on","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622560802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2679253,"avatar":"https://static001.geekbang.org/account/avatar/00/28/e1/d5/c57a4bd8.jpg","nickname":"Prisoner","note":"","ucode":"AE469ACC071692","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1350677,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9c/15/719f1f44.jpg","nickname":"等风来","note":"","ucode":"5B7FF74A51F534","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394404,"discussion_content":"开启了。还是查不到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631869818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":377254,"ip_address":""},"score":394404,"extra":""}]},{"author":{"id":1363803,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cf/5b/4b96b6f3.jpg","nickname":"别吵我睡觉","note":"","ucode":"A1BC2A1AB7CB82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22588,"discussion_content":"我测试select * from sys.schema_table_lock_waits;也是Empty set (0.01 sec)，你知道原因了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569656753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2679253,"avatar":"https://static001.geekbang.org/account/avatar/00/28/e1/d5/c57a4bd8.jpg","nickname":"Prisoner","note":"","ucode":"AE469ACC071692","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1363803,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cf/5b/4b96b6f3.jpg","nickname":"别吵我睡觉","note":"","ucode":"A1BC2A1AB7CB82","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394405,"discussion_content":"有解吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631869835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":22588,"ip_address":""},"score":394405,"extra":""}]}]},{"had_liked":false,"id":54320,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1318970,"ip_address":"","ucode":"2417242560360A","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/3a/90db6a24.jpg","comment_is_top":false,"comment_ctime":1545828513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23020664993","product_id":100020801,"comment_content":"现在每周都在着急的等这个专栏更新，因为之前自己也学了用了很久，买之前还在犹豫是否值得买，现在真的感觉太值了！","like_count":5},{"had_liked":false,"id":54051,"user_name":"鹏","can_delete":false,"product_type":"c1","uid":1209661,"ip_address":"","ucode":"B514BA450CB317","user_header":"","comment_is_top":false,"comment_ctime":1545789473,"is_pvip":false,"replies":[{"id":"19563","content":"Flush 过程中，查也不行的","user_name":"作者回复","comment_id":54051,"uid":"1264162","ip_address":"","utype":1,"ctime":1545791006,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"23020625953","product_id":100020801,"comment_content":"所以，出现 Waiting for table flush 状态的可能情况是：有一个 flush tables 命令被别的语句堵住了，然后它又堵住了我们的 select 语句。<br><br><br>记得之前文章讲 flush table会导致该表 不能增改删  但是为什么session c的查询也会被block呢","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434340,"discussion_content":"Flush 过程中，查也不行的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545791006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54028,"user_name":"满天星","can_delete":false,"product_type":"c1","uid":1148315,"ip_address":"","ucode":"CE85702F2FB3D7","user_header":"https://static001.geekbang.org/account/avatar/00/11/85/9b/fc33c974.jpg","comment_is_top":false,"comment_ctime":1545787578,"is_pvip":false,"replies":[{"id":"19560","content":"这是被别的并发事务又改回去了吗😓<br>要么是update的值跟原值相同<br>要么是update条件没有匹配到行<br>额，最好给一下每个语句执行后的affacted rows , 还有binlog里的日志内容，才好分析","user_name":"作者回复","comment_id":54028,"uid":"1264162","ip_address":"","utype":1,"ctime":1545789733,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"23020624058","product_id":100020801,"comment_content":"老师，最近遇到了一个问题，看您有什么建议。<br>业务场景是这样的：<br>1.开启事务<br>2.在表a插入一条记录<br>3.在表b更新一条记录<br>4.在表c更新一条记录<br>5.提交事务<br>看程序日志所有sql都没问题（没看数据库日志），但是结果是2的那条插入了，3和4都没更新，这个问题有哪几种情况？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434331,"discussion_content":"这是被别的并发事务又改回去了吗😓\n要么是update的值跟原值相同\n要么是update条件没有匹配到行\n额，最好给一下每个语句执行后的affacted rows , 还有binlog里的日志内容，才好分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545789733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024486,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","nickname":"旭东(Frank)","note":"","ucode":"176FA629800062","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":78760,"discussion_content":"如果代码没问题，那就是幻读所致吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576017649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53969,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1545783100,"is_pvip":false,"replies":[{"id":"19555","content":"抱歉，是要写成where c=5 , 发起堪误了","user_name":"作者回复","comment_id":53969,"uid":"1264162","ip_address":"","utype":1,"ctime":1545789352,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"23020619580","product_id":100020801,"comment_content":"课后问题：d这一列不存在，但是还是要加MDL锁，释放时间应该是事务提交时。","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434304,"discussion_content":"抱歉，是要写成where c=5 , 发起堪误了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545789352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112050,"user_name":"残天噬魂","can_delete":false,"product_type":"c1","uid":1506609,"ip_address":"","ucode":"A2AD8303A4518D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/q2HwchogzNiavKhIB4GfAxH6B88NhSoC7B7keVEUqiaP6JPokDUNJLYehocOyqYqrhA3iaxywyRXLYkYJjDUQESZw/132","comment_is_top":false,"comment_ctime":1562660267,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18742529451","product_id":100020801,"comment_content":"为啥我开启了性能监控，按照案例1执行加锁，select * from sys.schema_table_lock_waits;这个没有结果啊","like_count":4,"discussions":[{"author":{"id":1082785,"avatar":"https://static001.geekbang.org/account/avatar/00/10/85/a1/2442332c.jpg","nickname":"郭俊杰","note":"","ucode":"D328E5738A4413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1712,"discussion_content":"俺也一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562835793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54328,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1545829007,"is_pvip":false,"replies":[{"id":"19680","content":"Flush tables是会关掉表，然后下次请求重新读表信息的<br><br>第一次打开表其实就是open_table_definitions，包括读表信息一类的<br><br>之后再有查询就是拷贝一个对象，加一个计数这样的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545831983,"ip_address":"","comment_id":54328,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18725698191","product_id":100020801,"comment_content":"老师我请教一个问题:<br>flush tables中close table的意思是说的把open_tables里的表全部关闭掉?下次如果有关于某张表的操作<br>又把frm file缓存进Open_table_definitions,把表名缓存到open_tables,还是open_table只是一个计数?<br>不是特别明白flush table和打开表是个什么流程","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434429,"discussion_content":"Flush tables是会关掉表，然后下次请求重新读表信息的\n\n第一次打开表其实就是open_table_definitions，包括读表信息一类的\n\n之后再有查询就是拷贝一个对象，加一个计数这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545831983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373701,"discussion_content":"flush table with read lock不是加全局读锁呢，怎么还关闭表了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620827624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91316,"user_name":"乔纳森","can_delete":false,"product_type":"c1","uid":1045107,"ip_address":"","ucode":"51EC9FAE071388","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/73/1c7bceae.jpg","comment_is_top":false,"comment_ctime":1556978204,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14441880092","product_id":100020801,"comment_content":"performance_schema=ON;<br>server  version: 5.7.25-28 (percona server)<br>林老师，好想有个群可以快速交流的，但也知道IM 信息过多，容易给人困扰<br>","like_count":3},{"had_liked":false,"id":62535,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1548084534,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14432986422","product_id":100020801,"comment_content":"通过这一节的阅读学习，老师讲述了一个查询语句被锁住和查询慢的两种情况。<br><br>在被锁住中，通过等MDL锁，堵住了select查询语句，可以通过kiss掉持有MDL写锁。第二种是flush被别的语句堵住，然后flush堵住select语句。第三种是等行锁，通过sys.innodb_lock_wait查到，然后kill。<br><br>在查询慢中，lock in sharde mode直接读1000001<br>而select * from t where id=1需要从1000001执行100百万行，所以查询就慢了。<br><br>老师昨天给我了学习的建议，每个事例在Mysql中去运行做，有不懂的问老师。真的非常感动，也给我了会一直跟随老师学习的动力和勇气。学了专栏的一半，需要把之前学的内容复习，接下来我会跟进老师的课程同时动手做之前的案例，不懂有我的思考之后，会及时请教老师。","like_count":3,"discussions":[{"author":{"id":1655940,"avatar":"https://static001.geekbang.org/account/avatar/00/19/44/84/4da14994.jpg","nickname":"呆瓜","note":"","ucode":"C98C7B224D0640","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348733,"discussion_content":"Flush是加读锁，为什么会阻塞后面的select语句？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612693784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1655940,"avatar":"https://static001.geekbang.org/account/avatar/00/19/44/84/4da14994.jpg","nickname":"呆瓜","note":"","ucode":"C98C7B224D0640","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373700,"discussion_content":"\nflush成功获得锁之前必须要等所有的语句执行完之后，包括select","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620827496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348733,"ip_address":""},"score":373700,"extra":""}]}]},{"had_liked":false,"id":56118,"user_name":"体育菩萨","can_delete":false,"product_type":"c1","uid":1322720,"ip_address":"","ucode":"AB4017CD117592","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/e0/b22a0145.jpg","comment_is_top":false,"comment_ctime":1546394163,"is_pvip":false,"replies":[{"id":"20203","content":"额前面的文章有😄 04篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546394965,"ip_address":"","comment_id":56118,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14431296051","product_id":100020801,"comment_content":"老师,回表是什么意思,有明确的定义吗?有执行的详细步骤吗?我在百度上搜不到相关的信息啊.回表的英文是什么?我想上google查一查","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434935,"discussion_content":"额前面的文章有😄 04篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546394965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54600,"user_name":"小李子","can_delete":false,"product_type":"c1","uid":1196293,"ip_address":"","ucode":"C5593E33CA6F4C","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/05/5ba603f2.jpg","comment_is_top":false,"comment_ctime":1545911451,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14430813339","product_id":100020801,"comment_content":"老师，为什么session B 执行了 select in share mode ，在等行锁的时候，session C 执行 <br>select * from sys.innodb_lock_waits where locked_table=&#39;`test`.`t`&#39; 会报这个错 <br>[Err] 1356 - View &#39;sys.innodb_lock_waits&#39; references invalid table(s) or column(s) or function(s) or definer&#47;invoker of view lack rights to use them，而超时之后，又可以查了？另外，\\G 参数会报语法错误？","like_count":3,"discussions":[{"author":{"id":1228852,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c0/34/0574bb44.jpg","nickname":"最初的印象","note":"","ucode":"4DD68307FA274E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131622,"discussion_content":"select * from sys.innodb_lock_waits;你用这句sql查，不要加where条件了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578843046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228852,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c0/34/0574bb44.jpg","nickname":"最初的印象","note":"","ucode":"4DD68307FA274E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194477,"discussion_content":"请问为啥我innodb_lock_waits查出来都是空的呢，都已经锁了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583224079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":131622,"ip_address":""},"score":194477,"extra":""}]}]},{"had_liked":false,"id":54026,"user_name":"Arvin LI","can_delete":false,"product_type":"c1","uid":1275595,"ip_address":"","ucode":"23AA16137DBF6B","user_header":"https://static001.geekbang.org/account/avatar/00/13/76/cb/ca506ee2.jpg","comment_is_top":false,"comment_ctime":1545787379,"is_pvip":false,"replies":[{"id":"19561","content":"对的<br>这个知识点由于在前面的文章中已经提到过，就没再展开","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545789818,"ip_address":"","comment_id":54026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14430689267","product_id":100020801,"comment_content":"select * from t where id = 1執行800那个case，如果将sessionA的start transaction with consistant snapshot改为start transaction则不会执行那么慢，原因，这种情况下会在执行第一个select的时候才真正开启事务，因为sessionB没有显示开启事务，但是执行update语句本身就有事务，只不过执行完即提交，那么select * from t where id = 1将会返回最新值，也就是1000001","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434329,"discussion_content":"对的\n这个知识点由于在前面的文章中已经提到过，就没再展开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545789818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53946,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1545778878,"is_pvip":false,"replies":[{"id":"19557","content":"有😄 这个是在后面的文章中会用到的例子","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545789433,"ip_address":"","comment_id":53946,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14430680766","product_id":100020801,"comment_content":"老师，有没有遇到过select语句一直处于killed状态的情况？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434295,"discussion_content":"有😄 这个是在后面的文章中会用到的例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545789433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68030,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1550392679,"is_pvip":false,"replies":[{"id":"24113","content":"如果对带索引的字段加锁，只会锁住指定数据行，<br>还有间隙哈， 可以跳看一下21篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550402186,"ip_address":"","comment_id":68030,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10140327271","product_id":100020801,"comment_content":"实操了一把。在RR级别下，无论X锁还是S锁。如果对带索引的字段加锁，只会锁住指定数据行。但是对无索引字段进行加锁，会对整表数据进行逐一加锁。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439480,"discussion_content":"如果对带索引的字段加锁，只会锁住指定数据行，\n还有间隙哈， 可以跳看一下21篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550402186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58669,"user_name":"唐名之","can_delete":false,"product_type":"c1","uid":1004394,"ip_address":"","ucode":"F472C71E043E03","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JKKWS6TzhncvAA0p0NDiaATPIvMicSM76vNAg9IG1ibibcJYPAiaicYjZfq4gAV8GRtcTpOibfRD8vzqHBtL0ibmhwQsbg/132","comment_is_top":false,"comment_ctime":1547171064,"is_pvip":false,"replies":[{"id":"21220","content":"SELECT * from sys.schema_table_lock_waits; 是需要配置里面把performance_schema打开的；<br><br>前面两个语句是只会显示跟innodb的行锁相关的，表级的锁不会显示在这两个表","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547179511,"ip_address":"","comment_id":58669,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137105656","product_id":100020801,"comment_content":"环境：mysql-5.7.24<br>show VARIABLES LIKE &#39;performance%&#39;;<br>performance_schema ON<br><br>A窗口执行：lock table t WRITE;<br><br>B窗口执行：select * from t where id=1;<br><br>C窗口执行：show PROCESSLIST;<br>53\tslave_user\tDESKTOP-00HHFO4:63064\t\tBinlog Dump\t3027\tMaster has sent all binlog to slave; waiting for more updates\t<br>54\troot\tlocalhost:64572\t\tSleep\t157\t\t<br>55\troot\tlocalhost:64573\tmysql_action\tSleep\t158\t\t<br>56\troot\tlocalhost:64575\tmysql_action\tSleep\t156\t\t<br>57\troot\tlocalhost:64576\tmysql_action\tSleep\t156\t\t<br>58\troot\tlocalhost:64577\tmysql_action\tSleep\t156\t\t<br>59\troot\tlocalhost:64578\tmysql_action\tSleep\t156\t\t<br>60\troot\tlocalhost:64579\tmysql_action\tSleep\t144\t\t<br>61\troot\tlocalhost:64581\tmysql_action\tQuery\t140\tWaiting for table metadata lock\tselect * from t where id=1<br>62\troot\tlocalhost:64583\tmysql_action\tQuery\t0\tstarting\t<br><br>show PROCESSLIST<br>已出现：“Waiting for table metadata ” 但这三张表都查不出数据，求解；<br>SELECT * FROM INFORMATION_SCHEMA.INNODB_LOCKS;<br>SELECT * FROM INFORMATION_SCHEMA.INNODB_LOCK_WAITS；<br>SELECT * from sys.schema_table_lock_waits;","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436160,"discussion_content":"SELECT * from sys.schema_table_lock_waits; 是需要配置里面把performance_schema打开的；\n\n前面两个语句是只会显示跟innodb的行锁相关的，表级的锁不会显示在这两个表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547179511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58272,"user_name":"M","can_delete":false,"product_type":"c1","uid":1238308,"ip_address":"","ucode":"DFEA2ECECFAA6E","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/24/753e7a29.jpg","comment_is_top":false,"comment_ctime":1547024735,"is_pvip":false,"replies":[{"id":"21016","content":"多谢鼓励<br><br>看文章的同学都很细致，不敢不认真😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547043784,"ip_address":"","comment_id":58272,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136959327","product_id":100020801,"comment_content":"老师讲的很好","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435982,"discussion_content":"多谢鼓励\n\n看文章的同学都很细致，不敢不认真😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547043784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54651,"user_name":"郭健","can_delete":false,"product_type":"c1","uid":1102204,"ip_address":"","ucode":"169645EBF3B46C","user_header":"https://static001.geekbang.org/account/avatar/00/10/d1/7c/4639f22c.jpg","comment_is_top":false,"comment_ctime":1545922956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10135857548","product_id":100020801,"comment_content":"谢谢老师的回答，网上的总是说没索引用的是表锁，这是一种严重的误导，太谢谢老师了！！！","like_count":2},{"had_liked":false,"id":54401,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1545843244,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10135777836","product_id":100020801,"comment_content":"老师你好，图3上方提到MySQL 5.7 版本修改了 MDL 的加锁策略，不能复现第六章的场景。但我认为只要仍然满足：DML操作加MDL读锁，DDL操作加MDL写锁，并且事务提交才释放锁，那么就可以复现啊。。。所以5.7到底是改了什么导致无法复现的呢？<br>","like_count":2,"discussions":[{"author":{"id":1672786,"avatar":"https://static001.geekbang.org/account/avatar/00/19/86/52/91c7d112.jpg","nickname":"Garen","note":"","ucode":"0608C88F83EF0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35850,"discussion_content":"应该是onlineDDL吧！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571310331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342507,"user_name":"我是大橙子132","can_delete":false,"product_type":"c1","uid":2497728,"ip_address":"","ucode":"61660568CF07C9","user_header":"https://static001.geekbang.org/account/avatar/00/26/1c/c0/b8ff566a.jpg","comment_is_top":false,"comment_ctime":1650295355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5945262651","product_id":100020801,"comment_content":"1、加锁<br>RC：会锁上主键索引中的所有行；<br>RR：会锁上主键索引中的行，并且还会锁上id间的空隙（间隙锁）。<br><br>2、释放<br>RC：没匹配到的行锁提前释放，除此以外，两阶段协议，c=5即id=5的行的行锁commit时释放。<br>RR：两阶段协议，行锁和间隙锁在commit时释放。<br><br>另外，RC隔离级别下，如果设置了innodb_locks_unsafe_for_binlog 开启 semi-consistent read的话，对于不满足查询条件的记录，MySQL 会提前放锁，不过加锁的过程是不可避免的。（这里的select加了for update可以约等update语句）<br><br>可参考：<br>15.7.2.1 Transaction Isolation Levels<br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;innodb-transaction-isolation-levels.html<br><br>Using READ COMMITTED has additional effects:<br>For UPDATE or DELETE statements, InnoDB holds locks only for rows that it updates or deletes. <br>Record locks for nonmatching rows are released after MySQL has evaluated the WHERE condition. <br>This greatly reduces the probability of deadlocks, but they can still happen.<br><br>For UPDATE statements, if a row is already locked, <br>InnoDB performs a “semi-consistent” read, returning the latest committed version to MySQL so that MySQL can determine whether the row matches the WHERE condition of the UPDATE. <br>If the row matches (must be updated), MySQL reads the row again and this time InnoDB either locks it or waits for a lock on it.<br><br>大致意思：<br>RC隔离级别有两个额外情况：<br>1、更新（UPDATE）和删除（删除）语句最终仅对匹配到的行加锁；（在判断WHERE条件后会释放掉没匹配到的行锁，虽然还会发生死锁，但这个额外动作降低了发生的可能性）<br>2、专门针对更新（UPDATE）语句还有一个优化：某行如果被锁了，InnoDB会有个“半一致性读（semi-consistent read）”，具体表现为获取该行当前值，若刚好是要UPDATE的行，就只能等待，否则还可以跳过继续往下执行（而DELETE语句遇到带锁行只能阻塞等锁释放）<br>综上两点：UPDATE只对匹配到的行加锁，只要改行没锁就能执行；DELETE也仅对匹配到的行加锁，但是扫描时一遇到有锁的行就被阻塞（BLOCKED）；<br>","like_count":2},{"had_liked":false,"id":224752,"user_name":"Tomy","can_delete":false,"product_type":"c1","uid":1192601,"ip_address":"","ucode":"D7E49E90B0D60F","user_header":"https://static001.geekbang.org/account/avatar/00/12/32/99/91b58bf7.jpg","comment_is_top":false,"comment_ctime":1591529400,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5886496696","product_id":100020801,"comment_content":"如何查看慢查询日志","like_count":1,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403556,"discussion_content":"show variables like &#39;slow_query_log_file&#39;  查看慢日志名称","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634107919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373704,"discussion_content":"可以在线开启，long_query_time、slow_query_log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620829721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2034632,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","nickname":"图灵机","note":"","ucode":"EB02DB653AD591","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283169,"discussion_content":"看你配置文件是否配置了启动慢查询，以及慢查询日志文件位置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592202612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177365,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1581372449,"is_pvip":true,"discussion_count":1,"race_medal":2,"score":"5876339745","product_id":100020801,"comment_content":"MySQL实战45讲<br>19 | 为什么我只查一行的语句，也执行这么慢？<br><br>为了更新 1000000 次，所以简单写了个 procedure，从我的慢查询日志来看，似乎两条 Select 语句的差别不像丁奇老师专栏里面说的那么明显，大概是不到十倍的时间差距。如果再执行一轮，那么几乎没有差别。<br><br>delimiter ;;<br>create procedure update10k()<br>begin<br> declare i int;<br> set i=1;<br> while(i&lt;1000000) do<br>  update ttt set c=c+1 where id=1;<br>  set i=i+1;<br> end while;<br>end;;<br>delimiter ;<br><br>对于思考题，那个 for update 不太理解，查了一下 MySQL 的在线文档，看到在 MySQL 8.0 版本之后 select … for share 替代了 select … lock in share mode。<br><br>select … for update 其实就是一个 reading lock，用来保证在事务执行完成之前，该条记录不会被其他进程改写。<br><br>这两种读锁都会在事务提交或者回滚后解除。另外比较有意思的是，select 还有 nowait 和 skip locked 两个参数。<br><br>回到思考题，我觉得在 begin 之后会加一个锁（读一致性锁？），然后在 select … for update 的时候加一个读锁，然后 commit 之后，依次释放读锁和读一致性锁。<br><br>@封建的风 的那个留言，在上一讲老师没有回复，我也就忽略了，经过来时的讲解，还真是一个挺有意思的例子。<br><br>之前一直没搞明白什么是 S 锁，什么是 X 锁，还有 gap 锁，再一次去找 MySQL 的文档。<br><br>原来 S 锁就是 shared lock 允许事务保留一个读锁，X 锁就是 exclusive lock 允许事务持有写锁（不允许其他事务更新或删除行），这两个都是 InnoDB 引擎实现的行锁。<br><br>MySQL 还支持 multiple granularity locking，有 intention locks，对应的 select … for share 设置 IS 锁（intention shared lock），select … for update 设置 IX 锁（intention exclusive lock）。<br><br>gap lock 用于在索引记录之间上锁，类似于 <br><br>select c1 from t where c1 between 10 and 20 for update.<br><br>gap lock 是在并发和性能之间的一种妥协。<br><br>还有 next-key lock，insert intention lock, auto-inc lock, predicate lock，InnoDB 引擎的锁还真是多啊。<br><br>复现了一下 @某、人 的测试方案，并且按照老师的提示增加了 session 4: update t set c=100 where id=10; 在 RC 模式下 session 4 可以执行成功，RR 模式下 session 4 等待。<br><br>按照 @老杨同志 的验证方法，在 RR 模式下，session A 执行：<br><br>begin;<br>select * from t where c=4 for update;<br><br>然后 session B 执行：select * from t where c=5 for update; 被锁，然后 session A 提交 commit;，session B 之执行。<br><br>如果反过来，那么 session A 不受影响。<br><br>在 RC 模式下，我做出来的结果是同样的，这个有点奇怪。<br><br>我现在的学习模式基本上是用半个小时左右看专栏，然后半个小时看留言，剩下的留言就放弃了。","like_count":1,"discussions":[{"author":{"id":1417349,"avatar":"https://static001.geekbang.org/account/avatar/00/15/a0/85/54e55c04.jpg","nickname":"狂奔的y先生","note":"","ucode":"C0D78EC4B16E7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393605,"discussion_content":"后一个session的查询sql，where条件不能再以c为条件了，如果还是以c字段为条件的话，又会锁住全部记录，所以你在RR和RC级别下做出来的做过是一样的。后一个session的查询sql，where条件换成id字段就可以看出RR和RC级别下的差别了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631515724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172145,"user_name":"小柒","can_delete":false,"product_type":"c1","uid":1137277,"ip_address":"","ucode":"09AFAB893C7CC9","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/7d/f25ef54e.jpg","comment_is_top":false,"comment_ctime":1579095645,"is_pvip":false,"replies":[{"id":"66826","content":"是的，👍细致，我们发起勘误","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1579149394,"ip_address":"","comment_id":172145,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5874062941","product_id":100020801,"comment_content":"文末<br><br>评论区留言点赞板：<br>@赖阿甘 提到了等号顺序问题，时间上 MySQL 优化器执行过程中，where 条件部分， a=b 和 b=a 的写法是一样的。<br><br>中<br>“时间上”是否笔误？按语境可能是“实际上”？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481637,"discussion_content":"是的，👍细致，我们发起勘误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579149394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111034,"user_name":"hal","can_delete":false,"product_type":"c1","uid":1359844,"ip_address":"","ucode":"98E625F7327FD9","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/e4/45758517.jpg","comment_is_top":false,"comment_ctime":1562426718,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5857394014","product_id":100020801,"comment_content":"这里小提一个之前遇到的问题，场景是做一个半同步复制，创建一个用户，正常的grant命令，卡着，不动了。也没有结果返回。然后另起个连接，show processlist;  破案了。。。。<br>我们这边数据库使用半同步复制，直接一开始就把半同步的插件打开了，然后执行grant 命令执行之后一直等待从库确认，但是没有这时还从库连接，导致这个数据库一直在等从库返回，直到10分钟后超时。<br>当时解决的办法就是临时关闭半同步复制插件","like_count":1},{"had_liked":false,"id":102489,"user_name":"Larwas","can_delete":false,"product_type":"c1","uid":1105436,"ip_address":"","ucode":"AF6BAA7769311A","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/1c/60ff644d.jpg","comment_is_top":false,"comment_ctime":1560234627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5855201923","product_id":100020801,"comment_content":"老师请教一下： 我的 5.6 没有sys 系统库。 是5.7 才有的吗？5.6 的话要怎么查process id 呢？","like_count":1},{"had_liked":false,"id":54574,"user_name":"高枕","can_delete":false,"product_type":"c1","uid":1310312,"ip_address":"","ucode":"20F6CF75EC9AA4","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/68/e0bebd9a.jpg","comment_is_top":false,"comment_ctime":1545903034,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5840870330","product_id":100020801,"comment_content":"感谢老师耐心解答，感谢沙漠里的骆驼热心推荐！🙏🙏<br>","like_count":1},{"had_liked":false,"id":54376,"user_name":"Chu~♡·の~","can_delete":false,"product_type":"c1","uid":1057960,"ip_address":"","ucode":"69B0FBEC66FD48","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/a8/c0148cb8.jpg","comment_is_top":false,"comment_ctime":1545837079,"is_pvip":false,"replies":[{"id":"19735","content":"下一篇就讲到😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545841550,"ip_address":"","comment_id":54376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840804375","product_id":100020801,"comment_content":"为什么RR级别下，select * from t where c=5 for update会锁住主键上的所有行呢？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434438,"discussion_content":"下一篇就讲到😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545841550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354490,"user_name":"无尽蔚蓝","can_delete":false,"product_type":"c1","uid":2721761,"ip_address":"上海","ucode":"A665DF46833A81","user_header":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b85dce85.jpg","comment_is_top":false,"comment_ctime":1660461202,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1660461202","product_id":100020801,"comment_content":"关于select * from sys.innodb_lock_waits where locked_table=&#39;`test`.`t`&#39;\\G查不到的问题。注意，这个语句里的test是库名字，要换成自己的库名字，另外，如果之前那个select语句Lock wait timeout exceeded;，也会导致这个语句查不到。我用的select * from sys.innodb_lock_waits where locked_table=&#39;`mysql_geek`.`t`&#39;\\G","like_count":1},{"had_liked":false,"id":354472,"user_name":"无尽蔚蓝","can_delete":false,"product_type":"c1","uid":2721761,"ip_address":"广东","ucode":"A665DF46833A81","user_header":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b85dce85.jpg","comment_is_top":false,"comment_ctime":1660450052,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1660450052","product_id":100020801,"comment_content":"等 flush<br>接下来，我给你举另外一种查询被堵住的情况。<br>我在表 t 上，执行下面的 SQL 语句：<br>mysql&gt; select * from information_schema.processlist where id=1;<br><br><br>原文这个语句写错了吧？应该是select * from t where id = 1吧？","like_count":1},{"had_liked":false,"id":342187,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1650092393,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650092393","product_id":100020801,"comment_content":"导致查询一行数据也很慢的原因总结<br>1.有其他线持有这个表的mdl写锁，在更改表结构<br>2.被表所阻塞<br>3.被行锁阻塞<br>4.没有命中索引","like_count":0},{"had_liked":false,"id":331073,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1642408319,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642408319","product_id":100020801,"comment_content":"思考题：MySQL只会在c=5这一行的当前数据版本上加写锁，且在事务提交时释放写锁。","like_count":0},{"had_liked":false,"id":315667,"user_name":"特立独行的猪","can_delete":false,"product_type":"c1","uid":1465344,"ip_address":"","ucode":"1440F96375740A","user_header":"https://static001.geekbang.org/account/avatar/00/16/5c/00/5d11e68d.jpg","comment_is_top":false,"comment_ctime":1633940153,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633940153","product_id":100020801,"comment_content":"第一次知道有flush这种操作","like_count":0},{"had_liked":false,"id":314580,"user_name":"特立独行的猪","can_delete":false,"product_type":"c1","uid":1465344,"ip_address":"","ucode":"1440F96375740A","user_header":"https://static001.geekbang.org/account/avatar/00/16/5c/00/5d11e68d.jpg","comment_is_top":false,"comment_ctime":1633241078,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633241078","product_id":100020801,"comment_content":"我曾经遇到一个sql，就是表数据量不大，但是却一直不反会结果，直到加了一个索引，才返回结果。但是整过过程中，没有锁持有","like_count":0},{"had_liked":false,"id":312711,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1631949649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631949649","product_id":100020801,"comment_content":"mysql 中的查询慢，可能是某一行被锁住了，这其中涉及到了表锁、行锁和一致性读的概念。","like_count":0},{"had_liked":false,"id":308614,"user_name":"哇咔咔","can_delete":false,"product_type":"c1","uid":2273219,"ip_address":"","ucode":"F34987823ED0D0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Fdia5at9eFlgLbOrWaAYnYnpicfppm5AiaY5bMPpyRrLduewH1RvGFQicMpuCYG6RzWv1A7JicPy4J82ibOxdSribasicg/132","comment_is_top":false,"comment_ctime":1629703776,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1629703776","product_id":100020801,"comment_content":"老师，我想问一个问题，就是bufferpool里加载了数据后，和没加载数据时，访问sql的速度是不一样的；日常调试时，如何一直保持在bufferpool没起作用的场景下进行调试呢？（或者说，我可以怎样清空bufferpool里的缓存？）","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403559,"discussion_content":"把这个变量  innodb_buffer_pool_size的大小调小即可。 可以通过show variables like &#39;innodb_buffer_pool_size&#39; 查看目前的大小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634108316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306733,"user_name":"cz","can_delete":false,"product_type":"c1","uid":1008468,"ip_address":"","ucode":"96385190176F78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/54/c9475cd0.jpg","comment_is_top":false,"comment_ctime":1628684842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628684842","product_id":100020801,"comment_content":"这个例子给力，站在MySQL的角度，这个优化完全没有问题， 是正常的优化手段。 但是实际导致了效果特别差，这种情况就只能应用层业务代码来适配优化了","like_count":0},{"had_liked":false,"id":299945,"user_name":"CharAt","can_delete":false,"product_type":"c1","uid":1813207,"ip_address":"","ucode":"D7D44B48FC4E79","user_header":"https://static001.geekbang.org/account/avatar/00/1b/aa/d7/a417ad5b.jpg","comment_is_top":false,"comment_ctime":1624932090,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1624932090","product_id":100020801,"comment_content":"在刷脏页的时候，数据库对外也不提供读服务嘛？","like_count":0,"discussions":[{"author":{"id":1518795,"avatar":"","nickname":"Geek_2ac804","note":"","ucode":"EDF69B20030BB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555224,"discussion_content":"所以慢查询还有种可能是页不在内存，需要刷进来，但是这个时候redolog满了，正在刷，所以导致了SQL慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646814299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1813207,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/aa/d7/a417ad5b.jpg","nickname":"CharAt","note":"","ucode":"D7D44B48FC4E79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381210,"discussion_content":"我理解错了，刷脏页对外提供读服务，可能会慢。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624954422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295059,"user_name":"红高粱","can_delete":false,"product_type":"c1","uid":2365564,"ip_address":"","ucode":"0DD331C8E01A81","user_header":"https://static001.geekbang.org/account/avatar/00/24/18/7c/91d6dd83.jpg","comment_is_top":false,"comment_ctime":1622199566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622199566","product_id":100020801,"comment_content":"赞","like_count":0},{"had_liked":false,"id":294400,"user_name":"陈家睿","can_delete":false,"product_type":"c1","uid":1830128,"ip_address":"","ucode":"570EEC6AB6CB21","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJSaE2tKBHbZpdvicX7CNiaacXsvEHzcjMRQ5LiauDA7wFIwsCltj0HyggQsYh49VJCj5iciawceZZnl9w/132","comment_is_top":false,"comment_ctime":1621928544,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621928544","product_id":100020801,"comment_content":"5.7的MDL锁加锁策略，不是读写互斥了吗？","like_count":0},{"had_liked":false,"id":292648,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1620911080,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1620911080","product_id":100020801,"comment_content":"下面这句话有点疑问，为什么不方便呢？直接差到线程id直接kill不行？<br><br><br>但是，由于在 show processlist 的结果里面，session A 的 Command 列是“Sleep”，导致查找起来很不方便。","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580344,"discussion_content":"因为实际情况下可能很多连接都是这个状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658114738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287002,"user_name":"刘逸","can_delete":false,"product_type":"c1","uid":2043906,"ip_address":"","ucode":"37E38490F2324C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/30/02/d48d63f2.jpg","comment_is_top":false,"comment_ctime":1617722013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617722013","product_id":100020801,"comment_content":"RR隔离级别下，为保证binlog记录顺序，非索引更新会锁住全表记录，且事务结束前不会对不符合条件记录有逐步释放的过程。<br>----如何理解“为保证binlog记录顺序”这句话？","like_count":0},{"had_liked":false,"id":277531,"user_name":"小白白不白","can_delete":false,"product_type":"c1","uid":1757797,"ip_address":"","ucode":"270EC3A197A8D9","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d2/65/79d89c77.jpg","comment_is_top":false,"comment_ctime":1612444711,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1612444711","product_id":100020801,"comment_content":"老师 我有关于课后有趣场景的疑问。<br>我使用 where b=0123456789abc 去查询后，又使用show warnings 查看优化器重写后的sql，发现sql的where字段b并没有被截取呀？<br>是我理解错show warnings的意思了，还是有其他原因？","like_count":0,"discussions":[{"author":{"id":1171004,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/3c/96c1bc62.jpg","nickname":"卢建文","note":"","ucode":"900A0CE253F2BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376394,"discussion_content":"可以 这样子看，可以看出mysql执行的时候真的优化截断了\nset optimizer_trace=&#34;enabled=on&#34;;\n   select * from table_a where b=&#39;1234567890abcd&#39;;\nSELECT * FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622107724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265054,"user_name":"x-ray","can_delete":false,"product_type":"c1","uid":1140175,"ip_address":"","ucode":"8363F0C4D0AC0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","comment_is_top":false,"comment_ctime":1606746984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606746984","product_id":100020801,"comment_content":"请问，mariadb，没有sys库怎么搞，我只知道sys库的数据都是来自于performance_schema，所以没有sys库的话，怎么查performance_schema，来看innodb_lock_waits ？","like_count":0},{"had_liked":false,"id":240199,"user_name":"Leon","can_delete":false,"product_type":"c1","uid":1380341,"ip_address":"","ucode":"9977EEE2D4934A","user_header":"https://static001.geekbang.org/account/avatar/00/15/0f/f5/dbbce3e9.jpg","comment_is_top":false,"comment_ctime":1596786637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596786637","product_id":100020801,"comment_content":"前辈您好：<br>关于&lt;上期提问时间&gt;中的问题，如果是MySQL5.6之后的版本，通过索引下推技术，会在那条sql执行流程的第三步回表之前做比较吧？","like_count":0},{"had_liked":false,"id":230550,"user_name":"Amo,","can_delete":false,"product_type":"c1","uid":1675087,"ip_address":"","ucode":"B77CBE5C61CDEB","user_header":"https://static001.geekbang.org/account/avatar/00/19/8f/4f/d42fdb9c.jpg","comment_is_top":false,"comment_ctime":1593415708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593415708","product_id":100020801,"comment_content":"老师，select * from sys.schema_table_lock_waits; 这个sql 查询不出来结果呢，但是之前的步骤都能复现，数据库版本是5.7.30 ","like_count":0},{"had_liked":false,"id":226792,"user_name":"zhaozp","can_delete":false,"product_type":"c1","uid":1099706,"ip_address":"","ucode":"BF390F5ED762CD","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","comment_is_top":false,"comment_ctime":1592205351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592205351","product_id":100020801,"comment_content":"获益良多，谢谢~","like_count":0},{"had_liked":false,"id":215046,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1440429,"ip_address":"","ucode":"D8C66E7F61B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/15/fa/ad/3fa02ac7.jpg","comment_is_top":false,"comment_ctime":1588897326,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588897326","product_id":100020801,"comment_content":"mdl锁，等flush，行锁，慢查询","like_count":0},{"had_liked":false,"id":212586,"user_name":"平凡之路","can_delete":false,"product_type":"c1","uid":1669273,"ip_address":"","ucode":"96CE12339BD5FD","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/99/6060eb2d.jpg","comment_is_top":false,"comment_ctime":1588156879,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588156879","product_id":100020801,"comment_content":"老师，你好，看了你的mysql后，学到了很多，老师我有个问题，就是有很多面试的问一张千万级别的表怎么优化？","like_count":0},{"had_liked":false,"id":203618,"user_name":"saltedfish","can_delete":false,"product_type":"c1","uid":1946257,"ip_address":"","ucode":"936571E1AC4139","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b2/91/cf0de36e.jpg","comment_is_top":false,"comment_ctime":1586242024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586242024","product_id":100020801,"comment_content":"老师，&quot;在传给引擎执行的时候，做了字符截断。因为引擎里面这个行只定义了长度是 10，所以只截了前 10 个字节，就是’1234567890’进去做匹配；&quot;，请问下MySQL为什么要这么干呀？现在所有版本都是这样的吗？","like_count":0},{"had_liked":false,"id":203610,"user_name":"saltedfish","can_delete":false,"product_type":"c1","uid":1946257,"ip_address":"","ucode":"936571E1AC4139","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b2/91/cf0de36e.jpg","comment_is_top":false,"comment_ctime":1586240890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586240890","product_id":100020801,"comment_content":"虽然内容是干货，但是感觉这一节看的很不舒服，比如select * from t where id=1 lock in share mode那里返回的是1000001，第一次看到的时候很懵逼。。。难道这么安排的目的是让读者来分析为什么吗？或者可能是我基础不扎实的原因吧，老师见谅。","like_count":0},{"had_liked":false,"id":201182,"user_name":"陈家睿","can_delete":false,"product_type":"c1","uid":1830128,"ip_address":"","ucode":"570EEC6AB6CB21","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJSaE2tKBHbZpdvicX7CNiaacXsvEHzcjMRQ5LiauDA7wFIwsCltj0HyggQsYh49VJCj5iciawceZZnl9w/132","comment_is_top":false,"comment_ctime":1585729073,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585729073","product_id":100020801,"comment_content":"mysql&gt; select * from t where c=50000 limit 1;<br>+-------+-------+<br>| id    | c     |<br>+-------+-------+<br>| 50000 | 50000 |<br>+-------+-------+<br>1 row in set (1 min 43.17 sec)<br><br>mysql&gt; select * from t where id=1;<br>+----+------+<br>| id | c    |<br>+----+------+<br>|  1 |    1 |<br>+----+------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; select * from t where id=1 lock in share mode;<br>+----+------+<br>| id | c    |<br>+----+------+<br>|  1 |    1 |<br>+----+------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; select * from t where c=50000 limit 1;<br>+-------+-------+<br>| id    | c     |<br>+-------+-------+<br>| 50000 | 50000 |<br>+-------+-------+<br>1 row in set (0.01 sec)<br><br>mysql&gt; select * from t where c=50001 limit 1;<br>+-------+-------+<br>| id    | c     |<br>+-------+-------+<br>| 50001 | 50001 |<br>+-------+-------+<br>1 row in set (0.01 sec)<br><br>mysql&gt; select * from t where c=89001 limit 1;<br>+-------+-------+<br>| id    | c     |<br>+-------+-------+<br>| 89001 | 89001 |<br>+-------+-------+<br>1 row in set (0.02 sec)<br><br>mysql&gt; select * from t where c=66666 limit 1;<br>+-------+-------+<br>| id    | c     |<br>+-------+-------+<br>| 66666 | 66666 |<br>+-------+-------+<br>1 row in set (0.01 sec)<br><br>为啥之后的查询都很快了呢，难道43秒查询那个把全表都读到内存中去了吗？","like_count":0,"discussions":[{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344253,"discussion_content":"个人分析 是因为你在第一次select * from t where c=50000 limit 1;时把相关的页顺带一起加载到内存了，后面在查询的时候才会比较快","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611372488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186097,"user_name":"乔丹","can_delete":false,"product_type":"c1","uid":1217413,"ip_address":"","ucode":"D832A9F97A0C7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/85/f5d9474c.jpg","comment_is_top":false,"comment_ctime":1583757184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583757184","product_id":100020801,"comment_content":"begin;select * from t where c=5 for update;commit;<br>加的x锁。直到commit才释放。","like_count":0},{"had_liked":false,"id":179900,"user_name":"ipofss","can_delete":false,"product_type":"c1","uid":1018620,"ip_address":"","ucode":"DE3061C9259F9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","comment_is_top":false,"comment_ctime":1582119507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582119507","product_id":100020801,"comment_content":"sql查询慢的原因：<br>全部语句特别慢：CPU高，IO高<br>个别语句特别慢：等表锁，等行锁，等MDL锁<br>个别语句有时候慢：没上索引，表数据太多了","like_count":0},{"had_liked":false,"id":175803,"user_name":"forever","can_delete":false,"product_type":"c1","uid":1574051,"ip_address":"","ucode":"3EBCD4AB045880","user_header":"https://static001.geekbang.org/account/avatar/00/18/04/a3/95de9a19.jpg","comment_is_top":false,"comment_ctime":1580829863,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580829863","product_id":100020801,"comment_content":"受益匪浅","like_count":0},{"had_liked":false,"id":172147,"user_name":"小柒","can_delete":false,"product_type":"c1","uid":1137277,"ip_address":"","ucode":"09AFAB893C7CC9","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/7d/f25ef54e.jpg","comment_is_top":false,"comment_ctime":1579095795,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579095795","product_id":100020801,"comment_content":"昨天才发现原来 MySQL 等值比较字符串是大小写不敏感的，<br>SELECT &#39;A&#39; ＝&#39;a&#39; 的执行结果为 1，这是为什么呢？","like_count":0,"discussions":[{"author":{"id":1282648,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/58/b4f6365d.jpg","nickname":"小北","note":"","ucode":"3A23079E4AA92E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384754,"discussion_content":"和字符集设置有关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626742760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160834,"user_name":"Anthony","can_delete":false,"product_type":"c1","uid":1309908,"ip_address":"","ucode":"9E0C98A9123365","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d4/743d3f02.jpg","comment_is_top":false,"comment_ctime":1576043713,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576043713","product_id":100020801,"comment_content":"经过测试，是对整个表进行了加锁","like_count":0},{"had_liked":false,"id":153196,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1574178743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574178743","product_id":100020801,"comment_content":"简单的查询，慢的原因：表锁，行锁，一致性读<br>锁最常见的是MDL读&#47;写锁，行读&#47;写锁。一致性读慢是因为事务A在执行过程中，其它事务对记录有很多次的更新，导致事务A要用大量undo log才能拿到启动时的快照","like_count":0},{"had_liked":false,"id":153191,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1574177547,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574177547","product_id":100020801,"comment_content":"看了最后那个例子对MVCC有了新的理解，MVCC中的快照其实是用数据最新值+undo log 实现的，对吗？老师","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136884,"discussion_content":"应该是视图数组+高水位+undolog","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579170390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139952,"user_name":"happiness","can_delete":false,"product_type":"c1","uid":1026587,"ip_address":"","ucode":"C5F25D57C7A1DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/1b/b43c8519.jpg","comment_is_top":false,"comment_ctime":1570772646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570772646","product_id":100020801,"comment_content":"for update是写锁 持有锁以后会执行当前读 在事务提交以后释放锁","like_count":0},{"had_liked":false,"id":132839,"user_name":"alioo","can_delete":false,"product_type":"c1","uid":1022507,"ip_address":"","ucode":"F36A38C1F5FFAB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqOpANMwDibLmj5IGJh6dTw300sZ1BHM5sG3sZv1A1rvCHOiblPD3jgFOiaMVVujtctWnQbVFoNPpRgw/132","comment_is_top":false,"comment_ctime":1568249858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568249858","product_id":100020801,"comment_content":"造成的原因总结：<br>表级锁（mdl，表锁）<br>mdl lock table t write<br>表锁 flush tables t with read lock;<br><br>行锁<br>之前的事物update同一行未提交，行锁未释放<br><br>查询慢<br>未加索引扫描行数多","like_count":0},{"had_liked":false,"id":130574,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1567486281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567486281","product_id":100020801,"comment_content":"老师好!server层和存储引擎层具体负责什么啊?触发回表这个动作是在存储引擎层触发的还是server层。今天的课上讲判断是否满足条件在server层做。如果索引没有被阶段。是全的是在存储引擎层判断么?","like_count":0},{"had_liked":false,"id":119084,"user_name":"咸鱼与果汁","can_delete":false,"product_type":"c1","uid":1283861,"ip_address":"","ucode":"F79383599ACB02","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoRyUPicEMqGsbsMicHPuvwM8nibfgK8Yt0AibAGUmnic7rLF4zUZ4dBj4ialYz54fOD6sURKwuJIWBNjhg/132","comment_is_top":false,"comment_ctime":1564500533,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564500533","product_id":100020801,"comment_content":"老师你好，我使用文章头存储过程写入数据非常慢，平均每秒大概二三十条，环境windows-docker，mysql8，我看下磁盘的写入速度两三百KB，但是磁盘占用比例是90%，而我使用迅雷下载，磁盘写入速度10+MB，磁盘使用比例10+%，请问这个什么原因造成的？","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136895,"discussion_content":"set autocommit=OFF，试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579170930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119080,"user_name":"咸鱼与果汁","can_delete":false,"product_type":"c1","uid":1283861,"ip_address":"","ucode":"F79383599ACB02","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoRyUPicEMqGsbsMicHPuvwM8nibfgK8Yt0AibAGUmnic7rLF4zUZ4dBj4ialYz54fOD6sURKwuJIWBNjhg/132","comment_is_top":false,"comment_ctime":1564499454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564499454","product_id":100020801,"comment_content":"老师你好，请求文章开头10W行的数据，插入用了十几分钟? 环境：docker，mysql8.0.13","like_count":0},{"had_liked":false,"id":105993,"user_name":"immortalCockroach","can_delete":false,"product_type":"c1","uid":1157912,"ip_address":"","ucode":"9A4F497BEA7DFB","user_header":"https://static001.geekbang.org/account/avatar/00/11/ab/18/b01e71d1.jpg","comment_is_top":false,"comment_ctime":1561122231,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561122231","product_id":100020801,"comment_content":"老师好，最近我们遇到了一个问题，大概500<br>w行的表，有索引，平时查询基本上在几十ms<br>但是灰度发布的时候，突然出现了几十秒甚至上百秒的sql，请教您下，根据您的经验这个可能的原因是？","like_count":0,"discussions":[{"author":{"id":1303322,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e3/1a/061e77b6.jpg","nickname":"亢星东","note":"","ucode":"5E4063E83B2BB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321361,"discussion_content":"应该是有事务回滚之类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604569837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91344,"user_name":"skying","can_delete":false,"product_type":"c1","uid":1041865,"ip_address":"","ucode":"E7CFF50AB64BB1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/c9/1061582b.jpg","comment_is_top":false,"comment_ctime":1556987450,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556987450","product_id":100020801,"comment_content":"模拟查询被堵住的情况，以下是一种场景，不知道是否合理，<br>1.<br>一个线程：<br>    begin；<br>    select * from t;<br> 第2个线程<br>    alter table t add column name varchar(32) ;<br>  第3个线程：<br>     begin;<br>     select * from t;<br>   这时线程2和3会被阻塞。<br>根据之前学习的知识，mdl读和写锁是互斥的。<br>","like_count":0},{"had_liked":false,"id":91315,"user_name":"乔纳森","can_delete":false,"product_type":"c1","uid":1045107,"ip_address":"","ucode":"51EC9FAE071388","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/73/1c7bceae.jpg","comment_is_top":false,"comment_ctime":1556977964,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556977964","product_id":100020801,"comment_content":"另外图4 中的锁等待时，查询如下SQL 是空的，并没有找到阻塞的processid；<br>select blocking_pid from sys.schema_table_lock_waits;","like_count":0},{"had_liked":false,"id":91314,"user_name":"乔纳森","can_delete":false,"product_type":"c1","uid":1045107,"ip_address":"","ucode":"51EC9FAE071388","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/73/1c7bceae.jpg","comment_is_top":false,"comment_ctime":1556977731,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1556977731","product_id":100020801,"comment_content":"mysql&gt; select * from table_a where b=&#39;1234567890abcd&#39;;<br>实际结果并不会慢；为什么呢？<br>root@192.168.100.1:3307 [longrun]&gt; show profile for query 100014;<br>+----------------------+----------+<br>| Status               | Duration |<br>+----------------------+----------+<br>| starting             | 0.000083 |<br>| checking permissions | 0.000010 |<br>| Opening tables       | 0.000033 |<br>| init                 | 0.000029 |<br>| System lock          | 0.000085 |<br>| optimizing           | 0.000010 |<br>| statistics           | 0.000076 |<br>| preparing            | 0.000022 |<br>| executing            | 0.000023 |<br>| Sending data         | 0.052002 |<br>| end                  | 0.000024 |<br>| query end            | 0.000027 |<br>| closing tables       | 0.000025 |<br>| freeing items        | 0.000134 |<br>| logging slow query   | 0.000013 |<br>| logging slow query   | 0.000152 |<br>| cleaning up          | 0.000059 |<br>+----------------------+----------+<br><br>- 建表语句, count(*)=200 000<br>``` sql<br>CREATE TABLE `table_a` (<br>  `id` int(11) NOT NULL AUTO_INCREMENT,<br>  `b` varchar(10) DEFAULT NULL,<br>  `c_qing` varchar(16) NOT NULL DEFAULT &#39;qing&#39;,<br>  PRIMARY KEY (`id`),<br>  KEY `b` (`b`)<br>) ENGINE=InnoDB AUTO_INCREMENT=200001 DEFAULT CHARSET=utf8mb4;<br>```<br>","like_count":0,"discussions":[{"author":{"id":1308854,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLHKka9hn8hYxxXLOX7spkMRUAUiauzwib2po1aNWDfqHf5jh2EHX9DdI3zvdXL6KVaiajIU01bd8wyA/132","nickname":"骑龟的兔子","note":"","ucode":"3B3AF0A4F324D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6396,"discussion_content":"文中虽然没说明，但应该是关掉icp了 你这个是默认开启icp 而且你的表也不够大 你想做这个实验需要 第一关掉icp 第二 c_qing 这个列 需要弄个超长列 就会有回表效果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566884007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91065,"user_name":"莫名","can_delete":false,"product_type":"c1","uid":1487905,"ip_address":"","ucode":"852C2321C45EE3","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/21/17a88779.jpg","comment_is_top":false,"comment_ctime":1556843884,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556843884","product_id":100020801,"comment_content":"从老师的图15的例子，可否得出这样的结论，对于更新非常非常频繁的业务表，尽可能使用RC隔离，而非RR隔离","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136897,"discussion_content":"NO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579171011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89449,"user_name":"Leen","can_delete":false,"product_type":"c1","uid":1304893,"ip_address":"","ucode":"708FE1916D8A2E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIibhnQsZ2ZpyZ49nCDibawkgztgWlL3zqfibVTDhfLryfBP5ay349wQn24Vd88sZMBX6MfAcfSGymXQ/132","comment_is_top":false,"comment_ctime":1556176933,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556176933","product_id":100020801,"comment_content":"老师好，在READ-COMMITTED  这个隔离级别的模式下，一个很简单的select 语句,where 后面有 跟主键字段筛选，正常情况下执行非常快，（服务器系统压力很小），排除锁表的情况外，还有什么情况会导致简单sql 却执行了很长时间？","like_count":0},{"had_liked":false,"id":83707,"user_name":"gerry pang","can_delete":false,"product_type":"c1","uid":1068169,"ip_address":"","ucode":"54BD1D8DE1DBBF","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/89/e698c0a9.jpg","comment_is_top":false,"comment_ctime":1554707201,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554707201","product_id":100020801,"comment_content":"老师，等行锁实验中<br>mysql&gt; select * from t sys.innodb_lock_waits where locked_table=`&#39;test&#39;.&#39;t&#39;`\\G<br>这个代码中，from 后面好像多写了一个 t <br>","like_count":0},{"had_liked":false,"id":83363,"user_name":"GLADIATOR","can_delete":false,"product_type":"c1","uid":1448564,"ip_address":"","ucode":"6FE14E0BCD6240","user_header":"https://static001.geekbang.org/account/avatar/00/16/1a/74/8f7f8786.jpg","comment_is_top":false,"comment_ctime":1554545312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554545312","product_id":100020801,"comment_content":"林老师，您好<br>    我的performance_schema is ON <br>  mysql&gt; show variables like &#39;%perfor%&#39;;<br>+----------------------------------------------------------+-------+<br>| Variable_name                                            | Value |<br>+----------------------------------------------------------+-------+<br>| performance_schema                                       | ON    |<br>    我的mysql版本5.7.24，尝试的时候发现了如下问题<br>    锁住了表T<br>        mysql&gt; lock table T write;<br>        Query OK, 0 rows affected (0.00 sec)<br>   另一个terminal查询select * from t where id=1时被阻塞<br> 但是查不到blocking_pid ，这是什么情况呢<br>   mysql&gt; select blocking_pid from sys.schema_table_lock_waits;<br>   Empty set (0.00 sec)<br>  ps:发现查询schema_table_lock_waits表与lock table的语句不能放在一个terminal执行，否则会报<br>Table &#39;schema_table_lock_waits&#39; was not locked with LOCK TABLES<br>自行尝试的同学要注意下，老师有空的话也可以帮看看为什么。。。","like_count":0},{"had_liked":false,"id":83360,"user_name":"GLADIATOR","can_delete":false,"product_type":"c1","uid":1448564,"ip_address":"","ucode":"6FE14E0BCD6240","user_header":"https://static001.geekbang.org/account/avatar/00/16/1a/74/8f7f8786.jpg","comment_is_top":false,"comment_ctime":1554544882,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1554544882","product_id":100020801,"comment_content":"林老师您好，我按照您的步骤，sessionA lock table write；SessionB 查select * from t where id=1,确实被堵住，但是mysql&gt; select * from sys.schema_table_lock_waits;返回为空。查processlist确实有在等MDL锁。但是select * from sys.schema_table_lock_waits;返回为空，并没有返回持有MDL锁的ID号，请问是怎么回事？","like_count":0,"discussions":[{"author":{"id":1246200,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/f8/55554b12.jpg","nickname":"kai","note":"","ucode":"CFDC240DA364FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296888,"discussion_content":"我也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596695254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82669,"user_name":"井移","can_delete":false,"product_type":"c1","uid":1256811,"ip_address":"","ucode":"1B9F27BD09AEB2","user_header":"https://static001.geekbang.org/account/avatar/00/13/2d/6b/03456250.jpg","comment_is_top":false,"comment_ctime":1554273661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554273661","product_id":100020801,"comment_content":"老师，我这边遇到一个MDL锁问题，但是sleep的线程info为NULL，并且通过sys.schema_table_lock_waits表没有数据。但是确实开启了performance_schema=ON，您看下，怎么解决。<br>mysql&gt; show processlist;<br>+--------+------+-----------+------+---------+------+---------------------------------+----------------------------------+<br>| Id     | User | Host      | db   | Command | Time | State                           | Info                             |<br>+--------+------+-----------+------+---------+------+---------------------------------+----------------------------------+<br>| 245682 | root | localhost | mins | Sleep   | 1418 |                                 | NULL                             |<br>| 245734 | root | localhost | mins | Query   | 1320 | Waiting for table metadata lock | select * from lesson_t limit 100 |<br>| 245743 | root | localhost | mins | Query   | 1272 | Waiting for table metadata lock | select * from lesson_t limit 100 |<br>| 245746 | root | localhost | mins | Query   |  993 | Waiting for table metadata lock | select * from lesson_t limit 100 |<br>| 245749 | root | localhost | mins | Query   |    0 | starting                        | show processlist                 |<br>+--------+------+-----------+------+---------+------+---------------------------------+----------------------------------+<br>5 rows in set (0.00 sec)<br><br>mysql&gt; select * from sys.schema_table_lock_waits;<br>Empty set (0.00 sec)<br><br>mysql&gt; show variables like &#39;performance_schema&#39;;<br>+--------------------+-------+<br>| Variable_name      | Value |<br>+--------------------+-------+<br>| performance_schema | ON    |<br>+--------------------+-------+<br>1 row in set (0.00 sec)<br>","like_count":0},{"had_liked":false,"id":82086,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1554116143,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1554116143","product_id":100020801,"comment_content":"如果换成 mysql&gt; select id from table_a where b=&#39;1234567890abcd&#39;;<br> 这是有索引覆盖的，不回表，那此时难道可以查到？ <br>","like_count":0,"discussions":[{"author":{"id":1171004,"avatar":"https://static001.geekbang.org/account/avatar/00/11/de/3c/96c1bc62.jpg","nickname":"卢建文","note":"","ucode":"900A0CE253F2BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376397,"discussion_content":"一样要在server层在比对一次，回表只是为了查额外字段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622108028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161436,"discussion_content":"我估计是。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580900469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78008,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1553053726,"is_pvip":false,"replies":[{"id":"28904","content":"1. 直接读肯定快呀<br>2. 看代码怎么写了😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553415765,"ip_address":"","comment_id":78008,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553053726","product_id":100020801,"comment_content":"带 lock in share mode 的 SQL 语句，是当前读，因此会直接读到 1000001 这个结果，所以速度很<br>快；而 select * from t where id=1 这个语句，是一致性读，因此需要从 1000001 开始，依次执行<br>undo log，执行了 100 万次以后，才将 1 这个结果返回。     <br>问题：<br>1、意思是直接读速度比执行undo log快？<br>2、真实情况会存在这种情况吗？即：一条记录被update执行了很多次，一堆undo log，而没有commint。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443934,"discussion_content":"1. 直接读肯定快呀\n2. 看代码怎么写了😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553415765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71740,"user_name":"书豪","can_delete":false,"product_type":"c1","uid":1068091,"ip_address":"","ucode":"212FBDE59E8457","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/3b/2780fc51.jpg","comment_is_top":false,"comment_ctime":1551424063,"is_pvip":false,"replies":[{"id":"25851","content":"正常应该很快才对，<br>你show processlist 发来看下，一种可能是mdl锁等待","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551427099,"ip_address":"","comment_id":71740,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1551424063","product_id":100020801,"comment_content":"老师，创建的这个十万行的表t，我用drop table t进行删除，发现需要很长时间，是什么问题造成的？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441307,"discussion_content":"正常应该很快才对，\n你show processlist 发来看下，一种可能是mdl锁等待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551427099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303322,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e3/1a/061e77b6.jpg","nickname":"亢星东","note":"","ucode":"5E4063E83B2BB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321391,"discussion_content":"没有带条件吧 ，索引drop也需要时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604575009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58746,"user_name":"唐名之","can_delete":false,"product_type":"c1","uid":1004394,"ip_address":"","ucode":"F472C71E043E03","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JKKWS6TzhncvAA0p0NDiaATPIvMicSM76vNAg9IG1ibibcJYPAiaicYjZfq4gAV8GRtcTpOibfRD8vzqHBtL0ibmhwQsbg/132","comment_is_top":false,"comment_ctime":1547187945,"is_pvip":false,"replies":[{"id":"21232","content":"诶。。那奇怪了<br>执行<br>select * from performance_schema.metadata_locks; 看看？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547190587,"ip_address":"","comment_id":58746,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547187945","product_id":100020801,"comment_content":"show VARIABLES LIKE &#39;performance%&#39;;<br>performance_schema ON<br>配置已经是打开的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436198,"discussion_content":"诶。。那奇怪了\n执行\nselect * from performance_schema.metadata_locks; 看看？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547190587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57788,"user_name":"alias cd=rm -rf","can_delete":false,"product_type":"c1","uid":1318325,"ip_address":"","ucode":"E7B27D76305B75","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/b5/971261fd.jpg","comment_is_top":false,"comment_ctime":1546911270,"is_pvip":false,"replies":[{"id":"21108","content":"不是锁表哈，innodb里面除非明确写lock table，不会锁表；<br><br>解锁时机对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547117759,"ip_address":"","comment_id":57788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546911270","product_id":100020801,"comment_content":"思考题<br>c无索引x锁应该是锁表。<br>解锁我觉得应该是sessionb的事物提交之后","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435761,"discussion_content":"不是锁表哈，innodb里面除非明确写lock table，不会锁表；\n\n解锁时机对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547117759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56862,"user_name":"ʘᴗʘ小白帽ʘᴗʘ","can_delete":false,"product_type":"c1","uid":1304567,"ip_address":"","ucode":"3519C67C3B1533","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/f7/8427bb06.jpg","comment_is_top":false,"comment_ctime":1546569979,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546569979","product_id":100020801,"comment_content":"涨知识了","like_count":0},{"had_liked":false,"id":55547,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1546228310,"is_pvip":false,"replies":[{"id":"20080","content":"然后有出现锁等待了才会显示的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546243440,"ip_address":"","comment_id":55547,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1546228310","product_id":100020801,"comment_content":"老师你好，<br>我将performance_schema打开了，查询process_id还是为空。<br>信息如下：<br>mysql版本：5.7.24<br>performance_schema：<br>| Variable_name      | Value |<br>+--------------------+-------+<br>| performance_schema | ON    |<br><br>不知道这是为什么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434796,"discussion_content":"然后有出现锁等待了才会显示的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546243440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315049,"avatar":"https://static001.geekbang.org/account/avatar/00/14/10/e9/f5e55ccf.jpg","nickname":"小鬼","note":"","ucode":"52EE8A18B90C6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582726,"discussion_content":"https://blog.51cto.com/wujianwei/3964674看下这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659607371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54884,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1545976566,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1545976566","product_id":100020801,"comment_content":"老师<br>1，consistent snapshot 是可重复读隔离级别吗？<br>2，session b是执行完默认就提交了吗？是的话undo log应该就不存在了吧？还是session a 和session b因为是针对同一行记录的操作，所以undo log是同一个？<br>希望老师帮忙解答一下啊","like_count":0},{"had_liked":false,"id":54837,"user_name":"似水流年","can_delete":false,"product_type":"c1","uid":1304443,"ip_address":"","ucode":"D114A8E273133C","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/7b/71da8283.jpg","comment_is_top":false,"comment_ctime":1545968294,"is_pvip":false,"replies":[{"id":"19860","content":"额？是说语句一模一样，差别只是第一个有use dingtest?<br>第二个语句的当前数据库是什么","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545972608,"ip_address":"","comment_id":54837,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545968294","product_id":100020801,"comment_content":"老师，我在行锁查询是，用的是dingtest数据库，用您的语句怎么查出来有报语法错误。到底错在哪里了？<br>use dingtest;<br>select * from  sys.innodb_lock_waits where locked_table=`&#39;dingtest&#39;.&#39;t&#39;`\\G<br>[SQL] use dingtest;<br>受影响的行: 0<br>时间: 0.004s<br><br>[SQL] <br>select * from  sys.innodb_lock_waits where locked_table=`&#39;dingtest&#39;.&#39;t&#39;`\\G<br><br>[Err] 1064 - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;\\G&#39; at line 1<br><br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434579,"discussion_content":"额？是说语句一模一样，差别只是第一个有use dingtest?\n第二个语句的当前数据库是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545972608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54623,"user_name":"郭健","can_delete":false,"product_type":"c1","uid":1102204,"ip_address":"","ucode":"169645EBF3B46C","user_header":"https://static001.geekbang.org/account/avatar/00/10/d1/7c/4639f22c.jpg","comment_is_top":false,"comment_ctime":1545917267,"is_pvip":false,"replies":[{"id":"19821","content":"没有说“要用到索引才使用行锁”呀<br>就算没有用到索引，也会给所有行加行锁，并不会加表锁<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545919991,"ip_address":"","comment_id":54623,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545917267","product_id":100020801,"comment_content":"老师你好，之前看过一点mysql的书，有些地方有点迷糊。1.您之前说表锁只有两种，一种是DML,增删改查的时候上读锁，增加字段加写锁。那么说mysql中数据变更不会冲突。2.但是讲到行锁的时候，是用到索引才能使用行锁，如果没有使用到行锁就使用表锁，但是表锁增删改查使用的是读锁，相互不阻塞。这就非常冲突，老师可以解惑吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434517,"discussion_content":"没有说“要用到索引才使用行锁”呀\n就算没有用到索引，也会给所有行加行锁，并不会加表锁\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545919991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54613,"user_name":"Elvis","can_delete":false,"product_type":"c1","uid":1308724,"ip_address":"","ucode":"1FDE773C5AA43D","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/34/2ce5e546.jpg","comment_is_top":false,"comment_ctime":1545913881,"is_pvip":false,"replies":[{"id":"19845","content":"这个是索引最头大的问题之一了… 如果有明显的某类组合查询是最多的还好，否则确实很麻烦。<br><br>😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545961908,"ip_address":"","comment_id":54613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545913881","product_id":100020801,"comment_content":"老师，最近项目mysql遇到一个难题， 表数据每天230万，一条语句的查询条件有1—40个，最坏情况下40，请问老师有没有好的建议，非常感谢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434511,"discussion_content":"这个是索引最头大的问题之一了… 如果有明显的某类组合查询是最多的还好，否则确实很麻烦。\n\n😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545961908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54595,"user_name":"爱学习的好孩子","can_delete":false,"product_type":"c1","uid":1331195,"ip_address":"","ucode":"C51EA3E529BE0B","user_header":"https://static001.geekbang.org/account/avatar/00/14/4f/fb/3eb917f1.jpg","comment_is_top":false,"comment_ctime":1545908979,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545908979","product_id":100020801,"comment_content":"林老师，你好：最近我听您的order by原理，现在遇到一个奇怪的问题：<br>1、表结构：<br>CREATE TABLE `test` (<br>  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;自增id&#39;,<br>  `bid` bigint(20) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;&#39;,<br>  `status` tinyint(4) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;&#39;,<br>  `commit_time` timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39; COMMENT &#39;&#39;,<br>  PRIMARY KEY (`id`),<br>  KEY `idx_commit` (`commit_time`),<br>  KEY `idx_bid_commit` (`bid`,`commit_time`)<br>) ENGINE=InnoDB AUTO_INCREMENT=832330;<br>2、数据量832330，show index from test,如下分布：<br>| Table        | Non_unique | Key_name              | Seq_in_index | Column_name | Collation | Cardinality |<br>+--------------+------------+-----------------------+--------------+-------------+-----------+-------------+<br>| test         |          0 | PRIMARY               |            1 | id          | A         |      839932 |          <br>| test         |          1 | idx_commit            |            1 | commit_time | A         |      774559 |     <br>| test         |          1 | idx_bid_commit        |            1 | bid         | A         |           1 |    <br>| test         |          1 | idx_bid_commit        |            2 | commit_time | A         |      791388 |     <br>bid有两个值分别为1,2。bid=1有825747行数据，bid=2有6554；<br><br>问题：现在有两条sql，强制使用索引：<br>语句1：SELECT * FROM `pano_3d_task` use index(idx_commit) WHERE `bid` = &#39;1&#39; AND `status` in (&#39;0&#39;,&#39;4&#39;) ORDER BY `commit_time` asc limit 100<br>语句2：SELECT * FROM `pano_3d_task` use index(idx_bid_commit) WHERE `bid` = &#39;1&#39; AND `status` in (&#39;0&#39;,&#39;4&#39;) ORDER BY `commit_time` asc limit 100<br>从实际效果来看，语句2比语句1慢，慢了有100毫秒，按照原理来，第一个语句全索引扫描，第二个有bid索引，按理分析应该快一些，最起码也一样快，为什么会比语句1慢呢？","like_count":0,"discussions":[{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344260,"discussion_content":"个人分析 第一个不需要排序，第二个语句是需要内存排序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611373925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54489,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1545881503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545881503","product_id":100020801,"comment_content":"就是session A  local table t write<br>session B select * from t where id=1<br>然后select blocking_id from sys.schema_table_lock_waits<br>表结构<br> t     | CREATE TABLE `t` (<br>  `id` int(11) NOT NULL,<br>  `c` int(11) DEFAULT NULL,<br>  PRIMARY KEY (`id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8 |<br>mysql版本<br>Server version: 5.7.24-log MySQL Community Server (GPL)","like_count":0},{"had_liked":false,"id":54477,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1545878922,"is_pvip":false,"replies":[{"id":"19802","content":"Performance_schema开了吗","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545903976,"ip_address":"","comment_id":54477,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545878922","product_id":100020801,"comment_content":"我通过sys.schema_table_lock_waits没有查到MDL的blocking_pid呢，是还需要其他配置吗。<br>我的版本是mysql5.7.18<br>mysql&gt; show processlist;<br>+----+------+-----------+-------+---------+------+---------------------------------+----------------------------+<br>| Id | User | Host      | db    | Command | Time | State                           | Info                       |<br>+----+------+-----------+-------+---------+------+---------------------------------+----------------------------+<br>| 26 | root | localhost | dbmgr | Query   |    0 | starting                        | show processlist           |<br>| 27 | root | localhost | dbmgr | Sleep   |   85 |                                 | NULL                       |<br>| 28 | root | localhost | dbmgr | Query   |  281 | Waiting for table metadata lock | select * from t where id=1 |<br>+----+------+-----------+-------+---------+------+---------------------------------+----------------------------+<br>3 rows in set (0.00 sec)<br><br>mysql&gt; <br>mysql&gt; select blocking_pid from sys.schema_table_lock_waits;<br>Empty set (0.00 sec)<br><br>mysql&gt; <br>mysql&gt; ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434467,"discussion_content":"Performance_schema开了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545903976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54471,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1545877215,"is_pvip":false,"replies":[{"id":"19751","content":"耶，你这个是怎么弄出来的，版本号和复现步骤给一下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545881200,"ip_address":"","comment_id":54471,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545877215","product_id":100020801,"comment_content":"老师，这是啥原因<br>mysql&gt; select blocking_pid from sys.schema_table_lock_waits;<br>ERROR 1100 (HY000): Table &#39;schema_table_lock_waits&#39; was not locked with LOCK TABLES<br>和网上搜到的不是一回事","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434464,"discussion_content":"耶，你这个是怎么弄出来的，版本号和复现步骤给一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545881200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54357,"user_name":"高枕","can_delete":false,"product_type":"c1","uid":1310312,"ip_address":"","ucode":"20F6CF75EC9AA4","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/68/e0bebd9a.jpg","comment_is_top":false,"comment_ctime":1545834422,"is_pvip":false,"replies":[{"id":"19737","content":"只要访问表，增删改查，就要加MDL读锁<br><br>快照读没有读锁，其它见到的基本都加锁。<br><br>这个全列出来有点难😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545841760,"ip_address":"","comment_id":54357,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545834422","product_id":100020801,"comment_content":"老师您好，还是忍不住问您一下：<br>表级锁，行级锁的产生可以是执行一sql的时候隐式自动加上的，也有时候需要显式的写出来，比如select... lock in share mode或者lock table。我迷惑的是，在不同的隔离级别下，哪些语句会隐式的加哪个级别的（表，行）的哪个（读，写）锁？哪些语句会显式的加哪个级别的（表，行）的哪个（读，写）锁？能否麻烦您讲一下？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434435,"discussion_content":"只要访问表，增删改查，就要加MDL读锁\n\n快照读没有读锁，其它见到的基本都加锁。\n\n这个全列出来有点难😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545841760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54250,"user_name":"郭江伟","can_delete":false,"product_type":"c1","uid":1313994,"ip_address":"","ucode":"613D638619B5A2","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/ca/6173350b.jpg","comment_is_top":false,"comment_ctime":1545815570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545815570","product_id":100020801,"comment_content":"begin<br>select * from  t where c=5 for update;<br>innodb 把所有扫描到的数据行加锁，返回server 层判断是否有等于5的，具体验证为：<br>在运行上述语句后，开另外一个会话，运行 show engine innodb status; 可以看到如下信息：<br>367 lock struct(s), heap size 44480, 100366 row lock(s)<br>MySQL thread id 8, OS thread handle 140526870746880, query id 300293 localhost root<br>另外此时对t表任何行的update都会被堵塞，充分说明锁定了所有的行。<br>但是有个疑问t表只有10w行记录，为什么上面显示是100366 row locks？<br>","like_count":0},{"had_liked":false,"id":54143,"user_name":"高枕","can_delete":false,"product_type":"c1","uid":1310312,"ip_address":"","ucode":"20F6CF75EC9AA4","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/68/e0bebd9a.jpg","comment_is_top":false,"comment_ctime":1545797203,"is_pvip":false,"replies":[{"id":"19614","content":"21、22这两篇文章看完提一下你的具体问题哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545815757,"ip_address":"","comment_id":54143,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1545797203","product_id":100020801,"comment_content":"老师，能否介绍一本关于mysql锁机制的书或者文章，包括锁的种类，比如x锁，s锁。什么锁要语句显示的去加，什么锁默认被加上。锁与锁之间的互斥关系等这些基础的知识？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434368,"discussion_content":"21、22这两篇文章看完提一下你的具体问题哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545815757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303322,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e3/1a/061e77b6.jpg","nickname":"亢星东","note":"","ucode":"5E4063E83B2BB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321392,"discussion_content":"x 排他锁 s共享锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604575237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54119,"user_name":"vvccoe","can_delete":false,"product_type":"c1","uid":1099892,"ip_address":"","ucode":"1BE9FDE72175BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/74/a1bd2307.jpg","comment_is_top":false,"comment_ctime":1545795223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545795223","product_id":100020801,"comment_content":"老师 请教2个问题。<br>一个问题是 根据主键 范围查询， 随着范围越大 explain 里面显示ROWS 越大<br>例如 <br>select * from XX where ID between 10 and 20 ;<br>explain 显示ROW 为10 <br>between是10000 and 20000的时候显示20000+<br>between是100000 and 200000的时候显示 190000+<br>是什么造成的啊，是在从数据库上查询的。<br><br>第二个问题是 慢查询里面会有一个Rows_examined ，我理解他和explain都是报告扫描的行数，如果两个不一样， 慢查询里面记录的是准确的吗？<br><br><br>","like_count":0},{"had_liked":false,"id":54110,"user_name":"极客童","can_delete":false,"product_type":"c1","uid":1250397,"ip_address":"","ucode":"D92EA8CA293B93","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/5d/f4d789cc.jpg","comment_is_top":false,"comment_ctime":1545794773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545794773","product_id":100020801,"comment_content":"select * from t where d=5 for update；由于d没有索引，需要全表扫描，会对全表加读写锁，直到找到这一行，才会变成对这行加锁","like_count":0},{"had_liked":false,"id":54104,"user_name":"小确幸","can_delete":false,"product_type":"c1","uid":1099329,"ip_address":"","ucode":"C090505CB2DB69","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/41/b868f086.jpg","comment_is_top":false,"comment_ctime":1545794229,"is_pvip":false,"replies":[{"id":"19567","content":"额，比较后面了“分区表”那篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545794380,"ip_address":"","comment_id":54104,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545794229","product_id":100020801,"comment_content":"老师，什么时候讲分库分表？<br><br>现在准备把原始数据拆分出来（按年分库，按月分表），不知道要注意些什么。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434358,"discussion_content":"额，比较后面了“分区表”那篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545794380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54094,"user_name":"en","can_delete":false,"product_type":"c1","uid":1157417,"ip_address":"","ucode":"C14EDEED543AC8","user_header":"https://static001.geekbang.org/account/avatar/00/11/a9/29/dad1f942.jpg","comment_is_top":false,"comment_ctime":1545793462,"is_pvip":false,"replies":[{"id":"19570","content":"结论😄？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545794539,"ip_address":"","comment_id":54094,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545793462","product_id":100020801,"comment_content":"验证了一下，加的表锁，在事务提交后释放锁。<br>验证方法:<br>开启了另一个事务<br>select * from t where c=6 for update;阻塞了，但是语句commit后锁就被释放了。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434351,"discussion_content":"结论😄？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545794539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54089,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1545792656,"is_pvip":false,"replies":[{"id":"19572","content":"报错信息是？<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545794869,"ip_address":"","comment_id":54089,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545792656","product_id":100020801,"comment_content":"mysql&gt; select * from t sys.innodb_lock_waits where locked_table=`&#39;test&#39;.&#39;t&#39;`\\G<br><br>按照这个执行对应的数据库中表，报错，这是什么情况？<br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434349,"discussion_content":"报错信息是？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545794869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54085,"user_name":"成葛格","can_delete":false,"product_type":"c1","uid":1030745,"ip_address":"","ucode":"A09A57D891FA50","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/59/ffa298a2.jpg","comment_is_top":false,"comment_ctime":1545792406,"is_pvip":false,"replies":[{"id":"19571","content":"启动时需要Performance_schema=on","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545794844,"ip_address":"","comment_id":54085,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545792406","product_id":100020801,"comment_content":"查询造成阻塞的 process id时，sys.schema_table_lock_waits 这张表，一直返回空。<br>请问有没有是我mysql版本的问题吗? 我的版本号是 mysql 5.7.17-log.","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434348,"discussion_content":"启动时需要Performance_schema=on","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545794844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54073,"user_name":"一杯敬月光","can_delete":false,"product_type":"c1","uid":1308687,"ip_address":"","ucode":"94C801115C41C8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIPy34APc2QAOxvRWuZWLBrZZ134Qs89K0icGye4HLacic1ekZnu2s80gMRDF5hmmu8LD0mhDsleRVg/132","comment_is_top":false,"comment_ctime":1545791353,"is_pvip":false,"replies":[{"id":"19573","content":"这个理解不太恰当哈：）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545794903,"ip_address":"","comment_id":54073,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545791353","product_id":100020801,"comment_content":"innodb行锁是通过索引加锁实现的，c字段没有索引，会直接锁表","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434347,"discussion_content":"这个理解不太恰当哈：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545794903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54060,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1545790371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545790371","product_id":100020801,"comment_content":"mysql&gt; select blocking_pid from sys.schema_table_lock_waits;<br>ERROR 1100 (HY000): Table &#39;schema_table_lock_waits&#39; was not locked with LOCK TABLES 为啥报这个错误","like_count":0},{"had_liked":false,"id":54003,"user_name":"Arthur_08320","can_delete":false,"product_type":"c1","uid":1073453,"ip_address":"","ucode":"8D173FAB9CED25","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/2d/9e731599.jpg","comment_is_top":false,"comment_ctime":1545785299,"is_pvip":false,"replies":[{"id":"19552","content":"Insert ... select 不是快照读。对select部分是要加锁的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545788575,"ip_address":"","comment_id":54003,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545785299","product_id":100020801,"comment_content":"insert select的时候select的表也会被锁，这是为什么，不应该是快照读嘛？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434322,"discussion_content":"Insert ... select 不是快照读。对select部分是要加锁的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545788575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53991,"user_name":"杜陵野客","can_delete":false,"product_type":"c1","uid":1307054,"ip_address":"","ucode":"C6C341537A269B","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKWvGcULsbNorYBqjf9ICPpNIf8MQOdRSibXptrwGia5TMDpUiaGu58icpD8qicLY78BicjYF4tbdqFibM7Q/132","comment_is_top":false,"comment_ctime":1545784482,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545784482","product_id":100020801,"comment_content":"老师，您好，实际工作过程中，出现过好几次这样的情况，下面的sql查询，可以查询到有事务锁，但是trx_query执行内容为空，每次类似情况都只能kill这个事务，恢复应用对该表的正常操作。<br>select * from information_schema.innodb_trx  where trx_state=&#39;RUNNING&#39; ;<br>想请教下老师，类似的问题，应该是哪方面原因？ <br>异常时，下面的sql查询锁信息，都是为空的，mysql版本为mysql5.6.24<br>select * from information_schema.innodb_lock_waits;<br>select * from information_schema.innodb_locks;","like_count":0},{"had_liked":false,"id":53988,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1126910,"ip_address":"","ucode":"341694ACBAB258","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/fe/30a17a9d.jpg","comment_is_top":false,"comment_ctime":1545784311,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1545784311","product_id":100020801,"comment_content":"老师你好，我在学习mysqk的过程中一直想理解 数据和索引 究竟是怎样存储的？这期间看了一些文章，总是一知半解。请问有没有工具可以查看mysql的数据文件或索引文件？可以帮助理解或调试相关问题，谢谢！","like_count":0},{"had_liked":false,"id":53985,"user_name":"heat nan","can_delete":false,"product_type":"c1","uid":1153826,"ip_address":"","ucode":"52D5CB17CE80E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/22/dd04892a.jpg","comment_is_top":false,"comment_ctime":1545784246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545784246","product_id":100020801,"comment_content":"林老师您好，看了您的文章，很多地方提及undo log，但一直想不明白，undo log是怎么和redo log结合在一起的？或者说undo 在宕机恢复时是怎么起作用的？请老师解惑，谢谢<br>……………………<br>这是冷笑的花猫提的问题，我想发表下意见。首先我想看问题要从大的方面看，redo log和undo log最开始都是存在内存中的，后面通过策略刷新到磁盘。如崩溃后肯定是从磁盘再次加载到内存进行恢复处理的。至于undo log 它的作用是实现事务的回滚以mvcc。细的说你事务提交后，又没有别的事务使用你的记录undo其实可以被复用了。如果你崩溃了涉及事务回滚什么的需要undo 就需要从磁盘中加载到内存。  ","like_count":0},{"had_liked":false,"id":53983,"user_name":"慧鑫coming","can_delete":false,"product_type":"c1","uid":1324385,"ip_address":"","ucode":"7BAC9CA255630E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLE4LYb3jrH63ZV98Zpc8DompwDgb1O3nffMoZCmiaibauRyEFv6NDNsST9RWxZExvMLMWb50zaanoQ/132","comment_is_top":false,"comment_ctime":1545784159,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545784159","product_id":100020801,"comment_content":"我在mysql5.7.24中，仍然用一个显式事务查询不提交，另一个事务对表增加一个字段，第三个事务再查询该表block。也就是您在文章中说的mysql5.7无法复现第6篇文章中场景，我想知道您说的复现场景是不是我上面描述的那个？还有就是5.7的MDL锁不同于5.6的地方？","like_count":0},{"had_liked":false,"id":53974,"user_name":"heat nan","can_delete":false,"product_type":"c1","uid":1153826,"ip_address":"","ucode":"52D5CB17CE80E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/22/dd04892a.jpg","comment_is_top":false,"comment_ctime":1545783524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545783524","product_id":100020801,"comment_content":"老师这个思考题是加的IX锁，意向拍他锁。加了这个锁后s锁x锁都需要等待。在commit的时候释放。如果d行是unique key ，innodb 表只锁一行，如果是非唯一，可能锁到多行。不知道说的准确不准确。","like_count":0},{"had_liked":false,"id":53973,"user_name":"HuaMax","can_delete":false,"product_type":"c1","uid":1118488,"ip_address":"","ucode":"2E78DE1AF098AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","comment_is_top":false,"comment_ctime":1545783432,"is_pvip":false,"replies":[{"id":"19554","content":"哦，抱歉，是where c=5 ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545789229,"ip_address":"","comment_id":53973,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545783432","product_id":100020801,"comment_content":"问题里的sql是d=5，是笔误吗，id=5？for update加的是行级写锁，在commit时释放","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434308,"discussion_content":"哦，抱歉，是where c=5 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545789229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53965,"user_name":"冷笑的花猫","can_delete":false,"product_type":"c1","uid":1119029,"ip_address":"","ucode":"6C368FBB577470","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/35/45391914.jpg","comment_is_top":false,"comment_ctime":1545782657,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545782657","product_id":100020801,"comment_content":"林老师您好，看了您的文章，很多地方提及undo log，但一直想不明白，undo  log是怎么和redo log结合在一起的？或者说undo 在宕机恢复时是怎么起作用的？请老师解惑，谢谢。","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580346,"discussion_content":"undo是事务回滚和一致性读的时候用到，redo log是crash safe，不是一个维度上，二者也不需要结合在一起","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658115503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53958,"user_name":"giserway","can_delete":false,"product_type":"c1","uid":1067304,"ip_address":"","ucode":"139D579F323383","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/28/4dcfa376.jpg","comment_is_top":false,"comment_ctime":1545782178,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1545782178","product_id":100020801,"comment_content":"for update 利用行锁实现悲观锁，查询后更新数据，在提交后该锁被释放。","like_count":0},{"had_liked":false,"id":53947,"user_name":"慧鑫coming","can_delete":false,"product_type":"c1","uid":1324385,"ip_address":"","ucode":"7BAC9CA255630E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLE4LYb3jrH63ZV98Zpc8DompwDgb1O3nffMoZCmiaibauRyEFv6NDNsST9RWxZExvMLMWb50zaanoQ/132","comment_is_top":false,"comment_ctime":1545778880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545778880","product_id":100020801,"comment_content":"在语句执行时加读锁，commit时释放","like_count":0},{"had_liked":false,"id":53924,"user_name":"Justin","can_delete":false,"product_type":"c1","uid":1305601,"ip_address":"","ucode":"D49723FEA66731","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/01/978d54af.jpg","comment_is_top":false,"comment_ctime":1545755839,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545755839","product_id":100020801,"comment_content":"文中的问题 由于没有走索引 我猜是加了表锁了 然后等commit之后释放","like_count":0}]}