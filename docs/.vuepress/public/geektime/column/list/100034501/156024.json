{"id":156024,"title":"28 | 从工作场景出发，寻找炫酷且有效的命令行工具","content":"<p>你好，我是葛俊。今天，我继续和你分享命令行工具的使用。</p><p>在上一篇文章中，我与你介绍了命令行环境中的终端、Shell，以及远程连接的设置，解决了环境配置的问题。今天，我们再来看看具体的命令行工具的使用技巧。我会根据常见的工作场景来组织这些工具，因为优化工作流程、提高效率才是学习工具的真正目的。</p><p>从我的经验来看，开发人员最常见的、使用命令行的场景主要包括两个：</p><ul>\n<li>日常的操作，比如文件夹跳转、处理和搜索文件夹和文件内容、查看和管理系统信息；</li>\n<li>开发中常见的工作，比如Git的使用、API调试、查看日志和网络状况等。</li>\n</ul><p>我会重点与你分享这些场景中有哪些推荐工具以及使用技巧。而至于这些工具如何安装的内容，网络上已经有很多了，我就不再详细描述了。</p><h2>日常操作中的工具和技巧</h2><p>关于日常操作，Linux/Unix系统已经自带了一些工具，另外还有些产生已久、为我们所熟悉的工具。不过，要更高效地完成工作，我们还有更强大的工具可以选择。</p><h3>第一个场景：列举文件夹和文件，查看文件</h3><p><strong>列举文件</strong>的默认工具是ls。除此之外，一个常用的工具是tree，可以列出文件夹的树形结构：</p><p><img src=\"https://static001.geekbang.org/resource/image/5c/3f/5cee9ed0d0fb2beb25961108acdf633f.png?wh=529*290\" alt=\"\"></p><p>另外，还有些比tree更方便的工具，比如alder和exa。exa尤其好用，优点包括：</p><!-- [[[read_end]]] --><ul>\n<li>默认就有漂亮的颜色显示，并且不同种类文件颜色不同；</li>\n<li>可以像ls一样显示当前文件夹，也可以像tree一样显示树形结构。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/d6/3b/d667327bc4bedc74fb665a50d8aa423b.png?wh=544*274\" alt=\"\"></p><p>另外，exa还支持对文件状态显示的加强。</p><p>比如，添加–git选项，exa会显示文件的git状态，在文件名的左边，用两个字母来表示文件在工作区和Git暂存区的状态。其中，N表示新文件，M表示文件修改等。exa的显示和git status命令输出的简单对比，如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/6a/a0/6a9969a87d53e4fc0a073f8918e72ba0.png?wh=547*814\" alt=\"\"></p><p>再比如，使用–extend选项显示文件的额外信息。</p><p><img src=\"https://static001.geekbang.org/resource/image/cb/92/cb7d9a0bb21f0b740f6eee812f582392.png?wh=863*275\" alt=\"\"></p><p>再比如，使用group-directories-first选项，先显示文件夹再显示文件。</p><p><img src=\"https://static001.geekbang.org/resource/image/47/37/47474d86ceb15eabbf6e6b8a0866a537.png?wh=574*322\" alt=\"\"></p><p>至于<strong>查看文件</strong>，Linux默认的工具是cat。相比起来，bat是一个更好用的替代品，除高亮显示外，还可以显示Git的更改状态。</p><p><img src=\"https://static001.geekbang.org/resource/image/f9/e4/f96d0ab6e8f12728c1d0e9ab2baa10e4.png?wh=568*415\" alt=\"\"></p><h3>第二个场景：查找并打开文件，进行查看和编辑</h3><p>一个常用的办法是，使用上面提到的工具来列出文件名，然后使用grep进行过滤查看，或者VIM进行查看和编辑。比如，使用命令</p><pre><code>tree -I &quot;node_modules&quot; -f | grep -C3 index.md\n</code></pre><p>可以得到当前文件夹中的所有index.md文件。</p><p>命令中，tree的参数-I，表示排除文件夹node_modules；tree的参数-f，表示显示文件时包含文件路径，方便你拷贝文件的全名；grep的参数-C3，代表显示搜索结果3行的上下文。</p><p><img src=\"https://static001.geekbang.org/resource/image/e1/54/e1611236c70cacc9193420afcab76154.png?wh=841*275\" alt=\"\"></p><p>我们也可以使用VIM代替grep，进行更复杂的查找和编辑工作。我可以把tree的输出传给VIM，然后在VIM中查找index.md，使用n跳到下一个搜索结果，使用VIM命令gF直接打开文件，进行编辑后使用\\bd命令关闭这个index.md文件。然后，用同样的方式查找并编辑第二、三、四个index.md，从而实现对当前文件夹下每一个index.md文件的查看和修改：</p><p><img src=\"https://static001.geekbang.org/resource/image/f4/f5/f409aa3e83ce0412b6275fd4c042eff5.gif?wh=678*361\" alt=\"\"></p><p>事实上，这正是一个<strong>很常见的命令行工作流</strong>：把某一个命令的输出传给VIM，输出里包含有其他文件的完整路径，比如上面例子中index.md的路径，然后在VIM里使用gF命令查看并处理这些文件。我推荐你也尝试使用这种工作流。</p><p>另外，在上面的例子中，我使用tree命令来列举文件名。其实，很多时候我们<strong>使用find这种专门用来查找文件的命令会更加方便</strong>。不过，我今天要介绍的不是find，而是它的一个替代品，即fd。</p><p><img src=\"https://static001.geekbang.org/resource/image/35/9d/354fc862f7145dd00f2ebda10500dc9d.png?wh=677*179\" alt=\"\"></p><p>我推荐fd的原因主要有3个：</p><ul>\n<li>语法比find简单；</li>\n<li>fd默认会忽略.gitignore文件里指定的文件；</li>\n<li>忽略隐藏文件。</li>\n</ul><p>后两点对开发者来说非常方便。比如，我在搜索时，并不关心node_modules里面的文件，也不关心.git文件夹里的文件，fd可以自动帮我过滤掉。</p><p>另外，fd高亮显示，速度也很快。至于对查找到的文件进行编辑，跟上面提到的方法一样，用管道（Pipe）传给VIM，然后使用gF命令即可。</p><pre><code>fd index.md | vim -\n</code></pre><p>另外，关于查找文件内容的工具grep，我常用的一个替代品是RipGrep（rg）。跟fd类似，它也很适合开发者，有如下4个特点：</p><ul>\n<li>默认忽略.gitignore文件里指定的文件；</li>\n<li>默认忽略隐藏文件；</li>\n<li>默认递归搜索所有子目录；</li>\n<li>可以指定文件类型。</li>\n</ul><p>比如，使用rg tags就可以方便地查找当前目录下所有包含tags的文件。它的查找速度非常快，显示也比grep要漂亮：</p><pre><code>&gt; rg tags\npackage-lock.json\n2467:    &quot;common-tags&quot;: {\n2469:      &quot;resolved&quot;: &quot;https://registry.npmjs.org/common-tags/-/common-tags-1.8.0.tgz&quot;,\n5306:        &quot;common-tags&quot;: &quot;^1.4.0&quot;,\n5446:            &quot;common-tags&quot;: &quot;^1.4.0&quot;,\n\nsrc/pages/2019-05-24-procrastination/index.md\n6:tags: ['自我成长', '拖延症']\n\nsrc/pages/2018-07-21-first-post/index.md\n5:tags: ['this', 'that']\n</code></pre><h3>第三个场景：文件夹之间跳转</h3><p>关于文件夹间的跳转，在Bash中有cd和dirs命令；在Zsh和Fish中，可以使用文件夹名字直接跳转；另外，Zsh支持<code>..</code>、<code>...</code>和<code>-</code>等别名，用来分别跳转到父目录、父目录的父目录，以及目录历史中上一次记录，而不需要写cd。</p><p>接下来，我与你介绍<strong>几个新的工具来支持更快的跳转</strong>。</p><p>实际上文件夹的跳转，有两种常见的情况：</p><ul>\n<li>一种是，快速跳转到文件夹跳转历史中的某条记录，即之前曾经去过的某个文件夹；</li>\n<li>另一种是，快速找到当前文件夹中的某个子文件夹，并跳转过去。</li>\n</ul><p>对于第一种情况，常用的工具有两个，一个是fasd，另一个是z，它们差别不是特别大。我用的是z，具体用法是：z会按照访问频率列出最近访问过的文件夹，并使用字符串匹配的方式让你实现快速跳转。</p><p>比如，用z dem<tab>来进行匹配和自动补全，找到我想去的demo文件夹，回车直接完成跳转。同时，我也可以用z dem&lt;回车&gt; 直接跳转。</tab></p><p><img src=\"https://static001.geekbang.org/resource/image/65/3e/65630c3d48a262195d63fad17e4e133e.gif?wh=678*361\" alt=\"\"></p><p>对于第二种情况，即快速定位某个子文件夹，我介绍一个<strong>超级酷的工具fzf</strong>。本质上讲，fzf是一个对输入进行交互的模糊查询工具。它的使用场景非常多，文件夹的跳转只是一个应用。所以，我还在再后面文章做更多的详细讨论。</p><p>安装好fzf之后，你就可以使用Ctrl+T进行文件夹的交互式查询，或者使用Alt+C进行文件夹跳转。</p><p>比如，我想跳转到src/component文件夹中，可以输入Alt+C，fzf就会列出当前文件夹下的所有文件夹。比如，我输入com，没输入其他字符，fzf会更新匹配到的文件夹，这时可以使用Ctrl+P、Ctrl+N进行上下选择，按下回车就可以进入选中的文件夹。</p><p><img src=\"https://static001.geekbang.org/resource/image/f3/cd/f3892b1c26be577cdf7b3993242830cd.gif?wh=622*359\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/af/cd/af4e2d8ac7c21c48aaeb0c9c55dd4bcd.gif?wh=538*361\" alt=\"\"></p><h3>第四个场景：文件管理</h3><p>系统自带的文件管理工具有cp、mv、rsync等。这里，我再介绍一些更方便的工具。</p><p>首先是一个用来<strong>重命名文件的小工具，叫作vidir</strong>。顾名思义，vidir就是VI来编辑目录的。具体使用方法很简单，vidir命令后面接一个文件夹时，vidir会打开VIM，VIM里面列举该文件夹中所包含的文件和子文件夹，然后使用VIM的命令来修改文件和文件夹的名字之后保存退出。这时，vidir会自动帮助我们完成对文件和文件夹的重命名。</p><p>vidir之所以使用VIM来修改文件，是因为VIM功能强大，修改非常方便。另外，vidir也可以从管道接收文件夹和文件的列表。比如，我想把当前文件夹下所有前缀为index的文件，都在文件名前添加“new-”。这时，我可以使用命令fd | vidir -。</p><p>这样，fd命令会把当前文件夹下所有文件名传给vidir。然后，vidir打开VIM，我们在VIM界面中修改文件名即可。如下所示的录屏图片中，包括了使用VIM的重复命令.的技巧。</p><p><img src=\"https://static001.geekbang.org/resource/image/21/2d/21ef569cff63ed639fed4a00968d6d2d.gif?wh=590*365\" alt=\"\"></p><p>另外一组方便进行文件管理的工具是，<strong>命令行的文件管理器</strong>，即使用键盘命令在终端界面进行文件夹跳转、查看文件和移动文件等操作。这种命令行界面上的UI叫做TUI（Terminal UI）。十多年前的Borland终端IDE，就是这一类工具的翘楚，使用熟练之后效率会很高。</p><p>TUI的文件管理器我用过3个：Midnight Commander (以下简称mc)、Ranger和nnn。</p><p>mc是两个窗口的文件管理器。如果你使用过Windows Commander（Total Commander）的话，你就会对它的用法很熟悉。重要的命令有：使用tab进行两个窗口的切换、使用F4进行编辑、使用F5进行拷贝、使用F9进入菜单、使用F10退出。</p><p>我提供了一张录屏图片，简单演示了在一台远端服务器上使用mc进行多文件拷贝和编辑，并通过菜单修改显示主题的场景。</p><p><img src=\"https://static001.geekbang.org/resource/image/bb/3a/bb49eec06b2b1293e1d2c0620c81fe3a.gif?wh=630*461\" alt=\"\"></p><p>Ranger和nnn是单窗口的文件管理器。Ranger稍微有一点延迟，所以我一般使用nnn。因为是单窗口，所以与我们平时在GUI中使用的文件管理器比较相似。</p><p>比如，在拷贝文件的时候，需要先进入文件所在文件夹，选择文件，然后进入目标文件夹，再使用拷贝命令把文件拷贝过去。我在录屏中演示了在nnn中进行文件夹的跳转、创建，文件的选择、拷贝，使用系统工具打开当前文件，查看帮助等功能。</p><p><img src=\"https://static001.geekbang.org/resource/image/26/48/261bf3fae35b5899ca66aa5e44a39648.gif?wh=618*427\" alt=\"\"></p><p>总的来说，这3个工具中我使用最多的是nnn。跟mc相比，它最大的好处是快捷键设置跟VIM一致，不需要大量使用功能键F1~F12。</p><h2>开发中常见的工作</h2><h3>Git</h3><p>命令行中的Git工具，除了原生的Git之外，常见的还有tig、grv、lazygit和gitin。</p><p>我常用的是tig。因为在tig中，我可以方便地进行查看改动、产生提交、查看历史（blame）等操作，功能非常强大。比如，在查看文件改动时，我们可以方便地使用命令1有选择性地把一个文件中改动的一部分添加到一个提交当中，实现<a href=\"https://time.geekbang.org/column/article/154378\">第26篇文章</a>中提到的git add -p的功能。</p><p>另外，我还可以通过tig快捷地查看一个文件的历史信息。</p><p>关于这两个功能的使用，你可以参考下面的录屏图片。</p><p><img src=\"https://static001.geekbang.org/resource/image/70/d0/7007909425230ece1fac2726d610d0d0.gif?wh=724*580\" alt=\"\"></p><h3>Web 访问</h3><p>我常用的Web访问工具是HTTPie，是curl命令的一个补充。HTTPie的强项在于，专门针对HTTP协议，所以可以做到格式简单、易用性强两点。</p><p>而curl的优势，则包括功能强大、支持多种协议和基本所有服务器上都有预装。</p><p>关于这两个工具，我的建议是，curl肯定要学，HTTPie如果用得到也值得花时间学习。</p><h3>对JSON进行处理</h3><p>在命令行对JSON文本进行处理，最常见的工具是jq。它能够对JSON进行查询和修改处理，功能很强大。</p><p>举一个查询的例子，我们有这样一个person.json文件列举某个人的详细信息：</p><pre><code>$ cat person.json\n{ &quot;id&quot;: { &quot;bioguide&quot;: &quot;E000295&quot;, &quot;thomas&quot;: &quot;02283&quot;, &quot;fec&quot;: [ &quot;S4IA00129&quot; ], &quot;govtrack&quot;: 412667, &quot;opensecrets&quot;: &quot;N00035483&quot;, &quot;lis&quot;: &quot;S376&quot; }, &quot;name&quot;: { &quot;first&quot;: &quot;Joni&quot;, &quot;last&quot;: &quot;Ernst&quot;, &quot;official_full&quot;: &quot;Joni Ernst&quot; }, &quot;bio&quot;: { &quot;gender&quot;: &quot;F&quot;, &quot;birthday&quot;: &quot;1970-07-01&quot; }, &quot;terms&quot;: [ { &quot;type&quot;: &quot;sen&quot;, &quot;start&quot;: &quot;2015-01-06&quot;, &quot;end&quot;: &quot;2021-01-03&quot;, &quot;state&quot;: &quot;IA&quot;, &quot;class&quot;: 2, &quot;state_rank&quot;: &quot;junior&quot;, &quot;party&quot;: &quot;Republican&quot;, &quot;url&quot;: &quot;http://www.ernst.senate.gov&quot;, &quot;address&quot;: &quot;825 B&amp;C Hart Senate Office Building Washington DC 20510&quot;, &quot;office&quot;: &quot;825 B&amp;c Hart Senate Office Building&quot;, &quot;phone&quot;: &quot;202-224-3254&quot; } ] }\n</code></pre><p>可以方便地使用cat person.json | jq .”对JSON进行格式化输出，</p><pre><code>$ cat people.json | jq .\n{\n  &quot;id&quot;: {\n    &quot;bioguide&quot;: &quot;E000295&quot;,\n    &quot;thomas&quot;: &quot;02283&quot;,\n    &quot;fec&quot;: [\n      &quot;S4IA00129&quot;\n    ],\n    &quot;govtrack&quot;: 412667,\n    &quot;opensecrets&quot;: &quot;N00035483&quot;,\n    &quot;lis&quot;: &quot;S376&quot;\n  },\n  &quot;name&quot;: {\n    &quot;first&quot;: &quot;Joni&quot;,\n    &quot;last&quot;: &quot;Ernst&quot;,\n    &quot;official_full&quot;: &quot;Joni Ernst&quot;\n  },\n  &quot;bio&quot;: {\n    &quot;gender&quot;: &quot;F&quot;,\n    &quot;birthday&quot;: &quot;1970-07-01&quot;\n  },\n  &quot;terms&quot;: [\n    {\n      &quot;type&quot;: &quot;sen&quot;,\n      &quot;start&quot;: &quot;2015-01-06&quot;,\n      &quot;end&quot;: &quot;2021-01-03&quot;,\n      &quot;state&quot;: &quot;IA&quot;,\n      &quot;class&quot;: 2,\n      &quot;state_rank&quot;: &quot;junior&quot;,\n      &quot;party&quot;: &quot;Republican&quot;,\n      &quot;url&quot;: &quot;http://www.ernst.senate.gov&quot;,\n      &quot;address&quot;: &quot;825 B&amp;C Hart Senate Office Building Washington DC 20510&quot;,\n      &quot;office&quot;: &quot;825 B&amp;c Hart Senate Office Building&quot;,\n      &quot;phone&quot;: &quot;202-224-3254&quot;\n    }\n  ]\n}\n</code></pre><p>以及使用jq \".terms[0].office\"命令查询他的第一个工作任期的办公室地址。</p><pre><code>$ cat person.json | jq &quot;.terms[0].office&quot;\n&quot;825 B&amp;c Hart Senate Office Building&quot;\n</code></pre><p>但，jq存在的最大问题是，它有一套自己的查询处理语言。如果使用jq的频次没那么高的话，很难记住，每次都要去查帮助才可以。</p><p>针对这种情况，有人设计了另一种类似的工具，直接使用JavaScript作为查询处理语言，典型代表是fx和jq.node。这，就大大方便了使用JavaScript的开发者，因为可以使用已经熟悉了的语法。</p><p>比如，对于上个案例的JSON文件，我可以方便地在fx工具中使用JavaScript的函数filter()进行过滤查询。</p><pre><code>$ cat person-raw.json| fx 'json =&gt; json.terms.filter(x =&gt; x.type == &quot;top&quot;)'\n[\n  {\n    &quot;type&quot;: &quot;top&quot;,\n    &quot;office&quot;: &quot;333 B&amp;c Hart CIrcle  Building&quot;,\n    &quot;phone&quot;: &quot;202-224-3254&quot;\n  }\n]\n</code></pre><h3>查找、关闭进程</h3><p>通常情况下，我们使用kill和pkill，来查找和关闭进程。但，使用fzf之后，我们可以方便地进行交互式的查找目标进程。具体使用方法是，输入kill <tab>，fzf就会提供一个交互式的界面供你查找目标进程，然后回车确认即可。</tab></p><p>在命令行上进行交互式的操作，非常爽，我推荐你一定要试试。</p><p><img src=\"https://static001.geekbang.org/resource/image/7d/0c/7de54d49ff68186ee6002bc842e95d0c.gif?wh=564*382\" alt=\"\"></p><h3>查看日志文件</h3><p>关于查看日志文件的工具，我推荐lnav。它比tail -F要方便、强大得多，有很多很棒的功能，包括：</p><ul>\n<li>支持很多日志格式，比如syslog、sudo、uWSGI等，并可以根据格式高亮显示；</li>\n<li>支持多个日志同时显示，并用不同颜色区分；</li>\n<li>支持正则表达式进行过滤等。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/52/86/52caa8ef22d6b8b82ce721588a9ac886.png?wh=633*482\" alt=\"\"></p><h3>命令行本身的实用技巧</h3><p>关于命令行的使用技巧，有两个非常值得一提：一个是!$，另一个是!!。</p><p><strong>第一个!$</strong>，代表上一个命令行的最后一个参数。比如，如果我上一条命令使用</p><pre><code>$ vim src/component/README.txt\n</code></pre><p>下一步我想为它产生一个备份文件，就可以使用!$：</p><pre><code>## 以下命令即   copy vim src/component/README.txt vim src/component/README.txt.bak\n$ cp !$ !$.bak\n</code></pre><p><strong>第二个常用的是!!</strong>，表示上一个命令的完整命令。最常用的场景是，我先拷贝一个文件，发现没有权限，需要sudo，下一步我就可以用sudo !!来用sudo再次运行拷贝命令。</p><pre><code>## 因为权限不足，命令失败\n$ cp newtool /usr/local/bin/\n\n## 重新使用sudo运行上一条命令。即 sudo wtool /usr/local/bin/\n$ sudo !!\n</code></pre><h2>小结</h2><p>今天，我与你介绍了很多工具。使用工具提高研发效能，最关键的是找到真正常用的工作场景，然后去寻找对应的工具来提高效率。</p><p>需要注意的是，只有重复性高的工作，才最适合使用命令行工具；否则，用来适应工具的时间，可能比节省下的时间还要多。这，是命令行的一个基本特点。</p><p>最后，我把今天与你讨论的Linux/Unix系统自带工具和替代工具，整理为了一张表格，以方便你复习：</p><p><img src=\"https://static001.geekbang.org/resource/image/46/80/4649bffbfd17cb90d217a25d0382f980.jpg?wh=2514*2504\" alt=\"\"></p><h2>思考题</h2><p>不知道你有没有注意到，在录屏中我多次用到了一个叫作tldr的工具。你知道它是什么作用吗？</p><p>感谢你的收听，欢迎你在评论区给我留言分享你的观点，也欢迎你把这篇文章分享给更多的朋友一起阅读。我们下期再见！</p><p></p>","neighbors":{"left":{"article_title":"27 | 命令行：不只是酷，更重要的是能提高个人效能","id":155538},"right":{"article_title":"29 |  1+1>2，灵活的工具组合及环境让你的工作效率翻倍","id":158332}},"comments":[{"had_liked":false,"id":145264,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1572239967,"is_pvip":false,"replies":[{"id":"56322","content":"fzf 的preview功能的确好用。推荐大家可以试试 @我来也 的配置。<br><br>fzf 的github页面上有一个视频链接，介绍fzf在命令行和VIM中的使用，很不错。也推荐大家看看。","user_name":"作者回复","comment_id":145264,"uid":"1030244","ip_address":"","utype":1,"ctime":1572405745,"user_name_real":"葛俊 Jason"}],"discussion_count":6,"race_medal":0,"score":"14457141855","product_id":100034501,"comment_content":"今天又学了些新东西.<br><br>以前这些工具都是自己慢慢摸索,或机缘巧合看了某个文章提到了,自己才会去尝试下.<br>现在一篇文章就接触这么多,还是蛮方便的.<br><br>bat和fzf这个确实不错.<br>特别是fzf,简单配置后更强大.<br>我Mac下的几个配置可以给你们试试:<br>```<br># 设置样式 可以直接预览文件 也可以用快捷键执行简单的操作<br>export FZF_DEFAULT_OPTS=&quot;--height 40% --reverse --border --prompt &#39;&gt;&gt;&gt;&#39; \\<br>    --bind &#39;ctrl-j:preview-down,ctrl-k:preview-up,ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort,?:toggle-preview&#39; \\<br>    --header &#39;C-j&#47;k: preview down&#47;up, C-y: copy, ?: toggle preview&#39; \\<br>    --preview &#39;(highlight -O ansi -l {} 2&gt; &#47;dev&#47;null || cat {} || tree -C {}) 2&gt; &#47;dev&#47;null&#39;&quot;<br>export FZF_CTRL_T_OPTS=$FZF_DEFAULT_OPTS<br>export FZF_CTRL_R_OPTS=&quot;--preview &#39;echo {}&#39; --preview-window hidden:wrap --bind &#39;?:toggle-preview&#39;&quot;<br># 让Ctrl-R直接执行选中的命令<br>fzf-history-widget-accept() {<br>  fzf-history-widget<br>  zle accept-line<br>}<br>zle    -N    fzf-history-widget-accept<br>bindkey &#39;^X^R&#39; fzf-history-widget-accept<br>```<br>","like_count":4,"discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472312,"discussion_content":"fzf 的preview功能的确好用。推荐大家可以试试 @我来也 的配置。\n\nfzf 的github页面上有一个视频链接，介绍fzf在命令行和VIM中的使用，很不错。也推荐大家看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572405745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42217,"discussion_content":"今天在vim中试了下fzf.vim的插件,简直太强大了.\n今天也装了RipGrep试试,功能太强大了.\n以前用grep可能要几秒才能出结果,现在是几乎是秒出.\n对于经常要在vim中搜索的我来说,真是可以节约不少等待的时间.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572613269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42488,"discussion_content":"👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572680810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42217,"ip_address":""},"score":42488,"extra":""}]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41384,"discussion_content":"我发现我的vim插件列表中有`junegunn/fzf.vim`\n但是一直以来都没有用过.😂😂\n再慢慢用起来.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572417055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42489,"discussion_content":"有空再看看fugitive vim 插件 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572680848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41384,"ip_address":""},"score":42489,"extra":""},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":42519,"discussion_content":"这个插件也是装了，没怎么仔细研究。\n印象中这个功能也是超级强大的。\n\n平常就用它 看每一行是谁在什么时候提交的.\n\n有时间了我再研究研究。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572687676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42489,"ip_address":""},"score":42519,"extra":""}]}]},{"had_liked":false,"id":154876,"user_name":"我愿化身石桥→_→","can_delete":false,"product_type":"c1","uid":1310329,"ip_address":"","ucode":"87EC95F6D792DE","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/79/c19d50df.jpg","comment_is_top":false,"comment_ctime":1574585246,"is_pvip":true,"replies":[{"id":"59458","content":"这是因为VIMI默认要求当前文件保存之后才能切换到其他文件。改变这个设置，请使用 :set hidden   ","user_name":"作者回复","comment_id":154876,"uid":"1030244","ip_address":"","utype":1,"ctime":1574589164,"user_name_real":"葛俊 Jason"}],"discussion_count":1,"race_medal":0,"score":"10164519838","product_id":100034501,"comment_content":"老师，为什么我使用 fd 文件夹 | vim -<br>使用 gF 跳转会报错<br> E37: No write since last change<br>","like_count":3,"discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475603,"discussion_content":"这是因为VIMI默认要求当前文件保存之后才能切换到其他文件。改变这个设置，请使用 :set hidden   ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574589164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145934,"user_name":"Neo","can_delete":false,"product_type":"c1","uid":1114192,"ip_address":"","ucode":"E550EE23F74559","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/50/a512d08d.jpg","comment_is_top":false,"comment_ctime":1572403818,"is_pvip":false,"replies":[{"id":"56321","content":"rg 默认就可以：<br>&gt; rg &lt;needle&gt;<br><br>传统的办法是用find找到文件，然后用xargs把文件名传给grep命令：<br>&gt; find . -type f | xargs grep &lt;needle&gt;<br><br>当然你可以用fd代替find，rp代替grep：<br>&gt; fd -t f | xargs rg &lt;needle&gt;<br><br>needle 是你要找的字符串。","user_name":"作者回复","comment_id":145934,"uid":"1030244","ip_address":"","utype":1,"ctime":1572405293,"user_name_real":"葛俊 Jason"}],"discussion_count":1,"race_medal":0,"score":"10162338410","product_id":100034501,"comment_content":"如何递归搜索当前文件夹内所有文件的全文","like_count":3,"discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472634,"discussion_content":"rg 默认就可以：\n&amp;gt; rg &amp;lt;needle&amp;gt;\n\n传统的办法是用find找到文件，然后用xargs把文件名传给grep命令：\n&amp;gt; find . -type f | xargs grep &amp;lt;needle&amp;gt;\n\n当然你可以用fd代替find，rp代替grep：\n&amp;gt; fd -t f | xargs rg &amp;lt;needle&amp;gt;\n\nneedle 是你要找的字符串。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572405293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145174,"user_name":"P小二","can_delete":false,"product_type":"c1","uid":1030177,"ip_address":"","ucode":"FCEDF8E4673F44","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/21/072e5068.jpg","comment_is_top":false,"comment_ctime":1572226129,"is_pvip":false,"replies":[{"id":"56013","content":"thefuck 我倒是装了，不过用的很少 ：）<br><br>跳转到当前finder目录，我用的是cdf命令https:&#47;&#47;github.com&#47;robbyrussell&#47;oh-my-zsh&#47;tree&#47;master&#47;plugins&#47;osx<br><br>这个plugin还有几个其他命令也还不错。推荐看看","user_name":"作者回复","comment_id":145174,"uid":"1030244","ip_address":"","utype":1,"ctime":1572238273,"user_name_real":"葛俊 Jason"}],"discussion_count":1,"race_medal":0,"score":"5867193425","product_id":100034501,"comment_content":"tldr就是太长不想看，想给我一个例子让我运行起来。常用的场景都给例子出来，让人一看就懂。<br><br>不知道会不会介绍thefuck。<br><br>macos中finder用打开zsh并跳转到当前finder目录，也是很频繁的需求，有个Go2shell的工具也挺好用。","like_count":1,"discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472278,"discussion_content":"thefuck 我倒是装了，不过用的很少 ：）\n\n跳转到当前finder目录，我用的是cdf命令https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/osx\n\n这个plugin还有几个其他命令也还不错。推荐看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572238273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273969,"user_name":"D","can_delete":false,"product_type":"c1","uid":1347425,"ip_address":"","ucode":"10A0F1F79156B7","user_header":"https://static001.geekbang.org/account/avatar/00/14/8f/61/8c28ae2b.jpg","comment_is_top":false,"comment_ctime":1610769549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610769549","product_id":100034501,"comment_content":"问下老师，文章中文件重命名的 vidir 工具，在哪下的 ？ 我在mac上 brew install vidir 提示 No available formula or cask with the name &quot;vidir&quot;.","like_count":0},{"had_liked":false,"id":235915,"user_name":"紫色天空","can_delete":false,"product_type":"c1","uid":1788657,"ip_address":"","ucode":"F829632785ECDC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/4a/f1/68af6beb.jpg","comment_is_top":false,"comment_ctime":1595241953,"is_pvip":false,"replies":[{"id":"87323","content":"大部分都需要自己安装","user_name":"作者回复","comment_id":235915,"uid":"1030244","ip_address":"","utype":1,"ctime":1595405087,"user_name_real":"葛俊 Jason"}],"discussion_count":1,"race_medal":0,"score":"1595241953","product_id":100034501,"comment_content":"这些工具是Linux自带的吗，担心写成shell自动化的时候找不到","like_count":0,"discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501878,"discussion_content":"大部分都需要自己安装","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595405087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182237,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1582731482,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1582731482","product_id":100034501,"comment_content":"收藏先，后面慢慢实践。","like_count":0},{"had_liked":false,"id":178208,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1581608557,"is_pvip":false,"replies":[{"id":"69678","content":"另外sudo!! &lt;Tab&gt; 在zsh中可以自动补全，更放心一些 ：）<br>","user_name":"作者回复","comment_id":178208,"uid":"1030244","ip_address":"","utype":1,"ctime":1582008749,"user_name_real":"葛俊 Jason"}],"discussion_count":1,"race_medal":0,"score":"1581608557","product_id":100034501,"comment_content":"温故知新。<br>看到文中的 sudo !! 我有话要说。<br>我平常遇到这种情况，都是用两个快捷键：<br>1。Ctrl+p 切换到上条命令。<br>2。Ctrl+a 移动到行首<br>剩下的就是sudo了","like_count":0,"discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483702,"discussion_content":"另外sudo!! &amp;lt;Tab&amp;gt; 在zsh中可以自动补全，更放心一些 ：）\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582008749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152595,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1574047471,"is_pvip":false,"replies":[{"id":"58755","content":"fzf 真的是厉害。再来一个例子：<br>https:&#47;&#47;ddrscott.github.io&#47;blog&#47;2017&#47;fzf-dictionary&#47;","user_name":"作者回复","comment_id":152595,"uid":"1030244","ip_address":"","utype":1,"ctime":1574131011,"user_name_real":"葛俊 Jason"}],"discussion_count":1,"race_medal":0,"score":"1574047471","product_id":100034501,"comment_content":"fzf 非常好用,还有一个是vim的浏览器插件","like_count":0,"discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474869,"discussion_content":"fzf 真的是厉害。再来一个例子：\nhttps://ddrscott.github.io/blog/2017/fzf-dictionary/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574131011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146003,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1572416692,"is_pvip":false,"replies":[{"id":"56370","content":"如果我们需要打开每个文件，的确更方便！另外一个办法是还可以使用fzf的preview功能 ：）","user_name":"作者回复","comment_id":146003,"uid":"1030244","ip_address":"","utype":1,"ctime":1572439451,"user_name_real":"葛俊 Jason"}],"discussion_count":1,"race_medal":0,"score":"1572416692","product_id":100034501,"comment_content":"今天又找了个小技巧,跟文中的命令`fd index.md | vim -`功能类似.<br><br>1.`fd index.md | xargs -o vim`<br>   遇到带空格的文件名会出问题<br><br>2.`find . index.md -exec vi {} +`<br>  可以正确处理带空格的文件名<br><br>这两个命令都是直接打开指定文件, 就不用再用`gF`打开当前某一行的文件了.<br>参考:<br>https:&#47;&#47;superuser.com&#47;questions&#47;335999&#47;how-can-i-edit-all-the-files-returned-by-find-in-vi-in-linux<br>","like_count":0,"discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472665,"discussion_content":"如果我们需要打开每个文件，的确更方便！另外一个办法是还可以使用fzf的preview功能 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572439451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145123,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1572220907,"is_pvip":false,"replies":[{"id":"56019","content":"我一般也都是问也搜索具体的安装方式的 😅 你先试试搜索，找不到的告诉我，我们一起看看","user_name":"作者回复","comment_id":145123,"uid":"1030244","ip_address":"","utype":1,"ctime":1572238583,"user_name_real":"葛俊 Jason"}],"discussion_count":2,"race_medal":0,"score":"1572220907","product_id":100034501,"comment_content":"文章的工具是否可以列出包名，我试着用yum安装，几乎都是找不到了用的包！","like_count":0,"discussions":[{"author":{"id":1030244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/64/43a83f69.jpg","nickname":"葛俊 Jason","note":"","ucode":"4ECC8F8F64F473","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472252,"discussion_content":"我一般也都是问也搜索具体的安装方式的 😅 你先试试搜索，找不到的告诉我，我们一起看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572238583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40588,"discussion_content":"具体的工具再单独去谷歌,很方便的.\n有些工具(比如fzf)安装后还需要配置一些参数才会更好用.\n这个还是找专门的文章更合适.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572239139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}