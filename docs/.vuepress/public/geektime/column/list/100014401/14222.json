{"id":14222,"title":"03 | 初探微服务架构","content":"<p>上一期我给你讲了什么时候应该进行服务化，以及服务化拆分的两种方式即横向拆分和纵向拆分，最后还提到了引入微服务架构需要解决的问题。</p>\n<p>我想你一定很好奇微服务架构到底是什么样子的，接下来我们一起<span class=\"orange\">走进微服务架构，来看看它的各个组成部分</span>。</p>\n<p>下面这张图是我根据自己的经验，绘制的微服务架构的模块图，在具体介绍之前先来看下一次正常的服务调用的流程。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/41/3b/419b77a39e6b7e4fcaa5456aa9d9253b.png?wh=949*532\" alt=\"\" /></p>\n<p>首先服务提供者（就是提供服务的一方）按照一定格式的服务描述，向注册中心注册服务，声明自己能够提供哪些服务以及服务的地址是什么，完成服务发布。</p>\n<p>接下来服务消费者（就是调用服务的一方）请求注册中心，查询所需要调用服务的地址，然后以约定的通信协议向服务提供者发起请求，得到请求结果后再按照约定的协议解析结果。</p>\n<p>而且在服务的调用过程中，服务的请求耗时、调用量以及成功率等指标都会被记录下来用作监控，调用经过的链路信息会被记录下来，用于故障定位和问题追踪。在这期间，如果调用失败，可以通过重试等服务治理手段来保证成功率。</p>\n<p>总结一下，微服务架构下，服务调用主要依赖下面几个基本组件：</p>\n<ul>\n<li>\n<p>服务描述</p>\n</li>\n<li>\n<p>注册中心</p>\n</li>\n<li>\n<p>服务框架</p>\n</li>\n<li>\n<p>服务监控</p>\n</li>\n<li>\n<p>服务追踪</p>\n</li>\n<li>\n<p>服务治理</p>\n</li>\n</ul>\n<p>接下来，我来为你一一介绍这些组件。</p>\n<h2>服务描述</h2>\n<p>服务调用首先要解决的问题就是服务如何对外描述。比如，你对外提供了一个服务，那么这个服务的服务名叫什么？调用这个服务需要提供哪些信息？调用这个服务返回的结果是什么格式的？该如何解析？这些就是服务描述要解决的问题。</p><!-- [[[read_end]]] -->\n<p>常用的服务描述方式包括RESTful API、XML配置以及IDL文件三种。</p>\n<p>其中，RESTful API方式通常用于HTTP协议的服务描述，并且常用Wiki或者<a href=\"http://swagger.io\">Swagger</a>来进行管理。下面是一个RESTful API方式的服务描述的例子。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/42/fa/426bc9df0543fbf8b54e8714fb9745fa.png?wh=1217*599\" alt=\"\" /></p>\n<p></p>\n<p>XML配置方式多用作RPC协议的服务描述，通过*.xml配置文件来定义接口名、参数以及返回值类型等。下面是一个XML配置方式的服务描述的例子。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/fd/3f/fd877669241102a7b772611b98d4363f.png?wh=550*328\" alt=\"\" /></p>\n<p>IDL文件方式通常用作Thrift和gRPC这类跨语言服务调用框架中，比如gRPC就是通过Protobuf文件来定义服务的接口名、参数以及返回值的数据结构，示例如下：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/4d/e2/4df2bfb8744227eb76f0a02b95736ce2.png?wh=834*514\" alt=\"\" /></p>\n<p></p>\n<h2>注册中心</h2>\n<p>有了服务的接口描述，下一步要解决的问题就是服务的发布和订阅，就是说你提供了一个服务，如何让外部想调用你的服务的人知道。这个时候就需要一个类似注册中心的角色，服务提供者将自己提供的服务以及地址登记到注册中心，服务消费者则从注册中心查询所需要调用的服务的地址，然后发起请求。</p>\n<p>一般来讲，注册中心的工作流程是：</p>\n<ul>\n<li>\n<p>服务提供者在启动时，根据服务发布文件中配置的发布信息向注册中心注册自己的服务。</p>\n</li>\n<li>\n<p>服务消费者在启动时，根据消费者配置文件中配置的服务信息向注册中心订阅自己所需要的服务。</p>\n</li>\n<li>\n<p>注册中心返回服务提供者地址列表给服务消费者。</p>\n</li>\n<li>\n<p>当服务提供者发生变化，比如有节点新增或者销毁，注册中心将变更通知给服务消费者。</p>\n</li>\n</ul>\n<p><img src=\"https://static001.geekbang.org/resource/image/6a/31/6a04d48fe530f5467a78cd658dbd1131.png?wh=542*324\" alt=\"\" /></p>\n<h2>服务框架</h2>\n<p>通过注册中心，服务消费者就可以获取到服务提供者的地址，有了地址后就可以发起调用。但在发起调用之前你还需要解决以下几个问题。</p>\n<ul>\n<li>\n<p>服务通信采用什么协议？就是说服务提供者和服务消费者之间以什么样的协议进行网络通信，是采用四层TCP、UDP协议，还是采用七层HTTP协议，还是采用其他协议？</p>\n</li>\n<li>\n<p>数据传输采用什么方式？就是说服务提供者和服务消费者之间的数据传输采用哪种方式，是同步还是异步，是在单连接上传输，还是多路复用。</p>\n</li>\n<li>\n<p>数据压缩采用什么格式？通常数据传输都会对数据进行压缩，来减少网络传输的数据量，从而减少带宽消耗和网络传输时间，比如常见的JSON序列化、Java对象序列化以及Protobuf序列化等。</p>\n</li>\n</ul>\n<h2>服务监控</h2>\n<p>一旦服务消费者与服务提供者之间能够正常发起服务调用，你就需要对调用情况进行监控，以了解服务是否正常。通常来讲，服务监控主要包括三个流程。</p>\n<ul>\n<li>\n<p>指标收集。就是要把每一次服务调用的请求耗时以及成功与否收集起来，并上传到集中的数据处理中心。</p>\n</li>\n<li>\n<p>数据处理。有了每次调用的请求耗时以及成功与否等信息，就可以计算每秒服务请求量、平均耗时以及成功率等指标。</p>\n</li>\n<li>\n<p>数据展示。数据收集起来，经过处理之后，还需要以友好的方式对外展示，才能发挥价值。通常都是将数据展示在Dashboard面板上，并且每隔10s等间隔自动刷新，用作业务监控和报警等。</p>\n</li>\n</ul>\n<h2>服务追踪</h2>\n<p>除了需要对服务调用情况进行监控之外，你还需要记录服务调用经过的每一层链路，以便进行问题追踪和故障定位。</p>\n<p>服务追踪的工作原理大致如下：</p>\n<ul>\n<li>\n<p>服务消费者发起调用前，会在本地按照一定的规则生成一个requestid，发起调用时，将requestid当作请求参数的一部分，传递给服务提供者。</p>\n</li>\n<li>\n<p>服务提供者接收到请求后，记录下这次请求的requestid，然后处理请求。如果服务提供者继续请求其他服务，会在本地再生成一个自己的requestid，然后把这两个requestid都当作请求参数继续往下传递。</p>\n</li>\n</ul>\n<p>以此类推，通过这种层层往下传递的方式，一次请求，无论最后依赖多少次服务调用、经过多少服务节点，都可以通过最开始生成的requestid串联所有节点，从而达到服务追踪的目的。</p>\n<h2>服务治理</h2>\n<p>服务监控能够发现问题，服务追踪能够定位问题所在，而解决问题就得靠服务治理了。服务治理就是通过一系列的手段来保证在各种意外情况下，服务调用仍然能够正常进行。</p>\n<p>在生产环境中，你应该经常会遇到下面几种状况。</p>\n<ul>\n<li>\n<p>单机故障。通常遇到单机故障，都是靠运维发现并重启服务或者从线上摘除故障节点。然而集群的规模越大，越是容易遇到单机故障，在机器规模超过一百台以上时，靠传统的人肉运维显然难以应对。而服务治理可以通过一定的策略，自动摘除故障节点，不需要人为干预，就能保证单机故障不会影响业务。</p>\n</li>\n<li>\n<p>单IDC故障。你应该经常听说某某App，因为施工挖断光缆导致大批量用户无法使用的严重故障。而服务治理可以通过自动切换故障IDC的流量到其他正常IDC，可以避免因为单IDC故障引起的大批量业务受影响。</p>\n</li>\n<li>\n<p>依赖服务不可用。比如你的服务依赖依赖了另一个服务，当另一个服务出现问题时，会拖慢甚至拖垮你的服务。而服务治理可以通过熔断，在依赖服务异常的情况下，一段时期内停止发起调用而直接返回。这样一方面保证了服务消费者能够不被拖垮，另一方面也给服务提供者减少压力，使其能够尽快恢复。</p>\n</li>\n</ul>\n<p>上面是三种最常见的需要引入服务治理的场景，当然还有一些其他服务治理的手段比如自动扩缩容，可以用来解决服务的容量问题。</p>\n<h2>总结</h2>\n<p>通过前面的讲解，相信你已经对微服务架构有了基本的认识，对微服务架构的基本组件也有了初步了解。</p>\n<p>这几个基本组件共同组成了微服务架构，在生产环境下缺一不可，所以在引入微服务架构之前，你的团队必须掌握这些基本组件的原理并具备相应的开发能力。实现方式上，可以引入开源方案；如果有充足的资深技术人员，也可以选择自行研发微服务架构的每个组件。但对于大部分中小团队来说，我认为采用开源实现方案是一个更明智的选择，一方面你可以节省相关技术人员的投入从而更专注于业务，另一方面也可以少走弯路少踩坑。不管你是采用开源方案还是自行研发，<strong>都必须吃透每个组件的工作原理并能在此基础上进行二次开发</strong>。</p>\n<p>专栏后面的内容，我会带你对这几个微服务架构的基本组件进行详细剖析，让你能知其然也知其所以然。</p>\n<h2>思考题</h2>\n<p>最后你可以思考一下，微服务架构下的基本组件所解决的问题，对应到单体应用时是否存在？如果存在，解决方案是否相同？</p>\n<p>欢迎你在留言区写下自己的思考，与我一起讨论。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"02 | 从单体应用走向服务化","id":13891},"right":{"article_title":"04 | 如何发布和引用服务？","id":14425}},"comments":[{"had_liked":false,"id":21906,"user_name":"oddrock","can_delete":false,"product_type":"c1","uid":1037506,"ip_address":"","ucode":"55BADA192250B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/c2/910d231e.jpg","comment_is_top":false,"comment_ctime":1535411960,"is_pvip":true,"replies":[{"id":"7882","content":"看来对soa很了解","user_name":"作者回复","comment_id":21906,"uid":"1010144","ip_address":"","utype":1,"ctime":1535457976,"user_name_real":"古月中心相心"}],"discussion_count":1,"race_medal":0,"score":"285003253496","product_id":100014401,"comment_content":"微服务架构下要解决的服务描述、服务注册与发现、服务框架、服务监控、服务跟踪、服务治理其实在soa下基本都同样存在。<br>soa下服务描述用wsdl，服务注册与发现用uddl，服务框架、服务监控和服务跟踪、治理基本都依赖esb，治理还要部分依赖负载均衡。<br>同样情况在单体简单的多，服务描述就是api，服务注册与发现就是引用jar，监控、跟踪、治理在单体情况下基本不存在，最多用jvm监控工具来监控<br><br>我的理解如上，还请老师指正<br>","like_count":67,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422915,"discussion_content":"看来对soa很了解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535457976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89878,"user_name":"zhihai.tu","can_delete":false,"product_type":"c1","uid":1045888,"ip_address":"","ucode":"61371EA3EF6988","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/80/baddf03b.jpg","comment_is_top":false,"comment_ctime":1556292641,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"259254330401","product_id":100014401,"comment_content":"微服务架构6大组件：<br>1、服务描述：RestfulApi (http)、xml (rpc)、IDL (grpc)<br>2、注册中心：注册（服务提供者-&gt;注册中心）、订阅（服务消费者-&gt;注册中心）、返回（注册中心-&gt;服务消费者）、通知（注册中心-&gt;服务消费者）<br>3、服务框架<br>4、服务监控（发现问题）：指标收集、数据处理、数据展现<br>5、服务追踪（定位问题）：RequestId传递<br>6、服务治理（解决问题）：单机故障——自动摘除、单IDC故障——自动切换、依赖服务不可用——熔断","like_count":61},{"had_liked":false,"id":22032,"user_name":"michael","can_delete":false,"product_type":"c1","uid":1005835,"ip_address":"","ucode":"69738B5801F0FD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/0b/fb876077.jpg","comment_is_top":false,"comment_ctime":1535455866,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"237758657146","product_id":100014401,"comment_content":"老师，服务追踪中，为什么各服务层需要生产自己的requestid，只使用客户端生成的requestid在各层传递不行吗？","like_count":56,"discussions":[{"author":{"id":1666905,"avatar":"https://static001.geekbang.org/account/avatar/00/19/6f/59/21beefcb.jpg","nickname":"YY","note":"","ucode":"9E9F9A824D6129","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":27624,"discussion_content":"这样的话无法追踪客户端这次请求调用了哪些服务？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1570671929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181752,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoMiaBq7N3CDlWoqKUjX9zrVVJ9Xm1BF9iatYmmFl62vx3t9Am1ne4PebqVzgUwexPa53F9VMXlw8yw/132","nickname":"GK丶Air","note":"","ucode":"2EBCEDEA012FBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296957,"discussion_content":"我理解一个也可以，只是看不出来链路先后顺序","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596714211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/10/6e/a21968a9.jpg","nickname":"花下眠","note":"","ucode":"F14C138BF7AEA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56045,"discussion_content":"如果这个id[唯一字符串+递增数字]生成规则，最后几位是用于记录调用顺序的呢，每次服务提供者如果要调其他服务，只需要把id最后的数字+1，理论上可以的吧？？？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574427093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1636059,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5XJib9wlWdMrs7Z6XWGic42mxUMSsB08Sluiat17w1AoVxYrtDI9X7zCfARtFwjGiaM0kIMYAkPpqia0ZhAh8GVCNg/132","nickname":"Geek_be5c57","note":"","ucode":"B086B6B019C148","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5446,"discussion_content":"这样的话无法建立服务链的结构吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566273851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652895,"avatar":"https://static001.geekbang.org/account/avatar/00/19/38/9f/895353ab.jpg","nickname":"黄卫江","note":"","ucode":"0366942B81E7FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297931,"discussion_content":"每个id是每个服务的签名，不每个人都签一遍怎么跟踪所有人","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597113345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1606295,"avatar":"https://static001.geekbang.org/account/avatar/00/18/82/97/04d1d538.jpg","nickname":"RickyTheGeek","note":"","ucode":"806E4334A8E093","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579312,"discussion_content":"一个也是可以的，上报requestId的时候带上当前系统的唯一标识和时间戳就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657344350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1699086,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ed/0e/155a6ef4.jpg","nickname":"万歳","note":"","ucode":"6C86DB96A14BF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553062,"discussion_content":"每个经过的节点都需要记录到吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645704032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2435535,"avatar":"https://static001.geekbang.org/account/avatar/00/25/29/cf/db5be02a.jpg","nickname":"漆黑的小白","note":"","ucode":"C8FF1577C6FBDC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551387,"discussion_content":"用一个也可以吧，由被调用的服务上报到es里，最后通过requestid聚合分析出调用链。类似pinpoint？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645005059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1208959,"avatar":"https://static001.geekbang.org/account/avatar/00/12/72/7f/c46aff30.jpg","nickname":"当下","note":"","ucode":"17338CE10927C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7531,"discussion_content":"同上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567558920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22033,"user_name":"XuToTo","can_delete":false,"product_type":"c1","uid":1074155,"ip_address":"","ucode":"899223E5A01AC3","user_header":"https://static001.geekbang.org/account/avatar/00/10/63/eb/af8d2b50.jpg","comment_is_top":false,"comment_ctime":1535457392,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"113204607088","product_id":100014401,"comment_content":"看到一位同学讨论到 http 和 rpc，我的理解是，其实 http 服务从某种程度上来说也算 rpc,之所以不使用 http 来做内部 rpc，我想有一部分原因是 http 包含了冗余的信息，并不适用于内部高效的 rpc，像是 gRPC 这样的都会利用 protocol buffer 来最大限度减少序列化后传输信息的大小。","like_count":27,"discussions":[{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556755,"discussion_content":"一般说rpc指的是 rpc框架。框架包含协议， 框架下 可以用 http 也能用 tcp。\nrpc协议 是和 http一个层面的，都是通信协议。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647501678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22162,"user_name":"王宏达达达","can_delete":false,"product_type":"c1","uid":1021829,"ip_address":"","ucode":"F6D2348EE216DE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/85/219709fd.jpg","comment_is_top":false,"comment_ctime":1535516802,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"87434862722","product_id":100014401,"comment_content":"老师，微服务和分布式的区别到底在哪里呢？","like_count":19,"discussions":[{"author":{"id":1014991,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/cf/d5382404.jpg","nickname":"RRR","note":"","ucode":"F32A579D201EC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315384,"discussion_content":"分布式是微服务的技术实现方式","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1603268129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556756,"discussion_content":"分布式 是 纯技术。\n微服务 是一种 架构风格， 这个架构里 用到了 分布式技术。\n但是 这个架构里 还有其他 技术， rpc，服务注册，监控 等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647501763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652895,"avatar":"https://static001.geekbang.org/account/avatar/00/19/38/9f/895353ab.jpg","nickname":"黄卫江","note":"","ucode":"0366942B81E7FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297934,"discussion_content":"分布式的概念更广","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597113480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22024,"user_name":"5ispy","can_delete":false,"product_type":"c1","uid":1119481,"ip_address":"","ucode":"017FD3573B899F","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/f9/5e08a350.jpg","comment_is_top":false,"comment_ctime":1535452008,"is_pvip":false,"replies":[{"id":"7876","content":"后面有一节会讲混合云下的微服务架构","user_name":"作者回复","comment_id":22024,"uid":"1010144","ip_address":"","utype":1,"ctime":1535457758,"user_name_real":"古月中心相心"}],"discussion_count":1,"race_medal":0,"score":"74549896040","product_id":100014401,"comment_content":"阿忠老师终于提到自动扩容，后面会细讲吗？这是不是支持8对明星并发出轨的关键🤪","like_count":17,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422966,"discussion_content":"后面有一节会讲混合云下的微服务架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535457758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22343,"user_name":"努力的小斌","can_delete":false,"product_type":"c1","uid":1221740,"ip_address":"","ucode":"B9D93A7159B67D","user_header":"https://static001.geekbang.org/account/avatar/00/12/a4/6c/1dfe8412.jpg","comment_is_top":false,"comment_ctime":1535616787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"48780257043","product_id":100014401,"comment_content":"问requestID，大家可以看一下Google Dapper那篇论文","like_count":11},{"had_liked":false,"id":95377,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1558049917,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40212755581","product_id":100014401,"comment_content":"阅后感<br>个人感觉理解微服务的关键环节在于理解网络通信，最简单的微服务，比如：只有一个服务提供者也只有一个服务消费者，只要他们能通信相互理解就行。<br>深入了理解他们通信的原理，其他的都是在机器增多，考虑网络环境的复杂多变，提供负载均衡、高可用、高性能、易维护、易定位问题、支持水平扩展的外围服务，是分布式系统都需要考虑的问题啦。<br><br>希望后面能看的老师讲解这些，否则感觉就不是由浅入深层层推进的讲解方式了，理解起来令人费解。<br><br>一个东西从无到有基本是有一个变化和积累的过程的，如果能清楚他不存在前会有什么痛点，他出现后解决了那几点痛点，那是很爽快的。当然一个技术方案在解决一些问题的同时总会带来另外的一些更加复杂的问题，希望后面老师能有所讲解。<br><br>我觉得微服务的组成从核心一层层往外应该有以下组件组成：<br>1：网络通信框架，什么协议？如何序列化和反序列化？<br>2：服务协议，使用通用的？还是开源？还是自研？<br>3：服务注册中心，订阅和发布服务信息<br>4：服务治理平台，监控服务信息，管理服务信息，上下线服务，查看服务所属，查看服务调用链<br><br>感谢老师的讲解，期待下文!","like_count":10,"discussions":[{"author":{"id":2282726,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJmmZFYW0NbvjLUsPuQEhPgZ8gB9obT1L9uKX7BUzRNtry4DEyTYl32uxWdhZia0p8tjHv5wfnh2Yg/132","nickname":"Qingyi","note":"","ucode":"9D987298811672","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550179,"discussion_content":"你问的偏底层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644407316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38584,"user_name":"东风微鸣","can_delete":false,"product_type":"c1","uid":1293432,"ip_address":"","ucode":"209CC41065BEE5","user_header":"https://static001.geekbang.org/account/avatar/00/13/bc/78/4d48f9ea.jpg","comment_is_top":false,"comment_ctime":1542077008,"is_pvip":false,"replies":[{"id":"13967","content":"zipkin不支持，skywalking可以","user_name":"作者回复","comment_id":38584,"uid":"1010144","ip_address":"","utype":1,"ctime":1542196532,"user_name_real":"古月中心相心"}],"discussion_count":1,"race_medal":0,"score":"31606848080","product_id":100014401,"comment_content":"我们用spring cloud微服务框架。zipkin做链路监控，有办法链路到jdbc 数据库层么？","like_count":8,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428753,"discussion_content":"zipkin不支持，skywalking可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542196532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22551,"user_name":"搬砖匠","can_delete":false,"product_type":"c1","uid":1214120,"ip_address":"","ucode":"3D2D7C1FD14DB6","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/a8/427879a9.jpg","comment_is_top":false,"comment_ctime":1535784930,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27305588706","product_id":100014401,"comment_content":"服务故障问题在传统架构中的解决方式，一般是远程调用时要做超时处理，很多http client的第三方包都提供timeout的处理。同理微服务架构下的熔断机制相比之下有哪些优势，期待后面教程的分析。","like_count":6,"discussions":[{"author":{"id":1111623,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f6/47/abb7bfe3.jpg","nickname":"zhangweiii","note":"","ucode":"266031B813B496","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281671,"discussion_content":"我理解的话，超时只是解决了调用方的问题，但是服务提供方依然接受并处理请求，这样会导致服务提供方一直处于负载状态，它会一直不可用，熔断是给服务提供方一个恢复的机会，就是它并不会真的处理请求。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591789240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1603571,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKgNge1sNXIWCFeUOa53cU5Glfw24sjxibBxTiaTb45LmU9bRDlDgBib9goFZXmoKwXTOJ4JMvVHHbiaA/132","nickname":"潘林林","note":"","ucode":"31576141FE4A1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1111623,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f6/47/abb7bfe3.jpg","nickname":"zhangweiii","note":"","ucode":"266031B813B496","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537354,"discussion_content":"我的理解是熔断是解决调用方负载的问题，如果提供方一直不可用，那么调用方就会有很多进程开着在等待(直到超时)。这样会极大的消耗调用方的资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639041549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281671,"ip_address":""},"score":537354,"extra":""}]}]},{"had_liked":false,"id":22372,"user_name":"大光头","can_delete":false,"product_type":"c1","uid":1041792,"ip_address":"","ucode":"8EF797AFD1E27C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo3DrWeV7ZwRLXrRZg4V3ic1LQYdZ3u1oicDhqPic47vMguvf5QS69roTiaJrwDr5Re3Sy2UyHDWwmsTA/132","comment_is_top":false,"comment_ctime":1535634691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23010471171","product_id":100014401,"comment_content":"微服务下的问题在单体应用会有，但不是问题，因为天生满足。分布式之后，<br>接口调用，就需要服务发现，服务注册和服务间调用。<br>接口错误需要容错处理和熔断处理。<br>接口性能，需要靠扩容。<br>接口调用情况需要监控。<br>问题排查需要全链路跟踪。","like_count":5},{"had_liked":false,"id":22108,"user_name":"Halo_浅色调","can_delete":false,"product_type":"c1","uid":1026618,"ip_address":"","ucode":"98908DAE5ED3A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/3a/2530bc81.jpg","comment_is_top":false,"comment_ctime":1535501178,"is_pvip":false,"replies":[{"id":"7969","content":"一个requestid，一个是spanid，这里是为了描述原理抽象表达这个意思","user_name":"作者回复","comment_id":22108,"uid":"1010144","ip_address":"","utype":1,"ctime":1535542819,"user_name_real":"古月中心相心"}],"discussion_count":1,"race_medal":0,"score":"18715370362","product_id":100014401,"comment_content":"为啥要两个requestId，我们以前就只用了一个来进行链路追踪，只用一个有啥缺陷吗","like_count":4,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423002,"discussion_content":"一个requestid，一个是spanid，这里是为了描述原理抽象表达这个意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535542819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36849,"user_name":"贾洵","can_delete":false,"product_type":"c1","uid":1173596,"ip_address":"","ucode":"6B66BC83615A26","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/5c/fad21603.jpg","comment_is_top":false,"comment_ctime":1541376619,"is_pvip":false,"replies":[{"id":"13219","content":"uuid没法区分调用的层级关系","user_name":"作者回复","comment_id":36849,"uid":"1010144","ip_address":"","utype":1,"ctime":1541429488,"user_name_real":"古月中心相心"}],"discussion_count":1,"race_medal":1,"score":"14426278507","product_id":100014401,"comment_content":"既然设置一个跟踪ID，为什么不设置一个uuid做为调用唯一ID。这样既可以全程跟踪，又节省寻找串联请求ID的时间？","like_count":4,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428053,"discussion_content":"uuid没法区分调用的层级关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541429488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30465,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1538878323,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"14423780211","product_id":100014401,"comment_content":"单体应用不用考虑远程调用，一般通过本地方法调用就可以了，通过api提供服务。所以不用考虑服务描述，注册中心，服务框架<br>单体应用也需要做服务监控。检查服务是否正常，一般也是监控进程，响应时间。或者针对某个业务做特殊的监控处理。<br>单体应用的服务追踪不会很复杂，就是方法的调用。java一般dump出一些jvm的运行信息就能定位出一些基本问题。<br>服务治理对于单体应用比较重要，单体应用可扩展性，高可用方面存在缺陷。在很多情况下会存在性能瓶颈。所以要通过流控等措施保障服务的稳定性。","like_count":4},{"had_liked":false,"id":32688,"user_name":"猿一代","can_delete":false,"product_type":"c1","uid":1262626,"ip_address":"","ucode":"B9DF912F5CD363","user_header":"https://static001.geekbang.org/account/avatar/00/13/44/22/90a6fdd6.jpg","comment_is_top":false,"comment_ctime":1539665432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10129600024","product_id":100014401,"comment_content":"c502和1999992，老师，今天微博热搜赵丽颖和冯绍峰结婚的消息报出来的分别是什么原因呀？","like_count":2},{"had_liked":false,"id":22026,"user_name":"greatcl","can_delete":false,"product_type":"c1","uid":1009449,"ip_address":"","ucode":"44D3C55394EC08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/29/b0ec5430.jpg","comment_is_top":false,"comment_ctime":1535452343,"is_pvip":false,"replies":[{"id":"7875","content":"这里没有详细描述 其实是spanid 这里是抽象描述原理","user_name":"作者回复","comment_id":22026,"uid":"1010144","ip_address":"","utype":1,"ctime":1535457731,"user_name_real":"古月中心相心"}],"discussion_count":1,"race_medal":0,"score":"10125386935","product_id":100014401,"comment_content":"如果服务提供者继续请求其他服务，会在本地再生成一个自己的requestid，然后把这两个requestid都当作请求参数继续往下传递。<br>=========<br>老师你好，想问下为什么要两个requestid都往下传递呢，只用第一个requestid不是就可以追踪到了吗？","like_count":2,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422968,"discussion_content":"这里没有详细描述 其实是spanid 这里是抽象描述原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535457731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21959,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1535420117,"is_pvip":false,"replies":[{"id":"7879","content":"嗯，熔断是一种非常有效的服务治理手段","user_name":"作者回复","comment_id":21959,"uid":"1010144","ip_address":"","utype":1,"ctime":1535457876,"user_name_real":"古月中心相心"}],"discussion_count":1,"race_medal":0,"score":"10125354709","product_id":100014401,"comment_content":"在复杂调用中，应该还有熔断，这样避免底层服务拖死自身服务，对吧～","like_count":2,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422941,"discussion_content":"嗯，熔断是一种非常有效的服务治理手段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535457876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115597,"user_name":"静水流深","can_delete":false,"product_type":"c1","uid":1339724,"ip_address":"","ucode":"644F05EFBD2E7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/71/4c/2cefec07.jpg","comment_is_top":false,"comment_ctime":1563665569,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858632865","product_id":100014401,"comment_content":"谢谢老师，这是我看到的最容易让人理解，最精简而又不失重点的微服务课程。学起来既轻松又愉快。谢谢","like_count":1},{"had_liked":false,"id":22199,"user_name":"维维","can_delete":false,"product_type":"c1","uid":1050285,"ip_address":"","ucode":"0C0D96362B30DB","user_header":"https://static001.geekbang.org/account/avatar/00/10/06/ad/fe79da1d.jpg","comment_is_top":false,"comment_ctime":1535550766,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5830518062","product_id":100014401,"comment_content":"到底使用http好还是rpc好呢","like_count":1,"discussions":[{"author":{"id":1257750,"avatar":"https://static001.geekbang.org/account/avatar/00/13/31/16/f2269e73.jpg","nickname":"better","note":"","ucode":"2B9BCCED753D7F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309070,"discussion_content":"内部调用RPC，对外接口Http，好像业界这种方式比较广泛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601183352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22034,"user_name":"70","can_delete":false,"product_type":"c1","uid":1081899,"ip_address":"","ucode":"A5884B2BDDAB70","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/2b/cf93c499.jpg","comment_is_top":false,"comment_ctime":1535457397,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5830424693","product_id":100014401,"comment_content":"服务描述，注册中心，服务框架，服务监控，服务追踪，服务治理。这些在单体服务中也存在，服务描述在任何时候都需要。注册中心和服务框架在单体服务中可能没有那么明显，单体服务中多数采用人为沟通和文档进行维护。服务监控和服务追踪，服务治理，这些部分的存在，可以让我们实时监控服务的运行状态，及时发现并解决问题，单体和微服务都是无法缺失的。在面对服务容量问题时，单体服务解决起来更加麻烦，由于没有服务拆分，所以需要根据所有业务中最小容量业务来进行计算扩容。哈哈，个人拙见，阿忠叔别生气","like_count":1},{"had_liked":false,"id":21950,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1535418778,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5830386074","product_id":100014401,"comment_content":"看到dubbo的影子了，嘎嘎","like_count":1},{"had_liked":false,"id":21907,"user_name":"feimeng0532","can_delete":false,"product_type":"c1","uid":1182786,"ip_address":"","ucode":"427B5C9D65C62A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/42/fbd028c2.jpg","comment_is_top":false,"comment_ctime":1535412316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5830379612","product_id":100014401,"comment_content":"单体应用的集群方式和微服务的治理，单体故障转移，","like_count":1},{"had_liked":false,"id":309228,"user_name":"Sch0ng","can_delete":false,"product_type":"c1","uid":1145554,"ip_address":"","ucode":"73F6113931B1AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/d2/4ba67c0c.jpg","comment_is_top":false,"comment_ctime":1629990369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629990369","product_id":100014401,"comment_content":"六大基本组建：描述、注册、框架（调用）、监控、追踪、治理。<br>前三个组合起来处理任务，后三个保障组合以后的系统稳定。<br>","like_count":0},{"had_liked":false,"id":306458,"user_name":"魏*_*琛","can_delete":false,"product_type":"c1","uid":1103233,"ip_address":"","ucode":"2300C25193BBE0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/81/316c7c90.jpg","comment_is_top":false,"comment_ctime":1628568034,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628568034","product_id":100014401,"comment_content":"microserver is simple with  rpc, <br>1. server provider<br>2. server customer<br>These are some agreements that can help us manage our services better between consumers and producers. The agreements are service register, service control, service tracking,service dashboard and so on ","like_count":0},{"had_liked":false,"id":297859,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1623820443,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623820443","product_id":100014401,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":287647,"user_name":"飞机翅膀上","can_delete":false,"product_type":"c1","uid":1515223,"ip_address":"","ucode":"D239DFFECDBF01","user_header":"https://static001.geekbang.org/account/avatar/00/17/1e/d7/7d28a531.jpg","comment_is_top":false,"comment_ctime":1618066970,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618066970","product_id":100014401,"comment_content":"能不能详细说一说微服务和SOA的区别","like_count":0},{"had_liked":false,"id":282584,"user_name":"小小程序员","can_delete":false,"product_type":"c1","uid":1127345,"ip_address":"","ucode":"4A4FDFBC1CEB55","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/b1/c7cdba5c.jpg","comment_is_top":false,"comment_ctime":1615308636,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1615308636","product_id":100014401,"comment_content":"老师可以讲一下微服务，RPC，SOA，RESTFUI这几个名词的区别吗，有点晕晕的","like_count":0,"discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381912,"discussion_content":"那说明这门课对于你来说还有点早","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625286633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252538,"user_name":"极客老王","can_delete":false,"product_type":"c1","uid":1002213,"ip_address":"","ucode":"BDC2FFDC12BCFE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/e5/2d4f6067.jpg","comment_is_top":false,"comment_ctime":1602344609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602344609","product_id":100014401,"comment_content":"摘自网友的解释：<br>微服务架构6大组件：<br>1、服务描述：RestfulApi (http)、xml (rpc)、IDL (grpc)<br>2、注册中心：注册（服务提供者-&gt;注册中心）、订阅（服务消费者-&gt;注册中心）、返回（注册中心-&gt;服务消费者）、通知（注册中心-&gt;服务消费者）<br>3、服务框架<br>4、服务监控（发现问题）：指标收集、数据处理、数据展现<br>5、服务追踪（定位问题）：RequestId传递<br>6、服务治理（解决问题）：单机故障——自动摘除、单IDC故障——自动切换、依赖服务不可用——熔断","like_count":1},{"had_liked":false,"id":250641,"user_name":"better","can_delete":false,"product_type":"c1","uid":1257750,"ip_address":"","ucode":"2B9BCCED753D7F","user_header":"https://static001.geekbang.org/account/avatar/00/13/31/16/f2269e73.jpg","comment_is_top":false,"comment_ctime":1601182976,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1601182976","product_id":100014401,"comment_content":"想请教一下老师，文中提到的requestID和Slueth这款开源工具的spanID是一样的东西么，然后是整条微服务请求链路里的requestID加在一起就成了一个traceId么","like_count":0},{"had_liked":false,"id":243263,"user_name":"core","can_delete":false,"product_type":"c1","uid":2049324,"ip_address":"","ucode":"0BFA5964EF3AD2","user_header":"https://static001.geekbang.org/account/avatar/00/1f/45/2c/48af0d4a.jpg","comment_is_top":false,"comment_ctime":1598004763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598004763","product_id":100014401,"comment_content":"服务框架必然是有的，服务监控和服务治理也是要考量的范围。描述的话，目前一般采用的是Restful API+Swagger的描述方式。注册中心和服务追踪一般不考虑。","like_count":0},{"had_liked":false,"id":220890,"user_name":"蓝猫","can_delete":false,"product_type":"c1","uid":1128676,"ip_address":"","ucode":"A2E11FF854013C","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/e4/17ffa30b.jpg","comment_is_top":false,"comment_ctime":1590334286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590334286","product_id":100014401,"comment_content":"微服务架构下，基本组件服务描述解决的问题，在单体应用也存在，单体应用对外提供服务时也需要进行服务描述，一般采用WSDL或Restfull比较多；公司内部多个系统之间提供服务的也会采用xml方式；基本组件注册中心基本用不到，因为服务很少，一般都是在调用端通过配置文件的方式配置要调用的服务，基本组件服务框架解决的问题，单体应用也会遇到，而且情况也相似，也可以用相同的方式解决；基本组件服务监控、服务追踪和服务治理基本用不到，一般都是只调用一级，问题也比较简单","like_count":0},{"had_liked":false,"id":189575,"user_name":"Huaxin","can_delete":false,"product_type":"c1","uid":1162668,"ip_address":"","ucode":"6E5E4599341918","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/ac/c2415dda.jpg","comment_is_top":false,"comment_ctime":1584530156,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584530156","product_id":100014401,"comment_content":"单体的“服务发现”最好解决，直接api调用这可以了。这里接口定义完成了“服务描述”的功能","like_count":0},{"had_liked":false,"id":143716,"user_name":"钟杰","can_delete":false,"product_type":"c1","uid":1402407,"ip_address":"","ucode":"05DF8246596992","user_header":"https://static001.geekbang.org/account/avatar/00/15/66/27/407ad79a.jpg","comment_is_top":false,"comment_ctime":1571763169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571763169","product_id":100014401,"comment_content":"服务聚合和服务网关呢？","like_count":0},{"had_liked":false,"id":89873,"user_name":"zhihai.tu","can_delete":false,"product_type":"c1","uid":1045888,"ip_address":"","ucode":"61371EA3EF6988","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/80/baddf03b.jpg","comment_is_top":false,"comment_ctime":1556290899,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556290899","product_id":100014401,"comment_content":"负载均衡F5连了6台应用服务器，其中1台挂了，那么做健康巡检的时候没通过，则流量就转移到其它5台上，等待挂掉的那台进行修复。","like_count":0},{"had_liked":false,"id":77080,"user_name":"佳","can_delete":false,"product_type":"c1","uid":1334190,"ip_address":"","ucode":"482C90C3DC17DB","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/ae/3d639ea4.jpg","comment_is_top":false,"comment_ctime":1552830620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552830620","product_id":100014401,"comment_content":"微服务架构是什么，微服务架构包含下面角色，服务提供者，服务消费者，注册中心，治理中心。<br><br>服务提供者启动后，自动向注册中心注册指定服务名册，对应地址和端口。一个服务名称注册多个实例，就是多个地址端口。<br><br>服务消费者，在注册应用查找服务服务提供者实例，和生产者通信。微服务生产者，在不同机器部署，实例太多不能在配置文件，数据库静态配置，所以出现注册中心。<br><br>注册中心同时提供通知功能，当服务关闭，崩溃超时，通知消费服务。<br><br>服务治理，当服务有问题进行追踪。生产搞环境遇到故障，需要治理<br><br>单机故障，,IDC故障，服务依赖不可用<br>","like_count":0},{"had_liked":false,"id":70157,"user_name":"空","can_delete":false,"product_type":"c1","uid":1251020,"ip_address":"","ucode":"2EFDF0C24DFECD","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/cc/78a21848.jpg","comment_is_top":false,"comment_ctime":1551016239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551016239","product_id":100014401,"comment_content":"老师，微服务和分布式的差别是什么，现在rpc协议用的多吗","like_count":0},{"had_liked":false,"id":50945,"user_name":"一线码农","can_delete":false,"product_type":"c1","uid":1351806,"ip_address":"","ucode":"E2B8A9EA40126D","user_header":"https://static001.geekbang.org/account/avatar/00/14/a0/7e/6ee939c7.jpg","comment_is_top":false,"comment_ctime":1545092689,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545092689","product_id":100014401,"comment_content":"感谢老师，请问下服务注册与发现就是为了服务的分布式解决ip和端口变动问题吧？","like_count":0},{"had_liked":false,"id":49538,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544709252,"is_pvip":false,"replies":[{"id":"18042","content":"数据中心","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1544943965,"ip_address":"","comment_id":49538,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1544709252","product_id":100014401,"comment_content":"idc 是什么 方便老师解释下吗","like_count":0,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432653,"discussion_content":"数据中心","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544943965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257750,"avatar":"https://static001.geekbang.org/account/avatar/00/13/31/16/f2269e73.jpg","nickname":"better","note":"","ucode":"2B9BCCED753D7F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309071,"discussion_content":"Internet Data Center，互联网数据中心","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601183637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40913,"user_name":"Goku","can_delete":false,"product_type":"c1","uid":1031868,"ip_address":"","ucode":"8008F3BB10E609","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/bc/62d402da.jpg","comment_is_top":false,"comment_ctime":1542694305,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1542694305","product_id":100014401,"comment_content":"服务框架和服务描述是否有些重叠，比如服务描述是RESTful API，那么框架一般就是HTTP+JSON了吧？","like_count":0},{"had_liked":false,"id":39629,"user_name":"王维","can_delete":false,"product_type":"c1","uid":1091684,"ip_address":"","ucode":"836E6CDB1A56BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/64/965e0d9b.jpg","comment_is_top":false,"comment_ctime":1542329707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542329707","product_id":100014401,"comment_content":"乍一看微服务和WebService很像，微服务就是Webservice吗？","like_count":0},{"had_liked":false,"id":39613,"user_name":"Xuan","can_delete":false,"product_type":"c1","uid":1011149,"ip_address":"","ucode":"00CE6AAB2D747B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6d/cd/b51aabf3.jpg","comment_is_top":false,"comment_ctime":1542328518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542328518","product_id":100014401,"comment_content":"微服务架构下的基本组件所解决的问题，对应到单体应用时是否存在？<br>存在，把app或者网站看成微服务的服务消费方即可<br>如果存在，解决方案是否相同？<br>基本类似","like_count":0},{"had_liked":false,"id":28470,"user_name":"智哥哥","can_delete":false,"product_type":"c1","uid":1040008,"ip_address":"","ucode":"B1CCFE086C39FB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/88/34337eba.jpg","comment_is_top":false,"comment_ctime":1538095558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538095558","product_id":100014401,"comment_content":"微服务就是为分布式系统提供的一系列解决的方案吗","like_count":0},{"had_liked":false,"id":24151,"user_name":"bert","can_delete":false,"product_type":"c1","uid":1021803,"ip_address":"","ucode":"2F89303AE5FB77","user_header":"https://static001.geekbang.org/account/avatar/00/0f/97/6b/c74c4a8e.jpg","comment_is_top":false,"comment_ctime":1536824598,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1536824598","product_id":100014401,"comment_content":"requestid和spanid的问题，我也没搞明白，老师有必要再详细描述一下。","like_count":0,"discussions":[{"author":{"id":1257750,"avatar":"https://static001.geekbang.org/account/avatar/00/13/31/16/f2269e73.jpg","nickname":"better","note":"","ucode":"2B9BCCED753D7F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309072,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601183680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":22088,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1535495442,"is_pvip":true,"replies":[{"id":"7970","content":"日志管理对于分布式系统都存在，服务跟踪就需要收集trace信息，算是日志的一种吧","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535542889,"ip_address":"","comment_id":22088,"utype":1}],"discussion_count":1,"race_medal":5,"score":"1535495442","product_id":100014401,"comment_content":"感谢作者的讲解。<br><br>我理解微服务架构其实也是分布式架构的一种，对于分体式架构来说，有一个很重要的部分就是日志管理，尤其是在服务器扩展到100台以上时，有效的日志管理对于高效运维来说至关重要。那么日志管理会涵盖在服务跟踪里面吗？","like_count":0,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422997,"discussion_content":"日志管理对于分布式系统都存在，服务跟踪就需要收集trace信息，算是日志的一种吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535542889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21996,"user_name":"HF","can_delete":false,"product_type":"c1","uid":1112811,"ip_address":"","ucode":"0839195346C3CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/eb/84d4de33.jpg","comment_is_top":false,"comment_ctime":1535430791,"is_pvip":true,"replies":[{"id":"7869","content":"后面服务治理一节会专门讲解","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1535449066,"ip_address":"","comment_id":21996,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535430791","product_id":100014401,"comment_content":"您好 第一幅图中的治理中心的作用是什么 感觉很突兀 是用来管理服务提供者和消费者的吗 能不能详细介绍一下","like_count":0,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422957,"discussion_content":"后面服务治理一节会专门讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535449066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21925,"user_name":"登高","can_delete":false,"product_type":"c1","uid":1068600,"ip_address":"","ucode":"CD40046238BA18","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/38/3faa8377.jpg","comment_is_top":false,"comment_ctime":1535415934,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1535415934","product_id":100014401,"comment_content":"服务描述方式可以用json相关的吗?打算用一个python中的json-rpc包提供服务，我发现rpc就是http那一套，那么rpc和http的关系是什么呢?是不是用http来实现rpc","like_count":0,"discussions":[{"author":{"id":1438037,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f1/55/8ac4f169.jpg","nickname":"陈国林","note":"","ucode":"83D12F3E79F197","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":185355,"discussion_content":"1. 可以这么理解吧RPC和HTTP都属于应用层协议，只不过HTTP是OSI标准的七层协议是公认的，RPC则属于非标准协议，一般来说都是大公司内部都会自己实现一套RPC协议，也就是私有协议。2. HTTP是目前用的最多的一种协议，一般用在公网环境下的客户端和服务端交互，HTTP API 最常用的规范标准是 RESTful。3. RPC一般用于公司内部服务组件之间调用，自定义RPC协议一般基于TCP (当然也可以基于HTTP)，初此之外还需要实现序列化的功能。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582619619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}