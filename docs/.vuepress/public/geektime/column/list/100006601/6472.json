{"id":6472,"title":"03 | 架构设计的目的","content":"<p>周二，我们聊了架构出现的历史背景和推动因素。以史为鉴，对我们了解架构设计的目的很有帮助。谈到架构设计，相信每个技术人员都是耳熟能详，但如果深入探讨一下，“为何要做架构设计？”或者“<span class=\"orange\">架构设计目的是什么？</span>”类似的问题，大部分人可能从来没有思考过，或者即使有思考，也没有太明确可信的答案。</p>\n<h2>架构设计的误区</h2>\n<p>关于架构设计的目的，常见的误区有：</p>\n<ul>\n<li>因为架构很重要，所以要做架构设计</li>\n</ul>\n<p>这是一句正确的废话，架构是很重要，但架构为何重要呢？</p>\n<p>例如：不做架构设计系统就跑不起来么？</p>\n<p>其实不然，很多朋友尤其是经历了创业公司的朋友可能会发现，公司的初始产品可能没有架构设计，大伙撸起袖子简单讨论一下就开始编码了，根本没有正规的架构设计过程，而且也许产品开发速度还更快，上线后运行也还不错。</p>\n<p>例如：做了架构设计就能提升开发效率么？</p>\n<p>也不尽然，实际上有时候最简单的设计开发效率反而是最高的，架构设计毕竟需要投入时间和人力，这部分投入如果用来尽早编码，项目也许会更快。</p>\n<p>例如：设计良好的架构能促进业务发展么？</p>\n<p>好像有一定的道理，例如设计高性能的架构能够让用户体验更好，但反过来想，我们照抄微信的架构，业务就能达到微信的量级么？肯定不可能，不要说达到微信的量级，达到微信的1/10做梦都要笑醒了。</p>\n<ul>\n<li>不是每个系统都要做架构设计吗</li>\n</ul>\n<p>这其实是知其然不知其所以然，系统确实要做架构设计，但还是不知道为何要做架构设计，反正大家都要做架构设计，所以做架构设计肯定没错。</p>\n<p>这样的架构师或者设计师很容易走入生搬硬套业界其他公司已有架构的歧路，美其名曰“参考”“微改进”。一旦强行引入其他公司架构后，很可能会发现架构水土不服，或者运行起来很别扭等各种情况，最后往往不得不削足适履，或者不断重构，甚至无奈推倒重来。</p>\n<ul>\n<li>公司流程要求系统开发过程中必须有架构设计</li>\n</ul>\n<p>与此答案类似还有因为“架构师总要做点事情”，所以要做架构设计，其实都是舍本逐末。因为流程有规定，所以要做架构设计；因为架构师要做事，所以要做架构设计，这都是很表面地看问题，并没有真正理解为何要做架构设计，而且很多需求并不一定要进行架构设计。如果认为架构师一定要找点事做，流程一定要进行架构设计，就会出现事实上不需要架构设计但形式上却继续去做架构设计，不但浪费时间和人力，还会拖慢整体的开发进度。</p>\n<ul>\n<li>为了高性能、高可用、可扩展，所以要做架构设计</li>\n</ul>\n<p>能够给出这个答案，说明已经有了一定的架构经历或者基础，毕竟确实很多架构设计都是冲着高性能、高可用……等“高XX”的目标去的。</p>\n<p>但往往持有这类观点的架构师和设计师会给项目带来巨大的灾难，这绝不是危言耸听，而是很多实际发生的事情，为什么会这样呢？因为这类架构师或者设计师不管三七二十一，不管什么系统，也不管什么业务，上来就要求“高性能、高可用、高扩展”，结果就会出现架构设计复杂无比，项目落地遥遥无期，团队天天吵翻天……等各种让人抓狂的现象，费尽九牛二虎之力将系统整上线，却发现运行不够稳定，经常出问题，出了问题很难解决，加个功能要改1个月……等各种继续让人抓狂的事件。</p>\n<h2>架构设计的真正目的</h2>\n<p>那架构设计的真正目的究竟是什么？</p>\n<!-- [[[read_end]]] -->\n<p>从周二与你分享的架构设计的历史背景，可以看到，整个软件技术发展的历史，其实就是一部与“复杂度”斗争的历史，架构的出现也不例外。简而言之，架构也是为了应对软件系统复杂度而提出的一个解决方案，通过回顾架构产生的历史背景和原因，我们可以基本推导出答案：<strong>架构设计的主要目的是为了解决软件系统复杂度带来的问题</strong>。</p>\n<p>这个结论虽然很简洁，但却是架构设计过程中需要时刻铭记在心的一条准则，为什么这样说呢？</p>\n<p>首先，遵循这条准则能够让“新手”架构师<strong>心中有数，而不是一头雾水</strong>。</p>\n<p>新手架构师开始做架构设计的时候，心情都很激动，希望大显身手，甚至恨不得一出手就设计出世界上最牛的XX架构，从此走上人生巅峰，但真的面对具体的需求时，往往都会陷入一头雾水的状态：</p>\n<p>“这么多需求，从哪里开始下手进行架构设计呢？”。</p>\n<p>“架构设计要考虑高性能、高可用、高扩展……这么多高XX，全部设计完成估计要1个月，但老大只给了1周时间”。</p>\n<p>“业界A公司的架构是X，B公司的方案是Y，两个差别比较大，该参考哪一个呢？”。</p>\n<p>以上类似问题，如果明确了“架构设计是为了解决软件复杂度”原则后，就很好回答。</p>\n<ul>\n<li>“这么多需求，从哪里开始下手进行架构设计呢？”</li>\n</ul>\n<p>——通过熟悉和理解需求，识别系统复杂性所在的地方，然后针对这些复杂点进行架构设计。</p>\n<ul>\n<li>“架构设计要考虑高性能、高可用、高扩展……这么多高XX，全部设计完成估计要1个月，但老大只给了1周时间”</li>\n</ul>\n<p>——架构设计并不是要面面俱到，不需要每个架构都具备高性能、高可用、高扩展等特点，而是要识别出复杂点然后有针对性地解决问题。</p>\n<ul>\n<li>“业界A公司的架构是X，B公司的方案是Y，两个差别比较大，该参考哪一个呢？”</li>\n</ul>\n<p>——理解每个架构方案背后所需要解决的复杂点，然后才能对比自己的业务复杂点，参考复杂点相似的方案。</p>\n<p>其次，遵循这条准则能够让“老鸟”架构师<strong>有的放矢，而不是贪大求全</strong>。</p>\n<p>技术人员往往都希望自己能够做出最牛的东西，架构师也不例外，尤其是一些“老鸟”架构师，为了证明自己的技术牛，可能会陷入贪大求全的焦油坑而无法自拔。例如：</p>\n<p>“我们的系统一定要做到每秒TPS 10万”。</p>\n<p>“淘宝的架构是这么做的，我们也要这么做”。</p>\n<p>“Docker现在很流行，我们的架构应该将Docker应用进来”。</p>\n<p>以上这些想法，如果拿“架构设计是为了解决软件复杂度”这个原则来衡量，就很容易判断。</p>\n<ul>\n<li>“我们的系统一定要做到每秒TPS 10万”</li>\n</ul>\n<p>——如果系统的复杂度不是在性能这部分，TPS做到10万并没有什么用。</p>\n<ul>\n<li>“淘宝的架构是这么做的，我们也要这么做”</li>\n</ul>\n<p>——淘宝的架构是为了解决淘宝业务的复杂度而设计的，淘宝的业务复杂度并不就是我们的业务复杂度，绝大多数业务的用户量都不可能有淘宝那么大。</p>\n<ul>\n<li>“Docker现在很流行，我们的架构应该将Docker应用进来”</li>\n</ul>\n<p>——Docker不是万能的，只是为了解决资源重用和动态分配而设计的，如果我们的系统复杂度根本不是在这方面，引入Docker没有什么意义。</p>\n<h2>简单的复杂度分析案例</h2>\n<p>我来分析一个简单的案例，一起来看看如何将“架构设计的真正目的是为了解决软件系统复杂度带来的问题”这个指导思想应用到实践中。</p>\n<p>假设我们需要设计一个大学的学生管理系统，其基本功能包括登录、注册、成绩管理、课程管理等。当我们对这样一个系统进行架构设计的时候，首先应识别其复杂度到底体现在哪里。</p>\n<p>性能：一个学校的学生大约1 ~ 2万人，学生管理系统的访问频率并不高，平均每天单个学生的访问次数平均不到1次，因此性能这部分并不复杂，存储用MySQL完全能够胜任，缓存都可以不用，Web服务器用Nginx绰绰有余。</p>\n<p>可扩展性：学生管理系统的功能比较稳定，可扩展的空间并不大，因此可扩展性也不复杂。</p>\n<p>高可用：学生管理系统即使宕机2小时，对学生管理工作影响并不大，因此可以不做负载均衡，更不用考虑异地多活这类复杂的方案了。但是，如果学生的数据全部丢失，修复是非常麻烦的，只能靠人工逐条修复，这个很难接受，因此需要考虑存储高可靠，这里就有点复杂了。我们需要考虑多种异常情况：机器故障、机房故障，针对机器故障，我们需要设计MySQL同机房主备方案；针对机房故障，我们需要设计MySQL跨机房同步方案。</p>\n<p>安全性：学生管理系统存储的信息有一定的隐私性，例如学生的家庭情况，但并不是和金融相关的，也不包含强隐私（例如玉照、情感）的信息，因此安全性方面只要做3个事情就基本满足要求了：Nginx提供ACL控制、用户账号密码管理、数据库访问权限控制。</p>\n<p>成本：由于系统很简单，基本上几台服务器就能够搞定，对于一所大学来说完全不是问题，可以无需太多关注。</p>\n<p>还有其他方面，如果有兴趣，你可以自行尝试去分析。通过我上面的分析，可以看到这个方案的主要复杂性体现在存储可靠性上，需要保证异常的时候，不要丢失所有数据即可（丢失几个或者几十个学生的信息问题不大），对应的架构如下：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/97/d4/970f83d548b6b4a5c7903b3fc1f3b8d4.jpg?wh=1497*1209\" alt=\"\" /></p>\n<p>学生管理系统虽然简单，但麻雀虽小五脏俱全，基本上能涵盖软件系统复杂度分析的各个方面，而且绝大部分技术人员都曾经自己设计或者接触过类似的系统，如果将这个案例和自己的经验对比，相信会有更多的收获。</p>\n<h2>小结</h2>\n<p>今天我为你分析了架构设计的误区，结合周二讲的架构设计的历史背景，给出架构设计的主要目的是为了解决软件系统复杂度带来的问题，并分析了一个简单复杂度的案例，希望对你有所帮助。</p>\n<p>这就是今天的全部内容，留一道思考题给你吧。请按照“架构设计的主要目的是为了解决软件复杂度带来的问题”这个指导思想来分析一下你目前的业务系统架构，看看是否和你当时分析的结果一样？</p>\n<p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>\n<p>最后给你推荐一个课程，极客时间新上线了《Java核心技术36讲》，由Oracle首席工程师杨晓峰老师给你精讲大厂Java面试题，帮你构建Java知识体系，<span class=\"orange\">你可以点击下方图片进入课程。</span></p>\n<p><a href=\"http://time.geekbang.org/column/intro/82?utm_source=app&amp;utm_medium=81&amp;utm_campaign=82-presell&amp;utm_content=article\"><img src=\"https://static001.geekbang.org/resource/image/89/6c/891e4be4057f6b3ab7e43979a0b1286c.jpg?wh=900*500\" alt=\"\" /></a></p>\n","neighbors":{"left":{"article_title":"02 | 架构设计的历史背景","id":6463},"right":{"article_title":"04 | 复杂度来源：高性能","id":6605}},"comments":[{"had_liked":false,"id":7148,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1525309556,"is_pvip":true,"replies":[{"id":2017,"content":"收下我的膝盖，大神写个心得就已经把我后面的内容剧透了，6666👍👍😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311547,"ip_address":"","comment_id":7148,"utype":1}],"discussion_count":5,"race_medal":1,"score":2,"product_id":100006601,"comment_content":"架构是为了应对软件系统复杂度而提出的一个解决方案。个人感悟是:架构即(重要)决策，是在一个有约束的盒子里去求解或接近最合适的解。这个有约束的盒子是团队经验、成本、资源、进度、业务所处阶段等所编织、掺杂在一起的综合体(人，财，物，时间，事情等)。架构无优劣，但是存在恰当的架构用在合适的软件系统中，而这些就是决策的结果。\n\n需求驱动架构。在分析设计阶段，需要考虑一定的人力与时间去&quot;跳出代码，总揽全局&quot;，为业务和IT技术之间搭建一座&quot;桥梁&quot;。\n\n架构设计处于软件研制的前期，一方面，越是前期，如有问题，就能够越早发现，修改的代价也就越低；另外一方面，也意味着，软件实施后期若有架构上的修改，也需要付出更多的代价。\n\n今日得到:\n1 架构是为了应对软件系统复杂度而提出的一个解决方案。\n2 架构即(重要)决策\n3 需求驱动架构，架起分析与设计实现的桥梁\n4 架构与开发成本的关系","like_count":703},{"had_liked":false,"id":7195,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1525325291,"is_pvip":false,"replies":[{"id":2062,"content":"你已经参透天机👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349333,"ip_address":"","comment_id":7195,"utype":1}],"discussion_count":10,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"今天读完文章，思考了下我们系统的复杂点，我们系统是一个承上启下的系统，根本没自己的表，所有数据都是调第三方接口取，然后汇总聚合给前端浏览器，突然明白最近老大为什么要搞es去异步聚合第三方数据了，这样以往我们需要调第三方多次接口取的数据，以后调自己es查询一次就可以了，这样性能更高，且逻辑更简单，更容易维护，以往优化这种性能问题的方式，就是多线程，然而多线程也是要消耗资源调，而且代码反而更难以理解，原来最好的优化方式不是把串行变并行，而是把串行干的多个事的数量去减少，首先要根据系统复杂点想到合适的解决方案，其次才是用什么优秀的框架叫代码更牛逼一点，否则一开始就算错的","like_count":133,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417253,"discussion_content":"收下我的膝盖，大神写个心得就已经把我后面的内容剧透了，6666👍👍😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297559,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cc/97/ae4d1400.jpg","nickname":"林枫","note":"","ucode":"38B9CBE7F42174","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389554,"discussion_content":"我的理解是架构师的核心能力对对系统进行建模，建立的模型是短时间内系统问题空间的最优解。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1629337108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296916,"discussion_content":"&#34;构设计处于软件研制的前期，一方面，越是前期，如有问题，就能够越早发现，修改的代价也就越低；另外一方面，也意味着，软件实施后期若有架构上的修改，也需要付出更多的代价。&#34;做架构设计的话不能发现问题吧？？因为具体的操作还没有实施。发现问题的话也是在根据架构实施的过程中发现的，需要修正架构。各位帮忙解惑","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596705404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1261959,"avatar":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","nickname":"Better me","note":"","ucode":"CADF08D357489A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300504,"discussion_content":"我觉得可以运用以终为始的方法提前进行系统业务演练(并不一定要等具体操作实施，可以在自己头脑中进行，像老师文中例子分析那样)，尽可能规避在架构上大方向的问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598152139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296916,"ip_address":"","group_id":0},"score":300504,"extra":""}]},{"author":{"id":1224554,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/RQdib68D7dsoFlYXOweiaPqLrcyn2jD6DCGnz8nc2VFmhmX0bpGTeSrVM5M9Qs7ibIInAmt5MeLcpcNja5YjyZCIg/132","nickname":"bigzuo","note":"","ucode":"448C258D31A8A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627416,"discussion_content":"很好的总结，锦上添花","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694136817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9116,"user_name":"gevin","can_delete":false,"product_type":"c1","uid":1005862,"ip_address":"","ucode":"B5AD68F1884A1F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/26/1015d573.jpg","comment_is_top":false,"comment_ctime":1526613637,"is_pvip":false,"replies":[{"id":2734,"content":"赞，写的很好，对我的专栏内容是很好的补充","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526615768,"ip_address":"","comment_id":9116,"utype":1}],"discussion_count":7,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"我觉得做软件架构是为两件事服务的：业务架构和业务量级，这应该算是“软件系统复杂度带来问题”的具体化吧。\n\n业务架构和业务量级都是从每个具体项目的实际应用场景中提炼出来的。\n\n业务架构是对业务需求的提炼和抽象，开发软件必须要满足业务需求，否则就是空中楼阁。软件系统业务上的复杂度问题，可以从业务架构的角度切分工作交界面来解决。设计软件架构，首先是要保证能和业务架构对的上，这也是从业务逻辑转向代码逻辑的过程，所以软件架构的设计为开发指明了方向。另外架构设计也为接下来的开发工作分工奠定了基础。\n\n业务量级表现在存储能力、吞吐能力和容错能力等，主要是软件运维期业务的复杂度。做软件架构设计，是要保证软件有能力托起它在业务量级上的要求的，如果软件到运行使用期废了，前面所有的工作都付诸东流了。不同的业务量级，对应的软件的架构复杂度是不同的，所以对于不同的项目，业务量级不同，架构设计也不同。\n\n做业务架构必须与其面向的实际应用场景相匹配，由于每个产品或项目的业务场景均有所不同，所以每次做新的软件开发前，必须先设计软件架构，试图不经分析直接套用先前的架构方案，十有八九会让当前的系统在某个点上报出大问题导致推翻重来，更不要说直接拿别人的现成架构方案了。\n\n所以每个软件在开发前，都要结合自己的应用场景设计适合自身的软件架构，现成的架构方案只能借鉴，不能直接套用。\n\n另外，由于业务架构和业务量级也会不断调整或长大，软件架构也不是一劳永逸的，会随业务不断调整。","like_count":87,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417973,"discussion_content":"赞，写的很好，对我的专栏内容是很好的补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526615768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395162,"avatar":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","nickname":"Ted","note":"","ucode":"89A8202074C0B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387906,"discussion_content":"业务架构和业务量级，这应该算是“软件系统复杂度带来问题”的具体化，这句话太精准了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1628494759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3221289,"avatar":"","nickname":"Geek_9a02e8","note":"","ucode":"9E3D77B9F592B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607591,"discussion_content":"说到心坎里去了，我们现在就面临这个问题，套用之前的架构方案，现在各种别扭。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1677991100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550719,"discussion_content":"很有启发！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644683571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379744,"discussion_content":"很有启发！！！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624103027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1656804,"avatar":"https://static001.geekbang.org/account/avatar/00/19/47/e4/17cb3df1.jpg","nickname":"BBQ","note":"","ucode":"683BBF7F7AE370","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313234,"discussion_content":"课程精彩，评论也非常精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603009668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1220514,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9f/a2/8953bea7.jpg","nickname":"守护","note":"","ucode":"D6294BC0F61697","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290314,"discussion_content":"写得真好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594422456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7274,"user_name":"霍潘","can_delete":false,"product_type":"c1","uid":1108336,"ip_address":"","ucode":"98933232BA9C1F","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/70/266634f7.jpg","comment_is_top":false,"comment_ctime":1525362481,"is_pvip":false,"replies":[{"id":2120,"content":"8个架构师？太夸张了，一个架构师一般可以支撑20人以上的开发团队，你们的架构师莫非是传说中的PPT架构师？😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478638,"ip_address":"","comment_id":7274,"utype":1}],"discussion_count":9,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"这篇内容完全符合我们公司目前现状，为了架构而架构。原本3个人负责的nodejs系统现在改用JAVA开发，光架构师招了快7，8个。不到2000人使用的系统没有一天不出点小故障，开发过程更是痛苦，三天两头的开发环境跑不起来。说是微服务，不过是把原来单体结构按功能拆分，按层级拆分，本来就拆分的够多了，为了开发要启动很多服务。每个新来的架构师都要引入一套自己的架构，结果可想而知","like_count":71,"discussions":[{"author":{"id":1450112,"avatar":"https://static001.geekbang.org/account/avatar/00/16/20/80/55e93141.jpg","nickname":"拾光漫步","note":"","ucode":"48DB0837C8F95C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46699,"discussion_content":"诸神之战","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1573195794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417296,"discussion_content":"8个架构师？太夸张了，一个架构师一般可以支撑20人以上的开发团队，你们的架构师莫非是传说中的PPT架构师？😃","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1525478638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1203867,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5e/9b/a25306b1.jpg","nickname":"我是啊","note":"","ucode":"A21D9613A34C15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":113784,"discussion_content":"频繁更换架构才是根本原因","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1577931939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047435,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fb/8b/a1feb0bf.jpg","nickname":"华仔","note":"","ucode":"241962BCA71674","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216051,"discussion_content":"人人都是架构师","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1585403440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1600151,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJr7gl9qWGKLPlG7AmSLKJibsEUWuJ85P7F0lyYgROc4ScfQsLEUeUCUXo9gDOF82ML7iaA7RjsK4Lg/132","nickname":"6666","note":"","ucode":"809F3ACB6C0887","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2778,"discussion_content":"架构师的龙争虎斗","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1563931754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550720,"discussion_content":"估计是来了来了又走了，走了又来新的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644683718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395162,"avatar":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","nickname":"Ted","note":"","ucode":"89A8202074C0B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387907,"discussion_content":"ppt架构师。。。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628494815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1650378,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","nickname":"菠萝吹雪—Code","note":"","ucode":"A5B2FC661EE17D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347558,"discussion_content":"我们的是，你不听架构师的，扣绩效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612257114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1288333,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a8/8d/1fc5edc7.jpg","nickname":"沉思加菲猫","note":"","ucode":"564EB6FB54962F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295343,"discussion_content":"产品经理兼架构师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596170826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7550,"user_name":"✎﹏๓₯㎕╮陌","can_delete":false,"product_type":"c1","uid":1100959,"ip_address":"","ucode":"2462FABBE81F4D","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/9f/170cd096.jpg","comment_is_top":false,"comment_ctime":1525523465,"is_pvip":false,"replies":[{"id":2172,"content":"角度刁钻😂😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525562418,"ip_address":"","comment_id":7550,"utype":1}],"discussion_count":8,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"架构就是。当你想拉屎的时候首先得去找厕所。选择一个什么样的厕所。\n1.距离选择。如果太远可能就漏出来了\n2.成本选择。如果拉屎太贵也不合适\n3.性能选择。好的厕所可以拉的心情舒畅","like_count":66,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417395,"discussion_content":"角度刁钻😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525562418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1725691,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/54/fb/d533b03e.jpg","nickname":"Andy","note":"","ucode":"BDA2AEB353ECC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570902,"discussion_content":"厕所架构师","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1651989401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3902989,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/8e/0d/341bf502.jpg","nickname":"Geek_475438","note":"","ucode":"9BE81FB603149F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647856,"discussion_content":"说的我都想多拉几次屎了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1720675436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054154,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/ca/bf3fb655.jpg","nickname":"Lee","note":"","ucode":"E9385622CA7ACB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649596,"discussion_content":"卧虎藏龙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1723624295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3538680,"avatar":"","nickname":"Geek_8d62c2","note":"","ucode":"9FD6780139768B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613371,"discussion_content":"就比如说，马上憋不住的情况下就不要过于追求拉的心情舒畅了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681293315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2885698,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/08/42/0733c7bd.jpg","nickname":"丙戌","note":"","ucode":"7955E34900FBFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578506,"discussion_content":"可以说非常准确哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656840540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284730,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/7a/dd08bc09.jpg","nickname":"姬","note":"","ucode":"968079E564FD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564122,"discussion_content":"拉屎专家","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650164224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395162,"avatar":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","nickname":"Ted","note":"","ucode":"89A8202074C0B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387908,"discussion_content":"太有才了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628494860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7146,"user_name":"懒人闲思","can_delete":false,"product_type":"c1","uid":1102563,"ip_address":"","ucode":"1F5033F7ECB41E","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/e3/11a198de.jpg","comment_is_top":false,"comment_ctime":1525308735,"is_pvip":false,"replies":[{"id":2019,"content":"用马哲来指导架构设计，好像也有道理😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311610,"ip_address":"","comment_id":7146,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"伟大导师马克思说过：主要矛盾处于支配地位，次要矛盾。。。也会有影响，架构设计就是提前预判可能遇到的矛盾，用最小的代价解决它","like_count":61,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417252,"discussion_content":"用马哲来指导架构设计，好像也有道理😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7171,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1525313991,"is_pvip":false,"replies":[{"id":2032,"content":"你分析的主要还是功能点，应该更进一步，分析这些功能点后的复杂度，而且要尽量量化。例如：\n1. 高可用和高性能：到底要多高，为什么要高性能高可用？\n2. 低延迟：到底多低？秒级和分钟级和小时级，复杂度差很大，秒级你可能要用流式计算，分钟级用后台计算可能就可以了，小时级直接用数据库就可以了\n3. 系统高可用具体达到什么水平？是1分钟都不能停，还是可以停1个小时？是数据绝对不能丢，还是可以丢一部分数据然后其它方式修复？\n\n对于高性能和高可用，千万不能说越高越好，一定要结合业务，例如，绝大部分内部系统的宕机容忍时间可以是一个小时。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525317186,"ip_address":"","comment_id":7171,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师好，我们目前在做内部的对象存储中控台，满足的需求有以下几个:\n1.方便内部非开发人员做数据存储\n2.提供对象存储的图形化界面\n3.监控整个存储集群的存储相关的指标，例如存储量，下行流量、api调用等等\n\n这几个需求也算是我结合公司的现有业务状况，以及对象存储的特性，自己总结的。\n系统上线以后，我预计的使用情况如下:\n1.大的天使客户都是一些职能的业务部门，由存储集群提供底层的存储接口，通过中控台进行监控，图形化操作\n2.其他零散人员，可存储一些工作上的数据\n\n目前我只是做了个demo出来，整体架构:nginx做前端的负载，springboot提供服务，mysql存储元数据，redis做消息队列，以及缓存，数据通过接口传到存储集群\n这个架构也没做太多考虑，就像老师您说的情况一样，只不过公司其他的系统也差不多都这样。\n\n对象存储中控台的业务复杂度我思考有以下几个:\n1.提供高可用，高性能的上传下载功能\n2.提供bucket 以及对象的查询功能\n3.提供低延迟的监控统计功能\n4.并发访问量个人感觉都集中在存储集群的接口调用，中控台这边并不高，但是一定要做到系统的高可用，保证内部职工正常的工作使用，同时mysql也要做到主备和异地多活，以及redis的主备\n\n老师这样的分析可以么，针对这样的业务，现有的架构有问题么\n\n\n","like_count":53,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296928,"discussion_content":"不仅仅架构设计中考虑的点要量化，包括生活和学习中的各项活动也都需要量化，通过量化才能发现进度和不足。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1596706804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417263,"discussion_content":"你分析的主要还是功能点，应该更进一步，分析这些功能点后的复杂度，而且要尽量量化。例如：\n1. 高可用和高性能：到底要多高，为什么要高性能高可用？\n2. 低延迟：到底多低？秒级和分钟级和小时级，复杂度差很大，秒级你可能要用流式计算，分钟级用后台计算可能就可以了，小时级直接用数据库就可以了\n3. 系统高可用具体达到什么水平？是1分钟都不能停，还是可以停1个小时？是数据绝对不能丢，还是可以丢一部分数据然后其它方式修复？\n\n对于高性能和高可用，千万不能说越高越好，一定要结合业务，例如，绝大部分内部系统的宕机容忍时间可以是一个小时。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1525317186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1360712,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","nickname":"天草二十六","note":"","ucode":"3165EE3007527B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312231,"discussion_content":"没看到你这个系统的业务指标数据，系统上线后，如何检测是否发生故障，或者说系统的健康值是多少呢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602636110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7135,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1525307324,"is_pvip":false,"replies":[{"id":2066,"content":"一起加油，大圣✊✊","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349547,"ip_address":"","comment_id":7135,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"1. 问答引导式由浅入深来讲解很赞\n\n2. 一个简单的例子能说明相关问题也很赞，就是这样，大家有时不需要大而全的大公司大例子，反手一个赞，加油，运华兄","like_count":43,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417247,"discussion_content":"一起加油，大圣✊✊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7386,"user_name":"晴天","can_delete":false,"product_type":"c1","uid":1100637,"ip_address":"","ucode":"9796E0EF8DD9A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/5d/f3b20f07.jpg","comment_is_top":false,"comment_ctime":1525438426,"is_pvip":false,"replies":[{"id":2111,"content":"现在的你就是曾经的我，一起加油👍👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525477463,"ip_address":"","comment_id":7386,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"我不是架构师，但是有一颗这样的梦想。小时不识月的时候，以为架构就是ssm，就是几种中间件的堆砌，简单粗暴，我上我也行的心态，后来接触的越多，业务复杂了，又开始忧来其如何了，为什么要这么设计，为什么用这个，接触概念也越来越高大上，开始如作者所说的大牛都该展现自己的技术，就是要上高性能高并发等等，就是要往复杂了去设计，盲目的去崇拜复杂的设计，而恰恰忽略了设计的本质是为了解决一定范围内的问题也就是软件复杂度，其实没必要那么疯狂，也没那么简单。适合的才是最完美的，脱离不了业务，也离不开现实，譬如成本控制，进度控制等等。所以我应该静下心来，认真的去学习那些优良的设计的背后，如何在选择上驾轻就熟，如何在这个规则里游刃有余……","like_count":30,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417329,"discussion_content":"现在的你就是曾经的我，一起加油👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525477463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296931,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596707206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7292,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1019923,"ip_address":"","ucode":"66A054E8AFDC36","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/13/b5479887.jpg","comment_is_top":false,"comment_ctime":1525385126,"is_pvip":false,"replies":[{"id":2119,"content":"你已经参透天机，后面会讲到你说的内容。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478537,"ip_address":"","comment_id":7292,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"架构是解决复杂度的问题。那么复杂度有很多不同的来源，比如人（不同的代码风格，不同的编程习惯），比如业务，比如技术。那么架构不可能面面俱到的解决所有问题，必须要分析出所面对的一个或几个关键的问题，这样架构的设计就能有落脚点，而且问题解决也不会有大的冲突。\n架构设计在发展的不同阶段面临不同的问题，例如我们公司刚开始就做了业务拆分，后端是多个服务，前端一个站点，并且提供了一个服务互相调用的公共代理，现在主站越来越庞大，涵盖的业务越来越多，所以要做业务拆分，公共代理所包含的服务也越来越多，也要进行拆分。另外一个业务要调用多个服务，如何去监控调用链的完整性，这也需要解决。\n所以架构本身在不同阶段集中解决几个最主要的问题，之后随着业务，技术，问题的不断变化，架构的重点也在不断调整。","like_count":24,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417300,"discussion_content":"你已经参透天机，后面会讲到你说的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7148,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1525309556,"is_pvip":true,"replies":[{"id":2017,"content":"收下我的膝盖，大神写个心得就已经把我后面的内容剧透了，6666👍👍😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311547,"ip_address":"","comment_id":7148,"utype":1}],"discussion_count":5,"race_medal":1,"score":2,"product_id":100006601,"comment_content":"架构是为了应对软件系统复杂度而提出的一个解决方案。个人感悟是:架构即(重要)决策，是在一个有约束的盒子里去求解或接近最合适的解。这个有约束的盒子是团队经验、成本、资源、进度、业务所处阶段等所编织、掺杂在一起的综合体(人，财，物，时间，事情等)。架构无优劣，但是存在恰当的架构用在合适的软件系统中，而这些就是决策的结果。\n\n需求驱动架构。在分析设计阶段，需要考虑一定的人力与时间去&quot;跳出代码，总揽全局&quot;，为业务和IT技术之间搭建一座&quot;桥梁&quot;。\n\n架构设计处于软件研制的前期，一方面，越是前期，如有问题，就能够越早发现，修改的代价也就越低；另外一方面，也意味着，软件实施后期若有架构上的修改，也需要付出更多的代价。\n\n今日得到:\n1 架构是为了应对软件系统复杂度而提出的一个解决方案。\n2 架构即(重要)决策\n3 需求驱动架构，架起分析与设计实现的桥梁\n4 架构与开发成本的关系","like_count":703,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417253,"discussion_content":"收下我的膝盖，大神写个心得就已经把我后面的内容剧透了，6666👍👍😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297559,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cc/97/ae4d1400.jpg","nickname":"林枫","note":"","ucode":"38B9CBE7F42174","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389554,"discussion_content":"我的理解是架构师的核心能力对对系统进行建模，建立的模型是短时间内系统问题空间的最优解。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1629337108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296916,"discussion_content":"&#34;构设计处于软件研制的前期，一方面，越是前期，如有问题，就能够越早发现，修改的代价也就越低；另外一方面，也意味着，软件实施后期若有架构上的修改，也需要付出更多的代价。&#34;做架构设计的话不能发现问题吧？？因为具体的操作还没有实施。发现问题的话也是在根据架构实施的过程中发现的，需要修正架构。各位帮忙解惑","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596705404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1261959,"avatar":"https://static001.geekbang.org/account/avatar/00/13/41/87/46d7e1c2.jpg","nickname":"Better me","note":"","ucode":"CADF08D357489A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300504,"discussion_content":"我觉得可以运用以终为始的方法提前进行系统业务演练(并不一定要等具体操作实施，可以在自己头脑中进行，像老师文中例子分析那样)，尽可能规避在架构上大方向的问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598152139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296916,"ip_address":"","group_id":0},"score":300504,"extra":""}]},{"author":{"id":1224554,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/RQdib68D7dsoFlYXOweiaPqLrcyn2jD6DCGnz8nc2VFmhmX0bpGTeSrVM5M9Qs7ibIInAmt5MeLcpcNja5YjyZCIg/132","nickname":"bigzuo","note":"","ucode":"448C258D31A8A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627416,"discussion_content":"很好的总结，锦上添花","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694136817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7195,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1525325291,"is_pvip":false,"replies":[{"id":2062,"content":"你已经参透天机👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349333,"ip_address":"","comment_id":7195,"utype":1}],"discussion_count":10,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"今天读完文章，思考了下我们系统的复杂点，我们系统是一个承上启下的系统，根本没自己的表，所有数据都是调第三方接口取，然后汇总聚合给前端浏览器，突然明白最近老大为什么要搞es去异步聚合第三方数据了，这样以往我们需要调第三方多次接口取的数据，以后调自己es查询一次就可以了，这样性能更高，且逻辑更简单，更容易维护，以往优化这种性能问题的方式，就是多线程，然而多线程也是要消耗资源调，而且代码反而更难以理解，原来最好的优化方式不是把串行变并行，而是把串行干的多个事的数量去减少，首先要根据系统复杂点想到合适的解决方案，其次才是用什么优秀的框架叫代码更牛逼一点，否则一开始就算错的","like_count":133,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417274,"discussion_content":"你已经参透天机👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2019657,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d1/49/791d0f5e.jpg","nickname":"aake","note":"","ucode":"FEFBF59EF09BFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287684,"discussion_content":"聚合第三方数据，需要维护你的es数据和第三方数据的一致性，不是引入新的复杂度了么","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1593509691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1008468,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/54/c9475cd0.jpg","nickname":"cz","note":"","ucode":"96385190176F78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2019657,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d1/49/791d0f5e.jpg","nickname":"aake","note":"","ucode":"FEFBF59EF09BFD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544118,"discussion_content":"可能是对数据新鲜度要求不高吧，不然这一致性能把人搞疯掉","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641398296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287684,"ip_address":"","group_id":0},"score":544118,"extra":""},{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2019657,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d1/49/791d0f5e.jpg","nickname":"aake","note":"","ucode":"FEFBF59EF09BFD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550718,"discussion_content":"聚合第三方数据，一般都会将数据落地，好处远大于坏处，至于一致性问题，有很多方案可以考虑，比如落地数据的时效性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644683335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287684,"ip_address":"","group_id":0},"score":550718,"extra":""}]},{"author":{"id":1102857,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d4/09/3c4dcd26.jpg","nickname":"无缺","note":"","ucode":"E4C5EB926A20D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551191,"discussion_content":"ES只是一个工具而已，也可以是数据库，甚至redis、文件系统等，本质是上下游解耦了，职责单一了，各司其职，互不干扰","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1644921481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2417306,"avatar":"https://static001.geekbang.org/account/avatar/00/24/e2/9a/9ff4869c.jpg","nickname":"阔别","note":"","ucode":"E37411D178B604","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582872,"discussion_content":"这样又会有数据一致性问题，需要做好对账","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659732285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2446397,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/kHoDdV15McXMpmNj0rCkjiaxB8liaKbMOCucv2PJ4tQ1xDSUcNSvEibaBpPpIib41PbwxXWH9YCXr5y2khyibltbL1w/132","nickname":"bryan","note":"","ucode":"78CDC70FD1E726","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370456,"discussion_content":"做本地数据闭环","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619421328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2038389,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/1a/75/ec8cba01.jpg","nickname":"沉落的时针","note":"","ucode":"A2C3F5FFEC24AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313328,"discussion_content":"早该这样了 调第三方接口不是还要流量费？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603031997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1401442,"avatar":"https://static001.geekbang.org/account/avatar/00/15/62/62/0f485b3c.jpg","nickname":"大章鱼","note":"","ucode":"D1DFCB2618E71F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312594,"discussion_content":"es面向的是历史海量数据吧，历史数据的更新操作基本不存在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602743219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051087,"avatar":"https://static001.geekbang.org/account/avatar/00/10/09/cf/9196b53b.jpg","nickname":"lawrence.peng","note":"","ucode":"5021C6FADCC032","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308662,"discussion_content":"有同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601023112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9116,"user_name":"gevin","can_delete":false,"product_type":"c1","uid":1005862,"ip_address":"","ucode":"B5AD68F1884A1F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/26/1015d573.jpg","comment_is_top":false,"comment_ctime":1526613637,"is_pvip":false,"replies":[{"id":2734,"content":"赞，写的很好，对我的专栏内容是很好的补充","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526615768,"ip_address":"","comment_id":9116,"utype":1}],"discussion_count":7,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"我觉得做软件架构是为两件事服务的：业务架构和业务量级，这应该算是“软件系统复杂度带来问题”的具体化吧。\n\n业务架构和业务量级都是从每个具体项目的实际应用场景中提炼出来的。\n\n业务架构是对业务需求的提炼和抽象，开发软件必须要满足业务需求，否则就是空中楼阁。软件系统业务上的复杂度问题，可以从业务架构的角度切分工作交界面来解决。设计软件架构，首先是要保证能和业务架构对的上，这也是从业务逻辑转向代码逻辑的过程，所以软件架构的设计为开发指明了方向。另外架构设计也为接下来的开发工作分工奠定了基础。\n\n业务量级表现在存储能力、吞吐能力和容错能力等，主要是软件运维期业务的复杂度。做软件架构设计，是要保证软件有能力托起它在业务量级上的要求的，如果软件到运行使用期废了，前面所有的工作都付诸东流了。不同的业务量级，对应的软件的架构复杂度是不同的，所以对于不同的项目，业务量级不同，架构设计也不同。\n\n做业务架构必须与其面向的实际应用场景相匹配，由于每个产品或项目的业务场景均有所不同，所以每次做新的软件开发前，必须先设计软件架构，试图不经分析直接套用先前的架构方案，十有八九会让当前的系统在某个点上报出大问题导致推翻重来，更不要说直接拿别人的现成架构方案了。\n\n所以每个软件在开发前，都要结合自己的应用场景设计适合自身的软件架构，现成的架构方案只能借鉴，不能直接套用。\n\n另外，由于业务架构和业务量级也会不断调整或长大，软件架构也不是一劳永逸的，会随业务不断调整。","like_count":87,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417274,"discussion_content":"你已经参透天机👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2019657,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d1/49/791d0f5e.jpg","nickname":"aake","note":"","ucode":"FEFBF59EF09BFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287684,"discussion_content":"聚合第三方数据，需要维护你的es数据和第三方数据的一致性，不是引入新的复杂度了么","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1593509691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1008468,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/54/c9475cd0.jpg","nickname":"cz","note":"","ucode":"96385190176F78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2019657,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d1/49/791d0f5e.jpg","nickname":"aake","note":"","ucode":"FEFBF59EF09BFD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544118,"discussion_content":"可能是对数据新鲜度要求不高吧，不然这一致性能把人搞疯掉","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641398296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287684,"ip_address":"","group_id":0},"score":544118,"extra":""},{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2019657,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d1/49/791d0f5e.jpg","nickname":"aake","note":"","ucode":"FEFBF59EF09BFD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550718,"discussion_content":"聚合第三方数据，一般都会将数据落地，好处远大于坏处，至于一致性问题，有很多方案可以考虑，比如落地数据的时效性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644683335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287684,"ip_address":"","group_id":0},"score":550718,"extra":""}]},{"author":{"id":1102857,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d4/09/3c4dcd26.jpg","nickname":"无缺","note":"","ucode":"E4C5EB926A20D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551191,"discussion_content":"ES只是一个工具而已，也可以是数据库，甚至redis、文件系统等，本质是上下游解耦了，职责单一了，各司其职，互不干扰","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1644921481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2417306,"avatar":"https://static001.geekbang.org/account/avatar/00/24/e2/9a/9ff4869c.jpg","nickname":"阔别","note":"","ucode":"E37411D178B604","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582872,"discussion_content":"这样又会有数据一致性问题，需要做好对账","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659732285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2446397,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/kHoDdV15McXMpmNj0rCkjiaxB8liaKbMOCucv2PJ4tQ1xDSUcNSvEibaBpPpIib41PbwxXWH9YCXr5y2khyibltbL1w/132","nickname":"bryan","note":"","ucode":"78CDC70FD1E726","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370456,"discussion_content":"做本地数据闭环","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619421328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2038389,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/1a/75/ec8cba01.jpg","nickname":"沉落的时针","note":"","ucode":"A2C3F5FFEC24AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313328,"discussion_content":"早该这样了 调第三方接口不是还要流量费？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603031997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1401442,"avatar":"https://static001.geekbang.org/account/avatar/00/15/62/62/0f485b3c.jpg","nickname":"大章鱼","note":"","ucode":"D1DFCB2618E71F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312594,"discussion_content":"es面向的是历史海量数据吧，历史数据的更新操作基本不存在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602743219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051087,"avatar":"https://static001.geekbang.org/account/avatar/00/10/09/cf/9196b53b.jpg","nickname":"lawrence.peng","note":"","ucode":"5021C6FADCC032","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308662,"discussion_content":"有同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601023112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7274,"user_name":"霍潘","can_delete":false,"product_type":"c1","uid":1108336,"ip_address":"","ucode":"98933232BA9C1F","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/70/266634f7.jpg","comment_is_top":false,"comment_ctime":1525362481,"is_pvip":false,"replies":[{"id":2120,"content":"8个架构师？太夸张了，一个架构师一般可以支撑20人以上的开发团队，你们的架构师莫非是传说中的PPT架构师？😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478638,"ip_address":"","comment_id":7274,"utype":1}],"discussion_count":9,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"这篇内容完全符合我们公司目前现状，为了架构而架构。原本3个人负责的nodejs系统现在改用JAVA开发，光架构师招了快7，8个。不到2000人使用的系统没有一天不出点小故障，开发过程更是痛苦，三天两头的开发环境跑不起来。说是微服务，不过是把原来单体结构按功能拆分，按层级拆分，本来就拆分的够多了，为了开发要启动很多服务。每个新来的架构师都要引入一套自己的架构，结果可想而知","like_count":71,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417973,"discussion_content":"赞，写的很好，对我的专栏内容是很好的补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526615768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395162,"avatar":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","nickname":"Ted","note":"","ucode":"89A8202074C0B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387906,"discussion_content":"业务架构和业务量级，这应该算是“软件系统复杂度带来问题”的具体化，这句话太精准了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1628494759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3221289,"avatar":"","nickname":"Geek_9a02e8","note":"","ucode":"9E3D77B9F592B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607591,"discussion_content":"说到心坎里去了，我们现在就面临这个问题，套用之前的架构方案，现在各种别扭。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1677991100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550719,"discussion_content":"很有启发！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644683571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379744,"discussion_content":"很有启发！！！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624103027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1656804,"avatar":"https://static001.geekbang.org/account/avatar/00/19/47/e4/17cb3df1.jpg","nickname":"BBQ","note":"","ucode":"683BBF7F7AE370","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313234,"discussion_content":"课程精彩，评论也非常精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603009668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1220514,"avatar":"https://static001.geekbang.org/account/avatar/00/12/9f/a2/8953bea7.jpg","nickname":"守护","note":"","ucode":"D6294BC0F61697","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290314,"discussion_content":"写得真好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594422456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7550,"user_name":"✎﹏๓₯㎕╮陌","can_delete":false,"product_type":"c1","uid":1100959,"ip_address":"","ucode":"2462FABBE81F4D","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/9f/170cd096.jpg","comment_is_top":false,"comment_ctime":1525523465,"is_pvip":false,"replies":[{"id":2172,"content":"角度刁钻😂😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525562418,"ip_address":"","comment_id":7550,"utype":1}],"discussion_count":8,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"架构就是。当你想拉屎的时候首先得去找厕所。选择一个什么样的厕所。\n1.距离选择。如果太远可能就漏出来了\n2.成本选择。如果拉屎太贵也不合适\n3.性能选择。好的厕所可以拉的心情舒畅","like_count":66,"discussions":[{"author":{"id":1450112,"avatar":"https://static001.geekbang.org/account/avatar/00/16/20/80/55e93141.jpg","nickname":"拾光漫步","note":"","ucode":"48DB0837C8F95C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46699,"discussion_content":"诸神之战","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1573195794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417296,"discussion_content":"8个架构师？太夸张了，一个架构师一般可以支撑20人以上的开发团队，你们的架构师莫非是传说中的PPT架构师？😃","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1525478638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1203867,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5e/9b/a25306b1.jpg","nickname":"我是啊","note":"","ucode":"A21D9613A34C15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":113784,"discussion_content":"频繁更换架构才是根本原因","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1577931939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047435,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fb/8b/a1feb0bf.jpg","nickname":"华仔","note":"","ucode":"241962BCA71674","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216051,"discussion_content":"人人都是架构师","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1585403440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1600151,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJr7gl9qWGKLPlG7AmSLKJibsEUWuJ85P7F0lyYgROc4ScfQsLEUeUCUXo9gDOF82ML7iaA7RjsK4Lg/132","nickname":"6666","note":"","ucode":"809F3ACB6C0887","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2778,"discussion_content":"架构师的龙争虎斗","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1563931754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028301,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b0/cd/c54572fe.jpg","nickname":"沐雪","note":"","ucode":"0C42BF0D75FD9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550720,"discussion_content":"估计是来了来了又走了，走了又来新的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644683718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395162,"avatar":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","nickname":"Ted","note":"","ucode":"89A8202074C0B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387907,"discussion_content":"ppt架构师。。。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628494815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1650378,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","nickname":"菠萝吹雪—Code","note":"","ucode":"A5B2FC661EE17D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347558,"discussion_content":"我们的是，你不听架构师的，扣绩效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612257114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1288333,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a8/8d/1fc5edc7.jpg","nickname":"沉思加菲猫","note":"","ucode":"564EB6FB54962F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295343,"discussion_content":"产品经理兼架构师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596170826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7146,"user_name":"懒人闲思","can_delete":false,"product_type":"c1","uid":1102563,"ip_address":"","ucode":"1F5033F7ECB41E","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/e3/11a198de.jpg","comment_is_top":false,"comment_ctime":1525308735,"is_pvip":false,"replies":[{"id":2019,"content":"用马哲来指导架构设计，好像也有道理😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311610,"ip_address":"","comment_id":7146,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"伟大导师马克思说过：主要矛盾处于支配地位，次要矛盾。。。也会有影响，架构设计就是提前预判可能遇到的矛盾，用最小的代价解决它","like_count":61,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417395,"discussion_content":"角度刁钻😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525562418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1725691,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/54/fb/d533b03e.jpg","nickname":"Andy","note":"","ucode":"BDA2AEB353ECC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570902,"discussion_content":"厕所架构师","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1651989401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3902989,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/8e/0d/341bf502.jpg","nickname":"Geek_475438","note":"","ucode":"9BE81FB603149F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647856,"discussion_content":"说的我都想多拉几次屎了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1720675436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054154,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/ca/bf3fb655.jpg","nickname":"Lee","note":"","ucode":"E9385622CA7ACB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649596,"discussion_content":"卧虎藏龙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1723624295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3538680,"avatar":"","nickname":"Geek_8d62c2","note":"","ucode":"9FD6780139768B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613371,"discussion_content":"就比如说，马上憋不住的情况下就不要过于追求拉的心情舒畅了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681293315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2885698,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/08/42/0733c7bd.jpg","nickname":"丙戌","note":"","ucode":"7955E34900FBFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578506,"discussion_content":"可以说非常准确哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656840540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284730,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/7a/dd08bc09.jpg","nickname":"姬","note":"","ucode":"968079E564FD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564122,"discussion_content":"拉屎专家","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650164224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1395162,"avatar":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","nickname":"Ted","note":"","ucode":"89A8202074C0B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387908,"discussion_content":"太有才了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628494860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7171,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1525313991,"is_pvip":false,"replies":[{"id":2032,"content":"你分析的主要还是功能点，应该更进一步，分析这些功能点后的复杂度，而且要尽量量化。例如：\n1. 高可用和高性能：到底要多高，为什么要高性能高可用？\n2. 低延迟：到底多低？秒级和分钟级和小时级，复杂度差很大，秒级你可能要用流式计算，分钟级用后台计算可能就可以了，小时级直接用数据库就可以了\n3. 系统高可用具体达到什么水平？是1分钟都不能停，还是可以停1个小时？是数据绝对不能丢，还是可以丢一部分数据然后其它方式修复？\n\n对于高性能和高可用，千万不能说越高越好，一定要结合业务，例如，绝大部分内部系统的宕机容忍时间可以是一个小时。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525317186,"ip_address":"","comment_id":7171,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师好，我们目前在做内部的对象存储中控台，满足的需求有以下几个:\n1.方便内部非开发人员做数据存储\n2.提供对象存储的图形化界面\n3.监控整个存储集群的存储相关的指标，例如存储量，下行流量、api调用等等\n\n这几个需求也算是我结合公司的现有业务状况，以及对象存储的特性，自己总结的。\n系统上线以后，我预计的使用情况如下:\n1.大的天使客户都是一些职能的业务部门，由存储集群提供底层的存储接口，通过中控台进行监控，图形化操作\n2.其他零散人员，可存储一些工作上的数据\n\n目前我只是做了个demo出来，整体架构:nginx做前端的负载，springboot提供服务，mysql存储元数据，redis做消息队列，以及缓存，数据通过接口传到存储集群\n这个架构也没做太多考虑，就像老师您说的情况一样，只不过公司其他的系统也差不多都这样。\n\n对象存储中控台的业务复杂度我思考有以下几个:\n1.提供高可用，高性能的上传下载功能\n2.提供bucket 以及对象的查询功能\n3.提供低延迟的监控统计功能\n4.并发访问量个人感觉都集中在存储集群的接口调用，中控台这边并不高，但是一定要做到系统的高可用，保证内部职工正常的工作使用，同时mysql也要做到主备和异地多活，以及redis的主备\n\n老师这样的分析可以么，针对这样的业务，现有的架构有问题么\n\n\n","like_count":53,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417252,"discussion_content":"用马哲来指导架构设计，好像也有道理😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7135,"user_name":"张玮(大圣)","can_delete":false,"product_type":"c1","uid":1111343,"ip_address":"","ucode":"D567C4BE87D116","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/2f/56117bab.jpg","comment_is_top":false,"comment_ctime":1525307324,"is_pvip":false,"replies":[{"id":2066,"content":"一起加油，大圣✊✊","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349547,"ip_address":"","comment_id":7135,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"1. 问答引导式由浅入深来讲解很赞\n\n2. 一个简单的例子能说明相关问题也很赞，就是这样，大家有时不需要大而全的大公司大例子，反手一个赞，加油，运华兄","like_count":43,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296928,"discussion_content":"不仅仅架构设计中考虑的点要量化，包括生活和学习中的各项活动也都需要量化，通过量化才能发现进度和不足。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1596706804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417263,"discussion_content":"你分析的主要还是功能点，应该更进一步，分析这些功能点后的复杂度，而且要尽量量化。例如：\n1. 高可用和高性能：到底要多高，为什么要高性能高可用？\n2. 低延迟：到底多低？秒级和分钟级和小时级，复杂度差很大，秒级你可能要用流式计算，分钟级用后台计算可能就可以了，小时级直接用数据库就可以了\n3. 系统高可用具体达到什么水平？是1分钟都不能停，还是可以停1个小时？是数据绝对不能丢，还是可以丢一部分数据然后其它方式修复？\n\n对于高性能和高可用，千万不能说越高越好，一定要结合业务，例如，绝大部分内部系统的宕机容忍时间可以是一个小时。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1525317186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1360712,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","nickname":"天草二十六","note":"","ucode":"3165EE3007527B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312231,"discussion_content":"没看到你这个系统的业务指标数据，系统上线后，如何检测是否发生故障，或者说系统的健康值是多少呢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602636110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7386,"user_name":"晴天","can_delete":false,"product_type":"c1","uid":1100637,"ip_address":"","ucode":"9796E0EF8DD9A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/5d/f3b20f07.jpg","comment_is_top":false,"comment_ctime":1525438426,"is_pvip":false,"replies":[{"id":2111,"content":"现在的你就是曾经的我，一起加油👍👍👍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525477463,"ip_address":"","comment_id":7386,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"我不是架构师，但是有一颗这样的梦想。小时不识月的时候，以为架构就是ssm，就是几种中间件的堆砌，简单粗暴，我上我也行的心态，后来接触的越多，业务复杂了，又开始忧来其如何了，为什么要这么设计，为什么用这个，接触概念也越来越高大上，开始如作者所说的大牛都该展现自己的技术，就是要上高性能高并发等等，就是要往复杂了去设计，盲目的去崇拜复杂的设计，而恰恰忽略了设计的本质是为了解决一定范围内的问题也就是软件复杂度，其实没必要那么疯狂，也没那么简单。适合的才是最完美的，脱离不了业务，也离不开现实，譬如成本控制，进度控制等等。所以我应该静下心来，认真的去学习那些优良的设计的背后，如何在选择上驾轻就熟，如何在这个规则里游刃有余……","like_count":30,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417247,"discussion_content":"一起加油，大圣✊✊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7292,"user_name":"Will","can_delete":false,"product_type":"c1","uid":1019923,"ip_address":"","ucode":"66A054E8AFDC36","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/13/b5479887.jpg","comment_is_top":false,"comment_ctime":1525385126,"is_pvip":false,"replies":[{"id":2119,"content":"你已经参透天机，后面会讲到你说的内容。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478537,"ip_address":"","comment_id":7292,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"架构是解决复杂度的问题。那么复杂度有很多不同的来源，比如人（不同的代码风格，不同的编程习惯），比如业务，比如技术。那么架构不可能面面俱到的解决所有问题，必须要分析出所面对的一个或几个关键的问题，这样架构的设计就能有落脚点，而且问题解决也不会有大的冲突。\n架构设计在发展的不同阶段面临不同的问题，例如我们公司刚开始就做了业务拆分，后端是多个服务，前端一个站点，并且提供了一个服务互相调用的公共代理，现在主站越来越庞大，涵盖的业务越来越多，所以要做业务拆分，公共代理所包含的服务也越来越多，也要进行拆分。另外一个业务要调用多个服务，如何去监控调用链的完整性，这也需要解决。\n所以架构本身在不同阶段集中解决几个最主要的问题，之后随着业务，技术，问题的不断变化，架构的重点也在不断调整。","like_count":24,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417329,"discussion_content":"现在的你就是曾经的我，一起加油👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525477463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296931,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596707206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9127,"user_name":"重剑","can_delete":false,"product_type":"c1","uid":1133526,"ip_address":"","ucode":"EDD4E163CDC508","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/d6/68561c13.jpg","comment_is_top":false,"comment_ctime":1526620013,"is_pvip":false,"replies":[{"id":2744,"content":"学完你也可以吹水了😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526638414,"ip_address":"","comment_id":9127,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"感觉自己好笨，看了好几章，说不出什么心得体悟😅，看各位大神踊跃发言好羡慕。","like_count":19},{"had_liked":false,"id":7383,"user_name":"何鹏","can_delete":false,"product_type":"c1","uid":1055502,"ip_address":"","ucode":"CF8B56667EF937","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/0e/98d1355c.jpg","comment_is_top":false,"comment_ctime":1525436064,"is_pvip":false,"replies":[{"id":2112,"content":"我的第一本书《面向对象葵花宝典》详细阐述了面向对象全流程的设计方法以及uml的应用场景，uml和架构设计一样，都是有具体应用场景的。\n\n方法论非常有用，编程发展几十年了，方法论就是各路大牛，各种场景的经验总结，你再怎么加班，都不可能把所有的坑都踩一遍，站在巨人的肩膀上，基于前辈们的经验，能够减少自己走很多弯路。\n\n我的架构设计方法论是积累和实践很多年总结出来的，也是基于以前的各种理论和经验提炼的，不可能完全靠自己摸索出来的。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525477915,"ip_address":"","comment_id":7383,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我要提问，容我问个题外问题，问题如下。\n背景:我工作3年多，最近在学习uml，但是感觉程序设计帮助并不大。程序设计和编程还是靠经验和加班加出来的。\n所以问题是，方法论这个东西在程序设计方面真的作用大吗？编程是不是还就是靠经验和加班？\n  不知道版主哥对方法论怎么看的，并且你用uml吗？\n  补充，uml我才用了3个月，只用它开发了3个功能，所以也可能是我资历太浅，没掌握要领和精髓。","like_count":17,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417979,"discussion_content":"学完你也可以吹水了😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526638414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7114,"user_name":"罗烽","can_delete":false,"product_type":"c1","uid":1104625,"ip_address":"","ucode":"B55A6A441A3863","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/f1/738bcb98.jpg","comment_is_top":false,"comment_ctime":1525304085,"is_pvip":false,"replies":[{"id":2025,"content":"1. 每天1~2万的话，性能要求其实很低，性能都是按秒计算的，所以缓存不一定需要\n2. 分析的很好，白天要求高，晚上可以停机，这样的背景可以设计很多有趣的方案，例如每天晚上定时重启一次，晚上批处理对账等","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312505,"ip_address":"","comment_id":7114,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"架构设计主要是为了解决软件复杂度的问题：\n现有业务复杂度分析：\n性能： 提供外部接口，对性能有一定的要求，对对存储也有一定要求，但访问量每天不高，1万~2万，mysql+缓存，还是有必要的，量不高，但要快\n可扩展性：因为需要经常对接其他支付接口，所以这里的可扩展性有一定要求\n高可用：这是重点，因为是提供给商场使用的支付接口，哪怕一分钟宕机都是不行的，针对高可用方案，我现在只能想到，在不同机器上部署多套服务，然后用nginx做负载。不过晚上没有交易，可以停机的。存储数据都是订单，这个很重要，因为每天需要查账，不过已经使用了阿里云的rds主备方案，这里也不用担心\n安全性：现在接口都是用sign验签，而秘钥都是独立的，所以这里也没有问题了\n\n综合来说，我们对高可用，稳定性是要求最多的，这是这里的复杂度","like_count":17,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417328,"discussion_content":"我的第一本书《面向对象葵花宝典》详细阐述了面向对象全流程的设计方法以及uml的应用场景，uml和架构设计一样，都是有具体应用场景的。\n\n方法论非常有用，编程发展几十年了，方法论就是各路大牛，各种场景的经验总结，你再怎么加班，都不可能把所有的坑都踩一遍，站在巨人的肩膀上，基于前辈们的经验，能够减少自己走很多弯路。\n\n我的架构设计方法论是积累和实践很多年总结出来的，也是基于以前的各种理论和经验提炼的，不可能完全靠自己摸索出来的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1525477915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296945,"discussion_content":"架构经验不是靠加班加出来的吧，用蛮力我感觉肯定就输了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596710129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003452,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/bc/501ce428.jpg","nickname":"年轮","note":"","ucode":"C70B8CD2FA0F54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584834,"discussion_content":"真正的体力话是可以通过加班加人搞定的，架构设计这种不是加人加班可以搞定的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661151911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2587325,"avatar":"https://static001.geekbang.org/account/avatar/00/27/7a/bd/21f71968.jpg","nickname":"码王爷","note":"","ucode":"03F8B09D3C9A66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370236,"discussion_content":"3年就踏实的搬砖吧你哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619342314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9220,"user_name":"Snake","can_delete":false,"product_type":"c1","uid":1034894,"ip_address":"","ucode":"C3E80DE87EACD1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ca/8e/5768649e.jpg","comment_is_top":false,"comment_ctime":1526695097,"is_pvip":false,"replies":[{"id":2773,"content":"这个不需要架构师设计，开发人员设计就可以，架构师需要关注项目架构是否会因为开发新业务而引入新的复杂度","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526702699,"ip_address":"","comment_id":9220,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"一直有个疑问，一个项目已经在持续推进，而当前的每个迭代只是不停地增加新的业务功能，一般不涉及任何底层设施的变动，此时架构师一般都应该做些什么？是需要针对每个迭代的需求做业务架构设计，然后产出对应的代码架构图吗？如业务的活动图和类图等","like_count":13,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417240,"discussion_content":"1. 每天1~2万的话，性能要求其实很低，性能都是按秒计算的，所以缓存不一定需要\n2. 分析的很好，白天要求高，晚上可以停机，这样的背景可以设计很多有趣的方案，例如每天晚上定时重启一次，晚上批处理对账等","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1525312505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2315005,"avatar":"https://static001.geekbang.org/account/avatar/00/23/52/fd/52cff711.jpg","nickname":"Debug","note":"","ucode":"6E0FB87638F7A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325648,"discussion_content":"大佬为啥每天要定时重启一次？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605390332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1245130,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ff/ca/aeaa9558.jpg","nickname":"刘彦辉","note":"","ucode":"741E43E6410BA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2315005,"avatar":"https://static001.geekbang.org/account/avatar/00/23/52/fd/52cff711.jpg","nickname":"Debug","note":"","ucode":"6E0FB87638F7A8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552922,"discussion_content":"不是有那么一句话 80%的问题可以通过重启来解决嘛。这种方案从大佬嘴里说出来叫有趣，我们说出来就叫 野路子😂","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1645637362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":325648,"ip_address":"","group_id":0},"score":552922,"extra":""}]}]},{"had_liked":false,"id":7187,"user_name":"天使","can_delete":false,"product_type":"c1","uid":1069842,"ip_address":"","ucode":"74F10EE17DD77F","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/12/783f6294.jpg","comment_is_top":false,"comment_ctime":1525320708,"is_pvip":false,"replies":[{"id":2064,"content":"微服务有专门章节阐述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349428,"ip_address":"","comment_id":7187,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"需要一个解决方案降低微服务的实施成本，创业公司面临的主要是需求变化剧烈的问题。微服务可以将变化局限在某个区域，不至于影响全局，所以最好一开始设计的时候就这样设计。我经历了三家创业公司，第一家大泥球架构，半年后就发现改动起来各种痛苦，牵一发动全身有时。第二家第三家上来就是微服务，基本没有这个问题。而且需求不同，可以采用完全不同的技术栈。相比第一家创业公司，人更少了，问题更少了，质量也更高了。另外，没有 devops 搞微服务就是天坑…","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417998,"discussion_content":"这个不需要架构师设计，开发人员设计就可以，架构师需要关注项目架构是否会因为开发新业务而引入新的复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526702699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048329,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/09/e0c39733.jpg","nickname":"Jayliud","note":"","ucode":"0274FC2607B1BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338210,"discussion_content":"摸鱼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609213460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296944,"discussion_content":"很实际的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596710074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7370,"user_name":"卡莫拉内西","can_delete":false,"product_type":"c1","uid":1117409,"ip_address":"","ucode":"CA9E2DE91DA117","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/e1/e0ba4e87.jpg","comment_is_top":false,"comment_ctime":1525430696,"is_pvip":false,"replies":[{"id":2114,"content":"还是先拿到单吧，这种虽然不合理，但也只能接受","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478030,"ip_address":"","comment_id":7370,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"公司接了一个几十号人使用的政府办公项目，甲方要求上微服务架构。。","like_count":9,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417267,"discussion_content":"微服务有专门章节阐述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7136,"user_name":"Mario","can_delete":false,"product_type":"c1","uid":1111208,"ip_address":"","ucode":"34B9D39C949446","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/a8/15501a28.jpg","comment_is_top":false,"comment_ctime":1525307454,"is_pvip":false,"replies":[{"id":2020,"content":"业务复杂度只是其中一种复杂度，并不是每个软件系统都有业务复杂度问题","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311697,"ip_address":"","comment_id":7136,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"架构设计的目的是什么？\n这是个好问题，值得每个架构师和想成为架构师的技术人经常思考。\n为了解决软件复杂性，是经典答案；\n个人认为架构设计的目的有:\n制定群解决业务问题复杂性的解决方案规范，包括核心业务流、扩展点位置、流程重组规范、服务编排方 法、等等，简而言之规范是架构的灵魂，方   法 &#39;论（比如DDD）是架构的指导意见，统一技术认知和屏蔽横向业务影响是架构核心价值。\n拙见，请大家指正","like_count":9,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417248,"discussion_content":"业务复杂度只是其中一种复杂度，并不是每个软件系统都有业务复杂度问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9513,"user_name":"MavenTalker","can_delete":false,"product_type":"c1","uid":1015142,"ip_address":"","ucode":"4E8A7CF2166610","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/66/070a7fb2.jpg","comment_is_top":false,"comment_ctime":1526940039,"is_pvip":false,"replies":[{"id":2880,"content":"非常正确，所以架构师的工作是一项头疼的工作，考虑东西很多","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526953392,"ip_address":"","comment_id":9513,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"有时候往往会为了一项牛逼的技术，想着法的引入到架构中去验证，这其实就是拿着锤子找钉子，忽略了技术实际的应用场景。\n\n不同的市场时机，不同的团队素质，也会衍生出不同的架构设计，没有对错，只有合不合适。","like_count":8,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418095,"discussion_content":"非常正确，所以架构师的工作是一项头疼的工作，考虑东西很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526953392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7373,"user_name":"9527","can_delete":false,"product_type":"c1","uid":1032735,"ip_address":"","ucode":"04B51C09E3C7B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/1f/343f2dec.jpg","comment_is_top":false,"comment_ctime":1525430894,"is_pvip":false,"replies":[{"id":2113,"content":"正确，这个话题后面会涉及","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525477981,"ip_address":"","comment_id":7373,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师您好，\n谈谈我学到的\n所谓的架构，就是在性能，可靠性，扩展性，安全，成本，之间做出权衡\n根据自己产品的需求，在以上几点中选择最关键几个，然后放弃相对不重要的几个\n比如创业公司为了成本就只能舍弃其他几个\n而银行为了安全就可能需要放弃一些性能\n秒杀系统为了性能就要在其他几个中做取舍\n不知道我理解的对不对😅😅","like_count":8,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417325,"discussion_content":"正确，这个话题后面会涉及","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525477981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7185,"user_name":"才才才","can_delete":false,"product_type":"c1","uid":1108848,"ip_address":"","ucode":"BE5BDA9D831217","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/70/7de5b8f6.jpg","comment_is_top":false,"comment_ctime":1525320395,"is_pvip":false,"replies":[{"id":2037,"content":"毫无疑问上大数据全家桶呀，关系型数据库扛不住后面章节会介绍存储这部分","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525322308,"ip_address":"","comment_id":7185,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"首先我们的数据每天以TB的级别增长，我想问下我们的数据库应该怎么设计，和选型","like_count":7,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417325,"discussion_content":"正确，这个话题后面会涉及","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525477981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9127,"user_name":"重剑","can_delete":false,"product_type":"c1","uid":1133526,"ip_address":"","ucode":"EDD4E163CDC508","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/d6/68561c13.jpg","comment_is_top":false,"comment_ctime":1526620013,"is_pvip":false,"replies":[{"id":2744,"content":"学完你也可以吹水了😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526638414,"ip_address":"","comment_id":9127,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"感觉自己好笨，看了好几章，说不出什么心得体悟😅，看各位大神踊跃发言好羡慕。","like_count":19,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417979,"discussion_content":"学完你也可以吹水了😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526638414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7383,"user_name":"何鹏","can_delete":false,"product_type":"c1","uid":1055502,"ip_address":"","ucode":"CF8B56667EF937","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/0e/98d1355c.jpg","comment_is_top":false,"comment_ctime":1525436064,"is_pvip":false,"replies":[{"id":2112,"content":"我的第一本书《面向对象葵花宝典》详细阐述了面向对象全流程的设计方法以及uml的应用场景，uml和架构设计一样，都是有具体应用场景的。\n\n方法论非常有用，编程发展几十年了，方法论就是各路大牛，各种场景的经验总结，你再怎么加班，都不可能把所有的坑都踩一遍，站在巨人的肩膀上，基于前辈们的经验，能够减少自己走很多弯路。\n\n我的架构设计方法论是积累和实践很多年总结出来的，也是基于以前的各种理论和经验提炼的，不可能完全靠自己摸索出来的。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525477915,"ip_address":"","comment_id":7383,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"我要提问，容我问个题外问题，问题如下。\n背景:我工作3年多，最近在学习uml，但是感觉程序设计帮助并不大。程序设计和编程还是靠经验和加班加出来的。\n所以问题是，方法论这个东西在程序设计方面真的作用大吗？编程是不是还就是靠经验和加班？\n  不知道版主哥对方法论怎么看的，并且你用uml吗？\n  补充，uml我才用了3个月，只用它开发了3个功能，所以也可能是我资历太浅，没掌握要领和精髓。","like_count":17,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417328,"discussion_content":"我的第一本书《面向对象葵花宝典》详细阐述了面向对象全流程的设计方法以及uml的应用场景，uml和架构设计一样，都是有具体应用场景的。\n\n方法论非常有用，编程发展几十年了，方法论就是各路大牛，各种场景的经验总结，你再怎么加班，都不可能把所有的坑都踩一遍，站在巨人的肩膀上，基于前辈们的经验，能够减少自己走很多弯路。\n\n我的架构设计方法论是积累和实践很多年总结出来的，也是基于以前的各种理论和经验提炼的，不可能完全靠自己摸索出来的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1525477915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296945,"discussion_content":"架构经验不是靠加班加出来的吧，用蛮力我感觉肯定就输了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596710129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003452,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/bc/501ce428.jpg","nickname":"年轮","note":"","ucode":"C70B8CD2FA0F54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584834,"discussion_content":"真正的体力话是可以通过加班加人搞定的，架构设计这种不是加人加班可以搞定的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661151911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2587325,"avatar":"https://static001.geekbang.org/account/avatar/00/27/7a/bd/21f71968.jpg","nickname":"码王爷","note":"","ucode":"03F8B09D3C9A66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370236,"discussion_content":"3年就踏实的搬砖吧你哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619342314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7114,"user_name":"罗烽","can_delete":false,"product_type":"c1","uid":1104625,"ip_address":"","ucode":"B55A6A441A3863","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/f1/738bcb98.jpg","comment_is_top":false,"comment_ctime":1525304085,"is_pvip":false,"replies":[{"id":2025,"content":"1. 每天1~2万的话，性能要求其实很低，性能都是按秒计算的，所以缓存不一定需要\n2. 分析的很好，白天要求高，晚上可以停机，这样的背景可以设计很多有趣的方案，例如每天晚上定时重启一次，晚上批处理对账等","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312505,"ip_address":"","comment_id":7114,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"架构设计主要是为了解决软件复杂度的问题：\n现有业务复杂度分析：\n性能： 提供外部接口，对性能有一定的要求，对对存储也有一定要求，但访问量每天不高，1万~2万，mysql+缓存，还是有必要的，量不高，但要快\n可扩展性：因为需要经常对接其他支付接口，所以这里的可扩展性有一定要求\n高可用：这是重点，因为是提供给商场使用的支付接口，哪怕一分钟宕机都是不行的，针对高可用方案，我现在只能想到，在不同机器上部署多套服务，然后用nginx做负载。不过晚上没有交易，可以停机的。存储数据都是订单，这个很重要，因为每天需要查账，不过已经使用了阿里云的rds主备方案，这里也不用担心\n安全性：现在接口都是用sign验签，而秘钥都是独立的，所以这里也没有问题了\n\n综合来说，我们对高可用，稳定性是要求最多的，这是这里的复杂度","like_count":17,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417240,"discussion_content":"1. 每天1~2万的话，性能要求其实很低，性能都是按秒计算的，所以缓存不一定需要\n2. 分析的很好，白天要求高，晚上可以停机，这样的背景可以设计很多有趣的方案，例如每天晚上定时重启一次，晚上批处理对账等","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1525312505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2315005,"avatar":"https://static001.geekbang.org/account/avatar/00/23/52/fd/52cff711.jpg","nickname":"Debug","note":"","ucode":"6E0FB87638F7A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325648,"discussion_content":"大佬为啥每天要定时重启一次？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605390332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1245130,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ff/ca/aeaa9558.jpg","nickname":"刘彦辉","note":"","ucode":"741E43E6410BA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2315005,"avatar":"https://static001.geekbang.org/account/avatar/00/23/52/fd/52cff711.jpg","nickname":"Debug","note":"","ucode":"6E0FB87638F7A8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552922,"discussion_content":"不是有那么一句话 80%的问题可以通过重启来解决嘛。这种方案从大佬嘴里说出来叫有趣，我们说出来就叫 野路子😂","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1645637362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":325648,"ip_address":"","group_id":0},"score":552922,"extra":""}]}]},{"had_liked":false,"id":9220,"user_name":"Snake","can_delete":false,"product_type":"c1","uid":1034894,"ip_address":"","ucode":"C3E80DE87EACD1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ca/8e/5768649e.jpg","comment_is_top":false,"comment_ctime":1526695097,"is_pvip":false,"replies":[{"id":2773,"content":"这个不需要架构师设计，开发人员设计就可以，架构师需要关注项目架构是否会因为开发新业务而引入新的复杂度","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526702699,"ip_address":"","comment_id":9220,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"一直有个疑问，一个项目已经在持续推进，而当前的每个迭代只是不停地增加新的业务功能，一般不涉及任何底层设施的变动，此时架构师一般都应该做些什么？是需要针对每个迭代的需求做业务架构设计，然后产出对应的代码架构图吗？如业务的活动图和类图等","like_count":13,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417998,"discussion_content":"这个不需要架构师设计，开发人员设计就可以，架构师需要关注项目架构是否会因为开发新业务而引入新的复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526702699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048329,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/09/e0c39733.jpg","nickname":"Jayliud","note":"","ucode":"0274FC2607B1BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338210,"discussion_content":"摸鱼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609213460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296944,"discussion_content":"很实际的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596710074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7187,"user_name":"天使","can_delete":false,"product_type":"c1","uid":1069842,"ip_address":"","ucode":"74F10EE17DD77F","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/12/783f6294.jpg","comment_is_top":false,"comment_ctime":1525320708,"is_pvip":false,"replies":[{"id":2064,"content":"微服务有专门章节阐述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349428,"ip_address":"","comment_id":7187,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"需要一个解决方案降低微服务的实施成本，创业公司面临的主要是需求变化剧烈的问题。微服务可以将变化局限在某个区域，不至于影响全局，所以最好一开始设计的时候就这样设计。我经历了三家创业公司，第一家大泥球架构，半年后就发现改动起来各种痛苦，牵一发动全身有时。第二家第三家上来就是微服务，基本没有这个问题。而且需求不同，可以采用完全不同的技术栈。相比第一家创业公司，人更少了，问题更少了，质量也更高了。另外，没有 devops 搞微服务就是天坑…","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417267,"discussion_content":"微服务有专门章节阐述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7370,"user_name":"卡莫拉内西","can_delete":false,"product_type":"c1","uid":1117409,"ip_address":"","ucode":"CA9E2DE91DA117","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/e1/e0ba4e87.jpg","comment_is_top":false,"comment_ctime":1525430696,"is_pvip":false,"replies":[{"id":2114,"content":"还是先拿到单吧，这种虽然不合理，但也只能接受","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478030,"ip_address":"","comment_id":7370,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"公司接了一个几十号人使用的政府办公项目，甲方要求上微服务架构。。","like_count":9,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417323,"discussion_content":"还是先拿到单吧，这种虽然不合理，但也只能接受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612372,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9a/54/5d51fda4.jpg","nickname":"婷","note":"","ucode":"1264B8F777B7CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216543,"discussion_content":"有钱就是任性","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585462306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1958681,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e3/19/7eba0a69.jpg","nickname":"邱荣财","note":"","ucode":"414D74823F8AA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1612372,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9a/54/5d51fda4.jpg","nickname":"婷","note":"","ucode":"1264B8F777B7CD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318629,"discussion_content":"顶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603793506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":216543,"ip_address":"","group_id":0},"score":318629,"extra":""}]},{"author":{"id":1424631,"avatar":"https://static001.geekbang.org/account/avatar/00/15/bc/f7/3ed0d1b7.jpg","nickname":"CZcz","note":"","ucode":"36C243050AF403","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592303,"discussion_content":"这叫面向甲方编程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667294292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7136,"user_name":"Mario","can_delete":false,"product_type":"c1","uid":1111208,"ip_address":"","ucode":"34B9D39C949446","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/a8/15501a28.jpg","comment_is_top":false,"comment_ctime":1525307454,"is_pvip":false,"replies":[{"id":2020,"content":"业务复杂度只是其中一种复杂度，并不是每个软件系统都有业务复杂度问题","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311697,"ip_address":"","comment_id":7136,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"架构设计的目的是什么？\n这是个好问题，值得每个架构师和想成为架构师的技术人经常思考。\n为了解决软件复杂性，是经典答案；\n个人认为架构设计的目的有:\n制定群解决业务问题复杂性的解决方案规范，包括核心业务流、扩展点位置、流程重组规范、服务编排方 法、等等，简而言之规范是架构的灵魂，方   法 &#39;论（比如DDD）是架构的指导意见，统一技术认知和屏蔽横向业务影响是架构核心价值。\n拙见，请大家指正","like_count":9,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417323,"discussion_content":"还是先拿到单吧，这种虽然不合理，但也只能接受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1612372,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9a/54/5d51fda4.jpg","nickname":"婷","note":"","ucode":"1264B8F777B7CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216543,"discussion_content":"有钱就是任性","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585462306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1958681,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e3/19/7eba0a69.jpg","nickname":"邱荣财","note":"","ucode":"414D74823F8AA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1612372,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9a/54/5d51fda4.jpg","nickname":"婷","note":"","ucode":"1264B8F777B7CD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318629,"discussion_content":"顶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603793506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":216543,"ip_address":"","group_id":0},"score":318629,"extra":""}]},{"author":{"id":1424631,"avatar":"https://static001.geekbang.org/account/avatar/00/15/bc/f7/3ed0d1b7.jpg","nickname":"CZcz","note":"","ucode":"36C243050AF403","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592303,"discussion_content":"这叫面向甲方编程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667294292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9513,"user_name":"MavenTalker","can_delete":false,"product_type":"c1","uid":1015142,"ip_address":"","ucode":"4E8A7CF2166610","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/66/070a7fb2.jpg","comment_is_top":false,"comment_ctime":1526940039,"is_pvip":false,"replies":[{"id":2880,"content":"非常正确，所以架构师的工作是一项头疼的工作，考虑东西很多","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526953392,"ip_address":"","comment_id":9513,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"有时候往往会为了一项牛逼的技术，想着法的引入到架构中去验证，这其实就是拿着锤子找钉子，忽略了技术实际的应用场景。\n\n不同的市场时机，不同的团队素质，也会衍生出不同的架构设计，没有对错，只有合不合适。","like_count":8,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417248,"discussion_content":"业务复杂度只是其中一种复杂度，并不是每个软件系统都有业务复杂度问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7373,"user_name":"9527","can_delete":false,"product_type":"c1","uid":1032735,"ip_address":"","ucode":"04B51C09E3C7B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/1f/343f2dec.jpg","comment_is_top":false,"comment_ctime":1525430894,"is_pvip":false,"replies":[{"id":2113,"content":"正确，这个话题后面会涉及","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525477981,"ip_address":"","comment_id":7373,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"老师您好，\n谈谈我学到的\n所谓的架构，就是在性能，可靠性，扩展性，安全，成本，之间做出权衡\n根据自己产品的需求，在以上几点中选择最关键几个，然后放弃相对不重要的几个\n比如创业公司为了成本就只能舍弃其他几个\n而银行为了安全就可能需要放弃一些性能\n秒杀系统为了性能就要在其他几个中做取舍\n不知道我理解的对不对😅😅","like_count":8,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418095,"discussion_content":"非常正确，所以架构师的工作是一项头疼的工作，考虑东西很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526953392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7185,"user_name":"才才才","can_delete":false,"product_type":"c1","uid":1108848,"ip_address":"","ucode":"BE5BDA9D831217","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/70/7de5b8f6.jpg","comment_is_top":false,"comment_ctime":1525320395,"is_pvip":false,"replies":[{"id":2037,"content":"毫无疑问上大数据全家桶呀，关系型数据库扛不住后面章节会介绍存储这部分","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525322308,"ip_address":"","comment_id":7185,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"首先我们的数据每天以TB的级别增长，我想问下我们的数据库应该怎么设计，和选型","like_count":7,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417266,"discussion_content":"毫无疑问上大数据全家桶呀，关系型数据库扛不住后面章节会介绍存储这部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525322308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7364,"user_name":"sam","can_delete":false,"product_type":"c1","uid":1000417,"ip_address":"","ucode":"8D48F4B9045947","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","comment_is_top":false,"comment_ctime":1525427812,"is_pvip":false,"replies":[{"id":2115,"content":"前端也有自己的复杂度哦，架构设计会分多级，先做整体架构设计，再做前端架构设计","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478133,"ip_address":"","comment_id":7364,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"做为前端工程师来分析项目架构设计时，发现很多设计考量都不在前端，如何突破这个限制让自己成长呢？","like_count":6},{"had_liked":false,"id":7298,"user_name":"Mask","can_delete":false,"product_type":"c1","uid":1027441,"ip_address":"","ucode":"3C8849ADE88553","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ad/71/cb16306a.jpg","comment_is_top":false,"comment_ctime":1525391778,"is_pvip":false,"replies":[{"id":2117,"content":"后面有详细的架构设计流程介绍架构师的工作","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478266,"ip_address":"","comment_id":7298,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"老师好，想问下架构师把问题都分析清楚了，怎么体现工作？就是怎么呈现工作成果？是画个架构图，然后配点解释说明文字吗？需要编写代码吗？😄","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417321,"discussion_content":"前端也有自己的复杂度哦，架构设计会分多级，先做整体架构设计，再做前端架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7204,"user_name":"老王","can_delete":false,"product_type":"c1","uid":1054710,"ip_address":"","ucode":"02AA850A7A9767","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/f6/87aac8c1.jpg","comment_is_top":false,"comment_ctime":1525333680,"is_pvip":false,"replies":[{"id":2061,"content":"高可靠也是复杂性来源之一","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349243,"ip_address":"","comment_id":7204,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"是不是没有大数据量（不需要数据库）就不需要架构设计了？比如与嵌入式系统设备通过网络交互的上位机软件，复杂度应该是高可靠性，不能挂。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417302,"discussion_content":"后面有详细的架构设计流程介绍架构师的工作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235680,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1595147663,"is_pvip":false,"replies":[{"id":87412,"content":"你的系统架构还比较复杂，从描述来看比较合理，服务拆分没有太细也没有太粗，个人感觉rocketmq数量有点多。不到20台业务相关的机器，mq用了8台","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1595474899,"ip_address":"","comment_id":235680,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"看到大家的评论我也总结下。订单系统：高性能：RocketMQ8台多主结构同步刷盘,Redis集群版12g三主分片三从分片,本地缓存,Mysql读写分离，加分表加tidb数据分析加数据归档。一主一从一只读库。主库16核64g(核心功能的查询与写入)，从库16核128g主要用于对外查询，拉单接口，只读库不用于生产机器用。  每天订单量40w左右，高峰期每天有是300w。数据量基本上是订单量*7=280w，高峰2100w。平时一天数据库磁盘新增1g左右。 服务划分：web3台，订单发货服务10台，拆单服务10台，mq消费服务5台，下传订单服务5台，定时任务服务2台，对外查询接口服务5台，配置表服务3台，canal服务2台。   es服务 高可用方面集群部署加机器监控，mq削峰。高性能：redis Mysql读写分离。 订单Tps已经被mq限流，控制消费线程数，并发200左右单机。  对于架构这块结合自己业务来说，模块划分为微服务，再中间件把这些起来。这是系统架构设计，还有业务架构设计，对于业务边界划分等等，老师提些建议","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417278,"discussion_content":"高可靠也是复杂性来源之一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16990,"user_name":"liyue326","can_delete":false,"product_type":"c1","uid":1184938,"ip_address":"","ucode":"35BA356593C5A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/aa/6df49a3f.jpg","comment_is_top":false,"comment_ctime":1532356182,"is_pvip":false,"replies":[{"id":5930,"content":"前端主要复杂度是可扩展，目前基本上依赖框架和前后端分离","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532424485,"ip_address":"","comment_id":16990,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"老师 前端架构的话该怎么做呢","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501803,"discussion_content":"你的系统架构还比较复杂，从描述来看比较合理，服务拆分没有太细也没有太粗，个人感觉rocketmq数量有点多。不到20台业务相关的机器，mq用了8台","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595474899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15241,"user_name":"sherry","can_delete":false,"product_type":"c1","uid":1120604,"ip_address":"","ucode":"B065118C5A7820","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/5c/04912a35.jpg","comment_is_top":false,"comment_ctime":1531029230,"is_pvip":false,"replies":[{"id":5192,"content":"这算是学了一个技术，顺便领悟了一个道理么😂👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531121531,"ip_address":"","comment_id":15241,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"生活的每天就像当架构师的每一天，架构要根据业务解决复杂性，生活要根据现实解决复杂度。架构要根据业务的实际需求，人员的技术水平，企业的运营成本做出取舍。生活也要根据自己的目标，能力做出最终的取舍。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420999,"discussion_content":"前端主要复杂度是可扩展，目前基本上依赖框架和前后端分离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532424485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9376,"user_name":"Geek_817974","can_delete":false,"product_type":"c1","uid":1122417,"ip_address":"","ucode":"19FB4BA8DE19E3","user_header":"","comment_is_top":false,"comment_ctime":1526829344,"is_pvip":false,"replies":[{"id":2834,"content":"等有钱了再买更好的，这就是演化原则😂😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526873308,"ip_address":"","comment_id":9376,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"感觉架构就像我们追求买东西的性价比一样，我们只有这么多钱，想买一个既能满足我们的功能需求，又能在其他方面（比如东西比较好看，比较轻便，比较舒适）更好的","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420300,"discussion_content":"这算是学了一个技术，顺便领悟了一个道理么😂👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531121531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558526,"discussion_content":"+1 前面的评论中也说了，每个人都是架构师，想想每一天生活就知道了～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648368115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7297,"user_name":"fish007","can_delete":false,"product_type":"c1","uid":1104203,"ip_address":"","ucode":"A3625A49573826","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/4b/013e19b7.jpg","comment_is_top":false,"comment_ctime":1525390800,"is_pvip":false,"replies":[{"id":2118,"content":"我理解整个系统的复杂度可能有两种：每个医院管理系统都要对接，报表复杂。\n因此你没必要用go开发，用java足够了，BI@report如果你们已经用了那就用。\n\n整体来看这不是微服务设计。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478500,"ip_address":"","comment_id":7297,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"请教老师，可以以最简单的报表系统为例讲解吗?一张表，比如结核病报告情况，数据来源于各个医院管理系统，然后对该表进行数据分析，发病率、地区分布、趋势预测、报告情况...。结核病分析系统是整个业务管理系统的子系统，其它还有乙肝、布病、慢病...，数据都是从各个医院管理系统通过数据接口采集需要的专病信息。仅考虑设计一个结核病管理系统，之前的想法是：GO语言做前端WEB访问页，用于用户登录、窗口展示、数据报送或采集数据浏览，主要考虑到GO简单易上手。数据分析比较复杂，所以申请了BI@repoort试用，是报表系统经常使用的分析平台，JAVA开发，可集成在系统中。然后分别打包在容器里，部署在华为云上。请教老师，这可以算是基于微服务的设计吗？可行吗😊?如果不可行，能讲解一个可实践的架构方案吗😊?非常感谢！","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418049,"discussion_content":"等有钱了再买更好的，这就是演化原则😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526873308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7226,"user_name":"三军","can_delete":false,"product_type":"c1","uid":1115689,"ip_address":"","ucode":"C1BCA262D7DE6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/29/bf619df8.jpg","comment_is_top":false,"comment_ctime":1525345475,"is_pvip":false,"replies":[{"id":2058,"content":"看把你乐的，我看的都很开心😃😃\n抢课的话，瞬间高并发就是复杂性所在，和12306类似，但我理解其实还是你们的系统没做好，因为某个课程抢的人不会是全校都在抢吧？和年级，专业相关，这样算下来，并发也不会高，你认真分析一下，也许真的加个缓存就够了。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525348547,"ip_address":"","comment_id":7226,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"哈哈，我们刚好有一个学校的项目还没开发，读到这篇文章很有感觉。\n学校情况就是2万人左右，教务系统每当抢课必定宕机。\n记得有次面试，在这个项目上写了从高并发高性能方面考虑，然而问起什么都不会说😊。\n架构设计:\n登录方面:基于学校教务系统的代理登录，哈哈，我在想，可以做个缓存系统来避免高峰期的页面缓慢问题。\n\n学生信息方面:就如作者所说，做好储存系统的方案，主机房有主、从备份，还有备机房。\n\n功能方面比较少。\n\n哈哈哈哈","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417301,"discussion_content":"我理解整个系统的复杂度可能有两种：每个医院管理系统都要对接，报表复杂。\n因此你没必要用go开发，用java足够了，BI@report如果你们已经用了那就用。\n\n整体来看这不是微服务设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7216,"user_name":"蓝色理想","can_delete":false,"product_type":"c1","uid":1015043,"ip_address":"","ucode":"43C8D83DC19A17","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/03/4e71c307.jpg","comment_is_top":false,"comment_ctime":1525343285,"is_pvip":false,"replies":[{"id":2059,"content":"说出你的想法，互相交流","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349158,"ip_address":"","comment_id":7216,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"所有 的软件设计方法 论都可以归 结为降低复杂度&#47;囧…","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417285,"discussion_content":"看把你乐的，我看的都很开心😃😃\n抢课的话，瞬间高并发就是复杂性所在，和12306类似，但我理解其实还是你们的系统没做好，因为某个课程抢的人不会是全校都在抢吧？和年级，专业相关，这样算下来，并发也不会高，你认真分析一下，也许真的加个缓存就够了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525348547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7364,"user_name":"sam","can_delete":false,"product_type":"c1","uid":1000417,"ip_address":"","ucode":"8D48F4B9045947","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","comment_is_top":false,"comment_ctime":1525427812,"is_pvip":false,"replies":[{"id":2115,"content":"前端也有自己的复杂度哦，架构设计会分多级，先做整体架构设计，再做前端架构设计","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478133,"ip_address":"","comment_id":7364,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"做为前端工程师来分析项目架构设计时，发现很多设计考量都不在前端，如何突破这个限制让自己成长呢？","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417321,"discussion_content":"前端也有自己的复杂度哦，架构设计会分多级，先做整体架构设计，再做前端架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7298,"user_name":"Mask","can_delete":false,"product_type":"c1","uid":1027441,"ip_address":"","ucode":"3C8849ADE88553","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ad/71/cb16306a.jpg","comment_is_top":false,"comment_ctime":1525391778,"is_pvip":false,"replies":[{"id":2117,"content":"后面有详细的架构设计流程介绍架构师的工作","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478266,"ip_address":"","comment_id":7298,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"老师好，想问下架构师把问题都分析清楚了，怎么体现工作？就是怎么呈现工作成果？是画个架构图，然后配点解释说明文字吗？需要编写代码吗？😄","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417302,"discussion_content":"后面有详细的架构设计流程介绍架构师的工作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7204,"user_name":"老王","can_delete":false,"product_type":"c1","uid":1054710,"ip_address":"","ucode":"02AA850A7A9767","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/f6/87aac8c1.jpg","comment_is_top":false,"comment_ctime":1525333680,"is_pvip":false,"replies":[{"id":2061,"content":"高可靠也是复杂性来源之一","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349243,"ip_address":"","comment_id":7204,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"是不是没有大数据量（不需要数据库）就不需要架构设计了？比如与嵌入式系统设备通过网络交互的上位机软件，复杂度应该是高可靠性，不能挂。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417278,"discussion_content":"高可靠也是复杂性来源之一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235680,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1595147663,"is_pvip":false,"replies":[{"id":87412,"content":"你的系统架构还比较复杂，从描述来看比较合理，服务拆分没有太细也没有太粗，个人感觉rocketmq数量有点多。不到20台业务相关的机器，mq用了8台","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1595474899,"ip_address":"","comment_id":235680,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"看到大家的评论我也总结下。订单系统：高性能：RocketMQ8台多主结构同步刷盘,Redis集群版12g三主分片三从分片,本地缓存,Mysql读写分离，加分表加tidb数据分析加数据归档。一主一从一只读库。主库16核64g(核心功能的查询与写入)，从库16核128g主要用于对外查询，拉单接口，只读库不用于生产机器用。  每天订单量40w左右，高峰期每天有是300w。数据量基本上是订单量*7=280w，高峰2100w。平时一天数据库磁盘新增1g左右。 服务划分：web3台，订单发货服务10台，拆单服务10台，mq消费服务5台，下传订单服务5台，定时任务服务2台，对外查询接口服务5台，配置表服务3台，canal服务2台。   es服务 高可用方面集群部署加机器监控，mq削峰。高性能：redis Mysql读写分离。 订单Tps已经被mq限流，控制消费线程数，并发200左右单机。  对于架构这块结合自己业务来说，模块划分为微服务，再中间件把这些起来。这是系统架构设计，还有业务架构设计，对于业务边界划分等等，老师提些建议","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501803,"discussion_content":"你的系统架构还比较复杂，从描述来看比较合理，服务拆分没有太细也没有太粗，个人感觉rocketmq数量有点多。不到20台业务相关的机器，mq用了8台","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595474899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16990,"user_name":"liyue326","can_delete":false,"product_type":"c1","uid":1184938,"ip_address":"","ucode":"35BA356593C5A7","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/aa/6df49a3f.jpg","comment_is_top":false,"comment_ctime":1532356182,"is_pvip":false,"replies":[{"id":5930,"content":"前端主要复杂度是可扩展，目前基本上依赖框架和前后端分离","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532424485,"ip_address":"","comment_id":16990,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"老师 前端架构的话该怎么做呢","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420999,"discussion_content":"前端主要复杂度是可扩展，目前基本上依赖框架和前后端分离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532424485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15241,"user_name":"sherry","can_delete":false,"product_type":"c1","uid":1120604,"ip_address":"","ucode":"B065118C5A7820","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/5c/04912a35.jpg","comment_is_top":false,"comment_ctime":1531029230,"is_pvip":false,"replies":[{"id":5192,"content":"这算是学了一个技术，顺便领悟了一个道理么😂👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531121531,"ip_address":"","comment_id":15241,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"生活的每天就像当架构师的每一天，架构要根据业务解决复杂性，生活要根据现实解决复杂度。架构要根据业务的实际需求，人员的技术水平，企业的运营成本做出取舍。生活也要根据自己的目标，能力做出最终的取舍。","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420300,"discussion_content":"这算是学了一个技术，顺便领悟了一个道理么😂👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531121531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558526,"discussion_content":"+1 前面的评论中也说了，每个人都是架构师，想想每一天生活就知道了～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648368115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9376,"user_name":"Geek_817974","can_delete":false,"product_type":"c1","uid":1122417,"ip_address":"","ucode":"19FB4BA8DE19E3","user_header":"","comment_is_top":false,"comment_ctime":1526829344,"is_pvip":false,"replies":[{"id":2834,"content":"等有钱了再买更好的，这就是演化原则😂😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526873308,"ip_address":"","comment_id":9376,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"感觉架构就像我们追求买东西的性价比一样，我们只有这么多钱，想买一个既能满足我们的功能需求，又能在其他方面（比如东西比较好看，比较轻便，比较舒适）更好的","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418049,"discussion_content":"等有钱了再买更好的，这就是演化原则😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526873308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7297,"user_name":"fish007","can_delete":false,"product_type":"c1","uid":1104203,"ip_address":"","ucode":"A3625A49573826","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/4b/013e19b7.jpg","comment_is_top":false,"comment_ctime":1525390800,"is_pvip":false,"replies":[{"id":2118,"content":"我理解整个系统的复杂度可能有两种：每个医院管理系统都要对接，报表复杂。\n因此你没必要用go开发，用java足够了，BI@report如果你们已经用了那就用。\n\n整体来看这不是微服务设计。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525478500,"ip_address":"","comment_id":7297,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"请教老师，可以以最简单的报表系统为例讲解吗?一张表，比如结核病报告情况，数据来源于各个医院管理系统，然后对该表进行数据分析，发病率、地区分布、趋势预测、报告情况...。结核病分析系统是整个业务管理系统的子系统，其它还有乙肝、布病、慢病...，数据都是从各个医院管理系统通过数据接口采集需要的专病信息。仅考虑设计一个结核病管理系统，之前的想法是：GO语言做前端WEB访问页，用于用户登录、窗口展示、数据报送或采集数据浏览，主要考虑到GO简单易上手。数据分析比较复杂，所以申请了BI@repoort试用，是报表系统经常使用的分析平台，JAVA开发，可集成在系统中。然后分别打包在容器里，部署在华为云上。请教老师，这可以算是基于微服务的设计吗？可行吗😊?如果不可行，能讲解一个可实践的架构方案吗😊?非常感谢！","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417301,"discussion_content":"我理解整个系统的复杂度可能有两种：每个医院管理系统都要对接，报表复杂。\n因此你没必要用go开发，用java足够了，BI@report如果你们已经用了那就用。\n\n整体来看这不是微服务设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525478500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7226,"user_name":"三军","can_delete":false,"product_type":"c1","uid":1115689,"ip_address":"","ucode":"C1BCA262D7DE6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/06/29/bf619df8.jpg","comment_is_top":false,"comment_ctime":1525345475,"is_pvip":false,"replies":[{"id":2058,"content":"看把你乐的，我看的都很开心😃😃\n抢课的话，瞬间高并发就是复杂性所在，和12306类似，但我理解其实还是你们的系统没做好，因为某个课程抢的人不会是全校都在抢吧？和年级，专业相关，这样算下来，并发也不会高，你认真分析一下，也许真的加个缓存就够了。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525348547,"ip_address":"","comment_id":7226,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"哈哈，我们刚好有一个学校的项目还没开发，读到这篇文章很有感觉。\n学校情况就是2万人左右，教务系统每当抢课必定宕机。\n记得有次面试，在这个项目上写了从高并发高性能方面考虑，然而问起什么都不会说😊。\n架构设计:\n登录方面:基于学校教务系统的代理登录，哈哈，我在想，可以做个缓存系统来避免高峰期的页面缓慢问题。\n\n学生信息方面:就如作者所说，做好储存系统的方案，主机房有主、从备份，还有备机房。\n\n功能方面比较少。\n\n哈哈哈哈","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417285,"discussion_content":"看把你乐的，我看的都很开心😃😃\n抢课的话，瞬间高并发就是复杂性所在，和12306类似，但我理解其实还是你们的系统没做好，因为某个课程抢的人不会是全校都在抢吧？和年级，专业相关，这样算下来，并发也不会高，你认真分析一下，也许真的加个缓存就够了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525348547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7216,"user_name":"蓝色理想","can_delete":false,"product_type":"c1","uid":1015043,"ip_address":"","ucode":"43C8D83DC19A17","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/03/4e71c307.jpg","comment_is_top":false,"comment_ctime":1525343285,"is_pvip":false,"replies":[{"id":2059,"content":"说出你的想法，互相交流","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349158,"ip_address":"","comment_id":7216,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"所有 的软件设计方法 论都可以归 结为降低复杂度&#47;囧…","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417281,"discussion_content":"说出你的想法，互相交流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7124,"user_name":"刘杨","can_delete":false,"product_type":"c1","uid":1088931,"ip_address":"","ucode":"9EA64E1BAF3BD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/a3/827e8d49.jpg","comment_is_top":false,"comment_ctime":1525306267,"is_pvip":false,"replies":[{"id":2023,"content":"你可以思考一下，你们系统现在面临的主要复杂度问题是什么？\n从你的描述来看，复杂性主要体现在可扩展性方面，而可扩展性是架构设计的主张复杂性来源之一，因此你们可以开始架构重构。\n可扩展性具体怎么做，后面的章节会详细阐述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312151,"ip_address":"","comment_id":7124,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师您好，项目在什么时候开始考虑架构的事情。目前我们的产品日活在6万左右，我们现在使用的是单体架构。但是有很多子项目，目前团队有14个人，因为项目起步设计不好关联性很强，经常会出现修改某点影响其他功能，同时现在产品还没有定型经常会对一些已有功能进行重构","like_count":2},{"had_liked":false,"id":7112,"user_name":"ncicheng","can_delete":false,"product_type":"c1","uid":1061450,"ip_address":"","ucode":"A22815C4E3712C","user_header":"https://static001.geekbang.org/account/avatar/00/10/32/4a/2dc9cfde.jpg","comment_is_top":false,"comment_ctime":1525303905,"is_pvip":false,"replies":[{"id":2026,"content":"这……还是先拿到项目单吧，毕竟业务第一呀，你把它理解为是架构设计中的合规要求，只能遵守，不能取舍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312637,"ip_address":"","comment_id":7112,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"目前云计算、docker技术流行，各种投标的或规划类项目都得上这个，否则技术方案就不行，没有新意，就拿不到项目。请问李老师，这个怎么破？军工行业~谢谢","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417243,"discussion_content":"你可以思考一下，你们系统现在面临的主要复杂度问题是什么？\n从你的描述来看，复杂性主要体现在可扩展性方面，而可扩展性是架构设计的主张复杂性来源之一，因此你们可以开始架构重构。\n可扩展性具体怎么做，后面的章节会详细阐述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525312151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361624,"user_name":"cck","can_delete":false,"product_type":"c1","uid":1118086,"ip_address":"广东","ucode":"A25A0B6F97791A","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/86/ee6b0935.jpg","comment_is_top":false,"comment_ctime":1667716458,"is_pvip":false,"replies":[{"id":131532,"content":"反正就是不管业务不管团队，上来就是业界或者大厂的一堆架构名词，什么中台啊，异地多活啊，实时计算啊……确实很多老板被忽悠得云里雾里 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1667742891,"ip_address":"广东","comment_id":361624,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"之前遇到一个架构师，一堆概念名词，忽悠老板一愣一愣的","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417238,"discussion_content":"这……还是先拿到项目单吧，毕竟业务第一呀，你把它理解为是架构设计中的合规要求，只能遵守，不能取舍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525312637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354308,"user_name":"云胡不喜","can_delete":false,"product_type":"c1","uid":1103375,"ip_address":"广东","ucode":"270536BC7ECC71","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/0f/200907dd.jpg","comment_is_top":false,"comment_ctime":1660274989,"is_pvip":false,"replies":[{"id":128892,"content":"DDD是用来解决可扩展的复杂度的一种分析和设计方法，适应于复杂业务，例如电商、金融、物流、医药等领域，而直播、IM、社交这些领域业务比较简单，用DDD收益不大","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1660312392,"ip_address":"广东","comment_id":354308,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师，最近在看DDD，这种基于领域建模系统分析步骤，和您提出来的基于复杂度分析建立系统架构，怎么结合才更合理些呢？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583720,"discussion_content":"DDD是用来解决可扩展的复杂度的一种分析和设计方法，适应于复杂业务，例如电商、金融、物流、医药等领域，而直播、IM、社交这些领域业务比较简单，用DDD收益不大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660312392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333791,"user_name":"简单猫","can_delete":false,"product_type":"c1","uid":1866485,"ip_address":"","ucode":"EA027D4C344E25","user_header":"https://static001.geekbang.org/account/avatar/00/1c/7a/f5/54a5084b.jpg","comment_is_top":false,"comment_ctime":1644539916,"is_pvip":false,"replies":[{"id":121947,"content":"很到位的理解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1644566753,"ip_address":"","comment_id":333791,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"不要盲目崇拜重新架构\n个人理解\n架构是随着业务扩张来的\n难道淘宝一上线就是亿级别并发了？恐怕不是\n任何架构都是适应当前业务 并 对未来业务留下一定扩展空间的\n一个简单的架构 就一台服务器 也是够了 反而调试简单 也容易发现问题 恢复备份也容易\n\n当业务发生了升级 才会去考虑吞吐 数据安全性要求太高了 才会去考虑 主从备份 \n并发多了才会考虑 队列 分布式\n某些业务方法经常被其他业务重复实现\n考虑api化， rpc调用\n业务接口调用量级起来了 考虑负载均衡\n\n没有业务需求的架构都是给自己找麻烦\n当然你练手除外","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550487,"discussion_content":"很到位的理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644566754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282787,"user_name":"惊蛰","can_delete":false,"product_type":"c1","uid":2026393,"ip_address":"","ucode":"74CEB9E14E307F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/eb/99/a53faf7a.jpg","comment_is_top":false,"comment_ctime":1615420488,"is_pvip":false,"replies":[{"id":102639,"content":"“未来”和“合理”这两个词，导致了非常多的争吵，也导致了非常多的过度设计、无用设计。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1615426870,"ip_address":"","comment_id":282787,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"根据业务需要，业务特点，针对性的做架构设计，设计的同时要考虑未来合理的扩展性，运维的便利性","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516838,"discussion_content":"“未来”和“合理”这两个词，导致了非常多的争吵，也导致了非常多的过度设计、无用设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615426870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269544,"user_name":"Peter Yu","can_delete":false,"product_type":"c1","uid":1077598,"ip_address":"","ucode":"D56786A6E85321","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/5e/5393a76d.jpg","comment_is_top":false,"comment_ctime":1608698381,"is_pvip":false,"replies":[{"id":97807,"content":"这是架构设计的核心理念，时刻牢记","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1608773861,"ip_address":"","comment_id":269544,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"心得：架构的目的在于解决系统的复杂性。对于与具体项目而言，我们要分析该项目面临的主要复杂性，并加以设计。而不能贪全，做到投入产出最优化。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512317,"discussion_content":"这是架构设计的核心理念，时刻牢记","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608773861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245508,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1598962815,"is_pvip":true,"replies":[{"id":90339,"content":"架构师也可以编码，或者架构师支撑多个团队，所以一般小团队小公司不要设置架构师职位，不然就会出现你说的情况","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1599014823,"ip_address":"","comment_id":245508,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"架构设计有各种误区，但如果是甲方爸爸要求，那么必须得认真做一份高大上的架构设计，各种新技术、新名词一个也不能少。\n\n在体制内接触过的一些项目，感觉是连需求都没有搞清楚，就盲目的迎合不懂技术的领导和喜好“高大上”的专家。\n\n@代码荣耀 在留言里面说，需求驱动架构，这个说的真好。\n\n另外看到老师在回复中说，一个架构师可以支撑一个 20 人以上的开发团队。那么反过来，如果开发团队人数比较少，那么架构师的存在感应该就不那么强，一般可能由技术 leader 或者项目经理兼任。\n\n有一点好奇，架构师完成了架构设计之后，开发团队按图索骥，这个时候架构师做什么呢？应用还没有发布，也谈不上需求变更和流量增大。\n\n另外，在敏捷团队中，是否架构师的存在感更少？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512317,"discussion_content":"这是架构设计的核心理念，时刻牢记","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608773861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243801,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598279243,"is_pvip":true,"replies":[{"id":90071,"content":"并不是每次都追求高性能的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1598686602,"ip_address":"","comment_id":243801,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"架构设计 一开始都追求性能，后面是高可靠。对于开发人员来说，简单方便高效开发这一块的考虑似乎少了。比如同步模式的协程和异步的选择，rpc框架和服务发现路由，日志，调用链监控等非功能性需求的非侵入式接入。架构设计首先要能实现业务需求，再就是要方便开发，最后要方便运维。 ","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504400,"discussion_content":"并不是每次都追求高性能的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598686602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301873,"discussion_content":"有道理，我误解了😹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598691339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243794,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598278514,"is_pvip":true,"replies":[{"id":90073,"content":"有热备还要啥冷备？定期备份数据库不算冷备，只是常规的备份","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1598686658,"ip_address":"","comment_id":243794,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"学生管理系统，老师只说了热备这一块，我觉得更关键的是冷备。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504398,"discussion_content":"有热备还要啥冷备？定期备份数据库不算冷备，只是常规的备份","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598686658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301870,"discussion_content":"热备不能排除冷备吧？冷备可以应对新程序bug导致的数据错误，运维误操作导致数据丢失吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598691200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7124,"user_name":"刘杨","can_delete":false,"product_type":"c1","uid":1088931,"ip_address":"","ucode":"9EA64E1BAF3BD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/a3/827e8d49.jpg","comment_is_top":false,"comment_ctime":1525306267,"is_pvip":false,"replies":[{"id":2023,"content":"你可以思考一下，你们系统现在面临的主要复杂度问题是什么？\n从你的描述来看，复杂性主要体现在可扩展性方面，而可扩展性是架构设计的主张复杂性来源之一，因此你们可以开始架构重构。\n可扩展性具体怎么做，后面的章节会详细阐述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312151,"ip_address":"","comment_id":7124,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师您好，项目在什么时候开始考虑架构的事情。目前我们的产品日活在6万左右，我们现在使用的是单体架构。但是有很多子项目，目前团队有14个人，因为项目起步设计不好关联性很强，经常会出现修改某点影响其他功能，同时现在产品还没有定型经常会对一些已有功能进行重构","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417243,"discussion_content":"你可以思考一下，你们系统现在面临的主要复杂度问题是什么？\n从你的描述来看，复杂性主要体现在可扩展性方面，而可扩展性是架构设计的主张复杂性来源之一，因此你们可以开始架构重构。\n可扩展性具体怎么做，后面的章节会详细阐述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525312151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7112,"user_name":"ncicheng","can_delete":false,"product_type":"c1","uid":1061450,"ip_address":"","ucode":"A22815C4E3712C","user_header":"https://static001.geekbang.org/account/avatar/00/10/32/4a/2dc9cfde.jpg","comment_is_top":false,"comment_ctime":1525303905,"is_pvip":false,"replies":[{"id":2026,"content":"这……还是先拿到项目单吧，毕竟业务第一呀，你把它理解为是架构设计中的合规要求，只能遵守，不能取舍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312637,"ip_address":"","comment_id":7112,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"目前云计算、docker技术流行，各种投标的或规划类项目都得上这个，否则技术方案就不行，没有新意，就拿不到项目。请问李老师，这个怎么破？军工行业~谢谢","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417238,"discussion_content":"这……还是先拿到项目单吧，毕竟业务第一呀，你把它理解为是架构设计中的合规要求，只能遵守，不能取舍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525312637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361624,"user_name":"cck","can_delete":false,"product_type":"c1","uid":1118086,"ip_address":"广东","ucode":"A25A0B6F97791A","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/86/ee6b0935.jpg","comment_is_top":false,"comment_ctime":1667716458,"is_pvip":false,"replies":[{"id":131532,"content":"反正就是不管业务不管团队，上来就是业界或者大厂的一堆架构名词，什么中台啊，异地多活啊，实时计算啊……确实很多老板被忽悠得云里雾里 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1667742891,"ip_address":"广东","comment_id":361624,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"之前遇到一个架构师，一堆概念名词，忽悠老板一愣一愣的","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592823,"discussion_content":"反正就是不管业务不管团队，上来就是业界或者大厂的一堆架构名词，什么中台啊，异地多活啊，实时计算啊……确实很多老板被忽悠得云里雾里 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667742891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054154,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/ca/bf3fb655.jpg","nickname":"Lee","note":"","ucode":"E9385622CA7ACB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651584,"discussion_content":"老板：为了防忽悠，还是先报个华仔的课学一学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727103083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354308,"user_name":"云胡不喜","can_delete":false,"product_type":"c1","uid":1103375,"ip_address":"广东","ucode":"270536BC7ECC71","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/0f/200907dd.jpg","comment_is_top":false,"comment_ctime":1660274989,"is_pvip":false,"replies":[{"id":128892,"content":"DDD是用来解决可扩展的复杂度的一种分析和设计方法，适应于复杂业务，例如电商、金融、物流、医药等领域，而直播、IM、社交这些领域业务比较简单，用DDD收益不大","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1660312392,"ip_address":"广东","comment_id":354308,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"老师，最近在看DDD，这种基于领域建模系统分析步骤，和您提出来的基于复杂度分析建立系统架构，怎么结合才更合理些呢？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592823,"discussion_content":"反正就是不管业务不管团队，上来就是业界或者大厂的一堆架构名词，什么中台啊，异地多活啊，实时计算啊……确实很多老板被忽悠得云里雾里 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667742891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054154,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/ca/bf3fb655.jpg","nickname":"Lee","note":"","ucode":"E9385622CA7ACB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651584,"discussion_content":"老板：为了防忽悠，还是先报个华仔的课学一学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727103083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333791,"user_name":"简单猫","can_delete":false,"product_type":"c1","uid":1866485,"ip_address":"","ucode":"EA027D4C344E25","user_header":"https://static001.geekbang.org/account/avatar/00/1c/7a/f5/54a5084b.jpg","comment_is_top":false,"comment_ctime":1644539916,"is_pvip":false,"replies":[{"id":121947,"content":"很到位的理解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1644566753,"ip_address":"","comment_id":333791,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"不要盲目崇拜重新架构\n个人理解\n架构是随着业务扩张来的\n难道淘宝一上线就是亿级别并发了？恐怕不是\n任何架构都是适应当前业务 并 对未来业务留下一定扩展空间的\n一个简单的架构 就一台服务器 也是够了 反而调试简单 也容易发现问题 恢复备份也容易\n\n当业务发生了升级 才会去考虑吞吐 数据安全性要求太高了 才会去考虑 主从备份 \n并发多了才会考虑 队列 分布式\n某些业务方法经常被其他业务重复实现\n考虑api化， rpc调用\n业务接口调用量级起来了 考虑负载均衡\n\n没有业务需求的架构都是给自己找麻烦\n当然你练手除外","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583720,"discussion_content":"DDD是用来解决可扩展的复杂度的一种分析和设计方法，适应于复杂业务，例如电商、金融、物流、医药等领域，而直播、IM、社交这些领域业务比较简单，用DDD收益不大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660312392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282787,"user_name":"惊蛰","can_delete":false,"product_type":"c1","uid":2026393,"ip_address":"","ucode":"74CEB9E14E307F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/eb/99/a53faf7a.jpg","comment_is_top":false,"comment_ctime":1615420488,"is_pvip":false,"replies":[{"id":102639,"content":"“未来”和“合理”这两个词，导致了非常多的争吵，也导致了非常多的过度设计、无用设计。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1615426870,"ip_address":"","comment_id":282787,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"根据业务需要，业务特点，针对性的做架构设计，设计的同时要考虑未来合理的扩展性，运维的便利性","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550487,"discussion_content":"很到位的理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644566754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269544,"user_name":"Peter Yu","can_delete":false,"product_type":"c1","uid":1077598,"ip_address":"","ucode":"D56786A6E85321","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/5e/5393a76d.jpg","comment_is_top":false,"comment_ctime":1608698381,"is_pvip":false,"replies":[{"id":97807,"content":"这是架构设计的核心理念，时刻牢记","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1608773861,"ip_address":"","comment_id":269544,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"心得：架构的目的在于解决系统的复杂性。对于与具体项目而言，我们要分析该项目面临的主要复杂性，并加以设计。而不能贪全，做到投入产出最优化。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516838,"discussion_content":"“未来”和“合理”这两个词，导致了非常多的争吵，也导致了非常多的过度设计、无用设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615426870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245508,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1598962815,"is_pvip":true,"replies":[{"id":90339,"content":"架构师也可以编码，或者架构师支撑多个团队，所以一般小团队小公司不要设置架构师职位，不然就会出现你说的情况","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1599014823,"ip_address":"","comment_id":245508,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"架构设计有各种误区，但如果是甲方爸爸要求，那么必须得认真做一份高大上的架构设计，各种新技术、新名词一个也不能少。\n\n在体制内接触过的一些项目，感觉是连需求都没有搞清楚，就盲目的迎合不懂技术的领导和喜好“高大上”的专家。\n\n@代码荣耀 在留言里面说，需求驱动架构，这个说的真好。\n\n另外看到老师在回复中说，一个架构师可以支撑一个 20 人以上的开发团队。那么反过来，如果开发团队人数比较少，那么架构师的存在感应该就不那么强，一般可能由技术 leader 或者项目经理兼任。\n\n有一点好奇，架构师完成了架构设计之后，开发团队按图索骥，这个时候架构师做什么呢？应用还没有发布，也谈不上需求变更和流量增大。\n\n另外，在敏捷团队中，是否架构师的存在感更少？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504905,"discussion_content":"架构师也可以编码，或者架构师支撑多个团队，所以一般小团队小公司不要设置架构师职位，不然就会出现你说的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599014823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243801,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598279243,"is_pvip":true,"replies":[{"id":90071,"content":"并不是每次都追求高性能的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1598686602,"ip_address":"","comment_id":243801,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"架构设计 一开始都追求性能，后面是高可靠。对于开发人员来说，简单方便高效开发这一块的考虑似乎少了。比如同步模式的协程和异步的选择，rpc框架和服务发现路由，日志，调用链监控等非功能性需求的非侵入式接入。架构设计首先要能实现业务需求，再就是要方便开发，最后要方便运维。 ","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504905,"discussion_content":"架构师也可以编码，或者架构师支撑多个团队，所以一般小团队小公司不要设置架构师职位，不然就会出现你说的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599014823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243794,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598278514,"is_pvip":true,"replies":[{"id":90073,"content":"有热备还要啥冷备？定期备份数据库不算冷备，只是常规的备份","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1598686658,"ip_address":"","comment_id":243794,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"学生管理系统，老师只说了热备这一块，我觉得更关键的是冷备。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504400,"discussion_content":"并不是每次都追求高性能的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598686602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301873,"discussion_content":"有道理，我误解了😹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598691339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241460,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1447283,"ip_address":"","ucode":"708042A35424DC","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/73/e5e4b245.jpg","comment_is_top":false,"comment_ctime":1597300826,"is_pvip":false,"replies":[{"id":89619,"content":"非常好的案例分析������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1597984100,"ip_address":"","comment_id":241460,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"不管自己的答案是否正确，不进行一定输出，学习的效果是达不到的，无论如何，自己也得动手写写。\n团队服务的是电商系统，从业务模块的角度划分，大概分为商品、订单、支付、物流、评价等等模块，整个电商系统随着市场变化，期间做过调整，由最初的分期电商转型为社交电商。\n性能：实际上系统的访问量并不大，到目前为止，注册人数大约是50万人次，每天的访问量并不大，大约一天能够有7千左右的访问量，性能的瓶颈主要在于商品和订单相关操作上，例如搜索、展示、活动等等。为了提升用户体验，提高访问性能，搜索使用了elasticsearch组件提升模糊和精确搜索效率，对于首页等等活动页面数据信息，则直接使用redis进行数据缓存，避免频繁访问数据库，存储格式采用常用的JSON。对于电商而言，图片是一个非常重要的资源，公司购买了阿里服务，因此直接使用阿里云oss服务。\n可扩展性：电商业务变化快，需求不断更新和优化，对于扩展性要求比较高，故而团队进行业务拆分，微服务化，把与商品相关的业务拆分出来，集成于特定商品子系统中，其他系统相互访问调用，由于是内部系统，互相之间访问快。\n高可用：由于访问量不是很大，整体业务量并没有上升更高量级，故使用三台机器作为载体，并使用阿里LSD进行负载均衡，基本保证了整套系统的高可用\n成本：整体业务量还不够大，机器成本相对较低，整个系统机器数量为6台。当然，在购买阿里服务的过程中，费用也会随着业务量往上增加\n最后，想说的是，对于创业团队而言，阿里服务能够快速提供可靠稳定的服务，还是不错的，并且，能够提供许多功能，让创业团队更加专注于主要业务，保证功能快速上线。\n但是，技术人员不能太过于依赖于阿里服务，要不断学习，毕竟一旦业务量大了之后，使用阿里服务的费用就不如自己构建的服务器要节省成本。并且，自主研发这才是一个团队实力提高的良好路径","like_count":1},{"had_liked":false,"id":207078,"user_name":"李乐平","can_delete":false,"product_type":"c1","uid":1245320,"ip_address":"","ucode":"BC716FBDA2C6B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/00/88/5b9847bb.jpg","comment_is_top":false,"comment_ctime":1587003214,"is_pvip":false,"replies":[{"id":77525,"content":"挺合理的架构设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1587115060,"ip_address":"","comment_id":207078,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"我们目前的B2B电商平台架构，采用的微服务架构，针对一些核心服务进行架构设计\n订单系统\n1.高性能：每天大约10w左右订单，由于下单比较集中，一般早上10~11，下午2~4点，赶上一些促销活动，高峰期TPS 3000,单台机器肯定扛不住，按每个服务实例扛400-500并发，加上一定冗余，我们部署有10个实例，进行负载均衡支撑高并发请求\n数据库压力，使用一些调配的16C32G的机器 ，主从架构+读写分享，对数据库的访问压力性能还可以承受；存放方面，每天10w订单，一个月除掉工作日大概有200w订单，单表数据量会急剧增加，存储压力是个问题；我们采用分库分表方案缓解单个数据库的存储压力。\n2.高可用 \n订单属于核心服务，必须要保证高可用的，多台实例之间必须要实现故障转移机制，通过微服务器架构的自负载均衡和重试机制实现故障自动转移；加及实例故障及时报警，人为干预定位排查并解决问题\n","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492002,"discussion_content":"挺合理的架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587115060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155437,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a1/6d/a4ff33bb.jpg","nickname":"Lee","note":"","ucode":"0FF1C4EAF7F98A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538579,"discussion_content":"请教一下你们分库分表但是遇到聚合查询的业务  分库分表肯定是存在性能问题，你们怎么处理的  谢谢（用NOSQL做聚合存储，聚合查询从NOSQL查询？但是实时性和延迟怎么权衡）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639449782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127289,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566636654,"is_pvip":false,"replies":[{"id":48302,"content":"可以用灰度发布验证","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1567153572,"ip_address":"","comment_id":127289,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":" 课前思考及问题\n1：架构设计的目的？\n根本目的就是钱，和社会主义建设改革开放一样。\n其次，比较直接应该是三高三易：\n三高——高可用、高性能、高并发\n三易——易理解、易维护、易扩展\n不过世间哪有十全十美之事，这些如果都想实现那是不可能的，因为有些要求就是相互矛盾彼消此涨的。三高极易增加复杂度，复杂度升高必然难以维护。\n\n课后思考及问题\n1：计划一整天学习二十五篇，看来是不可能的啦😄评论太多了，大部分还是优质评论，我感觉评论比正文都耗时间，感觉像买一赠一😀\n2：老师的结论——架构设计的主要目的是为了解决软件系统复杂度带来的问题。\n这个结论，令人耳目一新直指心扉，那问题来啦！\n2-1：软件系统的复杂度有哪些？\n我猜是难操作、难维护、样子丑、屁事多、跑的慢，好像一个失去法力的老巫婆。老师觉得哪？\n2-2：软件系统的复杂度是怎么产生的？\n三高极易带来复杂度，易扩展也极易引入复杂度，当然功能要逻辑复杂也是容易引入复杂度。老师觉得哪？\n2-3：假如能够直接降低软件系统的复杂度，那是否就直接减少了相关问题的数量及复杂度？\n如果能满足业务需要，我觉得是这样的。老师觉得哪？\n2-4：怎么定义或者识别软件系统的复杂度带来的问题？\n2-5：识别问题是解决问题的第一步，往往也是极其关键的一步，实际开发中感受更是如此，如果能定位到问题，则离解决问题也就不远了至少走完了一半的路程，那怎么定位问题呢？\n我们最近半年都在重构一个维护N年的系统，这个系统极其关键，电商核心业务之一，最初的目标是减轻业务人员的运维成本，尤其是大促或节假日时的运维成本。为此业务的运维界面设计的复杂度直线上升，另外追加了一些性能提升的目标，现在项目开发的差不多了，不过由于不允许出现业务问题，需要进行严格的验证，保证实现的业务逻辑不变，其实后台的实现逻辑根据运维界面的调整也做出了调整，导致验证工作极其困难。\n我认为提升性能这个目标不应加进去，另外运维界面做出了调整导致后端逻辑调整较大，怎么验证重构前后逻辑能完全匹配的事情，没有在最初想清楚，导致现在验证困难进度缓慢？如果是老师，这个问题该怎么思考才能做的更好呢？\n淘宝也应该有这种给飞驰的飞机换轮子的操作吧!怎么保证飞机正常飞行，且换上的新轮子也是合适的？\n","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464418,"discussion_content":"可以用灰度发布验证","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567153572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103010,"user_name":"wgg9696","can_delete":false,"product_type":"c1","uid":1402167,"ip_address":"","ucode":"B59488988122F2","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/37/abc7a5bf.jpg","comment_is_top":false,"comment_ctime":1560347743,"is_pvip":false,"replies":[{"id":37368,"content":"缘分呐😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1560411151,"ip_address":"","comment_id":103010,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"看到老师说自己的第一本书《面向对象葵花宝典》，顿觉熟悉，我电脑中calibre中还存储着这本书，时常翻看，没想到又“一不小心”买了您的课，真巧。\n我们公司的业务基于rfid标签和读写器，我们作为上位机和读写器进行交互，满足业务需求。\n高性能：一个上位机会对接200台读写器，每个读写器500ms会上传1000byte的数据，网络层socket连接使用netty提高性能和可靠性。\n按照一个读写器工作8小时，持续上传数据，每天一共会上传10g数据，这些数据需要存储，便于查询，可以考虑上大数据相关组件。\n\n可扩展：工厂业务扩展性不强，这块可以不考虑。\n\n高可用：这层不太会考虑了（汗颜）\n\n安全性：用户对读写器的配置参数需要做加存储。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453686,"discussion_content":"缘分呐😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560411151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71440,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1551343302,"is_pvip":false,"replies":[{"id":27904,"content":"思路不错","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1552624620,"ip_address":"","comment_id":71440,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"团队负责的是一个HCM的培训模块，核心功能是在导师和学员之间做推荐。业务的复杂度是在推荐算法和查询性能。目前是实时计算，性能是瓶颈，当用户在500人时，推荐结果需要数分钟才能展示。其中，加载人员信息的开销和UI渲染的开销最大。leader决定优化加载的信息量，甚至简化算法来降低性能开销，但我觉得是杯水车薪。如果我来做，会从以下入手：\n1. 缓存人员信息。因为人员信息的变更频率很低，且推荐计算过程对终端用户透明，可以容忍使用一定程度的旧数据做计算。可考虑Redis。\n2.缓存推荐结果。因为推荐结果有在多个场景间会被用到，缓存热点结果可降低性能开销。可考虑Redis，ES。\n3.增加反向代理。因为每次UI都要加载头像图片等大量静态数据，可将静态数据单独保存并通过反向代理来降低调用开销。首选Nginx。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441149,"discussion_content":"思路不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552624620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61235,"user_name":"李海涛","can_delete":false,"product_type":"c1","uid":1072401,"ip_address":"","ucode":"89170384B8A483","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/11/40b47496.jpg","comment_is_top":false,"comment_ctime":1547642717,"is_pvip":false,"replies":[{"id":21889,"content":"这个原则可以帮助架构师避免过度设计，或者乱设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1547774194,"ip_address":"","comment_id":61235,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"“架构设计是为了解决软件复杂度”这个原则来衡量，就很容易判断。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441149,"discussion_content":"思路不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552624620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31699,"user_name":"Dylan","can_delete":false,"product_type":"c1","uid":1040236,"ip_address":"","ucode":"58064D0C9F9F5F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","comment_is_top":false,"comment_ctime":1539266760,"is_pvip":false,"replies":[{"id":11570,"content":"方向对了，方法不对，创业开始不要大而全的架构，但也不是不要架构设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1539358090,"ip_address":"","comment_id":31699,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"想到之前的一个项目，公司刚起步准备推出一款图片社交应用，什么架构完全没时间去考虑一个所谓完美的方案，大家就是想着先上再说，后台就是简单的2台mongodb，kafka做消息队列，redis做缓存～直到A轮之后才去慢慢完善整个的架构，毕竟用户访问大了，要确保不宕机，app体验流畅～～现在想想当时真的是随意～～","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436797,"discussion_content":"这个原则可以帮助架构师避免过度设计，或者乱设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547774194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28549,"user_name":"微风","can_delete":false,"product_type":"c1","uid":1256016,"ip_address":"","ucode":"E55A2764ECFE88","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/50/ec923346.jpg","comment_is_top":false,"comment_ctime":1538101835,"is_pvip":false,"replies":[{"id":10260,"content":"是的，分析出复杂度说在是主要业务经验的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538103823,"ip_address":"","comment_id":28549,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"找到复杂度的过程就是对需求和业务场景的梳理过程。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425304,"discussion_content":"是的，分析出复杂度说在是主要业务经验的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538103823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19800,"user_name":"oscarwin","can_delete":false,"product_type":"c1","uid":1131956,"ip_address":"","ucode":"492430BA342593","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b4/ec66d499.jpg","comment_is_top":false,"comment_ctime":1534077592,"is_pvip":false,"replies":[{"id":6911,"content":"你的导师不错👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534126194,"ip_address":"","comment_id":19800,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"架构的目标是用最尽可能简单的方法实现复杂的业务，而不是为了本末倒置，想让自己设计的架构无所不能，最后成了超级巨无霸，而实际的业务并不需要。也让我回想起公司业务中，需要给商家后台管理系统添加一个接口，一开始我想用redis 但是导师说直接用db就能搞定，因为管理后台是给运营用的，并没有很高的请求量","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421988,"discussion_content":"你的导师不错👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534126194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16434,"user_name":"走神儿","can_delete":false,"product_type":"c1","uid":1182797,"ip_address":"","ucode":"3C9B29B646FEC8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/4d/d185f942.jpg","comment_is_top":false,"comment_ctime":1531960717,"is_pvip":false,"replies":[{"id":5696,"content":"架构设计的目的不是为了“防范”后期变化，而是要适当预测然后准备","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531965574,"ip_address":"","comment_id":16434,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"变化是绝对的，唯一不变的是变化本身，架构设计的目的在于防范后期变化，这本身含有行业经验的内容，也有前人通用经验的总结。像上期所说没有银弹，合适的就是最好的。同样如前所说，变化是一定的，适应变化是架构演进的原动力","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421988,"discussion_content":"你的导师不错👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534126194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241460,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1447283,"ip_address":"","ucode":"708042A35424DC","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/73/e5e4b245.jpg","comment_is_top":false,"comment_ctime":1597300826,"is_pvip":false,"replies":[{"id":89619,"content":"非常好的案例分析������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1597984100,"ip_address":"","comment_id":241460,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"不管自己的答案是否正确，不进行一定输出，学习的效果是达不到的，无论如何，自己也得动手写写。\n团队服务的是电商系统，从业务模块的角度划分，大概分为商品、订单、支付、物流、评价等等模块，整个电商系统随着市场变化，期间做过调整，由最初的分期电商转型为社交电商。\n性能：实际上系统的访问量并不大，到目前为止，注册人数大约是50万人次，每天的访问量并不大，大约一天能够有7千左右的访问量，性能的瓶颈主要在于商品和订单相关操作上，例如搜索、展示、活动等等。为了提升用户体验，提高访问性能，搜索使用了elasticsearch组件提升模糊和精确搜索效率，对于首页等等活动页面数据信息，则直接使用redis进行数据缓存，避免频繁访问数据库，存储格式采用常用的JSON。对于电商而言，图片是一个非常重要的资源，公司购买了阿里服务，因此直接使用阿里云oss服务。\n可扩展性：电商业务变化快，需求不断更新和优化，对于扩展性要求比较高，故而团队进行业务拆分，微服务化，把与商品相关的业务拆分出来，集成于特定商品子系统中，其他系统相互访问调用，由于是内部系统，互相之间访问快。\n高可用：由于访问量不是很大，整体业务量并没有上升更高量级，故使用三台机器作为载体，并使用阿里LSD进行负载均衡，基本保证了整套系统的高可用\n成本：整体业务量还不够大，机器成本相对较低，整个系统机器数量为6台。当然，在购买阿里服务的过程中，费用也会随着业务量往上增加\n最后，想说的是，对于创业团队而言，阿里服务能够快速提供可靠稳定的服务，还是不错的，并且，能够提供许多功能，让创业团队更加专注于主要业务，保证功能快速上线。\n但是，技术人员不能太过于依赖于阿里服务，要不断学习，毕竟一旦业务量大了之后，使用阿里服务的费用就不如自己构建的服务器要节省成本。并且，自主研发这才是一个团队实力提高的良好路径","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503744,"discussion_content":"非常好的案例分析������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597984100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207078,"user_name":"李乐平","can_delete":false,"product_type":"c1","uid":1245320,"ip_address":"","ucode":"BC716FBDA2C6B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/00/88/5b9847bb.jpg","comment_is_top":false,"comment_ctime":1587003214,"is_pvip":false,"replies":[{"id":77525,"content":"挺合理的架构设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1587115060,"ip_address":"","comment_id":207078,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"我们目前的B2B电商平台架构，采用的微服务架构，针对一些核心服务进行架构设计\n订单系统\n1.高性能：每天大约10w左右订单，由于下单比较集中，一般早上10~11，下午2~4点，赶上一些促销活动，高峰期TPS 3000,单台机器肯定扛不住，按每个服务实例扛400-500并发，加上一定冗余，我们部署有10个实例，进行负载均衡支撑高并发请求\n数据库压力，使用一些调配的16C32G的机器 ，主从架构+读写分享，对数据库的访问压力性能还可以承受；存放方面，每天10w订单，一个月除掉工作日大概有200w订单，单表数据量会急剧增加，存储压力是个问题；我们采用分库分表方案缓解单个数据库的存储压力。\n2.高可用 \n订单属于核心服务，必须要保证高可用的，多台实例之间必须要实现故障转移机制，通过微服务器架构的自负载均衡和重试机制实现故障自动转移；加及实例故障及时报警，人为干预定位排查并解决问题\n","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503744,"discussion_content":"非常好的案例分析������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597984100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127289,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566636654,"is_pvip":false,"replies":[{"id":48302,"content":"可以用灰度发布验证","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1567153572,"ip_address":"","comment_id":127289,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":" 课前思考及问题\n1：架构设计的目的？\n根本目的就是钱，和社会主义建设改革开放一样。\n其次，比较直接应该是三高三易：\n三高——高可用、高性能、高并发\n三易——易理解、易维护、易扩展\n不过世间哪有十全十美之事，这些如果都想实现那是不可能的，因为有些要求就是相互矛盾彼消此涨的。三高极易增加复杂度，复杂度升高必然难以维护。\n\n课后思考及问题\n1：计划一整天学习二十五篇，看来是不可能的啦😄评论太多了，大部分还是优质评论，我感觉评论比正文都耗时间，感觉像买一赠一😀\n2：老师的结论——架构设计的主要目的是为了解决软件系统复杂度带来的问题。\n这个结论，令人耳目一新直指心扉，那问题来啦！\n2-1：软件系统的复杂度有哪些？\n我猜是难操作、难维护、样子丑、屁事多、跑的慢，好像一个失去法力的老巫婆。老师觉得哪？\n2-2：软件系统的复杂度是怎么产生的？\n三高极易带来复杂度，易扩展也极易引入复杂度，当然功能要逻辑复杂也是容易引入复杂度。老师觉得哪？\n2-3：假如能够直接降低软件系统的复杂度，那是否就直接减少了相关问题的数量及复杂度？\n如果能满足业务需要，我觉得是这样的。老师觉得哪？\n2-4：怎么定义或者识别软件系统的复杂度带来的问题？\n2-5：识别问题是解决问题的第一步，往往也是极其关键的一步，实际开发中感受更是如此，如果能定位到问题，则离解决问题也就不远了至少走完了一半的路程，那怎么定位问题呢？\n我们最近半年都在重构一个维护N年的系统，这个系统极其关键，电商核心业务之一，最初的目标是减轻业务人员的运维成本，尤其是大促或节假日时的运维成本。为此业务的运维界面设计的复杂度直线上升，另外追加了一些性能提升的目标，现在项目开发的差不多了，不过由于不允许出现业务问题，需要进行严格的验证，保证实现的业务逻辑不变，其实后台的实现逻辑根据运维界面的调整也做出了调整，导致验证工作极其困难。\n我认为提升性能这个目标不应加进去，另外运维界面做出了调整导致后端逻辑调整较大，怎么验证重构前后逻辑能完全匹配的事情，没有在最初想清楚，导致现在验证困难进度缓慢？如果是老师，这个问题该怎么思考才能做的更好呢？\n淘宝也应该有这种给飞驰的飞机换轮子的操作吧!怎么保证飞机正常飞行，且换上的新轮子也是合适的？\n","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492002,"discussion_content":"挺合理的架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587115060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155437,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a1/6d/a4ff33bb.jpg","nickname":"Lee","note":"","ucode":"0FF1C4EAF7F98A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538579,"discussion_content":"请教一下你们分库分表但是遇到聚合查询的业务  分库分表肯定是存在性能问题，你们怎么处理的  谢谢（用NOSQL做聚合存储，聚合查询从NOSQL查询？但是实时性和延迟怎么权衡）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639449782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103010,"user_name":"wgg9696","can_delete":false,"product_type":"c1","uid":1402167,"ip_address":"","ucode":"B59488988122F2","user_header":"https://static001.geekbang.org/account/avatar/00/15/65/37/abc7a5bf.jpg","comment_is_top":false,"comment_ctime":1560347743,"is_pvip":false,"replies":[{"id":37368,"content":"缘分呐😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1560411151,"ip_address":"","comment_id":103010,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"看到老师说自己的第一本书《面向对象葵花宝典》，顿觉熟悉，我电脑中calibre中还存储着这本书，时常翻看，没想到又“一不小心”买了您的课，真巧。\n我们公司的业务基于rfid标签和读写器，我们作为上位机和读写器进行交互，满足业务需求。\n高性能：一个上位机会对接200台读写器，每个读写器500ms会上传1000byte的数据，网络层socket连接使用netty提高性能和可靠性。\n按照一个读写器工作8小时，持续上传数据，每天一共会上传10g数据，这些数据需要存储，便于查询，可以考虑上大数据相关组件。\n\n可扩展：工厂业务扩展性不强，这块可以不考虑。\n\n高可用：这层不太会考虑了（汗颜）\n\n安全性：用户对读写器的配置参数需要做加存储。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464418,"discussion_content":"可以用灰度发布验证","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567153572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71440,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1551343302,"is_pvip":false,"replies":[{"id":27904,"content":"思路不错","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1552624620,"ip_address":"","comment_id":71440,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"团队负责的是一个HCM的培训模块，核心功能是在导师和学员之间做推荐。业务的复杂度是在推荐算法和查询性能。目前是实时计算，性能是瓶颈，当用户在500人时，推荐结果需要数分钟才能展示。其中，加载人员信息的开销和UI渲染的开销最大。leader决定优化加载的信息量，甚至简化算法来降低性能开销，但我觉得是杯水车薪。如果我来做，会从以下入手：\n1. 缓存人员信息。因为人员信息的变更频率很低，且推荐计算过程对终端用户透明，可以容忍使用一定程度的旧数据做计算。可考虑Redis。\n2.缓存推荐结果。因为推荐结果有在多个场景间会被用到，缓存热点结果可降低性能开销。可考虑Redis，ES。\n3.增加反向代理。因为每次UI都要加载头像图片等大量静态数据，可将静态数据单独保存并通过反向代理来降低调用开销。首选Nginx。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453686,"discussion_content":"缘分呐😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560411151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61235,"user_name":"李海涛","can_delete":false,"product_type":"c1","uid":1072401,"ip_address":"","ucode":"89170384B8A483","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/11/40b47496.jpg","comment_is_top":false,"comment_ctime":1547642717,"is_pvip":false,"replies":[{"id":21889,"content":"这个原则可以帮助架构师避免过度设计，或者乱设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1547774194,"ip_address":"","comment_id":61235,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"“架构设计是为了解决软件复杂度”这个原则来衡量，就很容易判断。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436797,"discussion_content":"这个原则可以帮助架构师避免过度设计，或者乱设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547774194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31699,"user_name":"Dylan","can_delete":false,"product_type":"c1","uid":1040236,"ip_address":"","ucode":"58064D0C9F9F5F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","comment_is_top":false,"comment_ctime":1539266760,"is_pvip":false,"replies":[{"id":11570,"content":"方向对了，方法不对，创业开始不要大而全的架构，但也不是不要架构设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1539358090,"ip_address":"","comment_id":31699,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"想到之前的一个项目，公司刚起步准备推出一款图片社交应用，什么架构完全没时间去考虑一个所谓完美的方案，大家就是想着先上再说，后台就是简单的2台mongodb，kafka做消息队列，redis做缓存～直到A轮之后才去慢慢完善整个的架构，毕竟用户访问大了，要确保不宕机，app体验流畅～～现在想想当时真的是随意～～","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426468,"discussion_content":"方向对了，方法不对，创业开始不要大而全的架构，但也不是不要架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539358090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28549,"user_name":"微风","can_delete":false,"product_type":"c1","uid":1256016,"ip_address":"","ucode":"E55A2764ECFE88","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/50/ec923346.jpg","comment_is_top":false,"comment_ctime":1538101835,"is_pvip":false,"replies":[{"id":10260,"content":"是的，分析出复杂度说在是主要业务经验的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538103823,"ip_address":"","comment_id":28549,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"找到复杂度的过程就是对需求和业务场景的梳理过程。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426468,"discussion_content":"方向对了，方法不对，创业开始不要大而全的架构，但也不是不要架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539358090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19800,"user_name":"oscarwin","can_delete":false,"product_type":"c1","uid":1131956,"ip_address":"","ucode":"492430BA342593","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b4/ec66d499.jpg","comment_is_top":false,"comment_ctime":1534077592,"is_pvip":false,"replies":[{"id":6911,"content":"你的导师不错👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534126194,"ip_address":"","comment_id":19800,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"架构的目标是用最尽可能简单的方法实现复杂的业务，而不是为了本末倒置，想让自己设计的架构无所不能，最后成了超级巨无霸，而实际的业务并不需要。也让我回想起公司业务中，需要给商家后台管理系统添加一个接口，一开始我想用redis 但是导师说直接用db就能搞定，因为管理后台是给运营用的，并没有很高的请求量","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425304,"discussion_content":"是的，分析出复杂度说在是主要业务经验的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538103823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16434,"user_name":"走神儿","can_delete":false,"product_type":"c1","uid":1182797,"ip_address":"","ucode":"3C9B29B646FEC8","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/4d/d185f942.jpg","comment_is_top":false,"comment_ctime":1531960717,"is_pvip":false,"replies":[{"id":5696,"content":"架构设计的目的不是为了“防范”后期变化，而是要适当预测然后准备","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1531965574,"ip_address":"","comment_id":16434,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100006601,"comment_content":"变化是绝对的，唯一不变的是变化本身，架构设计的目的在于防范后期变化，这本身含有行业经验的内容，也有前人通用经验的总结。像上期所说没有银弹，合适的就是最好的。同样如前所说，变化是一定的，适应变化是架构演进的原动力","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420792,"discussion_content":"架构设计的目的不是为了“防范”后期变化，而是要适当预测然后准备","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531965574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11533,"user_name":"阿杜","can_delete":false,"product_type":"c1","uid":1066705,"ip_address":"","ucode":"349D3572F5ABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","comment_is_top":false,"comment_ctime":1528181292,"is_pvip":false,"replies":[{"id":3679,"content":"后面的架构设计原则就是讲这部分内容","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528184732,"ip_address":"","comment_id":11533,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"适合的才是最好的，系统处于不同的时期采用不同的架构，先简单后复杂，不断的迭代，不断的优化架构，选用更重要更适宜的技术，舍弃阻碍系统发展的技术，到了某个时期还要敢于重构，做当下更好的架构。","like_count":1},{"had_liked":false,"id":8206,"user_name":"yoummg","can_delete":false,"product_type":"c1","uid":1067856,"ip_address":"","ucode":"1B809CFDD7A508","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/50/fdecd51a.jpg","comment_is_top":false,"comment_ctime":1525967074,"is_pvip":false,"replies":[{"id":2407,"content":"中间件团队一般来说是一个公司里面技术水平高的团队","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526005215,"ip_address":"","comment_id":8206,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"我想问下老师，一个OTA公司，公共组承担的业务应该是什么样的？最初我是参考淘宝的Java中间件团队，总感觉自己的团队很low，听老师这堂课受益很大，所有的架构都是依托于业务，大而空的系统设计肯定不可取。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417629,"discussion_content":"中间件团队一般来说是一个公司里面技术水平高的团队","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526005215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7657,"user_name":"aaaaa","can_delete":false,"product_type":"c1","uid":1105686,"ip_address":"","ucode":"3D9FCF2482AF7E","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/16/be85a2b1.jpg","comment_is_top":false,"comment_ctime":1525611049,"is_pvip":false,"replies":[{"id":2221,"content":"几千台服务器已经是很复杂的系统了，主要的复杂度开源我会全部介绍一遍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525675017,"ip_address":"","comment_id":7657,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"看了文章和评论，我感觉要想搭架构需要很多第三方插件的知识。想问一下，复杂点是不是就是对项目的要求？一般对项目的要求是不是就是性能，扩展，可用，安全以及成本？\n比如我目前在弄的是公司的后台，框架是以前就弄好了的，我只是维护。用户除了公司内部人员就只有公司的一些客户，数据来源是日志以及一些线上的服务器，线上大概有几千台服务器，然后主要是有几台充值服。\n用的是mysql，客户主要关心线上服的注册登入和充值情况，而起要求查询必须快点响应，但是充值数据有几千页，而且同时要获取登入注册相关信息，这些信息的数据库也每个表也有几百页，如果响应慢了，客户会重新刷新页面，再次点击，会造成线程不足挂掉，所以上司把这些数据存到了缓存里，就能实现快速查出结果。\n由于充值数据数量大，所以在起服是不能一次性把它加载完，就需要将近一个小时，注册和创角也是一样的情况，所以就不能经常关闭维护。\n每个客户只能查询与自己平台相关的数据。\n这个项目的web容器是tomcat，数据库是\nmysql，数据源用定时器从其它服务器获取以及解析日志，感觉没啥东西了。\n那我这个项目的复杂点是不是就是性能和可用还有安全性三方面？架构有没有就不清楚了，如果有的话，感觉就是个星型拓扑图","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417434,"discussion_content":"几千台服务器已经是很复杂的系统了，主要的复杂度开源我会全部介绍一遍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525675017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7452,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1118559,"ip_address":"","ucode":"0BEC28E0772A39","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/5f/0d24dba2.jpg","comment_is_top":false,"comment_ctime":1525485448,"is_pvip":false,"replies":[{"id":2153,"content":"后面会回答这个问题","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525500685,"ip_address":"","comment_id":7452,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"做架构设计的时候，就是从高可用，高性能，高扩展三个维度，弄清楚项目要求，找到解决方案，还要在不同的方案中间，拿成本来衡量。可以这么理解么？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417348,"discussion_content":"后面会回答这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7211,"user_name":"刘杨","can_delete":false,"product_type":"c1","uid":1088931,"ip_address":"","ucode":"9EA64E1BAF3BD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/a3/827e8d49.jpg","comment_is_top":false,"comment_ctime":1525337404,"is_pvip":false,"replies":[{"id":2060,"content":"别急，后面更精彩","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349193,"ip_address":"","comment_id":7211,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"感谢老师的答复，但是对于架构的设计不知如何着手，期待老师后续的讲解非常感谢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417348,"discussion_content":"后面会回答这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7154,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1525310287,"is_pvip":false,"replies":[{"id":2014,"content":"复杂度的来源有很多类，后面会详细阐述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311358,"ip_address":"","comment_id":7154,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"架构解决软件复杂度，从性能，存储，高可用，安全脱敏方面从技术角度考虑没问题，但商用软件不得不考虑成本和交付这两个维度。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417279,"discussion_content":"别急，后面更精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395950,"user_name":"Anne","can_delete":false,"product_type":"c1","uid":1520249,"ip_address":"浙江","ucode":"A1E4C3BA1B8B8A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/hTeBRCiaXNpwMBiaI1MEkBB33aJBFzg0HlpicFmbdhWb4E1WyX4SDGRbjWIj5bibmU6Q3ice056f7PHdfx2Rc23qKwA/132","comment_is_top":false,"comment_ctime":1732516211,"is_pvip":false,"replies":[{"id":143815,"content":"前端的架构主要体现在模块和组件部分，总体来说前端架构的复杂度要远低于后端架构的复杂度。如果要深入的理解架构设计的复杂度确实要做后端，但是你作为前端的话，大概的了解一下架构设计的基本原则、流程、后端的一些架构模式也是可以的，这样在和后端架构师一起做架构设计的时候，能够更好的理解哪些放到前端哪些放到后端更合适，也能够更好的和后端人员交流。","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1733217828,"ip_address":"广东","comment_id":395950,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"老师好，我看完本章跟评论，发现都提到服务，存储，高性能，高可用等概念，但是作为一名小小前端开发，存储与服务这些在平时工作中似乎不太能接触到，接触到的项目也不太涉及nodejs这个唯一跟后端有点关联的工作，所以，如果作为一名前端开发，是要去接触后端那些开发相关的编程工具后，才能更全面的理解架构设计的复杂性么？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417255,"discussion_content":"复杂度的来源有很多类，后面会详细阐述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388674,"user_name":"程序员花卷","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"云南","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/58f70a2a.jpg","comment_is_top":false,"comment_ctime":1710661778,"is_pvip":false,"replies":[{"id":141520,"content":"到位","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1710993052,"ip_address":"广东","comment_id":388674,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"总结一下：\n1. 为什么要做架构设计\n架构设计的目的是为了解决软件复杂度的问题，也可以总结为架构设计是为了更好的解决问题。\n\n2. 有些团队做架构设计的原因\nA：因为别人做，所以我也做\nB：因为流程有这个环节，所以必须做\nC：为了高性能、高可用、高可扩展性\n\n3. 架构设计的误区\nA：架构设计一定要奔着或者达到高性能、高可用、高可扩展性的目的\nB：照着别人的来，不考虑自己系统的业务本身\n\n4：学生管理系统的例子分析\nA：高性能？学校学生1~2w人，对学生管理系统的访问频率很低，所以性能要求自然也不高，复杂度不在这\nB：高可扩展性？学生管理系统业务发展从现实角度来说相对稳定，所以高可扩展性也不是设计的目的，复杂度不在这。\nC：高可用性？学校管理系统宕机一两个小时会对学生造成什么损失吗？可以说几乎没有，所以高可用性也不是我们追求的点。\nD：安全性？学生数据丢失能容忍吗？答案是不能容忍，手工录入的代价非常大，所以对于学生信息的存储需要保证其可靠性，安全性，存储就成了我们系统的复杂点。\n\n总结：做架构设计之前，先找出系统复杂的点在哪里，再针对性的去做设计。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639924,"discussion_content":"到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710993052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386799,"user_name":"cskang","can_delete":false,"product_type":"c1","uid":1062061,"ip_address":"广东","ucode":"D8A8267FEEB34F","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/ad/6d017be6.jpg","comment_is_top":false,"comment_ctime":1705584947,"is_pvip":false,"replies":[{"id":141100,"content":"高性能包含高并发","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1706450227,"ip_address":"广东","comment_id":386799,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"没有讲高并发，是否可以理解为系统实现了搞性能、高可用、高扩展就实现了高并发架构？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636560,"discussion_content":"高性能包含高并发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1706450227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383179,"user_name":"无双","can_delete":false,"product_type":"c1","uid":2536153,"ip_address":"江苏","ucode":"985A42BDACC127","user_header":"https://static001.geekbang.org/account/avatar/00/26/b2/d9/35f456bd.jpg","comment_is_top":false,"comment_ctime":1698633451,"is_pvip":false,"replies":[{"id":139581,"content":"到位","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1698652885,"ip_address":"广东","comment_id":383179,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"好钢用在刀刃上","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630561,"discussion_content":"到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698652885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11533,"user_name":"阿杜","can_delete":false,"product_type":"c1","uid":1066705,"ip_address":"","ucode":"349D3572F5ABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","comment_is_top":false,"comment_ctime":1528181292,"is_pvip":false,"replies":[{"id":3679,"content":"后面的架构设计原则就是讲这部分内容","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528184732,"ip_address":"","comment_id":11533,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"适合的才是最好的，系统处于不同的时期采用不同的架构，先简单后复杂，不断的迭代，不断的优化架构，选用更重要更适宜的技术，舍弃阻碍系统发展的技术，到了某个时期还要敢于重构，做当下更好的架构。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418885,"discussion_content":"后面的架构设计原则就是讲这部分内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528184732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8206,"user_name":"yoummg","can_delete":false,"product_type":"c1","uid":1067856,"ip_address":"","ucode":"1B809CFDD7A508","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/50/fdecd51a.jpg","comment_is_top":false,"comment_ctime":1525967074,"is_pvip":false,"replies":[{"id":2407,"content":"中间件团队一般来说是一个公司里面技术水平高的团队","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526005215,"ip_address":"","comment_id":8206,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"我想问下老师，一个OTA公司，公共组承担的业务应该是什么样的？最初我是参考淘宝的Java中间件团队，总感觉自己的团队很low，听老师这堂课受益很大，所有的架构都是依托于业务，大而空的系统设计肯定不可取。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418885,"discussion_content":"后面的架构设计原则就是讲这部分内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528184732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7657,"user_name":"aaaaa","can_delete":false,"product_type":"c1","uid":1105686,"ip_address":"","ucode":"3D9FCF2482AF7E","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/16/be85a2b1.jpg","comment_is_top":false,"comment_ctime":1525611049,"is_pvip":false,"replies":[{"id":2221,"content":"几千台服务器已经是很复杂的系统了，主要的复杂度开源我会全部介绍一遍","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525675017,"ip_address":"","comment_id":7657,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"看了文章和评论，我感觉要想搭架构需要很多第三方插件的知识。想问一下，复杂点是不是就是对项目的要求？一般对项目的要求是不是就是性能，扩展，可用，安全以及成本？\n比如我目前在弄的是公司的后台，框架是以前就弄好了的，我只是维护。用户除了公司内部人员就只有公司的一些客户，数据来源是日志以及一些线上的服务器，线上大概有几千台服务器，然后主要是有几台充值服。\n用的是mysql，客户主要关心线上服的注册登入和充值情况，而起要求查询必须快点响应，但是充值数据有几千页，而且同时要获取登入注册相关信息，这些信息的数据库也每个表也有几百页，如果响应慢了，客户会重新刷新页面，再次点击，会造成线程不足挂掉，所以上司把这些数据存到了缓存里，就能实现快速查出结果。\n由于充值数据数量大，所以在起服是不能一次性把它加载完，就需要将近一个小时，注册和创角也是一样的情况，所以就不能经常关闭维护。\n每个客户只能查询与自己平台相关的数据。\n这个项目的web容器是tomcat，数据库是\nmysql，数据源用定时器从其它服务器获取以及解析日志，感觉没啥东西了。\n那我这个项目的复杂点是不是就是性能和可用还有安全性三方面？架构有没有就不清楚了，如果有的话，感觉就是个星型拓扑图","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417629,"discussion_content":"中间件团队一般来说是一个公司里面技术水平高的团队","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526005215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7452,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1118559,"ip_address":"","ucode":"0BEC28E0772A39","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/5f/0d24dba2.jpg","comment_is_top":false,"comment_ctime":1525485448,"is_pvip":false,"replies":[{"id":2153,"content":"后面会回答这个问题","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525500685,"ip_address":"","comment_id":7452,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"做架构设计的时候，就是从高可用，高性能，高扩展三个维度，弄清楚项目要求，找到解决方案，还要在不同的方案中间，拿成本来衡量。可以这么理解么？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417434,"discussion_content":"几千台服务器已经是很复杂的系统了，主要的复杂度开源我会全部介绍一遍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525675017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7211,"user_name":"刘杨","can_delete":false,"product_type":"c1","uid":1088931,"ip_address":"","ucode":"9EA64E1BAF3BD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/a3/827e8d49.jpg","comment_is_top":false,"comment_ctime":1525337404,"is_pvip":false,"replies":[{"id":2060,"content":"别急，后面更精彩","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349193,"ip_address":"","comment_id":7211,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"感谢老师的答复，但是对于架构的设计不知如何着手，期待老师后续的讲解非常感谢","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417279,"discussion_content":"别急，后面更精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7154,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1525310287,"is_pvip":false,"replies":[{"id":2014,"content":"复杂度的来源有很多类，后面会详细阐述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311358,"ip_address":"","comment_id":7154,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"架构解决软件复杂度，从性能，存储，高可用，安全脱敏方面从技术角度考虑没问题，但商用软件不得不考虑成本和交付这两个维度。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417255,"discussion_content":"复杂度的来源有很多类，后面会详细阐述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395950,"user_name":"Anne","can_delete":false,"product_type":"c1","uid":1520249,"ip_address":"浙江","ucode":"A1E4C3BA1B8B8A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/hTeBRCiaXNpwMBiaI1MEkBB33aJBFzg0HlpicFmbdhWb4E1WyX4SDGRbjWIj5bibmU6Q3ice056f7PHdfx2Rc23qKwA/132","comment_is_top":false,"comment_ctime":1732516211,"is_pvip":false,"replies":[{"id":143815,"content":"前端的架构主要体现在模块和组件部分，总体来说前端架构的复杂度要远低于后端架构的复杂度。如果要深入的理解架构设计的复杂度确实要做后端，但是你作为前端的话，大概的了解一下架构设计的基本原则、流程、后端的一些架构模式也是可以的，这样在和后端架构师一起做架构设计的时候，能够更好的理解哪些放到前端哪些放到后端更合适，也能够更好的和后端人员交流。","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1733217828,"ip_address":"广东","comment_id":395950,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"老师好，我看完本章跟评论，发现都提到服务，存储，高性能，高可用等概念，但是作为一名小小前端开发，存储与服务这些在平时工作中似乎不太能接触到，接触到的项目也不太涉及nodejs这个唯一跟后端有点关联的工作，所以，如果作为一名前端开发，是要去接触后端那些开发相关的编程工具后，才能更全面的理解架构设计的复杂性么？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654665,"discussion_content":"前端的架构主要体现在模块和组件部分，总体来说前端架构的复杂度要远低于后端架构的复杂度。如果要深入的理解架构设计的复杂度确实要做后端，但是你作为前端的话，大概的了解一下架构设计的基本原则、流程、后端的一些架构模式也是可以的，这样在和后端架构师一起做架构设计的时候，能够更好的理解哪些放到前端哪些放到后端更合适，也能够更好的和后端人员交流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1733217828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388674,"user_name":"程序员花卷","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"云南","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/58f70a2a.jpg","comment_is_top":false,"comment_ctime":1710661778,"is_pvip":false,"replies":[{"id":141520,"content":"到位","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1710993052,"ip_address":"广东","comment_id":388674,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"总结一下：\n1. 为什么要做架构设计\n架构设计的目的是为了解决软件复杂度的问题，也可以总结为架构设计是为了更好的解决问题。\n\n2. 有些团队做架构设计的原因\nA：因为别人做，所以我也做\nB：因为流程有这个环节，所以必须做\nC：为了高性能、高可用、高可扩展性\n\n3. 架构设计的误区\nA：架构设计一定要奔着或者达到高性能、高可用、高可扩展性的目的\nB：照着别人的来，不考虑自己系统的业务本身\n\n4：学生管理系统的例子分析\nA：高性能？学校学生1~2w人，对学生管理系统的访问频率很低，所以性能要求自然也不高，复杂度不在这\nB：高可扩展性？学生管理系统业务发展从现实角度来说相对稳定，所以高可扩展性也不是设计的目的，复杂度不在这。\nC：高可用性？学校管理系统宕机一两个小时会对学生造成什么损失吗？可以说几乎没有，所以高可用性也不是我们追求的点。\nD：安全性？学生数据丢失能容忍吗？答案是不能容忍，手工录入的代价非常大，所以对于学生信息的存储需要保证其可靠性，安全性，存储就成了我们系统的复杂点。\n\n总结：做架构设计之前，先找出系统复杂的点在哪里，再针对性的去做设计。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654665,"discussion_content":"前端的架构主要体现在模块和组件部分，总体来说前端架构的复杂度要远低于后端架构的复杂度。如果要深入的理解架构设计的复杂度确实要做后端，但是你作为前端的话，大概的了解一下架构设计的基本原则、流程、后端的一些架构模式也是可以的，这样在和后端架构师一起做架构设计的时候，能够更好的理解哪些放到前端哪些放到后端更合适，也能够更好的和后端人员交流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1733217828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386799,"user_name":"cskang","can_delete":false,"product_type":"c1","uid":1062061,"ip_address":"广东","ucode":"D8A8267FEEB34F","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/ad/6d017be6.jpg","comment_is_top":false,"comment_ctime":1705584947,"is_pvip":false,"replies":[{"id":141100,"content":"高性能包含高并发","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1706450227,"ip_address":"广东","comment_id":386799,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"没有讲高并发，是否可以理解为系统实现了搞性能、高可用、高扩展就实现了高并发架构？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639924,"discussion_content":"到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710993052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383179,"user_name":"无双","can_delete":false,"product_type":"c1","uid":2536153,"ip_address":"江苏","ucode":"985A42BDACC127","user_header":"https://static001.geekbang.org/account/avatar/00/26/b2/d9/35f456bd.jpg","comment_is_top":false,"comment_ctime":1698633451,"is_pvip":false,"replies":[{"id":139581,"content":"到位","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1698652885,"ip_address":"广东","comment_id":383179,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100006601,"comment_content":"好钢用在刀刃上","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636560,"discussion_content":"高性能包含高并发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1706450227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382264,"user_name":"柯里","can_delete":false,"product_type":"c1","uid":2556517,"ip_address":"上海","ucode":"B66035EE1E389B","user_header":"https://static001.geekbang.org/account/avatar/00/27/02/65/ddb6460e.jpg","comment_is_top":false,"comment_ctime":1696953213,"is_pvip":false,"replies":[{"id":139251,"content":"不能泛泛而谈“金融系统”，金融系统里面不同的字业务和系统，复杂性不一样的，可以再明确针对你现在做的子系统分析下","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1696991314,"ip_address":"广东","comment_id":382264,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"“架构设计的主要目的是为了解决软件复杂度带来的问题”这个指导思想来分析一下你目前的业务系统架构，看看是否和你当时分析的结果一样？\n\n浅浅讨论一下，金融系统对高可用有比较高的要求，数据存储有比较高的要求，安全性有比较高的要求，数据的准确性有比较高的要求，目前先说这么多，希望多读几遍，有更加深刻的理解","like_count":0},{"had_liked":false,"id":380946,"user_name":"黄少bb","can_delete":false,"product_type":"c1","uid":1267938,"ip_address":"广东","ucode":"37CB43EB35031F","user_header":"https://static001.geekbang.org/account/avatar/00/13/58/e2/fd796eb9.jpg","comment_is_top":false,"comment_ctime":1694494935,"is_pvip":false,"replies":[{"id":138756,"content":"数据的一致性完整性绝大部分情况下不是系统复杂度来源，而是方案设计和代码的复杂度来源","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1694565537,"ip_address":"广东","comment_id":380946,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"数据的一致性完整性，属于什么？他也是一个系统复杂度的重要来源","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629371,"discussion_content":"不能泛泛而谈“金融系统”，金融系统里面不同的字业务和系统，复杂性不一样的，可以再明确针对你现在做的子系统分析下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696991314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378857,"user_name":"Juinn","can_delete":false,"product_type":"c1","uid":1334226,"ip_address":"广东","ucode":"257796850A6CD9","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/d2/34a8c79c.jpg","comment_is_top":false,"comment_ctime":1690887636,"is_pvip":false,"replies":[{"id":138071,"content":"很有道理，点赞","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1691025323,"ip_address":"广东","comment_id":378857,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构设计的目的, 我想加个前缀: 解决较大规模的软件系统带来的复杂度问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627792,"discussion_content":"数据的一致性完整性绝大部分情况下不是系统复杂度来源，而是方案设计和代码的复杂度来源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694565537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376909,"user_name":"河南一线天","can_delete":false,"product_type":"c1","uid":1641026,"ip_address":"上海","ucode":"9D8FB86A577D2E","user_header":"https://static001.geekbang.org/account/avatar/00/19/0a/42/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1687697215,"is_pvip":false,"replies":[{"id":137392,"content":"后面会讲","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1687756459,"ip_address":"广东","comment_id":376909,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"怎么找到软件的复杂度呢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624875,"discussion_content":"很有道理，点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691025323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373496,"user_name":"悠悠空谷","can_delete":false,"product_type":"c1","uid":2407370,"ip_address":"陕西","ucode":"9C1852AD89F0CB","user_header":"https://static001.geekbang.org/account/avatar/00/24/bb/ca/1a29decb.jpg","comment_is_top":false,"comment_ctime":1682577181,"is_pvip":false,"replies":[{"id":136436,"content":"完美的实践经验和心得，点赞","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1682905988,"ip_address":"广东","comment_id":373496,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构没有完美，只有是否适合当下业务发展。\n架构需要结合业务规模，业务类型，团队成员，技术栈，人力成本，时间成本等等多方面来全局考虑，很多时候架构就是在不断地权衡，用最低的代价成本换来预期的回报，这就是符合当下业务的最佳架构。\n我们公司服务器架构方面也是经过了好几次演进，最初是最简单的单机版，单台ECS做web服务器，nginx包含在web服务器中，单机mysql，单机redis，随着业务量的不断增多，很快就暴露出来问题，单台就根本无法应对访问高峰，高峰时段QPS大概在2000左右，可怜的单台PHP根本无法应对这么高的访问量，时不时的就挂掉。\n后来就改成了多台web服务器负载均衡，解决了高峰时段流量大的问题，看似比较完美，但是问题又来了，虽然在高峰时段可以增加服务器来应对流量洪峰，但是流量峰值是变化的，可能今天5台机器就能扛得住，明天就得8台机器了，而且还需要人工去增加服务器，这样就可能会导致延迟，另外一个问题是假设10台机器能抗住高峰流量，但是高峰也就几个小时而已，过了高峰就不需要这么多机器了，要么勤快点手动增减机器，要么就直接10台不管了，低峰也10台在那跑，这样成本很不划算。\n再后来Docker等容器化技术的出现，尤其是K8S容器编排技术，真的是革命性的，容器数量根据业务压力自动扩缩容，高峰时自动扩容，低峰时自动缩容，成本直接断崖式降低，成本直接降低了至少60%。\n当然了后端存储mysql也都上了集群，以及redis集群。\n反正总之一句话：用最低的成本解决当下的复杂度问题，就是最完美的架构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621904,"discussion_content":"后面会讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687756459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372892,"user_name":"Geek_61fbde","can_delete":false,"product_type":"c1","uid":2859507,"ip_address":"广东","ucode":"7826DC7F1FB855","user_header":"","comment_is_top":false,"comment_ctime":1681781677,"is_pvip":false,"replies":[{"id":136246,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1681783753,"ip_address":"广东","comment_id":372892,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构设计首先要紧贴需求，在吃透需求之后才能判断出其中的复杂点在什么地方，有的放矢的去进行解决和设计。最怕想当然的给自己系统加一些需求和功能，以为是创新，但实际没有人用","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616522,"discussion_content":"完美的实践经验和心得，点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682905989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361609,"user_name":"之乎者也","can_delete":false,"product_type":"c1","uid":2893434,"ip_address":"广东","ucode":"10051A01F793DD","user_header":"https://static001.geekbang.org/account/avatar/00/2c/26/7a/940ff0b0.jpg","comment_is_top":false,"comment_ctime":1667701090,"is_pvip":false,"replies":[{"id":131527,"content":"面向复杂度，目标不一定是性能，可能是可靠性，可能是扩展，可能是成本，也可能是组合起来的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1667716486,"ip_address":"广东","comment_id":361609,"utype":1}],"discussion_count":2,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构是不是可以理解为，解决软件工程中的难点而做的解决方案，使其在性能，操作上达到最优？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614405,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681783753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346537,"user_name":"建锋","can_delete":false,"product_type":"c1","uid":2295880,"ip_address":"","ucode":"50E4AF68BE4488","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/SYxHx9k1fVAZGanCk5cFVdzFyhx2pkNk45RdH1Yo3ITBH7dCWjwzEzibAnZaXayqF1TibW6ynBkCqIOd6p1Yhlew/132","comment_is_top":false,"comment_ctime":1653219172,"is_pvip":false,"replies":[{"id":126424,"content":"正解，这就是后面要讲的“面向复杂度”","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1653307932,"ip_address":"","comment_id":346537,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构就是解决问题，能用简单的方法解决就不要搞得复杂。关键的地方就是你要找到所谓的问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592787,"discussion_content":"面向复杂度，目标不一定是性能，可能是可靠性，可能是扩展，可能是成本，也可能是组合起来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667716486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2893434,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/26/7a/940ff0b0.jpg","nickname":"之乎者也","note":"","ucode":"10051A01F793DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":593396,"discussion_content":"了解了 谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668146627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":592787,"ip_address":"河北","group_id":0},"score":593396,"extra":""}]}]},{"had_liked":false,"id":342583,"user_name":"七星海棠","can_delete":false,"product_type":"c1","uid":1201461,"ip_address":"","ucode":"35CB6C07749640","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/35/e8af927b.jpg","comment_is_top":false,"comment_ctime":1650354621,"is_pvip":false,"replies":[{"id":125169,"content":"很适合你 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1650415854,"ip_address":"","comment_id":342583,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"我是个小测试，一直就想对架构有个基本的了解，顺便看下自己以前的认知是否有偏差","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573280,"discussion_content":"正解，这就是后面要讲的“面向复杂度”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653307932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337152,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1646649188,"is_pvip":false,"replies":[{"id":123229,"content":"设计不好就会带来更多复杂度","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1646697849,"ip_address":"","comment_id":337152,"utype":1}],"discussion_count":1,"race_medal":3,"score":8,"product_id":100006601,"comment_content":"架构是用来解决软件开发面对的复杂性，而不是带来更复杂的问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565157,"discussion_content":"很适合你 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650415854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382264,"user_name":"柯里","can_delete":false,"product_type":"c1","uid":2556517,"ip_address":"上海","ucode":"B66035EE1E389B","user_header":"https://static001.geekbang.org/account/avatar/00/27/02/65/ddb6460e.jpg","comment_is_top":false,"comment_ctime":1696953213,"is_pvip":false,"replies":[{"id":139251,"content":"不能泛泛而谈“金融系统”，金融系统里面不同的字业务和系统，复杂性不一样的，可以再明确针对你现在做的子系统分析下","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1696991314,"ip_address":"广东","comment_id":382264,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"“架构设计的主要目的是为了解决软件复杂度带来的问题”这个指导思想来分析一下你目前的业务系统架构，看看是否和你当时分析的结果一样？\n\n浅浅讨论一下，金融系统对高可用有比较高的要求，数据存储有比较高的要求，安全性有比较高的要求，数据的准确性有比较高的要求，目前先说这么多，希望多读几遍，有更加深刻的理解","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629371,"discussion_content":"不能泛泛而谈“金融系统”，金融系统里面不同的字业务和系统，复杂性不一样的，可以再明确针对你现在做的子系统分析下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696991314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380946,"user_name":"黄少bb","can_delete":false,"product_type":"c1","uid":1267938,"ip_address":"广东","ucode":"37CB43EB35031F","user_header":"https://static001.geekbang.org/account/avatar/00/13/58/e2/fd796eb9.jpg","comment_is_top":false,"comment_ctime":1694494935,"is_pvip":false,"replies":[{"id":138756,"content":"数据的一致性完整性绝大部分情况下不是系统复杂度来源，而是方案设计和代码的复杂度来源","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1694565537,"ip_address":"广东","comment_id":380946,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"数据的一致性完整性，属于什么？他也是一个系统复杂度的重要来源","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627792,"discussion_content":"数据的一致性完整性绝大部分情况下不是系统复杂度来源，而是方案设计和代码的复杂度来源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694565537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378857,"user_name":"Juinn","can_delete":false,"product_type":"c1","uid":1334226,"ip_address":"广东","ucode":"257796850A6CD9","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/d2/34a8c79c.jpg","comment_is_top":false,"comment_ctime":1690887636,"is_pvip":false,"replies":[{"id":138071,"content":"很有道理，点赞","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1691025323,"ip_address":"广东","comment_id":378857,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构设计的目的, 我想加个前缀: 解决较大规模的软件系统带来的复杂度问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624875,"discussion_content":"很有道理，点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691025323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376909,"user_name":"河南一线天","can_delete":false,"product_type":"c1","uid":1641026,"ip_address":"上海","ucode":"9D8FB86A577D2E","user_header":"https://static001.geekbang.org/account/avatar/00/19/0a/42/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1687697215,"is_pvip":false,"replies":[{"id":137392,"content":"后面会讲","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1687756459,"ip_address":"广东","comment_id":376909,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"怎么找到软件的复杂度呢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621904,"discussion_content":"后面会讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687756459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373496,"user_name":"悠悠空谷","can_delete":false,"product_type":"c1","uid":2407370,"ip_address":"陕西","ucode":"9C1852AD89F0CB","user_header":"https://static001.geekbang.org/account/avatar/00/24/bb/ca/1a29decb.jpg","comment_is_top":false,"comment_ctime":1682577181,"is_pvip":false,"replies":[{"id":136436,"content":"完美的实践经验和心得，点赞","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1682905988,"ip_address":"广东","comment_id":373496,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构没有完美，只有是否适合当下业务发展。\n架构需要结合业务规模，业务类型，团队成员，技术栈，人力成本，时间成本等等多方面来全局考虑，很多时候架构就是在不断地权衡，用最低的代价成本换来预期的回报，这就是符合当下业务的最佳架构。\n我们公司服务器架构方面也是经过了好几次演进，最初是最简单的单机版，单台ECS做web服务器，nginx包含在web服务器中，单机mysql，单机redis，随着业务量的不断增多，很快就暴露出来问题，单台就根本无法应对访问高峰，高峰时段QPS大概在2000左右，可怜的单台PHP根本无法应对这么高的访问量，时不时的就挂掉。\n后来就改成了多台web服务器负载均衡，解决了高峰时段流量大的问题，看似比较完美，但是问题又来了，虽然在高峰时段可以增加服务器来应对流量洪峰，但是流量峰值是变化的，可能今天5台机器就能扛得住，明天就得8台机器了，而且还需要人工去增加服务器，这样就可能会导致延迟，另外一个问题是假设10台机器能抗住高峰流量，但是高峰也就几个小时而已，过了高峰就不需要这么多机器了，要么勤快点手动增减机器，要么就直接10台不管了，低峰也10台在那跑，这样成本很不划算。\n再后来Docker等容器化技术的出现，尤其是K8S容器编排技术，真的是革命性的，容器数量根据业务压力自动扩缩容，高峰时自动扩容，低峰时自动缩容，成本直接断崖式降低，成本直接降低了至少60%。\n当然了后端存储mysql也都上了集群，以及redis集群。\n反正总之一句话：用最低的成本解决当下的复杂度问题，就是最完美的架构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616522,"discussion_content":"完美的实践经验和心得，点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1682905989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372892,"user_name":"Geek_61fbde","can_delete":false,"product_type":"c1","uid":2859507,"ip_address":"广东","ucode":"7826DC7F1FB855","user_header":"","comment_is_top":false,"comment_ctime":1681781677,"is_pvip":false,"replies":[{"id":136246,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1681783753,"ip_address":"广东","comment_id":372892,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构设计首先要紧贴需求，在吃透需求之后才能判断出其中的复杂点在什么地方，有的放矢的去进行解决和设计。最怕想当然的给自己系统加一些需求和功能，以为是创新，但实际没有人用","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614405,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681783753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361609,"user_name":"之乎者也","can_delete":false,"product_type":"c1","uid":2893434,"ip_address":"广东","ucode":"10051A01F793DD","user_header":"https://static001.geekbang.org/account/avatar/00/2c/26/7a/940ff0b0.jpg","comment_is_top":false,"comment_ctime":1667701090,"is_pvip":false,"replies":[{"id":131527,"content":"面向复杂度，目标不一定是性能，可能是可靠性，可能是扩展，可能是成本，也可能是组合起来的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1667716486,"ip_address":"广东","comment_id":361609,"utype":1}],"discussion_count":2,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构是不是可以理解为，解决软件工程中的难点而做的解决方案，使其在性能，操作上达到最优？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592787,"discussion_content":"面向复杂度，目标不一定是性能，可能是可靠性，可能是扩展，可能是成本，也可能是组合起来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667716486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2893434,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/26/7a/940ff0b0.jpg","nickname":"之乎者也","note":"","ucode":"10051A01F793DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":593396,"discussion_content":"了解了 谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668146627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":592787,"ip_address":"河北","group_id":0},"score":593396,"extra":""}]}]},{"had_liked":false,"id":346537,"user_name":"建锋","can_delete":false,"product_type":"c1","uid":2295880,"ip_address":"","ucode":"50E4AF68BE4488","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/SYxHx9k1fVAZGanCk5cFVdzFyhx2pkNk45RdH1Yo3ITBH7dCWjwzEzibAnZaXayqF1TibW6ynBkCqIOd6p1Yhlew/132","comment_is_top":false,"comment_ctime":1653219172,"is_pvip":false,"replies":[{"id":126424,"content":"正解，这就是后面要讲的“面向复杂度”","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1653307932,"ip_address":"","comment_id":346537,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"架构就是解决问题，能用简单的方法解决就不要搞得复杂。关键的地方就是你要找到所谓的问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573280,"discussion_content":"正解，这就是后面要讲的“面向复杂度”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653307932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342583,"user_name":"七星海棠","can_delete":false,"product_type":"c1","uid":1201461,"ip_address":"","ucode":"35CB6C07749640","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/35/e8af927b.jpg","comment_is_top":false,"comment_ctime":1650354621,"is_pvip":false,"replies":[{"id":125169,"content":"很适合你 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1650415854,"ip_address":"","comment_id":342583,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100006601,"comment_content":"我是个小测试，一直就想对架构有个基本的了解，顺便看下自己以前的认知是否有偏差","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565157,"discussion_content":"很适合你 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650415854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337152,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1646649188,"is_pvip":false,"replies":[{"id":123229,"content":"设计不好就会带来更多复杂度","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1646697849,"ip_address":"","comment_id":337152,"utype":1}],"discussion_count":1,"race_medal":3,"score":8,"product_id":100006601,"comment_content":"架构是用来解决软件开发面对的复杂性，而不是带来更复杂的问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554956,"discussion_content":"设计不好就会带来更多复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646697849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335860,"user_name":"地平线","can_delete":false,"product_type":"c1","uid":1952394,"ip_address":"","ucode":"52213F99782147","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ca/8a/8f64cf86.jpg","comment_is_top":false,"comment_ctime":1645726020,"is_pvip":false,"replies":[{"id":122734,"content":"可以适当考虑，别太超前","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1645754764,"ip_address":"","comment_id":335860,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"最近学校小组要共同开发一个android app。这个软件的目的是帮助人们脱离一些成瘾软件的困扰。这个项目的难点是要为项目保留一定的可拓展性。一些优先级比较的功能，如果没有时间可以不完成，但架构里一定要先留好位置，如果有时间方便实现新的功能。","like_count":0},{"had_liked":false,"id":334116,"user_name":"panda","can_delete":false,"product_type":"c1","uid":1176873,"ip_address":"","ucode":"EB45C139D75CB5","user_header":"https://static001.geekbang.org/account/avatar/00/11/f5/29/b5445b82.jpg","comment_is_top":false,"comment_ctime":1644750058,"is_pvip":false,"replies":[{"id":122120,"content":"我也看过这本书，前面讲架构设计，后面讲方案设计的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1644893675,"ip_address":"","comment_id":334116,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"最近读了《恰如其分的软件架构--风险驱动的设计方法》第一章概述，发现里面的设计思想跟华仔的课程思想“面向复杂度的架构设计”很相似，有异曲同工之妙，不过华仔的课程内容更具体、更有实操性价值","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551076,"discussion_content":"我也看过这本书，前面讲架构设计，后面讲方案设计的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644893675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331939,"user_name":"毛成方","can_delete":false,"product_type":"c1","uid":1459289,"ip_address":"","ucode":"DFBF3D464D8D7C","user_header":"https://static001.geekbang.org/account/avatar/00/16/44/59/b607b8c0.jpg","comment_is_top":false,"comment_ctime":1642909435,"is_pvip":false,"replies":[{"id":121378,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1643116215,"ip_address":"","comment_id":331939,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"从架构设计的角度看。不管前端还是后端，都要和业务进行深入融合，识别出解决业务场景的复杂点，针对性进行优化和设计才能精准解决问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548292,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643116215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327399,"user_name":"线条","can_delete":false,"product_type":"c1","uid":1125120,"ip_address":"","ucode":"E447F22B8FD4F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/2b/00/d568d9d1.jpg","comment_is_top":false,"comment_ctime":1640098938,"is_pvip":false,"replies":[{"id":119246,"content":"这个类似TOGAF里面的架构图，TOGAF是业务架构、应用架构、技术架构、数据架构，这个分类适合高级别的架构师甚至是CTO来用。\n\n关于如何画架构图，我在专栏会推出一篇新的文章","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1640219468,"ip_address":"","comment_id":327399,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"业务架构图，功能架构图，技术架构图 ，数据架构图如何区别呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540935,"discussion_content":"这个类似TOGAF里面的架构图，TOGAF是业务架构、应用架构、技术架构、数据架构，这个分类适合高级别的架构师甚至是CTO来用。\n\n关于如何画架构图，我在专栏会推出一篇新的文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640219468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324844,"user_name":"逆向","can_delete":false,"product_type":"c1","uid":1089426,"ip_address":"","ucode":"745C18035146C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/92/a3150976.jpg","comment_is_top":false,"comment_ctime":1638679266,"is_pvip":false,"replies":[{"id":117924,"content":"赞","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638786432,"ip_address":"","comment_id":324844,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件复杂度带来的问题（抄一遍加强印象）。\n我们当前系统，业务复杂度主要在于可扩展，主要是内部业务的可扩展，组件加配置的方式，加上灵活的组件识别方式，可以通过初始制定的组件开发规范，保证主引擎的简洁性，并支持高度灵活的扩展","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536447,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638786432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324482,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1516046,"ip_address":"","ucode":"1A52A00A0A6610","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIkkg9icSGleYMAnwlb7A9MMJYOdovl8kOCA0asMkDe6grPNF74ib0prQMicicJTNa1WsdpMJ4p1CWkUQ/132","comment_is_top":false,"comment_ctime":1638453395,"is_pvip":false,"replies":[{"id":117769,"content":"哈哈，还是总监厉害啊 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638501935,"ip_address":"","comment_id":324482,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"有一次为了满足双十一在线系统的稳定性，老大很得意的提出了了双缓存方式，一个读，一个写，满足一定条件后切换。方案回报给总监后，总监问切换频率多少，切换期间数据抖动如何处理，然后就被否决了。事后思考了一下觉得是过度设计，正常的缓存策略就可以满足需求了，系统的复杂度不在于此。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535644,"discussion_content":"哈哈，还是总监厉害啊 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638501935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324046,"user_name":"渔村小裁缝","can_delete":false,"product_type":"c1","uid":2852959,"ip_address":"","ucode":"ACFDC7744EDE59","user_header":"https://static001.geekbang.org/account/avatar/00/2b/88/5f/efeaf6e3.jpg","comment_is_top":false,"comment_ctime":1638270799,"is_pvip":false,"replies":[{"id":117635,"content":"你这个意思，复杂度是设计后才引入的？需求本身无所谓复杂和不复杂？高并发高可用不是需求？\n我感觉你自己把需求理解为“功能”了。","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638326890,"ip_address":"","comment_id":324046,"utype":1}],"discussion_count":3,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"“架构设计的主要目的是为了解决软件复杂度带来的问题”——这是一个病句！架构设计应该是用最小的代价满足系统的需求。请问系统在设计开发之前哪来的复杂度？只有需求。相反有的时候是为了满足高并发高可用等需求而引入复杂度。比如作者的例子：学生管理系统，如果只是一个大学几万用户使用，那么架构设计就很简单，但是如果全国大学使用，几千万用户，那么就有高并发要求，就要引入复杂的架构设计。所以架构设计常常引入了复杂度，换来的是高并发、高可用、可维护、可扩展等好处，但是如果这些好处是你的系统不需要的，那么就是一种浪费和过度设计。 ","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534974,"discussion_content":"你这个意思，复杂度是设计后才引入的？需求本身无所谓复杂和不复杂？高并发高可用不是需求？\n我感觉你自己把需求理解为“功能”了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638326890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2852959,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/88/5f/efeaf6e3.jpg","nickname":"渔村小裁缝","note":"","ucode":"ACFDC7744EDE59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":534992,"discussion_content":"--1. 高并发和高可用属于非功能性需求，也是属于需求的一种，请认真看我的评论，我的原评论里就说了高并发是需求。--2. 如果业务逻辑本身复杂，也不是靠架构设计去解决的，比如我之前做过一个保险系统，保费的计算涉及到投保人的职业、年龄等将近一百个参数，计算逻辑本身复杂，架构设计能把它变简单吗？--3. 是不是架构设计引入了复杂度？很多情况下确实是这样。请问单体应用架构和微服务架构哪一个复杂？毫无疑问是微服务复杂，但是虽然复杂了，却解决了单点失败的风险，可以实现高并发高可用，请问说设计引入了复杂度难道有错吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638329124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534974,"ip_address":"","group_id":0},"score":534992,"extra":""}]},{"author":{"id":1424631,"avatar":"https://static001.geekbang.org/account/avatar/00/15/bc/f7/3ed0d1b7.jpg","nickname":"CZcz","note":"","ucode":"36C243050AF403","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592305,"discussion_content":"单体到微服务的架构设计是转移了复杂度，单体应用的复杂度在于扩展难、维护难、部署难，微服务的复杂度在于网络，数据一致性等。看取舍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667295991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321920,"user_name":"ting.stu","can_delete":false,"product_type":"c1","uid":1127581,"ip_address":"","ucode":"111FA8B6F426FC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo4dq6xsbAeYcwz6gfNjvUeNicBCNPosLHtDugXRTR3q4Vk7fgSVUyzCJh7JFibtv0Zuw7tZ3tJahLQ/132","comment_is_top":false,"comment_ctime":1637110938,"is_pvip":false,"replies":[{"id":117028,"content":"如果业务功能需求太复杂，导致架构设计成本很高，有时候也可以适当的调整业务的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1637309140,"ip_address":"","comment_id":321920,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"架构设计首先考虑业务功能需求，然后再解决软件复杂性的业务","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531424,"discussion_content":"如果业务功能需求太复杂，导致架构设计成本很高，有时候也可以适当的调整业务的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637309140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314003,"user_name":"顾琪瑶","can_delete":false,"product_type":"c1","uid":1179515,"ip_address":"","ucode":"71F3F122441915","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/7b/cbe07b5c.jpg","comment_is_top":false,"comment_ctime":1632798304,"is_pvip":false,"replies":[{"id":113842,"content":"你说的对，但是感觉有点啰嗦啊 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1632970046,"ip_address":"","comment_id":314003,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题\n我想是不是加几个字会更好, 架构设计的主要目的是为了解决软件系统生命周期内带来的复杂度问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527543,"discussion_content":"你说的对，但是感觉有点啰嗦啊 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632970046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296588,"user_name":"小鱼","can_delete":false,"product_type":"c1","uid":1248115,"ip_address":"","ucode":"022B6D5D69DB68","user_header":"https://static001.geekbang.org/account/avatar/00/13/0b/73/44fe2df9.jpg","comment_is_top":false,"comment_ctime":1623053779,"is_pvip":false,"replies":[{"id":107759,"content":"敏捷开发其实在很多公司都不适应，也不适应很多系统，例如我在菊厂做电信设备，就不可能用敏捷开发；BigTable、HBase这些系统，也不可能用敏捷开发模式。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1623115396,"ip_address":"","comment_id":296588,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"我在看这篇文章之前想到的软件架构的目的\n1 解决软件的复杂性\n2 提升开发效率\n3 保障可扩展，高可用\n回过头来再看看，软件架构和敏捷开发确实是个悖论。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521505,"discussion_content":"敏捷开发其实在很多公司都不适应，也不适应很多系统，例如我在菊厂做电信设备，就不可能用敏捷开发；BigTable、HBase这些系统，也不可能用敏捷开发模式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623115396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335860,"user_name":"地平线","can_delete":false,"product_type":"c1","uid":1952394,"ip_address":"","ucode":"52213F99782147","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ca/8a/8f64cf86.jpg","comment_is_top":false,"comment_ctime":1645726020,"is_pvip":false,"replies":[{"id":122734,"content":"可以适当考虑，别太超前","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1645754764,"ip_address":"","comment_id":335860,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"最近学校小组要共同开发一个android app。这个软件的目的是帮助人们脱离一些成瘾软件的困扰。这个项目的难点是要为项目保留一定的可拓展性。一些优先级比较的功能，如果没有时间可以不完成，但架构里一定要先留好位置，如果有时间方便实现新的功能。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553152,"discussion_content":"可以适当考虑，别太超前","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645754764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334116,"user_name":"panda","can_delete":false,"product_type":"c1","uid":1176873,"ip_address":"","ucode":"EB45C139D75CB5","user_header":"https://static001.geekbang.org/account/avatar/00/11/f5/29/b5445b82.jpg","comment_is_top":false,"comment_ctime":1644750058,"is_pvip":false,"replies":[{"id":122120,"content":"我也看过这本书，前面讲架构设计，后面讲方案设计的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1644893675,"ip_address":"","comment_id":334116,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"最近读了《恰如其分的软件架构--风险驱动的设计方法》第一章概述，发现里面的设计思想跟华仔的课程思想“面向复杂度的架构设计”很相似，有异曲同工之妙，不过华仔的课程内容更具体、更有实操性价值","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553152,"discussion_content":"可以适当考虑，别太超前","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645754764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331939,"user_name":"毛成方","can_delete":false,"product_type":"c1","uid":1459289,"ip_address":"","ucode":"DFBF3D464D8D7C","user_header":"https://static001.geekbang.org/account/avatar/00/16/44/59/b607b8c0.jpg","comment_is_top":false,"comment_ctime":1642909435,"is_pvip":false,"replies":[{"id":121378,"content":"正解","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1643116215,"ip_address":"","comment_id":331939,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"从架构设计的角度看。不管前端还是后端，都要和业务进行深入融合，识别出解决业务场景的复杂点，针对性进行优化和设计才能精准解决问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551076,"discussion_content":"我也看过这本书，前面讲架构设计，后面讲方案设计的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644893675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327399,"user_name":"线条","can_delete":false,"product_type":"c1","uid":1125120,"ip_address":"","ucode":"E447F22B8FD4F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/2b/00/d568d9d1.jpg","comment_is_top":false,"comment_ctime":1640098938,"is_pvip":false,"replies":[{"id":119246,"content":"这个类似TOGAF里面的架构图，TOGAF是业务架构、应用架构、技术架构、数据架构，这个分类适合高级别的架构师甚至是CTO来用。\n\n关于如何画架构图，我在专栏会推出一篇新的文章","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1640219468,"ip_address":"","comment_id":327399,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"业务架构图，功能架构图，技术架构图 ，数据架构图如何区别呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548292,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643116215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324844,"user_name":"逆向","can_delete":false,"product_type":"c1","uid":1089426,"ip_address":"","ucode":"745C18035146C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/92/a3150976.jpg","comment_is_top":false,"comment_ctime":1638679266,"is_pvip":false,"replies":[{"id":117924,"content":"赞","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638786432,"ip_address":"","comment_id":324844,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件复杂度带来的问题（抄一遍加强印象）。\n我们当前系统，业务复杂度主要在于可扩展，主要是内部业务的可扩展，组件加配置的方式，加上灵活的组件识别方式，可以通过初始制定的组件开发规范，保证主引擎的简洁性，并支持高度灵活的扩展","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540935,"discussion_content":"这个类似TOGAF里面的架构图，TOGAF是业务架构、应用架构、技术架构、数据架构，这个分类适合高级别的架构师甚至是CTO来用。\n\n关于如何画架构图，我在专栏会推出一篇新的文章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640219468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324482,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1516046,"ip_address":"","ucode":"1A52A00A0A6610","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIkkg9icSGleYMAnwlb7A9MMJYOdovl8kOCA0asMkDe6grPNF74ib0prQMicicJTNa1WsdpMJ4p1CWkUQ/132","comment_is_top":false,"comment_ctime":1638453395,"is_pvip":false,"replies":[{"id":117769,"content":"哈哈，还是总监厉害啊 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638501935,"ip_address":"","comment_id":324482,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"有一次为了满足双十一在线系统的稳定性，老大很得意的提出了了双缓存方式，一个读，一个写，满足一定条件后切换。方案回报给总监后，总监问切换频率多少，切换期间数据抖动如何处理，然后就被否决了。事后思考了一下觉得是过度设计，正常的缓存策略就可以满足需求了，系统的复杂度不在于此。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536447,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638786432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324046,"user_name":"渔村小裁缝","can_delete":false,"product_type":"c1","uid":2852959,"ip_address":"","ucode":"ACFDC7744EDE59","user_header":"https://static001.geekbang.org/account/avatar/00/2b/88/5f/efeaf6e3.jpg","comment_is_top":false,"comment_ctime":1638270799,"is_pvip":false,"replies":[{"id":117635,"content":"你这个意思，复杂度是设计后才引入的？需求本身无所谓复杂和不复杂？高并发高可用不是需求？\n我感觉你自己把需求理解为“功能”了。","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1638326890,"ip_address":"","comment_id":324046,"utype":1}],"discussion_count":3,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"“架构设计的主要目的是为了解决软件复杂度带来的问题”——这是一个病句！架构设计应该是用最小的代价满足系统的需求。请问系统在设计开发之前哪来的复杂度？只有需求。相反有的时候是为了满足高并发高可用等需求而引入复杂度。比如作者的例子：学生管理系统，如果只是一个大学几万用户使用，那么架构设计就很简单，但是如果全国大学使用，几千万用户，那么就有高并发要求，就要引入复杂的架构设计。所以架构设计常常引入了复杂度，换来的是高并发、高可用、可维护、可扩展等好处，但是如果这些好处是你的系统不需要的，那么就是一种浪费和过度设计。 ","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535644,"discussion_content":"哈哈，还是总监厉害啊 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638501935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321920,"user_name":"ting.stu","can_delete":false,"product_type":"c1","uid":1127581,"ip_address":"","ucode":"111FA8B6F426FC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo4dq6xsbAeYcwz6gfNjvUeNicBCNPosLHtDugXRTR3q4Vk7fgSVUyzCJh7JFibtv0Zuw7tZ3tJahLQ/132","comment_is_top":false,"comment_ctime":1637110938,"is_pvip":false,"replies":[{"id":117028,"content":"如果业务功能需求太复杂，导致架构设计成本很高，有时候也可以适当的调整业务的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1637309140,"ip_address":"","comment_id":321920,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"架构设计首先考虑业务功能需求，然后再解决软件复杂性的业务","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534974,"discussion_content":"你这个意思，复杂度是设计后才引入的？需求本身无所谓复杂和不复杂？高并发高可用不是需求？\n我感觉你自己把需求理解为“功能”了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638326890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2852959,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/88/5f/efeaf6e3.jpg","nickname":"渔村小裁缝","note":"","ucode":"ACFDC7744EDE59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":534992,"discussion_content":"--1. 高并发和高可用属于非功能性需求，也是属于需求的一种，请认真看我的评论，我的原评论里就说了高并发是需求。--2. 如果业务逻辑本身复杂，也不是靠架构设计去解决的，比如我之前做过一个保险系统，保费的计算涉及到投保人的职业、年龄等将近一百个参数，计算逻辑本身复杂，架构设计能把它变简单吗？--3. 是不是架构设计引入了复杂度？很多情况下确实是这样。请问单体应用架构和微服务架构哪一个复杂？毫无疑问是微服务复杂，但是虽然复杂了，却解决了单点失败的风险，可以实现高并发高可用，请问说设计引入了复杂度难道有错吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638329124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534974,"ip_address":"","group_id":0},"score":534992,"extra":""}]},{"author":{"id":1424631,"avatar":"https://static001.geekbang.org/account/avatar/00/15/bc/f7/3ed0d1b7.jpg","nickname":"CZcz","note":"","ucode":"36C243050AF403","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592305,"discussion_content":"单体到微服务的架构设计是转移了复杂度，单体应用的复杂度在于扩展难、维护难、部署难，微服务的复杂度在于网络，数据一致性等。看取舍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667295991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314003,"user_name":"顾琪瑶","can_delete":false,"product_type":"c1","uid":1179515,"ip_address":"","ucode":"71F3F122441915","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/7b/cbe07b5c.jpg","comment_is_top":false,"comment_ctime":1632798304,"is_pvip":false,"replies":[{"id":113842,"content":"你说的对，但是感觉有点啰嗦啊 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1632970046,"ip_address":"","comment_id":314003,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题\n我想是不是加几个字会更好, 架构设计的主要目的是为了解决软件系统生命周期内带来的复杂度问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531424,"discussion_content":"如果业务功能需求太复杂，导致架构设计成本很高，有时候也可以适当的调整业务的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637309140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296588,"user_name":"小鱼","can_delete":false,"product_type":"c1","uid":1248115,"ip_address":"","ucode":"022B6D5D69DB68","user_header":"https://static001.geekbang.org/account/avatar/00/13/0b/73/44fe2df9.jpg","comment_is_top":false,"comment_ctime":1623053779,"is_pvip":false,"replies":[{"id":107759,"content":"敏捷开发其实在很多公司都不适应，也不适应很多系统，例如我在菊厂做电信设备，就不可能用敏捷开发；BigTable、HBase这些系统，也不可能用敏捷开发模式。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1623115396,"ip_address":"","comment_id":296588,"utype":1}],"discussion_count":1,"race_medal":0,"score":9,"product_id":100006601,"comment_content":"我在看这篇文章之前想到的软件架构的目的\n1 解决软件的复杂性\n2 提升开发效率\n3 保障可扩展，高可用\n回过头来再看看，软件架构和敏捷开发确实是个悖论。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527543,"discussion_content":"你说的对，但是感觉有点啰嗦啊 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632970046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294125,"user_name":"马楚豪","can_delete":false,"product_type":"c1","uid":2431885,"ip_address":"","ucode":"EEE2A7066937FE","user_header":"","comment_is_top":false,"comment_ctime":1621776212,"is_pvip":false,"replies":[{"id":106790,"content":"很好的案例","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1621905076,"ip_address":"","comment_id":294125,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"架构主要是为了解决软件复杂度带来的问题，我做的是医疗器械的嵌入式软件，其业务并不复杂，并发非常低，几乎不需要考虑性能的问题，在数据库交互的部分就直接全用ORM甚至用AOP来包装事务的开始与提交；但在与仪器的硬件控制打交道的部分有很强的稳定性要求，因此在设计时考虑把控制部分的组件与用户使用的带界面软件拆分，做进程的分离。","like_count":0},{"had_liked":false,"id":290361,"user_name":"Geek_c338d5","can_delete":false,"product_type":"c1","uid":2593173,"ip_address":"","ucode":"4D1C27DB8C5CD8","user_header":"","comment_is_top":false,"comment_ctime":1619514718,"is_pvip":false,"replies":[{"id":105249,"content":"是的，降低复杂度，但不能完全消除复杂度","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1619524014,"ip_address":"","comment_id":290361,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"架构就是让复杂的东西变得简单","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520518,"discussion_content":"很好的案例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621905076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289803,"user_name":"麦麦","can_delete":false,"product_type":"c1","uid":2471742,"ip_address":"","ucode":"D012FEA2F55520","user_header":"https://static001.geekbang.org/account/avatar/00/25/b7/3e/7d93176e.jpg","comment_is_top":false,"comment_ctime":1619180597,"is_pvip":false,"replies":[{"id":105124,"content":"不一定是复杂度最小，如果你的团队技术实力很强，自研一个复杂度高的系统也是可以了。\n","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1619275785,"ip_address":"","comment_id":289803,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题\n\n公式：(业务+团队经验+成本+资源+进度+安全性+性能+高可用+可扩展性)x架构=复杂度\n\n没有最好的架构，只有合适的架构\n复杂度最小就是最合适的架构🌚🌚","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519185,"discussion_content":"是的，降低复杂度，但不能完全消除复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619524014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288989,"user_name":"night","can_delete":false,"product_type":"c1","uid":1204168,"ip_address":"","ucode":"03B3C955092C03","user_header":"https://static001.geekbang.org/account/avatar/00/12/5f/c8/13aa8aa9.jpg","comment_is_top":false,"comment_ctime":1618810880,"is_pvip":false,"replies":[{"id":104892,"content":"哈哈，完全正确，自顶向下，逐步细化，而不是上来就讲一大堆具体的技术。\n\n如果上来就讲一大堆具体技术，你学的时候可能觉得自己学到了很多，但是自己用的时候就会一脸懵逼，不会结合自己的业务和情况来用。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618880461,"ip_address":"","comment_id":288989,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"看到这里，结合后面课程的目录，我理解老师是这样组织课程的：\n\n架构设计究竟是怎么来的，为了解决什么问题（背景和目的）\n解决软件系统的复杂度带来的问题，其过程往往伴随有时间、人力、资源等方面的约束，需要做出综合的判断和决策。但回归本质，还是为了解决复杂度的问题。\n\n上面说的复杂度，又是怎么来的（复杂度的主要来源）：\n* 要求系统有高的性能\n* 要求系统有高的可用性\n* 要求系统有高的可扩展性\n* 要求系统是低成本、安全、...的\n\n\n针对此，架构设计的一般性的原则、思路和流程是：\n\n\n具体到不同源的复杂度，通常还有不同的常见的解法\n\n1. 在高性能方面\n\n2. 在高可用方面\n\n3. 在可扩展方面\n\n以上，在工程中的实际案例是：…\n\n最后，祝大家都从达成自己的梦想。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519023,"discussion_content":"不一定是复杂度最小，如果你的团队技术实力很强，自研一个复杂度高的系统也是可以了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619275785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288696,"user_name":"Geek_b6e6bc","can_delete":false,"product_type":"c1","uid":2559741,"ip_address":"","ucode":"0F09EFE0BF48BD","user_header":"","comment_is_top":false,"comment_ctime":1618629598,"is_pvip":false,"replies":[{"id":104808,"content":"是的，并不是所有系统都一定在高可用方面做到很好，要结合业务需求来看具体的复杂度是什么","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618672886,"ip_address":"","comment_id":288696,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"老师 你好 看了你在分析学生管理系统的时候的一些方法和思路后，跟我之前的对比后，有些分享 我之前去考虑问题的思路是，追求稳定，极致，就是尽量不允许在系统运行过程当中出现宕机，用户访问不了的情况，或者系统出现bug的情况，为此我会设计很多方案来解决不稳定情况 出现bug情况 宕机情况的应对方案，针对我的这种情况 需要调整嘛 是一个思维上的误区嘛 请假一下","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518711,"discussion_content":"是的，并不是所有系统都一定在高可用方面做到很好，要结合业务需求来看具体的复杂度是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618672886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288562,"user_name":"九五二七","can_delete":false,"product_type":"c1","uid":1358490,"ip_address":"","ucode":"D15DFBC2E14E4F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/9a/73de36cb.jpg","comment_is_top":false,"comment_ctime":1618538492,"is_pvip":false,"replies":[{"id":104745,"content":"哈，后面还有更多精彩内容哦 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618562009,"ip_address":"","comment_id":288562,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"认真看了一下，然后思考了我们的架构。感觉自己站的高度提高了。收获颇多啊。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518711,"discussion_content":"是的，并不是所有系统都一定在高可用方面做到很好，要结合业务需求来看具体的复杂度是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618672886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286467,"user_name":"WESTWALL","can_delete":false,"product_type":"c1","uid":1434423,"ip_address":"","ucode":"295A030F9D3BF4","user_header":"https://static001.geekbang.org/account/avatar/00/15/e3/37/c132802f.jpg","comment_is_top":false,"comment_ctime":1617332427,"is_pvip":false,"replies":[{"id":104078,"content":"这个认知上的突破，专栏已经值了 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1617370721,"ip_address":"","comment_id":286467,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"曾经的一个误区是，手里握把锤子，看哪都是钉子。老师“复杂度”的表述令我醍醐灌顶。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518663,"discussion_content":"哈，后面还有更多精彩内容哦 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618562009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285868,"user_name":"泽泽_2010","can_delete":false,"product_type":"c1","uid":1237883,"ip_address":"","ucode":"D6424E98BB5A18","user_header":"https://static001.geekbang.org/account/avatar/00/12/e3/7b/463312ad.jpg","comment_is_top":false,"comment_ctime":1617059282,"is_pvip":false,"replies":[{"id":103784,"content":"注意不是“软件工程”的复杂度，而是“软件系统”的复杂度，软件工程这个词语有特定的意思。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1617068175,"ip_address":"","comment_id":285868,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"看了此篇，才认识到架构设计的目的，架构设计的目的是为解决软件工程的复杂性。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517997,"discussion_content":"这个认知上的突破，专栏已经值了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617370721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281906,"user_name":"suntj","can_delete":false,"product_type":"c1","uid":2312457,"ip_address":"","ucode":"4A0A9F7619E765","user_header":"https://static001.geekbang.org/account/avatar/00/23/49/09/bc54d395.jpg","comment_is_top":false,"comment_ctime":1614942366,"is_pvip":false,"replies":[{"id":102327,"content":"你这说法有点武断了吧，你是不是以为选课一定是所有学生都同一时间来选课？","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1614948874,"ip_address":"","comment_id":281906,"utype":1}],"discussion_count":2,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"如果碰到学生选课，必然会宕机","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517809,"discussion_content":"注意不是“软件工程”的复杂度，而是“软件系统”的复杂度，软件工程这个词语有特定的意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617068175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278630,"user_name":"谢作作的男人","can_delete":false,"product_type":"c1","uid":1909094,"ip_address":"","ucode":"4F220EA8AEBFB9","user_header":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","comment_is_top":false,"comment_ctime":1613140770,"is_pvip":false,"replies":[{"id":101368,"content":"非常详细的分析，点赞。\n\n从你的描述来看，我看到一些问题：\n1）性能方面有点过度设计：这个访问量级还不需要引入本地缓存，本地缓存会大大提升系统复杂度\n2）高可用方面直接用地址指定，风险较大，虽然这个量级可以不上微服务全家桶，但至少用nginx做个负载均衡来保证高可用；\n3）可扩展这方面感觉没有系统的领域设计，也没有划分好逻辑模块，也没有明确的规范，是一个很大的问题","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1613483430,"ip_address":"","comment_id":278630,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"一款目前来说本地交付的敏捷任务管理系统，类似婵道\n性能方面：要求低延迟，毫秒级至秒级。百人至千人使用规模，千人团队每日访问量预估在20～40万，读多写少，周一早上为高峰期，有一定并发要求，不能出现由于并发导致的宕机情况。目前使用mysql、druid存储用户操作等历史数据，redis作为缓存并且保证数据持久化，保证数据不能丢失，另外为了进一步的低延迟，引入冷门的本地缓存方案Hollow（带来很大的复杂度）\n高可用方面：要求不是太高，升级时可停机升级，但不能因为并发造成宕机。目前是部署多个服务，并没有使用业界的一些微服务方案，服务之间使用指定地址的方式调用，也没有任何容错方案。\n高可扩方面：要求高可扩，保证维护成本。但恰恰相反，我们的架构师喜欢把事情复杂化，喜欢在代码结构上做过度设计或者强行设计，同时一些基本点又无法保证\n- 没有规范\n  - 目录结构混乱，新建一个类都不知道放在哪里\n  - 混用异常，有时候捕获，有时候抛出\n- 命名问题。瞎命名，业务概念不统一，有时叫这个名，有时叫那个名\n- 滥用函数式风格。一大串函数式代码，同时没有注释，方法命名也很糟糕，总之就是看不懂，也没法调试\n- 滥用继承，强用继承，存在很多强转现象\n- 服务之间调用采用  写死地址的方式调用，不透明，返回的就是一个JSONObject，需要你自己去反序列化\n总之维护成本很高，新增一个功能或者修复bug，要调试很久才能找到需求改动点，然而改动可能只需要一行。\n数据质量方面：\n- 好像挺高的，偶尔丢数据可以，但统计方面的数据不能对不上\n- 无法保证分布式事务","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515453,"discussion_content":"非常详细的分析，点赞。\n\n从你的描述来看，我看到一些问题：\n1）性能方面有点过度设计：这个访问量级还不需要引入本地缓存，本地缓存会大大提升系统复杂度\n2）高可用方面直接用地址指定，风险较大，虽然这个量级可以不上微服务全家桶，但至少用nginx做个负载均衡来保证高可用；\n3）可扩展这方面感觉没有系统的领域设计，也没有划分好逻辑模块，也没有明确的规范，是一个很大的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613483430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294125,"user_name":"马楚豪","can_delete":false,"product_type":"c1","uid":2431885,"ip_address":"","ucode":"EEE2A7066937FE","user_header":"","comment_is_top":false,"comment_ctime":1621776212,"is_pvip":false,"replies":[{"id":106790,"content":"很好的案例","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1621905076,"ip_address":"","comment_id":294125,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"架构主要是为了解决软件复杂度带来的问题，我做的是医疗器械的嵌入式软件，其业务并不复杂，并发非常低，几乎不需要考虑性能的问题，在数据库交互的部分就直接全用ORM甚至用AOP来包装事务的开始与提交；但在与仪器的硬件控制打交道的部分有很强的稳定性要求，因此在设计时考虑把控制部分的组件与用户使用的带界面软件拆分，做进程的分离。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520518,"discussion_content":"很好的案例","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621905076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290361,"user_name":"Geek_c338d5","can_delete":false,"product_type":"c1","uid":2593173,"ip_address":"","ucode":"4D1C27DB8C5CD8","user_header":"","comment_is_top":false,"comment_ctime":1619514718,"is_pvip":false,"replies":[{"id":105249,"content":"是的，降低复杂度，但不能完全消除复杂度","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1619524014,"ip_address":"","comment_id":290361,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"架构就是让复杂的东西变得简单","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519185,"discussion_content":"是的，降低复杂度，但不能完全消除复杂度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619524014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289803,"user_name":"麦麦","can_delete":false,"product_type":"c1","uid":2471742,"ip_address":"","ucode":"D012FEA2F55520","user_header":"https://static001.geekbang.org/account/avatar/00/25/b7/3e/7d93176e.jpg","comment_is_top":false,"comment_ctime":1619180597,"is_pvip":false,"replies":[{"id":105124,"content":"不一定是复杂度最小，如果你的团队技术实力很强，自研一个复杂度高的系统也是可以了。\n","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1619275785,"ip_address":"","comment_id":289803,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题\n\n公式：(业务+团队经验+成本+资源+进度+安全性+性能+高可用+可扩展性)x架构=复杂度\n\n没有最好的架构，只有合适的架构\n复杂度最小就是最合适的架构🌚🌚","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519023,"discussion_content":"不一定是复杂度最小，如果你的团队技术实力很强，自研一个复杂度高的系统也是可以了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619275785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288989,"user_name":"night","can_delete":false,"product_type":"c1","uid":1204168,"ip_address":"","ucode":"03B3C955092C03","user_header":"https://static001.geekbang.org/account/avatar/00/12/5f/c8/13aa8aa9.jpg","comment_is_top":false,"comment_ctime":1618810880,"is_pvip":false,"replies":[{"id":104892,"content":"哈哈，完全正确，自顶向下，逐步细化，而不是上来就讲一大堆具体的技术。\n\n如果上来就讲一大堆具体技术，你学的时候可能觉得自己学到了很多，但是自己用的时候就会一脸懵逼，不会结合自己的业务和情况来用。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618880461,"ip_address":"","comment_id":288989,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"看到这里，结合后面课程的目录，我理解老师是这样组织课程的：\n\n架构设计究竟是怎么来的，为了解决什么问题（背景和目的）\n解决软件系统的复杂度带来的问题，其过程往往伴随有时间、人力、资源等方面的约束，需要做出综合的判断和决策。但回归本质，还是为了解决复杂度的问题。\n\n上面说的复杂度，又是怎么来的（复杂度的主要来源）：\n* 要求系统有高的性能\n* 要求系统有高的可用性\n* 要求系统有高的可扩展性\n* 要求系统是低成本、安全、...的\n\n\n针对此，架构设计的一般性的原则、思路和流程是：\n\n\n具体到不同源的复杂度，通常还有不同的常见的解法\n\n1. 在高性能方面\n\n2. 在高可用方面\n\n3. 在可扩展方面\n\n以上，在工程中的实际案例是：…\n\n最后，祝大家都从达成自己的梦想。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518786,"discussion_content":"哈哈，完全正确，自顶向下，逐步细化，而不是上来就讲一大堆具体的技术。\n\n如果上来就讲一大堆具体技术，你学的时候可能觉得自己学到了很多，但是自己用的时候就会一脸懵逼，不会结合自己的业务和情况来用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618880461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288696,"user_name":"Geek_b6e6bc","can_delete":false,"product_type":"c1","uid":2559741,"ip_address":"","ucode":"0F09EFE0BF48BD","user_header":"","comment_is_top":false,"comment_ctime":1618629598,"is_pvip":false,"replies":[{"id":104808,"content":"是的，并不是所有系统都一定在高可用方面做到很好，要结合业务需求来看具体的复杂度是什么","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618672886,"ip_address":"","comment_id":288696,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"老师 你好 看了你在分析学生管理系统的时候的一些方法和思路后，跟我之前的对比后，有些分享 我之前去考虑问题的思路是，追求稳定，极致，就是尽量不允许在系统运行过程当中出现宕机，用户访问不了的情况，或者系统出现bug的情况，为此我会设计很多方案来解决不稳定情况 出现bug情况 宕机情况的应对方案，针对我的这种情况 需要调整嘛 是一个思维上的误区嘛 请假一下","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518786,"discussion_content":"哈哈，完全正确，自顶向下，逐步细化，而不是上来就讲一大堆具体的技术。\n\n如果上来就讲一大堆具体技术，你学的时候可能觉得自己学到了很多，但是自己用的时候就会一脸懵逼，不会结合自己的业务和情况来用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618880461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288562,"user_name":"九五二七","can_delete":false,"product_type":"c1","uid":1358490,"ip_address":"","ucode":"D15DFBC2E14E4F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/9a/73de36cb.jpg","comment_is_top":false,"comment_ctime":1618538492,"is_pvip":false,"replies":[{"id":104745,"content":"哈，后面还有更多精彩内容哦 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1618562009,"ip_address":"","comment_id":288562,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"认真看了一下，然后思考了我们的架构。感觉自己站的高度提高了。收获颇多啊。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518663,"discussion_content":"哈，后面还有更多精彩内容哦 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618562009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286467,"user_name":"WESTWALL","can_delete":false,"product_type":"c1","uid":1434423,"ip_address":"","ucode":"295A030F9D3BF4","user_header":"https://static001.geekbang.org/account/avatar/00/15/e3/37/c132802f.jpg","comment_is_top":false,"comment_ctime":1617332427,"is_pvip":false,"replies":[{"id":104078,"content":"这个认知上的突破，专栏已经值了 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1617370721,"ip_address":"","comment_id":286467,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"曾经的一个误区是，手里握把锤子，看哪都是钉子。老师“复杂度”的表述令我醍醐灌顶。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517997,"discussion_content":"这个认知上的突破，专栏已经值了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617370721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285868,"user_name":"泽泽_2010","can_delete":false,"product_type":"c1","uid":1237883,"ip_address":"","ucode":"D6424E98BB5A18","user_header":"https://static001.geekbang.org/account/avatar/00/12/e3/7b/463312ad.jpg","comment_is_top":false,"comment_ctime":1617059282,"is_pvip":false,"replies":[{"id":103784,"content":"注意不是“软件工程”的复杂度，而是“软件系统”的复杂度，软件工程这个词语有特定的意思。","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1617068175,"ip_address":"","comment_id":285868,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"看了此篇，才认识到架构设计的目的，架构设计的目的是为解决软件工程的复杂性。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517809,"discussion_content":"注意不是“软件工程”的复杂度，而是“软件系统”的复杂度，软件工程这个词语有特定的意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617068175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281906,"user_name":"suntj","can_delete":false,"product_type":"c1","uid":2312457,"ip_address":"","ucode":"4A0A9F7619E765","user_header":"https://static001.geekbang.org/account/avatar/00/23/49/09/bc54d395.jpg","comment_is_top":false,"comment_ctime":1614942366,"is_pvip":false,"replies":[{"id":102327,"content":"你这说法有点武断了吧，你是不是以为选课一定是所有学生都同一时间来选课？","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1614948874,"ip_address":"","comment_id":281906,"utype":1}],"discussion_count":2,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"如果碰到学生选课，必然会宕机","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516547,"discussion_content":"你这说法有点武断了吧，你是不是以为选课一定是所有学生都同一时间来选课？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614948874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2312457,"avatar":"https://static001.geekbang.org/account/avatar/00/23/49/09/bc54d395.jpg","nickname":"suntj","note":"","ucode":"4A0A9F7619E765","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361288,"discussion_content":"谢谢作者回复，大学时期的确经历过，当选择体育课，好的课程（羽毛球、乒乓球）秒杀般的抢空，剩下就剩足球等不好课程。这个时候就会出现请求不可用等情况发生","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616637743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278630,"user_name":"谢作作的男人","can_delete":false,"product_type":"c1","uid":1909094,"ip_address":"","ucode":"4F220EA8AEBFB9","user_header":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","comment_is_top":false,"comment_ctime":1613140770,"is_pvip":false,"replies":[{"id":101368,"content":"非常详细的分析，点赞。\n\n从你的描述来看，我看到一些问题：\n1）性能方面有点过度设计：这个访问量级还不需要引入本地缓存，本地缓存会大大提升系统复杂度\n2）高可用方面直接用地址指定，风险较大，虽然这个量级可以不上微服务全家桶，但至少用nginx做个负载均衡来保证高可用；\n3）可扩展这方面感觉没有系统的领域设计，也没有划分好逻辑模块，也没有明确的规范，是一个很大的问题","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1613483430,"ip_address":"","comment_id":278630,"utype":1}],"discussion_count":1,"race_medal":0,"score":10,"product_id":100006601,"comment_content":"一款目前来说本地交付的敏捷任务管理系统，类似婵道\n性能方面：要求低延迟，毫秒级至秒级。百人至千人使用规模，千人团队每日访问量预估在20～40万，读多写少，周一早上为高峰期，有一定并发要求，不能出现由于并发导致的宕机情况。目前使用mysql、druid存储用户操作等历史数据，redis作为缓存并且保证数据持久化，保证数据不能丢失，另外为了进一步的低延迟，引入冷门的本地缓存方案Hollow（带来很大的复杂度）\n高可用方面：要求不是太高，升级时可停机升级，但不能因为并发造成宕机。目前是部署多个服务，并没有使用业界的一些微服务方案，服务之间使用指定地址的方式调用，也没有任何容错方案。\n高可扩方面：要求高可扩，保证维护成本。但恰恰相反，我们的架构师喜欢把事情复杂化，喜欢在代码结构上做过度设计或者强行设计，同时一些基本点又无法保证\n- 没有规范\n  - 目录结构混乱，新建一个类都不知道放在哪里\n  - 混用异常，有时候捕获，有时候抛出\n- 命名问题。瞎命名，业务概念不统一，有时叫这个名，有时叫那个名\n- 滥用函数式风格。一大串函数式代码，同时没有注释，方法命名也很糟糕，总之就是看不懂，也没法调试\n- 滥用继承，强用继承，存在很多强转现象\n- 服务之间调用采用  写死地址的方式调用，不透明，返回的就是一个JSONObject，需要你自己去反序列化\n总之维护成本很高，新增一个功能或者修复bug，要调试很久才能找到需求改动点，然而改动可能只需要一行。\n数据质量方面：\n- 好像挺高的，偶尔丢数据可以，但统计方面的数据不能对不上\n- 无法保证分布式事务","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516547,"discussion_content":"你这说法有点武断了吧，你是不是以为选课一定是所有学生都同一时间来选课？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614948874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2312457,"avatar":"https://static001.geekbang.org/account/avatar/00/23/49/09/bc54d395.jpg","nickname":"suntj","note":"","ucode":"4A0A9F7619E765","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361288,"discussion_content":"谢谢作者回复，大学时期的确经历过，当选择体育课，好的课程（羽毛球、乒乓球）秒杀般的抢空，剩下就剩足球等不好课程。这个时候就会出现请求不可用等情况发生","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616637743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276109,"user_name":"RMB","can_delete":false,"product_type":"c1","uid":2272121,"ip_address":"","ucode":"5D1F54B93EB5D3","user_header":"https://static001.geekbang.org/account/avatar/00/22/ab/79/e293456e.jpg","comment_is_top":false,"comment_ctime":1611796375,"is_pvip":false,"replies":[{"id":100263,"content":"“面向复杂度”是一个通用的方法和思路 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1611810343,"ip_address":"","comment_id":276109,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"大到架构设计，小到系统某个需求的概要设计，性质都是一样的，都是从最难啃的地方着手，回想起前段时间刚开发的需求，自己也是这么做的，效率很高，质量也很高，感谢李老师的点醒","like_count":0},{"had_liked":false,"id":270758,"user_name":"河南一线天","can_delete":false,"product_type":"c1","uid":1641026,"ip_address":"","ucode":"9D8FB86A577D2E","user_header":"https://static001.geekbang.org/account/avatar/00/19/0a/42/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1609241582,"is_pvip":false,"replies":[{"id":98332,"content":"按图索骥就可以了，后面会讲到，包括高性能、高可用、可扩展、规模、成本、安全","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1609486299,"ip_address":"","comment_id":270758,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"架构设计的目的是解决软件复杂度，如何找出软件的复杂度是变成了重中之重，找软件复杂度有没有什么方法论，还是要靠自己的经验进行摸索。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514602,"discussion_content":"“面向复杂度”是一个通用的方法和思路 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611810343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267884,"user_name":"石头汤","can_delete":false,"product_type":"c1","uid":1022282,"ip_address":"","ucode":"45E4578E54F585","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/4a/bdf26d5c.jpg","comment_is_top":false,"comment_ctime":1607966126,"is_pvip":false,"replies":[{"id":97292,"content":"你的说法只适合业务架构，不适合中间件、平台、基础框架这些架构","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1607997355,"ip_address":"","comment_id":267884,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"架构设计就是通过划分子业务，让不同业务解耦，相同的业务内聚，达到降低复杂度，可方便横向或纵向扩展业务","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512741,"discussion_content":"按图索骥就可以了，后面会讲到，包括高性能、高可用、可扩展、规模、成本、安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609486299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248193,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1460221,"ip_address":"","ucode":"F8E52DDD7D48CB","user_header":"https://static001.geekbang.org/account/avatar/00/16/47/fd/685bff81.jpg","comment_is_top":false,"comment_ctime":1600056424,"is_pvip":false,"replies":[{"id":91219,"content":"猜对了，架构设计原则正在等你阅读������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1600141008,"ip_address":"","comment_id":248193,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"架构设计如何解决软件复杂度带来的问题，同时还需要结合现实业务场景及团队状况。正如老师所抛出的观点，需要在高可用、高性能、可扩展性等等其他方面作取舍。所以猜测老师接下来应该是就如何取舍进行阐述","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511774,"discussion_content":"你的说法只适合业务架构，不适合中间件、平台、基础框架这些架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607997355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227822,"user_name":"Yerik","can_delete":false,"product_type":"c1","uid":1799962,"ip_address":"","ucode":"FA93A7A05FAD16","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqtKIFoCqqJvPmc2DJXptZJTC6B3kz2v3XgR4hN7mRicUEBogwy62Kp7Ubc2kcvnRvCz1TYOr62YIQ/132","comment_is_top":false,"comment_ctime":1592488726,"is_pvip":false,"replies":[{"id":83984,"content":"哈哈，面向客户设计，面向标书设计一般都是这样","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1592523343,"ip_address":"","comment_id":227822,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"联想到上家公司做的一个公司自用的crm系统，用户量不足三百人，也用上了微服务架构，把里面几个模块拆出来单独做成了子系统……","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505581,"discussion_content":"猜对了，架构设计原则正在等你阅读������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600141008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221049,"user_name":"美国的华莱士","can_delete":false,"product_type":"c1","uid":1217699,"ip_address":"","ucode":"879C4FD53C72C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/94/a3/c8bcb28b.jpg","comment_is_top":false,"comment_ctime":1590391679,"is_pvip":false,"replies":[{"id":81813,"content":"合适最重要","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1590641162,"ip_address":"","comment_id":221049,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"用业务的角度来看架构的话,结合自己的经验来看的话:\n业务为了快速适应消费者需求,为了赶一波风口产品的架构,这种架构非常简单,简单到别人都已经帮你做好了,你来个二次开发就行了,你甚至简单看一遍数据库表就知道这里面的主要业务结构是什么.\n以上,听上去肯定会显得很粗糙,但是很多公司刚开始真的就是这样,因为老板没那么多资金一下子砸进去,没业务支撑的架构再出色在他看来也是画大饼,还不如他自己画,至少自己画不花钱.","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498797,"discussion_content":"哈哈，面向客户设计，面向标书设计一般都是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592523343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202655,"user_name":"荣码人生","can_delete":false,"product_type":"c1","uid":1397399,"ip_address":"","ucode":"6BD1A1991B484D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEL9JoquW6ia5A9AUkt8Ah51WQsqlpWnzwLcZwXKycAricKGOeqHf2JrVHxkHIjx5LuHnm8fJ1bJVLlA/132","comment_is_top":false,"comment_ctime":1586046635,"is_pvip":false,"replies":[{"id":76107,"content":"知行合一效果最好","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1586255648,"ip_address":"","comment_id":202655,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"软件设计的目的主要是解决软件复杂度带来的问题。以下分析这五样和aws well architect很像，所以不管基于本地还是云平台，这五方面都是适用的。\n目前在做是公司管理系统。\n性能: 用户是公司内部人员，用户数2000+，当初设计前后端分离，让后台api可以部署到多个服务器，释放后台能力，前端使用Apache已经足够应付。\n可扩展性: 如前面说的，前后端已分离，后端可无限部署\n高可用：机器故障，机房故障，分为web层，app层，数据层，app层是无状态，所以我们使用缓存来存储登陆信息等状态数据，因此web层和app层只要多台部署即可，而缓存需要更高可用性，然后数据层做读写分离，主从备份\n安全性：登陆安全使用各种加密算法，甚至使用第三方校验工具，数据库对敏感信息字段进行加密。整体经营异地机房AB备份。\n成本：由于是公司核心业务，以上都能较好实现。\n谢谢老师让我们在结尾评论，不然光看，不结合自己情况去思考，真的很难把知识掌握。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496310,"discussion_content":"合适最重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590641162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175563,"user_name":"Jolin","can_delete":false,"product_type":"c1","uid":1406245,"ip_address":"","ucode":"65CBD25865EE03","user_header":"https://static001.geekbang.org/account/avatar/00/15/75/25/37ba8b1f.jpg","comment_is_top":false,"comment_ctime":1580744014,"is_pvip":false,"replies":[{"id":69947,"content":"先量化高压到底有多高","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1582192348,"ip_address":"","comment_id":175563,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"学生管理系统涉及选课，学期初的选修课都会带来一轮高压，设计时候真的不需要考虑性能么？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490647,"discussion_content":"知行合一效果最好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586255648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175165,"user_name":"Geek_8c3b7b","can_delete":false,"product_type":"c1","uid":1792779,"ip_address":"","ucode":"4770160AFCAF5F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VcxKjXed3ydDfMyOTXzNFnoQa1uQWMH3GDyhhAwKHPwPR1dGw9hNoaDjEKOjIz08e6lldPf2IKsv8rgzrWbSYQ/132","comment_is_top":false,"comment_ctime":1580585891,"is_pvip":false,"replies":[{"id":69948,"content":"差不多，专栏评论内容可以让你理解更深","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1582192379,"ip_address":"","comment_id":175165,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"老师，我把书看完了，现在发现评论区也是值得学习的地方。专栏和书还有啥区别，我需要听完专栏吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482800,"discussion_content":"先量化高压到底有多高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582192348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173928,"user_name":"大山力压besos","can_delete":false,"product_type":"c1","uid":1812529,"ip_address":"","ucode":"8DCA600F481AC6","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a8/31/67511d78.jpg","comment_is_top":false,"comment_ctime":1579787220,"is_pvip":false,"replies":[{"id":69951,"content":"先设计可行方案再进行取舍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1582192484,"ip_address":"","comment_id":173928,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"架构的目的就是通过进行分提炼重点然后进行取舍 不知是否可以这样认为","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482639,"discussion_content":"差不多，专栏评论内容可以让你理解更深","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582192379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276109,"user_name":"RMB","can_delete":false,"product_type":"c1","uid":2272121,"ip_address":"","ucode":"5D1F54B93EB5D3","user_header":"https://static001.geekbang.org/account/avatar/00/22/ab/79/e293456e.jpg","comment_is_top":false,"comment_ctime":1611796375,"is_pvip":false,"replies":[{"id":100263,"content":"“面向复杂度”是一个通用的方法和思路 ：）","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1611810343,"ip_address":"","comment_id":276109,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"大到架构设计，小到系统某个需求的概要设计，性质都是一样的，都是从最难啃的地方着手，回想起前段时间刚开发的需求，自己也是这么做的，效率很高，质量也很高，感谢李老师的点醒","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514602,"discussion_content":"“面向复杂度”是一个通用的方法和思路 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611810343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270758,"user_name":"河南一线天","can_delete":false,"product_type":"c1","uid":1641026,"ip_address":"","ucode":"9D8FB86A577D2E","user_header":"https://static001.geekbang.org/account/avatar/00/19/0a/42/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1609241582,"is_pvip":false,"replies":[{"id":98332,"content":"按图索骥就可以了，后面会讲到，包括高性能、高可用、可扩展、规模、成本、安全","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1609486299,"ip_address":"","comment_id":270758,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"架构设计的目的是解决软件复杂度，如何找出软件的复杂度是变成了重中之重，找软件复杂度有没有什么方法论，还是要靠自己的经验进行摸索。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512741,"discussion_content":"按图索骥就可以了，后面会讲到，包括高性能、高可用、可扩展、规模、成本、安全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609486299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267884,"user_name":"石头汤","can_delete":false,"product_type":"c1","uid":1022282,"ip_address":"","ucode":"45E4578E54F585","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/4a/bdf26d5c.jpg","comment_is_top":false,"comment_ctime":1607966126,"is_pvip":false,"replies":[{"id":97292,"content":"你的说法只适合业务架构，不适合中间件、平台、基础框架这些架构","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1607997355,"ip_address":"","comment_id":267884,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"架构设计就是通过划分子业务，让不同业务解耦，相同的业务内聚，达到降低复杂度，可方便横向或纵向扩展业务","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511774,"discussion_content":"你的说法只适合业务架构，不适合中间件、平台、基础框架这些架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607997355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248193,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1460221,"ip_address":"","ucode":"F8E52DDD7D48CB","user_header":"https://static001.geekbang.org/account/avatar/00/16/47/fd/685bff81.jpg","comment_is_top":false,"comment_ctime":1600056424,"is_pvip":false,"replies":[{"id":91219,"content":"猜对了，架构设计原则正在等你阅读������","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1600141008,"ip_address":"","comment_id":248193,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"架构设计如何解决软件复杂度带来的问题，同时还需要结合现实业务场景及团队状况。正如老师所抛出的观点，需要在高可用、高性能、可扩展性等等其他方面作取舍。所以猜测老师接下来应该是就如何取舍进行阐述","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505581,"discussion_content":"猜对了，架构设计原则正在等你阅读������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600141008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227822,"user_name":"Yerik","can_delete":false,"product_type":"c1","uid":1799962,"ip_address":"","ucode":"FA93A7A05FAD16","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqtKIFoCqqJvPmc2DJXptZJTC6B3kz2v3XgR4hN7mRicUEBogwy62Kp7Ubc2kcvnRvCz1TYOr62YIQ/132","comment_is_top":false,"comment_ctime":1592488726,"is_pvip":false,"replies":[{"id":83984,"content":"哈哈，面向客户设计，面向标书设计一般都是这样","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1592523343,"ip_address":"","comment_id":227822,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"联想到上家公司做的一个公司自用的crm系统，用户量不足三百人，也用上了微服务架构，把里面几个模块拆出来单独做成了子系统……","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498797,"discussion_content":"哈哈，面向客户设计，面向标书设计一般都是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592523343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221049,"user_name":"美国的华莱士","can_delete":false,"product_type":"c1","uid":1217699,"ip_address":"","ucode":"879C4FD53C72C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/94/a3/c8bcb28b.jpg","comment_is_top":false,"comment_ctime":1590391679,"is_pvip":false,"replies":[{"id":81813,"content":"合适最重要","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1590641162,"ip_address":"","comment_id":221049,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"用业务的角度来看架构的话,结合自己的经验来看的话:\n业务为了快速适应消费者需求,为了赶一波风口产品的架构,这种架构非常简单,简单到别人都已经帮你做好了,你来个二次开发就行了,你甚至简单看一遍数据库表就知道这里面的主要业务结构是什么.\n以上,听上去肯定会显得很粗糙,但是很多公司刚开始真的就是这样,因为老板没那么多资金一下子砸进去,没业务支撑的架构再出色在他看来也是画大饼,还不如他自己画,至少自己画不花钱.","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496310,"discussion_content":"合适最重要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590641162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202655,"user_name":"荣码人生","can_delete":false,"product_type":"c1","uid":1397399,"ip_address":"","ucode":"6BD1A1991B484D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEL9JoquW6ia5A9AUkt8Ah51WQsqlpWnzwLcZwXKycAricKGOeqHf2JrVHxkHIjx5LuHnm8fJ1bJVLlA/132","comment_is_top":false,"comment_ctime":1586046635,"is_pvip":false,"replies":[{"id":76107,"content":"知行合一效果最好","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1586255648,"ip_address":"","comment_id":202655,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"软件设计的目的主要是解决软件复杂度带来的问题。以下分析这五样和aws well architect很像，所以不管基于本地还是云平台，这五方面都是适用的。\n目前在做是公司管理系统。\n性能: 用户是公司内部人员，用户数2000+，当初设计前后端分离，让后台api可以部署到多个服务器，释放后台能力，前端使用Apache已经足够应付。\n可扩展性: 如前面说的，前后端已分离，后端可无限部署\n高可用：机器故障，机房故障，分为web层，app层，数据层，app层是无状态，所以我们使用缓存来存储登陆信息等状态数据，因此web层和app层只要多台部署即可，而缓存需要更高可用性，然后数据层做读写分离，主从备份\n安全性：登陆安全使用各种加密算法，甚至使用第三方校验工具，数据库对敏感信息字段进行加密。整体经营异地机房AB备份。\n成本：由于是公司核心业务，以上都能较好实现。\n谢谢老师让我们在结尾评论，不然光看，不结合自己情况去思考，真的很难把知识掌握。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490647,"discussion_content":"知行合一效果最好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586255648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175563,"user_name":"Jolin","can_delete":false,"product_type":"c1","uid":1406245,"ip_address":"","ucode":"65CBD25865EE03","user_header":"https://static001.geekbang.org/account/avatar/00/15/75/25/37ba8b1f.jpg","comment_is_top":false,"comment_ctime":1580744014,"is_pvip":false,"replies":[{"id":69947,"content":"先量化高压到底有多高","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1582192348,"ip_address":"","comment_id":175563,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"学生管理系统涉及选课，学期初的选修课都会带来一轮高压，设计时候真的不需要考虑性能么？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482800,"discussion_content":"先量化高压到底有多高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582192348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175165,"user_name":"Geek_8c3b7b","can_delete":false,"product_type":"c1","uid":1792779,"ip_address":"","ucode":"4770160AFCAF5F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VcxKjXed3ydDfMyOTXzNFnoQa1uQWMH3GDyhhAwKHPwPR1dGw9hNoaDjEKOjIz08e6lldPf2IKsv8rgzrWbSYQ/132","comment_is_top":false,"comment_ctime":1580585891,"is_pvip":false,"replies":[{"id":69948,"content":"差不多，专栏评论内容可以让你理解更深","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1582192379,"ip_address":"","comment_id":175165,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"老师，我把书看完了，现在发现评论区也是值得学习的地方。专栏和书还有啥区别，我需要听完专栏吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482639,"discussion_content":"差不多，专栏评论内容可以让你理解更深","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582192379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173928,"user_name":"大山力压besos","can_delete":false,"product_type":"c1","uid":1812529,"ip_address":"","ucode":"8DCA600F481AC6","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a8/31/67511d78.jpg","comment_is_top":false,"comment_ctime":1579787220,"is_pvip":false,"replies":[{"id":69951,"content":"先设计可行方案再进行取舍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1582192484,"ip_address":"","comment_id":173928,"utype":1}],"discussion_count":1,"race_medal":0,"score":11,"product_id":100006601,"comment_content":"架构的目的就是通过进行分提炼重点然后进行取舍 不知是否可以这样认为","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482244,"discussion_content":"先设计可行方案再进行取舍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582192484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170025,"user_name":"Nextep","can_delete":false,"product_type":"c1","uid":1210913,"ip_address":"","ucode":"6F34D8BDAC0015","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/21/7623745d.jpg","comment_is_top":false,"comment_ctime":1578494164,"is_pvip":false,"replies":[{"id":66113,"content":"赞同","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1578645898,"ip_address":"","comment_id":170025,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"从事软件开发多年，深感架构即选择，选择即放弃，get到你要选择的点很重要。","like_count":0},{"had_liked":false,"id":145810,"user_name":"小菜鸟学php","can_delete":false,"product_type":"c1","uid":1683755,"ip_address":"","ucode":"C417C76E18B062","user_header":"https://static001.geekbang.org/account/avatar/00/19/b1/2b/9406d19a.jpg","comment_is_top":false,"comment_ctime":1572388899,"is_pvip":false,"replies":[{"id":56320,"content":"重构或者重写","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1572405203,"ip_address":"","comment_id":145810,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"我们平台每天有几十万的流量，但是我们平台是10年前开发的，没有使用任何框架，里面代码改的乱七八糟，经常mysql慢查询。我一直想解决这些问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472585,"discussion_content":"重构或者重写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572405203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143340,"user_name":"乄恰似一种蜕变","can_delete":false,"product_type":"c1","uid":1452626,"ip_address":"","ucode":"E0E2E5F7CFF85A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PvD4ZpoY41ltqyxZq6Xxl0zmpb9jEPYibBRE5TSe87ec788cBHYWEYl2Rsy7BVZNjNFcWP95TCB4Iopv5HKWrjw/132","comment_is_top":false,"comment_ctime":1571670999,"is_pvip":false,"replies":[{"id":55447,"content":"除了nginx，Redis, MySQL几个集群外，其它都是业务模块集群，可以找老员工了解一下","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571747198,"ip_address":"","comment_id":143340,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件复杂度带来的问题\n我现在负责都系统都是用微服务拆分都，分成了10来个模块，反正现在用没搞清楚这架构为什么要这样做，后面慢慢去了解吧。\n1.Web Nginx服务器集群\n2.业务门户集群\n3.后台管理服务器\n4.定时任务服务器\n5.支付网关服务器集群\n6.短信服务器\n7.Redis集群\n8.MySQL集群\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471495,"discussion_content":"除了nginx，Redis, MySQL几个集群外，其它都是业务模块集群，可以找老员工了解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571747198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142842,"user_name":"lufeng","can_delete":false,"product_type":"c1","uid":1086762,"ip_address":"","ucode":"D99F3CEB948D1D","user_header":"https://static001.geekbang.org/account/avatar/00/10/95/2a/572fc97c.jpg","comment_is_top":false,"comment_ctime":1571557204,"is_pvip":false,"replies":[{"id":55451,"content":"有点虚","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571747307,"ip_address":"","comment_id":142842,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"架构的目的是解决软件系统复杂度带来的问题。这些问题是什么呢？包括高性能、高可用、高可扩展、低成本、安全和规模化。\n\n不同的人在不同的业务场景下，需要的架构都是不一样的。人、场景、架构应该都是定制的、个性的。\n\n让我想了了柔性架构概念，架构需要有刚的一面，核心不变的，也需要有柔的一面，应对变化的。呵呵\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471292,"discussion_content":"有点虚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571747307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142773,"user_name":"有米","can_delete":false,"product_type":"c1","uid":1005042,"ip_address":"","ucode":"C9A10B7A67BC12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","comment_is_top":false,"comment_ctime":1571503649,"is_pvip":false,"replies":[{"id":55452,"content":"这个不算高并发，每秒几百个对于计算机系统来说不高","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571747357,"ip_address":"","comment_id":142773,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"文中的例子还有一个高并发的问题。例如某个受欢迎的老师，放课的时候，大家都会集中在一起抢他的课！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471262,"discussion_content":"这个不算高并发，每秒几百个对于计算机系统来说不高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571747357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137120,"user_name":"小雨on the way","can_delete":false,"product_type":"c1","uid":1584476,"ip_address":"","ucode":"2E9296AE815803","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKuY1Mm5RhXIjtZld7HkdVCJibJbdibCPfJGAp43T0FM5kkmhU9ceAvK94hp3IjdvYW2vvKcI7W28GA/132","comment_is_top":false,"comment_ctime":1569629565,"is_pvip":false,"replies":[{"id":52922,"content":"架构师升级了么？😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1569828526,"ip_address":"","comment_id":137120,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"新公司现在的项目，本来出一个后台接口是一个很简单的事情，但是最初的架构设计为了所谓的规范，用一个接口做了所有接口的事情，通过接口的参数去转发到具体服务，并且还设计了一套很绕的转发规则，从前端传参到数据库的配置数据再到配置文件，经过层层映射，最后才到具体的服务类。这可能就是一个过度设计的例子吧😂。好在我们已经在逐步改造了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468947,"discussion_content":"架构师升级了么？😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569828526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132328,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1568085398,"is_pvip":true,"replies":[{"id":50640,"content":"先把会员拆出来","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1568118992,"ip_address":"","comment_id":132328,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"目前的业务系统，瓶颈在于，所有的主业务相关：订单，会员，都在一个系统中。\n并且该系统随着业务的发展，不能满足高可用的要求。\n原有系统扩展也不方便，主要复杂点在于订单。\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466880,"discussion_content":"先把会员拆出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568118992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120282,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1564819737,"is_pvip":false,"replies":[{"id":44278,"content":"这些复杂度主要影响工作量，不会影响架构设计方案，相反，成熟的架构师应该避免此类因素影响架构设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1564968716,"ip_address":"","comment_id":120282,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"        架构复杂度的来源广泛多样，有些是非技术因素导致的，但别小看了它们，其影响可能比技术还深远。\n        团队:发型的软件需要很多的人员参与，这些人员来自不同的组织，拥有不同的技术背景，不同的组织文化。根据康威定律，组织的架构会影响软件的架构。架构师需要根据组织的结构合理划分子系统。团队的组织越复杂子系统可能就越多，进而导致系统的复杂性上升。另一方面组织的不同技术背景必然会带来不同技术栈之间的协调和互通。适合于甲的互通技术可能不适用于乙，可能不得不因此去开发新的互通技术或者增加转换层。\n        利益:不同的组织往往代表了不同的利益。软件项目的最终成功不代表团队中各个组织都获得了成功。有的组织本身是项目交付类型的，项目成功了它就成功了；有的组织是技术创新类型的，它的所谓的成功是要在项目中引入新的技术。架构师不得不做出一定的妥协，在某些自系统上引入新技术，而新技术本身具有一定的复杂性，坑有多深是未知的，甚至到最后才发现是天坑，但为时已晚。不得不上各种临时规避措施导致架构耦合。\n        质量:即使有了很好的软件架构，糟糕的交付也可能让原本可以成功的软件项目失败。因此质量保证应该是架构师必须考虑的一个关键问题。为此不仅仅要求做好代码审查，还要引入一些标准，工作实践，原则或工具。特别是不同技术栈的子系统如何做CI浩大复杂的工作。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461269,"discussion_content":"这些复杂度主要影响工作量，不会影响架构设计方案，相反，成熟的架构师应该避免此类因素影响架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564968716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116282,"user_name":"润曦","can_delete":false,"product_type":"c1","uid":1260277,"ip_address":"","ucode":"21D36F7DEEB43D","user_header":"https://static001.geekbang.org/account/avatar/00/13/3a/f5/1fa34f88.jpg","comment_is_top":false,"comment_ctime":1563814054,"is_pvip":false,"replies":[{"id":42628,"content":"合适原则👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1563884809,"ip_address":"","comment_id":116282,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"我做架构设计的原则是 不追求高性能目的 以稳定以及可伸缩性为目的... 做好领域模型的设计 而领域模型设计是方便以后独立拆分……高内聚低耦合 是我一直坚守的设计思想","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459461,"discussion_content":"合适原则👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563884809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104019,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1560591740,"is_pvip":false,"replies":[{"id":37715,"content":"1. 高可用是最关键的特性\n2. 高性能的分析不太对，这个数据量级的性能压力很小，你要按照TPS来计算，即每秒处理的数据量\n3. 数据存储部分其实数据量不大，你计算一下按照G的单位去评估，同时也可以考虑讲历史数据归档","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1560684051,"ip_address":"","comment_id":104019,"utype":1}],"discussion_count":2,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"我公司目前在开发一套社区矫正人员管理系统，这套系统面向全省社区矫正人员，信息量较大，且监管人员每天要检查矫正人员的行踪和去向，系统每隔半小时从移动、电信公司那里获取矫正人员的位置信息，以便于监管人员每天进行监管。我从以下几方面来分析这套系统的架构：\n1.高可用：由于监管人员需要实时监管矫正人员，必须保证业务不能有中断，因此系统要做负载均衡以及容灾、后备等措施；\n2.高并发：由于每隔半小时获取全省矫正人员的位置信息，全省矫正人员约有3万多人，获取数据时的并发量较大，数据处理经常出现瓶颈，因此也是需要负载均衡；\n3.大数据：全省矫正人员3万多人，每隔半小时存贮一次位置信息，位置信息包括经、纬度坐标以及地名信息，一个矫正人员一天就要存贮48条记录，全省3万矫正人员每天大约要存150万记录，日记月累，普通数据库可能支撑不了，因此可考虑采用分布式数据库进行存贮，将数据分散存贮，或采用一些非关系型数据库，如HBASE、MongDB等进行存贮。\n\n以上是我一点比较粗浅的分析，请老师指正。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454093,"discussion_content":"1. 高可用是最关键的特性\n2. 高性能的分析不太对，这个数据量级的性能压力很小，你要按照TPS来计算，即每秒处理的数据量\n3. 数据存储部分其实数据量不大，你计算一下按照G的单位去评估，同时也可以考虑讲历史数据归档","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560684051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002591,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4c/5f/cd29a602.jpg","nickname":"可乐","note":"","ucode":"C1D62BE5AD5A49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647064,"discussion_content":"对于问题3，可以考虑对数据库按日期进行分表操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719389052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170025,"user_name":"Nextep","can_delete":false,"product_type":"c1","uid":1210913,"ip_address":"","ucode":"6F34D8BDAC0015","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/21/7623745d.jpg","comment_is_top":false,"comment_ctime":1578494164,"is_pvip":false,"replies":[{"id":66113,"content":"赞同","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1578645898,"ip_address":"","comment_id":170025,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"从事软件开发多年，深感架构即选择，选择即放弃，get到你要选择的点很重要。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480812,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578645898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145810,"user_name":"小菜鸟学php","can_delete":false,"product_type":"c1","uid":1683755,"ip_address":"","ucode":"C417C76E18B062","user_header":"https://static001.geekbang.org/account/avatar/00/19/b1/2b/9406d19a.jpg","comment_is_top":false,"comment_ctime":1572388899,"is_pvip":false,"replies":[{"id":56320,"content":"重构或者重写","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1572405203,"ip_address":"","comment_id":145810,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"我们平台每天有几十万的流量，但是我们平台是10年前开发的，没有使用任何框架，里面代码改的乱七八糟，经常mysql慢查询。我一直想解决这些问题。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480812,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578645898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143340,"user_name":"乄恰似一种蜕变","can_delete":false,"product_type":"c1","uid":1452626,"ip_address":"","ucode":"E0E2E5F7CFF85A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PvD4ZpoY41ltqyxZq6Xxl0zmpb9jEPYibBRE5TSe87ec788cBHYWEYl2Rsy7BVZNjNFcWP95TCB4Iopv5HKWrjw/132","comment_is_top":false,"comment_ctime":1571670999,"is_pvip":false,"replies":[{"id":55447,"content":"除了nginx，Redis, MySQL几个集群外，其它都是业务模块集群，可以找老员工了解一下","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571747198,"ip_address":"","comment_id":143340,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件复杂度带来的问题\n我现在负责都系统都是用微服务拆分都，分成了10来个模块，反正现在用没搞清楚这架构为什么要这样做，后面慢慢去了解吧。\n1.Web Nginx服务器集群\n2.业务门户集群\n3.后台管理服务器\n4.定时任务服务器\n5.支付网关服务器集群\n6.短信服务器\n7.Redis集群\n8.MySQL集群\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472585,"discussion_content":"重构或者重写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572405203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142842,"user_name":"lufeng","can_delete":false,"product_type":"c1","uid":1086762,"ip_address":"","ucode":"D99F3CEB948D1D","user_header":"https://static001.geekbang.org/account/avatar/00/10/95/2a/572fc97c.jpg","comment_is_top":false,"comment_ctime":1571557204,"is_pvip":false,"replies":[{"id":55451,"content":"有点虚","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571747307,"ip_address":"","comment_id":142842,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"架构的目的是解决软件系统复杂度带来的问题。这些问题是什么呢？包括高性能、高可用、高可扩展、低成本、安全和规模化。\n\n不同的人在不同的业务场景下，需要的架构都是不一样的。人、场景、架构应该都是定制的、个性的。\n\n让我想了了柔性架构概念，架构需要有刚的一面，核心不变的，也需要有柔的一面，应对变化的。呵呵\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471495,"discussion_content":"除了nginx，Redis, MySQL几个集群外，其它都是业务模块集群，可以找老员工了解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571747198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142773,"user_name":"有米","can_delete":false,"product_type":"c1","uid":1005042,"ip_address":"","ucode":"C9A10B7A67BC12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","comment_is_top":false,"comment_ctime":1571503649,"is_pvip":false,"replies":[{"id":55452,"content":"这个不算高并发，每秒几百个对于计算机系统来说不高","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571747357,"ip_address":"","comment_id":142773,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"文中的例子还有一个高并发的问题。例如某个受欢迎的老师，放课的时候，大家都会集中在一起抢他的课！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471292,"discussion_content":"有点虚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571747307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137120,"user_name":"小雨on the way","can_delete":false,"product_type":"c1","uid":1584476,"ip_address":"","ucode":"2E9296AE815803","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKuY1Mm5RhXIjtZld7HkdVCJibJbdibCPfJGAp43T0FM5kkmhU9ceAvK94hp3IjdvYW2vvKcI7W28GA/132","comment_is_top":false,"comment_ctime":1569629565,"is_pvip":false,"replies":[{"id":52922,"content":"架构师升级了么？😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1569828526,"ip_address":"","comment_id":137120,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"新公司现在的项目，本来出一个后台接口是一个很简单的事情，但是最初的架构设计为了所谓的规范，用一个接口做了所有接口的事情，通过接口的参数去转发到具体服务，并且还设计了一套很绕的转发规则，从前端传参到数据库的配置数据再到配置文件，经过层层映射，最后才到具体的服务类。这可能就是一个过度设计的例子吧😂。好在我们已经在逐步改造了。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471262,"discussion_content":"这个不算高并发，每秒几百个对于计算机系统来说不高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571747357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132328,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1568085398,"is_pvip":true,"replies":[{"id":50640,"content":"先把会员拆出来","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1568118992,"ip_address":"","comment_id":132328,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"目前的业务系统，瓶颈在于，所有的主业务相关：订单，会员，都在一个系统中。\n并且该系统随着业务的发展，不能满足高可用的要求。\n原有系统扩展也不方便，主要复杂点在于订单。\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468947,"discussion_content":"架构师升级了么？😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569828526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120282,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1564819737,"is_pvip":false,"replies":[{"id":44278,"content":"这些复杂度主要影响工作量，不会影响架构设计方案，相反，成熟的架构师应该避免此类因素影响架构设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1564968716,"ip_address":"","comment_id":120282,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"        架构复杂度的来源广泛多样，有些是非技术因素导致的，但别小看了它们，其影响可能比技术还深远。\n        团队:发型的软件需要很多的人员参与，这些人员来自不同的组织，拥有不同的技术背景，不同的组织文化。根据康威定律，组织的架构会影响软件的架构。架构师需要根据组织的结构合理划分子系统。团队的组织越复杂子系统可能就越多，进而导致系统的复杂性上升。另一方面组织的不同技术背景必然会带来不同技术栈之间的协调和互通。适合于甲的互通技术可能不适用于乙，可能不得不因此去开发新的互通技术或者增加转换层。\n        利益:不同的组织往往代表了不同的利益。软件项目的最终成功不代表团队中各个组织都获得了成功。有的组织本身是项目交付类型的，项目成功了它就成功了；有的组织是技术创新类型的，它的所谓的成功是要在项目中引入新的技术。架构师不得不做出一定的妥协，在某些自系统上引入新技术，而新技术本身具有一定的复杂性，坑有多深是未知的，甚至到最后才发现是天坑，但为时已晚。不得不上各种临时规避措施导致架构耦合。\n        质量:即使有了很好的软件架构，糟糕的交付也可能让原本可以成功的软件项目失败。因此质量保证应该是架构师必须考虑的一个关键问题。为此不仅仅要求做好代码审查，还要引入一些标准，工作实践，原则或工具。特别是不同技术栈的子系统如何做CI浩大复杂的工作。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466880,"discussion_content":"先把会员拆出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568118992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116282,"user_name":"润曦","can_delete":false,"product_type":"c1","uid":1260277,"ip_address":"","ucode":"21D36F7DEEB43D","user_header":"https://static001.geekbang.org/account/avatar/00/13/3a/f5/1fa34f88.jpg","comment_is_top":false,"comment_ctime":1563814054,"is_pvip":false,"replies":[{"id":42628,"content":"合适原则👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1563884809,"ip_address":"","comment_id":116282,"utype":1}],"discussion_count":1,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"我做架构设计的原则是 不追求高性能目的 以稳定以及可伸缩性为目的... 做好领域模型的设计 而领域模型设计是方便以后独立拆分……高内聚低耦合 是我一直坚守的设计思想","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461269,"discussion_content":"这些复杂度主要影响工作量，不会影响架构设计方案，相反，成熟的架构师应该避免此类因素影响架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564968716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104019,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1560591740,"is_pvip":false,"replies":[{"id":37715,"content":"1. 高可用是最关键的特性\n2. 高性能的分析不太对，这个数据量级的性能压力很小，你要按照TPS来计算，即每秒处理的数据量\n3. 数据存储部分其实数据量不大，你计算一下按照G的单位去评估，同时也可以考虑讲历史数据归档","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1560684051,"ip_address":"","comment_id":104019,"utype":1}],"discussion_count":2,"race_medal":0,"score":12,"product_id":100006601,"comment_content":"我公司目前在开发一套社区矫正人员管理系统，这套系统面向全省社区矫正人员，信息量较大，且监管人员每天要检查矫正人员的行踪和去向，系统每隔半小时从移动、电信公司那里获取矫正人员的位置信息，以便于监管人员每天进行监管。我从以下几方面来分析这套系统的架构：\n1.高可用：由于监管人员需要实时监管矫正人员，必须保证业务不能有中断，因此系统要做负载均衡以及容灾、后备等措施；\n2.高并发：由于每隔半小时获取全省矫正人员的位置信息，全省矫正人员约有3万多人，获取数据时的并发量较大，数据处理经常出现瓶颈，因此也是需要负载均衡；\n3.大数据：全省矫正人员3万多人，每隔半小时存贮一次位置信息，位置信息包括经、纬度坐标以及地名信息，一个矫正人员一天就要存贮48条记录，全省3万矫正人员每天大约要存150万记录，日记月累，普通数据库可能支撑不了，因此可考虑采用分布式数据库进行存贮，将数据分散存贮，或采用一些非关系型数据库，如HBASE、MongDB等进行存贮。\n\n以上是我一点比较粗浅的分析，请老师指正。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459461,"discussion_content":"合适原则👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563884809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96379,"user_name":"北极的大企鹅","can_delete":false,"product_type":"c1","uid":1045577,"ip_address":"","ucode":"8935346D08E109","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2b938b4f.jpg","comment_is_top":false,"comment_ctime":1558405943,"is_pvip":false,"replies":[{"id":34827,"content":"一般不需要，一个学校才多少人，现在的服务器处理能力很强的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1558667055,"ip_address":"","comment_id":96379,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"感觉学生系统还是要考虑下负载和数据缓存，因为现在的学生管理系统包含的还有学生的成绩，而每年期末结束后，很多人早早回家了，所以他们会通过外网，App等方式查询成绩，还有的学生系统绑定了课程。选课，抢课的需求也是有的。","like_count":0},{"had_liked":false,"id":96069,"user_name":"LC","can_delete":false,"product_type":"c1","uid":1180714,"ip_address":"","ucode":"F4FC2E67125F83","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/2a/31e0085f.jpg","comment_is_top":false,"comment_ctime":1558320510,"is_pvip":false,"replies":[{"id":34415,"content":"理解到位","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1558353790,"ip_address":"","comment_id":96069,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题，\n1、通过熟悉和理解需求，识别系统复杂性所在的地方，然后针对这些复杂点进行架构设计\n2、架构设计并不是要面面俱到，不需要每个架构都具备高性能、高可用、高扩展等特点，而是要识别出复杂点然后有针对性的解决问题\n3、理解每个架构方案背后所需要解决的复杂点，然后才能对比自己的业务复杂点，参考复杂点相似的方案","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450853,"discussion_content":"一般不需要，一个学校才多少人，现在的服务器处理能力很强的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558667055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92774,"user_name":"我瑟瑟的方法","can_delete":false,"product_type":"c1","uid":1065819,"ip_address":"","ucode":"1364CD531E1B72","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","comment_is_top":false,"comment_ctime":1557324231,"is_pvip":false,"replies":[{"id":33294,"content":"LibreOffice Draw","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1557457773,"ip_address":"","comment_id":92774,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"画图是用的什么软件","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449377,"discussion_content":"LibreOffice Draw","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557457773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91452,"user_name":"whhbbq","can_delete":false,"product_type":"c1","uid":1018494,"ip_address":"","ucode":"4A93F3E375CB44","user_header":"","comment_is_top":false,"comment_ctime":1557041158,"is_pvip":false,"replies":[{"id":33301,"content":"分析不错","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1557458979,"ip_address":"","comment_id":91452,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"想到之前做的一个项目，是对接影院的系统。要求线上预约平台要稳定，跟影院系统对接要稳定。一旦出问题可能导致，消费者在预约平台购买成功了，也付款了，但是在影院那边显示没有这个订单。\n\n我理解此系统的复杂度在于，1、要对接很多影院的系统，每个影院的系统可能都不一样，修复了一个bug或者加了新特性，需要逐个升级。整个后期维护成本很大。2、稳定性要求高，但是存在很多不稳定因素，如影院软件升级、网络异常、程序bug等。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448923,"discussion_content":"分析不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557458979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85151,"user_name":"俊杰","can_delete":false,"product_type":"c1","uid":1069329,"ip_address":"","ucode":"1AF713CFC8C077","user_header":"https://static001.geekbang.org/account/avatar/00/10/51/11/aa9438a6.jpg","comment_is_top":false,"comment_ctime":1554990313,"is_pvip":false,"replies":[{"id":31431,"content":"你懂的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1555598457,"ip_address":"","comment_id":85151,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"“也不包含强隐私（例如玉照、情感）” 这里的玉照想必本来是yan照 但由于敏感词被迫改的吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446575,"discussion_content":"你懂的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555598457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80446,"user_name":"小小杨","can_delete":false,"product_type":"c1","uid":1105218,"ip_address":"","ucode":"7E4DC9A782FFD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/42/4a82631e.jpg","comment_is_top":false,"comment_ctime":1553662170,"is_pvip":false,"replies":[{"id":29350,"content":"多看多学，要靠积累","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1553699319,"ip_address":"","comment_id":80446,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"架构设计也可以说是设计的目的是为了解决软件复杂性带来的问题，所以识别复杂度是架构设计的基础。我做的项目比较偏技术，复杂度主要体现在性能和可用性，因为涉及到并发和分布式集群。现在这方面的知识比较缺乏，设计起来比较的吃力。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444869,"discussion_content":"多看多学，要靠积累","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553699319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76292,"user_name":"周敏-18956083558","can_delete":false,"product_type":"c1","uid":1107804,"ip_address":"","ucode":"B651A949DF1BD3","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/5c/c4e43fe4.jpg","comment_is_top":false,"comment_ctime":1552568321,"is_pvip":false,"replies":[{"id":28713,"content":"图像识别算是计算高性能，要么优化算法，要么加机器","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1553299676,"ip_address":"","comment_id":76292,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"你好李老师，我们的系统涉及到大量的图像识别，所以性能是主要的瓶颈，这类业务场景设计架构时你能帮着提供些指导意见吗","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439334,"discussion_content":"可扩展里面有，我没有用领域建模这样高大上的词，而是用“拆分”来应对业务复杂性，因为领域建模可能把系统拆的很细。\n\n领域建模是一种面向对象设计的具体方法，通过领域建模识别出领域对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550548115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67697,"user_name":"davidyan","can_delete":false,"product_type":"c1","uid":1007576,"ip_address":"","ucode":"A7EA82986638C1","user_header":"","comment_is_top":false,"comment_ctime":1550224090,"is_pvip":false,"replies":[{"id":24312,"content":"可扩展里面有，我没有用领域建模这样高大上的词，而是用“拆分”来应对业务复杂性，因为领域建模可能把系统拆的很细。\n\n领域建模是一种面向对象设计的具体方法，通过领域建模识别出领域对象","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1550548115,"ip_address":"","comment_id":67697,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"既然架构设计的目的是解决软件系统的复杂度问题; 领域建模称为软件核心复杂性应对之道，那是不是领域建模是面向对象之后的解决方法？另外，看目录好像没有涉及到面向对象和领域建模，能分别说说它们的适用场景嘛？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435076,"discussion_content":"是的，nginx做ACL，https证书卸载这些事情","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546491127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56503,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1546478982,"is_pvip":false,"replies":[{"id":20393,"content":"是的，nginx做ACL，https证书卸载这些事情","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1546491127,"ip_address":"","comment_id":56503,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"老师 ，小白一名 ，上面提到的 web服务器用 nginx 。但是下面的架构图 最顶上是 nginx ，下面是 web服务器我理解这个应该是Tomcat的应用服务器 。 所以最上面的nginx主要的作用是什么呢 ？？只是文章说的 ACL 的作用么","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435076,"discussion_content":"是的，nginx做ACL，https证书卸载这些事情","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546491127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55251,"user_name":"cxyfreedom","can_delete":false,"product_type":"c1","uid":1059047,"ip_address":"","ucode":"6796B2F49A0AD8","user_header":"","comment_is_top":false,"comment_ctime":1546077873,"is_pvip":false,"replies":[{"id":20100,"content":"4+1视图告诉我们如何描述架构，但架构本身如何设计的，4+1视图不能告诉我们，先有架构设计后有架构设计图","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1546310808,"ip_address":"","comment_id":55251,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"看完第一篇文章之后，就去看了4+1视图方法。然后看完第二篇和第三篇正文和留言后，感觉4+1视图方法很好的说明了如何进行最初的架构设计方法。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434715,"discussion_content":"4+1视图告诉我们如何描述架构，但架构本身如何设计的，4+1视图不能告诉我们，先有架构设计后有架构设计图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546310808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96379,"user_name":"北极的大企鹅","can_delete":false,"product_type":"c1","uid":1045577,"ip_address":"","ucode":"8935346D08E109","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2b938b4f.jpg","comment_is_top":false,"comment_ctime":1558405943,"is_pvip":false,"replies":[{"id":34827,"content":"一般不需要，一个学校才多少人，现在的服务器处理能力很强的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1558667055,"ip_address":"","comment_id":96379,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"感觉学生系统还是要考虑下负载和数据缓存，因为现在的学生管理系统包含的还有学生的成绩，而每年期末结束后，很多人早早回家了，所以他们会通过外网，App等方式查询成绩，还有的学生系统绑定了课程。选课，抢课的需求也是有的。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450853,"discussion_content":"一般不需要，一个学校才多少人，现在的服务器处理能力很强的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558667055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96069,"user_name":"LC","can_delete":false,"product_type":"c1","uid":1180714,"ip_address":"","ucode":"F4FC2E67125F83","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/2a/31e0085f.jpg","comment_is_top":false,"comment_ctime":1558320510,"is_pvip":false,"replies":[{"id":34415,"content":"理解到位","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1558353790,"ip_address":"","comment_id":96069,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题，\n1、通过熟悉和理解需求，识别系统复杂性所在的地方，然后针对这些复杂点进行架构设计\n2、架构设计并不是要面面俱到，不需要每个架构都具备高性能、高可用、高扩展等特点，而是要识别出复杂点然后有针对性的解决问题\n3、理解每个架构方案背后所需要解决的复杂点，然后才能对比自己的业务复杂点，参考复杂点相似的方案","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450708,"discussion_content":"理解到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558353790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92774,"user_name":"我瑟瑟的方法","can_delete":false,"product_type":"c1","uid":1065819,"ip_address":"","ucode":"1364CD531E1B72","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/5b/17fef3ba.jpg","comment_is_top":false,"comment_ctime":1557324231,"is_pvip":false,"replies":[{"id":33294,"content":"LibreOffice Draw","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1557457773,"ip_address":"","comment_id":92774,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"画图是用的什么软件","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450708,"discussion_content":"理解到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558353790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91452,"user_name":"whhbbq","can_delete":false,"product_type":"c1","uid":1018494,"ip_address":"","ucode":"4A93F3E375CB44","user_header":"","comment_is_top":false,"comment_ctime":1557041158,"is_pvip":false,"replies":[{"id":33301,"content":"分析不错","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1557458979,"ip_address":"","comment_id":91452,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"想到之前做的一个项目，是对接影院的系统。要求线上预约平台要稳定，跟影院系统对接要稳定。一旦出问题可能导致，消费者在预约平台购买成功了，也付款了，但是在影院那边显示没有这个订单。\n\n我理解此系统的复杂度在于，1、要对接很多影院的系统，每个影院的系统可能都不一样，修复了一个bug或者加了新特性，需要逐个升级。整个后期维护成本很大。2、稳定性要求高，但是存在很多不稳定因素，如影院软件升级、网络异常、程序bug等。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449377,"discussion_content":"LibreOffice Draw","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557457773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85151,"user_name":"俊杰","can_delete":false,"product_type":"c1","uid":1069329,"ip_address":"","ucode":"1AF713CFC8C077","user_header":"https://static001.geekbang.org/account/avatar/00/10/51/11/aa9438a6.jpg","comment_is_top":false,"comment_ctime":1554990313,"is_pvip":false,"replies":[{"id":31431,"content":"你懂的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1555598457,"ip_address":"","comment_id":85151,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"“也不包含强隐私（例如玉照、情感）” 这里的玉照想必本来是yan照 但由于敏感词被迫改的吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448923,"discussion_content":"分析不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557458979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80446,"user_name":"小小杨","can_delete":false,"product_type":"c1","uid":1105218,"ip_address":"","ucode":"7E4DC9A782FFD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/42/4a82631e.jpg","comment_is_top":false,"comment_ctime":1553662170,"is_pvip":false,"replies":[{"id":29350,"content":"多看多学，要靠积累","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1553699319,"ip_address":"","comment_id":80446,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"架构设计也可以说是设计的目的是为了解决软件复杂性带来的问题，所以识别复杂度是架构设计的基础。我做的项目比较偏技术，复杂度主要体现在性能和可用性，因为涉及到并发和分布式集群。现在这方面的知识比较缺乏，设计起来比较的吃力。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446575,"discussion_content":"你懂的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555598457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76292,"user_name":"周敏-18956083558","can_delete":false,"product_type":"c1","uid":1107804,"ip_address":"","ucode":"B651A949DF1BD3","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/5c/c4e43fe4.jpg","comment_is_top":false,"comment_ctime":1552568321,"is_pvip":false,"replies":[{"id":28713,"content":"图像识别算是计算高性能，要么优化算法，要么加机器","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1553299676,"ip_address":"","comment_id":76292,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"你好李老师，我们的系统涉及到大量的图像识别，所以性能是主要的瓶颈，这类业务场景设计架构时你能帮着提供些指导意见吗","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443243,"discussion_content":"图像识别算是计算高性能，要么优化算法，要么加机器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553299676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67697,"user_name":"davidyan","can_delete":false,"product_type":"c1","uid":1007576,"ip_address":"","ucode":"A7EA82986638C1","user_header":"","comment_is_top":false,"comment_ctime":1550224090,"is_pvip":false,"replies":[{"id":24312,"content":"可扩展里面有，我没有用领域建模这样高大上的词，而是用“拆分”来应对业务复杂性，因为领域建模可能把系统拆的很细。\n\n领域建模是一种面向对象设计的具体方法，通过领域建模识别出领域对象","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1550548115,"ip_address":"","comment_id":67697,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"既然架构设计的目的是解决软件系统的复杂度问题; 领域建模称为软件核心复杂性应对之道，那是不是领域建模是面向对象之后的解决方法？另外，看目录好像没有涉及到面向对象和领域建模，能分别说说它们的适用场景嘛？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444869,"discussion_content":"多看多学，要靠积累","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553699319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56503,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1546478982,"is_pvip":false,"replies":[{"id":20393,"content":"是的，nginx做ACL，https证书卸载这些事情","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1546491127,"ip_address":"","comment_id":56503,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"老师 ，小白一名 ，上面提到的 web服务器用 nginx 。但是下面的架构图 最顶上是 nginx ，下面是 web服务器我理解这个应该是Tomcat的应用服务器 。 所以最上面的nginx主要的作用是什么呢 ？？只是文章说的 ACL 的作用么","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443243,"discussion_content":"图像识别算是计算高性能，要么优化算法，要么加机器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553299676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55251,"user_name":"cxyfreedom","can_delete":false,"product_type":"c1","uid":1059047,"ip_address":"","ucode":"6796B2F49A0AD8","user_header":"","comment_is_top":false,"comment_ctime":1546077873,"is_pvip":false,"replies":[{"id":20100,"content":"4+1视图告诉我们如何描述架构，但架构本身如何设计的，4+1视图不能告诉我们，先有架构设计后有架构设计图","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1546310808,"ip_address":"","comment_id":55251,"utype":1}],"discussion_count":1,"race_medal":0,"score":13,"product_id":100006601,"comment_content":"看完第一篇文章之后，就去看了4+1视图方法。然后看完第二篇和第三篇正文和留言后，感觉4+1视图方法很好的说明了如何进行最初的架构设计方法。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439334,"discussion_content":"可扩展里面有，我没有用领域建模这样高大上的词，而是用“拆分”来应对业务复杂性，因为领域建模可能把系统拆的很细。\n\n领域建模是一种面向对象设计的具体方法，通过领域建模识别出领域对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550548115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50040,"user_name":"silence","can_delete":false,"product_type":"c1","uid":1078543,"ip_address":"","ucode":"3A99760438DE19","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/0f/1f64a5b4.jpg","comment_is_top":false,"comment_ctime":1544847925,"is_pvip":false,"replies":[{"id":18073,"content":"你的高度更高😀","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1544949238,"ip_address":"","comment_id":50040,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"架构就是从缤纷复杂的需求中找出真实的重点和需求中的痛点，以痛点和重点为切入点，着手解决系统的整体规划，把力量用在刀刃上！用哲学的话说就是，抓住主要矛盾，解决主要矛盾！","like_count":0},{"had_liked":false,"id":49645,"user_name":"dream","can_delete":false,"product_type":"c1","uid":1347167,"ip_address":"","ucode":"522D2683E79276","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/5f/f6f674bb.jpg","comment_is_top":false,"comment_ctime":1544749625,"is_pvip":false,"replies":[{"id":17936,"content":"留言区卧虎藏龙😀","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1544772333,"ip_address":"","comment_id":49645,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"看了几篇，怎么觉得留言区比专栏作者还牛逼，描述的更通俗，更易理解","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432700,"discussion_content":"留言区卧虎藏龙😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544772333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45709,"user_name":"harryshayne","can_delete":false,"product_type":"c1","uid":1091425,"ip_address":"","ucode":"194C6DEB29F6F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a7/61/446e1db1.jpg","comment_is_top":false,"comment_ctime":1543756101,"is_pvip":false,"replies":[{"id":16299,"content":"《原则》一书中提到：进化是最伟大的力量，是永恒的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1543795021,"ip_address":"","comment_id":45709,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"架构设计我觉得和项目管理也有很多相似的地方。架构设计的目的是在一定上下文条件下进行最优或者次优的设计来解决当前或适当超前所带来的问题，项目管理也是在一定的资源条件下，包括人，财，物，时间，环境等使得项目能较好地满足业主，用户，老板，员工各自的需求。架构设计其实还和政策的制定类似，好的政策也是在一定条件下做出满足大部分人需求方案，否则就是烂政策，所以架构设计的哲学是通用的决策类型哲学，不知理解对否","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431168,"discussion_content":"《原则》一书中提到：进化是最伟大的力量，是永恒的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543795021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43786,"user_name":"李健","can_delete":false,"product_type":"c1","uid":1326948,"ip_address":"","ucode":"AC5469BF734B90","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/64/3f161fff.jpg","comment_is_top":false,"comment_ctime":1543294031,"is_pvip":false,"replies":[{"id":16116,"content":"很到位👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1543621817,"ip_address":"","comment_id":43786,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"『没有银弹，只有权衡』，根据大佬所说，架构的目的不是追求极致的银弹，而是去权衡解决自己的系统存在的问题。\n自己的软件有一个现阶段的增长极限，与用户量。是不是我们初始架构的时刻，有一个自己的客观评判。1、对系统进行架构的时候根据初始评判去架构，争取达到现阶段的最优目标，也可以说最复杂几个业务的最优目标。\n2、对于现有的问题，则是统筹现有需求，精力，财力去做最适合的架构，可以重构可以增加。\n\n收获\n1、架构不是所有的都怼到一起，用最新的技术干活，而是用最适合的技术给公司的需求做统筹搭配。\n2、前期架构需要重点盘算自己的主业务复杂度，尽量为后期迭代留下整改的空间，减少架构成本。\n3、架构前期技术选型，建议我们这种小白，考虑到传统技术和流行技术的统筹。可以考虑多重方案、技术，然后同技术对比，最后一一筛选，即增加了知识储备，又认真负责了统筹","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431168,"discussion_content":"《原则》一书中提到：进化是最伟大的力量，是永恒的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543795021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38498,"user_name":"sgl","can_delete":false,"product_type":"c1","uid":1252243,"ip_address":"","ucode":"D73875BA22954F","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/93/e3b44969.jpg","comment_is_top":false,"comment_ctime":1542068514,"is_pvip":false,"replies":[{"id":13960,"content":"一个学校抢课的人数不会超过每秒1万吧，每秒1万要不算高，但也不是一台机器就能抗住的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1542195455,"ip_address":"","comment_id":38498,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"学生系统的复杂度在于某一时刻的峰值请求，比如抢课的时候","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428721,"discussion_content":"一个学校抢课的人数不会超过每秒1万吧，每秒1万要不算高，但也不是一台机器就能抗住的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542195455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38094,"user_name":"贾洵","can_delete":false,"product_type":"c1","uid":1173596,"ip_address":"","ucode":"6B66BC83615A26","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/5c/fad21603.jpg","comment_is_top":false,"comment_ctime":1541934065,"is_pvip":false,"replies":[{"id":13737,"content":"你永远都不可能“充分”了解所有需求😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1542006354,"ip_address":"","comment_id":38094,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"还是从需求出发，了解业务场景。根据业务场景整理出合理可落地的架构设计。但是只要充分了解需求，是否可以满足设计过度的问题呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428598,"discussion_content":"你永远都不可能“充分”了解所有需求😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542006354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36745,"user_name":"Columbia","can_delete":false,"product_type":"c1","uid":1283472,"ip_address":"","ucode":"40F27683A1F515","user_header":"https://static001.geekbang.org/account/avatar/00/13/95/90/39698383.jpg","comment_is_top":false,"comment_ctime":1541303487,"is_pvip":false,"replies":[{"id":13143,"content":"架构和开发语言无关，同样的架构，C++, PHP都可以来做开发","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541399025,"ip_address":"","comment_id":36745,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"印象中架构都是懂java的程序猿在干，\n但是我是C++程序猿，有木有毕业学习架构呢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427995,"discussion_content":"架构和开发语言无关，同样的架构，C++, PHP都可以来做开发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541399025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28554,"user_name":"微风","can_delete":false,"product_type":"c1","uid":1256016,"ip_address":"","ucode":"E55A2764ECFE88","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/50/ec923346.jpg","comment_is_top":false,"comment_ctime":1538102212,"is_pvip":false,"replies":[{"id":10261,"content":"迭代本身不能降低复杂度，但可以快速验证系统是否真的解决了复杂度问题","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538103939,"ip_address":"","comment_id":28554,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"迭代本身就是一种降低复杂度非常好的方法，配合架构的演进，即使出了问题也是一个单点突破的问题吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427995,"discussion_content":"架构和开发语言无关，同样的架构，C++, PHP都可以来做开发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541399025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26219,"user_name":"self-discipline","can_delete":false,"product_type":"c1","uid":1024457,"ip_address":"","ucode":"A5AEDCA9ACC68A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/c9/501a1d02.jpg","comment_is_top":false,"comment_ctime":1537521149,"is_pvip":false,"replies":[{"id":10025,"content":"我也可以从问题中学习😊","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1537951544,"ip_address":"","comment_id":26219,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"每次看留言都会有很多收获啊,把自己当成作者去看这些问题就会更有意思的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424573,"discussion_content":"我也可以从问题中学习😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537951544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26216,"user_name":"self-discipline","can_delete":false,"product_type":"c1","uid":1024457,"ip_address":"","ucode":"A5AEDCA9ACC68A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/c9/501a1d02.jpg","comment_is_top":false,"comment_ctime":1537519712,"is_pvip":false,"replies":[{"id":9566,"content":"有这个前提还说啥啊，不要微服务，一个大系统都可以😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1537542207,"ip_address":"","comment_id":26216,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"如果公司有厉害的人,我个人认为开始做微服务比较好,虽然有技术成本在内,这要比把垂直项目彼此为微服务要好的多,对业务的发展快速迭代都有好处的,前提是不差钱的公司,有厉害的人","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424571,"discussion_content":"有这个前提还说啥啊，不要微服务，一个大系统都可以😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537542207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50040,"user_name":"silence","can_delete":false,"product_type":"c1","uid":1078543,"ip_address":"","ucode":"3A99760438DE19","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/0f/1f64a5b4.jpg","comment_is_top":false,"comment_ctime":1544847925,"is_pvip":false,"replies":[{"id":18073,"content":"你的高度更高😀","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1544949238,"ip_address":"","comment_id":50040,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"架构就是从缤纷复杂的需求中找出真实的重点和需求中的痛点，以痛点和重点为切入点，着手解决系统的整体规划，把力量用在刀刃上！用哲学的话说就是，抓住主要矛盾，解决主要矛盾！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432855,"discussion_content":"你的高度更高😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544949238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49645,"user_name":"dream","can_delete":false,"product_type":"c1","uid":1347167,"ip_address":"","ucode":"522D2683E79276","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/5f/f6f674bb.jpg","comment_is_top":false,"comment_ctime":1544749625,"is_pvip":false,"replies":[{"id":17936,"content":"留言区卧虎藏龙😀","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1544772333,"ip_address":"","comment_id":49645,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"看了几篇，怎么觉得留言区比专栏作者还牛逼，描述的更通俗，更易理解","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432855,"discussion_content":"你的高度更高😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544949238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45709,"user_name":"harryshayne","can_delete":false,"product_type":"c1","uid":1091425,"ip_address":"","ucode":"194C6DEB29F6F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a7/61/446e1db1.jpg","comment_is_top":false,"comment_ctime":1543756101,"is_pvip":false,"replies":[{"id":16299,"content":"《原则》一书中提到：进化是最伟大的力量，是永恒的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1543795021,"ip_address":"","comment_id":45709,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"架构设计我觉得和项目管理也有很多相似的地方。架构设计的目的是在一定上下文条件下进行最优或者次优的设计来解决当前或适当超前所带来的问题，项目管理也是在一定的资源条件下，包括人，财，物，时间，环境等使得项目能较好地满足业主，用户，老板，员工各自的需求。架构设计其实还和政策的制定类似，好的政策也是在一定条件下做出满足大部分人需求方案，否则就是烂政策，所以架构设计的哲学是通用的决策类型哲学，不知理解对否","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432700,"discussion_content":"留言区卧虎藏龙😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544772333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43786,"user_name":"李健","can_delete":false,"product_type":"c1","uid":1326948,"ip_address":"","ucode":"AC5469BF734B90","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/64/3f161fff.jpg","comment_is_top":false,"comment_ctime":1543294031,"is_pvip":false,"replies":[{"id":16116,"content":"很到位👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1543621817,"ip_address":"","comment_id":43786,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"『没有银弹，只有权衡』，根据大佬所说，架构的目的不是追求极致的银弹，而是去权衡解决自己的系统存在的问题。\n自己的软件有一个现阶段的增长极限，与用户量。是不是我们初始架构的时刻，有一个自己的客观评判。1、对系统进行架构的时候根据初始评判去架构，争取达到现阶段的最优目标，也可以说最复杂几个业务的最优目标。\n2、对于现有的问题，则是统筹现有需求，精力，财力去做最适合的架构，可以重构可以增加。\n\n收获\n1、架构不是所有的都怼到一起，用最新的技术干活，而是用最适合的技术给公司的需求做统筹搭配。\n2、前期架构需要重点盘算自己的主业务复杂度，尽量为后期迭代留下整改的空间，减少架构成本。\n3、架构前期技术选型，建议我们这种小白，考虑到传统技术和流行技术的统筹。可以考虑多重方案、技术，然后同技术对比，最后一一筛选，即增加了知识储备，又认真负责了统筹","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430495,"discussion_content":"很到位👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543621817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38498,"user_name":"sgl","can_delete":false,"product_type":"c1","uid":1252243,"ip_address":"","ucode":"D73875BA22954F","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/93/e3b44969.jpg","comment_is_top":false,"comment_ctime":1542068514,"is_pvip":false,"replies":[{"id":13960,"content":"一个学校抢课的人数不会超过每秒1万吧，每秒1万要不算高，但也不是一台机器就能抗住的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1542195455,"ip_address":"","comment_id":38498,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"学生系统的复杂度在于某一时刻的峰值请求，比如抢课的时候","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430495,"discussion_content":"很到位👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543621817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38094,"user_name":"贾洵","can_delete":false,"product_type":"c1","uid":1173596,"ip_address":"","ucode":"6B66BC83615A26","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/5c/fad21603.jpg","comment_is_top":false,"comment_ctime":1541934065,"is_pvip":false,"replies":[{"id":13737,"content":"你永远都不可能“充分”了解所有需求😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1542006354,"ip_address":"","comment_id":38094,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"还是从需求出发，了解业务场景。根据业务场景整理出合理可落地的架构设计。但是只要充分了解需求，是否可以满足设计过度的问题呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428721,"discussion_content":"一个学校抢课的人数不会超过每秒1万吧，每秒1万要不算高，但也不是一台机器就能抗住的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542195455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36745,"user_name":"Columbia","can_delete":false,"product_type":"c1","uid":1283472,"ip_address":"","ucode":"40F27683A1F515","user_header":"https://static001.geekbang.org/account/avatar/00/13/95/90/39698383.jpg","comment_is_top":false,"comment_ctime":1541303487,"is_pvip":false,"replies":[{"id":13143,"content":"架构和开发语言无关，同样的架构，C++, PHP都可以来做开发","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1541399025,"ip_address":"","comment_id":36745,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"印象中架构都是懂java的程序猿在干，\n但是我是C++程序猿，有木有毕业学习架构呢","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428598,"discussion_content":"你永远都不可能“充分”了解所有需求😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542006354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28554,"user_name":"微风","can_delete":false,"product_type":"c1","uid":1256016,"ip_address":"","ucode":"E55A2764ECFE88","user_header":"https://static001.geekbang.org/account/avatar/00/13/2a/50/ec923346.jpg","comment_is_top":false,"comment_ctime":1538102212,"is_pvip":false,"replies":[{"id":10261,"content":"迭代本身不能降低复杂度，但可以快速验证系统是否真的解决了复杂度问题","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538103939,"ip_address":"","comment_id":28554,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"迭代本身就是一种降低复杂度非常好的方法，配合架构的演进，即使出了问题也是一个单点突破的问题吧","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425307,"discussion_content":"迭代本身不能降低复杂度，但可以快速验证系统是否真的解决了复杂度问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538103939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26219,"user_name":"self-discipline","can_delete":false,"product_type":"c1","uid":1024457,"ip_address":"","ucode":"A5AEDCA9ACC68A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/c9/501a1d02.jpg","comment_is_top":false,"comment_ctime":1537521149,"is_pvip":false,"replies":[{"id":10025,"content":"我也可以从问题中学习😊","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1537951544,"ip_address":"","comment_id":26219,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"每次看留言都会有很多收获啊,把自己当成作者去看这些问题就会更有意思的","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425307,"discussion_content":"迭代本身不能降低复杂度，但可以快速验证系统是否真的解决了复杂度问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538103939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26216,"user_name":"self-discipline","can_delete":false,"product_type":"c1","uid":1024457,"ip_address":"","ucode":"A5AEDCA9ACC68A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/c9/501a1d02.jpg","comment_is_top":false,"comment_ctime":1537519712,"is_pvip":false,"replies":[{"id":9566,"content":"有这个前提还说啥啊，不要微服务，一个大系统都可以😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1537542207,"ip_address":"","comment_id":26216,"utype":1}],"discussion_count":1,"race_medal":0,"score":14,"product_id":100006601,"comment_content":"如果公司有厉害的人,我个人认为开始做微服务比较好,虽然有技术成本在内,这要比把垂直项目彼此为微服务要好的多,对业务的发展快速迭代都有好处的,前提是不差钱的公司,有厉害的人","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424573,"discussion_content":"我也可以从问题中学习😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537951544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23494,"user_name":"张汉桂-东莞","can_delete":false,"product_type":"c1","uid":1116277,"ip_address":"","ucode":"38657ABA59382A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/75/512b9f26.jpg","comment_is_top":false,"comment_ctime":1536421071,"is_pvip":false,"replies":[{"id":8509,"content":"用数据库本身的同步复制功能就可以😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1536452211,"ip_address":"","comment_id":23494,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"大师你好，对于案例最后的图我有些感兴趣。请问数据备份要用两台备机吗，这个要怎么做啊？我做开发好几年了，都不知道像这种主备机的架构怎么做。我所在的公司，数据备份都是冷备，这个脚本建个定时任务，每天凌晨生成一个全量备份文件。","like_count":0},{"had_liked":false,"id":23206,"user_name":"YoungerChina","can_delete":false,"product_type":"c1","uid":1215646,"ip_address":"","ucode":"917381759E13AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/9e/367a4197.jpg","comment_is_top":false,"comment_ctime":1536209133,"is_pvip":false,"replies":[{"id":8414,"content":"你的这个是大而全的，并不是每个架构都要求可靠性，持续可用","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1536247184,"ip_address":"","comment_id":23206,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"架构的目的，解决系统的复杂性和健壮性，提供的稳定性，可靠性，持续可用的服务，请大师指点","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423588,"discussion_content":"用数据库本身的同步复制功能就可以😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536452211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20250,"user_name":"kimi","can_delete":false,"product_type":"c1","uid":1208537,"ip_address":"","ucode":"74855DF1BC1353","user_header":"https://static001.geekbang.org/account/avatar/00/12/70/d9/08e4fbb5.jpg","comment_is_top":false,"comment_ctime":1534336047,"is_pvip":false,"replies":[{"id":7129,"content":"媳妇要求太多怎么办😂😂😂？","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534388185,"ip_address":"","comment_id":20250,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"架构就像找媳妇，不能要求太多，合适就行","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422174,"discussion_content":"媳妇要求太多怎么办😂😂😂？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534388185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19968,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534203005,"is_pvip":false,"replies":[{"id":6964,"content":"学以致用，知行合一，这样效果最好😊","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534227208,"ip_address":"","comment_id":19968,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"目前涉及到的产品用户数量小于10，所以无需考虑高性能。公司对可用性有严格的要求，自己规定的可用性为99.99%，所以技术高可用和存储高可用都需要考虑。由于目前产品业务非常简单且用户数量少，并没有发现有需要考虑可扩展性。产品分为客户系统和管理系统，客户系统的安全性必须要考虑，管理系统的安全性可通过网络等手段解决。由于只需3台机器就可以部署好整个产品，对于公司来说人力是不缺的，所以成本可以无需考虑。\n\n其实之前，我在设计产品的过程中并没有考虑复杂性，而是一未模仿。也只考虑了计算高可用和系统安全性，并没有考虑存储高可用，系统安全性方面后台和前台设计技术手段一样，并没有区别对待。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422174,"discussion_content":"媳妇要求太多怎么办😂😂😂？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534388185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19400,"user_name":"桌小洛","can_delete":false,"product_type":"c1","uid":1120444,"ip_address":"","ucode":"69C4715FF1F8BD","user_header":"","comment_is_top":false,"comment_ctime":1533809768,"is_pvip":false,"replies":[{"id":6759,"content":"提前要注意一个提前度，后面架构设计原则会讲到","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533885139,"ip_address":"","comment_id":19400,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"架构设计是解决系统的复杂性，这里还有一个很重要的点: 提前解决。\n\n若果没有架构设计，等到开发中期，或者上线之后才发现复杂性带来的问题，如性能，安全等问题。那么就需要重构整个系统了，可以说非常痛苦。\n\n所以说为什么需要有架构设计:  因为架构设计可以提前解决系统复杂性所带来的问题\n\n而提前解决这些问题，避免这些问题在后期出现正是架构设计的目的所在","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422040,"discussion_content":"学以致用，知行合一，这样效果最好😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534227208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16760,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1532165325,"is_pvip":false,"replies":[{"id":5844,"content":"很到位👍👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532255648,"ip_address":"","comment_id":16760,"utype":1}],"discussion_count":1,"race_medal":1,"score":15,"product_id":100006601,"comment_content":"我从这篇文章中学到的整理如下：\n1. 架构设计不能过度设计，高大全的架构不能要。\n2. 软件架构是用来解决“软件复杂度”的，脱离了业务需求去做架构设计往往会失败。\n3. 架构师对业务需求的洞察能力非常重要，不能仅仅从技术角度来看待项目。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421823,"discussion_content":"提前要注意一个提前度，后面架构设计原则会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533885139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13606,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1529844761,"is_pvip":false,"replies":[{"id":4572,"content":"这些是常见的，不同业务有自己独特的复杂性","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1529892541,"ip_address":"","comment_id":13606,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"复杂度的分析是从 性能， 高扩展性，高可用，成本，安全性这些方面考虑，是否还有其它方面","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420920,"discussion_content":"很到位👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532255648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12733,"user_name":"Cola","can_delete":false,"product_type":"c1","uid":1048859,"ip_address":"","ucode":"67A27A8DEF42E2","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/1b/24db90c7.jpg","comment_is_top":false,"comment_ctime":1528987875,"is_pvip":false,"replies":[{"id":4249,"content":"这样挺好😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1529046943,"ip_address":"","comment_id":12733,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"数据与业务服务实现了分离，是多进程服务集群，但是一些公用服务如权限，服务治理，推送等服务耦合度还比较高。下一步其实就是去中心化，公有服务模块化，引入消息队列与redis，提高服务器可用性和伸缩性，总的来说我们公司的架构演化挺符合架构进化史的，在小型的时候达到快速上线的要求，然后慢慢地往一个好的方向演进。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419700,"discussion_content":"这些是常见的，不同业务有自己独特的复杂性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529892541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12618,"user_name":"空无","can_delete":false,"product_type":"c1","uid":1086555,"ip_address":"","ucode":"222A71004877F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/5b/73711d74.jpg","comment_is_top":false,"comment_ctime":1528936923,"is_pvip":false,"replies":[{"id":4146,"content":"本篇的学生管理系统就是小项目，只要是真正线上运行的系统都需要架构设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528940295,"ip_address":"","comment_id":12618,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"请问像一些小项目，只是内部的一个xx管理系统而已，这样还需要架构设计吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419386,"discussion_content":"这样挺好😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529046943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11210,"user_name":"陈英锋","can_delete":false,"product_type":"c1","uid":1103110,"ip_address":"","ucode":"22F59E84A70401","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/06/7105225e.jpg","comment_is_top":false,"comment_ctime":1527939127,"is_pvip":false,"replies":[{"id":3575,"content":"这种面试方式不好，短时间理解对方的业务比较难，我一般会举微信淘宝等例子，因为业务大家都懂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527946271,"ip_address":"","comment_id":11210,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"架构设计往往需要很长时间的思考和磨合，然而现在很多面试官喜欢拿他们生产上的业务来询问相关架构设计，要求在短短时间内给出一个大而全的架构","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419328,"discussion_content":"本篇的学生管理系统就是小项目，只要是真正线上运行的系统都需要架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528940295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23494,"user_name":"张汉桂-东莞","can_delete":false,"product_type":"c1","uid":1116277,"ip_address":"","ucode":"38657ABA59382A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/75/512b9f26.jpg","comment_is_top":false,"comment_ctime":1536421071,"is_pvip":false,"replies":[{"id":8509,"content":"用数据库本身的同步复制功能就可以😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1536452211,"ip_address":"","comment_id":23494,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"大师你好，对于案例最后的图我有些感兴趣。请问数据备份要用两台备机吗，这个要怎么做啊？我做开发好几年了，都不知道像这种主备机的架构怎么做。我所在的公司，数据备份都是冷备，这个脚本建个定时任务，每天凌晨生成一个全量备份文件。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423588,"discussion_content":"用数据库本身的同步复制功能就可以😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536452211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23206,"user_name":"YoungerChina","can_delete":false,"product_type":"c1","uid":1215646,"ip_address":"","ucode":"917381759E13AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/9e/367a4197.jpg","comment_is_top":false,"comment_ctime":1536209133,"is_pvip":false,"replies":[{"id":8414,"content":"你的这个是大而全的，并不是每个架构都要求可靠性，持续可用","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1536247184,"ip_address":"","comment_id":23206,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"架构的目的，解决系统的复杂性和健壮性，提供的稳定性，可靠性，持续可用的服务，请大师指点","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423463,"discussion_content":"你的这个是大而全的，并不是每个架构都要求可靠性，持续可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536247184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20250,"user_name":"kimi","can_delete":false,"product_type":"c1","uid":1208537,"ip_address":"","ucode":"74855DF1BC1353","user_header":"https://static001.geekbang.org/account/avatar/00/12/70/d9/08e4fbb5.jpg","comment_is_top":false,"comment_ctime":1534336047,"is_pvip":false,"replies":[{"id":7129,"content":"媳妇要求太多怎么办😂😂😂？","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534388185,"ip_address":"","comment_id":20250,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"架构就像找媳妇，不能要求太多，合适就行","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423463,"discussion_content":"你的这个是大而全的，并不是每个架构都要求可靠性，持续可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536247184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19968,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534203005,"is_pvip":false,"replies":[{"id":6964,"content":"学以致用，知行合一，这样效果最好😊","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534227208,"ip_address":"","comment_id":19968,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"目前涉及到的产品用户数量小于10，所以无需考虑高性能。公司对可用性有严格的要求，自己规定的可用性为99.99%，所以技术高可用和存储高可用都需要考虑。由于目前产品业务非常简单且用户数量少，并没有发现有需要考虑可扩展性。产品分为客户系统和管理系统，客户系统的安全性必须要考虑，管理系统的安全性可通过网络等手段解决。由于只需3台机器就可以部署好整个产品，对于公司来说人力是不缺的，所以成本可以无需考虑。\n\n其实之前，我在设计产品的过程中并没有考虑复杂性，而是一未模仿。也只考虑了计算高可用和系统安全性，并没有考虑存储高可用，系统安全性方面后台和前台设计技术手段一样，并没有区别对待。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422040,"discussion_content":"学以致用，知行合一，这样效果最好😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534227208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19400,"user_name":"桌小洛","can_delete":false,"product_type":"c1","uid":1120444,"ip_address":"","ucode":"69C4715FF1F8BD","user_header":"","comment_is_top":false,"comment_ctime":1533809768,"is_pvip":false,"replies":[{"id":6759,"content":"提前要注意一个提前度，后面架构设计原则会讲到","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533885139,"ip_address":"","comment_id":19400,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"架构设计是解决系统的复杂性，这里还有一个很重要的点: 提前解决。\n\n若果没有架构设计，等到开发中期，或者上线之后才发现复杂性带来的问题，如性能，安全等问题。那么就需要重构整个系统了，可以说非常痛苦。\n\n所以说为什么需要有架构设计:  因为架构设计可以提前解决系统复杂性所带来的问题\n\n而提前解决这些问题，避免这些问题在后期出现正是架构设计的目的所在","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421823,"discussion_content":"提前要注意一个提前度，后面架构设计原则会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533885139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16760,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1532165325,"is_pvip":false,"replies":[{"id":5844,"content":"很到位👍👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1532255648,"ip_address":"","comment_id":16760,"utype":1}],"discussion_count":1,"race_medal":1,"score":15,"product_id":100006601,"comment_content":"我从这篇文章中学到的整理如下：\n1. 架构设计不能过度设计，高大全的架构不能要。\n2. 软件架构是用来解决“软件复杂度”的，脱离了业务需求去做架构设计往往会失败。\n3. 架构师对业务需求的洞察能力非常重要，不能仅仅从技术角度来看待项目。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420920,"discussion_content":"很到位👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532255648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13606,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1529844761,"is_pvip":false,"replies":[{"id":4572,"content":"这些是常见的，不同业务有自己独特的复杂性","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1529892541,"ip_address":"","comment_id":13606,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"复杂度的分析是从 性能， 高扩展性，高可用，成本，安全性这些方面考虑，是否还有其它方面","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419700,"discussion_content":"这些是常见的，不同业务有自己独特的复杂性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529892541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12733,"user_name":"Cola","can_delete":false,"product_type":"c1","uid":1048859,"ip_address":"","ucode":"67A27A8DEF42E2","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/1b/24db90c7.jpg","comment_is_top":false,"comment_ctime":1528987875,"is_pvip":false,"replies":[{"id":4249,"content":"这样挺好😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1529046943,"ip_address":"","comment_id":12733,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"数据与业务服务实现了分离，是多进程服务集群，但是一些公用服务如权限，服务治理，推送等服务耦合度还比较高。下一步其实就是去中心化，公有服务模块化，引入消息队列与redis，提高服务器可用性和伸缩性，总的来说我们公司的架构演化挺符合架构进化史的，在小型的时候达到快速上线的要求，然后慢慢地往一个好的方向演进。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419386,"discussion_content":"这样挺好😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529046943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12618,"user_name":"空无","can_delete":false,"product_type":"c1","uid":1086555,"ip_address":"","ucode":"222A71004877F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/5b/73711d74.jpg","comment_is_top":false,"comment_ctime":1528936923,"is_pvip":false,"replies":[{"id":4146,"content":"本篇的学生管理系统就是小项目，只要是真正线上运行的系统都需要架构设计","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1528940295,"ip_address":"","comment_id":12618,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"请问像一些小项目，只是内部的一个xx管理系统而已，这样还需要架构设计吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419328,"discussion_content":"本篇的学生管理系统就是小项目，只要是真正线上运行的系统都需要架构设计","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528940295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11210,"user_name":"陈英锋","can_delete":false,"product_type":"c1","uid":1103110,"ip_address":"","ucode":"22F59E84A70401","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/06/7105225e.jpg","comment_is_top":false,"comment_ctime":1527939127,"is_pvip":false,"replies":[{"id":3575,"content":"这种面试方式不好，短时间理解对方的业务比较难，我一般会举微信淘宝等例子，因为业务大家都懂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527946271,"ip_address":"","comment_id":11210,"utype":1}],"discussion_count":1,"race_medal":0,"score":15,"product_id":100006601,"comment_content":"架构设计往往需要很长时间的思考和磨合，然而现在很多面试官喜欢拿他们生产上的业务来询问相关架构设计，要求在短短时间内给出一个大而全的架构","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418753,"discussion_content":"这种面试方式不好，短时间理解对方的业务比较难，我一般会举微信淘宝等例子，因为业务大家都懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527946271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10078,"user_name":"小小鸟","can_delete":false,"product_type":"c1","uid":1102550,"ip_address":"","ucode":"11C15D267DE457","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/d6/d393593d.jpg","comment_is_top":false,"comment_ctime":1527261377,"is_pvip":false,"replies":[{"id":3178,"content":"极客邦跟我说留言质量很高，读者都是卧虎藏龙，你可要保证你的文章高质量😂😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527375920,"ip_address":"","comment_id":10078,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"为啥看留言时间 要比看内容时间还要多  哈哈 真好","like_count":0},{"had_liked":false,"id":9954,"user_name":"LEO","can_delete":false,"product_type":"c1","uid":1108463,"ip_address":"","ucode":"7A5008CAC3D6F3","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/ef/1de922ec.jpg","comment_is_top":false,"comment_ctime":1527179851,"is_pvip":false,"replies":[{"id":3117,"content":"太长了记不住😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527217255,"ip_address":"","comment_id":9954,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"如果把“架构设计的主要目的是为了解决软件复杂度带来的问题”改为\n\n“架构设计的主要目的是为了解决软件使用过程中因对象、目标、流程、环境复杂度带来的问题”\n\n会不会更容易去理解架构设计的目的和本质，以及架构设计的目的和意义？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418334,"discussion_content":"极客邦跟我说留言质量很高，读者都是卧虎藏龙，你可要保证你的文章高质量😂😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527375920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9463,"user_name":"易燃易爆炸","can_delete":false,"product_type":"c1","uid":1115949,"ip_address":"","ucode":"081F5310EB6D61","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/2d/0ac560a6.jpg","comment_is_top":false,"comment_ctime":1526889269,"is_pvip":false,"replies":[{"id":2840,"content":"麻雀虽小五脏俱全😃😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526893182,"ip_address":"","comment_id":9463,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"老师写的这篇文章，让我重新认识了当年的学生成绩管理系统。感谢～","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418274,"discussion_content":"太长了记不住😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527217255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9215,"user_name":"tangbl93","can_delete":false,"product_type":"c1","uid":1109195,"ip_address":"","ucode":"6DB01CAC94DCBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/cb/90b8b9eb.jpg","comment_is_top":false,"comment_ctime":1526694210,"is_pvip":false,"replies":[{"id":2775,"content":"那就是可扩展性有问题，先设计一个基本架构","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526702797,"ip_address":"","comment_id":9215,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"老师，现在我们的代码(iOS)整个逻辑一团糟，现在的主要复杂度应该就是在保证业务稳定的前提下搭建一个基本的架构体系了吧😂","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417996,"discussion_content":"那就是可扩展性有问题，先设计一个基本架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526702797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9126,"user_name":"重剑","can_delete":false,"product_type":"c1","uid":1133526,"ip_address":"","ucode":"EDD4E163CDC508","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/d6/68561c13.jpg","comment_is_top":false,"comment_ctime":1526619682,"is_pvip":false,"replies":[{"id":2736,"content":"这就是你的心得体会和收获，知道自己做的不对也是收获😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526621943,"ip_address":"","comment_id":9126,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"为了架构而架构，好像再说我😅","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417996,"discussion_content":"那就是可扩展性有问题，先设计一个基本架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526702797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8439,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1526218392,"is_pvip":false,"replies":[{"id":2483,"content":"有的放矢才能设计好架构","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526253599,"ip_address":"","comment_id":8439,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"寻找答案从定义问题开始，关于为什么要进行架构设计这个问题其实没有去思考过，只是一个惯性动作，在真正设计时也是更多的关注功能性需求，同时对系统的容量、耗时要求会有更多的关注，而我当前所负责的系统在某些场景下对数据的准确性和实时性有很高的要求，也是因为对这一块关注的缺失导致了两次故障的发生，才不得不对此投入精力去改造。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417719,"discussion_content":"有的放矢才能设计好架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526253599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8415,"user_name":"Vincent ly","can_delete":false,"product_type":"c1","uid":1110257,"ip_address":"","ucode":"02E19AF69625C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/f1/d19dc770.jpg","comment_is_top":false,"comment_ctime":1526194520,"is_pvip":false,"replies":[{"id":2486,"content":"功能测试对可靠性和性能确实要求不高，云主机申请并发和流量需要给出具体的性能数值才能做判断。\n\n另外，通常情况下私有云的复杂度在于云主机的管理，功能和逻辑很多，可扩展是关键复杂度，需要做好服务化","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526254102,"ip_address":"","comment_id":8415,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"老师好，我公司(某大型保险公司)正在做私有云平台。\n关于这个云平台架构，结合您的分享，我的一些思考如下，不知是否到点\n1 私有云平台承载的的应用主要为功能测试，因此数据可靠性和可用性要求 均不是特别高。 不需要考虑异灾备等复杂场景\n2 云主机申请并发相对比较多， 消息队列集群要求较高\n3 测试主机对流量要求较高，不能依赖于原生的open vswitch， 需要引进三方sdn设备\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417705,"discussion_content":"功能测试对可靠性和性能确实要求不高，云主机申请并发和流量需要给出具体的性能数值才能做判断。\n\n另外，通常情况下私有云的复杂度在于云主机的管理，功能和逻辑很多，可扩展是关键复杂度，需要做好服务化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526254102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8001,"user_name":"aslong龙","can_delete":false,"product_type":"c1","uid":1125377,"ip_address":"","ucode":"E98B905FCED558","user_header":"https://static001.geekbang.org/account/avatar/00/11/2c/01/f8bf4d7f.jpg","comment_is_top":false,"comment_ctime":1525840913,"is_pvip":false,"replies":[{"id":2313,"content":"后面章节讲述了常见复杂度的来源","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848723,"ip_address":"","comment_id":8001,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"架构是系统的顶层设计，目的是为了解决系统的复杂度。那么，这个系统的复杂度如何判断呢，是不是就跟具体的业务和架构师的认知水平有关系了？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417541,"discussion_content":"后面章节讲述了常见复杂度的来源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7997,"user_name":"solan","can_delete":false,"product_type":"c1","uid":1065877,"ip_address":"","ucode":"1E57CA1C42FAB9","user_header":"","comment_is_top":false,"comment_ctime":1525837108,"is_pvip":false,"replies":[{"id":2314,"content":"架构设计原则会讲","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848765,"ip_address":"","comment_id":7997,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"说到架构，在国内还有一点得考虑，那就是：客户或老板。有时候要适当考虑他们的规划和性格，业务方向，团队规模和实力，投入成本，市场预期（扩张时机），业务团队能力等等，这些都会影响到一个产品的系统架构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417540,"discussion_content":"架构设计原则会讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7978,"user_name":"小思绪","can_delete":false,"product_type":"c1","uid":1123040,"ip_address":"","ucode":"A7F813280BFF10","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e0/8e58a7e1.jpg","comment_is_top":false,"comment_ctime":1525828459,"is_pvip":false,"replies":[{"id":2315,"content":"软件架构设计原则会回答这个问题","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848822,"ip_address":"","comment_id":7978,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"随着时间的推移，用户量上涨，软件系统的复杂度也会变更，我的意思是主要矛盾也会转移，那之前的架构可能就没法满足现在的需求，是不是意味着架构也需要变更呢？整个系统架构变更是要花很大精力的。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417533,"discussion_content":"软件架构设计原则会回答这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10078,"user_name":"小小鸟","can_delete":false,"product_type":"c1","uid":1102550,"ip_address":"","ucode":"11C15D267DE457","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/d6/d393593d.jpg","comment_is_top":false,"comment_ctime":1527261377,"is_pvip":false,"replies":[{"id":3178,"content":"极客邦跟我说留言质量很高，读者都是卧虎藏龙，你可要保证你的文章高质量😂😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527375920,"ip_address":"","comment_id":10078,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"为啥看留言时间 要比看内容时间还要多  哈哈 真好","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418334,"discussion_content":"极客邦跟我说留言质量很高，读者都是卧虎藏龙，你可要保证你的文章高质量😂😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527375920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9954,"user_name":"LEO","can_delete":false,"product_type":"c1","uid":1108463,"ip_address":"","ucode":"7A5008CAC3D6F3","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/ef/1de922ec.jpg","comment_is_top":false,"comment_ctime":1527179851,"is_pvip":false,"replies":[{"id":3117,"content":"太长了记不住😂😂","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1527217255,"ip_address":"","comment_id":9954,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"如果把“架构设计的主要目的是为了解决软件复杂度带来的问题”改为\n\n“架构设计的主要目的是为了解决软件使用过程中因对象、目标、流程、环境复杂度带来的问题”\n\n会不会更容易去理解架构设计的目的和本质，以及架构设计的目的和意义？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418274,"discussion_content":"太长了记不住😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527217255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9463,"user_name":"易燃易爆炸","can_delete":false,"product_type":"c1","uid":1115949,"ip_address":"","ucode":"081F5310EB6D61","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/2d/0ac560a6.jpg","comment_is_top":false,"comment_ctime":1526889269,"is_pvip":false,"replies":[{"id":2840,"content":"麻雀虽小五脏俱全😃😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526893182,"ip_address":"","comment_id":9463,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"老师写的这篇文章，让我重新认识了当年的学生成绩管理系统。感谢～","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418075,"discussion_content":"麻雀虽小五脏俱全😃😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526893182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9215,"user_name":"tangbl93","can_delete":false,"product_type":"c1","uid":1109195,"ip_address":"","ucode":"6DB01CAC94DCBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/cb/90b8b9eb.jpg","comment_is_top":false,"comment_ctime":1526694210,"is_pvip":false,"replies":[{"id":2775,"content":"那就是可扩展性有问题，先设计一个基本架构","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526702797,"ip_address":"","comment_id":9215,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"老师，现在我们的代码(iOS)整个逻辑一团糟，现在的主要复杂度应该就是在保证业务稳定的前提下搭建一个基本的架构体系了吧😂","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418075,"discussion_content":"麻雀虽小五脏俱全😃😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526893182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":9126,"user_name":"重剑","can_delete":false,"product_type":"c1","uid":1133526,"ip_address":"","ucode":"EDD4E163CDC508","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/d6/68561c13.jpg","comment_is_top":false,"comment_ctime":1526619682,"is_pvip":false,"replies":[{"id":2736,"content":"这就是你的心得体会和收获，知道自己做的不对也是收获😃","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526621943,"ip_address":"","comment_id":9126,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"为了架构而架构，好像再说我😅","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417978,"discussion_content":"这就是你的心得体会和收获，知道自己做的不对也是收获😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526621943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8439,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1526218392,"is_pvip":false,"replies":[{"id":2483,"content":"有的放矢才能设计好架构","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526253599,"ip_address":"","comment_id":8439,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"寻找答案从定义问题开始，关于为什么要进行架构设计这个问题其实没有去思考过，只是一个惯性动作，在真正设计时也是更多的关注功能性需求，同时对系统的容量、耗时要求会有更多的关注，而我当前所负责的系统在某些场景下对数据的准确性和实时性有很高的要求，也是因为对这一块关注的缺失导致了两次故障的发生，才不得不对此投入精力去改造。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417978,"discussion_content":"这就是你的心得体会和收获，知道自己做的不对也是收获😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526621943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8415,"user_name":"Vincent ly","can_delete":false,"product_type":"c1","uid":1110257,"ip_address":"","ucode":"02E19AF69625C2","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/f1/d19dc770.jpg","comment_is_top":false,"comment_ctime":1526194520,"is_pvip":false,"replies":[{"id":2486,"content":"功能测试对可靠性和性能确实要求不高，云主机申请并发和流量需要给出具体的性能数值才能做判断。\n\n另外，通常情况下私有云的复杂度在于云主机的管理，功能和逻辑很多，可扩展是关键复杂度，需要做好服务化","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1526254102,"ip_address":"","comment_id":8415,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"老师好，我公司(某大型保险公司)正在做私有云平台。\n关于这个云平台架构，结合您的分享，我的一些思考如下，不知是否到点\n1 私有云平台承载的的应用主要为功能测试，因此数据可靠性和可用性要求 均不是特别高。 不需要考虑异灾备等复杂场景\n2 云主机申请并发相对比较多， 消息队列集群要求较高\n3 测试主机对流量要求较高，不能依赖于原生的open vswitch， 需要引进三方sdn设备\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417719,"discussion_content":"有的放矢才能设计好架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526253599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":8001,"user_name":"aslong龙","can_delete":false,"product_type":"c1","uid":1125377,"ip_address":"","ucode":"E98B905FCED558","user_header":"https://static001.geekbang.org/account/avatar/00/11/2c/01/f8bf4d7f.jpg","comment_is_top":false,"comment_ctime":1525840913,"is_pvip":false,"replies":[{"id":2313,"content":"后面章节讲述了常见复杂度的来源","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848723,"ip_address":"","comment_id":8001,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"架构是系统的顶层设计，目的是为了解决系统的复杂度。那么，这个系统的复杂度如何判断呢，是不是就跟具体的业务和架构师的认知水平有关系了？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417705,"discussion_content":"功能测试对可靠性和性能确实要求不高，云主机申请并发和流量需要给出具体的性能数值才能做判断。\n\n另外，通常情况下私有云的复杂度在于云主机的管理，功能和逻辑很多，可扩展是关键复杂度，需要做好服务化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1526254102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7997,"user_name":"solan","can_delete":false,"product_type":"c1","uid":1065877,"ip_address":"","ucode":"1E57CA1C42FAB9","user_header":"","comment_is_top":false,"comment_ctime":1525837108,"is_pvip":false,"replies":[{"id":2314,"content":"架构设计原则会讲","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848765,"ip_address":"","comment_id":7997,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"说到架构，在国内还有一点得考虑，那就是：客户或老板。有时候要适当考虑他们的规划和性格，业务方向，团队规模和实力，投入成本，市场预期（扩张时机），业务团队能力等等，这些都会影响到一个产品的系统架构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417541,"discussion_content":"后面章节讲述了常见复杂度的来源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7978,"user_name":"小思绪","can_delete":false,"product_type":"c1","uid":1123040,"ip_address":"","ucode":"A7F813280BFF10","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e0/8e58a7e1.jpg","comment_is_top":false,"comment_ctime":1525828459,"is_pvip":false,"replies":[{"id":2315,"content":"软件架构设计原则会回答这个问题","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848822,"ip_address":"","comment_id":7978,"utype":1}],"discussion_count":1,"race_medal":0,"score":16,"product_id":100006601,"comment_content":"随着时间的推移，用户量上涨，软件系统的复杂度也会变更，我的意思是主要矛盾也会转移，那之前的架构可能就没法满足现在的需求，是不是意味着架构也需要变更呢？整个系统架构变更是要花很大精力的。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417540,"discussion_content":"架构设计原则会讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7973,"user_name":"100kg","can_delete":false,"product_type":"c1","uid":1101294,"ip_address":"","ucode":"98589A8F7ED8BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/ee/f204ba32.jpg","comment_is_top":false,"comment_ctime":1525826975,"is_pvip":false,"replies":[{"id":2317,"content":"架构设计原则会解释","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848882,"ip_address":"","comment_id":7973,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"架构固然重要，但是也不能过度设计，简洁高效的架构能加速项目的开发进度，过度设计的繁重的架构会严重拖慢进度","like_count":0},{"had_liked":false,"id":7954,"user_name":"有渔@蔡","can_delete":false,"product_type":"c1","uid":1099829,"ip_address":"","ucode":"4AB669229892C8","user_header":"","comment_is_top":false,"comment_ctime":1525817782,"is_pvip":false,"replies":[{"id":2318,"content":"视野宽广，知识丰富","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848974,"ip_address":"","comment_id":7954,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"看了留言，发现爱学习的往往是技术业务强的人。架构跟个人的成功一样，没法复制。是个人成长路上适合环境生存，最后你凤凰涅槃，成功了。这时你的思维，格局，做事方式等就是个人的架构。另外，明朝朱元璋设计的制度就是经过不断的历史血泪教训后，适合当时环境的架构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417530,"discussion_content":"架构设计原则会解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7911,"user_name":"走小調的凡世林","can_delete":false,"product_type":"c1","uid":1011453,"ip_address":"","ucode":"EF3E5195D56188","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/fd/6d0109c0.jpg","comment_is_top":false,"comment_ctime":1525778441,"is_pvip":false,"replies":[{"id":2293,"content":"可扩展章节有讲述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525823775,"ip_address":"","comment_id":7911,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题。那么业务复杂度也可以通过架构解决吗？比如我们部门内部管理系统有好几套，内容管理系统、报表分析系统等，运营人员使用的话要登录两次，为了降低业务复杂度，引入单点登录功能，业内是否有比较好的集成框架推荐？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417527,"discussion_content":"视野宽广，知识丰富","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7906,"user_name":"wocow","can_delete":false,"product_type":"c1","uid":1021989,"ip_address":"","ucode":"7335B115FCA06C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/25/93977b53.jpg","comment_is_top":false,"comment_ctime":1525774281,"is_pvip":false,"replies":[{"id":2277,"content":"架构设计原则部分会讲到","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525775677,"ip_address":"","comment_id":7906,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件复杂度带来的问题，由此可以引申出问题「什么系统在什么情况下的什么复杂问题」\n\n在实际的工作中，最忌讳的是一口想吃成大胖子\n\n我理解的架构师更多的是学会思考与沟通，在成本中进行决策，任何技术脱离了业务场景都是没有意义的，就像纸上谈兵一样，所以架构师是产品与技术的桥梁，不会为了几辆车建高速公路，也不会只给几万辆车搭独木桥\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417515,"discussion_content":"可扩展章节有讲述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525823775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7764,"user_name":"大利猫","can_delete":false,"product_type":"c1","uid":1100203,"ip_address":"","ucode":"5F09BC0A033E3E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/ab/c74a2fae.jpg","comment_is_top":false,"comment_ctime":1525704089,"is_pvip":false,"replies":[{"id":2243,"content":"非常正确","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525728866,"ip_address":"","comment_id":7764,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"架构的第一步:准确定义问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417512,"discussion_content":"架构设计原则部分会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525775677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7722,"user_name":"金桔","can_delete":false,"product_type":"c1","uid":1103700,"ip_address":"","ucode":"ABE20854919C1F","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/54/feedf372.jpg","comment_is_top":false,"comment_ctime":1525674937,"is_pvip":false,"replies":[{"id":2241,"content":"说出你的故事","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525703511,"ip_address":"","comment_id":7722,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"就目前我们的系统设计，在这个指导思想下去分析思考，确实走进了误区。这一课感触颇深👍","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417473,"discussion_content":"非常正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525728866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7667,"user_name":"itperson","can_delete":false,"product_type":"c1","uid":1008401,"ip_address":"","ucode":"1363D71C84CF8B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/11/ea921534.jpg","comment_is_top":false,"comment_ctime":1525614617,"is_pvip":false,"replies":[{"id":2220,"content":"后面会有高性能设计篇章","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525674872,"ip_address":"","comment_id":7667,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"如何针对不同技术性能指标设计恰当的架构这是一个很有趣的问题 希望您给予指点","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417461,"discussion_content":"说出你的故事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525703511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7645,"user_name":"stanley","can_delete":false,"product_type":"c1","uid":1102590,"ip_address":"","ucode":"7CD9EBE5242460","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/fe/29bf8a9e.jpg","comment_is_top":false,"comment_ctime":1525601436,"is_pvip":false,"replies":[{"id":2222,"content":"架构本身太复杂也是问题所在","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525675091,"ip_address":"","comment_id":7645,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"运维出身再转开发，对架构理解和设计未必停留在应用的堆叠和设计一定要结合当下考虑长远但不能太长远，技术一定要服务于人的理念。目前所在公司属于回流员工，原来的架构师已经离职，但发生了一件让所有人瞠目结舌的事情是，原来架构师设计的劝架架构（或框架）大家都认为很好很符合当下甚至未来，但架构师离职后才发现，不进是新进员工还是老员工都无法掌握原来架构师这套架构，一个现有功能的维护都需要review该模块所以代码，最尴尬的是架构师写得代码身为5年+的开发竟然看不懂。。。而我们使用的需要是全宇宙最牛逼的php。。。请大神解惑","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417430,"discussion_content":"架构本身太复杂也是问题所在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525675091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7520,"user_name":"任鹏斌","can_delete":false,"product_type":"c1","uid":1104086,"ip_address":"","ucode":"34319B05EA6E74","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/d6/47da34bf.jpg","comment_is_top":false,"comment_ctime":1525506373,"is_pvip":false,"replies":[{"id":2177,"content":"关于可扩展性，后面会有多个章节涉及","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525563530,"ip_address":"","comment_id":7520,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"我们目前项目架构存在严重的设计过度问题。\n1.不贴近用户需求，70%以上的功能是用户平时不会用的，或根本不需要的\n2.人为增加项目复杂度，流程设计繁琐，为所谓的可扩展设置很多预留功能，实际用户新增需求是这些预留功能根本无法满足，反倒是因为本身设计太复杂，随便一个小的改动可能产生不可预估故障。\n3.系统使用太复杂，有的系统设置连开发人员都弄不清楚怎么用过段时间就忘记，更不用说普通用户。\n4.服务器资源浪费，平均内存和cpu利用率不到30%\n其他不一而足，但无力改变","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417430,"discussion_content":"架构本身太复杂也是问题所在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525675091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7497,"user_name":"小叶子","can_delete":false,"product_type":"c1","uid":1106036,"ip_address":"","ucode":"E0252D4479E9B3","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/74/5d1f67b6.jpg","comment_is_top":false,"comment_ctime":1525495264,"is_pvip":false,"replies":[{"id":2148,"content":"nginx做反向代理，可以实现acl等功能，如果你的web服务器有这些功能，确实不要nginx也可以","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525500118,"ip_address":"","comment_id":7497,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"在学校学生选课系统的框架中，nginx和web服务器分离为两层，不太理解。nginx不就是各种服务器的实现手段吗？web服务器也可以用nginx实现。这里是想说负载均衡服务器吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417381,"discussion_content":"关于可扩展性，后面会有多个章节涉及","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525563530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7973,"user_name":"100kg","can_delete":false,"product_type":"c1","uid":1101294,"ip_address":"","ucode":"98589A8F7ED8BB","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/ee/f204ba32.jpg","comment_is_top":false,"comment_ctime":1525826975,"is_pvip":false,"replies":[{"id":2317,"content":"架构设计原则会解释","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848882,"ip_address":"","comment_id":7973,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"架构固然重要，但是也不能过度设计，简洁高效的架构能加速项目的开发进度，过度设计的繁重的架构会严重拖慢进度","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417530,"discussion_content":"架构设计原则会解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7954,"user_name":"有渔@蔡","can_delete":false,"product_type":"c1","uid":1099829,"ip_address":"","ucode":"4AB669229892C8","user_header":"","comment_is_top":false,"comment_ctime":1525817782,"is_pvip":false,"replies":[{"id":2318,"content":"视野宽广，知识丰富","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525848974,"ip_address":"","comment_id":7954,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"看了留言，发现爱学习的往往是技术业务强的人。架构跟个人的成功一样，没法复制。是个人成长路上适合环境生存，最后你凤凰涅槃，成功了。这时你的思维，格局，做事方式等就是个人的架构。另外，明朝朱元璋设计的制度就是经过不断的历史血泪教训后，适合当时环境的架构。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417527,"discussion_content":"视野宽广，知识丰富","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525848974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7911,"user_name":"走小調的凡世林","can_delete":false,"product_type":"c1","uid":1011453,"ip_address":"","ucode":"EF3E5195D56188","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/fd/6d0109c0.jpg","comment_is_top":false,"comment_ctime":1525778441,"is_pvip":false,"replies":[{"id":2293,"content":"可扩展章节有讲述","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525823775,"ip_address":"","comment_id":7911,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题。那么业务复杂度也可以通过架构解决吗？比如我们部门内部管理系统有好几套，内容管理系统、报表分析系统等，运营人员使用的话要登录两次，为了降低业务复杂度，引入单点登录功能，业内是否有比较好的集成框架推荐？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417515,"discussion_content":"可扩展章节有讲述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525823775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7906,"user_name":"wocow","can_delete":false,"product_type":"c1","uid":1021989,"ip_address":"","ucode":"7335B115FCA06C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/25/93977b53.jpg","comment_is_top":false,"comment_ctime":1525774281,"is_pvip":false,"replies":[{"id":2277,"content":"架构设计原则部分会讲到","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525775677,"ip_address":"","comment_id":7906,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件复杂度带来的问题，由此可以引申出问题「什么系统在什么情况下的什么复杂问题」\n\n在实际的工作中，最忌讳的是一口想吃成大胖子\n\n我理解的架构师更多的是学会思考与沟通，在成本中进行决策，任何技术脱离了业务场景都是没有意义的，就像纸上谈兵一样，所以架构师是产品与技术的桥梁，不会为了几辆车建高速公路，也不会只给几万辆车搭独木桥\n","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417512,"discussion_content":"架构设计原则部分会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525775677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7764,"user_name":"大利猫","can_delete":false,"product_type":"c1","uid":1100203,"ip_address":"","ucode":"5F09BC0A033E3E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/ab/c74a2fae.jpg","comment_is_top":false,"comment_ctime":1525704089,"is_pvip":false,"replies":[{"id":2243,"content":"非常正确","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525728866,"ip_address":"","comment_id":7764,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"架构的第一步:准确定义问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417473,"discussion_content":"非常正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525728866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7722,"user_name":"金桔","can_delete":false,"product_type":"c1","uid":1103700,"ip_address":"","ucode":"ABE20854919C1F","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/54/feedf372.jpg","comment_is_top":false,"comment_ctime":1525674937,"is_pvip":false,"replies":[{"id":2241,"content":"说出你的故事","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525703511,"ip_address":"","comment_id":7722,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"就目前我们的系统设计，在这个指导思想下去分析思考，确实走进了误区。这一课感触颇深👍","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417461,"discussion_content":"说出你的故事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525703511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7667,"user_name":"itperson","can_delete":false,"product_type":"c1","uid":1008401,"ip_address":"","ucode":"1363D71C84CF8B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/11/ea921534.jpg","comment_is_top":false,"comment_ctime":1525614617,"is_pvip":false,"replies":[{"id":2220,"content":"后面会有高性能设计篇章","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525674872,"ip_address":"","comment_id":7667,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"如何针对不同技术性能指标设计恰当的架构这是一个很有趣的问题 希望您给予指点","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417436,"discussion_content":"后面会有高性能设计篇章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525674872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7645,"user_name":"stanley","can_delete":false,"product_type":"c1","uid":1102590,"ip_address":"","ucode":"7CD9EBE5242460","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/fe/29bf8a9e.jpg","comment_is_top":false,"comment_ctime":1525601436,"is_pvip":false,"replies":[{"id":2222,"content":"架构本身太复杂也是问题所在","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525675091,"ip_address":"","comment_id":7645,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"运维出身再转开发，对架构理解和设计未必停留在应用的堆叠和设计一定要结合当下考虑长远但不能太长远，技术一定要服务于人的理念。目前所在公司属于回流员工，原来的架构师已经离职，但发生了一件让所有人瞠目结舌的事情是，原来架构师设计的劝架架构（或框架）大家都认为很好很符合当下甚至未来，但架构师离职后才发现，不进是新进员工还是老员工都无法掌握原来架构师这套架构，一个现有功能的维护都需要review该模块所以代码，最尴尬的是架构师写得代码身为5年+的开发竟然看不懂。。。而我们使用的需要是全宇宙最牛逼的php。。。请大神解惑","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417436,"discussion_content":"后面会有高性能设计篇章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525674872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7520,"user_name":"任鹏斌","can_delete":false,"product_type":"c1","uid":1104086,"ip_address":"","ucode":"34319B05EA6E74","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/d6/47da34bf.jpg","comment_is_top":false,"comment_ctime":1525506373,"is_pvip":false,"replies":[{"id":2177,"content":"关于可扩展性，后面会有多个章节涉及","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525563530,"ip_address":"","comment_id":7520,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"我们目前项目架构存在严重的设计过度问题。\n1.不贴近用户需求，70%以上的功能是用户平时不会用的，或根本不需要的\n2.人为增加项目复杂度，流程设计繁琐，为所谓的可扩展设置很多预留功能，实际用户新增需求是这些预留功能根本无法满足，反倒是因为本身设计太复杂，随便一个小的改动可能产生不可预估故障。\n3.系统使用太复杂，有的系统设置连开发人员都弄不清楚怎么用过段时间就忘记，更不用说普通用户。\n4.服务器资源浪费，平均内存和cpu利用率不到30%\n其他不一而足，但无力改变","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417381,"discussion_content":"关于可扩展性，后面会有多个章节涉及","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525563530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7497,"user_name":"小叶子","can_delete":false,"product_type":"c1","uid":1106036,"ip_address":"","ucode":"E0252D4479E9B3","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/74/5d1f67b6.jpg","comment_is_top":false,"comment_ctime":1525495264,"is_pvip":false,"replies":[{"id":2148,"content":"nginx做反向代理，可以实现acl等功能，如果你的web服务器有这些功能，确实不要nginx也可以","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525500118,"ip_address":"","comment_id":7497,"utype":1}],"discussion_count":1,"race_medal":0,"score":17,"product_id":100006601,"comment_content":"在学校学生选课系统的框架中，nginx和web服务器分离为两层，不太理解。nginx不就是各种服务器的实现手段吗？web服务器也可以用nginx实现。这里是想说负载均衡服务器吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417369,"discussion_content":"nginx做反向代理，可以实现acl等功能，如果你的web服务器有这些功能，确实不要nginx也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7445,"user_name":"rubin","can_delete":false,"product_type":"c1","uid":1007367,"ip_address":"","ucode":"F7081B45C3AF54","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5f/07/afa3f712.jpg","comment_is_top":false,"comment_ctime":1525483952,"is_pvip":false,"replies":[{"id":2154,"content":"别急，复杂度还没讲完呢😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525500768,"ip_address":"","comment_id":7445,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"满足当前业务并可预见性可扩展的架构就是好架构，不一定非得高并发，高性能，高xx，好的架构一定是满足当前业务需求，达到省时，省钱，省心，老板和用户开心了就好。下期是不是讲讲如何设计架构，如何迭代架构呢？多谢了！","like_count":0},{"had_liked":false,"id":7169,"user_name":"c@ini@o","can_delete":false,"product_type":"c1","uid":1024414,"ip_address":"","ucode":"36A38081E9D12F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/9e/5c522094.jpg","comment_is_top":false,"comment_ctime":1525313192,"is_pvip":false,"replies":[{"id":2065,"content":"别急，学完专栏你就知道都涵盖了","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349476,"ip_address":"","comment_id":7169,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"看来和企业架构设计关心的不一样","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417346,"discussion_content":"别急，复杂度还没讲完呢😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7128,"user_name":"Expif","can_delete":false,"product_type":"c1","uid":1002162,"ip_address":"","ucode":"17D1E78E513C18","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/b2/6b8451c1.jpg","comment_is_top":false,"comment_ctime":1525306686,"is_pvip":false,"replies":[{"id":2021,"content":"后面会有章节阐述你的问题","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311767,"ip_address":"","comment_id":7128,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"也可能有这种想法，虽然可以解决当时的问题复杂度，但后续发展呢，所以作为架构师应该为长远考虑。所以各种设计又加进来了，又带来了一系列复杂度，所以这种观点哪里有改进的地方？就是架构一定要着眼于未来，不仅是当下。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417262,"discussion_content":"别急，学完专栏你就知道都涵盖了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7126,"user_name":"Steven⁰⁰⁸","can_delete":false,"product_type":"c1","uid":1111138,"ip_address":"","ucode":"0729C9F79B45EC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/62/13b54c68.jpg","comment_is_top":false,"comment_ctime":1525306391,"is_pvip":false,"replies":[{"id":2022,"content":"学完专栏课程，你就可以尝试回去撸起袖子就重构，有问题咱们到时候结合业务案例交流。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311901,"ip_address":"","comment_id":7126,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"目前在一家创业公司，架构方面也负责，但是之前没有这方面得经验，属于硬上的，第一版架构参考了创始人上家公司的架构，刚开始听起来不错的架构，随着后期的深入开发，越来越觉得有弊端，如web请求通过activemq进行消息分发，这样做事可以做到横向扩展，但是面临同步转异步的问题，同时中间加了activemq这个环节，每次请求时间会相应增加  目前在第一版的基础上改进，把不好的去掉，但还是不知道现在的设计 希望向楼主多学习  ","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417245,"discussion_content":"后面会有章节阐述你的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7117,"user_name":"加油","can_delete":false,"product_type":"c1","uid":1100555,"ip_address":"","ucode":"56BBBC79006D59","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/e3TIKUiaUMfWNnoDPvydj00GAlxPmHYOlnk65OWhLDTrNXxNMqVEIHiajq3ws1gvWHToqq1mXR3QLwyUGGU2ibCpQ/132","comment_is_top":false,"comment_ctime":1525305324,"is_pvip":false,"replies":[{"id":2024,"content":"java流行框架是为了快速开发，但并不是每个软件系统的复杂度都是开发效率，因此框架不要滥用","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312294,"ip_address":"","comment_id":7117,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"看完本文，发现公司架构师的架构设计就是java流行框架堆砌，业务都不熟悉，感觉架构被玩坏了，老师，该如何避免越陷越深","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417239,"discussion_content":"你直接写你的案例，我看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525312676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7113,"user_name":"才才才","can_delete":false,"product_type":"c1","uid":1108848,"ip_address":"","ucode":"BE5BDA9D831217","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/70/7de5b8f6.jpg","comment_is_top":false,"comment_ctime":1525303908,"is_pvip":false,"replies":[{"id":2027,"content":"你直接写你的案例，我看看","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312676,"ip_address":"","comment_id":7113,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"老师，我们公司现在存储遇到了一些问题可以帮忙指导下么","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417239,"discussion_content":"你直接写你的案例，我看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525312676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7123,"user_name":"加多","can_delete":false,"product_type":"c1","uid":1101824,"ip_address":"","ucode":"B2192A2D58C444","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/00/9d05af66.jpg","comment_is_top":false,"comment_ctime":1525306261,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"赞，就是不要过度设计，架构设计要贴合业务，找到适合能解决业务复杂度的设计，才是好的架构设计","like_count":27},{"had_liked":false,"id":7129,"user_name":"@漆~心endless","can_delete":false,"product_type":"c1","uid":1103153,"ip_address":"","ucode":"8DB0BBE2188A1B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/31/b09432cc.jpg","comment_is_top":false,"comment_ctime":1525306698,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"一切脱离业务的架构设计都是耍流氓","like_count":24},{"had_liked":false,"id":71423,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1551339114,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"今日笔记：\n1. 架构，架者，实体也，构者，行为也。架即数据，构即服务。\n2.架构分业务架构和技术架构，业务架构优先(决定)技术架构。脱离业务的技术架构不是好架构，不懂业务的架构师不是好架构师。\n3.技术架构解决业务服务的复杂性问题。\n4.架构可从性能、可用、可靠、安全、维护、扩展、人力、成本、团队经验、推动力等维度切分业务场景的复杂度，按复杂度高低顺序排列，找到解决该纬度复杂性的方案，通盘评估各解决方案间的冲突及可行性，最终得到一个可落地的架构方案。","like_count":8},{"had_liked":false,"id":7268,"user_name":"softpower2018","can_delete":false,"product_type":"c1","uid":1058373,"ip_address":"","ucode":"CF8056F81D2898","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKiaqmp1PKvQCpDSK7953IEUHZ13uLgos97FwcYCqGrxMKs4arCZmZibSBoBrw6ibHp53jZ19haqw3fA/132","comment_is_top":false,"comment_ctime":1525360801,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"分析理解业务痛点，针对痛点进行架构设计！这才是架构的意义所在！多么痛的领悟","like_count":3},{"had_liked":false,"id":7445,"user_name":"rubin","can_delete":false,"product_type":"c1","uid":1007367,"ip_address":"","ucode":"F7081B45C3AF54","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5f/07/afa3f712.jpg","comment_is_top":false,"comment_ctime":1525483952,"is_pvip":false,"replies":[{"id":2154,"content":"别急，复杂度还没讲完呢😂","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525500768,"ip_address":"","comment_id":7445,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"满足当前业务并可预见性可扩展的架构就是好架构，不一定非得高并发，高性能，高xx，好的架构一定是满足当前业务需求，达到省时，省钱，省心，老板和用户开心了就好。下期是不是讲讲如何设计架构，如何迭代架构呢？多谢了！","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417346,"discussion_content":"别急，复杂度还没讲完呢😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525500768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7169,"user_name":"c@ini@o","can_delete":false,"product_type":"c1","uid":1024414,"ip_address":"","ucode":"36A38081E9D12F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/9e/5c522094.jpg","comment_is_top":false,"comment_ctime":1525313192,"is_pvip":false,"replies":[{"id":2065,"content":"别急，学完专栏你就知道都涵盖了","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525349476,"ip_address":"","comment_id":7169,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"看来和企业架构设计关心的不一样","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417262,"discussion_content":"别急，学完专栏你就知道都涵盖了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525349476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7128,"user_name":"Expif","can_delete":false,"product_type":"c1","uid":1002162,"ip_address":"","ucode":"17D1E78E513C18","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/b2/6b8451c1.jpg","comment_is_top":false,"comment_ctime":1525306686,"is_pvip":false,"replies":[{"id":2021,"content":"后面会有章节阐述你的问题","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311767,"ip_address":"","comment_id":7128,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"也可能有这种想法，虽然可以解决当时的问题复杂度，但后续发展呢，所以作为架构师应该为长远考虑。所以各种设计又加进来了，又带来了一系列复杂度，所以这种观点哪里有改进的地方？就是架构一定要着眼于未来，不仅是当下。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417245,"discussion_content":"后面会有章节阐述你的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7126,"user_name":"Steven⁰⁰⁸","can_delete":false,"product_type":"c1","uid":1111138,"ip_address":"","ucode":"0729C9F79B45EC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/62/13b54c68.jpg","comment_is_top":false,"comment_ctime":1525306391,"is_pvip":false,"replies":[{"id":2022,"content":"学完专栏课程，你就可以尝试回去撸起袖子就重构，有问题咱们到时候结合业务案例交流。","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525311901,"ip_address":"","comment_id":7126,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"目前在一家创业公司，架构方面也负责，但是之前没有这方面得经验，属于硬上的，第一版架构参考了创始人上家公司的架构，刚开始听起来不错的架构，随着后期的深入开发，越来越觉得有弊端，如web请求通过activemq进行消息分发，这样做事可以做到横向扩展，但是面临同步转异步的问题，同时中间加了activemq这个环节，每次请求时间会相应增加  目前在第一版的基础上改进，把不好的去掉，但还是不知道现在的设计 希望向楼主多学习  ","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417244,"discussion_content":"学完专栏课程，你就可以尝试回去撸起袖子就重构，有问题咱们到时候结合业务案例交流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7117,"user_name":"加油","can_delete":false,"product_type":"c1","uid":1100555,"ip_address":"","ucode":"56BBBC79006D59","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/e3TIKUiaUMfWNnoDPvydj00GAlxPmHYOlnk65OWhLDTrNXxNMqVEIHiajq3ws1gvWHToqq1mXR3QLwyUGGU2ibCpQ/132","comment_is_top":false,"comment_ctime":1525305324,"is_pvip":false,"replies":[{"id":2024,"content":"java流行框架是为了快速开发，但并不是每个软件系统的复杂度都是开发效率，因此框架不要滥用","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312294,"ip_address":"","comment_id":7117,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"看完本文，发现公司架构师的架构设计就是java流行框架堆砌，业务都不熟悉，感觉架构被玩坏了，老师，该如何避免越陷越深","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417242,"discussion_content":"java流行框架是为了快速开发，但并不是每个软件系统的复杂度都是开发效率，因此框架不要滥用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525312294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7113,"user_name":"才才才","can_delete":false,"product_type":"c1","uid":1108848,"ip_address":"","ucode":"BE5BDA9D831217","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/70/7de5b8f6.jpg","comment_is_top":false,"comment_ctime":1525303908,"is_pvip":false,"replies":[{"id":2027,"content":"你直接写你的案例，我看看","user_name":"作者回复","user_name_real":"华仔@阿里游戏","uid":1098920,"ctime":1525312676,"ip_address":"","comment_id":7113,"utype":1}],"discussion_count":1,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"老师，我们公司现在存储遇到了一些问题可以帮忙指导下么","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417244,"discussion_content":"学完专栏课程，你就可以尝试回去撸起袖子就重构，有问题咱们到时候结合业务案例交流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525311901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7123,"user_name":"加多","can_delete":false,"product_type":"c1","uid":1101824,"ip_address":"","ucode":"B2192A2D58C444","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/00/9d05af66.jpg","comment_is_top":false,"comment_ctime":1525306261,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"赞，就是不要过度设计，架构设计要贴合业务，找到适合能解决业务复杂度的设计，才是好的架构设计","like_count":27},{"had_liked":false,"id":7129,"user_name":"@漆~心endless","can_delete":false,"product_type":"c1","uid":1103153,"ip_address":"","ucode":"8DB0BBE2188A1B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/31/b09432cc.jpg","comment_is_top":false,"comment_ctime":1525306698,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"一切脱离业务的架构设计都是耍流氓","like_count":24},{"had_liked":false,"id":71423,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1551339114,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"今日笔记：\n1. 架构，架者，实体也，构者，行为也。架即数据，构即服务。\n2.架构分业务架构和技术架构，业务架构优先(决定)技术架构。脱离业务的技术架构不是好架构，不懂业务的架构师不是好架构师。\n3.技术架构解决业务服务的复杂性问题。\n4.架构可从性能、可用、可靠、安全、维护、扩展、人力、成本、团队经验、推动力等维度切分业务场景的复杂度，按复杂度高低顺序排列，找到解决该纬度复杂性的方案，通盘评估各解决方案间的冲突及可行性，最终得到一个可落地的架构方案。","like_count":8},{"had_liked":false,"id":7268,"user_name":"softpower2018","can_delete":false,"product_type":"c1","uid":1058373,"ip_address":"","ucode":"CF8056F81D2898","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKiaqmp1PKvQCpDSK7953IEUHZ13uLgos97FwcYCqGrxMKs4arCZmZibSBoBrw6ibHp53jZ19haqw3fA/132","comment_is_top":false,"comment_ctime":1525360801,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":18,"product_id":100006601,"comment_content":"分析理解业务痛点，针对痛点进行架构设计！这才是架构的意义所在！多么痛的领悟","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":417242,"discussion_content":"java流行框架是为了快速开发，但并不是每个软件系统的复杂度都是开发效率，因此框架不要滥用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1525312294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7259,"user_name":"丶Zero灬","can_delete":false,"product_type":"c1","uid":1073556,"ip_address":"","ucode":"B0C24B7071DABF","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/94/cc6c693d.jpg","comment_is_top":false,"comment_ctime":1525358856,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构设计不是万能的，而是要合身。深刻了解自身项目，知道身高体重各种围度才能打造合身的架构。而这样的衣服穿起来才舒服。","like_count":3},{"had_liked":false,"id":7137,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1070041,"ip_address":"","ucode":"ED6B5373A332D2","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/d9/f50c2ccf.jpg","comment_is_top":false,"comment_ctime":1525307460,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构是为了解决复杂的问题，或者说是解决最重要的问题；目前我正在负责一个金融系统，这个金融系统最重要最复杂的地方就是算法模型，我们在这一块花了很多心思来进行设计。以保证以后他的后续可扩展、算法的时效性等。","like_count":3},{"had_liked":false,"id":146854,"user_name":"吕宗胜ZJU","can_delete":false,"product_type":"c1","uid":1112605,"ip_address":"","ucode":"9CD5CCBABF3D68","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/1d/5dc4ba61.jpg","comment_is_top":false,"comment_ctime":1572676859,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"非常赞同架构是为了解决系统复杂度这个思路。不同业务架构关注的点也会不一样，比如说对于C端业务来说，稳定性是首要保证的，针对稳定性，会衍生出许多不同的架构。同时架构也应该是演进的，业务的不同时期，要解决的复杂性是不同的。","like_count":2},{"had_liked":false,"id":8217,"user_name":"星凡","can_delete":false,"product_type":"c1","uid":1103829,"ip_address":"","ucode":"EF550131FAE1BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/d5/b9e3332e.jpg","comment_is_top":false,"comment_ctime":1525975238,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"1、忌过度设计\n2、忌完美主义\n3、......","like_count":2},{"had_liked":false,"id":7519,"user_name":"野马","can_delete":false,"product_type":"c1","uid":1065176,"ip_address":"","ucode":"CC58CBF541D34A","user_header":"https://static001.geekbang.org/account/avatar/00/10/40/d8/69722032.jpg","comment_is_top":false,"comment_ctime":1525506338,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"所有脱离业务的架构设计都是耍流氓。","like_count":2},{"had_liked":false,"id":7376,"user_name":"王刚","can_delete":false,"product_type":"c1","uid":1103821,"ip_address":"","ucode":"4763CC9A937C38","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/cd/6ebfc468.jpg","comment_is_top":false,"comment_ctime":1525432785,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"讲的真好～所有东西的出现，都是为了解决问题所诞生～就好比老师讲的架构是为了解决软件的复杂度所诞生～我个人觉得，架构也不是万能的，还的就具体的业务去分析～避免杀鸡用牛刀的举措，反而得不偿失～给老师一个赞👍","like_count":2},{"had_liked":false,"id":117864,"user_name":"许凯","can_delete":false,"product_type":"c1","uid":1604645,"ip_address":"","ucode":"4F11AD41CB0244","user_header":"https://static001.geekbang.org/account/avatar/00/18/7c/25/70134099.jpg","comment_is_top":false,"comment_ctime":1564153825,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"上，止，正","like_count":1},{"had_liked":false,"id":8842,"user_name":"missa","can_delete":false,"product_type":"c1","uid":1033417,"ip_address":"","ucode":"485CB229C4C556","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/c9/90c8a53e.jpg","comment_is_top":false,"comment_ctime":1526478368,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构设计在于取舍，权衡。基于当前的业务，也需要考虑到当前的用户量，公司规模大小，发展情况。用合适的架构去解决当前业务的问题。","like_count":1},{"had_liked":false,"id":8162,"user_name":"王旭东","can_delete":false,"product_type":"c1","uid":1108106,"ip_address":"","ucode":"61950FD5D5BFF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/8a/e3032578.jpg","comment_is_top":false,"comment_ctime":1525931718,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题，赞赞赞赞赞赞","like_count":1},{"had_liked":false,"id":7771,"user_name":"伟伟","can_delete":false,"product_type":"c1","uid":1106496,"ip_address":"","ucode":"3A482F0C3E7056","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/40/a5d75005.jpg","comment_is_top":false,"comment_ctime":1525709224,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"系统设计的目的是为了解决业务问题。架构设计的目的其实是为了分离复杂度。\n复杂度分为业务复杂度和技术复杂度。业务复杂度分离可以通过领域驱动等等去解决，而技术复杂度可以从高性能、高可用和数据一致性三个维度去分析。","like_count":1},{"had_liked":false,"id":7259,"user_name":"丶Zero灬","can_delete":false,"product_type":"c1","uid":1073556,"ip_address":"","ucode":"B0C24B7071DABF","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/94/cc6c693d.jpg","comment_is_top":false,"comment_ctime":1525358856,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构设计不是万能的，而是要合身。深刻了解自身项目，知道身高体重各种围度才能打造合身的架构。而这样的衣服穿起来才舒服。","like_count":3},{"had_liked":false,"id":7137,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1070041,"ip_address":"","ucode":"ED6B5373A332D2","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/d9/f50c2ccf.jpg","comment_is_top":false,"comment_ctime":1525307460,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构是为了解决复杂的问题，或者说是解决最重要的问题；目前我正在负责一个金融系统，这个金融系统最重要最复杂的地方就是算法模型，我们在这一块花了很多心思来进行设计。以保证以后他的后续可扩展、算法的时效性等。","like_count":3},{"had_liked":false,"id":146854,"user_name":"吕宗胜ZJU","can_delete":false,"product_type":"c1","uid":1112605,"ip_address":"","ucode":"9CD5CCBABF3D68","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/1d/5dc4ba61.jpg","comment_is_top":false,"comment_ctime":1572676859,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"非常赞同架构是为了解决系统复杂度这个思路。不同业务架构关注的点也会不一样，比如说对于C端业务来说，稳定性是首要保证的，针对稳定性，会衍生出许多不同的架构。同时架构也应该是演进的，业务的不同时期，要解决的复杂性是不同的。","like_count":2},{"had_liked":false,"id":8217,"user_name":"星凡","can_delete":false,"product_type":"c1","uid":1103829,"ip_address":"","ucode":"EF550131FAE1BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/d5/b9e3332e.jpg","comment_is_top":false,"comment_ctime":1525975238,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"1、忌过度设计\n2、忌完美主义\n3、......","like_count":2},{"had_liked":false,"id":7519,"user_name":"野马","can_delete":false,"product_type":"c1","uid":1065176,"ip_address":"","ucode":"CC58CBF541D34A","user_header":"https://static001.geekbang.org/account/avatar/00/10/40/d8/69722032.jpg","comment_is_top":false,"comment_ctime":1525506338,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"所有脱离业务的架构设计都是耍流氓。","like_count":2},{"had_liked":false,"id":7376,"user_name":"王刚","can_delete":false,"product_type":"c1","uid":1103821,"ip_address":"","ucode":"4763CC9A937C38","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/cd/6ebfc468.jpg","comment_is_top":false,"comment_ctime":1525432785,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"讲的真好～所有东西的出现，都是为了解决问题所诞生～就好比老师讲的架构是为了解决软件的复杂度所诞生～我个人觉得，架构也不是万能的，还的就具体的业务去分析～避免杀鸡用牛刀的举措，反而得不偿失～给老师一个赞👍","like_count":2},{"had_liked":false,"id":117864,"user_name":"许凯","can_delete":false,"product_type":"c1","uid":1604645,"ip_address":"","ucode":"4F11AD41CB0244","user_header":"https://static001.geekbang.org/account/avatar/00/18/7c/25/70134099.jpg","comment_is_top":false,"comment_ctime":1564153825,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"上，止，正","like_count":1},{"had_liked":false,"id":8842,"user_name":"missa","can_delete":false,"product_type":"c1","uid":1033417,"ip_address":"","ucode":"485CB229C4C556","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/c9/90c8a53e.jpg","comment_is_top":false,"comment_ctime":1526478368,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构设计在于取舍，权衡。基于当前的业务，也需要考虑到当前的用户量，公司规模大小，发展情况。用合适的架构去解决当前业务的问题。","like_count":1},{"had_liked":false,"id":8162,"user_name":"王旭东","can_delete":false,"product_type":"c1","uid":1108106,"ip_address":"","ucode":"61950FD5D5BFF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/8a/e3032578.jpg","comment_is_top":false,"comment_ctime":1525931718,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题，赞赞赞赞赞赞","like_count":1},{"had_liked":false,"id":7771,"user_name":"伟伟","can_delete":false,"product_type":"c1","uid":1106496,"ip_address":"","ucode":"3A482F0C3E7056","user_header":"https://static001.geekbang.org/account/avatar/00/10/e2/40/a5d75005.jpg","comment_is_top":false,"comment_ctime":1525709224,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":19,"product_id":100006601,"comment_content":"系统设计的目的是为了解决业务问题。架构设计的目的其实是为了分离复杂度。\n复杂度分为业务复杂度和技术复杂度。业务复杂度分离可以通过领域驱动等等去解决，而技术复杂度可以从高性能、高可用和数据一致性三个维度去分析。","like_count":1},{"had_liked":false,"id":7284,"user_name":"Pantheon","can_delete":false,"product_type":"c1","uid":1110487,"ip_address":"","ucode":"D1FF4C18CE3475","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/d7/a52e390d.jpg","comment_is_top":false,"comment_ctime":1525365979,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"技术为了业务，脱离业务纯粹技术就是浪费","like_count":1},{"had_liked":false,"id":7239,"user_name":"快乐的小傻子","can_delete":false,"product_type":"c1","uid":1109721,"ip_address":"","ucode":"F6C5AB7C08C16F","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/d9/84d44bc8.jpg","comment_is_top":false,"comment_ctime":1525351882,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"感悟：不能为了架构，而作架构，架构应能解决产品需求带来的复杂性，更高效的做事情","like_count":1},{"had_liked":false,"id":7223,"user_name":"但莫","can_delete":false,"product_type":"c1","uid":1108901,"ip_address":"","ucode":"6B40F4E0EDB1C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/a5/5d04b7cd.jpg","comment_is_top":false,"comment_ctime":1525344640,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"架构最终是为了知道和阐述系统状态，来满足现有需求和可预期的一部分需求。应该避免假大空，纯凭想象。\n在做架构设计的时候应从需求入手，循序渐进，逐步细化。在做架构的过程中要让相关方理解系统设计，可以使用不同的视图工具。比如案例中的物理架构，还可以有逻辑架构和用例图。这样可以让开发人员，客户，管理人员，运维人员，都能很好理解系统设计，方便沟通。","like_count":1},{"had_liked":false,"id":7207,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1525336084,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"我的感受是:业务复杂会逐渐导致需要一个复杂的系统来应对，一个复杂的系统需要模块的分工，从而导致必须通过架构设计来规划各个模块的功能和相互之间的联系，而架构设计的关键就是要找到具有关键意义的复杂点，让系统能应对复杂业务的需要","like_count":1},{"had_liked":false,"id":7170,"user_name":"ZYCHD(子玉)","can_delete":false,"product_type":"c1","uid":1109815,"ip_address":"","ucode":"32B2ED529450C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/37/4b12b4cc.jpg","comment_is_top":false,"comment_ctime":1525313770,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"架构设计主要目的是为了解决软件复杂度的，不同的业务系统有不同的需求差异，需要考虑系统复杂度的方面也不一样。道与术的区别，道指导术。","like_count":1},{"had_liked":false,"id":7130,"user_name":"星火燎原","can_delete":false,"product_type":"c1","uid":1101373,"ip_address":"","ucode":"15AD8E3006E107","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/3d/385b8263.jpg","comment_is_top":false,"comment_ctime":1525306723,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"一言点醒梦中人","like_count":1},{"had_liked":false,"id":7111,"user_name":"18668293795","can_delete":false,"product_type":"c1","uid":1087511,"ip_address":"","ucode":"5CB9FC97CDE87A","user_header":"","comment_is_top":false,"comment_ctime":1525303403,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"不禁想起面试的时候问的哪些问题。。。太偏了","like_count":1},{"had_liked":false,"id":390506,"user_name":"存在","can_delete":false,"product_type":"c1","uid":2254854,"ip_address":"北京","ucode":"F3217DC5B799BB","user_header":"https://static001.geekbang.org/account/avatar/00/22/68/06/e74b5675.jpg","comment_is_top":false,"comment_ctime":1715516482,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"关于架构的本质，历史背景、目的，这是第二篇学习笔记https:&#47;&#47;tianmaolin.blog.csdn.net&#47;article&#47;details&#47;138547879","like_count":0},{"had_liked":false,"id":375424,"user_name":"Sherk","can_delete":false,"product_type":"c1","uid":2156245,"ip_address":"广东","ucode":"AFE3E7F158258D","user_header":"https://static001.geekbang.org/account/avatar/00/20/e6/d5/4f1fc074.jpg","comment_is_top":false,"comment_ctime":1685448696,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"做什么都要确定自己的目的，以这个目的为终继续下去。","like_count":0},{"had_liked":false,"id":361491,"user_name":"饼干","can_delete":false,"product_type":"c1","uid":2045612,"ip_address":"北京","ucode":"8BACA7CDAC0B24","user_header":"https://static001.geekbang.org/account/avatar/00/1f/36/ac/6e2c2fc6.jpg","comment_is_top":false,"comment_ctime":1667547847,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"架构是为了解决软件复杂度的问题，要从性能，可用性，可扩展性，成本，安全等角度考虑，针对实际的业务情况来设计","like_count":0},{"had_liked":false,"id":7284,"user_name":"Pantheon","can_delete":false,"product_type":"c1","uid":1110487,"ip_address":"","ucode":"D1FF4C18CE3475","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/d7/a52e390d.jpg","comment_is_top":false,"comment_ctime":1525365979,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"技术为了业务，脱离业务纯粹技术就是浪费","like_count":1},{"had_liked":false,"id":7239,"user_name":"快乐的小傻子","can_delete":false,"product_type":"c1","uid":1109721,"ip_address":"","ucode":"F6C5AB7C08C16F","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/d9/84d44bc8.jpg","comment_is_top":false,"comment_ctime":1525351882,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"感悟：不能为了架构，而作架构，架构应能解决产品需求带来的复杂性，更高效的做事情","like_count":1},{"had_liked":false,"id":7223,"user_name":"但莫","can_delete":false,"product_type":"c1","uid":1108901,"ip_address":"","ucode":"6B40F4E0EDB1C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/a5/5d04b7cd.jpg","comment_is_top":false,"comment_ctime":1525344640,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"架构最终是为了知道和阐述系统状态，来满足现有需求和可预期的一部分需求。应该避免假大空，纯凭想象。\n在做架构设计的时候应从需求入手，循序渐进，逐步细化。在做架构的过程中要让相关方理解系统设计，可以使用不同的视图工具。比如案例中的物理架构，还可以有逻辑架构和用例图。这样可以让开发人员，客户，管理人员，运维人员，都能很好理解系统设计，方便沟通。","like_count":1},{"had_liked":false,"id":7207,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1525336084,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"我的感受是:业务复杂会逐渐导致需要一个复杂的系统来应对，一个复杂的系统需要模块的分工，从而导致必须通过架构设计来规划各个模块的功能和相互之间的联系，而架构设计的关键就是要找到具有关键意义的复杂点，让系统能应对复杂业务的需要","like_count":1},{"had_liked":false,"id":7170,"user_name":"ZYCHD(子玉)","can_delete":false,"product_type":"c1","uid":1109815,"ip_address":"","ucode":"32B2ED529450C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/37/4b12b4cc.jpg","comment_is_top":false,"comment_ctime":1525313770,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"架构设计主要目的是为了解决软件复杂度的，不同的业务系统有不同的需求差异，需要考虑系统复杂度的方面也不一样。道与术的区别，道指导术。","like_count":1},{"had_liked":false,"id":7130,"user_name":"星火燎原","can_delete":false,"product_type":"c1","uid":1101373,"ip_address":"","ucode":"15AD8E3006E107","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/3d/385b8263.jpg","comment_is_top":false,"comment_ctime":1525306723,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"一言点醒梦中人","like_count":1},{"had_liked":false,"id":7111,"user_name":"18668293795","can_delete":false,"product_type":"c1","uid":1087511,"ip_address":"","ucode":"5CB9FC97CDE87A","user_header":"","comment_is_top":false,"comment_ctime":1525303403,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"不禁想起面试的时候问的哪些问题。。。太偏了","like_count":1},{"had_liked":false,"id":390506,"user_name":"存在","can_delete":false,"product_type":"c1","uid":2254854,"ip_address":"北京","ucode":"F3217DC5B799BB","user_header":"https://static001.geekbang.org/account/avatar/00/22/68/06/e74b5675.jpg","comment_is_top":false,"comment_ctime":1715516482,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"关于架构的本质，历史背景、目的，这是第二篇学习笔记https:&#47;&#47;tianmaolin.blog.csdn.net&#47;article&#47;details&#47;138547879","like_count":0},{"had_liked":false,"id":375424,"user_name":"Sherk","can_delete":false,"product_type":"c1","uid":2156245,"ip_address":"广东","ucode":"AFE3E7F158258D","user_header":"https://static001.geekbang.org/account/avatar/00/20/e6/d5/4f1fc074.jpg","comment_is_top":false,"comment_ctime":1685448696,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"做什么都要确定自己的目的，以这个目的为终继续下去。","like_count":0},{"had_liked":false,"id":361491,"user_name":"饼干","can_delete":false,"product_type":"c1","uid":2045612,"ip_address":"北京","ucode":"8BACA7CDAC0B24","user_header":"https://static001.geekbang.org/account/avatar/00/1f/36/ac/6e2c2fc6.jpg","comment_is_top":false,"comment_ctime":1667547847,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":20,"product_id":100006601,"comment_content":"架构是为了解决软件复杂度的问题，要从性能，可用性，可扩展性，成本，安全等角度考虑，针对实际的业务情况来设计","like_count":0},{"had_liked":false,"id":359794,"user_name":"Geek_7bff73","can_delete":false,"product_type":"c1","uid":3184303,"ip_address":"山东","ucode":"6C127B158F73C3","user_header":"","comment_is_top":false,"comment_ctime":1665903554,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构，是为了解决复杂问题的一种实现思路。只有抓住问题的核心，才能有效的做出设计。凡是上来就高某某的设计方案，都是在装逼","like_count":0},{"had_liked":false,"id":359011,"user_name":"这一行，30年","can_delete":false,"product_type":"c1","uid":2238081,"ip_address":"上海","ucode":"DC9408D1DEC015","user_header":"https://static001.geekbang.org/account/avatar/00/22/26/81/036e6579.jpg","comment_is_top":false,"comment_ctime":1665151983,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构的目的：\n1.解决软件复杂度带来的问题，\n2.一个可扩展的解决方案。业务扩展后，根据之前设计留的口子，快速代码迭代。\n3.根据业务分析系统要做到的可靠程度，节省开发时间和成本。","like_count":0},{"had_liked":false,"id":359010,"user_name":"这一行，30年","can_delete":false,"product_type":"c1","uid":2238081,"ip_address":"上海","ucode":"DC9408D1DEC015","user_header":"https://static001.geekbang.org/account/avatar/00/22/26/81/036e6579.jpg","comment_is_top":false,"comment_ctime":1665151584,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构的目的：1. 解决软件复杂度带来的问题","like_count":0},{"had_liked":false,"id":357745,"user_name":"暮光谷","can_delete":false,"product_type":"c1","uid":1506587,"ip_address":"北京","ucode":"5A8BF90CCA46ED","user_header":"https://static001.geekbang.org/account/avatar/00/16/fd/1b/65c26382.jpg","comment_is_top":false,"comment_ctime":1663595590,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"首先架构设计是为了降低软件复杂度的。那么在进行架构设计的时候，就要想想这个项目有没有复杂度，具体复杂度在哪里。通常的复杂度有个方面，高访问量，高响应速度，高保密性，高可用性（数据备份）","like_count":0},{"had_liked":false,"id":352287,"user_name":"永不放弃","can_delete":false,"product_type":"c1","uid":2132129,"ip_address":"","ucode":"2BCCADF1E20E57","user_header":"https://static001.geekbang.org/account/avatar/00/20/88/a1/a78990c4.jpg","comment_is_top":false,"comment_ctime":1658501844,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构为解决系统复杂度而设计的一个解决方案，了解了架构的实际意义，新手架构不要一鼓作气 高性能 高并发 高扩张. 先解决自身的业务场景","like_count":0},{"had_liked":false,"id":347148,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1653746642,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构设计的目的是为了解决软件系统复杂度导致的问题，可以从高可用、高性能、可扩展、安全性这四个维度去评估哪个维度是问题的主因，然后设计方案，要不要全套设计得视实际复杂度在该维度是否带来问题而定。","like_count":0},{"had_liked":false,"id":336002,"user_name":"千锤百炼领悟之极限","can_delete":false,"product_type":"c1","uid":1744257,"ip_address":"","ucode":"224B5CF2101716","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9d/81/d748b7eb.jpg","comment_is_top":false,"comment_ctime":1645841540,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构设计的目的是解决软件系统复杂度带来的问题。","like_count":0},{"had_liked":false,"id":329061,"user_name":"子非鱼","can_delete":false,"product_type":"c1","uid":1146001,"ip_address":"","ucode":"7577222878C1E1","user_header":"https://static001.geekbang.org/account/avatar/00/11/7c/91/0d8e2472.jpg","comment_is_top":false,"comment_ctime":1641091294,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"关于scalability，就是分析当前的负载，以及未来的负载增长的可能性，如果负载在未来很长一段时间不增长，即稳定，那么不用考虑。这里又涉及到如何来描述负载，一般是通过一些负载参数，常见的包括request per second，数据库读写比率等，不同系统应该根据其特点选择一个最合适的负载参数来表示其负载。","like_count":0},{"had_liked":false,"id":326638,"user_name":"Geek_ee3fe8","can_delete":false,"product_type":"c1","uid":2854845,"ip_address":"","ucode":"4FF8A113699909","user_header":"","comment_is_top":false,"comment_ctime":1639615733,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"很多公司瞎整的原因往往不是技术，是外行指导内行","like_count":0},{"had_liked":false,"id":311378,"user_name":"Drake敏","can_delete":false,"product_type":"c1","uid":2734734,"ip_address":"","ucode":"38366767EFDC90","user_header":"https://static001.geekbang.org/account/avatar/00/29/ba/8e/4645afae.jpg","comment_is_top":false,"comment_ctime":1631193831,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构就是要了解业务，了解业务同时就能去规划比如服务器需要几台 负载均衡要不要做 主从是肯定有必要的","like_count":0},{"had_liked":false,"id":359794,"user_name":"Geek_7bff73","can_delete":false,"product_type":"c1","uid":3184303,"ip_address":"山东","ucode":"6C127B158F73C3","user_header":"","comment_is_top":false,"comment_ctime":1665903554,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构，是为了解决复杂问题的一种实现思路。只有抓住问题的核心，才能有效的做出设计。凡是上来就高某某的设计方案，都是在装逼","like_count":0},{"had_liked":false,"id":359011,"user_name":"这一行，30年","can_delete":false,"product_type":"c1","uid":2238081,"ip_address":"上海","ucode":"DC9408D1DEC015","user_header":"https://static001.geekbang.org/account/avatar/00/22/26/81/036e6579.jpg","comment_is_top":false,"comment_ctime":1665151983,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构的目的：\n1.解决软件复杂度带来的问题，\n2.一个可扩展的解决方案。业务扩展后，根据之前设计留的口子，快速代码迭代。\n3.根据业务分析系统要做到的可靠程度，节省开发时间和成本。","like_count":0},{"had_liked":false,"id":359010,"user_name":"这一行，30年","can_delete":false,"product_type":"c1","uid":2238081,"ip_address":"上海","ucode":"DC9408D1DEC015","user_header":"https://static001.geekbang.org/account/avatar/00/22/26/81/036e6579.jpg","comment_is_top":false,"comment_ctime":1665151584,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构的目的：1. 解决软件复杂度带来的问题","like_count":0},{"had_liked":false,"id":357745,"user_name":"暮光谷","can_delete":false,"product_type":"c1","uid":1506587,"ip_address":"北京","ucode":"5A8BF90CCA46ED","user_header":"https://static001.geekbang.org/account/avatar/00/16/fd/1b/65c26382.jpg","comment_is_top":false,"comment_ctime":1663595590,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"首先架构设计是为了降低软件复杂度的。那么在进行架构设计的时候，就要想想这个项目有没有复杂度，具体复杂度在哪里。通常的复杂度有个方面，高访问量，高响应速度，高保密性，高可用性（数据备份）","like_count":0},{"had_liked":false,"id":352287,"user_name":"永不放弃","can_delete":false,"product_type":"c1","uid":2132129,"ip_address":"","ucode":"2BCCADF1E20E57","user_header":"https://static001.geekbang.org/account/avatar/00/20/88/a1/a78990c4.jpg","comment_is_top":false,"comment_ctime":1658501844,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构为解决系统复杂度而设计的一个解决方案，了解了架构的实际意义，新手架构不要一鼓作气 高性能 高并发 高扩张. 先解决自身的业务场景","like_count":0},{"had_liked":false,"id":347148,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1653746642,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构设计的目的是为了解决软件系统复杂度导致的问题，可以从高可用、高性能、可扩展、安全性这四个维度去评估哪个维度是问题的主因，然后设计方案，要不要全套设计得视实际复杂度在该维度是否带来问题而定。","like_count":0},{"had_liked":false,"id":336002,"user_name":"千锤百炼领悟之极限","can_delete":false,"product_type":"c1","uid":1744257,"ip_address":"","ucode":"224B5CF2101716","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9d/81/d748b7eb.jpg","comment_is_top":false,"comment_ctime":1645841540,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构设计的目的是解决软件系统复杂度带来的问题。","like_count":0},{"had_liked":false,"id":329061,"user_name":"子非鱼","can_delete":false,"product_type":"c1","uid":1146001,"ip_address":"","ucode":"7577222878C1E1","user_header":"https://static001.geekbang.org/account/avatar/00/11/7c/91/0d8e2472.jpg","comment_is_top":false,"comment_ctime":1641091294,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"关于scalability，就是分析当前的负载，以及未来的负载增长的可能性，如果负载在未来很长一段时间不增长，即稳定，那么不用考虑。这里又涉及到如何来描述负载，一般是通过一些负载参数，常见的包括request per second，数据库读写比率等，不同系统应该根据其特点选择一个最合适的负载参数来表示其负载。","like_count":0},{"had_liked":false,"id":326638,"user_name":"Geek_ee3fe8","can_delete":false,"product_type":"c1","uid":2854845,"ip_address":"","ucode":"4FF8A113699909","user_header":"","comment_is_top":false,"comment_ctime":1639615733,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"很多公司瞎整的原因往往不是技术，是外行指导内行","like_count":0},{"had_liked":false,"id":311378,"user_name":"Drake敏","can_delete":false,"product_type":"c1","uid":2734734,"ip_address":"","ucode":"38366767EFDC90","user_header":"https://static001.geekbang.org/account/avatar/00/29/ba/8e/4645afae.jpg","comment_is_top":false,"comment_ctime":1631193831,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":21,"product_id":100006601,"comment_content":"架构就是要了解业务，了解业务同时就能去规划比如服务器需要几台 负载均衡要不要做 主从是肯定有必要的","like_count":0},{"had_liked":false,"id":307791,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1629257356,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"项目中用到了API网关作为流量／请求的代理 我觉到也是为了作一个复杂度降低和解耦的一个考虑","like_count":0},{"had_liked":false,"id":305701,"user_name":"Geek_228e40","can_delete":false,"product_type":"c1","uid":2725953,"ip_address":"","ucode":"261AD18D61400D","user_header":"","comment_is_top":false,"comment_ctime":1628125546,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"我们业务的复杂度在于\n1、高性能：解决方案是负载均衡加微服务多实例\n2、高可用：为了防止mysql数据库丢失，使用主备模式；同时使用到redis缓存，采用彩群模式\n3、可扩展：使用面向接口编程\n4、安全：使用公司研发的用户访问平台","like_count":0},{"had_liked":false,"id":302160,"user_name":"danny_lklk","can_delete":false,"product_type":"c1","uid":2166211,"ip_address":"","ucode":"EE87C7FB6CD4F6","user_header":"https://static001.geekbang.org/account/avatar/00/21/0d/c3/6d3c50aa.jpg","comment_is_top":false,"comment_ctime":1626101383,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"本文最核心：架构设计的主要目的是为了解决软件复杂度带来的问题","like_count":0},{"had_liked":false,"id":286710,"user_name":"insist","can_delete":false,"product_type":"c1","uid":1054536,"ip_address":"","ucode":"1EE2800A900BA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/48/3ab39c86.jpg","comment_is_top":false,"comment_ctime":1617519690,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"谨记架构设计是为了解决软件系统复杂性带来的问题，需要对系统进行复杂性分析，识别出复杂性在哪儿，从而进行架构设计","like_count":0},{"had_liked":false,"id":278631,"user_name":"谢作作的男人","can_delete":false,"product_type":"c1","uid":1909094,"ip_address":"","ucode":"4F220EA8AEBFB9","user_header":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","comment_is_top":false,"comment_ctime":1613140947,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"现有系统业务复杂度分析\n一款目前来说本地交付的敏捷任务管理系统，类似婵道\n性能方面：要求低延迟，毫秒级至秒级。百人至千人使用规模，千人团队每日访问量预估在20～40万，读多写少，周一早上为高峰期，有一定并发要求，不能出现由于并发导致的宕机情况。目前使用mysql、druid存储用户操作等历史数据，redis作为缓存并且保证数据持久化，保证数据不能丢失，另外为了进一步的低延迟，引入一款冷门的本地缓存中间件（带来很大的复杂度）\n高可用方面：要求不是太高，升级时可停机升级，但不能因为并发造成宕机。目前是部署多个服务，并没有使用业界的一些微服务方案，服务之间使用指定地址的方式调用，也没有任何容错方案。\n高可扩方面：要求高可扩，保证维护成本。但恰恰相反，我们的架构师喜欢把事情复杂化，喜欢在代码结构上做过度设计或者强行设计，同时一些基本点又无法保证\n- 没有规范\n  - 目录结构混乱，新建一个类都不知道放在哪里\n  - 混用异常，有时候捕获，有时候抛出\n- 命名问题。瞎命名，业务概念不统一，有时叫这个名，有时叫那个名\n- 滥用函数式风格。一大串函数式代码，同时没有注释，方法命名也很糟糕，总之就是看不懂，也没法调试\n- 滥用继承，强用继承，存在很多强转现象\n- 服务之间调用采用  写死地址的方式调用，不透明，返回的就是一个JSONObject，需要你自己去反序列化\n总之维护成本很高，新增一个功能或者修复bug，要调试很久才能找到需求改动点，然而改动可能只需要一行。\n数据质量方面：\n- 好像挺高的，偶尔丢数据可以，但统计方面的数据不能对不上\n- 无法保证分布式事务\n\n哈哈","like_count":0},{"had_liked":false,"id":275065,"user_name":"Wayne","can_delete":false,"product_type":"c1","uid":2421794,"ip_address":"","ucode":"A66E881FEEC298","user_header":"https://static001.geekbang.org/account/avatar/00/24/f4/22/6b7e25c7.jpg","comment_is_top":false,"comment_ctime":1611293073,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"目前公司的架构模块繁多，学习成本和问题追查成本较高。1，快速脚手架生成和一条龙式开发引导，解决学习曲线问题2，可做个case一键诊断平台！快速定位问题","like_count":0},{"had_liked":false,"id":238759,"user_name":"王崧霁","can_delete":false,"product_type":"c1","uid":1317115,"ip_address":"","ucode":"4F3284634293A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","comment_is_top":false,"comment_ctime":1596285275,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"架构解决顶层设计问题，作者说得对，去找开发。","like_count":0},{"had_liked":false,"id":238757,"user_name":"王崧霁","can_delete":false,"product_type":"c1","uid":1317115,"ip_address":"","ucode":"4F3284634293A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","comment_is_top":false,"comment_ctime":1596284603,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"架构是解决当下痛点，架构是不断演进的。","like_count":0},{"had_liked":false,"id":237563,"user_name":"Jiantao","can_delete":false,"product_type":"c1","uid":1163504,"ip_address":"","ucode":"444580EC5EF109","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/f0/1aabc056.jpg","comment_is_top":false,"comment_ctime":1595863417,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"1 架构是为了应对软件系统复杂度而提出的一个解决方案。\n2 架构即(重要)决策\n3 需求驱动架构，架起分析与设计实现的桥梁\n4 架构与开发成本的关系","like_count":0},{"had_liked":false,"id":235667,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1595143994,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"架构设计是为了解决系统复杂度带来的问题。","like_count":0},{"had_liked":false,"id":307791,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1629257356,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"项目中用到了API网关作为流量／请求的代理 我觉到也是为了作一个复杂度降低和解耦的一个考虑","like_count":0},{"had_liked":false,"id":305701,"user_name":"Geek_228e40","can_delete":false,"product_type":"c1","uid":2725953,"ip_address":"","ucode":"261AD18D61400D","user_header":"","comment_is_top":false,"comment_ctime":1628125546,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"我们业务的复杂度在于\n1、高性能：解决方案是负载均衡加微服务多实例\n2、高可用：为了防止mysql数据库丢失，使用主备模式；同时使用到redis缓存，采用彩群模式\n3、可扩展：使用面向接口编程\n4、安全：使用公司研发的用户访问平台","like_count":0},{"had_liked":false,"id":302160,"user_name":"danny_lklk","can_delete":false,"product_type":"c1","uid":2166211,"ip_address":"","ucode":"EE87C7FB6CD4F6","user_header":"https://static001.geekbang.org/account/avatar/00/21/0d/c3/6d3c50aa.jpg","comment_is_top":false,"comment_ctime":1626101383,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"本文最核心：架构设计的主要目的是为了解决软件复杂度带来的问题","like_count":0},{"had_liked":false,"id":286710,"user_name":"insist","can_delete":false,"product_type":"c1","uid":1054536,"ip_address":"","ucode":"1EE2800A900BA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/48/3ab39c86.jpg","comment_is_top":false,"comment_ctime":1617519690,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"谨记架构设计是为了解决软件系统复杂性带来的问题，需要对系统进行复杂性分析，识别出复杂性在哪儿，从而进行架构设计","like_count":0},{"had_liked":false,"id":278631,"user_name":"谢作作的男人","can_delete":false,"product_type":"c1","uid":1909094,"ip_address":"","ucode":"4F220EA8AEBFB9","user_header":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","comment_is_top":false,"comment_ctime":1613140947,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"现有系统业务复杂度分析\n一款目前来说本地交付的敏捷任务管理系统，类似婵道\n性能方面：要求低延迟，毫秒级至秒级。百人至千人使用规模，千人团队每日访问量预估在20～40万，读多写少，周一早上为高峰期，有一定并发要求，不能出现由于并发导致的宕机情况。目前使用mysql、druid存储用户操作等历史数据，redis作为缓存并且保证数据持久化，保证数据不能丢失，另外为了进一步的低延迟，引入一款冷门的本地缓存中间件（带来很大的复杂度）\n高可用方面：要求不是太高，升级时可停机升级，但不能因为并发造成宕机。目前是部署多个服务，并没有使用业界的一些微服务方案，服务之间使用指定地址的方式调用，也没有任何容错方案。\n高可扩方面：要求高可扩，保证维护成本。但恰恰相反，我们的架构师喜欢把事情复杂化，喜欢在代码结构上做过度设计或者强行设计，同时一些基本点又无法保证\n- 没有规范\n  - 目录结构混乱，新建一个类都不知道放在哪里\n  - 混用异常，有时候捕获，有时候抛出\n- 命名问题。瞎命名，业务概念不统一，有时叫这个名，有时叫那个名\n- 滥用函数式风格。一大串函数式代码，同时没有注释，方法命名也很糟糕，总之就是看不懂，也没法调试\n- 滥用继承，强用继承，存在很多强转现象\n- 服务之间调用采用  写死地址的方式调用，不透明，返回的就是一个JSONObject，需要你自己去反序列化\n总之维护成本很高，新增一个功能或者修复bug，要调试很久才能找到需求改动点，然而改动可能只需要一行。\n数据质量方面：\n- 好像挺高的，偶尔丢数据可以，但统计方面的数据不能对不上\n- 无法保证分布式事务\n\n哈哈","like_count":0},{"had_liked":false,"id":275065,"user_name":"Wayne","can_delete":false,"product_type":"c1","uid":2421794,"ip_address":"","ucode":"A66E881FEEC298","user_header":"https://static001.geekbang.org/account/avatar/00/24/f4/22/6b7e25c7.jpg","comment_is_top":false,"comment_ctime":1611293073,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"目前公司的架构模块繁多，学习成本和问题追查成本较高。1，快速脚手架生成和一条龙式开发引导，解决学习曲线问题2，可做个case一键诊断平台！快速定位问题","like_count":0},{"had_liked":false,"id":238759,"user_name":"王崧霁","can_delete":false,"product_type":"c1","uid":1317115,"ip_address":"","ucode":"4F3284634293A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","comment_is_top":false,"comment_ctime":1596285275,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"架构解决顶层设计问题，作者说得对，去找开发。","like_count":0},{"had_liked":false,"id":238757,"user_name":"王崧霁","can_delete":false,"product_type":"c1","uid":1317115,"ip_address":"","ucode":"4F3284634293A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","comment_is_top":false,"comment_ctime":1596284603,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"架构是解决当下痛点，架构是不断演进的。","like_count":0},{"had_liked":false,"id":237563,"user_name":"Jiantao","can_delete":false,"product_type":"c1","uid":1163504,"ip_address":"","ucode":"444580EC5EF109","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/f0/1aabc056.jpg","comment_is_top":false,"comment_ctime":1595863417,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"1 架构是为了应对软件系统复杂度而提出的一个解决方案。\n2 架构即(重要)决策\n3 需求驱动架构，架起分析与设计实现的桥梁\n4 架构与开发成本的关系","like_count":0},{"had_liked":false,"id":235667,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1595143994,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":22,"product_id":100006601,"comment_content":"架构设计是为了解决系统复杂度带来的问题。","like_count":0},{"had_liked":false,"id":226798,"user_name":"wesley","can_delete":false,"product_type":"c1","uid":1107003,"ip_address":"","ucode":"D55BE5B3320C2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/3b/9c3afa01.jpg","comment_is_top":false,"comment_ctime":1592205820,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构要符合实际业务场景，不断进化。","like_count":0},{"had_liked":false,"id":217357,"user_name":"程序员小岑","can_delete":false,"product_type":"c1","uid":1004089,"ip_address":"","ucode":"ECDE8A03AB3A31","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/39/3cc59148.jpg","comment_is_top":false,"comment_ctime":1589469219,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"是的，目前在做架构设计时，我会先思考，复杂度在什么地方，在考虑选择什么样的方案，而不是一味追求好的架构","like_count":0},{"had_liked":false,"id":198785,"user_name":"哼歌儿李","can_delete":false,"product_type":"c1","uid":1357897,"ip_address":"","ucode":"D384DE36455A62","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/49/99ca2069.jpg","comment_is_top":false,"comment_ctime":1585468244,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题","like_count":0},{"had_liked":false,"id":182417,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582784012,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"公司之前业务服务的用户数以千计，所以我们用单体架构完美地解决了，后来随着用户数以万计了，那么我们正以业务模块化，多点集群的方案来解决，在接下来随着公司业务到达十万级及以上，我们也在打造下一代服务器架构以应对业务增长的需要。","like_count":0},{"had_liked":false,"id":172544,"user_name":"CDz","can_delete":false,"product_type":"c1","uid":1114779,"ip_address":"","ucode":"A23BEE1C4A5922","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/9b/b1a3c60d.jpg","comment_is_top":false,"comment_ctime":1579222002,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构基于业务\n\n业务需要取舍（解决矛盾）\n\n从业务场景熟悉分析：\n1 高并发会有多高\n2 数据是否一条都不能丢\n3 线上停止供应大概可以多少时间\n4 根本是成本与核心性能的平衡","like_count":0},{"had_liked":false,"id":165067,"user_name":"百里","can_delete":false,"product_type":"c1","uid":1212873,"ip_address":"","ucode":"2CE96129AA7F78","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/c9/9194612b.jpg","comment_is_top":false,"comment_ctime":1577154910,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构的目的是解决系统带来的复杂性。\n提取关键字，解决与复杂。而不是带来新的复杂性。比如秒杀我们要首要解决的问题就是商品超量问题，其次是系统可用性。所以设计秒杀就要对此有的放矢。","like_count":0},{"had_liked":false,"id":164159,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1576897098,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":23,"product_id":100006601,"comment_content":"架构即决策，是在资源、时间、范围和质量之间进行均衡。架构需要考虑各种约束，包括内部约束，例如团队技术栈情况、团队文化，也包含外部约束，例如功能&#47;非功能需求、上线时间、领导期望等等。\n\n架构是为了应对软件系统中的复杂度，不同系统的复杂度可能来自不同维度，例如高性能、高可用、可扩展等等，我们需要评估各维度的重要性，然后做出相应的架构决策。","like_count":0},{"had_liked":false,"id":154148,"user_name":"黄剑","can_delete":false,"product_type":"c1","uid":1204424,"ip_address":"","ucode":"D7F68DE19F41CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/c8/044dd4a2.jpg","comment_is_top":false,"comment_ctime":1574385206,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构设计是为了解决不断变化的业务需求带来的复杂度。如果没有需求随意引入各种高XX，微服务等等就是耍流氓。","like_count":0},{"had_liked":false,"id":141990,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1571276459,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"一个简单的例子就把问题说明白了，给老师点赞","like_count":0},{"had_liked":false,"id":130682,"user_name":"徐风来","can_delete":false,"product_type":"c1","uid":1369630,"ip_address":"","ucode":"06AF9740E4FEA1","user_header":"https://static001.geekbang.org/account/avatar/00/14/e6/1e/273fbf4d.jpg","comment_is_top":false,"comment_ctime":1567508978,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"学生管理系统数据库选型这块，应该参考峰值，","like_count":0},{"had_liked":false,"id":226798,"user_name":"wesley","can_delete":false,"product_type":"c1","uid":1107003,"ip_address":"","ucode":"D55BE5B3320C2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/3b/9c3afa01.jpg","comment_is_top":false,"comment_ctime":1592205820,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构要符合实际业务场景，不断进化。","like_count":0},{"had_liked":false,"id":217357,"user_name":"程序员小岑","can_delete":false,"product_type":"c1","uid":1004089,"ip_address":"","ucode":"ECDE8A03AB3A31","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/39/3cc59148.jpg","comment_is_top":false,"comment_ctime":1589469219,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"是的，目前在做架构设计时，我会先思考，复杂度在什么地方，在考虑选择什么样的方案，而不是一味追求好的架构","like_count":0},{"had_liked":false,"id":198785,"user_name":"哼歌儿李","can_delete":false,"product_type":"c1","uid":1357897,"ip_address":"","ucode":"D384DE36455A62","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/49/99ca2069.jpg","comment_is_top":false,"comment_ctime":1585468244,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题","like_count":0},{"had_liked":false,"id":182417,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582784012,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"公司之前业务服务的用户数以千计，所以我们用单体架构完美地解决了，后来随着用户数以万计了，那么我们正以业务模块化，多点集群的方案来解决，在接下来随着公司业务到达十万级及以上，我们也在打造下一代服务器架构以应对业务增长的需要。","like_count":0},{"had_liked":false,"id":172544,"user_name":"CDz","can_delete":false,"product_type":"c1","uid":1114779,"ip_address":"","ucode":"A23BEE1C4A5922","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/9b/b1a3c60d.jpg","comment_is_top":false,"comment_ctime":1579222002,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构基于业务\n\n业务需要取舍（解决矛盾）\n\n从业务场景熟悉分析：\n1 高并发会有多高\n2 数据是否一条都不能丢\n3 线上停止供应大概可以多少时间\n4 根本是成本与核心性能的平衡","like_count":0},{"had_liked":false,"id":165067,"user_name":"百里","can_delete":false,"product_type":"c1","uid":1212873,"ip_address":"","ucode":"2CE96129AA7F78","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/c9/9194612b.jpg","comment_is_top":false,"comment_ctime":1577154910,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构的目的是解决系统带来的复杂性。\n提取关键字，解决与复杂。而不是带来新的复杂性。比如秒杀我们要首要解决的问题就是商品超量问题，其次是系统可用性。所以设计秒杀就要对此有的放矢。","like_count":0},{"had_liked":false,"id":164159,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1576897098,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":23,"product_id":100006601,"comment_content":"架构即决策，是在资源、时间、范围和质量之间进行均衡。架构需要考虑各种约束，包括内部约束，例如团队技术栈情况、团队文化，也包含外部约束，例如功能&#47;非功能需求、上线时间、领导期望等等。\n\n架构是为了应对软件系统中的复杂度，不同系统的复杂度可能来自不同维度，例如高性能、高可用、可扩展等等，我们需要评估各维度的重要性，然后做出相应的架构决策。","like_count":0},{"had_liked":false,"id":154148,"user_name":"黄剑","can_delete":false,"product_type":"c1","uid":1204424,"ip_address":"","ucode":"D7F68DE19F41CD","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/c8/044dd4a2.jpg","comment_is_top":false,"comment_ctime":1574385206,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"架构设计是为了解决不断变化的业务需求带来的复杂度。如果没有需求随意引入各种高XX，微服务等等就是耍流氓。","like_count":0},{"had_liked":false,"id":141990,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1571276459,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"一个简单的例子就把问题说明白了，给老师点赞","like_count":0},{"had_liked":false,"id":130682,"user_name":"徐风来","can_delete":false,"product_type":"c1","uid":1369630,"ip_address":"","ucode":"06AF9740E4FEA1","user_header":"https://static001.geekbang.org/account/avatar/00/14/e6/1e/273fbf4d.jpg","comment_is_top":false,"comment_ctime":1567508978,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":23,"product_id":100006601,"comment_content":"学生管理系统数据库选型这块，应该参考峰值，","like_count":0},{"had_liked":false,"id":122407,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1565359353,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"目前框架使用的架构是前一个架构师设计的。有一个消费MQ的task系统，一个提供api和接口的service。其中task负责数据插入和计算的task最为重要，不需要频繁更新。而service负责数据展现的逻辑。但是我并没有按照他的架构来做，我之前为了方便把task的功能移到了service，造成了一点业务上的改动都要上线解决，影响了数据的插入和更新的模块。所以架构的目的也包含在模块拆分与负责职责之间的一个权衡；还有高可用性上的考虑，保证用户数据没问题的情况下，查询上允许短暂的不可用。","like_count":0},{"had_liked":false,"id":121751,"user_name":"Geek_5aa3a1","can_delete":false,"product_type":"c1","uid":1589327,"ip_address":"","ucode":"DDDBA4425379FA","user_header":"","comment_is_top":false,"comment_ctime":1565218828,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计主要解决当下面临的实际复杂问题，找一种合适的方式去解决此类问题。\n\n很多时候是种逐渐改进的方式，不同阶段使用的框架，技术。可以促进更好的实现方式。需要架构师不断去发现和改进。","like_count":0},{"had_liked":false,"id":121658,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1565179915,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"依据系统复杂度来设计架构，说的太棒了","like_count":0},{"had_liked":false,"id":104523,"user_name":"刘佳旭","can_delete":false,"product_type":"c1","uid":1266844,"ip_address":"","ucode":"6E188C9BBB6E13","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/9c/b83c52be.jpg","comment_is_top":false,"comment_ctime":1560772219,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"真不错，学到了很多，或许是我太菜了....哈哈😄","like_count":0},{"had_liked":false,"id":102574,"user_name":"__fulin","can_delete":false,"product_type":"c1","uid":1037476,"ip_address":"","ucode":"DD396CEEB6082A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/a4/202cef33.jpg","comment_is_top":false,"comment_ctime":1560256357,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计的真正目的\n\n  架构设计的主要目的的是为了**解决软件系统复杂度带来的问题**。\n\n架构设计应该注意的点：\n\n  1）从实际项目需求着手，分析系统复杂性并针对复杂点进行设计。\n  2）架构设计应有针对性，避免盲目求大求全。\n\n简单系统的架构设计应从那些方面分析：\n\n  1）性能：web服务器，数据库，缓存。\n  2）可扩展性：应根据系统的实际需求进行考虑。\n  3）高可用：负载均衡（异地多活），存储高可用（机器故障-设计MySQL同机房主备方案、机房故障-设计MySQL跨机房同步方案）。\n  4）安全性：信息隐私、金融相关。\n  5）成本：服务器成本、人力成本、维护成本\n\n案例：大学的学生管理系统\n\n  性能：采用Nginx，MySQL数据库，无需缓存。\n  可扩展性：系统功能稳定，可扩展空间小。\n  高可用：无需负载均衡，需考虑数据库存储高可用。\n  安全性：学生信息有一定隐私性，只需做三点：Nginx 提供 ACL 控制、用户账号密码管理、数据库访问权限控制。\n  成本：系统业务简单，成本较低。","like_count":0},{"had_liked":false,"id":101126,"user_name":"SoberChina","can_delete":false,"product_type":"c1","uid":1105930,"ip_address":"","ucode":"A89E183D164394","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/0a/e683a198.jpg","comment_is_top":false,"comment_ctime":1559722594,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"说实话现在做的系统各种耦合，下游服务不可用都会暴露给用户服务，用户服务根本不care这些东西。我理解的架构肯定要求有技术，技术肯定要有有规范，一个项目没有一定的规范，再加一个没有不求上进的team ，产生屎一样的项目是有原因的。\n阅读心得：架构设计要求合理避免过度设计。","like_count":0},{"had_liked":false,"id":87586,"user_name":"Illiya","can_delete":false,"product_type":"c1","uid":1496744,"ip_address":"","ucode":"DBF8764E312B9E","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/a8/77ea72fa.jpg","comment_is_top":false,"comment_ctime":1555638435,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计学习心得：\n目的：将复杂的简单化：\n原则：适合的才是最好的，最好的不一定适合\n注意：过犹不及，利弊权衡，生搬硬套，削足适履，得不偿失！\n","like_count":0},{"had_liked":false,"id":86791,"user_name":"鸡蛋🎱 达芬奇","can_delete":false,"product_type":"c1","uid":1104819,"ip_address":"","ucode":"8493ACD4D14E0C","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/b3/040eb673.jpg","comment_is_top":false,"comment_ctime":1555461432,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计一定分析出系统设计得关键复杂度，老师得很好！不同行业不同系统，同一行业不同系统，相同行业同样的系统的复杂度都要依据公司的具体业务情况而定。","like_count":0},{"had_liked":false,"id":86071,"user_name":"凌","can_delete":false,"product_type":"c1","uid":1120319,"ip_address":"","ucode":"D0AA0C787EE004","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/3f/7b33cd3c.jpg","comment_is_top":false,"comment_ctime":1555308093,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计是为了解决软件复杂度，如果本来不复杂，又硬上解决方案，只会徒劳无功\n脱离业务实际情况谈架构都是耍流氓，为什么要演进，因为系统都是从小到大，一味地追求高可用、高并发、高可拓展，最终造成过度设计与实现，架构本身是为了解决软件的复杂度而诞生的，如果因为架构设计导致软件的设计更加复杂，那就会适得其反\n架构是一种决策，是在一个有约束的盒子里去寻找最优的解，这些约束有：团队经验、成本、资源、进度、业务所处阶段\n需求驱动架构：在需求分析阶段，需要有架构人员“跳出代码，总揽全局”，构建业务和IT的桥梁\n举个例子，我们用《学生信息管理系统》来做一下架构分析\n功能分析：登录、注册、成绩管理、班级管理\n高性能：使用频次低，性能不作为主要的考虑要点\n可靠性：数据是不能丢的，成绩数据很重要，所以数据库这边是复杂点。数据库可能遇到机器故障所以要做同机房的主备方案，可也能遇到机房故障所以要做跨机房同步方案\n拓展性：上线后功能趋于稳定，新增功能少，也不做为主要的考虑要点\n可用性：宕机2小时，停机维护等等，对使用者的影响都不大\n安全：没有很多隐私的数据，简单做即可\n成本：两台服务器就够","like_count":0},{"had_liked":false,"id":84363,"user_name":"客舟听雨来coding","can_delete":false,"product_type":"c1","uid":1026219,"ip_address":"","ucode":"753F4B779CC416","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/ab/5d25cd32.jpg","comment_is_top":false,"comment_ctime":1554855277,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"不同的业务有不同的要求，复杂度也会随之不同。架构师要高度站在业务发展的前头，深入思考业务布局以及主要矛盾，分析出系统的主要复杂度是什么，从而可以设计出良好的系统架构。还有，好的架构是跟随业务发展一步步迭代出来的。","like_count":0},{"had_liked":false,"id":122407,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1565359353,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"目前框架使用的架构是前一个架构师设计的。有一个消费MQ的task系统，一个提供api和接口的service。其中task负责数据插入和计算的task最为重要，不需要频繁更新。而service负责数据展现的逻辑。但是我并没有按照他的架构来做，我之前为了方便把task的功能移到了service，造成了一点业务上的改动都要上线解决，影响了数据的插入和更新的模块。所以架构的目的也包含在模块拆分与负责职责之间的一个权衡；还有高可用性上的考虑，保证用户数据没问题的情况下，查询上允许短暂的不可用。","like_count":0},{"had_liked":false,"id":121751,"user_name":"Geek_5aa3a1","can_delete":false,"product_type":"c1","uid":1589327,"ip_address":"","ucode":"DDDBA4425379FA","user_header":"","comment_is_top":false,"comment_ctime":1565218828,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计主要解决当下面临的实际复杂问题，找一种合适的方式去解决此类问题。\n\n很多时候是种逐渐改进的方式，不同阶段使用的框架，技术。可以促进更好的实现方式。需要架构师不断去发现和改进。","like_count":0},{"had_liked":false,"id":121658,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1565179915,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"依据系统复杂度来设计架构，说的太棒了","like_count":0},{"had_liked":false,"id":104523,"user_name":"刘佳旭","can_delete":false,"product_type":"c1","uid":1266844,"ip_address":"","ucode":"6E188C9BBB6E13","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/9c/b83c52be.jpg","comment_is_top":false,"comment_ctime":1560772219,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"真不错，学到了很多，或许是我太菜了....哈哈😄","like_count":0},{"had_liked":false,"id":102574,"user_name":"__fulin","can_delete":false,"product_type":"c1","uid":1037476,"ip_address":"","ucode":"DD396CEEB6082A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/a4/202cef33.jpg","comment_is_top":false,"comment_ctime":1560256357,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计的真正目的\n\n  架构设计的主要目的的是为了**解决软件系统复杂度带来的问题**。\n\n架构设计应该注意的点：\n\n  1）从实际项目需求着手，分析系统复杂性并针对复杂点进行设计。\n  2）架构设计应有针对性，避免盲目求大求全。\n\n简单系统的架构设计应从那些方面分析：\n\n  1）性能：web服务器，数据库，缓存。\n  2）可扩展性：应根据系统的实际需求进行考虑。\n  3）高可用：负载均衡（异地多活），存储高可用（机器故障-设计MySQL同机房主备方案、机房故障-设计MySQL跨机房同步方案）。\n  4）安全性：信息隐私、金融相关。\n  5）成本：服务器成本、人力成本、维护成本\n\n案例：大学的学生管理系统\n\n  性能：采用Nginx，MySQL数据库，无需缓存。\n  可扩展性：系统功能稳定，可扩展空间小。\n  高可用：无需负载均衡，需考虑数据库存储高可用。\n  安全性：学生信息有一定隐私性，只需做三点：Nginx 提供 ACL 控制、用户账号密码管理、数据库访问权限控制。\n  成本：系统业务简单，成本较低。","like_count":0},{"had_liked":false,"id":101126,"user_name":"SoberChina","can_delete":false,"product_type":"c1","uid":1105930,"ip_address":"","ucode":"A89E183D164394","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/0a/e683a198.jpg","comment_is_top":false,"comment_ctime":1559722594,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"说实话现在做的系统各种耦合，下游服务不可用都会暴露给用户服务，用户服务根本不care这些东西。我理解的架构肯定要求有技术，技术肯定要有有规范，一个项目没有一定的规范，再加一个没有不求上进的team ，产生屎一样的项目是有原因的。\n阅读心得：架构设计要求合理避免过度设计。","like_count":0},{"had_liked":false,"id":87586,"user_name":"Illiya","can_delete":false,"product_type":"c1","uid":1496744,"ip_address":"","ucode":"DBF8764E312B9E","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/a8/77ea72fa.jpg","comment_is_top":false,"comment_ctime":1555638435,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计学习心得：\n目的：将复杂的简单化：\n原则：适合的才是最好的，最好的不一定适合\n注意：过犹不及，利弊权衡，生搬硬套，削足适履，得不偿失！\n","like_count":0},{"had_liked":false,"id":86791,"user_name":"鸡蛋🎱 达芬奇","can_delete":false,"product_type":"c1","uid":1104819,"ip_address":"","ucode":"8493ACD4D14E0C","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/b3/040eb673.jpg","comment_is_top":false,"comment_ctime":1555461432,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计一定分析出系统设计得关键复杂度，老师得很好！不同行业不同系统，同一行业不同系统，相同行业同样的系统的复杂度都要依据公司的具体业务情况而定。","like_count":0},{"had_liked":false,"id":86071,"user_name":"凌","can_delete":false,"product_type":"c1","uid":1120319,"ip_address":"","ucode":"D0AA0C787EE004","user_header":"https://static001.geekbang.org/account/avatar/00/11/18/3f/7b33cd3c.jpg","comment_is_top":false,"comment_ctime":1555308093,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"架构设计是为了解决软件复杂度，如果本来不复杂，又硬上解决方案，只会徒劳无功\n脱离业务实际情况谈架构都是耍流氓，为什么要演进，因为系统都是从小到大，一味地追求高可用、高并发、高可拓展，最终造成过度设计与实现，架构本身是为了解决软件的复杂度而诞生的，如果因为架构设计导致软件的设计更加复杂，那就会适得其反\n架构是一种决策，是在一个有约束的盒子里去寻找最优的解，这些约束有：团队经验、成本、资源、进度、业务所处阶段\n需求驱动架构：在需求分析阶段，需要有架构人员“跳出代码，总揽全局”，构建业务和IT的桥梁\n举个例子，我们用《学生信息管理系统》来做一下架构分析\n功能分析：登录、注册、成绩管理、班级管理\n高性能：使用频次低，性能不作为主要的考虑要点\n可靠性：数据是不能丢的，成绩数据很重要，所以数据库这边是复杂点。数据库可能遇到机器故障所以要做同机房的主备方案，可也能遇到机房故障所以要做跨机房同步方案\n拓展性：上线后功能趋于稳定，新增功能少，也不做为主要的考虑要点\n可用性：宕机2小时，停机维护等等，对使用者的影响都不大\n安全：没有很多隐私的数据，简单做即可\n成本：两台服务器就够","like_count":0},{"had_liked":false,"id":84363,"user_name":"客舟听雨来coding","can_delete":false,"product_type":"c1","uid":1026219,"ip_address":"","ucode":"753F4B779CC416","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/ab/5d25cd32.jpg","comment_is_top":false,"comment_ctime":1554855277,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":24,"product_id":100006601,"comment_content":"不同的业务有不同的要求，复杂度也会随之不同。架构师要高度站在业务发展的前头，深入思考业务布局以及主要矛盾，分析出系统的主要复杂度是什么，从而可以设计出良好的系统架构。还有，好的架构是跟随业务发展一步步迭代出来的。","like_count":0},{"had_liked":false,"id":74160,"user_name":"Geek_fb3db2","can_delete":false,"product_type":"c1","uid":1218254,"ip_address":"","ucode":"8089B8311B6C80","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/ce/8c3bdbe5.jpg","comment_is_top":false,"comment_ctime":1552119394,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"指望架构解决所有问题不可能 我们需要有的放矢","like_count":0},{"had_liked":false,"id":70906,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1551227046,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"分析下我们项目：\n 为客户端提供接口，用户使用特点是节日QPS会显著上升，每天每个时段都会有用户访问。\n对应在架构设计中，着重考量了系统扩展性(docker)，系统高性能(压测发现问题接口，提升QPS)，数据库(mysql)主备。","like_count":0},{"had_liked":false,"id":62882,"user_name":"付志波","can_delete":false,"product_type":"c1","uid":1378093,"ip_address":"","ucode":"3842BD04E255DE","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/2d/eab19d59.jpg","comment_is_top":false,"comment_ctime":1548201823,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"目前的业务系统复杂在需要集成各种api接口很零散，有些模块之间存在业务关联。内部有多个自动化流程一旦其中一个模块变动会影响其中的自动化流程，也就是存在分布式事物问题","like_count":0},{"had_liked":false,"id":54593,"user_name":"惜心（伟祺）","can_delete":false,"product_type":"c1","uid":1067846,"ip_address":"","ucode":"393DF1A9E81332","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/46/717d5cb9.jpg","comment_is_top":false,"comment_ctime":1545908400,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题","like_count":0},{"had_liked":false,"id":51468,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1545186480,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"通过这一讲的阅读学习，明白了设计软件架构的目的，是为了解决系统的复杂度。不是为了所谓的多个高XX。因为有的高并不能对我们实际的业务产生多大的帮助。\n\n在下半节中，老师通过一个大学的学生管理系统的案例解释说明了设计的思路。在各项指标中，性能，和稳定性，高可用，安全性和成本方面，高可用需要设计Mysql同机房主备方案，跨机房同步方案，对于大学生人均每天一次的访问，其他指标都能得到满足。\n\n所以，通过这节的学习，设计软件架构不是目的，目的是为了解决实际业务的复杂，我们需要思考如何能满足实际需求而设计合理的软件系统，这时我们需要学习和实践的。","like_count":0},{"had_liked":false,"id":38101,"user_name":"贾洵","can_delete":false,"product_type":"c1","uid":1173596,"ip_address":"","ucode":"6B66BC83615A26","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/5c/fad21603.jpg","comment_is_top":false,"comment_ctime":1541935746,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"架构从两个方面帮忙软件落地实现。一是基于业务需求出发，切忌照搬抄袭。架构是一款软件的骨架，设计是一定要从实际出发。有时候不设计也是一种设计。二是落地实现。设计视图中逻辑视图确认子系统边界，运行视图描述业务场景，既子系统内部交互。这时再引入架构设计，对其中高可用，高性能等点进行设计；物理视图考虑部署时高可用；包括数据库和中间件","like_count":0},{"had_liked":false,"id":38098,"user_name":"贾洵","can_delete":false,"product_type":"c1","uid":1173596,"ip_address":"","ucode":"6B66BC83615A26","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/5c/fad21603.jpg","comment_is_top":false,"comment_ctime":1541934443,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"借用公司技术大牛的一句话：设计既分类，等待即浪费","like_count":0},{"had_liked":false,"id":31559,"user_name":"wenjianping","can_delete":false,"product_type":"c1","uid":1263152,"ip_address":"","ucode":"C69D31D0EA034C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0ialic1F0eibTpbqxdPngPpf8TOUljonTLtHIlnibcic7LN5ib1Y4xUic3ex1boaVwFO8XXTaBQ5AhJeqw/132","comment_is_top":false,"comment_ctime":1539228832,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"架构设计的目的：\n1.识别和解决项目中主要的技术问题，保证项目能够顺利实行\n2.保证的可以预见的未来不会存在无法处理的技术问题\n\n架构设计的任务\n1.发现主要的设计点\n    性能、搞可用、可扩展性、安全、质量、系统目标等\n2.发现主要的技术问题：团队不熟悉的技术、解决方案\n3.围绕主要设计点，提供对应的解决方案和支持\n    技术上的方案\n    管理、流程上的方案","like_count":0},{"had_liked":false,"id":31348,"user_name":"lucoffee","can_delete":false,"product_type":"c1","uid":1133208,"ip_address":"","ucode":"27D20476D21D34","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/98/1c318d41.jpg","comment_is_top":false,"comment_ctime":1539155595,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"我还没有架构师方面的经历。","like_count":0},{"had_liked":false,"id":31344,"user_name":"lucoffee","can_delete":false,"product_type":"c1","uid":1133208,"ip_address":"","ucode":"27D20476D21D34","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/98/1c318d41.jpg","comment_is_top":false,"comment_ctime":1539155045,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题。","like_count":0},{"had_liked":false,"id":74160,"user_name":"Geek_fb3db2","can_delete":false,"product_type":"c1","uid":1218254,"ip_address":"","ucode":"8089B8311B6C80","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/ce/8c3bdbe5.jpg","comment_is_top":false,"comment_ctime":1552119394,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"指望架构解决所有问题不可能 我们需要有的放矢","like_count":0},{"had_liked":false,"id":70906,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1551227046,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"分析下我们项目：\n 为客户端提供接口，用户使用特点是节日QPS会显著上升，每天每个时段都会有用户访问。\n对应在架构设计中，着重考量了系统扩展性(docker)，系统高性能(压测发现问题接口，提升QPS)，数据库(mysql)主备。","like_count":0},{"had_liked":false,"id":62882,"user_name":"付志波","can_delete":false,"product_type":"c1","uid":1378093,"ip_address":"","ucode":"3842BD04E255DE","user_header":"https://static001.geekbang.org/account/avatar/00/15/07/2d/eab19d59.jpg","comment_is_top":false,"comment_ctime":1548201823,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"目前的业务系统复杂在需要集成各种api接口很零散，有些模块之间存在业务关联。内部有多个自动化流程一旦其中一个模块变动会影响其中的自动化流程，也就是存在分布式事物问题","like_count":0},{"had_liked":false,"id":54593,"user_name":"惜心（伟祺）","can_delete":false,"product_type":"c1","uid":1067846,"ip_address":"","ucode":"393DF1A9E81332","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/46/717d5cb9.jpg","comment_is_top":false,"comment_ctime":1545908400,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题","like_count":0},{"had_liked":false,"id":51468,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1545186480,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"通过这一讲的阅读学习，明白了设计软件架构的目的，是为了解决系统的复杂度。不是为了所谓的多个高XX。因为有的高并不能对我们实际的业务产生多大的帮助。\n\n在下半节中，老师通过一个大学的学生管理系统的案例解释说明了设计的思路。在各项指标中，性能，和稳定性，高可用，安全性和成本方面，高可用需要设计Mysql同机房主备方案，跨机房同步方案，对于大学生人均每天一次的访问，其他指标都能得到满足。\n\n所以，通过这节的学习，设计软件架构不是目的，目的是为了解决实际业务的复杂，我们需要思考如何能满足实际需求而设计合理的软件系统，这时我们需要学习和实践的。","like_count":0},{"had_liked":false,"id":38101,"user_name":"贾洵","can_delete":false,"product_type":"c1","uid":1173596,"ip_address":"","ucode":"6B66BC83615A26","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/5c/fad21603.jpg","comment_is_top":false,"comment_ctime":1541935746,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"架构从两个方面帮忙软件落地实现。一是基于业务需求出发，切忌照搬抄袭。架构是一款软件的骨架，设计是一定要从实际出发。有时候不设计也是一种设计。二是落地实现。设计视图中逻辑视图确认子系统边界，运行视图描述业务场景，既子系统内部交互。这时再引入架构设计，对其中高可用，高性能等点进行设计；物理视图考虑部署时高可用；包括数据库和中间件","like_count":0},{"had_liked":false,"id":38098,"user_name":"贾洵","can_delete":false,"product_type":"c1","uid":1173596,"ip_address":"","ucode":"6B66BC83615A26","user_header":"https://static001.geekbang.org/account/avatar/00/11/e8/5c/fad21603.jpg","comment_is_top":false,"comment_ctime":1541934443,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"借用公司技术大牛的一句话：设计既分类，等待即浪费","like_count":0},{"had_liked":false,"id":31559,"user_name":"wenjianping","can_delete":false,"product_type":"c1","uid":1263152,"ip_address":"","ucode":"C69D31D0EA034C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0ialic1F0eibTpbqxdPngPpf8TOUljonTLtHIlnibcic7LN5ib1Y4xUic3ex1boaVwFO8XXTaBQ5AhJeqw/132","comment_is_top":false,"comment_ctime":1539228832,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"架构设计的目的：\n1.识别和解决项目中主要的技术问题，保证项目能够顺利实行\n2.保证的可以预见的未来不会存在无法处理的技术问题\n\n架构设计的任务\n1.发现主要的设计点\n    性能、搞可用、可扩展性、安全、质量、系统目标等\n2.发现主要的技术问题：团队不熟悉的技术、解决方案\n3.围绕主要设计点，提供对应的解决方案和支持\n    技术上的方案\n    管理、流程上的方案","like_count":0},{"had_liked":false,"id":31348,"user_name":"lucoffee","can_delete":false,"product_type":"c1","uid":1133208,"ip_address":"","ucode":"27D20476D21D34","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/98/1c318d41.jpg","comment_is_top":false,"comment_ctime":1539155595,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"我还没有架构师方面的经历。","like_count":0},{"had_liked":false,"id":31344,"user_name":"lucoffee","can_delete":false,"product_type":"c1","uid":1133208,"ip_address":"","ucode":"27D20476D21D34","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/98/1c318d41.jpg","comment_is_top":false,"comment_ctime":1539155045,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":25,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题。","like_count":0},{"had_liked":false,"id":26199,"user_name":"self-discipline","can_delete":false,"product_type":"c1","uid":1024457,"ip_address":"","ucode":"A5AEDCA9ACC68A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/c9/501a1d02.jpg","comment_is_top":false,"comment_ctime":1537516633,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"选择微服务架构的原因是方便开发,因为当初和现在的人员技术能力层次不齐,我想要烂了代码就烂掉一块,方便每个人处理自己的代码,从而不影响我的心情.其次业务增加启动太慢的,闹心,很多问题的处理要求修改后就要上线,垂直项目重启后网站接口就垮掉了,灾难性的后果,微服务后单独模块重启速度快,10秒左右不影响使用.讲之前垂直项目微服务化,找到约束项目可拓展的环节,就是支付回调环节的,优先进行微服务化,达到后期拓展方便。架构和面向对象,结构化编程都是解决一时问题的,其实工作中同样是引入个技术或者项目会给你解决现有问题,引入新问题的，只要机会成本小就值得引入","like_count":0},{"had_liked":false,"id":23854,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1536708051,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"高性能，高可用，可扩展，安全性，成本，代码规范","like_count":0},{"had_liked":false,"id":22378,"user_name":"无缺","can_delete":false,"product_type":"c1","uid":1102857,"ip_address":"","ucode":"E4C5EB926A20D9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/09/3c4dcd26.jpg","comment_is_top":false,"comment_ctime":1535637142,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"架构设计的主要目的是解决软件系统复杂度带来的问题","like_count":0},{"had_liked":false,"id":19749,"user_name":"李雷","can_delete":false,"product_type":"c1","uid":1128727,"ip_address":"","ucode":"12BD2E55479CF2","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/17/25833aa7.jpg","comment_is_top":false,"comment_ctime":1534034353,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"1、软件、经济好像很多领域发展壮大的同时都会伴随着结构问题\n2、分析问题的方法：分治\n3、软件架构目的：降低分析软件领域发展同时带来的结构问题的难度","like_count":0},{"had_liked":false,"id":17130,"user_name":"vicwang","can_delete":false,"product_type":"c1","uid":1073439,"ip_address":"","ucode":"A5D6A6BFFE1AA4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wZlrSMdFYw4BMuk3odF1go9UIRpK5cYChic2iaTxoneaHl9YD6Bq9DqCEDWKuw3JCKTt0TibAo4Ex6mCWWMvSib0vw/132","comment_is_top":false,"comment_ctime":1532444728,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题。切勿贪大求全，把脉问题，对症下药。","like_count":0},{"had_liked":false,"id":16759,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1532165324,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":26,"product_id":100006601,"comment_content":"我从这篇文章中学到的整理如下：\n1. 架构设计不能过度设计，高大全的架构不能要。\n2. 软件架构是用来解决“软件复杂度”的，脱离了业务需求去做架构设计往往会失败。\n3. 架构师对业务需求的洞察能力非常重要，不能仅仅从技术角度来看待项目。","like_count":0},{"had_liked":false,"id":15892,"user_name":"蔡","can_delete":false,"product_type":"c1","uid":1177128,"ip_address":"","ucode":"E019D9BB3E173E","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/28/e325c641.jpg","comment_is_top":false,"comment_ctime":1531619769,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"架构设计目的，解决复杂度","like_count":0},{"had_liked":false,"id":11509,"user_name":"蓓岑2015","can_delete":false,"product_type":"c1","uid":1105203,"ip_address":"","ucode":"9DDD5BA26324E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/33/4562472d.jpg","comment_is_top":false,"comment_ctime":1528165207,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"软件架构不是一蹴而就的，也不是万年不变的，而是在软件运行的过程中不断演化、演进的。","like_count":0},{"had_liked":false,"id":11399,"user_name":"千年孤独","can_delete":false,"product_type":"c1","uid":1037215,"ip_address":"","ucode":"282CA1A68E8774","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/9f/36ea3be4.jpg","comment_is_top":false,"comment_ctime":1528113948,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"架构既决策。\n明确需求→分析复杂度→做出决策\n\n嗯，感谢留言区第一的朋友，有启发。\n\n","like_count":0},{"had_liked":false,"id":10639,"user_name":"火山飘雪","can_delete":false,"product_type":"c1","uid":1135988,"ip_address":"","ucode":"8EA1CE2DA06DF9","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/74/04e95bd8.jpg","comment_is_top":false,"comment_ctime":1527639687,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"“架构设计的主要目的是为了解决软件系统复杂度带来的问题”，最好的不一定是合适的，合适的才是最好的。我的理解就是，架构设计要贴个自身系统的业务复杂度去进行设计。","like_count":0},{"had_liked":false,"id":26199,"user_name":"self-discipline","can_delete":false,"product_type":"c1","uid":1024457,"ip_address":"","ucode":"A5AEDCA9ACC68A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/c9/501a1d02.jpg","comment_is_top":false,"comment_ctime":1537516633,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"选择微服务架构的原因是方便开发,因为当初和现在的人员技术能力层次不齐,我想要烂了代码就烂掉一块,方便每个人处理自己的代码,从而不影响我的心情.其次业务增加启动太慢的,闹心,很多问题的处理要求修改后就要上线,垂直项目重启后网站接口就垮掉了,灾难性的后果,微服务后单独模块重启速度快,10秒左右不影响使用.讲之前垂直项目微服务化,找到约束项目可拓展的环节,就是支付回调环节的,优先进行微服务化,达到后期拓展方便。架构和面向对象,结构化编程都是解决一时问题的,其实工作中同样是引入个技术或者项目会给你解决现有问题,引入新问题的，只要机会成本小就值得引入","like_count":0},{"had_liked":false,"id":23854,"user_name":"成功","can_delete":false,"product_type":"c1","uid":1112099,"ip_address":"","ucode":"954B90AC92E8C3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/23/165d2f0e.jpg","comment_is_top":false,"comment_ctime":1536708051,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"高性能，高可用，可扩展，安全性，成本，代码规范","like_count":0},{"had_liked":false,"id":22378,"user_name":"无缺","can_delete":false,"product_type":"c1","uid":1102857,"ip_address":"","ucode":"E4C5EB926A20D9","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/09/3c4dcd26.jpg","comment_is_top":false,"comment_ctime":1535637142,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"架构设计的主要目的是解决软件系统复杂度带来的问题","like_count":0},{"had_liked":false,"id":19749,"user_name":"李雷","can_delete":false,"product_type":"c1","uid":1128727,"ip_address":"","ucode":"12BD2E55479CF2","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/17/25833aa7.jpg","comment_is_top":false,"comment_ctime":1534034353,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"1、软件、经济好像很多领域发展壮大的同时都会伴随着结构问题\n2、分析问题的方法：分治\n3、软件架构目的：降低分析软件领域发展同时带来的结构问题的难度","like_count":0},{"had_liked":false,"id":17130,"user_name":"vicwang","can_delete":false,"product_type":"c1","uid":1073439,"ip_address":"","ucode":"A5D6A6BFFE1AA4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wZlrSMdFYw4BMuk3odF1go9UIRpK5cYChic2iaTxoneaHl9YD6Bq9DqCEDWKuw3JCKTt0TibAo4Ex6mCWWMvSib0vw/132","comment_is_top":false,"comment_ctime":1532444728,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题。切勿贪大求全，把脉问题，对症下药。","like_count":0},{"had_liked":false,"id":16759,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1532165324,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":26,"product_id":100006601,"comment_content":"我从这篇文章中学到的整理如下：\n1. 架构设计不能过度设计，高大全的架构不能要。\n2. 软件架构是用来解决“软件复杂度”的，脱离了业务需求去做架构设计往往会失败。\n3. 架构师对业务需求的洞察能力非常重要，不能仅仅从技术角度来看待项目。","like_count":0},{"had_liked":false,"id":15892,"user_name":"蔡","can_delete":false,"product_type":"c1","uid":1177128,"ip_address":"","ucode":"E019D9BB3E173E","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/28/e325c641.jpg","comment_is_top":false,"comment_ctime":1531619769,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"架构设计目的，解决复杂度","like_count":0},{"had_liked":false,"id":11509,"user_name":"蓓岑2015","can_delete":false,"product_type":"c1","uid":1105203,"ip_address":"","ucode":"9DDD5BA26324E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/33/4562472d.jpg","comment_is_top":false,"comment_ctime":1528165207,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"软件架构不是一蹴而就的，也不是万年不变的，而是在软件运行的过程中不断演化、演进的。","like_count":0},{"had_liked":false,"id":11399,"user_name":"千年孤独","can_delete":false,"product_type":"c1","uid":1037215,"ip_address":"","ucode":"282CA1A68E8774","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/9f/36ea3be4.jpg","comment_is_top":false,"comment_ctime":1528113948,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"架构既决策。\n明确需求→分析复杂度→做出决策\n\n嗯，感谢留言区第一的朋友，有启发。\n\n","like_count":0},{"had_liked":false,"id":10639,"user_name":"火山飘雪","can_delete":false,"product_type":"c1","uid":1135988,"ip_address":"","ucode":"8EA1CE2DA06DF9","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/74/04e95bd8.jpg","comment_is_top":false,"comment_ctime":1527639687,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":26,"product_id":100006601,"comment_content":"“架构设计的主要目的是为了解决软件系统复杂度带来的问题”，最好的不一定是合适的，合适的才是最好的。我的理解就是，架构设计要贴个自身系统的业务复杂度去进行设计。","like_count":0},{"had_liked":false,"id":10381,"user_name":"tiger","can_delete":false,"product_type":"c1","uid":1047291,"ip_address":"","ucode":"C15AC14AA33F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/fb/ef99d6ca.jpg","comment_is_top":false,"comment_ctime":1527515207,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"这让我想起我面试时候一直讲不好的一个项目，就是因为没把项目的复杂度讲清楚，希望能从中有所收获","like_count":0},{"had_liked":false,"id":10300,"user_name":"唐朝首都","can_delete":false,"product_type":"c1","uid":1081233,"ip_address":"","ucode":"F72655AE0AE4CA","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/91/962eba1a.jpg","comment_is_top":false,"comment_ctime":1527467324,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"识别复杂点，预测复杂度，找出解决复杂点的合理方案。","like_count":0},{"had_liked":false,"id":9377,"user_name":"许鑫","can_delete":false,"product_type":"c1","uid":1042631,"ip_address":"","ucode":"820650DFDA0246","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/c7/b607fc34.jpg","comment_is_top":false,"comment_ctime":1526830110,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"银弹制服了凶残的怪兽，但是未必所有的怪兽都怕银弹。软件开发是个不断演进的过程，各个阶段痛点不一致，因而想一招鲜吃遍天不大可能","like_count":0},{"had_liked":false,"id":9349,"user_name":"何yuan","can_delete":false,"product_type":"c1","uid":1117873,"ip_address":"","ucode":"9515496270D013","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/b1/aab3759b.jpg","comment_is_top":false,"comment_ctime":1526808345,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"架构师需要从项目的进度，成本，范围，质量，风险，人资等多个维度去分析合适项目的架构，只关注质量，忽略其他维度肯定会对项目造成灾难。架构要想体现价值必须结合实际场景。脱离业务而追求高大上的架构是浮夸的画蛇添足式的。谨记架构的核心要务“取舍”","like_count":0},{"had_liked":false,"id":9245,"user_name":"熊能","can_delete":false,"product_type":"c1","uid":1135024,"ip_address":"","ucode":"1019EA97062AC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/b0/d32c895d.jpg","comment_is_top":false,"comment_ctime":1526701724,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"华仔老师么么哒","like_count":0},{"had_liked":false,"id":9104,"user_name":"Forrest Li","can_delete":false,"product_type":"c1","uid":1014880,"ip_address":"","ucode":"E5F3999FD888D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/60/0d508466.jpg","comment_is_top":false,"comment_ctime":1526609328,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"架构设计的目的是什么？为了解决软件系统复杂度带来的问题。\n要知其然，也要知其所以然，诱惑与选择太多，这样把握住原则，才不至于迷失","like_count":0},{"had_liked":false,"id":8847,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1526481375,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"我第一时间的感受是，做架构为了长远打算，要可扩展、易维护。现在我明白了自己的想法是在要求面面俱到，而且会带来主次矛盾都没解决、落地遥遥无期等灾难性的后果。根据软件工程发展的历史可以清晰了解到，架构设计的核心目的是应对软件系统高复杂度带来的问题。换句话说就是把复杂的事情简单化。先找到复杂点（主要矛盾），然后有针对性的解决问题，是架构设计的核心逻辑。","like_count":0},{"had_liked":false,"id":8488,"user_name":"周","can_delete":false,"product_type":"c1","uid":1030086,"ip_address":"","ucode":"5595CC944F4A08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/c6/839984bc.jpg","comment_is_top":false,"comment_ctime":1526261926,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"牛逼的架构，就是解决了当前的问题，以及考虑了未来一段时间的需求变动之类的。想要一劳永逸，就是扯淡","like_count":0},{"had_liked":false,"id":8441,"user_name":"吴建中","can_delete":false,"product_type":"c1","uid":1090512,"ip_address":"","ucode":"4C6D46E5EC17CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/d0/882b5388.jpg","comment_is_top":false,"comment_ctime":1526218494,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"接触过几个公司在客户现场做的系统，当用户提出优化时，我会跟他们说问题出在架构上，架构太老，跟不上业务发展，之前架构有明显缺陷。这是架构师应该有的视野，角度。","like_count":0},{"had_liked":false,"id":8039,"user_name":"高阳路人","can_delete":false,"product_type":"c1","uid":1017091,"ip_address":"","ucode":"E7AC074945CC1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/03/eb460eda.jpg","comment_is_top":false,"comment_ctime":1525870695,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题。","like_count":0},{"had_liked":false,"id":10381,"user_name":"tiger","can_delete":false,"product_type":"c1","uid":1047291,"ip_address":"","ucode":"C15AC14AA33F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/fb/ef99d6ca.jpg","comment_is_top":false,"comment_ctime":1527515207,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"这让我想起我面试时候一直讲不好的一个项目，就是因为没把项目的复杂度讲清楚，希望能从中有所收获","like_count":0},{"had_liked":false,"id":10300,"user_name":"唐朝首都","can_delete":false,"product_type":"c1","uid":1081233,"ip_address":"","ucode":"F72655AE0AE4CA","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/91/962eba1a.jpg","comment_is_top":false,"comment_ctime":1527467324,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"识别复杂点，预测复杂度，找出解决复杂点的合理方案。","like_count":0},{"had_liked":false,"id":9377,"user_name":"许鑫","can_delete":false,"product_type":"c1","uid":1042631,"ip_address":"","ucode":"820650DFDA0246","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/c7/b607fc34.jpg","comment_is_top":false,"comment_ctime":1526830110,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"银弹制服了凶残的怪兽，但是未必所有的怪兽都怕银弹。软件开发是个不断演进的过程，各个阶段痛点不一致，因而想一招鲜吃遍天不大可能","like_count":0},{"had_liked":false,"id":9349,"user_name":"何yuan","can_delete":false,"product_type":"c1","uid":1117873,"ip_address":"","ucode":"9515496270D013","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/b1/aab3759b.jpg","comment_is_top":false,"comment_ctime":1526808345,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"架构师需要从项目的进度，成本，范围，质量，风险，人资等多个维度去分析合适项目的架构，只关注质量，忽略其他维度肯定会对项目造成灾难。架构要想体现价值必须结合实际场景。脱离业务而追求高大上的架构是浮夸的画蛇添足式的。谨记架构的核心要务“取舍”","like_count":0},{"had_liked":false,"id":9245,"user_name":"熊能","can_delete":false,"product_type":"c1","uid":1135024,"ip_address":"","ucode":"1019EA97062AC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/b0/d32c895d.jpg","comment_is_top":false,"comment_ctime":1526701724,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"华仔老师么么哒","like_count":0},{"had_liked":false,"id":9104,"user_name":"Forrest Li","can_delete":false,"product_type":"c1","uid":1014880,"ip_address":"","ucode":"E5F3999FD888D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/60/0d508466.jpg","comment_is_top":false,"comment_ctime":1526609328,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"架构设计的目的是什么？为了解决软件系统复杂度带来的问题。\n要知其然，也要知其所以然，诱惑与选择太多，这样把握住原则，才不至于迷失","like_count":0},{"had_liked":false,"id":8847,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1526481375,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"我第一时间的感受是，做架构为了长远打算，要可扩展、易维护。现在我明白了自己的想法是在要求面面俱到，而且会带来主次矛盾都没解决、落地遥遥无期等灾难性的后果。根据软件工程发展的历史可以清晰了解到，架构设计的核心目的是应对软件系统高复杂度带来的问题。换句话说就是把复杂的事情简单化。先找到复杂点（主要矛盾），然后有针对性的解决问题，是架构设计的核心逻辑。","like_count":0},{"had_liked":false,"id":8488,"user_name":"周","can_delete":false,"product_type":"c1","uid":1030086,"ip_address":"","ucode":"5595CC944F4A08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/c6/839984bc.jpg","comment_is_top":false,"comment_ctime":1526261926,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"牛逼的架构，就是解决了当前的问题，以及考虑了未来一段时间的需求变动之类的。想要一劳永逸，就是扯淡","like_count":0},{"had_liked":false,"id":8441,"user_name":"吴建中","can_delete":false,"product_type":"c1","uid":1090512,"ip_address":"","ucode":"4C6D46E5EC17CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/d0/882b5388.jpg","comment_is_top":false,"comment_ctime":1526218494,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"接触过几个公司在客户现场做的系统，当用户提出优化时，我会跟他们说问题出在架构上，架构太老，跟不上业务发展，之前架构有明显缺陷。这是架构师应该有的视野，角度。","like_count":0},{"had_liked":false,"id":8039,"user_name":"高阳路人","can_delete":false,"product_type":"c1","uid":1017091,"ip_address":"","ucode":"E7AC074945CC1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/03/eb460eda.jpg","comment_is_top":false,"comment_ctime":1525870695,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":27,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题。","like_count":0},{"had_liked":false,"id":7964,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1525824949,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"复杂度，1.因业务需求，某条业务线的访问量大，拆分单个服务或集群，2.需调用sdk进行用户资产操作，数据双向保证，任何与第三方数据交互的操作都进行记录，3.数据库使用主备","like_count":0},{"had_liked":false,"id":7789,"user_name":"孙晓明","can_delete":false,"product_type":"c1","uid":1117094,"ip_address":"","ucode":"CAD28E4D5A3E76","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/a6/b234aa79.jpg","comment_is_top":false,"comment_ctime":1525738706,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"李老师，您好：\n一、对于“软件设计的主要目的是为了解决软件系统复杂度带来的问题”的理解：第一步，架构设计需根据需求确定系统各点的复杂度；第二步，根据复杂度的高低排列优先级，依次进行架构设计，不求面面俱到，但必须解决核心问题。\n二、问题：\n关于如何分析软件系统的复杂度，是否有可以参考和学习的方法论？能否深入介绍一下？","like_count":0},{"had_liked":false,"id":7776,"user_name":"黑暗浪子","can_delete":false,"product_type":"c1","uid":1014691,"ip_address":"","ucode":"FBB8C24EBEC5BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/a3/82b2a73e.jpg","comment_is_top":false,"comment_ctime":1525715261,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"其实你还是有点啰嗦，整篇文章意思就是架构设计的目的是降低复杂度。但是你可能忘记了，架构的可扩展性，我可不希望多了一个新需求，我这套架构就无法扩展了。也就是说我认为架构即未来","like_count":0},{"had_liked":false,"id":7642,"user_name":"YMF_WX1981","can_delete":false,"product_type":"c1","uid":1123051,"ip_address":"","ucode":"8891A4C343D9FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/eb/b580b80f.jpg","comment_is_top":false,"comment_ctime":1525597531,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"如果一个需求：能利用用户碎片化时间、能应付弱网环境和多样的网络协议、适应业务逻辑高度复杂和多变、运行于多种互联网web平台的电商应用。\n\n隐私性没得说肯定需要，而且能开放用户配置。\n容灾？的话，互联的多地存储，增一台，数据同步，宕一台，数据能从附近最近机器访问。\n能对产生数据自动分类，目的是永久数据放redis，临时数据是产生用完即扔，这方面用户也可配置，提供数据查询下载..\n多少人在线，自动开启多少服务器，多少带宽\n\n...我想这种应用主要是hold住互联网web应用，符合人用网规律和机器利用规律","like_count":0},{"had_liked":false,"id":7580,"user_name":"舟舟","can_delete":false,"product_type":"c1","uid":1107112,"ip_address":"","ucode":"E772D38733B18A","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/a8/411d1f87.jpg","comment_is_top":false,"comment_ctime":1525565518,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"菜鸟一枚，架构的目的就是提前分析出项目上可能出现坑，针对这些坑提前预留好扩展点，在适当的时候去填上这些坑。而技术人员最容易犯的错误就是用一些时髦高大上的技术来显示本事","like_count":0},{"had_liked":false,"id":7551,"user_name":"赵龙","can_delete":false,"product_type":"c1","uid":1030597,"ip_address":"","ucode":"764B7104DA14D8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b9/c5/7f80162a.jpg","comment_is_top":false,"comment_ctime":1525523836,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"老师，我们公司目前给各家医院的某个科室做系统，每家医院除了公共需求外都存在一些个性化的需求，目前我们是开了很多分支，每家医院针对一个版本分支进行开发。新合作一家医院确定需求后找一个相似的版本分支再开出一个版本分支进行开发，能从架构设计上弄成一个产品级的系统吗？？？通过不同配置给各家医院进行使用，如果这样做，前期整体规划会花大量时间吧","like_count":0},{"had_liked":false,"id":7542,"user_name":"Dylan","can_delete":false,"product_type":"c1","uid":1048073,"ip_address":"","ucode":"9E1455F4C72399","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/09/70c3b0b6.jpg","comment_is_top":false,"comment_ctime":1525515778,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"架构设计的主要考量是复杂度，复杂度的度量也是一门艺术活","like_count":0},{"had_liked":false,"id":7458,"user_name":"燃点丶","can_delete":false,"product_type":"c1","uid":1106277,"ip_address":"","ucode":"01E91FB4287535","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/65/0dd1abf7.jpg","comment_is_top":false,"comment_ctime":1525487080,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"我正在设计一个日志分析系统。看完后找到系统的复杂度在哪。以及架构方向。","like_count":0},{"had_liked":false,"id":7416,"user_name":"大光头","can_delete":false,"product_type":"c1","uid":1041792,"ip_address":"","ucode":"8EF797AFD1E27C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo3DrWeV7ZwRLXrRZg4V3ic1LQYdZ3u1oicDhqPic47vMguvf5QS69roTiaJrwDr5Re3Sy2UyHDWwmsTA/132","comment_is_top":false,"comment_ctime":1525477005,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"架构设计一般是为了满足新业务需求和复杂度，然后选用哪种框架则在需求，复杂度和小组技术栈进行权衡，最终的架构都是这些约束条件下的妥协或者说最佳解。","like_count":0},{"had_liked":false,"id":7406,"user_name":"MichaelJY","can_delete":false,"product_type":"c1","uid":1107013,"ip_address":"","ucode":"9085773CA93936","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/45/846f8441.jpg","comment_is_top":false,"comment_ctime":1525448888,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"        业务架构，的确是。任何不以业务为基础而想象设计的架构都是耍流氓！\n        架构是慢慢演进的，前期业务量小集中式能够完全满足，等业务量稍大了就要想着服务拆分，业务量再大点就得想着动态扩容，保证数据一致性等...\n        不过任何时候在设计架构时都要考虑扩展性，否则推倒重来就会很痛苦","like_count":0},{"had_liked":false,"id":7964,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1525824949,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"复杂度，1.因业务需求，某条业务线的访问量大，拆分单个服务或集群，2.需调用sdk进行用户资产操作，数据双向保证，任何与第三方数据交互的操作都进行记录，3.数据库使用主备","like_count":0},{"had_liked":false,"id":7789,"user_name":"孙晓明","can_delete":false,"product_type":"c1","uid":1117094,"ip_address":"","ucode":"CAD28E4D5A3E76","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/a6/b234aa79.jpg","comment_is_top":false,"comment_ctime":1525738706,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"李老师，您好：\n一、对于“软件设计的主要目的是为了解决软件系统复杂度带来的问题”的理解：第一步，架构设计需根据需求确定系统各点的复杂度；第二步，根据复杂度的高低排列优先级，依次进行架构设计，不求面面俱到，但必须解决核心问题。\n二、问题：\n关于如何分析软件系统的复杂度，是否有可以参考和学习的方法论？能否深入介绍一下？","like_count":0},{"had_liked":false,"id":7776,"user_name":"黑暗浪子","can_delete":false,"product_type":"c1","uid":1014691,"ip_address":"","ucode":"FBB8C24EBEC5BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/a3/82b2a73e.jpg","comment_is_top":false,"comment_ctime":1525715261,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"其实你还是有点啰嗦，整篇文章意思就是架构设计的目的是降低复杂度。但是你可能忘记了，架构的可扩展性，我可不希望多了一个新需求，我这套架构就无法扩展了。也就是说我认为架构即未来","like_count":0},{"had_liked":false,"id":7642,"user_name":"YMF_WX1981","can_delete":false,"product_type":"c1","uid":1123051,"ip_address":"","ucode":"8891A4C343D9FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/eb/b580b80f.jpg","comment_is_top":false,"comment_ctime":1525597531,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"如果一个需求：能利用用户碎片化时间、能应付弱网环境和多样的网络协议、适应业务逻辑高度复杂和多变、运行于多种互联网web平台的电商应用。\n\n隐私性没得说肯定需要，而且能开放用户配置。\n容灾？的话，互联的多地存储，增一台，数据同步，宕一台，数据能从附近最近机器访问。\n能对产生数据自动分类，目的是永久数据放redis，临时数据是产生用完即扔，这方面用户也可配置，提供数据查询下载..\n多少人在线，自动开启多少服务器，多少带宽\n\n...我想这种应用主要是hold住互联网web应用，符合人用网规律和机器利用规律","like_count":0},{"had_liked":false,"id":7580,"user_name":"舟舟","can_delete":false,"product_type":"c1","uid":1107112,"ip_address":"","ucode":"E772D38733B18A","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/a8/411d1f87.jpg","comment_is_top":false,"comment_ctime":1525565518,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"菜鸟一枚，架构的目的就是提前分析出项目上可能出现坑，针对这些坑提前预留好扩展点，在适当的时候去填上这些坑。而技术人员最容易犯的错误就是用一些时髦高大上的技术来显示本事","like_count":0},{"had_liked":false,"id":7551,"user_name":"赵龙","can_delete":false,"product_type":"c1","uid":1030597,"ip_address":"","ucode":"764B7104DA14D8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b9/c5/7f80162a.jpg","comment_is_top":false,"comment_ctime":1525523836,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"老师，我们公司目前给各家医院的某个科室做系统，每家医院除了公共需求外都存在一些个性化的需求，目前我们是开了很多分支，每家医院针对一个版本分支进行开发。新合作一家医院确定需求后找一个相似的版本分支再开出一个版本分支进行开发，能从架构设计上弄成一个产品级的系统吗？？？通过不同配置给各家医院进行使用，如果这样做，前期整体规划会花大量时间吧","like_count":0},{"had_liked":false,"id":7542,"user_name":"Dylan","can_delete":false,"product_type":"c1","uid":1048073,"ip_address":"","ucode":"9E1455F4C72399","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/09/70c3b0b6.jpg","comment_is_top":false,"comment_ctime":1525515778,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"架构设计的主要考量是复杂度，复杂度的度量也是一门艺术活","like_count":0},{"had_liked":false,"id":7458,"user_name":"燃点丶","can_delete":false,"product_type":"c1","uid":1106277,"ip_address":"","ucode":"01E91FB4287535","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/65/0dd1abf7.jpg","comment_is_top":false,"comment_ctime":1525487080,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"我正在设计一个日志分析系统。看完后找到系统的复杂度在哪。以及架构方向。","like_count":0},{"had_liked":false,"id":7416,"user_name":"大光头","can_delete":false,"product_type":"c1","uid":1041792,"ip_address":"","ucode":"8EF797AFD1E27C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo3DrWeV7ZwRLXrRZg4V3ic1LQYdZ3u1oicDhqPic47vMguvf5QS69roTiaJrwDr5Re3Sy2UyHDWwmsTA/132","comment_is_top":false,"comment_ctime":1525477005,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"架构设计一般是为了满足新业务需求和复杂度，然后选用哪种框架则在需求，复杂度和小组技术栈进行权衡，最终的架构都是这些约束条件下的妥协或者说最佳解。","like_count":0},{"had_liked":false,"id":7406,"user_name":"MichaelJY","can_delete":false,"product_type":"c1","uid":1107013,"ip_address":"","ucode":"9085773CA93936","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/45/846f8441.jpg","comment_is_top":false,"comment_ctime":1525448888,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":28,"product_id":100006601,"comment_content":"        业务架构，的确是。任何不以业务为基础而想象设计的架构都是耍流氓！\n        架构是慢慢演进的，前期业务量小集中式能够完全满足，等业务量稍大了就要想着服务拆分，业务量再大点就得想着动态扩容，保证数据一致性等...\n        不过任何时候在设计架构时都要考虑扩展性，否则推倒重来就会很痛苦","like_count":0},{"had_liked":false,"id":7395,"user_name":"Even","can_delete":false,"product_type":"c1","uid":1022409,"ip_address":"","ucode":"E3B1F9916D2D1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/c9/5dc9fa46.jpg","comment_is_top":false,"comment_ctime":1525442492,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"深入浅出，又有真实案例，赞，一直只是个TL，第一次这么系统的学习架构知识，期待后面更精彩","like_count":0},{"had_liked":false,"id":7345,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1101125,"ip_address":"","ucode":"23D23F58809643","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/45/27ba20a6.jpg","comment_is_top":false,"comment_ctime":1525409436,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"架构的目的是把各个组件按照一定规则组合成一个系统。这个系统的价值要远远大于内部各个组件之和。","like_count":0},{"had_liked":false,"id":7336,"user_name":"李绍文","can_delete":false,"product_type":"c1","uid":1118554,"ip_address":"","ucode":"61B1657F92E6D2","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/5a/4075cec3.jpg","comment_is_top":false,"comment_ctime":1525403888,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"预则立，不预则废，预者，架构设计也。","like_count":0},{"had_liked":false,"id":7293,"user_name":"清泉","can_delete":false,"product_type":"c1","uid":1102743,"ip_address":"","ucode":"28EAE68B33A140","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/97/953a9f5a.jpg","comment_is_top":false,"comment_ctime":1525387587,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"软件架构就是为了让软件系统能够满足业务的要求。","like_count":0},{"had_liked":false,"id":7280,"user_name":"超级码利","can_delete":false,"product_type":"c1","uid":1014681,"ip_address":"","ucode":"497399CEE087D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/99/3e7eb43f.jpg","comment_is_top":false,"comment_ctime":1525364105,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"卧槽，被击中了，能明白这个指导思想太关键了，听完这期都感觉已经值回票价😃，后面50期都是白送。","like_count":0},{"had_liked":false,"id":7266,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1525360012,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"第一次分析自己所接触的系统，总觉得很不到位，但还是想把思考的写下来才会有提升。\n\n我们公司的系统主要是采集数据的业务，由一个单体的控制服务端包括页面呈现端，和采集机集群多个节点组成。\n主要业务是采集各种各样的数据。流程是服务端配置和调度控制，分派任务到采集端，采集端采集完数据\n\n性能：对采集时间要求不是特别高，不同的采集项，要求的采集的时间不同。配置采集一天一次，一次大概采集1W台设备，预计2小时完成。\n拨测数据5分钟一次，一次也采集大概1W台设备，5分钟内必须完成。并发任务多的时候可能2W-3W个任务同时下发。为了提高性能，程序内部的\n配置信息（设备信息，采集指标信息，调度信息）采用了缓存，并通过采集机集群和轮询分发，并发去执行任务。并把数据流和控制流分开，采集控制信息通过\n服务端和采集机的长连接传递，采集数据通过activityMQ上报给服务端入库。\n\n可扩展：扩展性是我们系统的关键问题，因为是采集业务。需要采集的内容随业务变化，采集的方式也各不相同。现有架构处理这个问题，\n是通过在采集机上实现不同的采集能力，并且将需要采集的内容封装成独立的任务，单台采集机机集成所有的采集能力，分派到不同的任务，就执行不同的\n采集方式。其余的配置和调度，轮训下发，数据上报，采集数据结构采用的统一的规范，实现不同的采集，从配置-&gt;调度-&gt;到下发-&gt;采集-&gt;入库的动作都是一样的。\n\n可靠性:配置的设备信息，指标数据不可丢失，结果数据按数据不同，最短不需要保留，最长保留3个月。用的oracle数据库，仅需要做主备或者定期备份。\n由于告警数据需要采集，程序宕机接受时间在30分钟内，可以使用看门狗进行进程监控。\n\n现在的问题：\n1.控制服务端为了提高效率，配置信息使用了缓存，做双机热备的时候，备机的缓存与主机的不一致问题。\n考虑是否将缓存单独提取成一个服务。\n\n2.原先的设计是不同的采集项，都封装成不同的任务，相互独立，实现采集机的集群使用\n比如采集A,B,C三个指标，就生成A,B,C三个任务，不论发给哪台采集机，都会去执行采集。\n随着业务更加复杂，有些采集任务互相之间存在复杂的逻辑，比如采集C，一定要A采集完之后，\n并且A的采集结果是X的时候，采集B，B的结果为空的时候采集C。\n\n","like_count":0},{"had_liked":false,"id":7247,"user_name":"巧锋","can_delete":false,"product_type":"c1","uid":1060410,"ip_address":"","ucode":"4A1037EA460528","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/3a/643e7843.jpg","comment_is_top":false,"comment_ctime":1525355097,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"为了解决软件系统复杂度带来的问题","like_count":0},{"had_liked":false,"id":7245,"user_name":"键盘猴","can_delete":false,"product_type":"c1","uid":1099310,"ip_address":"","ucode":"50669F645F2F0B","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/2e/b2524d13.jpg","comment_is_top":false,"comment_ctime":1525354527,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"项目也是逐步发展的，使用的架构也是随着时间推移慢慢演变，做项目经常碰到的两个问题，一个是过度设计，想的太多；另一个是没有为未来设计，考虑的太少。\n现在手头上这个项目就是属于第二种问题，需求迭代也快，动一发而牵全身，不可能一次调整整体架构，只能随着迭代每次重构一小个模块。实践越多，越对于“与复杂度做斗争”有感触。\n着眼整个项目实现过程，觉得编码其实重点不是编码，而是思考的过程，如何分配资源，如何做取舍，代码也只是反应了思考的结果和文法功底","like_count":0},{"had_liked":false,"id":7240,"user_name":"小土","can_delete":false,"product_type":"c1","uid":1023597,"ip_address":"","ucode":"F12349FC0FBCF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9e/6d/fdfd8849.jpg","comment_is_top":false,"comment_ctime":1525352207,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"架构是为业务和人服务的，注意业务在前面。架构在满足业务的同时，给开发人员带来便捷才是好，都是一个权衡的过程。","like_count":0},{"had_liked":false,"id":7131,"user_name":"jacy","can_delete":false,"product_type":"c1","uid":1103456,"ip_address":"","ucode":"0022A8759DDCE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/60/f21b2164.jpg","comment_is_top":false,"comment_ctime":1525306897,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题，一语道破","like_count":0},{"had_liked":false,"id":7395,"user_name":"Even","can_delete":false,"product_type":"c1","uid":1022409,"ip_address":"","ucode":"E3B1F9916D2D1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/c9/5dc9fa46.jpg","comment_is_top":false,"comment_ctime":1525442492,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"深入浅出，又有真实案例，赞，一直只是个TL，第一次这么系统的学习架构知识，期待后面更精彩","like_count":0},{"had_liked":false,"id":7345,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1101125,"ip_address":"","ucode":"23D23F58809643","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/45/27ba20a6.jpg","comment_is_top":false,"comment_ctime":1525409436,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"架构的目的是把各个组件按照一定规则组合成一个系统。这个系统的价值要远远大于内部各个组件之和。","like_count":0},{"had_liked":false,"id":7336,"user_name":"李绍文","can_delete":false,"product_type":"c1","uid":1118554,"ip_address":"","ucode":"61B1657F92E6D2","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/5a/4075cec3.jpg","comment_is_top":false,"comment_ctime":1525403888,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"预则立，不预则废，预者，架构设计也。","like_count":0},{"had_liked":false,"id":7293,"user_name":"清泉","can_delete":false,"product_type":"c1","uid":1102743,"ip_address":"","ucode":"28EAE68B33A140","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/97/953a9f5a.jpg","comment_is_top":false,"comment_ctime":1525387587,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"软件架构就是为了让软件系统能够满足业务的要求。","like_count":0},{"had_liked":false,"id":7280,"user_name":"超级码利","can_delete":false,"product_type":"c1","uid":1014681,"ip_address":"","ucode":"497399CEE087D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/99/3e7eb43f.jpg","comment_is_top":false,"comment_ctime":1525364105,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"卧槽，被击中了，能明白这个指导思想太关键了，听完这期都感觉已经值回票价😃，后面50期都是白送。","like_count":0},{"had_liked":false,"id":7266,"user_name":"DullBird","can_delete":false,"product_type":"c1","uid":1110494,"ip_address":"","ucode":"80E2FD5F9687CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/de/3ebcbb3f.jpg","comment_is_top":false,"comment_ctime":1525360012,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"第一次分析自己所接触的系统，总觉得很不到位，但还是想把思考的写下来才会有提升。\n\n我们公司的系统主要是采集数据的业务，由一个单体的控制服务端包括页面呈现端，和采集机集群多个节点组成。\n主要业务是采集各种各样的数据。流程是服务端配置和调度控制，分派任务到采集端，采集端采集完数据\n\n性能：对采集时间要求不是特别高，不同的采集项，要求的采集的时间不同。配置采集一天一次，一次大概采集1W台设备，预计2小时完成。\n拨测数据5分钟一次，一次也采集大概1W台设备，5分钟内必须完成。并发任务多的时候可能2W-3W个任务同时下发。为了提高性能，程序内部的\n配置信息（设备信息，采集指标信息，调度信息）采用了缓存，并通过采集机集群和轮询分发，并发去执行任务。并把数据流和控制流分开，采集控制信息通过\n服务端和采集机的长连接传递，采集数据通过activityMQ上报给服务端入库。\n\n可扩展：扩展性是我们系统的关键问题，因为是采集业务。需要采集的内容随业务变化，采集的方式也各不相同。现有架构处理这个问题，\n是通过在采集机上实现不同的采集能力，并且将需要采集的内容封装成独立的任务，单台采集机机集成所有的采集能力，分派到不同的任务，就执行不同的\n采集方式。其余的配置和调度，轮训下发，数据上报，采集数据结构采用的统一的规范，实现不同的采集，从配置-&gt;调度-&gt;到下发-&gt;采集-&gt;入库的动作都是一样的。\n\n可靠性:配置的设备信息，指标数据不可丢失，结果数据按数据不同，最短不需要保留，最长保留3个月。用的oracle数据库，仅需要做主备或者定期备份。\n由于告警数据需要采集，程序宕机接受时间在30分钟内，可以使用看门狗进行进程监控。\n\n现在的问题：\n1.控制服务端为了提高效率，配置信息使用了缓存，做双机热备的时候，备机的缓存与主机的不一致问题。\n考虑是否将缓存单独提取成一个服务。\n\n2.原先的设计是不同的采集项，都封装成不同的任务，相互独立，实现采集机的集群使用\n比如采集A,B,C三个指标，就生成A,B,C三个任务，不论发给哪台采集机，都会去执行采集。\n随着业务更加复杂，有些采集任务互相之间存在复杂的逻辑，比如采集C，一定要A采集完之后，\n并且A的采集结果是X的时候，采集B，B的结果为空的时候采集C。\n\n","like_count":0},{"had_liked":false,"id":7247,"user_name":"巧锋","can_delete":false,"product_type":"c1","uid":1060410,"ip_address":"","ucode":"4A1037EA460528","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/3a/643e7843.jpg","comment_is_top":false,"comment_ctime":1525355097,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"为了解决软件系统复杂度带来的问题","like_count":0},{"had_liked":false,"id":7245,"user_name":"键盘猴","can_delete":false,"product_type":"c1","uid":1099310,"ip_address":"","ucode":"50669F645F2F0B","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/2e/b2524d13.jpg","comment_is_top":false,"comment_ctime":1525354527,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"项目也是逐步发展的，使用的架构也是随着时间推移慢慢演变，做项目经常碰到的两个问题，一个是过度设计，想的太多；另一个是没有为未来设计，考虑的太少。\n现在手头上这个项目就是属于第二种问题，需求迭代也快，动一发而牵全身，不可能一次调整整体架构，只能随着迭代每次重构一小个模块。实践越多，越对于“与复杂度做斗争”有感触。\n着眼整个项目实现过程，觉得编码其实重点不是编码，而是思考的过程，如何分配资源，如何做取舍，代码也只是反应了思考的结果和文法功底","like_count":0},{"had_liked":false,"id":7240,"user_name":"小土","can_delete":false,"product_type":"c1","uid":1023597,"ip_address":"","ucode":"F12349FC0FBCF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9e/6d/fdfd8849.jpg","comment_is_top":false,"comment_ctime":1525352207,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"架构是为业务和人服务的，注意业务在前面。架构在满足业务的同时，给开发人员带来便捷才是好，都是一个权衡的过程。","like_count":0},{"had_liked":false,"id":7131,"user_name":"jacy","can_delete":false,"product_type":"c1","uid":1103456,"ip_address":"","ucode":"0022A8759DDCE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/60/f21b2164.jpg","comment_is_top":false,"comment_ctime":1525306897,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":29,"product_id":100006601,"comment_content":"架构设计的主要目的是为了解决软件系统复杂度带来的问题，一语道破","like_count":0}]}