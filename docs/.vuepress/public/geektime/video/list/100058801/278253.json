{"id":278253,"title":"03 | 流处理技术概览","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Flink\">https://gitee.com/geektime-geekbang/geektime-Flink</a></p>","comments":[{"had_liked":false,"id":244775,"user_name":"泊浮目","can_delete":false,"product_type":"c3","uid":1067981,"ip_address":"","ucode":"182A7CC2F6BDAB","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/cd/185e5378.jpg","comment_is_top":false,"comment_ctime":1598673411,"is_pvip":false,"replies":[{"id":90127,"content":"Storm和Flink的共同之处在于它们旨在通过流水线数据传输实现低延迟流处理，其实说实话Flink的流水线引擎内部看起来还是有点类似于Storm的，比方说Flink的并行任务的接口类似于Storm的bolt，然后Flink中也提供了其他数据输入的算子，类似于Spot。但是，与Storm相比，Flink提供了更高级的API，Flink的DataStream API不仅能够实现Spot，Bolt等全部功能，同时提供Map，GroupBy，Window和Join等高级接口，而这些用户如果使用Storm时都要手动实现许多此功能，程序编写非常费时；\n另一个区别是处理语义。Storm能保证至少一次处理，而Flink只提供当且仅当一次处理语义。虽然Storm使用记录级别的确认，但Flink使用了Chandy-Lamport算法的变体，数据源会定期将Barrier注入数据流。每当Operator会接收到这样的Barrier，然后就会检查其内部状态。当下游算子中全部接收到Barrier时，才会触发计算操作，保证了数据一致性。\n另外比如内存管理这块，Flink能够脱离JVM进行处理数据的内容管理，内部全部将数据序列化成Bytes类型存储，并提供了一套非常完善的数据序列化和反序列化的机制，这样能保障在大数据量的情况对内存的合理利用；\n还有很多地方，比如如何支持带反压数据流模型这块，Flink就能够提出基于Credit的反压模型，能够有效保障系统的稳定运行，而Storm里面还要借助于Zookeeper实现。\n总之对比的地方还是很多的，后面的课程我们再遇到具体的细节方面会把这些框架进行横向对比。\n谢谢","user_name":"作者回复","user_name_real":"Leonard","uid":1119779,"ctime":1598797641,"ip_address":"","comment_id":244775,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"老师能讲一讲“storm的处理模型和flink的处理模型相比之下的优劣”吗？","like_count":8,"discussions":[{"author":{"id":1119779,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/23/99c7ede5.jpg","nickname":"张利兵","note":"","ucode":"DBAE17970AB143","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504695,"discussion_content":"Storm和Flink的共同之处在于它们旨在通过流水线数据传输实现低延迟流处理，其实说实话Flink的流水线引擎内部看起来还是有点类似于Storm的，比方说Flink的并行任务的接口类似于Storm的bolt，然后Flink中也提供了其他数据输入的算子，类似于Spot。但是，与Storm相比，Flink提供了更高级的API，Flink的DataStream API不仅能够实现Spot，Bolt等全部功能，同时提供Map，GroupBy，Window和Join等高级接口，而这些用户如果使用Storm时都要手动实现许多此功能，程序编写非常费时；\n另一个区别是处理语义。Storm能保证至少一次处理，而Flink只提供当且仅当一次处理语义。虽然Storm使用记录级别的确认，但Flink使用了Chandy-Lamport算法的变体，数据源会定期将Barrier注入数据流。每当Operator会接收到这样的Barrier，然后就会检查其内部状态。当下游算子中全部接收到Barrier时，才会触发计算操作，保证了数据一致性。\n另外比如内存管理这块，Flink能够脱离JVM进行处理数据的内容管理，内部全部将数据序列化成Bytes类型存储，并提供了一套非常完善的数据序列化和反序列化的机制，这样能保障在大数据量的情况对内存的合理利用；\n还有很多地方，比如如何支持带反压数据流模型这块，Flink就能够提出基于Credit的反压模型，能够有效保障系统的稳定运行，而Storm里面还要借助于Zookeeper实现。\n总之对比的地方还是很多的，后面的课程我们再遇到具体的细节方面会把这些框架进行横向对比。\n谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598797641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244506,"user_name":"楚翔style","can_delete":false,"product_type":"c3","uid":1174846,"ip_address":"","ucode":"E715F82C34A9AA","user_header":"https://static001.geekbang.org/account/avatar/00/11/ed/3e/c1725237.jpg","comment_is_top":false,"comment_ctime":1598541695,"is_pvip":false,"replies":[{"id":90038,"content":"Spark在2.x版本后加入了StructedStreaming模块，与流处理引擎Sparkstreaming一样，用于处理流数据。\nStructedStreaming主要用于处理结构化流数据，也就是执行在SparkSQL上，对于SparkStreaming主要还是执行在DataStream&#47;RDD上。\n另外StructedStreaming可以支持Micro-batch模式和Continuous Processing两种模式，其中Continuous Processing模式实现了通过long-running的task，&quot;不停地&quot;循环从数据源获取数据并处理，从而实现真正的流处理。但是该模式下，当前只能支持简单的projection式（如map,filter,mappartitions等）操作, 和Flink相比还有很多改进的地方；\n另外在Job生成方式上也有一定的区别：SparkStreaming主要是通过Timer定时器定时生成job,StructStreaming主要是通过Trigger触发计算的；\n\n希望能对你有帮助，谢谢","user_name":"作者回复","user_name_real":"Leonard","uid":1119779,"ctime":1598622465,"ip_address":"","comment_id":244506,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"struct streaming相比于spark streaming有何优势，与flink相比呢","like_count":7,"discussions":[{"author":{"id":1119779,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/23/99c7ede5.jpg","nickname":"张利兵","note":"","ucode":"DBAE17970AB143","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504608,"discussion_content":"Spark在2.x版本后加入了StructedStreaming模块，与流处理引擎Sparkstreaming一样，用于处理流数据。\nStructedStreaming主要用于处理结构化流数据，也就是执行在SparkSQL上，对于SparkStreaming主要还是执行在DataStream/RDD上。\n另外StructedStreaming可以支持Micro-batch模式和Continuous Processing两种模式，其中Continuous Processing模式实现了通过long-running的task，&amp;quot;不停地&amp;quot;循环从数据源获取数据并处理，从而实现真正的流处理。但是该模式下，当前只能支持简单的projection式（如map,filter,mappartitions等）操作, 和Flink相比还有很多改进的地方；\n另外在Job生成方式上也有一定的区别：SparkStreaming主要是通过Timer定时器定时生成job,StructStreaming主要是通过Trigger触发计算的；\n\n希望能对你有帮助，谢谢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598622465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245072,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c3","uid":1010680,"ip_address":"","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1598803991,"is_pvip":false,"replies":[{"id":90178,"content":"好想法。只要数据能传输到网络，怎么处理都行，Flink也能直接支持Socket套接字数据直接接入，需要做下数据协议上的转换就行，然后就可以在Flink里面处理了。","user_name":"作者回复","user_name_real":"Leonard","uid":1119779,"ctime":1598876672,"ip_address":"","comment_id":245072,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"脑机接口这种可以用流计算吗","like_count":5,"discussions":[{"author":{"id":1119779,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/23/99c7ede5.jpg","nickname":"张利兵","note":"","ucode":"DBAE17970AB143","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504784,"discussion_content":"好想法。只要数据能传输到网络，怎么处理都行，Flink也能直接支持Socket套接字数据直接接入，需要做下数据协议上的转换就行，然后就可以在Flink里面处理了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598876672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":312689,"user_name":"沧海一粟","can_delete":false,"product_type":"c3","uid":1482590,"ip_address":"","ucode":"146961635959E7","user_header":"https://static001.geekbang.org/account/avatar/00/16/9f/5e/479f33a6.jpg","comment_is_top":false,"comment_ctime":1631943971,"is_pvip":false,"replies":[{"id":113831,"content":"流处理是实时计算，Rest API是实时请求，流处理可以理解为异步的计算操作","user_name":"作者回复","user_name_real":"张利兵","uid":1119779,"ctime":1632925671,"ip_address":"","comment_id":312689,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"老师，有点搞不清流式处理和普通的web接口有什么区别，普通web接口（比如rest api）不也是实时响应请求的吗？","like_count":1,"discussions":[{"author":{"id":1119779,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/23/99c7ede5.jpg","nickname":"张利兵","note":"","ucode":"DBAE17970AB143","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527080,"discussion_content":"流处理是实时计算，Rest API是实时请求，流处理可以理解为异步的计算操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632925671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289073,"user_name":"Geek_35ec53","can_delete":false,"product_type":"c3","uid":2557128,"ip_address":"","ucode":"43B4C53C3AD102","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/vgTicyjaNY6f4EfrjaPYeTib4Eb2sCVDQBbDJdgwQK8iaCdSZFUUTcXv7daY5YT0D0T15WxiagNzHAB0f8cJqxjcnA/132","comment_is_top":false,"comment_ctime":1618842375,"is_pvip":false,"replies":[{"id":106760,"content":"Gitee上有课件","user_name":"作者回复","user_name_real":"张利兵","uid":1119779,"ctime":1621852412,"ip_address":"","comment_id":289073,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"请问老师ppt课件有吗","like_count":0,"discussions":[{"author":{"id":1119779,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/23/99c7ede5.jpg","nickname":"张利兵","note":"","ucode":"DBAE17970AB143","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518807,"discussion_content":"Gitee上有课件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621852412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247673,"user_name":"Geek_d7581d","can_delete":false,"product_type":"c3","uid":2149239,"ip_address":"","ucode":"D9E26A63F83952","user_header":"","comment_is_top":false,"comment_ctime":1599790466,"is_pvip":false,"replies":[{"id":91407,"content":"估计在1.12基本上就完成对Source的重构了，这样数据接入进来就是DataStream，就基本上是批流一体了","user_name":"作者回复","user_name_real":"张利兵","uid":1119779,"ctime":1600481767,"ip_address":"","comment_id":247673,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"老师，Flink什么时候可以做到批流统一啊？","like_count":0,"discussions":[{"author":{"id":1119779,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/23/99c7ede5.jpg","nickname":"张利兵","note":"","ucode":"DBAE17970AB143","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505467,"discussion_content":"估计在1.12基本上就完成对Source的重构了，这样数据接入进来就是DataStream，就基本上是批流一体了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600481767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378600,"user_name":"Lee","can_delete":false,"product_type":"c3","uid":1155437,"ip_address":"广东","ucode":"0FF1C4EAF7F98A","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/6d/a4ff33bb.jpg","comment_is_top":false,"comment_ctime":1690464902,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"老师好，flink流批一体，看官方说是批处理也可以用DataStream api，想了解一下，一个批处理的jar包，是怎么被定时调度的呢","like_count":0},{"had_liked":false,"id":366435,"user_name":"红军","can_delete":false,"product_type":"c3","uid":1088318,"ip_address":"广东","ucode":"FC6A9E74AB5933","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/3e/527771fc.jpg","comment_is_top":false,"comment_ctime":1673778419,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"有一个问题咨询一下，从老师讲解的PDF文件中copy内容，会报错。􀀁􀀂􀀃􀀄􀀅 􀀆􀀄 􀀇􀀈􀀉􀀄 􀀊􀀋􀀌􀀍􀀎􀀏\n􀀁􀀂􀀃􀀃􀀄􀀅􀀆 􀀇􀀈􀀉􀀊􀀋。\n这个能解决吗？ 不然手抄里面的内容，得要费时间","like_count":0},{"had_liked":false,"id":276448,"user_name":"Allan","can_delete":false,"product_type":"c3","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1611930929,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"1、sparkstreaming 延时性高一些，对于数据量比较大，延迟性不那么要求可以选择它；\n2、fink 真正的流计算框架 底层采用dataflow model 跟storm一样 低延迟 高吞吐 支持原生流处理就一条一条这样的处理\n3、我们在选择流计算框架时候要考虑 低延迟 高吞吐 准确性 易用性 那么flink恰恰做到了 所以这是我们选择它作为我们的流计算","like_count":0},{"had_liked":false,"id":265265,"user_name":"西南偏北","can_delete":false,"product_type":"c3","uid":1062864,"ip_address":"","ucode":"5815D63C4926BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/d0/26975fba.jpg","comment_is_top":false,"comment_ctime":1606834615,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100058801,"comment_content":"Dataflow model对应底层是什么？是队列吗？","like_count":0}]}