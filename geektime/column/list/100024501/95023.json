{"id":95023,"title":"28 | 怎么应对各种富文本表现需求？","content":"<p>你好，我是戴铭。今天，我要和你分享的主题是，在iOS开发中，如何展示富文本的内容。</p><p>在iOS开发中，富文本的展示是一个非常常见的需求。为了帮助你更好地了解如何展示富文本，我在今天这篇文章中，会结合一个项目来跟你说说面对富文本展示需求时，要怎么考虑和实现。这样，你在自己的项目中，也可以借鉴今天这样的实现思路和方法。</p><p>简单来说，富文本就是一段有属性的字符串，可以包含不同字体、不同字号、不同背景、不同颜色、不同字间距的文字，还可以设置段落、图文混排等等属性。</p><p>我以前做过一个 <a href=\"https://github.com/ming1016/GCDFetchFeed\">RSS 阅读器</a>，阅读器启动后，需要抓取最新的 RSS 内容进行展示。RSS 里面的文章内容属于富文本，是用HTML标签来描述的，包含了文字样式、链接和图片。</p><p>比如，RSS阅读器中的某篇文章内容如下：</p><pre><code>&lt;item&gt;\n&lt;title&gt;涉国资流失嫌疑 东方广益6亿元入股锤子科技被调查&lt;/title&gt;\n&lt;link&gt;https://www.cnbeta.com/articles/tech/841851.htm&lt;/link&gt;\n&lt;description&gt;\n&lt;![CDATA[\n&lt;p&gt;&lt;strong&gt;据虎嗅得到的独家消息，成都成华区监察委已立案调查“东方广益6亿元入股锤子科技（北京）股份有限公司”事宜，认为这个项目有国有资产流失嫌疑。&lt;/strong&gt;成华区监察委员会成立于2018年2月，按照管理权限对全区行使公权力的公职人员依法实行监察，履行监督、调查和处置职责。&lt;/p&gt; &lt;a href=&quot;https://www.cnbeta.com/articles/tech/841851.htm&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;阅读全文&lt;/strong&gt;&lt;/a&gt;\n]]&gt;\n&lt;/description&gt;\n&lt;author&gt;ugmbbc&lt;/author&gt;\n&lt;source&gt;cnBeta.COM&lt;/source&gt;\n&lt;pubDate&gt;Sat, 27 Apr 2019 09:46:45 GMT&lt;/pubDate&gt;\n&lt;guid&gt;https://www.cnbeta.com/articles/tech/841851.htm&lt;/guid&gt;\n&lt;/item&gt;\n</code></pre><p>文章的 HTML 代码就在上面 RSS 中的 description 标签里。解析出 RSS 中所有文章的 HTML 代码，并将它们保存到本地数据库中。</p><p>接下来，如何展示 HTML 内容呢？当时，我的第一反应就是使用 WebView 控件来展示。</p><h2>WebView</h2><p>使用 WebView 显示文章只需要创建一个 UIWebView 对象，进行一些基本滚动相关的设置，然后读取 HTML 字符串就可以了，具体实现代码如下：</p><!-- [[[read_end]]] --><pre><code>self.wbView = [[UIWebView alloc] init];\nself.wbView.delegate = self;\n[self.view addSubview:self.wbView];\n[self.wbView mas_makeConstraints:^(MASConstraintMaker *make) {\n    make.top.left.right.bottom.equalTo(self.view);\n}];\nself.wbView.scalesPageToFit = YES; // 确保网页的显示尺寸和屏幕大小相同\nself.wbView.scrollView.directionalLockEnabled = YES; // 只在一个方向滚动\nself.wbView.scrollView.showsHorizontalScrollIndicator = NO; // 不显示左右滑动\n[self.wbView setOpaque:NO]; // 默认是透明的\n\n// 读取文章 html 字符串进行展示\n[self.wbView loadHTMLString:articleString baseURL:nil];\n</code></pre><p>和 UIWebView 的 loadRequest 相比，UIWebView 通过 loadHTMLString 直接读取 HTML 代码，省去了网络请求的时间，展示的速度非常快。不过，HTML 里的图片资源还是需要通过网络请求来获取。所以，如果能够在文章展示之前就缓存下图片，那么无需等待，就能够快速完整地展示丰富的文章内容了。</p><p>那么，我应该使用什么方案来缓存文章中的图片呢？</p><p>在 Cocoa 层使用 NSURLProtocol 可以拦截所有 HTTP 的请求，因此我可以利用 NSURLProtocol 来缓存文章中的图片。</p><p>接下来，我再来和你说说，<strong>如何用我写的一个 Web 页面预加载库</strong> <a href=\"https://github.com/ming1016/GCDFetchFeed/blob/master/GCDFetchFeed/GCDFetchFeed/STMURLCache.m\"><strong>STMURLCache</strong></a><strong>来预缓存 HTML 里的图片。</strong>这个库你也可以应用到自己项目中。</p><p><strong>首先</strong>，我需要从数据库中取出所有未缓存图片的文章内容 HTML。实现代码如下：</p><pre><code>[[[[[SMDB shareInstance] selectAllUnCachedFeedItems] subscribeOn:[RACScheduler schedulerWithPriority:RACSchedulerPriorityDefault]] deliverOn:[RACScheduler mainThreadScheduler]] subscribeNext:^(NSMutableArray *x) {\n    // 在数据库中获取所有未缓存的文章数据 x\n    NSMutableArray *urls = [NSMutableArray array];\n    if (x.count &gt; 0) {\n        self.needCacheCount = x.count;\n        for (SMFeedItemModel *aModel in x) {\n            // 将文章数据中的正文内容都存在 urls 数组中\n            [urls addObject:aModel.des];\n        }\n    }\n    ...\n    \n}];\n</code></pre><p>如上面代码所示，在数据库中获取到所有未缓存文章的数据后，遍历所有数据，提取文章数据中的正文 HTML 内容保存到一个新的数组 urls 中。</p><p><strong>然后</strong>，使用 STMURLCache 开始依次预下载文章中的图片进行缓存。实现代码如下：</p><pre><code>[[STMURLCache create:^(STMURLCacheMk *mk) {\n    mk.whiteUserAgent(@&quot;gcdfetchfeed&quot;).diskCapacity(1000 * 1024 * 1024);\n}] preloadByWebViewWithHtmls:[NSArray arrayWithArray:urls]].delegate = self;\n</code></pre><p>STMURLCache 使用 preloadByWebViewWithHtmls 方法去预缓存所有图片，在 STMURLCache 初始化时，会设置 UserAgent 白名单，目的是避免额外缓存了其他不相关 UIWebView 的图片。</p><p>缓存图片的核心技术还是 NSURLProtocol，STMURLCache 最终也是使用 NSURLProtocol 来缓存图片的。NSURLProtocol 是一个抽象类，专门用来处理特定协议的 URL 数据加载。你可以使用自定义 URL 处理的方式，来重新定义系统 URL 加载。STMURLCache 缓存图片的具体实现代码，你可以在 <a href=\"https://github.com/ming1016/GCDFetchFeed/blob/master/GCDFetchFeed/GCDFetchFeed/STMURLProtocol.m\">STMURLProtocol</a>这个类里查看。</p><p>STMURLProtocol 会在所有网络请求的入口 canInitWithRequest 方法中加上过滤条件，比如 STMURLCache 在初始化时设置 UserAgent 白名单，过滤代码如下：</p><pre><code>// User-Agent来过滤\nif (sModel.whiteUserAgent.length &gt; 0) {\n    // 在 HTTP header 里取出 User Agent\n    NSString *uAgent = [request.allHTTPHeaderFields objectForKey:@&quot;User-Agent&quot;];\n    if (uAgent) {\n        // 不在白名单中返回 NO，不会进行缓存\n        if (![uAgent hasSuffix:sModel.whiteUserAgent]) {\n            return NO;\n        }\n    } else {\n        return NO;\n    }\n}\n</code></pre><p>UserAgent 白名单过滤会通过 request 的 allHTTPHeaderFields 获取到当前网络请求的 UserAgent，然后和已经设置的 UserAgent 白名单做比较：如果在白名单中就进行缓存；否则，就不会缓存。</p><p>STMURLProtocol 还可以根据域名进行过滤，这样可以灵活、精确地控制缓存范围。如果你设置了域名白名单，那么只有在白名单里的域名下的网络请求才会执行缓存，过滤代码如下：</p><pre><code>//对于域名白名单的过滤\nif (sModel.whiteListsHost.count &gt; 0) {\n    id isExist = [sModel.whiteListsHost objectForKey:request.URL.host];\n    // 如果当前请求的域名不在白名单中也会返回 NO\n    if (!isExist) {\n        return NO;\n    }\n}\n</code></pre><p>如代码所示，当前网络请求的域名可以通过 request.URL.host 属性获取到，获取到网络请求的域名后，再去看域名白名单里是否有，如果有就缓存，没有就返回 NO，不进行缓存操作。</p><p>在 canInitWithRequest 方法中满足缓存条件后，开始缓存的方法是 startLoading。startLoading 方法会判断已缓存和未缓存的情况，如果没有缓存会发起网络请求，将请求到的数据保存在本地。如果有缓存，则会直接从本地读取缓存，实现代码如下：</p><pre><code>// 从缓存里读取数据\nNSData *data = [NSData dataWithContentsOfFile:self.filePath];\nNSURLResponse *response = [[NSURLResponse alloc] initWithURL:self.request.URL MIMEType:[otherInfo objectForKey:@&quot;MIMEType&quot;] expectedContentLength:data.length textEncodingName:[otherInfo objectForKey:@&quot;textEncodingName&quot;]];\n\n[self.client URLProtocol:self didReceiveResponse:response cacheStoragePolicy:NSURLCacheStorageNotAllowed];\n\n// 使用 NSURLProtocolClient 的 URLProtocol:didLoadData 方法加载本地数据\n[self.client URLProtocol:self didLoadData:data];\n[self.client URLProtocolDidFinishLoading:self];\n</code></pre><p>如代码所示，STMURLProtocol 先通过缓存的路径获取到缓存的数据，再使用 NSURLProtocolClient 的 URLProtocol:didLoadData 方法加载本地缓存数据，以减少网络请求。</p><p>显示文章内容时使用 NSURLProtocol，对于那些已经缓存过图片的文章就不用发起图片的网络请求，显示的速度跟本地加载显示速度一样快。</p><p>虽然通过 URLProtocol 重新定义系统 URL 加载的方式，来直接读取预缓存提升了加载速度，但在长列表的 Cell 上展示富文本，就需要性能更高、内存占用更小的方法。那么接下来，我们再看看除了 UIWebView 还有没有什么方法可以展示富文本呢？</p><p>当然还有了。</p><p>在长列表这种场景下，如果不用 HTML 来描述富文本的话，想要使用原生 iOS 代码来描述富文本的话，你还可以使用苹果官方的<a href=\"https://developer.apple.com/documentation/appkit/textkit\">TextKit</a>和 <a href=\"https://github.com/ibireme/YYText\">YYText</a>来展示。</p><p>其中，YYText 不仅兼容 UILabel 和 UITextView，在异步文字布局和渲染上的性能也非常好。所以接下来，我们就一起看看 YYText是如何展示富文本的吧。</p><h2>YYText</h2><p>集成 YYText 到你的App非常简单，只需要在 Podfile 中添加 pod ‘YYText’ 就可以了。下面代码展示了如何展示图文混排的富文本：</p><pre><code>NSMutableAttributedString *text = [NSMutableAttributedString new];\nUIFont *font = [UIFont systemFontOfSize:16];\nNSMutableAttributedString *attachment = nil;\n  \n// 嵌入 UIImage\nUIImage *image = [UIImage imageNamed:@&quot;dribbble64_imageio&quot;];\nattachment = [NSMutableAttributedString yy_attachmentStringWithContent:image contentMode:UIViewContentModeCenter attachmentSize:image.size alignToFont:font alignment:YYTextVerticalAlignmentCenter];\n[text appendAttributedString: attachment];\n  \n// 嵌入 UIView\nUISwitch *switcher = [UISwitch new];\n[switcher sizeToFit];\nattachment = [NSMutableAttributedString yy_attachmentStringWithContent:switcher contentMode:UIViewContentModeBottom attachmentSize:switcher.size alignToFont:font alignment:YYTextVerticalAlignmentCenter];\n[text appendAttributedString: attachment];\n  \n// 嵌入 CALayer\nCASharpLayer *layer = [CASharpLayer layer];\nlayer.path = ...\nattachment = [NSMutableAttributedString yy_attachmentStringWithContent:layer contentMode:UIViewContentModeBottom attachmentSize:switcher.size alignToFont:font alignment:YYTextVerticalAlignmentCenter];\n[text appendAttributedString: attachment];\n\n</code></pre><p>如代码所示，YYText 对于富文本的图文混排使用的是自定义的 NSMutableAttributedString 分类，自定义分类不光简化了 NSMutableAttributedString，还增加了功能，除了图片外，可以嵌入 UIView 和 CALayer。</p><p>通过上面 YYText 描述富文本的代码，你会发现原生代码描述富文本跟 HTML 比，既复杂又啰嗦。HTML 代码更易读、更容易维护，所以除了长列表外，我建议你都使用 HTML 来描述富文本。</p><p>对于 UIWebView 内存占用高的问题，你可以考虑使用 HTML 代码转原生代码的思路解决。比如，你可以参考我以前做的将 HTML 代码转原生代码的示例项目 <a href=\"https://github.com/ming1016/HTN\">HTN</a>里的解决思路。</p><h2>小结</h2><p>今天我跟你介绍了如何通过 UIWebView 和 YYText 来展示富文本。</p><p>UIWebView 展示的是使用 HTML 描述的富文本。HTML 是描述富文本最简单和最常用的方式，相对于 YYText 或 TextKit 那样描述富文本的方式来说，更加简洁和标准。不过，UIWebView 的缺点也比较明显，同时创建多个 UIWebView 实例，对于内存的占用会非常大。</p><p>所以，我对于富文本展示的建议是，如果是列表展示富文本建议使用 TextKit 或者 YYText，其他情况可以选择使用 UIWebView 来展示富文本。</p><h2>课后作业</h2><p>使用 <a href=\"https://github.com/ming1016/GCDFetchFeed/blob/master/GCDFetchFeed/GCDFetchFeed/STMURLCache.m\">STMURLCache</a>预加载你工程中的一个 Web 页面，看看打开速度提升了多少，预加载成功后，在弱网环境和无网络的环境都可以试试。</p><p>感谢你的收听，欢迎你在评论区给我留言分享你的观点，也欢迎把它分享给更多的朋友一起阅读。</p><p></p>","comments":[{"had_liked":false,"id":94396,"user_name":"哈","can_delete":false,"product_type":"c1","uid":1453904,"ip_address":"","ucode":"3F46ADFFBC94CE","user_header":"https://static001.geekbang.org/account/avatar/00/16/2f/50/b46a9b6a.jpg","comment_is_top":false,"comment_ctime":1557800560,"is_pvip":false,"replies":[{"id":"35017","content":"WKWebView 思路类似，使用WKURLSchemeHandler就行","user_name":"作者回复","user_name_real":"戴铭","uid":"1140280","ctime":1558851496,"ip_address":"","comment_id":94396,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57392375408","product_id":100024501,"comment_content":"WKWebView不好实现这种效果吗？UIWebView已经被苹果淘汰了啊","like_count":14,"discussions":[{"author":{"id":1140280,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/38/f9999b2b.jpg","nickname":"戴铭","note":"","ucode":"D61E685F962387","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450048,"discussion_content":"WKWebView 思路类似，使用WKURLSchemeHandler就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558851496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96025,"user_name":"熊","can_delete":false,"product_type":"c1","uid":1406020,"ip_address":"","ucode":"C794160A03DD8B","user_header":"https://static001.geekbang.org/account/avatar/00/15/74/44/6d80dc8b.jpg","comment_is_top":false,"comment_ctime":1558313586,"is_pvip":false,"replies":[{"id":"35011","content":"wk 的话，可以了解下 -[WKWebViewConfiguration setURLSchemeHandler:forURLScheme:]","user_name":"作者回复","user_name_real":"戴铭","uid":"1140280","ctime":1558847555,"ip_address":"","comment_id":96025,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14443215474","product_id":100024501,"comment_content":"wk的NSURLProtol支持不太好，用了网上的一些方案，会导致一些奇怪的问题…。很蛋疼。现在需求里面的ajax请求都不好去拦截","like_count":4,"discussions":[{"author":{"id":1140280,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/38/f9999b2b.jpg","nickname":"戴铭","note":"","ucode":"D61E685F962387","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450682,"discussion_content":"wk 的话，可以了解下 -[WKWebViewConfiguration setURLSchemeHandler:forURLScheme:]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558847555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94385,"user_name":"Happy_Home","can_delete":false,"product_type":"c1","uid":1454030,"ip_address":"","ucode":"E09B1C4D533809","user_header":"https://static001.geekbang.org/account/avatar/00/16/2f/ce/202cf0a3.jpg","comment_is_top":false,"comment_ctime":1557798547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442700435","product_id":100024501,"comment_content":"老师，想问一下，你的那个阅读器项目貌似也导入了DTCoreText，可是整个项目中好像并没有运用到，DTCoreText好像也是可以直接将HTML字符串转化为富文本，是出于什么原因没有使用而选择UIWebView的呢","like_count":3},{"had_liked":false,"id":94362,"user_name":"Ace","can_delete":false,"product_type":"c1","uid":1010490,"ip_address":"","ucode":"D3B779A0E8264E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/3a/38de3fc4.jpg","comment_is_top":false,"comment_ctime":1557796089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442697977","product_id":100024501,"comment_content":"YYKit的想法和方案确实不错，不过曾经在实践的时候，遇到某些不是很常见的语言里面的字符部分渲染不出来。。。不知道大家有没有遇到过，这个问题一直没有解决，后面就放弃使用YYkit了。","like_count":3},{"had_liked":false,"id":94867,"user_name":"Ant","can_delete":false,"product_type":"c1","uid":1079563,"ip_address":"","ucode":"07E6374F91F61E","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/0b/4346a253.jpg","comment_is_top":false,"comment_ctime":1557913537,"is_pvip":false,"replies":[{"id":"35014","content":"可以用 WKWebView，思路类似，实现上用 WKURLSchemeHandler","user_name":"作者回复","user_name_real":"戴铭","uid":"1140280","ctime":1558851050,"ip_address":"","comment_id":94867,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147848129","product_id":100024501,"comment_content":"同问为啥不用 WKWebView<br>","like_count":2,"discussions":[{"author":{"id":1140280,"avatar":"https://static001.geekbang.org/account/avatar/00/11/66/38/f9999b2b.jpg","nickname":"戴铭","note":"","ucode":"D61E685F962387","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450238,"discussion_content":"可以用 WKWebView，思路类似，实现上用 WKURLSchemeHandler","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558851050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94751,"user_name":"Geek_e1d503","can_delete":false,"product_type":"c1","uid":1459864,"ip_address":"","ucode":"5670711B17AB0B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIOThWTmnhVX65gbpDVUJicQ1GO5YscfIiaLNicyNPz4eHDz1GwWlteJxRovgyjcfNwiaqFtic8Oibkat9g/132","comment_is_top":false,"comment_ctime":1557889070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10147823662","product_id":100024501,"comment_content":"能否有一堂苹果审核的课，梳理常见被拒原因？","like_count":2},{"had_liked":false,"id":94717,"user_name":"谭鹏","can_delete":false,"product_type":"c1","uid":1142009,"ip_address":"","ucode":"4A8120C4AA6F2F","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/f9/af80b4da.jpg","comment_is_top":false,"comment_ctime":1557884808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10147819400","product_id":100024501,"comment_content":"YYKit 里面的 封装runloop 和GCD的部分 非常好用","like_count":2},{"had_liked":false,"id":94920,"user_name":"Tristan","can_delete":false,"product_type":"c1","uid":1456669,"ip_address":"","ucode":"A9AF47D0B8FC08","user_header":"https://static001.geekbang.org/account/avatar/00/16/3a/1d/508fe169.jpg","comment_is_top":false,"comment_ctime":1557923705,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5852891001","product_id":100024501,"comment_content":" NSMutableAttributedString * attrStr = [[NSMutableAttributedString alloc] initWithData:[htmlString dataUsingEncoding:NSUnicodeStringEncoding] options:@{ NSDocumentTypeDocumentAttribute: NSHTMLTextDocumentType } documentAttributes:nil error:nil];","like_count":1,"discussions":[{"author":{"id":1823275,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/d2/2b/7a93d588.jpg","nickname":"低调的魅力","note":"","ucode":"AE5CA2986B5A95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347005,"discussion_content":"性能太差，显示效果也不理想","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612141384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1472809,"avatar":"https://static001.geekbang.org/account/avatar/00/16/79/29/c8cd0399.jpg","nickname":"鲁志刚","note":"","ucode":"8E0A9DAE5E22D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4713,"discussion_content":"如果网页加载需要十秒，主线程就会被卡十秒，这方法有点坑人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565682959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94371,"user_name":"吹啊吹吹","can_delete":false,"product_type":"c1","uid":1455385,"ip_address":"","ucode":"FFB7D85C26145B","user_header":"https://static001.geekbang.org/account/avatar/00/16/35/19/4f9dc4b5.jpg","comment_is_top":false,"comment_ctime":1557797493,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852764789","product_id":100024501,"comment_content":"铭哥，github上STMURLCache的引用的文件有点多啊，需要全部使用？","like_count":1},{"had_liked":false,"id":122319,"user_name":"Sun0010","can_delete":false,"product_type":"c1","uid":1263832,"ip_address":"","ucode":"92B35625DCEB9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/48/d8/51ab657d.jpg","comment_is_top":false,"comment_ctime":1565338101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565338101","product_id":100024501,"comment_content":"- (NSCachedURLResponse *)localCacheResponeWithRequest:(NSURLRequest *)request<br>if (isExist == nil) {<br>            [self.responseDic setValue:[NSNumber numberWithBool:TRUE] forKey:request.URL.absoluteString];<br>            NSURLSession *session = [NSURLSession sharedSession];<br>            NSURLSessionDataTask *task = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {<br>                if (error) {<br>                    cachedResponse = nil;<br>                } else {<br>                    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:[NSString stringWithFormat:@&quot;%f&quot;,[date timeIntervalSince1970]],@&quot;time&quot;,response.MIMEType,@&quot;MIMEType&quot;,response.textEncodingName,@&quot;textEncodingName&quot;, nil];<br>                    BOOL resultO = [dic writeToFile:otherInfoPath atomically:YES];<br>                    BOOL result = [data writeToFile:filePath atomically:YES];<br>                    if (resultO == NO || result == NO) {<br>                    } else {<br>                    }<br>                    cachedResponse = [[NSCachedURLResponse alloc] initWithResponse:response data:data];<br>                }<br>            }];<br>            [task resume];<br>            return cachedResponse;<br>        }<br>        return nil;<br><br><br>因为 [session dataTaskWithRequest:request completionHandler:^]是异步请求，所以 cachedResponse = [[NSCachedURLResponse alloc] initWithResponse:response data:data]; 其实是没什么效果?<br>","like_count":0},{"had_liked":false,"id":110316,"user_name":"findU","can_delete":false,"product_type":"c1","uid":1471551,"ip_address":"","ucode":"B3F26ED4E5A29D","user_header":"https://static001.geekbang.org/account/avatar/00/16/74/3f/52fa1e72.jpg","comment_is_top":false,"comment_ctime":1562229019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562229019","product_id":100024501,"comment_content":"老师，WKURLSchemeHandler是再11.0之后才支持的API，而且如果用WK使用NSURLProtocol做静态资源缓存的话需要处理苹果的私有API（存在一定的被拒风险）。","like_count":0},{"had_liked":false,"id":101349,"user_name":"tomcat","can_delete":false,"product_type":"c1","uid":1133556,"ip_address":"","ucode":"A7CE9FEE5E03CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/4b/f4/de7809c1.jpg","comment_is_top":false,"comment_ctime":1559786370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559786370","product_id":100024501,"comment_content":"一个自定义的NSURLProtocol处理一种事情，如果想拦截一个网络请求，然后经过层层自定义NSURLProtocol，功耗和效率有比较大的影响吗？","like_count":0},{"had_liked":false,"id":98887,"user_name":"xilie","can_delete":false,"product_type":"c1","uid":1013805,"ip_address":"","ucode":"AFCC4E157F7830","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJVegfjqa0gM4hcRrBhZkIf7Uc5oeTMYsg6o5pd76IQlUoIIh2ic6P22xVEFtRnAzjyLtiaPVstkKug/132","comment_is_top":false,"comment_ctime":1559113198,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1559113198","product_id":100024501,"comment_content":"长列表 FPS 性能优化的问题，看到都 9102 年了，还好多文章介绍计算高度并缓存的方案，Self-Sizing 还没普及吗？大家都还手动算的吗？性能更好？","like_count":1,"discussions":[{"author":{"id":1471551,"avatar":"https://static001.geekbang.org/account/avatar/00/16/74/3f/52fa1e72.jpg","nickname":"findU","note":"","ucode":"B3F26ED4E5A29D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1002,"discussion_content":"计算高度缓存的方案文章都是各种抄以前的老（过时）文章。发现现在网络上现在充斥着大量低质量博文（所以搜问题千万别上百度，😂），如果自己没有很好的基础的话很容易被带进沟里。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562229354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1471617,"avatar":"https://static001.geekbang.org/account/avatar/00/16/74/81/b54fd36e.jpg","nickname":"序","note":"","ucode":"690822796EAF36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410702,"discussion_content":"计算高度并缓存我亲测感觉比self-sizing性能高啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635760417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98885,"user_name":"xilie","can_delete":false,"product_type":"c1","uid":1013805,"ip_address":"","ucode":"AFCC4E157F7830","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJVegfjqa0gM4hcRrBhZkIf7Uc5oeTMYsg6o5pd76IQlUoIIh2ic6P22xVEFtRnAzjyLtiaPVstkKug/132","comment_is_top":false,"comment_ctime":1559112979,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1559112979","product_id":100024501,"comment_content":"看了下 Github YYText 的代码是 3 年前的，几百个没关的 issues，没维护了吗？这个库还适合现在用吗？","like_count":0,"discussions":[{"author":{"id":1471551,"avatar":"https://static001.geekbang.org/account/avatar/00/16/74/3f/52fa1e72.jpg","nickname":"findU","note":"","ucode":"B3F26ED4E5A29D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1000,"discussion_content":"这个库好像不维护了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562229057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94383,"user_name":"淡","can_delete":false,"product_type":"c1","uid":1456392,"ip_address":"","ucode":"6856CA319DE2F0","user_header":"https://static001.geekbang.org/account/avatar/00/16/39/08/09055b47.jpg","comment_is_top":false,"comment_ctime":1557798381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557798381","product_id":100024501,"comment_content":"我想问下关于富文本里包含&lt;img scr=&#39;http:xxx&#39;&gt; 这种该怎么处理呢，尤其是在长列表里","like_count":0}]}