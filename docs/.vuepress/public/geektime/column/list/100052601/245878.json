{"id":245878,"title":"09 | 语言的接口：语法和程序库，软件设计的发力点","content":"<p>你好！我是郑晔。</p><p>在上一讲中，我们学习了程序设计语言模型的演变过程。学习不同的程序设计语言，实质上就是学习不同的编程模型。谈完了模型，接下来，就该说说接口了。</p><p>这一讲，我们就来谈谈程序设计语言的接口，一说起程序设计语言的接口，你的直观印象肯定是程序设计语言的语法，那是一个你已经很熟悉的话题了，但程序设计语言还有一个你可能都不曾留意的接口：程序库。</p><p>如果你已经能够完成基本功能的开发，想让自己在编程水平上再进一步，成为一个更好的程序员，你就可以从封装程序库开始练习。因为想封装出一个好的程序库所需的能力，就是软件设计所需的能力。封装程序库，可以成为你软件设计进阶的发力点。</p><h2>消除重复的程序库</h2><p>我们写程序的时候，只要规模稍微大一点，你就会发现同样的模式经常出现，差别无非是几个地方的参数不一样，这就是重复。</p><p>最开始的重复是指令级别的重复，程序员们会把同样的指令序列放到一起，通过传入不同的参数进行识别。你发现了吗？我说的就是函数。函数已经成了今天的主流编程方式，是几乎所有的程序设计语言都有的基础设施，人们甚至忘了它的由来。</p><p>写程序的一项主要日常工作就是定义各种函数。一旦你定义了大量的函数，就会发现有很多函数不仅仅在某个项目中是适用的，而且在很多项目中都是适用的。这时，作为一个“懒惰”的程序员，我们就会把这些在多个项目中使用的部分抽取出来，组成一个模块，这就是程序库的来源。</p><!-- [[[read_end]]] --><p>所以，程序库就是为了消除重复而出现的。而消除重复，也是软件设计的初衷。</p><p>程序库（Library）是程序员最熟悉的一项内容。学习一门新语言，首先是学习语法（Syntax），然后学习程序库（Library），之后再学习运行时（Runtime），这样，你就具备一门语言的基础了。再往后，你需要了解的就是各种惯用法（Idiom），以及如何运用到实际的工作中。</p><p>有一些程序库实在是太常用了，它们就会随着语言一起发布，成为标准库。比如，程序员熟知的第一个程序“Hello, world”的做法来自《C程序设计语言》，其中用到的printf就是来自C的标准库。再比如，Java程序员无人不知的JDK，里面包含了大量的程序库，一个Java程序员如果不能说出几个容器，简直就不好意思和人打招呼。</p><p>当然，如果在实际工作中只使用标准库，有些代码写起来还是非常麻烦的。因为标准库提供的能力通常是很基础的。这时，我们就需要利用更多的第三方程序库，它们给提供了更丰富的选项，去完善标准库做得不够的地方。</p><p>也就是说，它们会在标准库的基础上，再做一次封装，提供一个新的编程模型，或是新的接口，甚至修正一些标准库的bug，让开发变得更简单。只要是人气足够的语言，在这个方面做得都非常好，它们会提供大量的第三方库。</p><p>正是因为第三方库的兴起，<strong>怎样管理第三方库</strong>就成了一个问题。今天，这已经成了一个标准的问题，也有了标准的解决方案，那就是<strong>包管理器</strong>。很多语言都有了自己的包管理器，像Java的Maven、Node的NPM、Ruby的RubyGems等等，而像Rust这样年轻的语言，包管理器甚至变成了随语言的发行包一起发布的一项内容。</p><h2>语言设计就是程序库设计</h2><h3>new</h3><p>虽然程序库受限于特定的程序语言，但其表达的思想却不受语言限制。我给你举个例子，在软件开发中，我们最常做的一个操作就是初始化。如果采用C这样比较早期的语言，通常的做法就是，分配一块内存，然后给这块内存赋值，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/65/37/659ef6ccbf186611e5ebe07618d5f237.jpeg?wh=2284*1285\" alt=\"\"></p><p>类似的代码会反复出现，成为一个固定的模式。</p><p>而一些新的语言索性就将二者合二为一，成了一个固定的语法，这就是很多人熟悉的new。无论是C++程序员，还是Java程序员，对new一定不陌生。</p><p>当我们调用new时会发生什么呢？首先，它会申请一块内存，然后调用对应类的构造函数。类也好，构造函数也罢，这些内容都是C语言没有的，但这个初始化的模式与C语言是如出一辙的。</p><p>只不过，在C语言里面，这个操作通常是通过程序库实现的，而到了C++和Java中，它成了语法。一旦变成了语法，它就成了语言的一部分，成为了一个特定的模型。</p><p>对于使用者而言，这个模型就是一个接口，只要接口的行为不变，我的代码就不用变。</p><p>但对于接口另一面的实现者而言，它就可以做一些特定的工作了。比如，插入不同的内存分配算法，这就是C++的allocator所做的事情；再比如，把内存完全管控起来，这就是Java做的事情。没错，Java之所以能够让程序员忽略内存管理，new功不可没。</p><p>一个经过验证的模式最终变成了语言的一部分，而它的起点只是一个常见的用法：一个程序库。</p><h3>synchronized</h3><p>我再用Java中的synchronized给你举个例子。我们都知道，并发编程是程序员的一门必修课。学习并发编程，一方面要学习各种概念，比如“锁”；另一方面还要学习不同语言相应的程序库。因为这些概念太常用了。所以，Java干脆把它变成了一个语法，也就是synchronized。</p><p>成为语法固然是一个巨大的进步，但是在一些场景下，语法反而会显得僵化。这时候，又轮到程序库登场了。我还以前面所说的new和synchronized为例给你讲解一下。</p><h2>程序库设计就是语言设计</h2><h3>new</h3><p>new虽然帮我们解决了一些问题，但与new配合使用的构造函数往往有一个致命伤，那就是它只有一个名字，也就是类的名字。</p><p>当我们需要表达多种不同的构造逻辑时，各村就出现了各村的高招。我曾经见过有人利用重载（overload）来解决问题的，不同的构造逻辑用不同类型的参数。比如，一个用HashMap，一个用TreeMap。作为一个新加入项目的程序员，你很难想到这是两种不同的构造逻辑，它们与这里不同类型的数据结构其实一点关系都没有。</p><p>一个更好的解决方案是利用<strong>工厂模式</strong>解决这个问题，也就是说，用一个名字更能表意的函数，代替构造函数作为构造入口。</p><p>还是以Java为例，ArrayList是Java程序员很熟悉的一个数据结构。如果我要创建一个包含两个元素的ArrayList，同时，还要创建一个初始容量为10的ArrayList。用JDK原生的做法，我可以这么做：</p><pre><code>// 创建有两个元素的数组\nArrayList&lt;String&gt; listWithElements = new ArrayList();\nlistWithElements.add(&quot;foo&quot;);\nlistWithElements.add(&quot;bar&quot;);\n</code></pre><pre><code>// 创建一个初始容量为10的数组。\nArrayList&lt;String&gt; listWithCapacity = new ArrayList(10);\n</code></pre><p>这种做法可行，但代码表意并不清晰。那有没有更好的做法呢？Google的Guava程序库，对于同样的场景，给出了一个不同的做法：</p><pre><code>ArrayList&lt;String&gt; listWithElements = newArrayList(&quot;foo&quot;, &quot;bar&quot;);\nArrayList&lt;String&gt; listWithCapacity = newArrayListWithCapacity(10);\n</code></pre><p>显然，从语义上来说，这种做法更清晰。Java领域的行业名著《Effective Java》（第三版）的第一个条款是“用静态工厂方法代替构造函数”，讨论的就是这种做法。</p><h3>synchronized</h3><p>再来看synchronized。它虽然解决了一部分并发的问题，但是，这个解决问题的方式粒度太大了。程序员只要稍微深入一些，就会感到synchronized的掣肘。于是，Java的开发者在Java 5中开始了新一轮的编程模型探索，这次探索的成果就是后来的并发编程库。这也为面试官们提供了新的素材。</p><p>你看到了吧，解决同一个问题，它可以用一个语法，也可以用一个程序库，二者之间是等价的。</p><p>Andrew Koenig和Barbara Moo写过一本书《C++沉思录》，书里记录了C++早期开发者在设计各种C++特性时的思考，这是一本编程思想之作。当年读这本书时，有两章的标题让我陷入了沉思，分别是<strong>“语言设计就是程序库设计”和“程序库设计就是语言设计”</strong>。</p><p>通过今天的学习，这两句话对你来说就不难理解了。因为语法和程序库是在解决同一个问题，二者之间是相互促进的关系。通常是先有程序库，再有语法；如果语法不够好，新的程序库就会出现，新一轮的编程模型就开始孵化。</p><p>一切有生命力的语言都会不断改善自己的语法，某些好用的程序库就可以转正成为语法。比如，Java引入Lambda，支持函数式编程；C++引入类型推演，简化了代码编写。</p><p>同样地，程序库的发展也在推动着语言的不断进步，有一部分语法就是为了让程序库表现得更好而存在的。比如说：</p><ul>\n<li>C里面的宏，虽然很多人用它来定义常量，但只有编写程序库才能让它更好地发挥出自身的价值；</li>\n<li>Java中的Annotation，很多人都在用，但用它做过设计的人却很少，因为它的使用场景是以程序库居多；</li>\n<li>Scala中的隐式转换，如果你没有设计过DSL，很可能根本就不知道它有什么具体的作用。</li>\n</ul><p>至此，你已经能够理解程序设计语言的接口不只包含语法，还有程序库。而且，学习一种程序设计语言提供的模型时，不仅仅要看语法本身有什么，还要了解有语言特性的一些程序库。</p><p>所以，对于程序员而言，想要自己的编程水平上一个台阶，学习编写程序库是一个很好的路径。一方面，我们可以锻炼自己从日常工作中寻找重复；另一方面，我们可以更好地理解程序设计语言提供的能力。</p><h2>总结时刻</h2><p>今天，我们的学习主题是程序库，程序库最初只是为了消除重复。后来，逐渐有了标准库，然后有了大量的第三方库，进而发展出包管理器。</p><p>如果通用性足够好，一些经过大量实践验证过的程序库甚至会变成语言的语法，而一些语法解决得不够好的地方，又会出现新的程序库去探索新的解决方案。所以，<strong>语言设计就是程序库设计，程序库设计就是语言设计</strong>。二者相互促进，不断发展。</p><p>当你开始学习如何编写程序库，你对软件设计的理解就会踏上一个新的台阶。</p><p>我们说过，学习不同程序设计语言一个重要的原因是为了相互借鉴。理解了模型和接口，你就知道该借鉴什么，但具体如何借鉴呢？我们还需要了解这些模型是如何实现的，所以下一讲，我们就来谈谈程序设计语言的实现。</p><p>如果今天的内容你只能记住一件事，那请记住：<strong>提升软件设计能力，可以从编写程序库入手。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/91/d0/910d852b08bc45f94acb879cf3080cd0.jpeg?wh=2284*785\" alt=\"\"></p><h2>思考题</h2><p>今天我们讲到了程序库和语法之间的互相促进，最后，我想请你分享一下，你还能找出哪些语法和程序库互相促进的例子呢？欢迎在留言区分享你的想法。</p><p>感谢阅读，如果你觉得这一讲的内容对你有帮助的话，也欢迎把它分享给你的朋友。</p>","neighbors":{"left":{"article_title":"08 | 语言的模型：如何打破单一语言局限，让设计更好地落地？","id":245868},"right":{"article_title":"10 | 语言的实现：运行时，软件设计的地基","id":245888}},"comments":[{"had_liked":false,"id":226288,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1592023375,"is_pvip":true,"replies":[{"id":"83344","content":"非常好的补充，后面讲到设计模式，我也会提到类似的观点。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592046762,"ip_address":"","comment_id":226288,"utype":1}],"discussion_count":1,"race_medal":0,"score":"100376271183","product_id":100052601,"comment_content":"想到两个观点：<br><br>1. “设计模式是缺失的语言特性”。比如在函数是一等公民的语言中，至少有半打的设计模式是不需要的。<br>2. “所有非平凡的抽象(abstraction)在某种程度上都是有漏洞的(leaky)”。封装的程序库只能工作在某个抽象层次上，总会遇到无法在该抽象层次上解决的问题，此时只能绕过这层抽象从更低的抽象层次上解决。","like_count":24,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498178,"discussion_content":"非常好的补充，后面讲到设计模式，我也会提到类似的观点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592046762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225932,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1591896110,"is_pvip":false,"replies":[{"id":"83351","content":"可能是我的偏见，国人的开源项目代码质量高的不多，除非这个项目有大量的老外参与，或者作者之前在外企工作。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592047228,"ip_address":"","comment_id":225932,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70311372846","product_id":100052601,"comment_content":"1. 《Effective Java》是本好书，需要尽早一读。<br>2.今天记住的是这句话。语言设计就是程序库设计，程序库设计就是语言设计。眼前一亮的感觉。<br>3.程序库和语言都属于加法容易，减法难的范畴。除了抽象去重外，其实更重要的是识别什么不该做，以及如何设计向后兼容，易扩展的代码结构。<br><br>4.事实上，很多程序库，为了保证灵活，性能，向后兼容，功能全面。内部代码量会比较大。如果提高设计能力，起步就是程序库，感觉会比较吃力。（写过公共工具包，为此看了hutool和guava等的源码，前者散乱后者优雅，但都不好啃）。在有一定认知后，才能看出一些端倪。<br>所以，起步的话，把《重构-既有代码改善》看了，内容简单易懂。然后在项目中持续重构自己的代码，跟自己较真，多思考。每次重构都是在重审自己对设计的理解，循序渐进。","like_count":17,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498048,"discussion_content":"可能是我的偏见，国人的开源项目代码质量高的不多，除非这个项目有大量的老外参与，或者作者之前在外企工作。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592047228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226250,"user_name":"yudidi","can_delete":false,"product_type":"c1","uid":1202482,"ip_address":"","ucode":"70283DE39D86F5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ydFhHonicUQibGlAfsAYBibNOfSxpCG5cJNp9oRibTJm3TrxM7Hj4WPPCRE3vluZJb0TGQqpKCaBWLdmra5Su1KF5Q/132","comment_is_top":false,"comment_ctime":1592016819,"is_pvip":false,"replies":[{"id":"83534","content":"SpringMVC从模型上确实简单一些，但它胜出依赖的是Spring，或者说作者的整体品味。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592214627,"ip_address":"","comment_id":226250,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27361820595","product_id":100052601,"comment_content":"我看到文中这句话时:&quot;它们会在标准库的基础上，再做一次封装，提供一个新的编程模型&quot;，<br>第一反映想到了这篇博客https:&#47;&#47;www.iteye.com&#47;blog&#47;downpour-1330537, 其中也提到&quot;编程模型&quot;这个词汇。做过java开发的同学, 建议看看, 非常有助于理解老师的这节课。<br>我的理解: 在标准库jdk的基础上，struct和springmvc再做了封装，提供了2种新的编程模型，最后springmvc的编程模型胜出。<br>","like_count":7,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498165,"discussion_content":"SpringMVC从模型上确实简单一些，但它胜出依赖的是Spring，或者说作者的整体品味。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592214627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283931,"discussion_content":"这个是一系列的文章啊，楼主是推荐全部文章还是只是第一篇？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592401440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1202482,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ydFhHonicUQibGlAfsAYBibNOfSxpCG5cJNp9oRibTJm3TrxM7Hj4WPPCRE3vluZJb0TGQqpKCaBWLdmra5Su1KF5Q/132","nickname":"yudidi","note":"","ucode":"70283DE39D86F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":284698,"discussion_content":"就这一篇，我主要是想补充对编程模型这一概念的实例理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592588253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":283931,"ip_address":""},"score":284698,"extra":""}]}]},{"had_liked":false,"id":226930,"user_name":"happychap","can_delete":false,"product_type":"c1","uid":1388033,"ip_address":"","ucode":"C872B959BF2F3D","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/01/14a478bb.jpg","comment_is_top":false,"comment_ctime":1592230732,"is_pvip":true,"replies":[{"id":"83654","content":"非常好的补充！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592290934,"ip_address":"","comment_id":226930,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14477132620","product_id":100052601,"comment_content":"一言不合就开车，一码不便就撸库。确实在语言发展历程上，每门好的语言都有其精华，目的还是在用不同的编程哲学适应不同的应用场景。用golang的伙伴会得意于编译出的程序内存占用少，goroutin如何方便，函数支持多返回值是多么的优雅，而用java的伙伴则乐于能用到泛型、重载、多态等特性，能用到spring等等功能异常强大的框架。编程知识大爆炸的年代，语言小巧够用感觉更环保些ʘᴗʘ","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498420,"discussion_content":"非常好的补充！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592290934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227632,"user_name":"westfall","can_delete":false,"product_type":"c1","uid":1632773,"ip_address":"","ucode":"F3F5CB7DF695FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/05/b164dc15.jpg","comment_is_top":false,"comment_ctime":1592445292,"is_pvip":false,"replies":[{"id":"83885","content":"异步处理的发展也经过了一个很有趣的发展过程，从最开始的写进程线程，到后面的 promise&#47;future，到现在的响应式编程。演化还还有结束，还有很多的东西正在进行中。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592446255,"ip_address":"","comment_id":227632,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10182379884","product_id":100052601,"comment_content":"js 里的 promise，最早是社区弄出来的，最后却成了 js 语言的一部分","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498726,"discussion_content":"异步处理的发展也经过了一个很有趣的发展过程，从最开始的写进程线程，到后面的 promise/future，到现在的响应式编程。演化还还有结束，还有很多的东西正在进行中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592446255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225977,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1046920,"ip_address":"","ucode":"79F73D85EDF3E2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/88/cdda9e6f.jpg","comment_is_top":false,"comment_ctime":1591922680,"is_pvip":false,"replies":[{"id":"83350","content":"很好的总结！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592047048,"ip_address":"","comment_id":225977,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10181857272","product_id":100052601,"comment_content":"程序语言的接口是程序库。我们可以通过学习和开发程序库来提高自己的程序设计能力。<br>程序库的开发是为了消除重复。经常遇到的编程模型和重复的功能逻辑都封装成程序库，可以提升编码效率和体验。<br>除了使用语言提供的标准程序库还需要理解其它常用的第三方程序库，这些库也是解决某种问题而存在，也是对标准库以及其它三方库的封装。<br>很多语言使用包管理器工具管理这些常用库（这也是一个解决问题的模型）<br>语言设计和程序设计是相互促进、相互影响的。<br>好的编程模型会被整合进语法糖成为语言设计的一部分，而好的语言接口也影响程序设计的模型<br>","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498065,"discussion_content":"很好的总结！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592047048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322426,"user_name":"奇小易","can_delete":false,"product_type":"c1","uid":1171151,"ip_address":"","ucode":"E06B4DFB5352BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/cf/ef2e0501.jpg","comment_is_top":false,"comment_ctime":1637380592,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5932347888","product_id":100052601,"comment_content":"语法（关键字）本身就是某个模型的接口，语法（关键字）的实现就是该模型的实现，这个语法（关键字）实现所解决的问题以及实现逻辑就是该模型。<br><br>也就是可以通过学习关键字的实现来学习语言所提供的编程模型。<br>学习使用关键字的语法来学习该模型提供的接口。<br>最终贯穿整个编程语言的学习，切入点就是关键字是如何实现的。更广泛一点就是语法糖是如何实现的。<br><br>例如：<br>java中的new关键字是模型所提供的接口（接口）。通过查看jvm指令可以知道new关键字的实现逻辑（实现）。<br>new关键字的实现逻辑是申请内存空间，调用初始化方法，这个流程抽象得更通用一些就是所谓的模型。（模型）","like_count":2},{"had_liked":false,"id":313893,"user_name":"Bravery168","can_delete":false,"product_type":"c1","uid":1232973,"ip_address":"","ucode":"DB08AEFBD6DF2B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/4d/2116c1a4.jpg","comment_is_top":false,"comment_ctime":1632729980,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5927697276","product_id":100052601,"comment_content":"语言设计就是程序库设计，程序库设计就是语言设计。<br>这篇文章的视角很好，站到更高的角度来看待语言和程序包。","like_count":1},{"had_liked":false,"id":227530,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1592401947,"is_pvip":true,"replies":[{"id":"83846","content":"设计主要都是消除重复，只不过，有的人是通过设计新模型消除重复，有的人是通过把代码块抽到一起消除重复。<br><br>阅读优秀程序库的源码是一个人自我提升的一种途径，这是值得鼓励的。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592436691,"ip_address":"","comment_id":227530,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5887369243","product_id":100052601,"comment_content":"如果按照语法、程序库、运行时的节奏，我对于几个语言（Java，C#，Ruby）的理解大部分停留在了程序库这一步，而且运用的不怎么熟练。<br><br>“语言设计就是程序可设计，程序库设计就是语言设计”，专栏中提到说二者是为了解决同样的问题，那么这个问题是什么，是为了消除重复？<br><br>学习编写程序库对我来说有点无从下手，不过我觉的可以看一些优秀的开源程序库代码，也许是个不错的选择。<br><br>我有一个感觉，各种不同的语言和程序库之间其实是相互促进的关系，Java 其实也是在不断的演化，再加上 Guava 等程序库的加持（当然还有 Spring 系列的框架），焕发新春。","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498677,"discussion_content":"设计主要都是消除重复，只不过，有的人是通过设计新模型消除重复，有的人是通过把代码块抽到一起消除重复。\n\n阅读优秀程序库的源码是一个人自我提升的一种途径，这是值得鼓励的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592436691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226220,"user_name":"Being","can_delete":false,"product_type":"c1","uid":1152227,"ip_address":"","ucode":"80A8783927B650","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/e3/ed118550.jpg","comment_is_top":false,"comment_ctime":1592006341,"is_pvip":false,"replies":[{"id":"83345","content":"先学上一打，验证一下。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592046813,"ip_address":"","comment_id":226220,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886973637","product_id":100052601,"comment_content":"学习一门语言的思路更清晰明确了","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498155,"discussion_content":"先学上一打，验证一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592046813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226205,"user_name":"yudidi","can_delete":false,"product_type":"c1","uid":1202482,"ip_address":"","ucode":"70283DE39D86F5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ydFhHonicUQibGlAfsAYBibNOfSxpCG5cJNp9oRibTJm3TrxM7Hj4WPPCRE3vluZJb0TGQqpKCaBWLdmra5Su1KF5Q/132","comment_is_top":false,"comment_ctime":1591985520,"is_pvip":false,"replies":[{"id":"83408","content":"欢迎邀请小伙伴共同提高！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592133710,"ip_address":"","comment_id":226205,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886952816","product_id":100052601,"comment_content":"醍醐灌顶","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498147,"discussion_content":"欢迎邀请小伙伴共同提高！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592133710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226173,"user_name":"Y024","can_delete":false,"product_type":"c1","uid":1018056,"ip_address":"","ucode":"397126D2E17997","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/c8/ae476935.jpg","comment_is_top":false,"comment_ctime":1591971005,"is_pvip":true,"replies":[{"id":"83346","content":"嗯，也是一个理解的角度。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592046847,"ip_address":"","comment_id":226173,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5886938301","product_id":100052601,"comment_content":"嗯，我又来强行插入第一季了，“学习一种程序设计语言提供的模型时，不仅仅要看语法本身有什么，还要了解有语言特性的一些程序库。”这不就是第一季提的扩大上下文吗？🤔","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498132,"discussion_content":"嗯，也是一个理解的角度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592046847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226134,"user_name":"SA","can_delete":false,"product_type":"c1","uid":1099635,"ip_address":"","ucode":"3978B81AB9D145","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/73/744a2212.jpg","comment_is_top":false,"comment_ctime":1591958725,"is_pvip":false,"replies":[{"id":"83347","content":"欢迎邀请更多小伙伴加入学习！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592046911,"ip_address":"","comment_id":226134,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886926021","product_id":100052601,"comment_content":"这篇文章大大提升了我对程序设计语言的认知高度，以前还真没有从语法，程序库，第三方库以及他们之间的关系方面去理解一门语言。更没有意识到程序设计语言的”接口”。这些知识老师说透了之后感觉并不难，但是我们的难点在于靠自己摸索的话似乎永远看不透，还是要跟着老师学习，不断从根本上提升专业认知水平才行！这门课太值了！","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498117,"discussion_content":"欢迎邀请更多小伙伴加入学习！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592046911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345310,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1652186682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652186682","product_id":100052601,"comment_content":"提升软件设计能力，可以从编写程序库入手。--记下来，可以着手实践","like_count":1},{"had_liked":false,"id":342596,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1650359482,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650359482","product_id":100052601,"comment_content":"又有收获～～ ","like_count":0},{"had_liked":false,"id":331923,"user_name":"petit_kayak","can_delete":false,"product_type":"c1","uid":1025214,"ip_address":"","ucode":"6889CCCBFA0180","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/be/39cc22f5.jpg","comment_is_top":false,"comment_ctime":1642901195,"is_pvip":true,"replies":[{"id":"121370","content":"很好的分享","user_name":"作者回复","user_name_real":"编辑","uid":"1258861","ctime":1643098029,"ip_address":"","comment_id":331923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642901195","product_id":100052601,"comment_content":"boost和现代C++之间就是典型的语言与程序库互相促进的故事","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548248,"discussion_content":"很好的分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643098029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277999,"user_name":"斯盖丸","can_delete":false,"product_type":"c1","uid":1168504,"ip_address":"","ucode":"B881D14B028F14","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/78/66b3f2a2.jpg","comment_is_top":false,"comment_ctime":1612695546,"is_pvip":false,"replies":[{"id":"100913","content":"任何学习新语言的做法，我都支持。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612710817,"ip_address":"","comment_id":277999,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1612695546","product_id":100052601,"comment_content":"今年想把Go和Rust语音学了，之前只会Java, scala, python","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515242,"discussion_content":"任何学习新语言的做法，我都支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612710817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254369,"user_name":"Janenesome","can_delete":false,"product_type":"c1","uid":1276572,"ip_address":"","ucode":"15D2673CC31D9D","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/9c/a4bc748d.jpg","comment_is_top":false,"comment_ctime":1603106281,"is_pvip":false,"replies":[{"id":"92865","content":"前进的道路总没有那么一帆风顺，加油！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1603153768,"ip_address":"","comment_id":254369,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603106281","product_id":100052601,"comment_content":"原来语法和程序库还有这一层关系，真是讲得清晰明了，太赞了。<br><br>想成为更好的程序员，先从消除重复开始。今天在践行10行代码的原则，真是痛并快乐着","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507364,"discussion_content":"前进的道路总没有那么一帆风顺，加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603153768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233761,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1594439244,"is_pvip":false,"replies":[{"id":"86348","content":"这个比喻很有意思。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1594568191,"ip_address":"","comment_id":233761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594439244","product_id":100052601,"comment_content":"类库是块砖，哪里需要哪里般。<br><br>框架是混凝土，将类库与代码以一致的形式风格粘合在一起。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501156,"discussion_content":"这个比喻很有意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594568191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228375,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1653332,"ip_address":"","ucode":"E3F15FB8576626","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/54/72402617.jpg","comment_is_top":false,"comment_ctime":1592651797,"is_pvip":true,"replies":[{"id":"84337","content":"在《10x 程序员工作法》中，我讲了 NIH。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592793314,"ip_address":"","comment_id":228375,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592651797","product_id":100052601,"comment_content":"用现有轮子更靠谱","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499014,"discussion_content":"在《10x 程序员工作法》中，我讲了 NIH。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592793314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}