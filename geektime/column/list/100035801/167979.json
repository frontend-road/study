{"id":167979,"title":"25 | 分布式Trace：横跨几十个分布式组件的慢请求要如何排查？","content":"<p>你好，我是唐扬。</p><p>经过前面几节课的学习，你的垂直电商系统在引入RPC框架和注册中心之后已经完成基本的服务化拆分了，系统架构也有了改变：</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/4e/ac71f706f791e6f8d31d30513657534e.jpg?wh=1142*741\" alt=\"\"></p><p>现在，你的系统运行平稳，老板很高兴，你也安心了很多。而且你认为，在经过了服务化拆分之后，服务的可扩展性增强了很多，可以通过横向扩展服务节点的方式平滑地扩容了，对于应对峰值流量也更有信心了。</p><p><strong>但是这时出现了问题：</strong>你通过监控发现，系统的核心下单接口在晚高峰的时候，会有少量的慢请求，用户也投诉在APP上下单时，等待的时间比较长。而下单的过程可能会调用多个RPC服务或者使用多个资源，一时之间，你很难快速判断究竟是哪个服务或者资源出了问题，从而导致整体流程变慢。<strong>于是你和你的团队开始想办法如何排查这个问题。</strong></p><h2>一体化架构中的慢请求排查如何做</h2><p>因为在分布式环境下，请求要在多个服务之间调用，所以对于慢请求问题的排查会更困难，<strong>我们不妨从简单的入手，</strong>先看看在一体化架构中是如何排查这个慢请求的问题的。</p><p>最简单的思路是：打印下单操作的每一个步骤的耗时情况，然后通过比较这些耗时的数据，找到延迟最高的一步，然后再来看看这个步骤要如何优化。如果有必要的话，你还需要针对步骤中的子步骤，再增加日志来继续排查，<strong>简单的代码就像下面这样：</strong></p><!-- [[[read_end]]] --><pre><code>long start = System.currentTimeMillis();\nprocessA();\nLogs.info(&quot;process A cost &quot; + (System.currentTimeMillis() - start));//打印A步骤的耗时\nstart = System.currentTimeMillis();\nprocessB();\nLogs.info(&quot;process B cost &quot; + (System.currentTimeMillis() - start));//打印B步骤的耗时\nstart = System.currentTimeMillis();\nprocessC();\nLogs.info(&quot;process C cost &quot; + (System.currentTimeMillis() - start));//打印C步骤的耗时\n</code></pre><p>这是最简单的实现方式，打印出日志后，我们可以登录到机器上搜索关键词来查看每个步骤的耗时情况。</p><p><strong>虽然这个方式比较简单，但你可能很快就会遇到问题：</strong>由于同时会有多个下单请求并行处理，所以，这些下单请求的每个步骤的耗时日志是相互穿插打印的。你无法知道这些日志哪些是来自于同一个请求，也就不能很直观地看到某一次请求耗时最多的步骤是哪一步了。那么你要如何把单次请求，每个步骤的耗时情况串起来呢？</p><p><strong>一个简单的思路是：</strong>给同一个请求的每一行日志增加一个相同的标记。这样，只要拿到这个标记就可以查询到这个请求链路上所有步骤的耗时了，我们把这个标记叫做requestId，我们可以在程序的入口处生成一个requestId，然后把它放在线程的上下文中，这样就可以在需要时随时从线程上下文中获取到requestId了。简单的代码实现就像下面这样：</p><pre><code>String requestId = UUID.randomUUID().toString();\nThreadLocal&lt;String&gt; tl = new ThreadLocal&lt;String&gt;(){\n    @Override\n    protected String initialValue() {\n        return requestId;\n    }\n}; //requestId存储在线程上下文中\nlong start = System.currentTimeMillis();\nprocessA();\nLogs.info(&quot;rid : &quot; + tl.get() + &quot;, process A cost &quot; + (System.currentTimeMillis() - start)); // 日志中增加requestId\nstart = System.currentTimeMillis();\nprocessB();\nLogs.info(&quot;rid : &quot; + tl.get() + &quot;, process B cost &quot; + (System.currentTimeMillis() - start));\nstart = System.currentTimeMillis();\nprocessC();\nLogs.info(&quot;rid : &quot; + tl.get() + &quot;, process C cost &quot; + (System.currentTimeMillis() - start));\n</code></pre><p>有了requestId，你就可以清晰地了解一个调用链路上的耗时分布情况了。</p><p>于是，你给你的代码增加了大量的日志来排查下单操作缓慢的问题。<strong>很快，</strong> 你发现是某一个数据库查询慢了才导致了下单缓慢，然后你优化了数据库索引，问题最终得到了解决。</p><p><strong>正当你要松一口气的时候，问题接踵而至：</strong>又有用户反馈某些商品业务打开缓慢；商城首页打开缓慢。你开始焦头烂额地给代码中增加耗时日志，而这时你意识到，每次排查一个接口就需要增加日志、重启服务，<strong>这并不是一个好的办法，于是你开始思考解决的方案。</strong></p><p><strong>其实，从我的经验出发来说，</strong>一个接口响应时间慢，一般是出在跨网络的调用上，比如说请求数据库、缓存或者依赖的第三方服务。所以，我们只需要针对这些调用的客户端类做切面编程，通过插入一些代码打印它们的耗时就好了。</p><p>说到切面编程（AOP）你应该并不陌生，它是面向对象编程的一种延伸，可以在不修改源代码的前提下给应用程序添加功能，比如说鉴权、打印日志等等。如果你对切面编程的概念理解得还不透彻，那我给你做个比喻，<strong>帮你理解一下。</strong></p><p>这就像开发人员在向代码仓库提交代码后，他需要对代码编译、构建、执行单元测试用例以保证提交的代码是没有问题的。但是如果每个人提交了代码都做这么多事儿，无疑会对开发同学造成比较大的负担，那么你可以配置一个持续集成的流程，在提交代码之后自动帮你完成这些操作，这个持续集成的流程就可以认为是一个切面。</p><p><strong>一般来说，切面编程的实现分为两类：</strong></p><ul>\n<li>\n<p>一类是静态代理，典型的代表是AspectJ，它的特点是在编译期做切面代码注入；</p>\n</li>\n<li>\n<p>另一类是动态代理，典型的代表是Spring AOP，它的特点是在运行期做切面代码注入。</p>\n</li>\n</ul><p><strong>这两者有什么差别呢？</strong>以Java为例，源代码Java文件先被Java编译器编译成Class文件，然后Java虚拟机将Class装载进来之后，进行必要的验证和初始化后就可以运行了。</p><p>静态代理是在编译期插入代码，增加了编译的时间，给你的直观感觉就是启动的时间变长了，但是一旦在编译期插入代码完毕之后在运行期就基本对于性能没有影响。</p><p>而动态代理不会去修改生成的Class文件，而是会在运行期生成一个代理对象，这个代理对象对源对象做了字节码增强，来完成切面所要执行的操作。由于在运行期需要生成代理对象，所以动态代理的性能要比静态代理要差。</p><p>我们做切面的原因，是想生成一些调试的日志，所以我们希望尽量减少对于原先接口性能的影响。<strong>因此，我推荐采用静态代理的方式，实现切面编程。</strong></p><p>如果你的系统中需要增加切面来做一些校验、限流或者日志打印的工作，<strong>我也建议你考虑使用静态代理的方式，</strong>使用AspectJ做切面的简单代码实现就像下面这样：</p><pre><code>@Aspect\npublic class Tracer {\n    @Around(value = &quot;execution(public methodsig)&quot;, argNames = &quot;pjp&quot;) //execution内替换要做切面的方法签名\n    public Object trace(ProceedingJoinPoint pjp) throws Throwable {\n        TraceContext traceCtx = TraceContext.get(); //获取追踪上下文，上下文的初始化可以在程序入口处\n        String requestId = reqCtx.getRequestId(); //获取requestId\n        String sig = pjp.getSignature().toShortString(); //获取方法签名\n        boolean isSuccessful = false;\n        String errorMsg = &quot;&quot;;\n        Object result = null;\n        long start = System.currentTimeMillis();\n        try {\n            result = pjp.proceed();\n            isSuccessful = true;\n            return result;\n        } catch (Throwable t) {\n            isSuccessful = false;\n            errorMsg = t.getMessage();\n            return result;\n        } finally {\n            long elapseTime = System.currentTimeMillis() - start;\n            Logs.info(&quot;rid : &quot; + requestId + &quot;, start time: &quot; + start + &quot;, elapseTime: &quot; + elapseTime + &quot;, sig: &quot; + sig + &quot;, isSuccessful: &quot; + isSuccessful + &quot;, errorMsg: &quot; + errorMsg  );\n        }\n    }\n\n}\n</code></pre><p>这样，你就在你的系统的每个接口中打印出了所有访问数据库、缓存、外部接口的耗时情况，一次请求可能要打印十几条日志，如果你的电商系统的QPS是10000的话，就是每秒钟会产生十几万条日志，对于磁盘I/O的负载是巨大的，<strong>那么这时，你就要考虑如何减少日志的数量。</strong></p><p><strong>你可以考虑对请求做采样，</strong>采样的方式也简单，比如你想采样10%的日志，那么你可以只打印“requestId%10==0”的请求。</p><p>有了这些日志之后，当给你一个requestId的时候，你发现自己并不能确定这个请求到了哪一台服务器上，所以你不得不登录所有的服务器去搜索这个requestId才能定位请求。<strong>这样无疑会增加问题排查的时间。</strong></p><p><strong>你可以考虑的解决思路是：</strong>把日志不打印到本地文件中，而是发送到消息队列里，再由消息处理程序写入到集中存储中，比如Elasticsearch。这样，你在排查问题的时候，只需要拿着requestId到Elasticsearch中查找相关的记录就好了。在加入消息队列和Elasticsearch之后，我们这个排查程序的架构图也会有所改变：</p><p><img src=\"https://static001.geekbang.org/resource/image/ae/7a/ae25d911a438dc8ca1adb816595a787a.jpg?wh=1142*466\" alt=\"\"></p><p>我来总结一下，为了排查单次请求响应时间长的原因，我们主要做了哪些事情：</p><ol>\n<li>\n<p>在记录打点日志时，我们使用requestId将日志串起来，这样方便比较一次请求中的多个步骤的耗时情况；</p>\n</li>\n<li>\n<p>我们使用静态代理的方式做切面编程，避免在业务代码中，加入大量打印耗时的日志的代码，减少了对于代码的侵入性，同时编译期的代码注入可以减少；</p>\n</li>\n<li>\n<p>我们增加了日志采样率，避免全量日志的打印；</p>\n</li>\n<li>\n<p>最后为了避免在排查问题时需要到多台服务器上搜索日志，我们使用消息队列将日志集中起来放在了Elasticsearch中。</p>\n</li>\n</ol><h2>如何来做分布式Trace</h2><p>你可能会问：题目既然是“分布式Trace：横跨几十个分布式组件的慢请求要如何排查？”，那么我为什么要花费大量的篇幅来说明在一体化架构中如何排查问题呢？<strong>这是因为在分布式环境下，</strong>你基本上也是依据上面我提到的这几点来构建分布式追踪的中间件的。</p><p>在一体化架构中，单次请求的所有的耗时日志都被记录在一台服务器上，而在微服务的场景下，单次请求可能跨越多个RPC服务，这就造成了单次的请求的日志会分布在多个服务器上。</p><p>当然，你也可以通过requestId将多个服务器上的日志串起来，但是仅仅依靠requestId很难表达清楚服务之间的调用关系，所以从日志中就无法了解服务之间是谁在调用谁。因此，我们采用traceId + spanId这两个数据维度来记录服务之间的调用关系（这里traceId就是requestId），也就是使用traceId串起单次请求，用spanId记录每一次RPC调用。<strong>说起来可能比较抽象，我给你举一个具体的例子。</strong></p><p>比如，你的请求从用户端过来，先到达A服务，A服务会分别调用B和C服务，B服务又会调用D和E服务。</p><p><img src=\"https://static001.geekbang.org/resource/image/ba/10/ba9e63bbcccd910df41b75b925ad5910.jpg?wh=1142*689\" alt=\"\"></p><p>我来给你讲讲图中的内容：</p><ul>\n<li>用户到A服务之后会初始化一个traceId为100，spanId为1；</li>\n<li>A服务调用B服务时，traceId不变，而spanId用1.1标识代表上一级的spanId是1，这一级的调用次序是1；</li>\n<li>A调用C服务时，traceId依然不变，spanId则变为了1.2，代表上一级的spanId还是1，而调用次序则变成了2，以此类推。</li>\n</ul><p>通过这种方式，我们可以在日志中清晰地看出服务的调用关系是如何的，方便在后续计算中调整日志顺序，打印出完整的调用链路。</p><p><strong>那么spanId是何时生成的，又是如何传递的呢？</strong>这部分内容可以算作一个延伸点，能够帮你了解分布式Trace中间件的实现原理。</p><p>首先，A服务在发起RPC请求服务B前，先从线程上下文中获取当前的traceId和spanId，然后依据上面的逻辑生成本次RPC调用的spanId，再将spanId和traceId序列化后装配到请求体中，发送给服务方B。</p><p>服务方B获取请求后，从请求体中反序列化出spanId和traceId，同时设置到线程上下文中，以便给下次RPC调用使用。在服务B调用完成返回响应前，计算出服务B的执行时间发送给消息队列。</p><p>当然，在服务B中，你依然可以使用切面编程的方式，得到所有调用的数据库、缓存、HTTP服务的响应时间，只是在发送给消息队列的时候，要加上当前线程上下文中的spanId和traceId。</p><p>这样，无论是数据库等资源的响应时间，还是RPC服务的响应时间就都汇总到了消息队列中，在经过一些处理之后，最终被写入到Elasticsearch中以便给开发和运维同学查询使用。</p><p>而在这里，你大概率会遇到的问题还是性能的问题，也就是因为引入了分布式追踪中间件，导致对于磁盘I/O和网络I/O的影响，<strong>而我给你的“避坑”指南就是：</strong>如果你是自研的分布式Trace中间件，那么一定要提供一个开关，方便在线上随时将日志打印关闭；如果使用开源的组件，可以开始设置一个较低的日志采样率，观察系统性能情况再调整到一个合适的数值。</p><h2>课程小结</h2><p>本节课我带你了解了在一体化架构和服务化架构中，你要如何排查单次慢请求中，究竟哪一个步骤是瓶颈，这里你需要了解的主要有以下几个重点：</p><ul>\n<li>\n<p>服务的追踪的需求主要有两点，一点对代码要无侵入，你可以使用切面编程的方式来解决；另一点是性能上要低损耗，我建议你采用静态代理和日志采样的方式，来尽量减少追踪日志对于系统性能的影响；</p>\n</li>\n<li>\n<p>无论是单体系统还是服务化架构，无论是服务追踪还是业务问题排查，你都需要在日志中增加requestId，这样可以将你的日志串起来，给你呈现一个完整的问题场景。如果requestId可以在客户端上生成，在请求业务接口的时候传递给服务端，那么就可以把客户端的日志体系也整合进来，对于问题的排查帮助更大。</p>\n</li>\n</ul><p>其实，分布式追踪系统不是一项新的技术，而是若干项已有技术的整合，在实现上并不复杂，却能够帮助你实现跨进程调用链展示、服务依赖分析，在性能优化和问题排查方面提供数据上的支持。所以，在微服务化过程中，它是一个必选项，无论是采用Zipkin，Jaeger这样的开源解决方案，还是团队内自研，你都应该在微服务化完成之前，尽快让它发挥应有的价值。</p><h2>一课一思</h2><p>你在项目中是否接入过分布式追踪系统呢？在使用过程中它帮助你排查了哪些问题呢？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":154966,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1574606104,"is_pvip":false,"replies":[{"id":"59476","content":"很赞~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574642289,"ip_address":"","comment_id":154966,"utype":1}],"discussion_count":11,"race_medal":0,"score":"229207872792","product_id":100035801,"comment_content":"打开。感谢老师又给我复习来一遍。 调用链追踪是我们项目比较重要的部分，我们才用的是pinpoint，原生是入HBase，我们改造了一份通过队列入ES。 使用感受 pinpoint 对服务的性能负担很小，网络压力也小（udp）。<br>调用链追踪体现的始终是在服务之间，我们团队又前移了一步，通过JavaScript对XHR对象拦截，产生一个requestID，附在header上，网关透传，改造了下 pinpoint，使接下来的调用都传递这个 requestID，最后存下来的日志有 traceID 和 requestID 组合，那么监控 nginx 日志的时候，就能知道是哪个前端请求发起的问题，甚至知道是哪个按钮触发的，哪个JavaScript方法触发的，是不是很先进哈哈😂","like_count":54,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475626,"discussion_content":"很赞~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":58515,"discussion_content":"我才发现mac输入法惨不忍睹错别字连天","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574679433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305115,"discussion_content":"拦截 XHR，咋做到是哪个按钮，哪个方法，哪个模块吖，求分享","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599787587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305363,"discussion_content":"把原xhr存下，再重写一个同名的xhr，代理原xhr，proxy 模式","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599893300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305115,"ip_address":""},"score":305363,"extra":""}]},{"author":{"id":1253310,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/be/551454e0.jpg","nickname":"zxy","note":"","ucode":"FFAA3F6667305D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381313,"discussion_content":"mark, pinpoint用户觉得很淦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625011712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1360712,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","nickname":"天草二十六","note":"","ucode":"3165EE3007527B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261583,"discussion_content":"大佬，有详细分享不，还是大佬走在前面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588985062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1360712,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","nickname":"天草二十六","note":"","ucode":"3165EE3007527B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264643,"discussion_content":"谁是大佬了🗣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589340509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":261583,"ip_address":""},"score":264643,"extra":""},{"author":{"id":1360712,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","nickname":"天草二十六","note":"","ucode":"3165EE3007527B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265118,"discussion_content":"大佬，你说呢😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589375491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":264643,"ip_address":""},"score":265118,"extra":""},{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1360712,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c3/48/3a739da6.jpg","nickname":"天草二十六","note":"","ucode":"3165EE3007527B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265678,"discussion_content":"我还不老👨‍🦳","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589427981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":265118,"ip_address":""},"score":265678,"extra":""}]},{"author":{"id":1691141,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/05/4c493ef9.jpg","nickname":"李泽文","note":"","ucode":"4E563C6B9618CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":103895,"discussion_content":"通过进程ID，线程ID，或者名称是不是也可以解决日志链路问题，也不需要开发者去维护traceId和spanId","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577405755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1691141,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/05/4c493ef9.jpg","nickname":"李泽文","note":"","ucode":"4E563C6B9618CB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":264642,"discussion_content":"可以，但是前端部分是断路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589340477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":103895,"ip_address":""},"score":264642,"extra":""}]}]},{"had_liked":false,"id":154010,"user_name":"彭越","can_delete":false,"product_type":"c1","uid":1052602,"ip_address":"","ucode":"38155338D292A5","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/ba/a2531cf0.jpg","comment_is_top":false,"comment_ctime":1574346526,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27344150302","product_id":100035801,"comment_content":"用skywalking做链路追踪怎么样？通过agent追踪系统性能，进行APM监控","like_count":7,"discussions":[{"author":{"id":1701821,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f7/bd/29c3a868.jpg","nickname":"栋丶哥","note":"","ucode":"2CE58E87A49102","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55992,"discussion_content":"APM不就是spanId和traceId的原理么，用skywalking还能做性能监控","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574420902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153342,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1574220256,"is_pvip":false,"replies":[{"id":"59015","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574294370,"ip_address":"","comment_id":153342,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23049056736","product_id":100035801,"comment_content":"这不就是链路追踪","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475129,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155972,"user_name":"阿土","can_delete":false,"product_type":"c1","uid":1183019,"ip_address":"","ucode":"2DBEAD80B0CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/2b/4814d3db.jpg","comment_is_top":false,"comment_ctime":1574786100,"is_pvip":false,"replies":[{"id":"60248","content":"这要分布式Trace组件来解决，比如java可以通过java agent的方式来在启动之前植入trace的代码","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575016234,"ip_address":"","comment_id":155972,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18754655284","product_id":100035801,"comment_content":"对于老旧系统如何引入分布式Trace跟踪呢？不改代码的前提下","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475943,"discussion_content":"这要分布式Trace组件来解决，比如java可以通过java agent的方式来在启动之前植入trace的代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575016234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026123,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/4b/75b05efd.jpg","nickname":"李慢慢","note":"","ucode":"7BB3B27C96260C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":64056,"discussion_content":"分布式的老旧系统？spring-cloud全家桶搞定","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574933407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232387,"user_name":"漂泊的小飘","can_delete":false,"product_type":"c1","uid":1222578,"ip_address":"","ucode":"25C0CA4887D8AD","user_header":"https://static001.geekbang.org/account/avatar/00/12/a7/b2/274a4192.jpg","comment_is_top":false,"comment_ctime":1593993355,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14478895243","product_id":100035801,"comment_content":"去年年底开发了一个trace系统 没有加日志开关 听了这个课赶快回去加","like_count":3},{"had_liked":false,"id":153293,"user_name":"健少","can_delete":false,"product_type":"c1","uid":1099365,"ip_address":"","ucode":"63439F8DC540F6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/65/64d1eaed.jpg","comment_is_top":false,"comment_ctime":1574212008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14459113896","product_id":100035801,"comment_content":"我们的日志通过啊里日志系统收集，左日志系统通过丰富的查询方式查询出某一traceID各服务的调用情况。","like_count":3},{"had_liked":false,"id":153266,"user_name":"水目沾","can_delete":false,"product_type":"c1","uid":1274495,"ip_address":"","ucode":"FDD1D15C277D58","user_header":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","comment_is_top":false,"comment_ctime":1574209699,"is_pvip":false,"replies":[{"id":"59017","content":"一般写在nosql数据库里面，比如hbase","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574294426,"ip_address":"","comment_id":153266,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10164144291","product_id":100035801,"comment_content":"老师，所有的日志都采集到一起，最终的数据量会不会非常大？一般放在什么样的系统中？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475102,"discussion_content":"一般写在nosql数据库里面，比如hbase","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211326,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1587949061,"is_pvip":false,"replies":[{"id":"78861","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1588070114,"ip_address":"","comment_id":211326,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882916357","product_id":100035801,"comment_content":"思路都是一样，目前公司在用的一个日志分析系统就是这么玩的，不过打印日志需要改造一下，这个有成本。比较倾向于使用方法监控来做分析，对慢请求定位也非常方便，方法调用量、TPS、是否可用、以及其他的聚合信息一目了然，再加上方法调用链的串接慢请求具体位置非常简单就能定位到，而且自己方法的各种信息也一目了然。","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493251,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588070114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195552,"user_name":"Alex Liu","can_delete":false,"product_type":"c1","uid":1079515,"ip_address":"","ucode":"68D1F6F9E7F05C","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/db/825d3b7c.jpg","comment_is_top":false,"comment_ctime":1585196311,"is_pvip":false,"replies":[{"id":"75151","content":"按照你的业务量级会产生多少日志量","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585659181,"ip_address":"","comment_id":195552,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5880163607","product_id":100035801,"comment_content":"日志采样比例的选择是需要足够业务经验才能做出的决策？还是一般都是按照10%采样？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489107,"discussion_content":"按照你的业务量级会产生多少日志量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585659181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114352,"avatar":"https://static001.geekbang.org/account/avatar/00/11/00/f0/fe94061e.jpg","nickname":"假装在养🐷","note":"","ucode":"D0AB9CD03E0D5B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573897,"discussion_content":"采样率低的话，会不会有些错误场景反馈之后，看不到日志，问题不好复现的话，岂不是很无解？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653720255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154997,"user_name":"枫紫深蓝","can_delete":false,"product_type":"c1","uid":1122275,"ip_address":"","ucode":"325D0744EA8DDF","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/e3/e5ddbe55.jpg","comment_is_top":false,"comment_ctime":1574613121,"is_pvip":false,"replies":[{"id":"59475","content":"其实都好，我们习惯放在请求体里面","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574642255,"ip_address":"","comment_id":154997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869580417","product_id":100035801,"comment_content":"发送到请求体中有什么特定作用吗？请求体本身已经带走当前调用的数据了，将requestId放在请求头中会不会更好？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475631,"discussion_content":"其实都好，我们习惯放在请求体里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339669,"user_name":"梦楼","can_delete":false,"product_type":"c1","uid":2093516,"ip_address":"","ucode":"2D0F3050ACC091","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f1/cc/3bd32c6f.jpg","comment_is_top":false,"comment_ctime":1648284532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648284532","product_id":100035801,"comment_content":"很不错！！！","like_count":0},{"had_liked":false,"id":309480,"user_name":"小胡","can_delete":false,"product_type":"c1","uid":2397964,"ip_address":"","ucode":"1E0DD4138E9D0E","user_header":"","comment_is_top":false,"comment_ctime":1630157882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630157882","product_id":100035801,"comment_content":"RequestID和SpanID生成的逻辑是什么？","like_count":1},{"had_liked":false,"id":290382,"user_name":"禅尔、","can_delete":false,"product_type":"c1","uid":1017837,"ip_address":"","ucode":"4B5D2898354866","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/ed/b4b1fd64.jpg","comment_is_top":false,"comment_ctime":1619520313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619520313","product_id":100035801,"comment_content":"Jaeger &amp; open tracing","like_count":0},{"had_liked":false,"id":285070,"user_name":"达叔灬","can_delete":false,"product_type":"c1","uid":2404887,"ip_address":"","ucode":"5CCBAF13548F02","user_header":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","comment_is_top":false,"comment_ctime":1616598331,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1616598331","product_id":100035801,"comment_content":"老师为什么会有I&#47;O操作呢？<br>我的理解是对于链路追踪应该都是从请求上下文中直接获取对应文信息合并当前服务信息写入请求上下文同时异步的丢到消息队列中。<br>这里的I&#47;O操作是上下文读写吗？","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364803,"discussion_content":"I/O操作指的是将日志存储到本地磁盘上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617612341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250905,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1601277043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601277043","product_id":100035801,"comment_content":"Java服务也可以通过MyPerf4J，从入口处找出耗时的方法<br>GitHub地址：https:&#47;&#47;github.com&#47;LinShunKang&#47;MyPerf4J","like_count":0},{"had_liked":false,"id":223008,"user_name":"道","can_delete":false,"product_type":"c1","uid":1324160,"ip_address":"","ucode":"851A0AD751D317","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/80/30e9ae41.jpg","comment_is_top":false,"comment_ctime":1590980382,"is_pvip":false,"replies":[{"id":"82718","content":"不是的吧 AspectJ可以结合spring使用的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591538592,"ip_address":"","comment_id":223008,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590980382","product_id":100035801,"comment_content":"编译期做切面代码注入，让原来的引用指向代理对象。查阅了下AspectJ,基本是android环境，分布式服务端如何做静态代理","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496986,"discussion_content":"不是的吧 AspectJ可以结合spring使用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591538592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197114,"user_name":"如歌","can_delete":false,"product_type":"c1","uid":1292419,"ip_address":"","ucode":"727C90CA52CD73","user_header":"https://static001.geekbang.org/account/avatar/00/13/b8/83/7c1ed918.jpg","comment_is_top":false,"comment_ctime":1585358450,"is_pvip":false,"replies":[{"id":"74907","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585541657,"ip_address":"","comment_id":197114,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585358450","product_id":100035801,"comment_content":"最近在做网关 可能会涉及到追踪的问题 学习一下","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489449,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585541657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178613,"user_name":"我行我素","can_delete":false,"product_type":"c1","uid":1224678,"ip_address":"","ucode":"4C69542FAB0671","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/e6/9c77acff.jpg","comment_is_top":false,"comment_ctime":1581759656,"is_pvip":false,"replies":[{"id":"69658","content":"：）  这个对于追踪问题帮助很大","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1582001377,"ip_address":"","comment_id":178613,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1581759656","product_id":100035801,"comment_content":"记得spring Cloud中就有对应的配置，开启后就能在es中根据requestId追踪日志","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483897,"discussion_content":"：）  这个对于追踪问题帮助很大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582001377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1224678,"avatar":"https://static001.geekbang.org/account/avatar/00/12/af/e6/9c77acff.jpg","nickname":"我行我素","note":"","ucode":"4C69542FAB0671","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292924,"discussion_content":"1.pom文件引入sleuth\n<dependency>\n <groupId>org.springframework.cloud</groupId>\n <artifactId>spring-cloud-starter-sleuth</artifactId>\n</dependency>\n\n2.cousul配置调整sleuth采样率1（100%），默认0.1（10%），非生产环境建议调整为100%，方便追踪链路记录，生产环境建议稳定的服务不必开启链路追踪（链路追踪有性能损耗）\nspring:\n  sleuth:\n    sampler:\n      probability: 1\n\n3.sleuth要追踪微服务的调用链需要同时把Feign的日志打印出来，非正式环境只要不选择none级别就可以进行Feign调用的链路追踪，正式环境请根据自身需求调整合适的Feign日志级别（日志有性能损耗）\nFeign的Level日志级别(Feign的日志级别主要是用来调整输出日志的内容的丰富度，与log日志级别概念不同）配置默认是:full（fegin-spring-boot-starter默认配置）\n日志级别枚举类\nnone 不输出日志\nbasic 只有请求方法、URL、响应状态代码、执行时间\nheaders 基本信息以及请求和响应头\nfull 请求和响应 的heads、body、metadata\n\n4.Feign的日志归属为项目类日志，并且日志级别为debug级别，所以需要把项目的类日志也打印出来，com.jq与com.liying类配置分别如下\nlogging:\n  level:\n    com:\n      jq: debug\n\nlogging:\n  level:\n    com:\n      liying: debug\n\n5.配置logbakc-config.xml，移除重复的日志字段\n<customFields>{&#34;appname&#34;:&#34;report&#34;}</customFields>\n<excludeMdcKeyName>X-B3-ParentSpanId</excludeMdcKeyName>\n<excludeMdcKeyName>X-B3-SpanId</excludeMdcKeyName>\n<excludeMdcKeyName>X-B3-TraceId</excludeMdcKeyName>\n<excludeMdcKeyName>X-Span-Export</excludeMdcKeyName>\n<excludeMdcKeyName>spanExportable</excludeMdcKeyName>\n<excludeMdcKeyName>logpath</excludeMdcKeyName>\n6.sleuth 日志字段说明\n• traceId  全局ID，用来标计一条完整的请求链路。\n• spanId  单元ID，用来标记单个项目的执行流程\n• parentId 父ID，用来标记调用方","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595385447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1878956,"avatar":"","nickname":"宇过添情","note":"","ucode":"59DC854F0492CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292816,"discussion_content":"请问，怎么通过消息队列把切面的日志信息放到 Elasticsearch 中？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595339985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1224678,"avatar":"https://static001.geekbang.org/account/avatar/00/12/af/e6/9c77acff.jpg","nickname":"我行我素","note":"","ucode":"4C69542FAB0671","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1878956,"avatar":"","nickname":"宇过添情","note":"","ucode":"59DC854F0492CB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292925,"discussion_content":"可以看下，下面的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595385469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292816,"ip_address":""},"score":292925,"extra":""}]}]},{"had_liked":false,"id":155721,"user_name":"fdconan","can_delete":false,"product_type":"c1","uid":1244596,"ip_address":"","ucode":"01C71C6E9FD1E4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLv9HJIW4OACkjlwOQJ9cU7HzvaDFYkACWCib2lzOMef9ZiaGDTVFqjPicpVK5KDRbBRVGGHrMHQO1Rw/132","comment_is_top":false,"comment_ctime":1574744505,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1574744505","product_id":100035801,"comment_content":"想请教下，如果A服务并发调用B服务和C服务，spanId如何生成呢？","like_count":0,"discussions":[{"author":{"id":1414971,"avatar":"https://static001.geekbang.org/account/avatar/00/15/97/3b/c98b68c1.jpg","nickname":"AngryApe","note":"","ucode":"E0125A8D2AC84B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182230,"discussion_content":"将 spanId 放在调用方生成，传递给被调服务","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1582392482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290670,"discussion_content":"好想法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594561725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155071,"user_name":"刘冲","can_delete":false,"product_type":"c1","uid":1000439,"ip_address":"","ucode":"0C4F66921AE76C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/f7/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1574643144,"is_pvip":false,"replies":[{"id":"60253","content":"可以试试jaeger","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575016470,"ip_address":"","comment_id":155071,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574643144","product_id":100035801,"comment_content":"golang有没有办法不侵入代码，做链路追踪","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475653,"discussion_content":"可以试试jaeger","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575016470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1577160,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TicIdNMR9b27e7Llq2Z9M3WOoNuEJ7jl2vAgVdnQD1YwuTAPich0JkekTcQEwLMwMXeRsDE7ghe9qKVMooLSQ9mA/132","nickname":"biubiubiu","note":"","ucode":"6F358E347A6873","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350659,"discussion_content":"skywalking支持go的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613968620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154798,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1574567500,"is_pvip":false,"replies":[{"id":"59478","content":"ELK是elasticsearch，logstash和kibana的简称","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574642346,"ip_address":"","comment_id":154798,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574567500","product_id":100035801,"comment_content":"老师  请教一下  把日志写入elasticSearch 然后供运维和开发使用的过程  这个是不是就是所谓的ELK??? ","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475583,"discussion_content":"ELK是elasticsearch，logstash和kibana的简称","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57428,"discussion_content":"这个，只能说将数据放到ES中，利用ES的查询性能来快速查看日志数据，Kibana可视化的查询比较方便，Logstash呢，如果你们日志数据直接入的ES则没有这一步。还可借助ES数据二次开发运维工具，所以并没有什么严格的ELKB。个人拙见，请指教。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574605679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154533,"user_name":"小小","can_delete":false,"product_type":"c1","uid":1194408,"ip_address":"","ucode":"F29BDFEB1BD6C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/39/a8/085f794c.jpg","comment_is_top":false,"comment_ctime":1574475967,"is_pvip":true,"replies":[{"id":"59482","content":"是的，可以在线程上下文中传递","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574642519,"ip_address":"","comment_id":154533,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574475967","product_id":100035801,"comment_content":"老师，有些不明白为啥把request Id放到线程上下文，requestId本身就是私有变量线程安全吧","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475499,"discussion_content":"是的，可以在线程上下文中传递","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153630,"user_name":"Julien","can_delete":false,"product_type":"c1","uid":1204568,"ip_address":"","ucode":"2A3F0CF46B4034","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/58/7b078879.jpg","comment_is_top":false,"comment_ctime":1574290933,"is_pvip":false,"replies":[{"id":"59010","content":"这个我还不太清楚","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574294208,"ip_address":"","comment_id":153630,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1574290933","product_id":100035801,"comment_content":"C++有什么好的切面编程工具吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475233,"discussion_content":"这个我还不太清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1304312,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKKg0CZ0q2CUcqkm6EeA2iceuicV6b9Kg71etPvyFwrPriaWMOETftvD4Z3MMBxsbBicU38HpDIGAib6ag/132","nickname":"j3east","note":"","ucode":"E3640E3CE873B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305503,"discussion_content":"https://www.aspectc.org/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599968844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57436,"discussion_content":"这个，确实了，我们也被客户问到过，因为JAVA工程我们推广了，可是C++的计费系统，我们还不知道。难道只有老师介绍的这种思想自己写一份- -  不过C++还没见过大规模微服务的部署吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574606241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153325,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1574217448,"is_pvip":false,"replies":[{"id":"59016","content":"写文件的话排查起来不那么方便","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574294402,"ip_address":"","comment_id":153325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574217448","product_id":100035801,"comment_content":"我们以前的系统都是自己写日志到文本文件，或者把日志同步写到mongdb，这样是不是很low？，反正排查问题也比较难。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475122,"discussion_content":"写文件的话排查起来不那么方便","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153214,"user_name":"杨朔","can_delete":false,"product_type":"c1","uid":1031519,"ip_address":"","ucode":"31911C456CB568","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bd/5f/2fec41b1.jpg","comment_is_top":false,"comment_ctime":1574189267,"is_pvip":false,"replies":[{"id":"59018","content":"挂了就没有监控了，不会影响业务","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574294446,"ip_address":"","comment_id":153214,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1574189267","product_id":100035801,"comment_content":"如果日志不打印在本地.发送到消息队列..如果消息队列挂了怎么办？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475085,"discussion_content":"挂了就没有监控了，不会影响业务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1116199,"avatar":"https://static001.geekbang.org/account/avatar/00/11/08/27/067a2fb5.jpg","nickname":"蓝懒懒","note":"","ucode":"CA5C17D46CBBEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53725,"discussion_content":"写在本地，用filebeats logstash同步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574212017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1132661,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","nickname":"乘坐Tornado的线程魔法师","note":"","ucode":"C4C9915866E769","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1116199,"avatar":"https://static001.geekbang.org/account/avatar/00/11/08/27/067a2fb5.jpg","nickname":"蓝懒懒","note":"","ucode":"CA5C17D46CBBEC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55403,"discussion_content":"业界大多数是需要Kafka同filebeats结合的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574357435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":53725,"ip_address":""},"score":55403,"extra":""}]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53687,"discussion_content":"所以要做到消息队列高可用啊，看看老师前面讲消息队列的课程吧。你这问题就好像问：数据都写到数据库，数据库挂了怎么办？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574209619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153210,"user_name":"Geek_b617bf","can_delete":false,"product_type":"c1","uid":1220552,"ip_address":"","ucode":"9BAFC3B184B1D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9f/c8/0318c83e.jpg","comment_is_top":false,"comment_ctime":1574182288,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574182288","product_id":100035801,"comment_content":"我们用erlang 做的dubbo 调用链耗时采样。貌似也是官方文档支持的。不侵入业务代码靠字节码增强","like_count":0}]}