{"id":8269,"title":"14 | 高性能数据库集群：读写分离","content":"<p>“从0开始学架构”专栏已经更新了13期，从各个方面阐述了架构设计相关的理论和流程，包括架构设计起源、架构设计的目的、常见架构复杂度分析、架构设计原则、架构设计流程等，掌握这些知识是做好架构设计的基础。</p>\n<p>在具体的实践过程中，为了更快、更好地设计出优秀的架构，除了掌握这些基础知识外，还需要掌握业界已经成熟的各种架构模式。大部分情况下，我们做架构设计主要都是基于已有的成熟模式，结合业务和团队的具体情况，进行一定的优化或者调整；即使少部分情况我们需要进行较大的创新，前提也是需要对已有的各种架构模式和技术非常熟悉。</p>\n<p>接下来，我将逐一介绍最常见的“高性能架构模式”“高可用架构模式”“可扩展架构模式”，这些模式可能你之前大概了解过，但其实每个方案里面都有很多细节，只有深入的理解这些细节才能理解常见的架构模式，进而设计出优秀的架构。</p>\n<p>虽然近十年来各种存储技术飞速发展，但关系数据库由于其ACID的特性和功能强大的SQL查询，目前还是各种业务系统中关键和核心的存储系统，很多场景下高性能的设计最核心的部分就是关系数据库的设计。</p>\n<p>不管是为了满足业务发展的需要，还是为了提升自己的竞争力，关系数据库厂商（Oracle、DB2、MySQL等）在优化和提升单个数据库服务器的性能方面也做了非常多的技术优化和改进。但业务发展速度和数据增长速度，远远超出数据库厂商的优化速度，尤其是互联网业务兴起之后，海量用户加上海量数据的特点，单个数据库服务器已经难以满足业务需要，必须考虑数据库集群的方式来提升性能。</p>\n<p>从今天开始，我会分几期来介绍高性能数据库集群。高性能数据库集群的第一种方式是“读写分离”，其本质是将访问压力分散到集群中的多个节点，但是没有分散存储压力；第二种方式是“分库分表”，既可以分散访问压力，又可以分散存储压力。先来看看“<span class=\"orange\">读写分离</span>”，下一期我再介绍“分库分表”。</p>\n<h2>读写分离原理</h2>\n<p><strong>读写分离的基本原理是将数据库读写操作分散到不同的节点上</strong>，下面是其基本架构图。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/36/07/362d22168bf344687ec0c206aa115807.jpg?wh=2744*1943\" alt=\"\" /></p>\n<p>读写分离的基本实现是：</p>\n<!-- [[[read_end]]] -->\n<ul>\n<li>\n<p>数据库服务器搭建主从集群，一主一从、一主多从都可以。</p>\n</li>\n<li>\n<p>数据库主机负责读写操作，从机只负责读操作。</p>\n</li>\n<li>\n<p>数据库主机通过复制将数据同步到从机，每台数据库服务器都存储了所有的业务数据。</p>\n</li>\n<li>\n<p>业务服务器将写操作发给数据库主机，将读操作发给数据库从机。</p>\n</li>\n</ul>\n<p>需要注意的是，这里用的是“主从集群”，而不是“主备集群”。“从机”的“从”可以理解为“仆从”，仆从是要帮主人干活的，“从机”是需要提供读数据的功能的；而“备机”一般被认为仅仅提供备份功能，不提供访问功能。所以使用“主从”还是“主备”，是要看场景的，这两个词并不是完全等同的。</p>\n<p>读写分离的实现逻辑并不复杂，但有两个细节点将引入设计复杂度：<strong>主从复制延迟</strong>和<strong>分配机制</strong>。</p>\n<h2>复制延迟</h2>\n<p>以MySQL为例，主从复制延迟可能达到1秒，如果有大量数据同步，延迟1分钟也是有可能的。主从复制延迟会带来一个问题：如果业务服务器将数据写入到数据库主服务器后立刻（1秒内）进行读取，此时读操作访问的是从机，主机还没有将数据复制过来，到从机读取数据是读不到最新数据的，业务上就可能出现问题。例如，用户刚注册完后立刻登录，业务服务器会提示他“你还没有注册”，而用户明明刚才已经注册成功了。</p>\n<p>解决主从复制延迟有几种常见的方法：</p>\n<p>1.写操作后的读操作指定发给数据库主服务器</p>\n<p>例如，注册账号完成后，登录时读取账号的读操作也发给数据库主服务器。这种方式和业务强绑定，对业务的侵入和影响较大，如果哪个新来的程序员不知道这样写代码，就会导致一个bug。</p>\n<p>2.读从机失败后再读一次主机</p>\n<p>这就是通常所说的“二次读取”，二次读取和业务无绑定，只需要对底层数据库访问的API进行封装即可，实现代价较小，不足之处在于如果有很多二次读取，将大大增加主机的读操作压力。例如，黑客暴力破解账号，会导致大量的二次读取操作，主机可能顶不住读操作的压力从而崩溃。</p>\n<p>3.关键业务读写操作全部指向主机，非关键业务采用读写分离</p>\n<p>例如，对于一个用户管理系统来说，注册+登录的业务读写操作全部访问主机，用户的介绍、爱好、等级等业务，可以采用读写分离，因为即使用户改了自己的自我介绍，在查询时却看到了自我介绍还是旧的，业务影响与不能登录相比就小很多，还可以忍受。</p>\n<h2>分配机制</h2>\n<p>将读写操作区分开来，然后访问不同的数据库服务器，一般有两种方式：<strong>程序代码封装</strong>和<strong>中间件封装</strong>。</p>\n<p>1.程序代码封装</p>\n<p>程序代码封装指在代码中抽象一个数据访问层（所以有的文章也称这种方式为“中间层封装”），实现读写操作分离和数据库服务器连接的管理。例如，基于Hibernate进行简单封装，就可以实现读写分离，基本架构是：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/f8/df/f8d538f9201e3ebee37dfdcd1922e9df.jpg?wh=2661*2178\" alt=\"\" /></p>\n<p>程序代码封装的方式具备几个特点：</p>\n<ul>\n<li>\n<p>实现简单，而且可以根据业务做较多定制化的功能。</p>\n</li>\n<li>\n<p>每个编程语言都需要自己实现一次，无法通用，如果一个业务包含多个编程语言写的多个子系统，则重复开发的工作量比较大。</p>\n</li>\n<li>\n<p>故障情况下，如果主从发生切换，则可能需要所有系统都修改配置并重启。</p>\n</li>\n</ul>\n<p>目前开源的实现方案中，淘宝的TDDL（Taobao Distributed Data Layer，外号:头都大了）是比较有名的。它是一个通用数据访问层，所有功能封装在jar包中提供给业务代码调用。其基本原理是一个基于集中式配置的 jdbc datasource实现，具有主备、读写分离、动态数据库配置等功能，基本架构是：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/3b/07/3b87f6ce297c4af219fa316d29eb5507.jpg?wh=2311*1501\" alt=\"\" /></p>\n<p>2.中间件封装</p>\n<p>中间件封装指的是独立一套系统出来，实现读写操作分离和数据库服务器连接的管理。中间件对业务服务器提供SQL兼容的协议，业务服务器无须自己进行读写分离。对于业务服务器来说，访问中间件和访问数据库没有区别，事实上在业务服务器看来，中间件就是一个数据库服务器。其基本架构是：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/2a/8e/2a2dba7f07581fd055d9cd5a3aa8388e.jpg?wh=2918*1905\" alt=\"\" /></p>\n<p>数据库中间件的方式具备的特点是：</p>\n<ul>\n<li>\n<p>能够支持多种编程语言，因为数据库中间件对业务服务器提供的是标准SQL接口。</p>\n</li>\n<li>\n<p>数据库中间件要支持完整的SQL语法和数据库服务器的协议（例如，MySQL客户端和服务器的连接协议），实现比较复杂，细节特别多，很容易出现bug，需要较长的时间才能稳定。</p>\n</li>\n<li>\n<p>数据库中间件自己不执行真正的读写操作，但所有的数据库操作请求都要经过中间件，中间件的性能要求也很高。</p>\n</li>\n<li>\n<p>数据库主从切换对业务服务器无感知，数据库中间件可以探测数据库服务器的主从状态。例如，向某个测试表写入一条数据，成功的就是主机，失败的就是从机。</p>\n</li>\n</ul>\n<p>由于数据库中间件的复杂度要比程序代码封装高出一个数量级，一般情况下建议采用程序语言封装的方式，或者使用成熟的开源数据库中间件。如果是大公司，可以投入人力去实现数据库中间件，因为这个系统一旦做好，接入的业务系统越多，节省的程序开发投入就越多，价值也越大。</p>\n<p>目前的开源数据库中间件方案中，MySQL官方先是提供了MySQL Proxy，但MySQL Proxy一直没有正式GA，现在MySQL官方推荐MySQL Router。MySQL Router的主要功能有读写分离、故障自动切换、负载均衡、连接池等，其基本架构如下：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/c9/af/c9c7a3f3602a05d428484c571c1d4faf.jpg?wh=3311*2282\" alt=\"\" /></p>\n<p>奇虎360公司也开源了自己的数据库中间件Atlas，Atlas是基于MySQL Proxy实现的，基本架构如下：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/75/31/75058a4145bb78880faa4e9c74d9d031.png?wh=459*438\" alt=\"\" title=\"图片来源网络\" /></p>\n<p>以下是官方介绍，更多内容你可以参考<a href=\"https://github.com/Qihoo360/Atlas/wiki/Atlas%E7%9A%84%E6%9E%B6%E6%9E%84\">这里</a>。</p>\n<blockquote>\n<p>Atlas是一个位于应用程序与MySQL之间中间件。在后端DB看来，Atlas相当于连接它的客户端，在前端应用看来，Atlas相当于一个DB。Atlas作为服务端与应用程序通信，它实现了MySQL的客户端和服务端协议，同时作为客户端与MySQL通信。它对应用程序屏蔽了DB的细节，同时为了降低MySQL负担，它还维护了连接池。</p>\n</blockquote>\n<h2>小结</h2>\n<p>今天我为你讲了读写分离方式的原理，以及两个设计复杂度：复制延迟和分配机制，希望对你有所帮助。</p>\n<p>这就是今天的全部内容，留一道思考题给你吧，数据库读写分离一般应用于什么场景？能支撑多大的业务规模？</p>\n<p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>\n","neighbors":{"left":{"article_title":"13 | 架构设计流程：详细方案设计","id":7885},"right":{"article_title":"15 | 高性能数据库集群：分库分表","id":8373}},"comments":[{"had_liked":false,"id":10613,"user_name":"海。","can_delete":false,"product_type":"c1","uid":1107369,"ip_address":"","ucode":"9E96C12428D42D","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/a9/fea6a582.jpg","comment_is_top":false,"comment_ctime":1527611978,"is_pvip":false,"replies":[{"id":"3379","content":"赞同，并不是说一有性能问题就上读写分离，而是应该先优化，例如优化慢查询，调整不合理的业务逻辑，引入缓存等，只有确定系统没有优化空间后，才考虑读写分离或者集群","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527644985,"ip_address":"","comment_id":10613,"utype":1}],"discussion_count":7,"race_medal":0,"score":"1010844926538","product_id":100006601,"comment_content":"老师，您好<br>我个人的想法是可以加入缓存，例如注册后登录这种业务，可以在注册后加入数据库，并加入缓存，登录的时候先查缓存再查库表。<br>例如存入redis中并设置十分钟的过期时间。登录的时候先查redis，再查库表，如果redis中没有，说明就是过期的数据，这时候查从机就肯定存在了，希望能得到老师的点评，谢谢。","like_count":235,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418538,"discussion_content":"赞同，并不是说一有性能问题就上读写分离，而是应该先优化，例如优化慢查询，调整不合理的业务逻辑，引入缓存等，只有确定系统没有优化空间后，才考虑读写分离或者集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527644985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1650378,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","nickname":"菠萝吹雪—Code","note":"","ucode":"A5B2FC661EE17D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359145,"discussion_content":"个人愚见：\n（1）加入缓存肯定会增加系统复杂度，比如：数据一致性的问题。另外，缓存中存储的数据是什么？可能这个也需要考虑\n（2）“如果redis中没有，说明就是过期的数据，这时候查从机就肯定存在了”这句话中“肯定存在”我有疑惑，真肯定存在码？不一定吧， 网络延迟、同步链路故障","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1616122059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301099,"discussion_content":"redis挂了，刚才的从机没数据还是没解决。所以方案2从机没有查询主机没问题，只是api可以提供选项是否要查询主机，redis作为提速方案的确可以缓解这个问题。还有老师说的恶意攻击，直接访问主库解决不了，这个应该是要bloomfilter来抗。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598407056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1214246,"avatar":"https://static001.geekbang.org/account/avatar/00/12/87/26/eb0febef.jpg","nickname":"传证","note":"","ucode":"E5BC5C7BAAA8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570400,"discussion_content":"主从延迟的时间，可以设置redis 的key ，expire来抵消，发现有key,读主，没有读从","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651756293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2593173,"avatar":"","nickname":"Geek_c338d5","note":"","ucode":"4D1C27DB8C5CD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371387,"discussion_content":"可以在中间件路由算法做文章。在写入操作时做从机表读保护，涉及到读保护的表，强制到主机读;从机该表复制完成向中间件发送解保护指令，开放读，也可以设置可配置的读保护过期时间比如500毫秒或者5秒，到期后自动解锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619752082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2593173,"avatar":"","nickname":"Geek_c338d5","note":"","ucode":"4D1C27DB8C5CD8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371380,"discussion_content":"终极大招","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619751643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333128,"discussion_content":"好想法\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607437823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16536,"user_name":"tangfengr","can_delete":false,"product_type":"c1","uid":1170016,"ip_address":"","ucode":"46D604A9E783E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/60/d386a8a3.jpg","comment_is_top":false,"comment_ctime":1532012295,"is_pvip":false,"replies":[{"id":"5764","content":"赞同👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1532068365,"ip_address":"","comment_id":16536,"utype":1}],"discussion_count":7,"race_medal":0,"score":"469683447559","product_id":100006601,"comment_content":"我认为读写分离适用单机并发无法支撑并且读的请求更多的情形。在单机数据库情况下，表上加索引一般对查询有优化作用却影响写入速度，读写分离后可以单独对读库进行优化，写库上减少索引，对读写的能力都有提升，且读的提升更多一些。<br>不适用的情况:1如果并发写入特别高，单机写入无法支撑，就不适合这种模式。<br>2 通过缓存技术或者程序优化能够满足要求","like_count":109,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420834,"discussion_content":"赞同👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532068365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2242740,"avatar":"https://static001.geekbang.org/account/avatar/00/22/38/b4/1843033d.jpg","nickname":"lh","note":"","ucode":"F048C6C0C7E8EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339880,"discussion_content":"单独建索引，主从索引不一致，可能会增加维护成本。\n如果某些查询因为需要及时查询到，需要查询主库，但是主库刚好没有相应的索引，会影响查询性能。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609832233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333133,"discussion_content":"好思路, MySQL主从复制, 但是单独分别处理索引!","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607439270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100655,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cb/6f/c78ef1cf.jpg","nickname":"王二北","note":"","ucode":"D9090E28B3E1F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553796,"discussion_content":"分开建索引，是个思路，但也可能增大从库延迟的时间，因为从库也是重放主库同步过来的写日志，也会写数据，有索引写性能就会降低，延迟就会变长。另外如果要查主库的话由于没索引可能会比较慢，而且一些写操作由于没索引，可能会导致全表锁，写的性能可能更低。总之，看情况，看场景，分开建索引确实是个特定场景下的解决思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646100245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1959666,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e6/f2/f72e2399.jpg","nickname":"跫音","note":"","ucode":"E700CF1E8BCB15","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537480,"discussion_content":"独库单独建索引还真没想到，但是从句单独建索引公司的dba会支持吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639064195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170857,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erceWvmqarmrcPx527BdNkGMOQUgiaBz21XRySvJqxxN96Wt8CJUpR084LLE82ErX5UtkN9Chwib31A/132","nickname":"一句话说明白","note":"","ucode":"1284DCB3C6FBE6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409314,"discussion_content":"从节点还是要写入数据，从节点写入速度跟不上主节点，就导致主从延迟。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635416118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301102,"discussion_content":"原来可以分开建立索引，厉害了👍，真没想过😹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598407846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11582,"user_name":"LONGER","can_delete":false,"product_type":"c1","uid":1124431,"ip_address":"","ucode":"BA0AC3DC75167E","user_header":"https://static001.geekbang.org/account/avatar/00/11/28/4f/f028cab9.jpg","comment_is_top":false,"comment_ctime":1528212458,"is_pvip":false,"replies":[{"id":"3743","content":"按照2-8原则，选出占访问量80%的前20%的请求条件缓存，因为大部分人的查询不会每次都非常多条件，以手机为例，查询苹果加华为的可能占很大一部分","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528252119,"ip_address":"","comment_id":11582,"utype":1}],"discussion_count":5,"race_medal":0,"score":"323650759658","product_id":100006601,"comment_content":"目前还在用单机一直在扛着，目前数据量在百万万，在不停的优化，建立冗余等方式，还在保持着一个较快的查询速度，因为业务查询的关系，多表之间的关联，聚合，很难避免，一直想引用缓存，但是查询的条件太多，很动态，就不知道如何设计缓存，类似于京东筛选物品，多品类，多维度筛选，不知道大牛有何高见","like_count":75,"discussions":[{"author":{"id":1110782,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/fe/65412d8f.jpg","nickname":"Jaye","note":"","ucode":"DCF8275C70CE81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292913,"discussion_content":"这种情况可以考虑使用es做查询了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1595382946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418907,"discussion_content":"按照2-8原则，选出占访问量80%的前20%的请求条件缓存，因为大部分人的查询不会每次都非常多条件，以手机为例，查询苹果加华为的可能占很大一部分","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1528252119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1725691,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/54/fb/d533b03e.jpg","nickname":"Andy","note":"","ucode":"BDA2AEB353ECC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570947,"discussion_content":"你说这种筛选，首选就是es呀，然后才是缓存。哈哈现在是2022了，我应该来晚了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652003206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2853976,"avatar":"http://thirdwx.qlogo.cn/mmopen/uqaRIfRCAhJ6t1z92XYEzf5gNa2tpaKsXmsFqGOJNQ0TUV4ibfDlLDHMtLKJfTFOCIyemV09l7HVOaWe14qoF8nZn6iaP8WDQib/132","nickname":"粥恩John","note":"","ucode":"4948EBCF947D5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1725691,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/54/fb/d533b03e.jpg","nickname":"Andy","note":"","ucode":"BDA2AEB353ECC4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575948,"discussion_content":"捕获野生andy一枚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655204960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":570947,"ip_address":""},"score":575948,"extra":""},{"author":{"id":1725691,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/54/fb/d533b03e.jpg","nickname":"Andy","note":"","ucode":"BDA2AEB353ECC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2853976,"avatar":"http://thirdwx.qlogo.cn/mmopen/uqaRIfRCAhJ6t1z92XYEzf5gNa2tpaKsXmsFqGOJNQ0TUV4ibfDlLDHMtLKJfTFOCIyemV09l7HVOaWe14qoF8nZn6iaP8WDQib/132","nickname":"粥恩John","note":"","ucode":"4948EBCF947D5B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578328,"discussion_content":"哈哈😂我软件都是没通知的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656660961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":575948,"ip_address":""},"score":578328,"extra":""}]}]},{"had_liked":false,"id":63067,"user_name":"lee","can_delete":false,"product_type":"c1","uid":1198053,"ip_address":"","ucode":"CCBAD9B006DEB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/e5/13a352b3.jpg","comment_is_top":false,"comment_ctime":1548242377,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"250656345545","product_id":100006601,"comment_content":"SQL优化——缓存——读写分离——分库分表","like_count":58,"discussions":[{"author":{"id":1063970,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/22/9024c062.jpg","nickname":"庄墨寒","note":"","ucode":"BBD9EFA891BF06","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285495,"discussion_content":"还有一个维度 搜索引擎替代缓存","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1592843602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11263,"user_name":"性能","can_delete":false,"product_type":"c1","uid":1137192,"ip_address":"","ucode":"BBFA2A31B02B8F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyhbzdkFM64HvRATbWjc3hkic7icUszl9hU9hpIMZcibKH4wWam4SHfkcvM7MUoKjGDRrvYGXuvR91Q/132","comment_is_top":false,"comment_ctime":1528008918,"is_pvip":false,"replies":[{"id":"3622","content":"交易型业务缓存应用不多，缓存一般总在查询类业务上，你们的担心有一定必要","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528081427,"ip_address":"","comment_id":11263,"utype":1}],"discussion_count":3,"race_medal":0,"score":"186211602646","product_id":100006601,"comment_content":"我们做网银系统，用redis存了一些不太重要的数据，比如数据字典信息，作为缓存。但是不太敢把用户权限，交易数据等重要信息存在缓存里，因为redis并不保证事务，我们担心一旦缓存服务器宕机或者失败会影响银行业务。所以缓存的作用也不是很大，还是把大部分读数据的压力放到了数据库上，您说我们这种担心有必要吗？如果单库后续扛不住压力，是否读写分离比加缓存更好一些？","like_count":43,"discussions":[{"author":{"id":1959666,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e6/f2/f72e2399.jpg","nickname":"跫音","note":"","ucode":"E700CF1E8BCB15","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537485,"discussion_content":"核心数据不建议读写分离，这样还是会有延迟，所以很多银行都改用oracle来增加吞吐量","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1639064506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418771,"discussion_content":"交易型业务缓存应用不多，缓存一般总在查询类业务上，你们的担心有一定必要","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1528081427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066752,"avatar":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","nickname":"piboye","note":"","ucode":"7CFD8712857A85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301103,"discussion_content":"从库也有延迟，数据不一致，事务问题这里也没办法吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598408023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10495,"user_name":"侯海佳","can_delete":false,"product_type":"c1","uid":1099574,"ip_address":"","ucode":"F93617ECECF222","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/36/d6b338c1.jpg","comment_is_top":false,"comment_ctime":1527563969,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"100311811777","product_id":100006601,"comment_content":"我认为读写分离适合类似微博这种业务：读多写少","like_count":23},{"had_liked":false,"id":10415,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1527551459,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87426897379","product_id":100006601,"comment_content":"个人感觉，读写分离适合读压力比写压力大很多的业务类型，最终的瓶颈应该是出现在承担写操作的主机上，最大规模和这台主机的iops等能力相关","like_count":20},{"had_liked":false,"id":10614,"user_name":"彡工鸟","can_delete":false,"product_type":"c1","uid":1108881,"ip_address":"","ucode":"37867BF7151F33","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/91/12612612.jpg","comment_is_top":false,"comment_ctime":1527612402,"is_pvip":false,"replies":[{"id":"3378","content":"说法没错，但具体实施的时候要注意，不要一有压力就上读者分离，因为很多时候其实是sql语句或者业务逻辑有问题，因此先优化，只有优化后也无法满足要求的时候才考虑读者分离或者集群","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527644868,"ip_address":"","comment_id":10614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78837023730","product_id":100006601,"comment_content":"是否还应该加上一个，当单机写顶不住压力后，就可以做数据库拆分了，例如业务纵向拆分，连同数据库一起，就变成分布式服务，微服务了:)","like_count":18,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418539,"discussion_content":"说法没错，但具体实施的时候要注意，不要一有压力就上读者分离，因为很多时候其实是sql语句或者业务逻辑有问题，因此先优化，只有优化后也无法满足要求的时候才考虑读者分离或者集群","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527644868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13738,"user_name":"richey","can_delete":false,"product_type":"c1","uid":1003597,"ip_address":"","ucode":"4EC65BA051E1C5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/4d/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1529973367,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"74544417399","product_id":100006601,"comment_content":"TDDL已经长期不更新了，老师怎么不提一下Mycat","like_count":17,"discussions":[{"author":{"id":1155437,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a1/6d/a4ff33bb.jpg","nickname":"Lee","note":"","ucode":"0FF1C4EAF7F98A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540169,"discussion_content":"mycat有坑啊 现在不是shardingSphere","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639979196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11260,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1528006652,"is_pvip":false,"replies":[{"id":"3623","content":"默认读走从库，写走主库，特殊情况才由程序员制定，可以代码指定，可以配置指定，这样就不会出现大量sql都走主库了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528081539,"ip_address":"","comment_id":11260,"utype":1}],"discussion_count":2,"race_medal":0,"score":"70247483388","product_id":100006601,"comment_content":"公司现在的系统时采用读写分离的，是中间层程序封装的api，第一套分两类:1读主库,2.读从库.然后客户端程序通过传递SQL或存储过程和参数的值调用。<br>第二套只提供一个api,通过传递一个布尔值来判断是走主库还是从库，这套是供自动调度工具来调用。这两套api都有一个共同点，就程序猿必须手动指定是走主库还是从库。现在出现的问题是大量的SQL应该走从库，结果很多菜鸟都走了主库，导致现在的主库压力很大。听了你的课程后觉得走主库还是从库不应该由程序猿自己指定，而是由中间层来判断。具体如何做呢，请老师指点一下。客户端有时传递一些复杂的SQL,比如，先做更新然后再查。","like_count":16,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418770,"discussion_content":"默认读走从库，写走主库，特殊情况才由程序员制定，可以代码指定，可以配置指定，这样就不会出现大量sql都走主库了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1528081539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1918112,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","nickname":"ZHANGPING","note":"","ucode":"7108812981C996","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380870,"discussion_content":"可以考虑读写模块分离。由模块决定读主，还是读从。如果在一个事务中，先判断是否存在，再写入。则可能是先读从，后写主。事务执行会有问题。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624765996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10814,"user_name":"Up","can_delete":false,"product_type":"c1","uid":1032969,"ip_address":"","ucode":"3AACE765021AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/09/ee1b7ac0.jpg","comment_is_top":false,"comment_ctime":1527726102,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"61657268246","product_id":100006601,"comment_content":"读写分离，主从架构，顾名思义，写不变，主要解决高性能读的问题，所以适用场景自然是读多写少的情况。比如类似于博客、中小型朋友圈，这种一般写数据库后基本不变，但是很多人会去访问，频繁的读。我认为如果缓存能支撑的话就没必要上读写分离，相对来说缓存更简单。","like_count":14},{"had_liked":false,"id":10534,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1527585084,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"53067192636","product_id":100006601,"comment_content":"相比于前面的几篇高大上文章，这篇更接地气","like_count":12,"discussions":[{"author":{"id":2852989,"avatar":"","nickname":"聂健","note":"","ucode":"00277180C4D842","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588398,"discussion_content":"所以前面的我没看了直接快进到这","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663741003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162976,"user_name":"spoofer","can_delete":false,"product_type":"c1","uid":1768852,"ip_address":"","ucode":"6723F64ACC3F27","user_header":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","comment_is_top":false,"comment_ctime":1576636976,"is_pvip":false,"replies":[{"id":"63210","content":"我们要求线上delete每次不能超过1000条，超过就定时循环操作","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1577326677,"ip_address":"","comment_id":162976,"utype":1}],"discussion_count":4,"race_medal":0,"score":"48821277232","product_id":100006601,"comment_content":"前段时间，老大在大表上执行了delete操作，然后主从就不同步了。然后线上各种bug，最后我花了5分钟排查到了问题（运维团队比较小，我打杂的）。解决方式，线上业务部分限流，关键业务读写紧急切换到主库，修复主从不同步问题，切换回读写分离配置。最后发现是老大做了骚操作，一问才知道，是个日志表，清理一下。😂我。。。","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478193,"discussion_content":"我们要求线上delete每次不能超过1000条，超过就定时循环操作","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577326677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591663,"discussion_content":"『大表』指的是主表吗？如果是主表，删除了数据后，这些删除的数据也会同步到从表吧？为什么说数据不一致了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666753191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1377572,"avatar":"https://static001.geekbang.org/account/avatar/00/15/05/24/1cc3d337.jpg","nickname":"李坤","note":"","ucode":"66686DF9700A17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301229,"discussion_content":"同样 我们删除表数据都是多次delete小量删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598447636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1768852,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","nickname":"spoofer","note":"","ucode":"6723F64ACC3F27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1377572,"avatar":"https://static001.geekbang.org/account/avatar/00/15/05/24/1cc3d337.jpg","nickname":"李坤","note":"","ucode":"66686DF9700A17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367620,"discussion_content":"当时老大不知道这个，😃😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618408816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301229,"ip_address":""},"score":367620,"extra":""}]}]},{"had_liked":false,"id":20019,"user_name":"allen.huang","can_delete":false,"product_type":"c1","uid":1119789,"ip_address":"","ucode":"3D1F0996CE65C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/2d/2753369a.jpg","comment_is_top":false,"comment_ctime":1534215890,"is_pvip":false,"replies":[{"id":"6959","content":"面向用户的业务读写都用主，面向客户和运营的业务可以读写分离，大部分场景没必要看实时交易情况的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1534226846,"ip_address":"","comment_id":20019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48778856146","product_id":100006601,"comment_content":"老师您好，<br>像我们数据库服务器只有一台，并且现在业务量也越来越大，尤其是中午，晚上加起来大概是5，6个小时是业务高峰，订餐的量还挺大。前台读写操作都很频繁，<br>后来就是要看数据统计啊之类的，客户也是经常在使用。在业务高峰期，他们还要进去看实时交易情况。这样子经常会出现磁盘IO报警。<br>我也在尝试规划做读写分离，但是像业务前台做了以后，就会出现数据延时的情况，这样子业务处理就有问题。<br>我现在初步规划是前台都用主，后台读写分离，这样子是否合理，有经验的同学也给予我指导谢谢😜","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422065,"discussion_content":"面向用户的业务读写都用主，面向客户和运营的业务可以读写分离，大部分场景没必要看实时交易情况的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534226846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10662,"user_name":"rubin","can_delete":false,"product_type":"c1","uid":1007367,"ip_address":"","ucode":"F7081B45C3AF54","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5f/07/afa3f712.jpg","comment_is_top":false,"comment_ctime":1527641324,"is_pvip":false,"replies":[{"id":"3376","content":"要具体测试，不同业务复杂度不同","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527644692,"ip_address":"","comment_id":10662,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48772281580","product_id":100006601,"comment_content":"读写分离的前提是并发量大，单机已经不能处理该数量的并发请求了，想要解决问题就得做作拆分，于是有了读写分离，主库负责写，从库负责读，降低了同台机器并发请求，当读越来越多时，可扩充从库，写越来越多时，只好拆分业务或分库分表，如：注册功能，单独出来做一个注册的微服务，但还是会到达一个瓶颈，没做过，不知道能支持多少的并发？","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418557,"discussion_content":"要具体测试，不同业务复杂度不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527644692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10595,"user_name":"刘岚乔月","can_delete":false,"product_type":"c1","uid":1095289,"ip_address":"","ucode":"99A9AB4E4E1111","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/79/22e582a5.jpg","comment_is_top":false,"comment_ctime":1527605826,"is_pvip":false,"replies":[{"id":"3380","content":"当然是真的呀，难道我还会骗你不成？😂<br>如果不想用这种方式，用缓存是可以规避这个问题的，但其实这时候的方案就不是读写分离了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527645125,"ip_address":"","comment_id":10595,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48772246082","product_id":100006601,"comment_content":"请问 对于主从出现的数据同步延时问题 在实际生产落地 真的只有把重要的查询指向主吗 还有其他真正的落地方案吗","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418534,"discussion_content":"当然是真的呀，难道我还会骗你不成？😂\n如果不想用这种方式，用缓存是可以规避这个问题的，但其实这时候的方案就不是读写分离了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527645125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2387358,"avatar":"https://static001.geekbang.org/account/avatar/00/24/6d/9e/6a82a5ea.jpg","nickname":"good boby","note":"","ucode":"1471E2E499412C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361528,"discussion_content":"缓存也存在同样问题，如果是分布式缓存呢？也非常在高并发情况下，读的速度大于同步速度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616684271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16455,"user_name":"老邪","can_delete":false,"product_type":"c1","uid":1162660,"ip_address":"","ucode":"DACC50B0E3688E","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/a4/cf4744ce.jpg","comment_is_top":false,"comment_ctime":1531964639,"is_pvip":false,"replies":[{"id":"5707","content":"Libre office的Draw","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531967036,"ip_address":"","comment_id":16455,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40186670303","product_id":100006601,"comment_content":"你好，华仔，请问文章内的架构图用的什么软件，谢谢！","like_count":9,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420803,"discussion_content":"Libre office的Draw","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531967036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333140,"discussion_content":"Draw.io\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607440262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10837,"user_name":"@漆~心endless","can_delete":false,"product_type":"c1","uid":1103153,"ip_address":"","ucode":"8DB0BBE2188A1B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/31/b09432cc.jpg","comment_is_top":false,"comment_ctime":1527727236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35887465604","product_id":100006601,"comment_content":"并非所有系统都需要进行读写分离，正如之前讲得架构三原则，其中根据“合适原则”的规定，先确认系统的业务量是否出现了数据库的性能问题。如果是，首先通过优化MySQL语句等，如果还是达不到要求的性能指标，则需进行读写分离。毕竟读写分离会引入一系列不可预知的问题，如数据不同步。","like_count":8},{"had_liked":false,"id":10456,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1527555735,"is_pvip":false,"replies":[{"id":"3323","content":"是的，对代码逻辑有要求，","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527565805,"ip_address":"","comment_id":10456,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31592326807","product_id":100006601,"comment_content":"re: 写操作后的读操作指定发给数据库主服务器<br><br>后端无法知道本次请求是否为写操作之后的读，因此会依赖前端传递一个参数，如 target_db=master &#47; slave，来决定目标数据库。<br>所以这种方式，需要在前后端代码实现相关逻辑，代码耦合较大。<br><br>这种解决方案是否只提供了一种思路，实际开发时很少使用这方案，不知道理解是否正确，谢谢！","like_count":7,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418485,"discussion_content":"是的，对代码逻辑有要求，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527565805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122581,"user_name":"悠悠","can_delete":false,"product_type":"c1","uid":1041765,"ip_address":"","ucode":"A9B8EF7A275AEF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/65/cf1243f4.jpg","comment_is_top":false,"comment_ctime":1565428560,"is_pvip":false,"replies":[{"id":"45749","content":"如果是MySQL的话，索引和innodb buffer pool是关键，索引设计不对的话会慢，innodb buffer pool装不下所有数据会慢，但优化方案的话没有通用的，需要根据你们的业务来分析","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1565923866,"ip_address":"","comment_id":122581,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27335232336","product_id":100006601,"comment_content":"华仔，现在表数据500万-大小8g，大部分查询这表sql性能差，怎么测试是不是数量导致的性能下降，还是其他原因导致的。怎么测是分表还是分区性能提高，如数据量增加是不是分表，如改架构是不是把一部分数据放到mongo或是pg数据库里。","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462317,"discussion_content":"如果是MySQL的话，索引和innodb buffer pool是关键，索引设计不对的话会慢，innodb buffer pool装不下所有数据会慢，但优化方案的话没有通用的，需要根据你们的业务来分析","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565923866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10574,"user_name":"刘志刚","can_delete":false,"product_type":"c1","uid":1102108,"ip_address":"","ucode":"2EDEA464124639","user_header":"https://static001.geekbang.org/account/avatar/00/10/d1/1c/f6e95d1d.jpg","comment_is_top":false,"comment_ctime":1527600527,"is_pvip":false,"replies":[{"id":"3383","content":"赞，先优化","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527645298,"ip_address":"","comment_id":10574,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27297404303","product_id":100006601,"comment_content":"读写分离比较适用于类似消息记录，对于写和读业务的强实时性要求不到苛刻的地步的情况，而且做的时候这种跟业务量还是有比较大关系的，比如，业务量的订单量每年都不超过1千万，整天去做分库分表倒不如好好优化下sql写法，如果订单量每天都超过好几百万，那这个必要性就很强了！","like_count":6,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418529,"discussion_content":"赞，先优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527645298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259156,"avatar":"https://static001.geekbang.org/account/avatar/00/13/36/94/0b969588.jpg","nickname":"青年祭司","note":"","ucode":"C88EDAE3FF09AE","race_medal":5,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393541,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631492820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95672,"user_name":"亚东","can_delete":false,"product_type":"c1","uid":1207629,"ip_address":"","ucode":"D76E7F593D6CBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/4d/ada0aa8a.jpg","comment_is_top":false,"comment_ctime":1558139895,"is_pvip":false,"replies":[{"id":"34417","content":"《高性能MySQL》","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1558353891,"ip_address":"","comment_id":95672,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23032976375","product_id":100006601,"comment_content":"老师，如何优化慢查询？","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450552,"discussion_content":"《高性能MySQL》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558353891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10559,"user_name":"马广乐","can_delete":false,"product_type":"c1","uid":1105296,"ip_address":"","ucode":"66BD74C9C6D75C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUHvicvia3fpBbahB1r7QOnrnwZaZOVXYnibKGyYbzQJibbrts4niardQ7JUyxJLeSsJmsCZBf6N7aEtg/132","comment_is_top":false,"comment_ctime":1527595844,"is_pvip":false,"replies":[{"id":"3387","content":"可以的，但那是另外一个方案了，很多场景就算用了缓存也要读写分离","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527645494,"ip_address":"","comment_id":10559,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23002432324","product_id":100006601,"comment_content":"加个缓存能解决写完立即读的场景吗，老师。","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418525,"discussion_content":"可以的，但那是另外一个方案了，很多场景就算用了缓存也要读写分离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527645494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10435,"user_name":"王磊","can_delete":false,"product_type":"c1","uid":1050085,"ip_address":"","ucode":"A4DE9804642A08","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/e5/aa579968.jpg","comment_is_top":false,"comment_ctime":1527553835,"is_pvip":false,"replies":[{"id":"3326","content":"现在的数据库，写阻塞读是比较少了，你了解一下MVCC之类的机制，主要还是单台服务器撑不住性能要求","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527566122,"ip_address":"","comment_id":10435,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23002390315","product_id":100006601,"comment_content":"华仔，这样理解对吗?<br>读写分离的原因是同一个表的读写操作往往是阻塞的(事务隔离级别中的可重复读和串行)，因此如果数据库有较多的更新和插入操作，并且影响了读操作，这时应该考虑读写分离。<br>但是数据库复制时，是否一样会对从机的读操作阻塞?","like_count":5,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418478,"discussion_content":"现在的数据库，写阻塞读是比较少了，你了解一下MVCC之类的机制，主要还是单台服务器撑不住性能要求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527566122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302077,"user_name":"万历十五年","can_delete":false,"product_type":"c1","uid":1122150,"ip_address":"","ucode":"3D8CF5DF847AE8","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","comment_is_top":false,"comment_ctime":1626067975,"is_pvip":false,"replies":[{"id":"109327","content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1626138810,"ip_address":"","comment_id":302077,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18805937159","product_id":100006601,"comment_content":"对于已有系统的升级路线是“SQL优化——缓存——读写分离——分库分表”；对于新系统，还是要一开始就要在设计阶段考虑性能问题","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523171,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626138810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268668,"user_name":"黑洞","can_delete":false,"product_type":"c1","uid":1451364,"ip_address":"","ucode":"840A4330B1B2F0","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/64/d66ea739.jpg","comment_is_top":false,"comment_ctime":1608286760,"is_pvip":false,"replies":[{"id":"97506","content":"正解👍","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1608370242,"ip_address":"","comment_id":268668,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18788155944","product_id":100006601,"comment_content":"适合单点数据库无法承载大并发量的读写请求，并且是读多写少的应用，使用读写分离是合适的。当然真正实施前，必须先优化读写性能加cache等，如果实在优化也无法满足业务增长的需要，再上读写分离。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512005,"discussion_content":"正解👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608370242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41082,"user_name":"Cest la vie","can_delete":false,"product_type":"c1","uid":1246987,"ip_address":"","ucode":"6017B81F4321BA","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/0b/a33982a5.jpg","comment_is_top":false,"comment_ctime":1542723110,"is_pvip":false,"replies":[{"id":"14751","content":"跨这么远的距离做主从复制，延迟是必然的，提交信息后刷新属于session关联操作，应该都访问上海主库。<br><br>too many connection出现在数据库上，很可能是短链接导致的，备机不可能占这么多连接数吧","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1542725434,"ip_address":"","comment_id":41082,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18722592294","product_id":100006601,"comment_content":"来晚了，最近才定的，回复不知道能不能看到。<br>现在我们网站架构用的也是makara实现MySQL读写分离，引入的目的是为了解决异地访问数据库慢的问题，即主服务在上海，成都的用户来访问的时候，数据库读取非常慢，于是在成都搭了多个slave mysql用来处理成都的读操作，写操作还是到上海。<br>带来的问题：<br>1. 经常也会出现成都用户提交信息后，刷新网页会报404的问题，即主从写同步延迟的问题，目前未采取任何措施来解决这个问题<br>2. 还有个问题是随着slave的增多，主数据库的连接数老是超，报too many connections，主服务设置了最大连接数为2000，现在也在梳理每台机器的连接数，没有好的解决方案","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429694,"discussion_content":"跨这么远的距离做主从复制，延迟是必然的，提交信息后刷新属于session关联操作，应该都访问上海主库。\n\ntoo many connection出现在数据库上，很可能是短链接导致的，备机不可能占这么多连接数吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542725434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10478,"user_name":"大光头","can_delete":false,"product_type":"c1","uid":1041792,"ip_address":"","ucode":"8EF797AFD1E27C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo3DrWeV7ZwRLXrRZg4V3ic1LQYdZ3u1oicDhqPic47vMguvf5QS69roTiaJrwDr5Re3Sy2UyHDWwmsTA/132","comment_is_top":false,"comment_ctime":1527558340,"is_pvip":false,"replies":[{"id":"3327","content":"事实上大部分业务场景可能并不需要读写分离😃","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527566209,"ip_address":"","comment_id":10478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18707427524","product_id":100006601,"comment_content":"大部分业务场景都适合，因为基本上都是读多写少，又要应付大规模的访问。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418493,"discussion_content":"事实上大部分业务场景可能并不需要读写分离😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527566209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10419,"user_name":"姜泮昌","can_delete":false,"product_type":"c1","uid":1107213,"ip_address":"","ucode":"89B63270BAE099","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/0d/b4258141.jpg","comment_is_top":false,"comment_ctime":1527552392,"is_pvip":false,"replies":[{"id":"3389","content":"天下没有免费的午餐😃","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527645639,"ip_address":"","comment_id":10419,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18707421576","product_id":100006601,"comment_content":"读写分离适用于单服务器无法满足所有请求的场景，从请求类型的角度对服务器进行拆分，但这样在要求硬件资源能够支撑的同时，对代码实现也有更高的要求。","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418473,"discussion_content":"天下没有免费的午餐😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527645639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":128120,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1566833310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14451735198","product_id":100006601,"comment_content":"我认为性能优化的原则如下：<br>1：只让干的快的干<br>2：让干的快的多干，干的慢的少干<br>3：还干不完，就加人手，分活参考1&#47;2<br><br>读写分离，属于加人手，并且各司其职，一端负责写另一端负责读，这样压力必然会分散一些，不过天下没有免费的午餐，引入的新问题就是主从延迟，延迟必然存在要么忍，要么弄得复杂一些，写后读主&#47;从读不到再读主&#47;数据再分阶，重要的读主次要的读从&#47;加缓存，当然，能优化就优化，能不分就不分，分后太麻烦啦！","like_count":3},{"had_liked":false,"id":105608,"user_name":"天下行走","can_delete":false,"product_type":"c1","uid":1462449,"ip_address":"","ucode":"73A4CD8BB91235","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLfrbMvhKQYhxP6ziaHaj4KUNRzst8u7BZsWUsazK8oTLXcNH6sDGITl6icy3IiaGFe9Iiae12LuTrF1g/132","comment_is_top":false,"comment_ctime":1561040836,"is_pvip":false,"replies":[{"id":"38273","content":"MySQL自己做了，binlog有不同格式，row, mixed, statement三类","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1561088712,"ip_address":"","comment_id":105608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14445942724","product_id":100006601,"comment_content":"有个问题请教一下，主机同步到从机，这里也设计写，那应该用批量删除再插入，还是update by 。我的理解主从情况下应该数据量非常大，感觉批量插入还比较靠谱","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454739,"discussion_content":"MySQL自己做了，binlog有不同格式，row, mixed, statement三类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561088712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42151,"user_name":"asura","can_delete":false,"product_type":"c1","uid":1105148,"ip_address":"","ucode":"4AF66C19B4AE65","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/fc/5c3ad841.jpg","comment_is_top":false,"comment_ctime":1542931928,"is_pvip":false,"replies":[{"id":"15166","content":"优选apache项目😄","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1542956458,"ip_address":"","comment_id":42151,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14427833816","product_id":100006601,"comment_content":"用Sharding-Sphere也是一个不错的选择，选择读写中间件老师更推荐哪个？","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429998,"discussion_content":"优选apache项目😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542956458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2791739,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/99/3b/acbc0986.jpg","nickname":"记忆不寒凉","note":"","ucode":"AC1D0AA0740803","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409991,"discussion_content":"这个不就是apache的吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635564825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2899712,"avatar":"","nickname":"Geek_eb5229","note":"","ucode":"B8568022DB3123","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2791739,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/99/3b/acbc0986.jpg","nickname":"记忆不寒凉","note":"","ucode":"AC1D0AA0740803","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548090,"discussion_content":"遇事不决apache","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1643026980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409991,"ip_address":""},"score":548090,"extra":""}]}]},{"had_liked":false,"id":31479,"user_name":"刘鹏","can_delete":false,"product_type":"c1","uid":1230417,"ip_address":"","ucode":"44F3D4DB3F5678","user_header":"https://static001.geekbang.org/account/avatar/00/12/c6/51/e39b5828.jpg","comment_is_top":false,"comment_ctime":1539216860,"is_pvip":false,"replies":[{"id":"11572","content":"所以要看业务上数据更新频率和不一致的容忍度","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1539358241,"ip_address":"","comment_id":31479,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14424118748","product_id":100006601,"comment_content":"用缓存来保证主从一致性的时候，主从同步的延迟时间设置为缓存的过期时间，但是主从同步的延迟时间是和数据量有关的，这样如果设置过期时间太长，主从就没有意义了，有点疑惑这种方案的应用场景","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426361,"discussion_content":"所以要看业务上数据更新频率和不一致的容忍度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539358241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11332,"user_name":"W_T","can_delete":false,"product_type":"c1","uid":1044071,"ip_address":"","ucode":"1A78F28537E138","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/67/c146c144.jpg","comment_is_top":false,"comment_ctime":1528075266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14412977154","product_id":100006601,"comment_content":"从数据库读写的角度分类，一共有四类：写多读多，写少读少，写多读少，写少读多。<br>写少读少的情况，不需要分离。<br>写多的情况，单个库写入会造成单点压力，分库写入，那其实就是分库分表了。<br>所以我认为，读写分离的设计适用于写少读多的情况。<br>至于业务量，读可以不断水平扩展，主要还是受写的限制。<br>","like_count":3},{"had_liked":false,"id":10474,"user_name":"yushing","can_delete":false,"product_type":"c1","uid":1108112,"ip_address":"","ucode":"244C58F218D586","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/90/d63f8347.jpg","comment_is_top":false,"comment_ctime":1527557971,"is_pvip":false,"replies":[{"id":"3321","content":"黑客暴力破解的时候是尝试性的，很多账号或者信息不存在","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527565698,"ip_address":"","comment_id":10474,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14412459859","product_id":100006601,"comment_content":"请问为什么黑客破解账号，会导致大量的二次读取操作呢？大部分帐号在从机中也有吧，怎么还会二次读取呢？","like_count":3,"discussions":[{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378340,"discussion_content":"有点类似 缓存穿透","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623165830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325641,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1516046,"ip_address":"","ucode":"1A52A00A0A6610","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIkkg9icSGleYMAnwlb7A9MMJYOdovl8kOCA0asMkDe6grPNF74ib0prQMicicJTNa1WsdpMJ4p1CWkUQ/132","comment_is_top":false,"comment_ctime":1639056385,"is_pvip":false,"replies":[{"id":"118142","content":"这个有点重的设计了，再说你两个集群也不能防止一定不同时gc呀，这个方案我觉得优化hbase的配置，降低full gc影响更好，java 8的G1以及后来的ZGC，full gc延迟方面都很优秀的。","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1639059906,"ip_address":"","comment_id":325641,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10228990977","product_id":100006601,"comment_content":"我们有个项目用hbase做数据库，在遇到full gc时有明显的停顿，影响在线调用，解决方案是采用双主的架构，2个集群的配置还不一样，防止同时gc，一个请求来时同时请求两个hbase，取先返回的那个。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537439,"discussion_content":"这个有点重的设计了，再说你两个集群也不能防止一定不同时gc呀，这个方案我觉得优化hbase的配置，降低full gc影响更好，java 8的G1以及后来的ZGC，full gc延迟方面都很优秀的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639059906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247262,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1447283,"ip_address":"","ucode":"708042A35424DC","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/73/e5e4b245.jpg","comment_is_top":false,"comment_ctime":1599642739,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10189577331","product_id":100006601,"comment_content":"先从读写分离的定义下手。<br>读写分离，就是将访问的压力分拆到集群上各个节点上，而存储的压力则集中于主机之上，并未降低，反而增大。<br>鄙人以为，根据读写定义，在现实世界中，应用相对较多，我们社会大部分场景都是读多写少，诸如微博、朋友圈、电商、视频等等。<br>对于业务规模，依然从读写分离的定义和组成下手，访问是分散的，而存储是集中的。<br>从写的角度思考，一主多从的情况，再厉害的单台主机，并发操作始终是有上限的，假设当前所有的操作都是写操作，那么，此时的单台主机的最大并发量就是集群的最大业务规模。<br>从读的角度思考，访问是分散的，假设当前所有的操作都是读操作，那么，此时集群的业务规模理论上应当是单台机器的最大并发量乘以所有机器数，考虑到实际情况会有“折损”，故再乘以0.7，则为实际最大业务规模","like_count":2},{"had_liked":false,"id":246940,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1599535222,"is_pvip":true,"replies":[{"id":"91158","content":"写多读少用基于LSM数据结构的系统来做，你有兴趣可以看看LevelDB，HBase的实现原理","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1599983386,"ip_address":"","comment_id":246940,"utype":1}],"discussion_count":1,"race_medal":2,"score":"10189469814","product_id":100006601,"comment_content":"读写分离首先还是得考虑业务上是否能够接受延迟，如果对于实时性不敏感，而且业务量不是特别大，那么是不是可以等到主从复制之后，再允许读取新写入的数据即可？<br><br>如果实时性要求比较高，那么采用第 3 种方法（关键业务读写操作全部指向主机）的变体，在一定时间内对于消息的读写操作指向主机，完成主从复制之后，改为读从机。<br><br>这个办法的缺点在于需要一个时间戳或者标志位来判断主从复制是否完成，优点是在一定程度上可以降低主机的压力。<br><br>再分配机制上，我倾向于按照演化原则，先使用数据访问层实现读写分离，如果业务需要，再升级为中间件封装。但是中间件封装，又有可能带来单点故障或者瓶颈，如果业务蓬勃发展的话，可能还得演化成中间件集群。<br><br>看到留言里面有同学说读写分离比较适合读多写少的场景，用来解决高性能读的问题，的确是这样，如果反之，写多读少，那么又该如何优化？我能想到的是先写到缓存，然后再刷盘，但是可靠性上似乎没法保证。<br><br>另外一个有价值的点在于，先考虑优化（加缓存），实在不行了再考虑读写分离，读写分离一定会带来复杂度。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505266,"discussion_content":"写多读少用基于LSM数据结构的系统来做，你有兴趣可以看看LevelDB，HBase的实现原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599983386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231653,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1162519,"ip_address":"","ucode":"C7181355C741AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/17/dc1eab6c.jpg","comment_is_top":false,"comment_ctime":1593743200,"is_pvip":false,"replies":[{"id":"85852","content":"是的，写文章的时候这两个还不是太出名所以没列","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1594046421,"ip_address":"","comment_id":231653,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10183677792","product_id":100006601,"comment_content":"数据库中间件功能强大的成熟方案还有MyCaT，shardingsphere","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500393,"discussion_content":"是的，写文章的时候这两个还不是太出名所以没列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594046421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226777,"user_name":"陈先生（Ken）","can_delete":false,"product_type":"c1","uid":2010662,"ip_address":"","ucode":"D230F607C4A3DA","user_header":"https://static001.geekbang.org/account/avatar/00/1e/ae/26/a69ee5f3.jpg","comment_is_top":false,"comment_ctime":1592202336,"is_pvip":false,"replies":[{"id":"83683","content":"看场景，不要一刀切，你说的这种方式可能导致内存占用很高（因为要读取大量数据到内存），cpu很高（要循环遍历很多数据）！通常情况下，优先使用数据库的能力，当发现性能瓶颈时再考虑各种优化手段","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1592303203,"ip_address":"","comment_id":226777,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10182136928","product_id":100006601,"comment_content":"老师，关于中间件处理读写分离，我突然想起有些人在教学demo数据访问层全单表CURD，到了业务层再合并处理，不用join表，此方式到底对还是不对？（有点离题，不好意思）","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498360,"discussion_content":"看场景，不要一刀切，你说的这种方式可能导致内存占用很高（因为要读取大量数据到内存），cpu很高（要循环遍历很多数据）！通常情况下，优先使用数据库的能力，当发现性能瓶颈时再考虑各种优化手段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592303203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84141,"user_name":"秦岭","can_delete":false,"product_type":"c1","uid":1103644,"ip_address":"","ucode":"E4C324C08A9DA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/1c/f539a8aa.jpg","comment_is_top":false,"comment_ctime":1554792713,"is_pvip":false,"replies":[{"id":"31434","content":"很不错","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1555598536,"ip_address":"","comment_id":84141,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10144727305","product_id":100006601,"comment_content":"shardingsphere怎么样?貌似要进apache了","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446261,"discussion_content":"很不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555598536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80797,"user_name":"胡萝卜","can_delete":false,"product_type":"c1","uid":1056926,"ip_address":"","ucode":"306139A86C182D","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/9e/3278e1d8.jpg","comment_is_top":false,"comment_ctime":1553735405,"is_pvip":false,"replies":[{"id":"30115","content":"读写分离也不简单，很多坑，数据库锁导致阻塞问题要看具体情况，有的是SQL没写好，有的是数据库压力太大","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1554537197,"ip_address":"","comment_id":80797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10143669997","product_id":100006601,"comment_content":"老师，能不能具体说说，读写分离和缓存这两种方案的区别呢？<br><br>我认为缓存支持的并发量更高，但是也更复杂，读写分离要简单一些<br>另外读写分离能解决一些数据库锁导致的阻塞问题，但我觉得这不是主要问题，这种问题更应该通过sql优化 ","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444977,"discussion_content":"读写分离也不简单，很多坑，数据库锁导致阻塞问题要看具体情况，有的是SQL没写好，有的是数据库压力太大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554537197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34682,"user_name":"向阳","can_delete":false,"product_type":"c1","uid":1179030,"ip_address":"","ucode":"DBBE3042938CEE","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/96/44641d9e.jpg","comment_is_top":false,"comment_ctime":1540258467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10130193059","product_id":100006601,"comment_content":"看评论区有说主备支持读写分离，然后索引维护可以备库独立维护，这个可以嘛？oracle主备索引不都是一致的嘛？","like_count":2},{"had_liked":false,"id":20676,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1534662014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10124596606","product_id":100006601,"comment_content":"读写分离适用的场景：单机数据库不能支持业务的读写规模，所以写和读分离。但写的规模不能高于单机数据库支持的规模；读规模可以横向扩展，但也不是无限的，因为数据库复制工具也需要从数据复制数据到从库，复制工具复制频率根据业务决定。","like_count":2},{"had_liked":false,"id":18091,"user_name":"林敏健","can_delete":false,"product_type":"c1","uid":1101426,"ip_address":"","ucode":"EF0CE23273878C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/72/638a2804.jpg","comment_is_top":false,"comment_ctime":1533126376,"is_pvip":false,"replies":[{"id":"6375","content":"proxy可以实现从库读取不到读主库的逻辑，程序可以不关注","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1533203109,"ip_address":"","comment_id":18091,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10123060968","product_id":100006601,"comment_content":"关键业务读写主库，或者从库读取不到就再读一次主库，但是这样需要hardcode。<br><br>如果使用mysql proxy或者mysql router或者mycat屏蔽了后面的主从库，那程序都不知道谁是主库了，上面的方案貌似都没用了。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421387,"discussion_content":"proxy可以实现从库读取不到读主库的逻辑，程序可以不关注","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533203109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12200,"user_name":"Geek_59a17f","can_delete":false,"product_type":"c1","uid":1119733,"ip_address":"","ucode":"61D49D5983AD3E","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/f5/4fb5284b.jpg","comment_is_top":false,"comment_ctime":1528681233,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10118615825","product_id":100006601,"comment_content":"高性能数据库集群的第一种方式是“读写分离”，其本质是将访问压力分散到集群中的多个节点，但是没有分散存储压力；第二种方式是“分库分表”，既可以分散访问压力，又可以分散存储压力。先来看看“读写分离”，下一期我再介绍“分库分表”。","like_count":2},{"had_liked":false,"id":12112,"user_name":"gesanri","can_delete":false,"product_type":"c1","uid":1121174,"ip_address":"","ucode":"AE3B97DC3ED668","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELtOO0HKrj5SI5JSlmwiaCvaF6GLiaTmf5NX88OZaO3HymTAGTeIoicBUjqzmMF6sF5raPFjuqLFibrrw/132","comment_is_top":false,"comment_ctime":1528595498,"is_pvip":false,"replies":[{"id":"3965","content":"是的，程序代码实现的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528615648,"ip_address":"","comment_id":12112,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10118530090","product_id":100006601,"comment_content":"我们系统也用到了读写分离，不过我们读写的分配就是访问的数据源不同，读是一个数据源，写是另一个数据源，不知道和文章中说的分配原则是什么区别，就是文章中说的第一种hibernate实现的吗？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419121,"discussion_content":"是的，程序代码实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528615648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11746,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1528334815,"is_pvip":false,"replies":[{"id":"3798","content":"如果时效性不是关键，一般都先上缓存，缓存是缓存sql查询的结果，数据库备机只是备份了表数据，实际的sql查询执行时间少不了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528340941,"ip_address":"","comment_id":11746,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10118269407","product_id":100006601,"comment_content":"请问下，数据库读写分离对比主库+缓存的优势在哪里？<br>因为考虑到缓存最大的问题就是数据时效性，但其实这个问题从库也有，而且从库有多久的延迟完全无法把握。更不说缓存的响应时间比从库快很多。<br>似乎选主从最大的优势就是：简单，不需要怎么开发。业务有一定的读压力时使用。<br>希望解惑","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418979,"discussion_content":"如果时效性不是关键，一般都先上缓存，缓存是缓存sql查询的结果，数据库备机只是备份了表数据，实际的sql查询执行时间少不了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528340941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11541,"user_name":"_fenghao_","can_delete":false,"product_type":"c1","uid":1019099,"ip_address":"","ucode":"ECDAB9FF15BF72","user_header":"","comment_is_top":false,"comment_ctime":1528188881,"is_pvip":false,"replies":[{"id":"3755","content":"没有好的办法😃","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528253708,"ip_address":"","comment_id":11541,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10118123473","product_id":100006601,"comment_content":"我想问无论主从、主备都需要时间，秒级，如果主挂了，那么这段时间的数据就丢失了。有好的办法吗？要求备写完返回又耗费性能","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418889,"discussion_content":"没有好的办法😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528253708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10543,"user_name":"侯佳林","can_delete":false,"product_type":"c1","uid":1014973,"ip_address":"","ucode":"1C06FFB6A78A28","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/bd/b634fdd1.jpg","comment_is_top":false,"comment_ctime":1527588589,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10117523181","product_id":100006601,"comment_content":"主服务器充当业务的写服务器、从服务器的读服务器，如果从服务器较多，单台写服务器的压力会很大","like_count":2},{"had_liked":false,"id":10453,"user_name":"LEON","can_delete":false,"product_type":"c1","uid":1109922,"ip_address":"","ucode":"58F7AF5302FCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/a2/6ea5bb9e.jpg","comment_is_top":false,"comment_ctime":1527555620,"is_pvip":true,"replies":[{"id":"3325","content":"1. 客户端程序用代码写的，可以为所欲为😂<br>2. 中间件并不是性能上有优势，而是可以跨语言夸系统复用，大公司才有实力做","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527566051,"ip_address":"","comment_id":10453,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10117490212","product_id":100006601,"comment_content":"您好，请问如果没有数据库中间件，通过客户端程序的方式直接与数据库交互。客户端程序是不是只能指定一个写一个读。不能制定多个读？另外业务到达多大基线的时候需要引入数据库中间件？谢谢老师回复。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418483,"discussion_content":"1. 客户端程序用代码写的，可以为所欲为😂\n2. 中间件并不是性能上有优势，而是可以跨语言夸系统复用，大公司才有实力做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527566051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296303,"user_name":"AAA_叶子","can_delete":false,"product_type":"c1","uid":1325994,"ip_address":"","ucode":"1E93617D308EE0","user_header":"https://static001.geekbang.org/account/avatar/00/14/3b/aa/e8dfcd7e.jpg","comment_is_top":false,"comment_ctime":1622891897,"is_pvip":false,"replies":[{"id":"107529","content":"没有银弹，单表查询，代码中做join，可扩展性也并不好，实现复杂度还高","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1622940493,"ip_address":"","comment_id":296303,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5917859193","product_id":100006601,"comment_content":"最近经常听人提到说是 “尽量避免链表查询，多采用单表查询的方式，方便扩展“。不知道老师对这个观点怎么看的？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521389,"discussion_content":"没有银弹，单表查询，代码中做join，可扩展性也并不好，实现复杂度还高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622940493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2899712,"avatar":"","nickname":"Geek_eb5229","note":"","ucode":"B8568022DB3123","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548092,"discussion_content":"我觉得还耗内存与cpu\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643027275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266878,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1607513992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5902481288","product_id":100006601,"comment_content":"● 高性能mysql数据库集群<br>○ 第一招：读写分离<br>        缺点：<br>        ● 没有分担存储压力，因为主从存在同步。<br>        ● 主从同步存在延迟。<br>        主从延迟的解决办法：<br>          ● 写后的读操作发送给主服务器。<br>          ● 二次读取：读从失败之后，读取一次主机。<br>          ● 关键业务全部指向主机，非关键业务读写分离。<br>○ 第二招：分库分表<br><br>● 分配方案<br>    ● 数据库访问中间件。如：mycat<br>    ● 程序代码封装。如sharding-jdbc<br>","like_count":1},{"had_liked":false,"id":244135,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1598407717,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5893375013","product_id":100006601,"comment_content":"都写分离主要是应对写少读多的全量信息。非全量的热点数据可以靠redis这类缓存来解决。业务多个地方要mysql的数据，都访问主库压力大如果可以容忍一定延时，并且需要全量数据的情况，从库更合适。老师，不知道这样理解对？","like_count":1},{"had_liked":false,"id":233113,"user_name":"M1racle","can_delete":false,"product_type":"c1","uid":1057144,"ip_address":"","ucode":"CFA981F34AFDA8","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/78/732a2e33.jpg","comment_is_top":false,"comment_ctime":1594219579,"is_pvip":true,"replies":[{"id":"86177","content":"是的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1594346570,"ip_address":"","comment_id":233113,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889186875","product_id":100006601,"comment_content":"读写分离在读写比例差异很大的时候很有用，分别扩容很容易，支撑多少在不分库分表的情况下取决于单表极限吧。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500899,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594346570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231325,"user_name":"蓝魔丶","can_delete":false,"product_type":"c1","uid":1219438,"ip_address":"","ucode":"2AE4359E263558","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","comment_is_top":false,"comment_ctime":1593652725,"is_pvip":false,"replies":[{"id":"85854","content":"是的，要判断是关键还是非关键业务","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1594046480,"ip_address":"","comment_id":231325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5888620021","product_id":100006601,"comment_content":"老师，关键业务走主机，非关键业务走从机，这还是需要对业务代码有侵入吧？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500260,"discussion_content":"是的，要判断是关键还是非关键业务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594046480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178961,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1581863746,"is_pvip":false,"replies":[{"id":"69938","content":"主备的配置是中间件管理的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1582191642,"ip_address":"","comment_id":178961,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5876831042","product_id":100006601,"comment_content":"mysql主从切换后，中间件应当感知到谁是新主，谁是从，从而提供正常功能，由此可见mysql主从结构下不能在代码中配置主从数据库地址。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484039,"discussion_content":"主备的配置是中间件管理的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582191642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178755,"discussion_content":"👌","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582194775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155597,"user_name":"🄽🄸🅇🅄🅂","can_delete":false,"product_type":"c1","uid":1000060,"ip_address":"","ucode":"853763C229A5AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","comment_is_top":false,"comment_ctime":1574725304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5869692600","product_id":100006601,"comment_content":"有见到过一些网站，注册后就默认已登录状态的，感觉这样处理也很合理，就是数据提交后，如果写入成功，则直接把提交的数据返回","like_count":1},{"had_liked":false,"id":114450,"user_name":"随风而逝","can_delete":false,"product_type":"c1","uid":1447169,"ip_address":"","ucode":"4E4D46905697AB","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/01/927d96e5.jpg","comment_is_top":false,"comment_ctime":1563320808,"is_pvip":false,"replies":[{"id":"41829","content":"你为啥不用读写分离呢？<br>当然，前提看你遇到了什么问题，千万级的表在不同的业务场景下问题不一样","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1563356076,"ip_address":"","comment_id":114450,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5858288104","product_id":100006601,"comment_content":"老师，虽然专栏结束了，我们现在单表数据到了千万级别，如果不用读写分离有什么其他好的方案吗？希望得到回复，谢谢！","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458668,"discussion_content":"你为啥不用读写分离呢？\n当然，前提看你遇到了什么问题，千万级的表在不同的业务场景下问题不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563356076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111048,"user_name":"Vicente","can_delete":false,"product_type":"c1","uid":1067936,"ip_address":"","ucode":"6A5D34F72DF059","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/a0/3fa531e5.jpg","comment_is_top":false,"comment_ctime":1562432254,"is_pvip":true,"replies":[{"id":"40570","content":"师傅领进门，我也不是什么都懂的，关键是教你方法😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1562555646,"ip_address":"","comment_id":111048,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857399550","product_id":100006601,"comment_content":"程序代码封装方案没有提到 Sharding-JDBC，中间件封装没有提到 MyCat，可惜了，这两种是比较主流的方案。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457198,"discussion_content":"师傅领进门，我也不是什么都懂的，关键是教你方法😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562555646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083395,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/03/805c8e0e.jpg","nickname":"追忆似水年华","note":"","ucode":"FB6C3EDC6988B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2469,"discussion_content":"mycat就算了，sharding-jdbc已经被封装进了叫sharding-sphere里了，这个框架功能更加强大，地址https://shardingsphere.apache.org","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563679904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109796,"user_name":"@","can_delete":false,"product_type":"c1","uid":1098690,"ip_address":"","ucode":"AC8227752777D8","user_header":"https://static001.geekbang.org/account/avatar/00/10/c3/c2/5ff554d9.jpg","comment_is_top":false,"comment_ctime":1562115337,"is_pvip":false,"replies":[{"id":"39887","content":"可以的，但是要考虑DNS缓存带来的问题","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1562193630,"ip_address":"","comment_id":109796,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857082633","product_id":100006601,"comment_content":"主从发生切换，则可能需要所有系统都修改配置并重启；这里是否可以使用域名的方式进行配置，万一发生主从切换，可以改下内网dns即可","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456574,"discussion_content":"可以的，但是要考虑DNS缓存带来的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562193630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58307,"user_name":"RealMax","can_delete":false,"product_type":"c1","uid":1107104,"ip_address":"","ucode":"0502FA2B7AB49B","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/a0/dae52542.jpg","comment_is_top":false,"comment_ctime":1547032876,"is_pvip":false,"replies":[{"id":"21363","content":"读到空数据就算失败","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1547281983,"ip_address":"","comment_id":58307,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842000172","product_id":100006601,"comment_content":"“2. 读从机失败后再读一次主机. “  疑问：怎么去界定“读从机失败”这个点尼？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436001,"discussion_content":"读到空数据就算失败","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547281983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56831,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1546565553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841532849","product_id":100006601,"comment_content":"先优化程序，不能抗住，再优化结构的思想。读写分离，复制延迟，分配机制。","like_count":1},{"had_liked":false,"id":22626,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1535861909,"is_pvip":false,"replies":[{"id":"8193","content":"索引都要建","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1535956915,"ip_address":"","comment_id":22626,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5830829205","product_id":100006601,"comment_content":"读写分离，读库建立索引，主库不建立索引吗？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423194,"discussion_content":"索引都要建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535956915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19271,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1533742405,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5828709701","product_id":100006601,"comment_content":"读写分离适用于写少读多的场景","like_count":1},{"had_liked":false,"id":18160,"user_name":"梦醒时分","can_delete":false,"product_type":"c1","uid":1008228,"ip_address":"","ucode":"3C8B9E9EA487EB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/64/40e9805d.jpg","comment_is_top":false,"comment_ctime":1533171541,"is_pvip":false,"replies":[{"id":"6369","content":"没用过呢，开源中它算比较有名和成熟的，可以试试","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1533202881,"ip_address":"","comment_id":18160,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5828138837","product_id":100006601,"comment_content":"Mycat中间件 怎么样，功能挺全的","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421414,"discussion_content":"没用过呢，开源中它算比较有名和成熟的，可以试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533202881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14330,"user_name":"reed","can_delete":false,"product_type":"c1","uid":1122998,"ip_address":"","ucode":"F609D1FA73DB0E","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/b6/4722ca3d.jpg","comment_is_top":false,"comment_ctime":1530314352,"is_pvip":false,"replies":[{"id":"4884","content":"同步速度主要受网络延迟影响，和硬件关系不大，而且线上配置最好一样，否则出问题不好排查","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1530519892,"ip_address":"","comment_id":14330,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5825281648","product_id":100006601,"comment_content":"请教一下，数据库搭建主从的时候，是应该从库配置好，还是主库配置好？我们现在从库都是8核16G，而主库是4核8G，说是为了数据同步更快","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419966,"discussion_content":"同步速度主要受网络延迟影响，和硬件关系不大，而且线上配置最好一样，否则出问题不好排查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530519892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12867,"user_name":"放宕的压抑","can_delete":false,"product_type":"c1","uid":1114248,"ip_address":"","ucode":"AEED9BDEFBD57A","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/88/fac83a28.jpg","comment_is_top":false,"comment_ctime":1529102827,"is_pvip":false,"replies":[{"id":"4357","content":"通常情况下从库的复制写比主库的业务写要简单一些，性能要高","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529378447,"ip_address":"","comment_id":12867,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5824070123","product_id":100006601,"comment_content":"现在的数据库，写阻塞读是比较少了，你了解一下MVCC之类的机制，主要还是单台服务器撑不住性能要求<br><br>老师您好，我有两个问题。<br>1.照您的说法，那么划分是否应当是“读写-读写”比“读-写”更加合适呢？<br>2.个人感觉读写分离并不能减轻写对读的阻塞(虽然老师您说，现在读写阻塞很少了，但是在读写阻塞还比较多的年代而言呢？)，因为从库还是要不停地写，但因为是复制，所以认为一定是可以最终一致的，可以“为所欲为”，避开读的高峰期实现写？但是是否也有这样的场景存在7×24小时读请求都非常高，这种情况怎么办？继续增加机器？<br><br>不知道我理解得对不对，望老师指正。<br>(吐槽一下，第一次提交留言，因为我朋友圈里没几个人是做技术的，所以没想着分享，然后我就取消了。然后我就发了第二遍了😂)","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419439,"discussion_content":"通常情况下从库的复制写比主库的业务写要简单一些，性能要高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529378447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12797,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1529036037,"is_pvip":false,"replies":[{"id":"4239","content":"单机mysql 10万QPS可能有误导，我们只是在测试mysql存储和查询k-v数据的时候达到这个量级，正常的业务表结构和查询语句远比这个复杂，远远达不到10万，一般就几千。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1529046197,"ip_address":"","comment_id":12797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5824003333","product_id":100006601,"comment_content":"虽然作者已经收到了众多的赞许，但好话不嫌多，在这里还是要向作者表示感谢，在每一篇的文章中都有收获。<br><br>对于本篇内容中何时使用读写分离，主要还是看系统所需要承担的容量，对于安装在配置好的物理机上mysql数据库单机qps可以到达数十万，因而对于qps峰值万级以下的是不用考虑读写分离的，对于十万级别的要求高可用的业务可以考虑用读写分离，只是在实际工作中通常会选择加一层缓存，毕竟缓存服务器的成本要比db服务器成本会底不少。<br><br>","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419413,"discussion_content":"单机mysql 10万QPS可能有误导，我们只是在测试mysql存储和查询k-v数据的时候达到这个量级，正常的业务表结构和查询语句远比这个复杂，远远达不到10万，一般就几千。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529046197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11550,"user_name":"米斯特.杜","can_delete":false,"product_type":"c1","uid":1089110,"ip_address":"","ucode":"C2C567259FDEE2","user_header":"https://static001.geekbang.org/account/avatar/00/10/9e/56/af7a9435.jpg","comment_is_top":false,"comment_ctime":1528197257,"is_pvip":false,"replies":[{"id":"3754","content":"十几个小时还是太夸张了，应该做好监控及时处理","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528253683,"ip_address":"","comment_id":11550,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5823164553","product_id":100006601,"comment_content":"之前在一家小快递公司，日单量50万左右。最早是Oracle Rac，用了几年后扛不住了，上了读写分离。上线后效果还蛮好的，支撑一百万单量问题不大。用的是直接在代码中指向不同数据源的方式，偶尔会出现数据源指错的情况。也出现过一个事务指向了两个库。当然最坑的还是同步延迟，最长有过延迟十几个小时的情况。复杂的加购解决了原有问题，又带来了新问题。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418895,"discussion_content":"十几个小时还是太夸张了，应该做好监控及时处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528253683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11292,"user_name":"不吃番茄的西红柿","can_delete":false,"product_type":"c1","uid":1142465,"ip_address":"","ucode":"AC62CE8D23FACD","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/c1/e2cc1261.jpg","comment_is_top":false,"comment_ctime":1528033892,"is_pvip":false,"replies":[{"id":"3619","content":"下一篇就讲了","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528081285,"ip_address":"","comment_id":11292,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5823001188","product_id":100006601,"comment_content":"对于读写分离其实还少了一些吧，如果用户量特别大了，可能单存的读写分离已经不足以支持了……也可能比如用hash取余设定它能访问的数据库，把数据表拆开吧","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418779,"discussion_content":"下一篇就讲了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528081285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10695,"user_name":"YMF_WX1981","can_delete":false,"product_type":"c1","uid":1123051,"ip_address":"","ucode":"8891A4C343D9FD","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/eb/b580b80f.jpg","comment_is_top":false,"comment_ctime":1527649959,"is_pvip":false,"replies":[{"id":"3411","content":"读写分离没有分离数据，只是分离了读写操作，和金融业务关系不大","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527674853,"ip_address":"","comment_id":10695,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822617255","product_id":100006601,"comment_content":"读写分离如果是为了性能，大可通过硬件扩容解决呀。我是想，既然读写分离了，是否意味数据和对数据操作也分离了，更容易记录和统计，也更安全？适合敏感的金融类业务。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418567,"discussion_content":"读写分离没有分离数据，只是分离了读写操作，和金融业务关系不大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527674853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10645,"user_name":"hello2018","can_delete":false,"product_type":"c1","uid":1108323,"ip_address":"","ucode":"AD6E79EA663BCC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/63/48fc3f4c.jpg","comment_is_top":false,"comment_ctime":1527640055,"is_pvip":false,"replies":[{"id":"3377","content":"集群更强大更复杂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527644731,"ip_address":"","comment_id":10645,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822607351","product_id":100006601,"comment_content":"做了集群，是否可以不需要主备主从读写分离?","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418550,"discussion_content":"集群更强大更复杂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527644731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10588,"user_name":"沧海一粟","can_delete":false,"product_type":"c1","uid":1120190,"ip_address":"","ucode":"5284AD424CC3CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/be/73be948a.jpg","comment_is_top":false,"comment_ctime":1527604794,"is_pvip":false,"replies":[{"id":"3382","content":"可以的，如果缓存能顶住，其实一般不用做读写分离，例如论坛的帖子浏览场景","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527645262,"ip_address":"","comment_id":10588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822572090","product_id":100006601,"comment_content":"读写分离一般适用于读多写少的业务场景，支持规模应该在千万级别。问一下老师，可否使用缓存来替代数据库读写分离，做读写分离延迟是比较大的问题","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418532,"discussion_content":"可以的，如果缓存能顶住，其实一般不用做读写分离，例如论坛的帖子浏览场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527645262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10572,"user_name":"任锋","can_delete":false,"product_type":"c1","uid":1086592,"ip_address":"","ucode":"8C32C85A61C426","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/80/70e483f6.jpg","comment_is_top":false,"comment_ctime":1527599242,"is_pvip":false,"replies":[{"id":"3390","content":"不一定是读的压力，我们假设机器的能力是100分，写占了70分，读占了30分，虽然写是性能主要消耗方，但读写分离一样可以减轻数据库压力","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527645800,"ip_address":"","comment_id":10572,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822566538","product_id":100006601,"comment_content":"读写分离 主要解决了 读的压力，所以能满足多大的规模 瓶颈在于主库的瓶颈吧，比如连接数超了，系统也达不到高可用？不知道这样理解对不对……","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418528,"discussion_content":"不一定是读的压力，我们假设机器的能力是100分，写占了70分，读占了30分，虽然写是性能主要消耗方，但读写分离一样可以减轻数据库压力","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1527645800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10545,"user_name":"cqc","can_delete":false,"product_type":"c1","uid":1099493,"ip_address":"","ucode":"18053C9C62805F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/e5/7e86498f.jpg","comment_is_top":false,"comment_ctime":1527589934,"is_pvip":false,"replies":[{"id":"3349","content":"非常正确，有时候业务上调整1分，技术复杂度能减少10分，但方案3不能说是最优的，对业务有侵入","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527603933,"ip_address":"","comment_id":10545,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822557230","product_id":100006601,"comment_content":"适用场景的话大家都提到了：应该是读多写少的情况。另外对于数据复制&#47;同步的三种方案，我归纳了一下，第1和3是从业务角度去解决，第2是从技术角度去解决，这让我想起一句话：有些技术不好解决的问题也许从业务方面处理会更有效一些，不知道理解得对不对？不过从这三个方案来看，方案三确实是目前最优的。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418523,"discussion_content":"非常正确，有时候业务上调整1分，技术复杂度能减少10分，但方案3不能说是最优的，对业务有侵入","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1527603933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10540,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1527587267,"is_pvip":false,"replies":[{"id":"3388","content":"这个数据有误导性，要看具体的SQL语句和表结构，实际应用中一般不可能这么高","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527645608,"ip_address":"","comment_id":10540,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822554563","product_id":100006601,"comment_content":"读写分离一方面分离了读和写，另一方面读可通过多个从机再进一步分担读。<br>1.一主<br>一开始，读和写都在主机这条船上，随着读写越来越多，读和写相互影响，主机压力越来越大船快沉了。<br>2.一主一从<br>于是，读和写商量说分家吧，否则要抱团死了，写是数据源头留在主机，你读就自己找个从机新船吧；<br>便分成了一主一从，由主向从单向同步数据，有主推和从拉两种同步方式；读和写各自轻松了。<br>3.一主多从<br>随着业务开展，读写再次增长，特别是一般系统都是读的增长一般比写快很多，读一个从机也快沉船了，就多加了几个从主，变成了一主多从，数据由主机同步到所有从机，可以很方便地水平扩展。<br>4.多组<br>这块已经不算是读写分离了，要分离写了。<br>当写增长到一定程度，单个主机已经hold不住写了，要分库了。<br>按业务垂直拆分或水平拆分，拆分后的多库每库作为新的一组，每组是一个主从集群。<br><br>还有一种可能的过程是一主机直接到分库成多主机，某个主机读太多时进行读写分离。<br><br>能支撑多大规模就不了解了。<br>查了下mysql官网benchmarks( https:&#47;&#47;www.mysql.com&#47;why-mysql&#47;benchmarks&#47; )，单机32users并发只读近40w+ qps，读写10w+ qps。<br>如果按这个数据，以32users算:<br>一主一从能支撑写10w+qps，读40w+;<br>一主三从能支撑写10w+qps，读120w+;<br><br>没压测过db，是不是太高了？<br>请指正，谢谢！","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418520,"discussion_content":"这个数据有误导性，要看具体的SQL语句和表结构，实际应用中一般不可能这么高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527645608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10476,"user_name":"Snway","can_delete":false,"product_type":"c1","uid":1102888,"ip_address":"","ucode":"0AD31AECA8A8F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/28/3b6546e8.jpg","comment_is_top":false,"comment_ctime":1527558263,"is_pvip":false,"replies":[{"id":"3328","content":"有中间件真的可以为所欲为😂","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527566281,"ip_address":"","comment_id":10476,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5822525559","product_id":100006601,"comment_content":"我们都是读写分离，单表数据量大就分库分表，有专门的数据库中间件，实现比较方便。当然，对于写后立即读的操作都是指定读主库的！在cqrs架构中还专门区分了读写模型。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418492,"discussion_content":"有中间件真的可以为所欲为😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527566281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360765,"user_name":"星夜","can_delete":false,"product_type":"c1","uid":1128491,"ip_address":"北京","ucode":"3B46C09D994CEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/2b/9db9406b.jpg","comment_is_top":false,"comment_ctime":1666834227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666834227","product_id":100006601,"comment_content":"读写分离适用于读多写少的场景，当单机无法满足读流量时，可以选择将冗余的从库用于扩展读并发能力，但一般不建议使用读写分离的方式大幅提升读并发上限，因为读写分离建立在冗余从库的基础之上，实在需要提升系统读能力可以使用缓存优化。","like_count":0},{"had_liked":false,"id":348725,"user_name":"coconut","can_delete":false,"product_type":"c1","uid":2344081,"ip_address":"","ucode":"07B95C7A6AC2F7","user_header":"https://static001.geekbang.org/account/avatar/00/23/c4/91/a017bf72.jpg","comment_is_top":false,"comment_ctime":1655350082,"is_pvip":true,"replies":[{"id":"127182","content":"是的，一般用在insert数据的场景","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1655951688,"ip_address":"","comment_id":348725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1655350082","product_id":100006601,"comment_content":"&quot;读从机失败后读一次主机&quot;，这种解决方式应该不适合&quot;更新操作带来的不一致性&quot;。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577158,"discussion_content":"是的，一般用在insert数据的场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655951688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335121,"user_name":"就想做调包侠","can_delete":false,"product_type":"c1","uid":1600487,"ip_address":"","ucode":"010F7796889CEF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKSX1p9ygO5qQSrXZXibBkfcxJJl0202Q8m8GgB1oLVg47S1GvXtFgp8YvV17Jxm8OCib6wYUqQgntg/132","comment_is_top":false,"comment_ctime":1645346197,"is_pvip":false,"replies":[{"id":"122744","content":"集群也可以协作呀，比如说ZooKeeper。","user_name":"作者回复","user_name_real":"编辑","uid":"1098920","ctime":1645755170,"ip_address":"","comment_id":335121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645346197","product_id":100006601,"comment_content":"您好，我觉得这里不应该用集群这个词来描述，集群是指多个实例组成的整体，但是实例之间不需要协作。无论是读写分离还是分库分表，都是分布式而不是集群。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553162,"discussion_content":"集群也可以协作呀，比如说ZooKeeper。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645755170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315955,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1634086585,"is_pvip":false,"replies":[{"id":"114533","content":"对的，业务开发速度很快，毕竟很多新业务，快速迭代和试错，存活下来才是最重要的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1634174185,"ip_address":"","comment_id":315955,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634086585","product_id":100006601,"comment_content":"我所在的公司以前没有做数据库隔离，很多业务都是联表查询的。随着业务发展，原来的库（以下命名为a库）已经有几千张表了。<br>a库有16个从库，基本每个业务线都分了一个从库，供下面的很多业务做联表查询，主库主要用于写业务。其中一个是供大数据进行数据统计。<br><br>现在逐渐做了数据隔离，我花了大半年时间把用户相关的表拆分出来了，但是由于历史原因，还必须把用户表同步回a库。对实时要求比较高的一律要求走用户中心的接口。<br><br>一开始我在想为啥一开始不做数据库隔离呢？现在读了老师的课程，一开始为了业务快速上线，不做联表查询是最快的，遵循演化原则，才逐渐有了数据隔离的需求。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528215,"discussion_content":"对的，业务开发速度很快，毕竟很多新业务，快速迭代和试错，存活下来才是最重要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634174185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311788,"user_name":"Drake敏","can_delete":false,"product_type":"c1","uid":2734734,"ip_address":"","ucode":"38366767EFDC90","user_header":"https://static001.geekbang.org/account/avatar/00/29/ba/8e/4645afae.jpg","comment_is_top":false,"comment_ctime":1631459498,"is_pvip":false,"replies":[{"id":"112976","content":"是的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1631504413,"ip_address":"","comment_id":311788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631459498","product_id":100006601,"comment_content":"电商行业更适合读写分离","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526745,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631504413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308151,"user_name":"Wayne👿","can_delete":false,"product_type":"c1","uid":2694146,"ip_address":"","ucode":"A8AD5481052D9F","user_header":"https://static001.geekbang.org/account/avatar/00/29/1c/02/5aa8b087.jpg","comment_is_top":false,"comment_ctime":1629430222,"is_pvip":false,"replies":[{"id":"111649","content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1629535575,"ip_address":"","comment_id":308151,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629430222","product_id":100006601,"comment_content":"读写分离的本质，就是单台机器性能已经满足当前的读写请求，所以需要再增加机器。又由于读写的差异性（写请求更加耗时，以及通常情况下读请求多于写请求）。所以干脆把读写请求进行分离，让所有的写请求都访问同一台机器，读请求访问其他的机器。如果写请求也太多了，一台机器无法满足要求，那么就需要增加更多服务的写请求的机器。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525410,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629535575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299627,"user_name":"ZHANGPING","can_delete":false,"product_type":"c1","uid":1918112,"ip_address":"","ucode":"7108812981C996","user_header":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","comment_is_top":false,"comment_ctime":1624767188,"is_pvip":false,"replies":[{"id":"108665","content":"点赞","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1624794888,"ip_address":"","comment_id":299627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624767188","product_id":100006601,"comment_content":"个人感悟：读写分离是一种解决方案，但在实时之前：先评审是否索引是否合理，是不是慢查询引起等，最后才读写分离。不要盲目增加系统复杂度。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522488,"discussion_content":"点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624794888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299622,"user_name":"ZHANGPING","can_delete":false,"product_type":"c1","uid":1918112,"ip_address":"","ucode":"7108812981C996","user_header":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","comment_is_top":false,"comment_ctime":1624765691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624765691","product_id":100006601,"comment_content":"读写分离主要是针对读多写少的场景，并且能够水平扩展。如果业务是批量提交，则读写延迟可能会更大，如果是2地3中心，延迟就更高了。","like_count":0},{"had_liked":false,"id":297902,"user_name":"小鬼爱风雪","can_delete":false,"product_type":"c1","uid":2646199,"ip_address":"","ucode":"FF72E39E557C6F","user_header":"https://static001.geekbang.org/account/avatar/00/28/60/b7/4a665c73.jpg","comment_is_top":false,"comment_ctime":1623835857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623835857","product_id":100006601,"comment_content":"读写分离一般用在使用数据实效性不高的场景，读这些配置信息或者权限信息，或者海量清洗数据的结果都可以，","like_count":0},{"had_liked":false,"id":295348,"user_name":"马里奥","can_delete":false,"product_type":"c1","uid":2279444,"ip_address":"","ucode":"7CC428B63670CD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/2c2QrKaYwDMqk3MaqQv8bpGfgicrRdyhcP3ZJib3YXBoEj57dmQI9dRbeIySX6bsPl29HiaosHor5tJulQ4axnE7Q/132","comment_is_top":false,"comment_ctime":1622378521,"is_pvip":false,"replies":[{"id":"107233","content":"从你的描述来看，走读写分离是比较好的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1622435997,"ip_address":"","comment_id":295348,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1622378521","product_id":100006601,"comment_content":"最近遇到mongodb一个慢查询的问题，请问下这这个场景下读写分离是否会解决这个问题？<br>1.数据表在1亿左右<br>2.表的数据会高频插入数据，到几乎不修改数据<br>3.查询已经走索性了，但是有一个查询条件(是或否)会导致读取大量数据进行过滤(10w)，这是一个很低频查询<br>目前是主备","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521043,"discussion_content":"从你的描述来看，走读写分离是比较好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622435997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295022,"user_name":"大聖","can_delete":false,"product_type":"c1","uid":2485664,"ip_address":"","ucode":"5FD991D883BE78","user_header":"https://static001.geekbang.org/account/avatar/00/25/ed/a0/cc89c128.jpg","comment_is_top":false,"comment_ctime":1622187860,"is_pvip":false,"replies":[{"id":"107124","content":"读写分离这部分处理还好，不怎么难","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1622213988,"ip_address":"","comment_id":295022,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1622187860","product_id":100006601,"comment_content":"我觉得读写分离的一个难点是，分配机制管理主机和从机连接信息，特别是主从切换了以后","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520917,"discussion_content":"读写分离这部分处理还好，不怎么难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622213988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284209,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1616122424,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616122424","product_id":100006601,"comment_content":"数据库读写分离一般应用于什么场景：读多写少的场景，比如电商系统就是一个典型的读多写少的案例。对于写多读少的系统就不适合了。<br><br>能支撑多大的业务规模：这个需要压测，每个系统可能不一样<br><br>感悟：并不是一定要上集群、读写分离。慢查询、系统代码优化没啥空间再考虑","like_count":0},{"had_liked":false,"id":282781,"user_name":"荣码人生","can_delete":false,"product_type":"c1","uid":1397399,"ip_address":"","ucode":"6BD1A1991B484D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEL9JoquW6ia5A9AUkt8Ah51WQsqlpWnzwLcZwXKycAricKGOeqHf2JrVHxkHIjx5LuHnm8fJ1bJVLlA/132","comment_is_top":false,"comment_ctime":1615416186,"is_pvip":false,"replies":[{"id":"102635","content":"要么存储系统自己实现了切换，例如Redis、MongoDB，要么依赖第三方来实现切换，例如MySQL没有提供切换的能力，需要MySQL Router来切换，我以前在UC的时候，我们也是自己开发了类似MySQL Router的中间件。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1615426770,"ip_address":"","comment_id":282781,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615416186","product_id":100006601,"comment_content":"写完全依赖于主机，当主机故障，业务服务器端可以通过程序来主动判断主从数据库，但是数据库自身如何自动实现数据库主从切换？<br>","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516835,"discussion_content":"要么存储系统自己实现了切换，例如Redis、MongoDB，要么依赖第三方来实现切换，例如MySQL没有提供切换的能力，需要MySQL Router来切换，我以前在UC的时候，我们也是自己开发了类似MySQL Router的中间件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615426770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281738,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1614866470,"is_pvip":true,"replies":[{"id":"102290","content":"专栏里面有很多分析的角度，学完后你看技术方案的角度，对技术方案的理解会更全面更深入。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1614908140,"ip_address":"","comment_id":281738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614866470","product_id":100006601,"comment_content":"读写分离的应用前提除了读频率&gt;&gt;写之外，还有一个就是对数据短期不一致的容忍度吧。还有读写分离只是解决了存储访问的局限，算是一种优化，但是数据依然全部存储到了每台机器上。以前真没从这方面思考分表分库和读写分离的区别","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516488,"discussion_content":"专栏里面有很多分析的角度，学完后你看技术方案的角度，对技术方案的理解会更全面更深入。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614908140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266288,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1607270081,"is_pvip":false,"replies":[{"id":"96757","content":"因为我不是那个团队的，所以没法详细回答，内部有在用的，为啥没更新开源这个我就不清楚了。","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1607345836,"ip_address":"","comment_id":266288,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607270081","product_id":100006601,"comment_content":"老师好，想问下TDDL开源版是没有维护吗？网上资料很少，查到的也是很多年前的介绍了。现在淘宝还在用这个的话肯定已经升级过很多版本了，为啥没有更新出来呢？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511198,"discussion_content":"因为我不是那个团队的，所以没法详细回答，内部有在用的，为啥没更新开源这个我就不清楚了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607345836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250117,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1600941079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600941079","product_id":100006601,"comment_content":"读写分离一般用在读得操作很大，写得操作很少得应用场景下。","like_count":0},{"had_liked":false,"id":249151,"user_name":"桃子-夏勇杰","can_delete":false,"product_type":"c1","uid":1158436,"ip_address":"","ucode":"5D5F38AABA980F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/24/c6b763b4.jpg","comment_is_top":false,"comment_ctime":1600479422,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600479422","product_id":100006601,"comment_content":"需要区分真的是读的性能要分离了，还是原来的sql读取性能有问题，过早的读写分离可能引入不必要的复杂度。","like_count":0},{"had_liked":false,"id":238458,"user_name":"林毅鑫","can_delete":false,"product_type":"c1","uid":1917916,"ip_address":"","ucode":"1BB3D186E90D96","user_header":"https://static001.geekbang.org/account/avatar/00/1d/43/dc/95d4f2c5.jpg","comment_is_top":false,"comment_ctime":1596175364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596175364","product_id":100006601,"comment_content":"笔记笔记：<br>读写分离怎么搞？<br>1、复制延迟，将主机定时同步到从机；<br>2、分配机制，使用中间件或代码封装，将读写分离。","like_count":0},{"had_liked":false,"id":237538,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1595857961,"is_pvip":false,"replies":[{"id":"87775","content":"你这个延迟太夸张了😂正常来说延迟1分钟内可以接受。这种情况要用分库分表拆主库","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1595897981,"ip_address":"","comment_id":237538,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595857961","product_id":100006601,"comment_content":"我们系统在写多读也多有读写分离，核心业务读写操作全部走主库，把查询只读服务拆分出来，配置从库数据源，对外查询接口大部分走只读服务。但是主从延迟是个比较大问题，主库高并发，大事务，大表的ddl，延迟会达到1－3个小时。对于订单拉单漏单，后面我们结合实际业务场景，执行大sql时，一般是晚上，切换只读数据源为主库，等执行完后再切到从库。不知道大厂是怎么干的？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502447,"discussion_content":"你这个延迟太夸张了😂正常来说延迟1分钟内可以接受。这种情况要用分库分表拆主库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595897981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194479,"user_name":"霸蛮人","can_delete":false,"product_type":"c1","uid":1929137,"ip_address":"","ucode":"EAB5F275D69490","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/73JN7HxoDAxjPmSWlaGydX6Cpico0aWNIP6mHYibB5BsYcLRt3f7Lm3ZgvtLYWTnBKm9D8bicZI7Q02UTicTiaXycLA/132","comment_is_top":false,"comment_ctime":1585061713,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585061713","product_id":100006601,"comment_content":"个人觉得当读写不平衡，读、写需求差异明显时，需要进行读写分离，有利于整体资源的高效利用。","like_count":0},{"had_liked":false,"id":183341,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1583022793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583022793","product_id":100006601,"comment_content":"读写分离一般适合于读的并发压力远远超过写的并发压力的情况，单库读取已经无法满足需求，针对这样的情况，只能增加一些库来专门提供读取，这就是读写分离的应用场景。现在大部分数据库都支持读者分离了，mysql是最典型的了，mongodb也有支持（甚至还提出了副本集这种一主多从的技术）。<br><br>至于规模的话，能有十万级别吧，这个主要取决于业务复杂度吧。毕竟读写分离只是为了提高读取的能力，对整个数据库效率和压力提升来说有限。算是初级形态吧。<br>","like_count":0},{"had_liked":false,"id":167627,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1577882713,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1577882713","product_id":100006601,"comment_content":"对于一个线上运行的解决方案，当用户量达到一定规模后，可能会对数据库读写操作造成压力，单机版本的数据库服务器可能没有办法支撑过多的并发用户来进行读写操作。<br>为了解决这一问题，我们一般会有两种方法：<br>1. 加入缓存，对于经常访问的只读的数据，可以放在缓存中，从而减少对数据库的访问压力，这里需要考虑的是a) 哪些数据可以缓存，b) 缓存更新的策略。<br>2. 采用数据库读写分离，这里需要构造一个数据库主从集群，采用读写分离的前提是业务包含了大量的读操作和少量的写操作。<br>采用数据库读写分离方案，需要考虑<br>a) 读写同步问题，写操作后的数据，需要一定时间才能从写主库同步到读从库，在同步操作完成前，访问从库得到的数据不是最新的。可能的解决办法是核心业务总是从主库获取数据，非核心业务可以忍受一定延迟，或者业务做写操作后，紧接着的业务操作从主库读取数据。<br>b) 如何分配写库和读库，在集群中，独库和写库不是固定的，我们需要有一种方式来判断应该向哪个数据库执行操作，通常有两种方式，一种是通过程序和配置实现，一种是通过数据库中间件实现。","like_count":0},{"had_liked":false,"id":165526,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1577252300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577252300","product_id":100006601,"comment_content":"数据库高性能架构方案一:读写分离<br><br>缺点:主从复制延迟，数据一致性问题。<br><br>解决:两阶段读取，即，先读从库，没有数据读主库。主要业务读写读走主库，次要业务读走从库。<br>加一个数据访问中间层。方案有程序语言封装，数据中间件。后者技术复杂度高，一般使用前者。","like_count":0},{"had_liked":false,"id":146438,"user_name":"嚆同学","can_delete":false,"product_type":"c1","uid":1018329,"ip_address":"","ucode":"5F5BFE47B3302C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/89/d9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1572522854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572522854","product_id":100006601,"comment_content":"读写分离的主要适用场景是读多写少，但是这也是要依据并发量大小。并发小，没必要做读写分离；并发大了，单机写就会是瓶颈。现在遇到的业务属于读多写少，但是并发量一般，每天定时执行批量入库操作，但是因为每天新增数据量太大，所以直接采用的分表。","like_count":0},{"had_liked":false,"id":137352,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1569722081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569722081","product_id":100006601,"comment_content":"感谢老师分享，一般来讲，读写分离应该是属于系统优化+垂直拓展后的一步，只有在系统的优化和单机性能到了天花板后，如果还是没办法达到理想效果，才会采取读写分离，不过读写分离的方式相对之前的维护性的难度也提升了，读写分离里面，如果主从延迟的问题会导致数据不一致，从而引发可用性的问题，甚至在一些极端的情况下，从库可能会一直追不上主库，这样就需要人工介入，去排查出现问题的原因是什么？如果是一主一从的架构，可以采用semi-sync的方式来尽量保证主从复制无延迟，如果是更复杂的读写分离架构，就需要新的策略了。","like_count":0},{"had_liked":false,"id":108675,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1561842032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561842032","product_id":100006601,"comment_content":"AWS的aurora数据库就是基于mysql的读写分离苦，可以配置多台mysql instance到aurora里，并按指定哪一台读哪一台写，中间的数据同步使用AWS的replica服务","like_count":0},{"had_liked":false,"id":83006,"user_name":"xuery","can_delete":false,"product_type":"c1","uid":1027584,"ip_address":"","ucode":"F461B61BE06131","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/00/025f37e7.jpg","comment_is_top":false,"comment_ctime":1554370521,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1554370521","product_id":100006601,"comment_content":"一般使用于读多写少的场景，mysql从库设置为readonly, 只提供读操作，提升查询的qps;<br>具体能支撑多大量的业务，要根据压测之后单机的读QPS来看","like_count":0},{"had_liked":false,"id":36891,"user_name":"Sean","can_delete":false,"product_type":"c1","uid":1242497,"ip_address":"","ucode":"2521FB6292F304","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/81/92d01e3a.jpg","comment_is_top":false,"comment_ctime":1541381368,"is_pvip":false,"replies":[{"id":"13145","content":"代码实现的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1541399082,"ip_address":"","comment_id":36891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541381368","product_id":100006601,"comment_content":"我们之前用galera集群，多主的，并发大经常出现死锁。后来改成MGR,一主两从一备，采用探测服务切换主从，读写分离看业务而定，不过还是不敢上多主，怕并发写出现死锁。<br>今天看老师说了从库读不到数据再切到主库，这个具体怎么实现？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428077,"discussion_content":"代码实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541399082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36256,"user_name":"木头旮瘩","can_delete":false,"product_type":"c1","uid":1243119,"ip_address":"","ucode":"33FD0A8598B91E","user_header":"","comment_is_top":false,"comment_ctime":1540999193,"is_pvip":false,"replies":[{"id":"12908","content":"MHA同一时刻只有一台主机，还是撑不住写操作哦","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1541054905,"ip_address":"","comment_id":36256,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1540999193","product_id":100006601,"comment_content":"看到一些评论里说如果单机写顶不住了就考虑拆库，我觉得也可以考虑更改主从的架构，比如由3M或者MHA这些传统的主从架构改为Galera Cluster这种多主架构模式，当然这种改动影响也不小，也挺费劲的(实际工作中没用过Galera，一直在用MHA)","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427800,"discussion_content":"MHA同一时刻只有一台主机，还是撑不住写操作哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541054905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":31978,"user_name":"Edward Lee","can_delete":false,"product_type":"c1","uid":1228518,"ip_address":"","ucode":"156223F1D7E94A","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/e6/7808520d.jpg","comment_is_top":false,"comment_ctime":1539347775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539347775","product_id":100006601,"comment_content":"读写分离问题<br>如果用户的前后操作存在依赖性我认为可以加入用户级别会话进行保存，会话保存方式可以是之前提到的 nginx ip_hash 或者引入 redis&#47;memcache，引入会话后即使多个用户的信息存在共享关系，读写数据库的延迟用户也无法察觉<br><br>读写分离场景<br>每个系统都会涉及读写操作，主要是读写比例的合理分配，如电商类就是读多于写，办公类，像 OA 系统就是写多于读，分配读写数据库比例看来算是架构设计的其中一部分 : )<br>","like_count":0},{"had_liked":false,"id":16235,"user_name":"鸡蛋🎱 达芬奇","can_delete":false,"product_type":"c1","uid":1104819,"ip_address":"","ucode":"8493ACD4D14E0C","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/b3/040eb673.jpg","comment_is_top":false,"comment_ctime":1531841313,"is_pvip":false,"replies":[{"id":"5615","content":"可以的","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531877348,"ip_address":"","comment_id":16235,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531841313","product_id":100006601,"comment_content":"使用mycat这种不是也很好吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420724,"discussion_content":"可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531877348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15379,"user_name":"peison","can_delete":false,"product_type":"c1","uid":1142893,"ip_address":"","ucode":"C467A3E0133EA2","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/6d/11ea66f0.jpg","comment_is_top":false,"comment_ctime":1531148615,"is_pvip":false,"replies":[{"id":"5266","content":"高性能mysql，可以看看","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531292271,"ip_address":"","comment_id":15379,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531148615","product_id":100006601,"comment_content":"老师您好，想请教要怎么样做数据库压测？还有您说不同的数据库表设计性能测试结果不同，想问问怎样的设计性能高？怎么样的设计性能低？这方面有哪些资料可以参考吗？请老师指教","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420361,"discussion_content":"高性能mysql，可以看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531292271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15378,"user_name":"peison","can_delete":false,"product_type":"c1","uid":1142893,"ip_address":"","ucode":"C467A3E0133EA2","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/6d/11ea66f0.jpg","comment_is_top":false,"comment_ctime":1531148309,"is_pvip":false,"replies":[{"id":"5267","content":"可以看看《高性能mysql》","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1531292289,"ip_address":"","comment_id":15378,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1531148309","product_id":100006601,"comment_content":"想请教老师，怎么做数据库的压测呢？还有您说不同的数据库表设计性能不同，那怎么样的设计性能高，怎么样的设计性能低？这方面有那些技术资料可以参考吗？请老师指教","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420360,"discussion_content":"可以看看《高性能mysql》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531292289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14879,"user_name":"Cola","can_delete":false,"product_type":"c1","uid":1048859,"ip_address":"","ucode":"67A27A8DEF42E2","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/1b/24db90c7.jpg","comment_is_top":false,"comment_ctime":1530720806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530720806","product_id":100006601,"comment_content":"读写分离一般用于读操作频繁，读压力比写压力大一个量级的情况下。另外，读写压力较大也可以用各种缓存手段解决问题。","like_count":0},{"had_liked":false,"id":14255,"user_name":"张国胜","can_delete":false,"product_type":"c1","uid":1063557,"ip_address":"","ucode":"3C3090C6FA7121","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/85/8e32883f.jpg","comment_is_top":false,"comment_ctime":1530244048,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530244048","product_id":100006601,"comment_content":"其实有时候也大概知道一些概念，遇到性能问题可以做什么，可具体情况下，应该做什么，是新手不太能确定的。比如不知道怎样才是合理的数据库优化顺序。","like_count":0},{"had_liked":false,"id":14106,"user_name":"^_^","can_delete":false,"product_type":"c1","uid":1122575,"ip_address":"","ucode":"30E994A1627EB1","user_header":"https://static001.geekbang.org/account/avatar/00/11/21/0f/b61dc67e.jpg","comment_is_top":false,"comment_ctime":1530177241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1530177241","product_id":100006601,"comment_content":"请问老师，写库同步数据到从库具体是怎么实现的","like_count":0},{"had_liked":false,"id":13562,"user_name":"甲韭","can_delete":false,"product_type":"c1","uid":1052321,"ip_address":"","ucode":"2E998B8CB17F4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/0e/a1/152a5de1.jpg","comment_is_top":false,"comment_ctime":1529764714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529764714","product_id":100006601,"comment_content":"读写分离，无它，一言以蔽之，一台服务器撑不住了","like_count":0},{"had_liked":false,"id":13561,"user_name":"甲韭","can_delete":false,"product_type":"c1","uid":1052321,"ip_address":"","ucode":"2E998B8CB17F4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/0e/a1/152a5de1.jpg","comment_is_top":false,"comment_ctime":1529764713,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529764713","product_id":100006601,"comment_content":"读写分离，无它，一言以蔽之，一台服务器撑不住了","like_count":0},{"had_liked":false,"id":13207,"user_name":"孙晓明","can_delete":false,"product_type":"c1","uid":1117094,"ip_address":"","ucode":"CAD28E4D5A3E76","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/a6/b234aa79.jpg","comment_is_top":false,"comment_ctime":1529455618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529455618","product_id":100006601,"comment_content":"想问的其他同学都问了😁","like_count":0},{"had_liked":false,"id":11662,"user_name":"王维","can_delete":false,"product_type":"c1","uid":1091684,"ip_address":"","ucode":"836E6CDB1A56BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/64/965e0d9b.jpg","comment_is_top":false,"comment_ctime":1528277534,"is_pvip":false,"replies":[{"id":"3810","content":"目测没有几个成熟的面向sqlserver的开源中间件，估计要买或者自己写中间层","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1528341663,"ip_address":"","comment_id":11662,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1528277534","product_id":100006601,"comment_content":"想请问下华仔，我们系统用的数据库是ms sqlserver，如果要使用数据库中间件，那么有什么好的可以推荐的呢？貌似ms sqlserver的数据库中间件没有my sql的多。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418946,"discussion_content":"目测没有几个成熟的面向sqlserver的开源中间件，估计要买或者自己写中间层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528341663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10810,"user_name":"如风","can_delete":false,"product_type":"c1","uid":1049862,"ip_address":"","ucode":"A6BDF06E24E83D","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/06/9b9b3143.jpg","comment_is_top":false,"comment_ctime":1527725951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527725951","product_id":100006601,"comment_content":"写是对于主库，读是从库; 读写分离是随着业务的发展，而演变，现有的数据库支撑不了了，特别大量的数据及查询会拖死数据库，这个时候就得考虑读写分离和多个分组主从库，服务也做拆分，从而演变成微服务，保证核心业务不受影响，其他非核心业务挂了也不受影响，这就是服务降级，防止血崩","like_count":0},{"had_liked":false,"id":10771,"user_name":"今夕是何年","can_delete":false,"product_type":"c1","uid":1111847,"ip_address":"","ucode":"2825454A7A1588","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7SOblVZ7dNJ88wkeYR0HklxdR9VuiaQ0GMscAnrlic6EjvRZS52m4n1VPypwZFsmabbJ4STZRbHFfVZE24Jjqr1w/132","comment_is_top":false,"comment_ctime":1527692698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527692698","product_id":100006601,"comment_content":"读写分离应用于读多写少的场景","like_count":0},{"had_liked":false,"id":10768,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1527690823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527690823","product_id":100006601,"comment_content":"读操作远大于写操作并且并发量很大的情况需要读写分离。因为分离后可以针对读库做单独的优化。<br>关于读写分离后的复制延迟问题，我感觉无论是二次读取还是区分关键业务，都会出现写库压力大的问题。还是要结合第一点的业务代码修改。<br>还有一个问题最近一直在考虑，读写分离后的dal层设计是在查询接口实现时读写库各实现一套还是通过传参来区分更好呢？请教一下老师","like_count":0},{"had_liked":false,"id":10728,"user_name":"何国平","can_delete":false,"product_type":"c1","uid":1101355,"ip_address":"","ucode":"251BA091AF8690","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/2b/a47a0936.jpg","comment_is_top":false,"comment_ctime":1527677850,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1527677850","product_id":100006601,"comment_content":"还有事务必须走从库，而现在很多开发框架都用到事务，搞得主从读写分离很鸡肋","like_count":0,"discussions":[{"author":{"id":2899712,"avatar":"","nickname":"Geek_eb5229","note":"","ucode":"B8568022DB3123","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548093,"discussion_content":"涉及事务的写操作当然走主库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643027523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183318,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0e/56/2c5691b2.jpg","nickname":"布兜兜","note":"","ucode":"E8B0F47D52E826","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544548,"discussion_content":"事务应该走主库把","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641559980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1407983,"avatar":"https://static001.geekbang.org/account/avatar/00/15/7b/ef/ae5458c7.jpg","nickname":"王骞","note":"","ucode":"E5A88F3BA2634E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37179,"discussion_content":"事务必须走从库是什么意思？从库只用来读数据，不涉及事务啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571538769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10594,"user_name":"coder_java","can_delete":false,"product_type":"c1","uid":1079123,"ip_address":"","ucode":"3552C831D1A16D","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/53/bc27222f.jpg","comment_is_top":false,"comment_ctime":1527605491,"is_pvip":false,"replies":[{"id":"3381","content":"这个留作课后作业给你，自己的总结印象最深刻","user_name":"作者回复","user_name_real":"华仔","uid":"1098920","ctime":1527645169,"ip_address":"","comment_id":10594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1527605491","product_id":100006601,"comment_content":"华仔好，看了大家的回答基本上回答的都不错。<br>关于集群的问题能否做个总结，redis里有集群，es有集群，kafka等等都有集群，他们有什么共同之处么？或者说区别都在于哪？都是主读写，从读么？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418533,"discussion_content":"这个留作课后作业给你，自己的总结印象最深刻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1527645169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10521,"user_name":"nola den","can_delete":false,"product_type":"c1","uid":1083463,"ip_address":"","ucode":"FA66B2509FFE3B","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/47/e1b9c1cc.jpg","comment_is_top":false,"comment_ctime":1527574776,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527574776","product_id":100006601,"comment_content":"我想在独立一台主机无法承受访问压力时，才需要使用读写分离。目的是分配读操作的压力到从机上。但主机还是承受所有写操作压力，当主机无法应对大量写操作的时候，整个存储系统也就崩掉了。因为从机可以扩展，主机只能一台。","like_count":0}]}