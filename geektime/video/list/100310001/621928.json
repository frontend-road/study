{"id":621928,"title":"77｜扩展数据类型：怎样使用更复杂的数据类型？","content":"<p><strong>课后习题</strong><br>\n请你编写程序，统计一篇文章中出现频率在前五的单词，并将单词和出现次数一起输出到终端。</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":366763,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1674184077,"is_pvip":false,"replies":[{"id":133622,"content":"赞，不断迭代代码是正确提高编程能力的有效方式","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1674200628,"ip_address":"广东","comment_id":366763,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"看了下同学的留言学习了下，并改写正则，使其捕获单词排除换行和空格等\n改写如下：\nfrom re import findall\nfrom collections import Counter\n\nwith open(&#39;.&#47;demo1.txt&#39;, &#39;r&#39;) as f:\n  data = f.read().lower()\nwords = findall(r&#39;\\b\\w*?\\S\\b&#39;, data)\nprint(Counter(words))\nprint(Counter(words).most_common(5))","like_count":1,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600306,"discussion_content":"赞，不断迭代代码是正确提高编程能力的有效方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674200628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387770,"user_name":"有风","can_delete":false,"product_type":"c3","uid":2051946,"ip_address":"陕西","ucode":"42712891366309","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4f/6a/0a6b437e.jpg","comment_is_top":false,"comment_ctime":1708568033,"is_pvip":false,"replies":[{"id":141421,"content":"本质上它们都是用于访问对象属性的不同方式。硬要比较的话,它们在使用场景和可读性方面有一些差异。\n使用解包赋值:\nself.other_x, self.other_y = other\n这种方式通常用于将一个对象的多个属性赋值给另一个对象的多个属性。\n它可以使代码更加紧凑和简洁,特别是当需要同时赋值多个属性时。\n缺点是如果解包的属性名称发生变化,就需要同时修改多个地方。\n直接访问属性:\nself.other_x = other.x\nself.other_y = other.y\n这种方式更加明确和直观,可读性较高。\n当只需要访问或赋值单个属性时,这种方式更加合适。\n缺点是如果需要赋值多个属性,代码会变得冗长。","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1710139179,"ip_address":"广东","comment_id":387770,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"解包self.other_x , self.other_y = other和 直接使用other.x和other.y还啥别区别？","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":638948,"discussion_content":"本质上它们都是用于访问对象属性的不同方式。硬要比较的话,它们在使用场景和可读性方面有一些差异。\n使用解包赋值:\nself.other_x, self.other_y = other\n这种方式通常用于将一个对象的多个属性赋值给另一个对象的多个属性。\n它可以使代码更加紧凑和简洁,特别是当需要同时赋值多个属性时。\n缺点是如果解包的属性名称发生变化,就需要同时修改多个地方。\n直接访问属性:\nself.other_x = other.x\nself.other_y = other.y\n这种方式更加明确和直观,可读性较高。\n当只需要访问或赋值单个属性时,这种方式更加合适。\n缺点是如果需要赋值多个属性,代码会变得冗长。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710139179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369523,"user_name":"谢韬 Fragos","can_delete":false,"product_type":"c3","uid":2456075,"ip_address":"北京","ucode":"75F2178E340C5D","user_header":"https://static001.geekbang.org/account/avatar/00/25/7a/0b/b0d918da.jpg","comment_is_top":false,"comment_ctime":1677636019,"is_pvip":false,"replies":[{"id":134854,"content":"送你上去~","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1678156648,"ip_address":"广东","comment_id":369523,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"如老师提到如果需要累加多个点，比如p1+p2+p3+p4有下面三种方法供大家参考：\n\n第一种方法：在__add__方法中返回Point_2D的类型，而不是tuple。 \nfrom collections import namedtuple\n\nclass Point_2D (namedtuple(&#39;Point&#39;,[&#39;x&#39;,&#39;y&#39;])):\n    \n    def __add__(self,other):\n        self.other_x, self.other_y= other\n        \n        return self.__class__(self.x+self.other_x,self.y+self.other_y)\np1= Point_2D(x=11,y=22)\np2 = Point_2D(x=33,y=44)\np3 = Point_2D(x=55,y=66)\np4 = Point_2D(x=77,y=88)\np1+p2+p3+p4\n\n#第二种方法：重载Point_2D的__radd__方法，否则它会以元组的默认加法方式进行。\nfrom collections import namedtuple\n\nclass Point_2D(namedtuple(&#39;Point&#39;,[&#39;x&#39;,&#39;y&#39;])):\n    \n    def __add__(self,other):\n        \n        self.other_x , self.other_y = other\n        return self.x + self.other_x, self.y+ self.other_y\n    \n    def __radd__(self,other):\n        \n        self.other_x , self.other_y = other\n        return self.x + self.other_x, self.y+ self.other_y\n\n#第三种方法：这段代码还是不够pythonic，__add__和__radd__代码重复了，如果连个方法的表现出一样的行为直接用=就可以了。\nfrom collections import namedtuple\n\nclass Point_2D(namedtuple(&#39;Point&#39;,[&#39;x&#39;,&#39;y&#39;])):\n    def __add__(self,other):\n        self.other_x,self.other_y =other\n        return self.x + self.other_x,self.y + self.other_y\n    __radd__=__add__","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607852,"discussion_content":"送你上去~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678156648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366486,"user_name":"PatrickL","can_delete":false,"product_type":"c3","uid":1341431,"ip_address":"上海","ucode":"EF0EC18639B9B2","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/f7/11548247.jpg","comment_is_top":false,"comment_ctime":1673850505,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import re\nfrom collections import Counter\nwith open(&#39;hamlet.txt&#39;,&#39;r&#39;) as f:\n    data = f.read().lower()\nwords = re.findall(r&#39;\\w+&#39;, data)\nprint(Counter(words).most_common(5))","like_count":1},{"had_liked":false,"id":396455,"user_name":"HAOlowkey","can_delete":false,"product_type":"c3","uid":1273474,"ip_address":"上海","ucode":"11C16DAED8FEDC","user_header":"https://static001.geekbang.org/account/avatar/00/13/6e/82/6b806720.jpg","comment_is_top":false,"comment_ctime":1734518666,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师 有一个疑惑 在讲解namedtuple工厂函数时 视频里说的是定义了__call__方法 我理解应该是定义的__init__方法吧 call只有当类实例化给一个对象后 通过（）调用时才会触发","like_count":0},{"had_liked":false,"id":396417,"user_name":"尹长拟","can_delete":false,"product_type":"c3","uid":3074007,"ip_address":"北京","ucode":"1EBD42B5BBD934","user_header":"","comment_is_top":false,"comment_ctime":1734360134,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import re\nfrom collections import Counter\n\ndef get_words_top(text,top_n=5):\n    # 提取文本中的所有单词，并转为小写\n    words = re.findall(r&#39;\\b\\w+\\b&#39;,text.lower())\n\n    # 统计单词频率\n    words_counts = Counter(words)\n\n    # 统计出现频率最高的 top_n 单词\n    words_top = words_counts.most_common(top_n)\n\n    # 打印 top_n的单词和出现次数\n    for word,count in words_top:\n        print(f&quot;{word}:{count}&quot;)\n\n# 读取文件并调用函数\nwith open(&#39;.&#47;24-demo.txt&#39;,&#39;r&#39;) as f:\n    f_txt = f.read()\n    get_words_top(f_txt)","like_count":0},{"had_liked":false,"id":392042,"user_name":"710526","can_delete":false,"product_type":"c3","uid":3754598,"ip_address":"上海","ucode":"73B310A1D13362","user_header":"","comment_is_top":false,"comment_ctime":1719815349,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"学习了","like_count":0},{"had_liked":false,"id":391122,"user_name":"WY","can_delete":false,"product_type":"c3","uid":2647550,"ip_address":"北京","ucode":"22C103DBD064C9","user_header":"https://static001.geekbang.org/account/avatar/00/28/65/fe/52997ee9.jpg","comment_is_top":false,"comment_ctime":1717385090,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"from collections import Counter\nwith open(&quot;test.txt&quot;,&quot;r&quot;,encoding=&quot;utf-8&quot;) as f:\n    text = f.read().lower().split()\n    print(Counter(text).most_common(5))","like_count":0},{"had_liked":false,"id":387965,"user_name":"william","can_delete":false,"product_type":"c3","uid":2616432,"ip_address":"上海","ucode":"E3A8F1260C628E","user_header":"https://static001.geekbang.org/account/avatar/00/27/ec/70/42021f3d.jpg","comment_is_top":false,"comment_ctime":1709042055,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import re\nfrom collections import Counter\n\nwords = re.findall(r&#39;\\w+&#39;, open(&#39;a.txt&#39;).read().lower())\nprint(Counter(words).most_common(5))","like_count":0},{"had_liked":false,"id":385091,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702031410,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"这是一个 Python 程序，它可以统计一篇文章中出现频率在前五的单词，并将单词和出现次数一起输出到终端：\n\n```python\nfrom collections import Counter\nimport re\n\ndef count_words(text):\n    # 使用正则表达式来分割文本，只保留单词\n    words = re.findall(r&#39;\\b\\w+\\b&#39;, text.lower())\n    # 使用 Counter 来统计单词的出现次数\n    word_counts = Counter(words)\n    # 找出出现频率最高的 5 个单词\n    top_five = word_counts.most_common(5)\n    # 输出结果\n    for word, count in top_five:\n        print(f&quot;{word}: {count}&quot;)\n\n# 这里是你的文章\ntext = &quot;&quot;&quot;\nThis is a sample text. It contains several words, some of which are repeated.\nRepeated words should be counted by the program. The program should ignore case,\nso &#39;This&#39; and &#39;this&#39; should be counted as the same word.\n&quot;&quot;&quot;\n\ncount_words(text)\n```\n\n在这个程序中，我们首先使用正则表达式来分割文本，只保留单词。然后，我们使用 `Counter` 来统计单词的出现次数。最后，我们找出出现频率最高的 5 个单词，并输出结果。\n\n请注意，这个程序会忽略大小写，所以 &#39;This&#39; 和 &#39;this&#39; 会被视为同一个单词。如果你不希望忽略大小写，你可以去掉 `text.lower()` 这一行。                                                                                                   .","like_count":0},{"had_liked":false,"id":382702,"user_name":"MarkG","can_delete":false,"product_type":"c3","uid":3675806,"ip_address":"山东","ucode":"454082595FE769","user_header":"https://static001.geekbang.org/account/avatar/00/38/16/9e/48621655.jpg","comment_is_top":false,"comment_ctime":1697856712,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"import re\nwords = re.findall(r&quot;\\w+&quot;, open(&quot;.&#47;..&#47;hamlet.txt&quot;).read().lower())\nCounter(words).most_common(5)","like_count":0},{"had_liked":false,"id":379501,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1692019365,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"# 自定义命名元组的加法和减法功能\n\nfrom collections import namedtuple  \n  \nPoint = namedtuple(&#39;Point&#39;, [&#39;x&#39;, &#39;y&#39;])  \n  \ndef add(self, other):  \n    return self.x + other.x, self.y + other.y  \n  \nPoint.__add__ = add  \n  \ndef subtract(self, other):  \n    return self.x - other.x, self.y - other.y  \n  \nPoint.__sub__ = subtract  \n  \np1 = Point(2, 3)  \np2 = Point(1, 4)  \n  \nprint(p1 + p2) \nprint(p1 - p2)","like_count":0},{"had_liked":false,"id":379500,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1692019217,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"# 统计一篇文章中出现频率在前五的单词，并将单词和出现次数一起输出到终端\n\nfrom collections import Counter\nimport re\n\nwords = re.findall(r&#39;\\w+&#39;, open(&#39;.&#47;demo.txt&#39;).read())\nprint(Counter(words).most_common(5))\n\n&gt;&gt;&gt;[(&#39;Python&#39;, 12), (&#39;3&#39;, 12), (&#39;10&#39;, 12), (&#39;11&#39;, 6), (&#39;is&#39;, 6)]","like_count":0},{"had_liked":false,"id":378381,"user_name":"Greenery","can_delete":false,"product_type":"c3","uid":3566765,"ip_address":"中国香港","ucode":"16111129C9EBA2","user_header":"https://static001.geekbang.org/account/avatar/00/36/6c/ad/0a694b50.jpg","comment_is_top":false,"comment_ctime":1690168390,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from re import findall\nwith open(&#39;demo.txt&#39;,encoding=&#39;UTF-8&#39;) as f:\n    cnt=f.read()\nc=Counter(findall(r&#39;\\w+&#39;,cnt))\nc.most_common(5)","like_count":0},{"had_liked":false,"id":375039,"user_name":"Mr.Cui","can_delete":false,"product_type":"c3","uid":1392202,"ip_address":"浙江","ucode":"0204C3C0506115","user_header":"https://static001.geekbang.org/account/avatar/00/15/3e/4a/28f8c584.jpg","comment_is_top":false,"comment_ctime":1684829268,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"# 请你编写程序，统计一篇文章中出现频率在前五的单词，并将单词和出现次数一起输出到终端。\n# 使用 collections容器数据类型中的  Counter 对象\n\nfrom collections import Counter\n\nwith open(&#39;.&#47;case.log&#39;,mode=&#39;r&#39;) as f:\n    content = f.read().lower()\n    for word, count in Counter(content.split()).most_common(5):\n        print(f&quot;{word}: {count}&quot;)","like_count":0},{"had_liked":false,"id":370004,"user_name":"江江儿嘛哩哄","can_delete":false,"product_type":"c3","uid":1928117,"ip_address":"浙江","ucode":"E7D6E59551B7F1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6b/b5/14586a78.jpg","comment_is_top":false,"comment_ctime":1678245951,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from collections import Counter\nimport re\nwords = re.findall(r&#39;\\w+&#39;, open(&#39;a.txt&#39;).read().lower())\nprint(Counter(words).most_common(5))","like_count":0},{"had_liked":false,"id":369408,"user_name":"yanyu-xin","can_delete":false,"product_type":"c3","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1677506090,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from collections import Counter\nimport re\nwords = re.findall(r&#39;\\w+&#39;, open(&#39;E4.txt&#39;,encoding=&#39;UTF-8&#39;).read().lower())\nprint(Counter(words).most_common(5))","like_count":0},{"had_liked":false,"id":367737,"user_name":"朱雯","can_delete":false,"product_type":"c3","uid":1035744,"ip_address":"北京","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1675523656,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from re import findall\nfrom collections import Counter\n\nwith open(&#39;.&#47;demo1.txt&#39;, &#39;r&#39;) as f:\n  data = f.read().lower()\nwords = findall(r&#39;\\b\\w*?\\S\\b&#39;, data)\nprint(Counter(words))\nprint(Counter(words).most_common(5))","like_count":0},{"had_liked":false,"id":366187,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1673446253,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"from re import findall\nfrom collections import Counter\n\nwith open(&#39;data.txt&#39;) as f:\n    data = f.read().lower()  # str\n    \nwords = findall(r&#39;\\w+&#39;, data)  # list\n\nmyCounter = Counter(words)  # Counter\nprint(myCounter.most_common(5))","like_count":0}]}