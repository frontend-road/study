{"id":577622,"title":"国庆策划03｜揭秘代码优化操作和栈保护机制","content":"<p>你好，我是LMOS。</p><p>今天是国庆假期策划的第三期。我们来公布第一期主观题的答案。希望你先尝试自己梳理思路，尝试回答问题以后，再来查看参考答案。</p><h2>第一题</h2><p>在前面课程里，我们一起揭秘了C语言编译器的“搬砖”日常，搞清楚了C语言会如何处理各种类型变量、各种运算符、流程控制以及由它们组成的函数，并把这些内容加以转换，对应到机器指令。你知道在这个转换过程中，C编译器为了提高程序的执行性能，会有哪些额外的操作吗？试试概括一下这些操作？</p><h3>第一题参考答案</h3><p>存在额外的操作，概括来说是对代码进行优化操作。</p><p>为了提高程序的执行性能，C语言编译器在经过语义分析的阶段之后，会生成平台无关的中间代码，然后经历三次不同级别的代码优化。</p><p>这里首先要经历中间代码级的代码优化；而后，编译器把中间代码优化的结果作为输入，生成机器相关的目标代码；之后还会再经过一次目标代码级别的代码优化，这个优化策略和具体机器的硬件结构高度相关，且不通用。</p><p>完成了整个优化过程后，就会产生最终运行机器平台上的目标代码了。一般通用的优化代码操作具体包括四个方面，我们挨个来看看。</p><p>第一类操作是<strong>删除多余运算</strong>。编译器分析中间代码的时候，可能会发现一些计算操作属于重复计算。因为有些计算并没有让结果发生变化，它们是多余的，完全可以删除。</p><!-- [[[read_end]]] --><p>第二类是<strong>代码外提操作</strong>，一般用在优化循环代码，可以减少循环中代码的总数。它的原理是这样的：如果循环中的计算结果不改变某个代码段，我们就把这段代码外提，放在循环外。这种变换把计算结果不受循环执行次数影响的表达式，提到了循环的前面，使之只在循环外计算一次。</p><p>第三类是<strong>强度削弱操作</strong>。强度削弱的本质是把强度大的运算换算成强度小的运算。举例来说，把加法换成乘法运算强度会更小。比如循环过程，每循环一次，变量的值增加1，又不与循环相关，每次总是增加相同的数据。因此，可以把循环中计该值的加法运算变换成在循环前进行一次乘法运算。</p><p>最后一类操作是<strong>合并已知量和复写传播</strong>。有时很多运算结果都是编码时已知的，所以在代码编译时就可以计算出它们的值，我们把这种变换称为合并已知量。</p><p>还有多个变量之间的互相引用，比如变量A被变量B引用，而变量B又被变量C引用，如果A与C之间没有能够改变B的代码，就直接让C引用A，这种变换称为复写传播。</p><h2>第二题</h2><p>在<a href=\"https://time.geekbang.org/column/article/572830\">堆与栈的区别和应用</a>这节课中，我们知道了堆与栈区别。同时，我们也清楚了C语言的函数的局部变量和返回地址都保存在栈中，如果有人对这栈中数据破坏就会导致安全隐患，例如改写返回地址，使之指向别的恶意程序。那问题来了，请问我们有什么栈保护机制么，可以用你的语言描述一下么？</p><h3>第二题参考答案</h3><p>栈保护机制有很多，我给你分享比较典型的几种。</p><p>首先是由编译器在编译程序时，稍微做个检查，看看是否存在栈内缓冲区溢出的错误。程序代码中采用大量的字符串或者内存操作的函数，比较适合做这样的检查。通过给gcc加上 -D_FORTIFY_SOURCE=1或者2时，在编译或者代码运行时，通过判断数组大小来替换strcpy、memcpy、memset等函数名，将它们替换成编译器中带有检查代码的函数，从而防止缓冲区溢出。</p><p>通过操作系统对页表的NX位进行设置，这种方法也很常见。NX即No-eXecute，意思是不可执行。带NX位的页表所指向的内存中的数据是不可执行的，当程序溢出成功转入恶意代码时，程序会尝试在数据页面上执行指令，此时CPU就会抛出异常，不去执行恶意代码，主要防止恶意代码在数据区溢出。</p><p>还有一种简称为ASLR的方法，即地址空间分布随机化。内存空间地址随机化机制可以将进程的mmap基地址、heap基地址、栈基地址、共享库基地址随机化。这样能有效阻止攻击者在堆、栈上运行恶意代码。</p><p>最后还有栈溢出保护canary，这是一种由编译器支持的技术。在Linux中将cookie信息称为canary。攻击者在覆盖返回地址的时候往往也会将cookie信息给覆盖掉，导致栈保护检查失败。</p><p>而canary技术的大致思路是这样的，当启用栈溢出保护后，编译器会插入相关代码，在函数开始执行的时候就会向栈里写入cookie信息。当函数真正返回的时候，就会通过编译器插入的代码来验证cookie信息是否合法。如果不合法程序就会停止运行，这样就能阻止恶意攻击代码的执行。</p><p>通过这两道题目，我们又补充了代码优化和栈保护机制的知识。接下来，我们继续回到课程主线的学习，期待你把精神状态拉满，之后学有所成！</p>","neighbors":{"left":{"article_title":"国庆策划02｜来自课代表的学习锦囊","id":576970},"right":{"article_title":"31｜外设通信：IO Cache与IO调度","id":580037}},"comments":[{"had_liked":false,"id":359052,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"湖北","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1665208216,"is_pvip":false,"replies":[{"id":131072,"content":"虚拟地址","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1666422037,"ip_address":"湖北","comment_id":359052,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"请教一个问题：\nQ1：随机地址是物理地址还是虚拟地址？\n文中提到的ALSR方法，会把地址空间进行随机化分布，请问被随机化分布的地址是物理地址还是虚拟地址？","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591270,"discussion_content":"虚拟地址","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666422037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359044,"user_name":"LockedX","can_delete":false,"product_type":"c1","uid":1683139,"ip_address":"湖北","ucode":"19B82B910FC67F","user_header":"https://static001.geekbang.org/account/avatar/00/19/ae/c3/d930693b.jpg","comment_is_top":false,"comment_ctime":1665198451,"is_pvip":false,"replies":[{"id":131049,"content":"可以安排","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1666420974,"ip_address":"湖北","comment_id":359044,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"彭老师可以开一个编译器的课程，编译器可太有意思了^_^","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591245,"discussion_content":"可以安排","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666420975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}