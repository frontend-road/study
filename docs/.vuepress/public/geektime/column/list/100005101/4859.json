{"id":4859,"title":"09 | 协同过滤中的相似度计算方法有哪些","content":"<p>今天，我们来聊聊协同过滤中的相似度计算方法有哪些。</p>\n<h2>相似度的本质</h2>\n<p>推荐系统中，推荐算法分为两个门派，一个是机器学习派，另一个就是相似度门派。机器学习派是后起之秀，而相似度派则是泰山北斗，以致撑起来推荐系统的半壁江山。</p>\n<p>近邻推荐顾名思义就是在地理位置上住得近。如果用户有个邻居，那么社交软件上把邻居推荐给他在直观上就很合理，当然，如果邻居姓王的话，就不要推荐了。</p>\n<p>这里说的近邻，并不一定只是在三维空间下的地理位置的近邻，在任意高维空间都可以找到近邻，尤其是当用户和物品的特征维度都很高时，要找到用户隔壁的邻居，就不是那么直观，需要选择好用适合的相似度度量办法。</p>\n<p>近邻推荐的核心就是相似度计算方法的选择，由于近邻推荐并没有采用最优化思路，所以效果通常取决于矩阵的量化方式和相似度的选择。</p>\n<p>相似度，与之配套的还有另一个概念就是距离，两者都是用来量化两个物体在高维空间中的亲疏程度的，它们是硬币的两面。</p>\n<p><strong>推荐算法中的相似度门派，实际上有这么一个潜在假设：如果两个物体很相似，也就是距离很近，那么这两个物体就很容易产生一样的动作。</strong></p>\n<p>如果两篇新闻很相似，那么他们很容易被同一个人先后点击阅读，如果两个用户很相似，那么他们就很容易点击同一个新闻。这种符合直觉的假设，大部分时候很奏效。</p>\n<p>其实属于另一门派的推荐算法——机器学习中，也有很多算法在某种角度看做是相似度度量。</p>\n<p>例如，逻辑回归或者线性回归中，一边是特征向量，另一边是模型参数向量，两者的点积运算，就可以看做是相似度计算，只不过其中的模型参数向量值并不是人肉指定的，而是从数据中由优化算法自动总结出来的。</p>\n<p>在近邻推荐中，最常用的相似度是余弦相似度。然而可以选用的相似度并不只是余弦相似度，还有欧氏距离、皮尔逊相关度、自适应的余弦相似度、局部敏感哈希等。使用场景各不相同，今天，我会分别一一介绍如下。</p>\n<h2>相似度的计算方法</h2>\n<h3>数据分类</h3>\n<p>在真正开始巡视相似度计算方法前，我先给你把度量对象做个简单分类。相似度计算对象是向量，或者叫做高维空间下的坐标，一个意思。那表示这个向量的数值就有两种：</p>\n<ol>\n<li>实数值；</li>\n<li>布尔值，也就是0或者1。</li>\n</ol>\n<!-- [[[read_end]]] -->\n<p>下面介绍的不同计算方法适用于不同的数据种类。</p>\n<h3>1欧氏距离</h3>\n<p>欧氏距离，如名字所料，是一个欧式空间下度量距离的方法。两个物体，都在同一个空间下表示为两个点，假如叫做p和q，分别都是n个坐标。那么欧式距离就是衡量这两个点之间的距离，从p到q移动要经过的距离。欧式距离不适合布尔向量之间。</p>\n<p>计算方式可以表示如下，我在文稿中放了一个公式，你可以点击查看。</p>\n<p>$$E(p,q) = \\sqrt{\\sum_{i=1}^{n}{(p_{i} - q_{i})^{2}}}$$</p>\n<p>这个公式就是，每一个坐标上的取值相减，求平方和，最后输出方根。</p>\n<p>显然，欧式距离得到的值是一个非负数，最大值是正无穷。通常相似度计算度量结果希望是[-1，1]或者[0，1]之间，所以欧式距离要么无法直接使用到这个场景中，要么需要经过二次转化得到，我在文稿中放了一个最常用的转化公式，你可以点击查看。</p>\n<p>$$ \\frac{1}{1+E(p,q)} $$</p>\n<p>距离加一后取倒数。这个公式能够把范围为0到正无穷的欧式距离转换为0到1的相似度。</p>\n<p>欧式距离度量的是空间中两个点的绝对差异，适用于分析用户能力模型之间的差异，比如消费能力、贡献内容的能力等。</p>\n<p>当然，虽然欧式距离计算两个点的距离，实际上，点的坐标表示和我们常说的向量表示是同一回事，希望这句话是废话，你早已懂得。</p>\n<h3>2余弦相似度</h3>\n<p>大名鼎鼎的余弦相似度，度量的是两个向量之间的夹角，其实就是用夹角的余弦值来度量，所以名字叫余弦相似度。当两个向量的夹角为0度时，余弦值为1，当夹角为90度时，余弦值为0，为180度时，余弦值则为-1。</p>\n<p>余弦相似度在度量文本相似度、用户相似度、物品相似度的时候都较为常用；但是在这里需要提醒你一点，余弦相似度的特点：它与向量的长度无关。因为余弦相似度计算需要对向量长度做归一化：</p>\n<p>$$cos(p,q) = \\frac{\\sum_{i}{p_{i}q_{i}}}{\\sqrt{\\sum_{i}{q_{i}^{2}}}\\sqrt{\\sum_{i}{p_{i}^{2}}}} $$</p>\n<p>经过向量长度归一化后的相似度量方式，背后潜藏着这样一种思想：两个向量，只要方向一致，无论程度强弱，都可以视为“相似”。</p>\n<p>这简直就是：招聘人才时只看价值观，不考核代码能力，只要肯干，搬砖嘛，谁搬不是搬。这样做错不错呢？很显然，有非常大的合理性。</p>\n<p>比如，我用140字的微博摘要了一篇5000字的博客内容，两者得到的文本向量可以认为方向一致，词频等程度不同，但是余弦相似度仍然认为他们是相似的。</p>\n<p>在协同过滤中，如果选择余弦相似度，某种程度上更加依赖两个物品的共同评价用户数，而不是用户给予的评分多少。这就是由于余弦相似度被向量长度归一化后的结果。</p>\n<p>余弦相似度对绝对值大小不敏感这件事，在某些应用上仍然有些问题。</p>\n<p>举个小例子，用户A对两部电影评分分别是1分和2分，用户B对同样这两部电影评分是4分和5分。用余弦相似度计算出来，两个用户的相似度达到0.98。这和实际直觉不符，用户A明显不喜欢这两部电影。</p>\n<p>针对这个问题，对余弦相似度有个改进，改进的算法叫做调整的余弦相似度（Adjusted Cosine Similarity）。调整的方法很简单，就是先计算向量每个维度上的均值，然后每个向量在各个维度上都减去均值后，再计算余弦相似度。</p>\n<p>前面这个小例子，用调整的余弦相似度计算得到的相似度是-0.1，呈现出两个用户口味相反，和直觉相符。</p>\n<h3>3皮尔逊相关度</h3>\n<p>皮尔逊相关度，实际上也是一种余弦相似度，不过先对向量做了中心化，向量p和q各自减去向量的均值后，再计算余弦相似度。</p>\n<p>$$R(p,q) = \\frac{\\sum_{i=1}^{n}{(p_{i} - \\bar{p})(q_{i} - \\bar{q})}}{\\sqrt{\\sum_{i=1}^{n}{(p_{i} - \\bar{p})^{2}}}\\sqrt{\\sum_{i=1}^{n}{(q_{i} - \\bar{q})^{2}}}}$$</p>\n<p>皮尔逊相关度计算结果范围在-1到1。-1表示负相关，1比表示正相关。皮尔逊相关度其实度量的是两个随机变量是不是在同增同减。</p>\n<p>如果同时对两个随机变量采样，当其中一个得到较大的值另一也较大，其中一个较小时另一个也较小时，这就是正相关，计算出来的相关度就接近1，这种情况属于沆瀣一气，反之就接近-1。</p>\n<p>由于皮尔逊相关度度量的时两个变量的变化趋势是否一致，所以不适合用作计算布尔值向量之间相关度，因为两个布尔向量也就是对应两个0-1分布的随机变量，这样的随机变量变化只有有限的两个取值，根本没有“变化趋势，高低起伏”这一说。</p>\n<h3>4 杰卡德（Jaccard）相似度</h3>\n<p>杰卡德相似度，是两个集合的交集元素个数在并集中所占的比例。由于集合非常适用于布尔向量表示，所以杰卡德相似度简直就是为布尔值向量私人定做的。对应的计算方式是：</p>\n<ol>\n<li>分子是两个布尔向量做点积计算，得到的就是交集元素个数；</li>\n<li>分母是两个布尔向量做或运算，再求元素和。</li>\n</ol>\n<p>余弦相似度适用于评分数据，杰卡德相似度适合用于隐式反馈数据。例如，使用用户的收藏行为，计算用户之间的相似度，杰卡德相似度就适合来承担这个任务。</p>\n<h2>总结</h2>\n<p>今天，我介绍了常用的几种相似度计算方法，以及其各自的使用场景。</p>\n<p>这里的场景是按照数据形式划分的，按照向量维度取值是否是布尔值来看，杰卡德相似度就只适合布尔值向量，余弦相似度弹性略大，适合两种向量。欧式距离度量的是绝对差异，余弦相似度度量的是方向差异，但是调整的余弦相似度则可以避免这个弱点。</p>\n<p>现在留给你一个问题：如果在一个社交网络中，要计算好友的相似度，你会选择哪种相似度来做？欢迎留言讨论。</p>\n<p>感谢收听，我们下期再见。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/dc/2a/dc6f7ddc7a766cf76f1f21aedd16b42a.jpg?wh=3560*2008\" alt=\"\" /></p>\n","neighbors":{"left":{"article_title":"08 | 解密“看了又看”和“买了又买”","id":4856},"right":{"article_title":"10 | 那些在Netflix Prize中大放异彩的推荐算法","id":5030}},"comments":[{"had_liked":false,"id":4252,"user_name":"叶晓锋","can_delete":false,"product_type":"c1","uid":1059032,"ip_address":"","ucode":"7A84CE1DB4AA88","user_header":"https://static001.geekbang.org/account/avatar/00/10/28/d8/356428c2.jpg","comment_is_top":false,"comment_ctime":1521784893,"is_pvip":false,"replies":[{"id":"995","content":"赞！","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521805067,"ip_address":"","comment_id":4252,"utype":1}],"discussion_count":2,"race_medal":0,"score":"332234266685","product_id":100005101,"comment_content":"如何做社交网络好友相似的度量，我喜欢这个问题。粗略来说我会用这几个特征：帖子发布数量，月均发帖数量，平均帖子字数，头像，一些标签数据，例如是否大V，是否营销号，是否网红，职业等标签数据。另外还可以统计发文Top关键词向量及词频。标签数据可计算杰卡的相似度，Top关键词可计算余弦相似度，发布量，字数等可计算欧氏距离，然后再融合这几种相似度得到总和相似度。","like_count":78,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416265,"discussion_content":"赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521805067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062367,"avatar":"https://static001.geekbang.org/account/avatar/00/10/35/df/67f91c36.jpg","nickname":"帅帅","note":"","ucode":"4F2C2A48A39125","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6140,"discussion_content":"怎么融合多重不同的相似度？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566721345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16488,"user_name":"auroroa","can_delete":false,"product_type":"c1","uid":1057164,"ip_address":"","ucode":"0FF44C9A40E8CD","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/8c/f7a24bc5.jpg","comment_is_top":false,"comment_ctime":1531981782,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"91726294998","product_id":100005101,"comment_content":"余弦相似度的小例子，用调整的余弦相似度计算得到的相似度是 -0.1。<br><br>这里计算的结果应该是 -1 吧，实际转换成（-1.5,-1.5）和（1.5,1.5）的余弦值<br>","like_count":22,"discussions":[{"author":{"id":1419187,"avatar":"https://static001.geekbang.org/account/avatar/00/15/a7/b3/b87be8bf.jpg","nickname":"Lukas","note":"","ucode":"C7E73E5F402435","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304921,"discussion_content":"对的，我也算了一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599712405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4235,"user_name":"愚公移山","can_delete":false,"product_type":"c1","uid":1059097,"ip_address":"","ucode":"9C6DAA10F89736","user_header":"","comment_is_top":false,"comment_ctime":1521766112,"is_pvip":false,"replies":[{"id":"999","content":"不一样。一个是对行向量中心化，一个是对列向量中心化。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521805212,"ip_address":"","comment_id":4235,"utype":1}],"discussion_count":1,"race_medal":0,"score":"83126144736","product_id":100005101,"comment_content":"老师，感觉改进的余弦相似度和皮尔逊相关度是一样的？","like_count":19,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416252,"discussion_content":"不一样。一个是对行向量中心化，一个是对列向量中心化。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1521805212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4274,"user_name":"曾阿牛","can_delete":false,"product_type":"c1","uid":1049468,"ip_address":"","ucode":"29A294174EF06B","user_header":"https://static001.geekbang.org/account/avatar/00/10/03/7c/39ea8a23.jpg","comment_is_top":false,"comment_ctime":1521825634,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"61651367778","product_id":100005101,"comment_content":"看过某厂分享过一种方法。<br>将社交网络看成图，用node2vec方法：<br>1.定义网络：用户为点，用户之间的沟通次数&#47;点赞次数等互动行为定义为边的权重<br>2.根据边的权重进行随机游走，生成序列<br>3.用word2vec生成点的向量值<br>4.选择相似度公式计算","like_count":15},{"had_liked":false,"id":16803,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1114238,"ip_address":"","ucode":"6ECBBA57DD2687","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/7e/c22945bf.jpg","comment_is_top":false,"comment_ctime":1532223126,"is_pvip":false,"replies":[{"id":"5867","content":"1.不必去纠结这个区分，所有数据你都应该拿来用。<br>2.用户收藏的目的可不是为了表达或者评价他对物品的喜好，而是为了以后看。<br>3.我认为反馈的主要直接目的不是表达“自己有多爱”，都是隐式反馈。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1532323821,"ip_address":"","comment_id":16803,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23007059606","product_id":100005101,"comment_content":"收藏为什么是隐式反馈数据呢？已经很强的表明用户的感兴趣程度了","like_count":5,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420934,"discussion_content":"1.不必去纠结这个区分，所有数据你都应该拿来用。\n2.用户收藏的目的可不是为了表达或者评价他对物品的喜好，而是为了以后看。\n3.我认为反馈的主要直接目的不是表达“自己有多爱”，都是隐式反馈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1532323821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158623,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1575423944,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10165358536","product_id":100005101,"comment_content":"感觉不同产品用的好友推荐策略是不太一样：<br><br>微博，可以通过关心的话题，转发情况以及点赞情况，是可以计算相似度的，但要适当降低大V和热门时间的系数。当然也会推荐你关注的人关注的人，这个是天然成立的。<br><br>微信，是熟人社交，但有时候不能通过点赞转发来判断是不是关系好，因为有时候是不得已而为之。可能通过好友的标签、屏蔽关系和联系的多少来计算亲密度会更准确一些。所以微信一开始是通过通讯录来完成市场占领的，后面是通过转发名片、群聊、扫一扫等方式，多数情况下并不需要主动推荐。<br><br>linkedin，是职场社交，更像基于图数据库，你有几个朋友通过几次跳转能联系到某人然后推荐。因为熟人的熟人可能是熟人。<br><br>facebook，其实是一个更纯粹的社交网络，需要多种推荐方式要一起使用才可以的。包括教育经历、工作经历、兴趣爱好、喜欢的话题、追星、择友标准、喜欢的食物等很多维度都要用到。感觉今天讲到的几种方法其实都可以使用，图数据库也要用到。","like_count":2},{"had_liked":false,"id":135464,"user_name":"Geek_75d2a2","can_delete":false,"product_type":"c1","uid":1673558,"ip_address":"","ucode":"C2D1BD7CC84C11","user_header":"","comment_is_top":false,"comment_ctime":1569169704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10159104296","product_id":100005101,"comment_content":"感谢分享，这个blog里面讲述了调整余弦相似度和皮尔逊相关度的区别：http:&#47;&#47;wulc.me&#47;2016&#47;02&#47;22&#47;%E3%80%8AProgramming%20Collective%20Intelligence%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0(2)--%E5%8D%8F%E5%90%8C%E8%BF%87%E6%BB%A4&#47;","like_count":3},{"had_liked":false,"id":4247,"user_name":"林彦","can_delete":false,"product_type":"c1","uid":1032615,"ip_address":"","ucode":"5094CC6ED7B40C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/a7/5e66d331.jpg","comment_is_top":false,"comment_ctime":1521781737,"is_pvip":false,"replies":[{"id":"997","content":"如果关系上有亲密度呢？","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521805143,"ip_address":"","comment_id":4247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10111716329","product_id":100005101,"comment_content":"用户好友关系是布尔值，适合Jaccard相似度和余弦相似度","like_count":2,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416262,"discussion_content":"如果关系上有亲密度呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521805143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45386,"user_name":"liuchen","can_delete":false,"product_type":"c1","uid":1313735,"ip_address":"","ucode":"B49339881A018B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JkY0hxE5l8K6FcGO5sJsq85CTCWia7y6fNETJ2KInniagYYbQClXoBlozsnt91YvUKn7VUbGlnibvxiaJXA3rCOAibg/132","comment_is_top":false,"comment_ctime":1543629540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838596836","product_id":100005101,"comment_content":"调整的余弦相似度计算就是用用户均值中心化后的向量进行余弦相似度计算，因为中心化后的值才相对真实反映用户的喜好<br>皮尔逊相关系数就是概率论的一种度量向量之间相关性的方法","like_count":1},{"had_liked":false,"id":16469,"user_name":"auroroa","can_delete":false,"product_type":"c1","uid":1057164,"ip_address":"","ucode":"0FF44C9A40E8CD","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/8c/f7a24bc5.jpg","comment_is_top":false,"comment_ctime":1531968156,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5826935452","product_id":100005101,"comment_content":"老师，有个这种情况请教下：<br>假设 A、B 是物品被购买的向量，向量的维度是用户 a,b,c 分别是物品被购买的次数，有如下两种情况：<br>第一种<br>A向量：[1,0,0]<br>B向量：[1,0,0]<br>第二种：<br>A向量：[1,1,0]<br>B向量：[1,1,0]<br>我用余弦相似度计算两种情况 A、B 向量的距离，发现结果是一样的，都是 1，相似度已经最大了。但实际上我当然希望的是第二种情况下的相似度更高，并且不希望这种只有一组共同购买的情况相似度这么高。<br>我换过其他计算距离的算法，都比这个好，但是为啥都说这个余弦相似度又是用的最广泛最好的？","like_count":1,"discussions":[{"author":{"id":1811062,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a2/76/bdea7aa1.jpg","nickname":"晨晓","note":"","ucode":"8AC664799E5CDD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213787,"discussion_content":"第一种情况你默认业务需求是当购买行为不足的时候，计算两者余弦相似度是不准确的，那你要么限制物品的购买行为不足时不计算两物品相似，而采用提取物品更多特征来计算相似。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585122398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4705,"user_name":"shoxx","can_delete":false,"product_type":"c1","uid":1063875,"ip_address":"","ucode":"A5A2FD6139B0F2","user_header":"","comment_is_top":false,"comment_ctime":1522371443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5817338739","product_id":100005101,"comment_content":"維度中心化—adjusted cosine similarity<br>向量中心化—皮爾森<br>是這樣嗎？","like_count":1},{"had_liked":false,"id":4241,"user_name":"holysky","can_delete":false,"product_type":"c1","uid":1065076,"ip_address":"","ucode":"DB0A6B2C4098AB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7h2t7ZmOZEkZDzx8lJZXuzw6M95B6oOq7jDArS4ep6B8LYH97UiafoL5PVc3TUYLKJByNSjib0WNg/132","comment_is_top":false,"comment_ctime":1521771007,"is_pvip":false,"replies":[{"id":"998","content":"欢迎传阅。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521805163,"ip_address":"","comment_id":4241,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5816738303","product_id":100005101,"comment_content":"讲的非常好。","like_count":1,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416258,"discussion_content":"欢迎传阅。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521805163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309397,"user_name":"步尘影月","can_delete":false,"product_type":"c1","uid":2732923,"ip_address":"","ucode":"E545A2EF0FDA12","user_header":"https://static001.geekbang.org/account/avatar/00/29/b3/7b/72ac4689.jpg","comment_is_top":false,"comment_ctime":1630083918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630083918","product_id":100005101,"comment_content":"相似度计算那个，向量长度归一化与不归一化，结果完全一样，，，","like_count":0},{"had_liked":false,"id":307949,"user_name":"果然爸爸","can_delete":false,"product_type":"c1","uid":1467300,"ip_address":"","ucode":"0E5F031A0E6A69","user_header":"https://static001.geekbang.org/account/avatar/00/16/63/a4/e663c4d4.jpg","comment_is_top":false,"comment_ctime":1629335877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629335877","product_id":100005101,"comment_content":"如果度量的指标有很多有连续值，离散值，布尔值，有没有统一的方法直接计算相似度。第一个留言是分开计算，不利于机器学习。","like_count":0},{"had_liked":false,"id":296941,"user_name":"listen","can_delete":false,"product_type":"c1","uid":1502877,"ip_address":"","ucode":"B9FDCC1ED1F659","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/9d/3266d88b.jpg","comment_is_top":false,"comment_ctime":1623232703,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1623232703","product_id":100005101,"comment_content":"jaccard我用的是minhashlsh，在approxSimilarityJoin计算相似度时导致有一部分大量相似用户数据在一个task。常用的优化方式并不能使用，老师能给一个优化建议吗？","like_count":0,"discussions":[{"author":{"id":2974686,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/63/de/3c2778f6.jpg","nickname":"晓海","note":"","ucode":"5107C0A84E03A7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579240,"discussion_content":"调整桶数量及hash函数个数，减少单个桶内数据量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657264487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210607,"user_name":"王岳","can_delete":false,"product_type":"c1","uid":1875386,"ip_address":"","ucode":"AF00423C5A5D7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLkJWMMMKD9BrqxQRnum7WxSXJjic1T96VjsPTP7HFrD6P6lMibnicWmQSGrlxmgWXUI3EIVeYh2NianA/132","comment_is_top":false,"comment_ctime":1587795075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587795075","product_id":100005101,"comment_content":"杰卡德（Jaccard）相似度，公式没显示出来","like_count":0},{"had_liked":false,"id":10162,"user_name":"greekzf","can_delete":false,"product_type":"c1","uid":1094710,"ip_address":"","ucode":"07C05289F6F75D","user_header":"https://static001.geekbang.org/account/avatar/00/10/b4/36/8e3e4d4e.jpg","comment_is_top":false,"comment_ctime":1527316381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1527316381","product_id":100005101,"comment_content":"老师   不是一个对行 一个对列吧   得分是基于用户的还是商品的吧","like_count":0},{"had_liked":false,"id":5511,"user_name":"竹子","can_delete":false,"product_type":"c1","uid":1085218,"ip_address":"","ucode":"1B674DC290EF9A","user_header":"","comment_is_top":false,"comment_ctime":1523441577,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1523441577","product_id":100005101,"comment_content":"关于相似度的算法，基本理解了。有一个问题，对推荐内容的评分预测，是否能讲解下","like_count":0},{"had_liked":false,"id":4281,"user_name":"Leeb","can_delete":false,"product_type":"c1","uid":1031354,"ip_address":"","ucode":"B2EA9348A6915C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/ba/cea787ed.jpg","comment_is_top":false,"comment_ctime":1521865092,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1521865092","product_id":100005101,"comment_content":"图书借阅的话，没有评分，只能是布尔值了？用slope one合适吗？","like_count":0},{"had_liked":false,"id":4265,"user_name":"林彦","can_delete":false,"product_type":"c1","uid":1032615,"ip_address":"","ucode":"5094CC6ED7B40C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/a7/5e66d331.jpg","comment_is_top":false,"comment_ctime":1521807980,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1521807980","product_id":100005101,"comment_content":"第一个长回答已经不错了。如果有亲密度或其他量化数据可以用欧氏距离，调整的余弦相似度或皮尔逊相关系数。自己还未时间对比过不同距离的效果，不知道哪种更适合什么特定场景。","like_count":0},{"had_liked":false,"id":4244,"user_name":"damonhao","can_delete":false,"product_type":"c1","uid":1001968,"ip_address":"","ucode":"AF1DFB57714680","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/f0/a5836d8f.jpg","comment_is_top":false,"comment_ctime":1521775681,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1521775681","product_id":100005101,"comment_content":"Jaccard和余弦都可","like_count":0}]}