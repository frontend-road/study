{"id":71840,"title":"01 | 二进制：不了解计算机的源头，你学什么编程","content":"<p>我们都知道，计算机的起源是数学中的二进制计数法。可以说，没有二进制，就没有如今的计算机系统。那什么是二进制呢？为什么计算机要使用二进制，而不是我们日常生活中的十进制呢？如何在代码中操作二进制呢？专栏开始，我们就从计算机认知的起源——二进制出发，讲讲它在计算机中的“玄机”。</p><h2>什么是二进制计数法？</h2><p>为了让你更好地理解二进制计数法，我们先来简单地回顾一下人类计数的发展史。</p><p>原始时代，人类用路边的小石子，来统计放牧归来的羊只数量，这表明我们很早就产生了计数的意识。后来，罗马人用手指作为计数的工具，并在羊皮上画出Ⅰ、Ⅱ、Ⅲ来代替手指的数量。表示一只手时，就写成“Ⅴ”形，表示两只手时，就画成“ⅤⅤ”形等等。</p><p>公元3世纪左右，印度数学家（也有说法是阿拉伯人）发明了阿拉伯数字。阿拉伯数字由从0到9这样10个计数符号组成，并采取<strong>进位制法</strong>，高位在左，低位在右，从左往右书写。由于阿拉伯数字本身笔画简单，演算便利，因此它们逐渐在各国流行起来，成为世界通用的数字。</p><p>日常生活中，我们广泛使用的十进制计数法，也是基于阿拉伯数字的。这也是十进制计数法的基础。因此，相对其他计数方法，十进制最容易被我们所理解。</p><p>让我们来观察一个数字：2871。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/d9/3d/d99f094c432638924f8665a178162c3d.jpg?wh=1142*336\" alt=\"\"></p><p>其中^表示幂或次方运算。十进制的数位（千位、百位、十位等）全部都是10^n的形式。需要特别注意的是，任何非0数字的0次方均为1。在这个新的表示式里，10被称为十进制计数法的<strong>基数</strong>，也是十进制中“十”的由来。这个我想你应该好理解，因为这和我们日常生活的习惯是统一的。</p><p>明白了十进制，我们再试着用类似的思路来理解二进制的定义。我以二进制数字110101为例，解释给你听。我们先来看，这里110101究竟代表了十进制中的数字几呢？</p><p>刚才我们说了，十进制计数是使用10作为基数，那么二进制就是使用2作为基数，类比过来，<strong>二进制的数位就是2^n的形式</strong>。如果需要将这个数字转化为人们易于理解的十进制，我们就可以这样来计算：</p><p><img src=\"https://static001.geekbang.org/resource/image/c6/c0/c6ae1772d7bf369aa9939fc00ca7b5c0.jpg?wh=1142*456\" alt=\"\"></p><p>按照这个思路，我们还可以推导出八进制（以8为基数）、十六进制（以16为基数）等等计数法，很简单，我在这里就不赘述了。</p><p>至此，你应该已经理解了什么是二进制。但是仅有数学的理论知识是不够的，结合相关的代码实践，相信你会有更深刻的印象。</p><p>基于此，我们来看看二进制和十进制数在Java语言中是如何互相转换的，并验证一下我们之前的推算。我这里使用的是Java语言来实现的，其他主流的编程语言实现方式都是类似的。</p><p>这段代码的实现采用了Java的BigInteger类及其API函数，我都加了代码注释，并且穿插一些解释，你应该可以看懂。</p><p>首先，我们引入BigInteger包，通过它和Integer类的API函数进行二进制和十进制的互相转换。</p><pre><code>import java.math.BigInteger;\n\npublic class Lesson1_1 {\n  \n   /**\n\n    * @Description: 十进制转换成二进制\n    * @param decimalSource\n    * @return String\n    */\n    public static String decimalToBinary(int decimalSource) {\n       BigInteger bi = new BigInteger(String.valueOf(decimalSource)); //转换成BigInteger类型，默认是十进制\n       return bi.toString(2); //参数2指定的是转化成二进制\n    }\n\n    /**\n    * @Description: 二进制转换成十进制\n    * @param binarySource\n    * @return int\n    */\n    public static int binaryToDecimal(String binarySource) {\n       BigInteger bi = new BigInteger(binarySource, 2);  //转换为BigInteger类型，参数2指定的是二进制\n       return Integer.parseInt(bi.toString());     //默认转换成十进制\n    }\n}\n</code></pre><p>然后，我们通过一个十进制数和一个二进制数，来验证一下上述代码的正确性。</p><pre><code> public static void main(String[] args) {     \n\n      int a = 53;\n      String b = &quot;110101&quot;;\n      System.out.println(String.format(&quot;数字%d的二进制是%s&quot;, a, Lesson1_1.decimalToBinary(a))); //获取十进制数53的二进制数\n      System.out.println(String.format(&quot;数字%s的十进制是%d&quot;, b, Lesson1_1.binaryToDecimal(b))); //获取二进制数110101的十进制数\n\n   }\n\n</code></pre><p>这段代码运行的结果是：十进制数字53的二进制是110101，二进制数字110101的十进制是53。</p><p>好了，关于十进制和二进制的概念以及进制之间的相互转换，你应该都很清楚了。既然有十进制，又有二进制，你可能就要问了，为啥计算机使用的是二进制而不是十进制呢？</p><h2>计算机为什么使用二进制？</h2><p>我觉得，计算机使用二进制和现代计算机系统的硬件实现有关。组成计算机系统的逻辑电路通常只有两个状态，即开关的接通与断开。</p><p>断开的状态我们用“0”来表示，接通的状态用“1”来表示。由于每位数据只有断开与接通两种状态，所以即便系统受到一定程度的干扰时，它仍然能够可靠地分辨出数字是“0”还是“1”。因此，在具体的系统实现中，二进制的数据表达具有抗干扰能力强、可靠性高的优点。</p><p>相比之下，如果用十进制设计具有10种状态的电路，情况就会非常复杂，判断状态的时候出错的几率就会大大提高。</p><p>另外，二进制也非常适合逻辑运算。逻辑运算中的“真”和“假”，正好与二进制的“0”和“1”两个数字相对应。逻辑运算中的加法（“或”运算）、乘法（“与”运算）以及否定（“非”运算）都可以通过“0”和“1”的加法、乘法和减法来实现。</p><h2>二进制的位操作</h2><p>了解了现代计算机是基于二进制的，我们就来看看，计算机语言中针对二进制的位操作。这里的<strong>位操作</strong>，也叫作<strong>位运算</strong>，就是直接对内存中的二进制位进行操作。常见的二进制位操作包括向左移位和向右移位的移位操作，以及“或”“与”“异或”的逻辑操作。下面我们一一来看。</p><h3>向左移位</h3><p>我们先来看向左移位。</p><p>二进制110101向左移一位，就是在末尾添加一位0，因此110101就变成了1101010。请注意，这里讨论的是数字没有溢出的情况。</p><p>所谓<strong>数字溢出</strong>，就是二进制数的位数超过了系统所指定的位数。目前主流的系统都支持至少32位的整型数字，而1101010远未超过32位，所以不会溢出。如果进行左移操作的二进制已经超出了32位，左移后数字就会溢出，需要将溢出的位数去除。</p><p><img src=\"https://static001.geekbang.org/resource/image/cd/76/cdbeb658035f275aa941a0d3f6eac876.jpg?wh=1142*636\" alt=\"\"></p><p>在这个例子中，如果将1101010换算为十进制，就是106，你有没有发现，106正好是53的2倍。所以，我们可以得出一个结论：<strong>二进制左移一位，其实就是将数字翻倍</strong>。</p><h3>向右移位</h3><p>接下来我们来看向右移位。</p><p>二进制110101向右移一位，就是去除末尾的那一位，因此110101就变成了11010（最前面的0可以省略）。我们将11010换算为十进制，就是26，正好是53除以2的整数商。所以<strong>二进制右移一位，就是将数字除以2并求整数商的操作</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/8d/34/8df282639b609d5269582c789796c334.jpg?wh=1142*636\" alt=\"\"></p><p>下面我们来看看，用代码如何进行移位操作。</p><pre><code>import java.math.BigInteger;\n\npublic class Lesson1_2 {  \n\n   /**\n    * @Description: 向左移位\n    * @param num-等待移位的十进制数, m-向左移的位数\n    * @return int-移位后的十进制数\n    */\n   public static int leftShift(int num, int m) {\n      return num &lt;&lt; m;\n   }\n  \n   /**\n    * @Description: 向右移位\n    * @param num-等待移位的十进制数, m-向右移的位数\n    * @return int-移位后的十进制数\n    */\n   public static int rightShift(int num, int m) {\n      return num &gt;&gt;&gt; m;\n   } \n \n}\n</code></pre><p>然后，我们用一段测试代码验证下结果。</p><pre><code>public static void main(String[] args) {     \n\n      int num = 53;\n      int m = 1;\n      System.out.println(String.format(&quot;数字%d的二进制向左移%d位是%d&quot;, num, m, Lesson1_2.leftShift(num, m)));   //测试向左移位\n      System.out.println(String.format(&quot;数字%d的二进制向右移%d位是%d&quot;, num, m, Lesson1_2.rightShift(num, m)));   //测试向右移位     \n\n      System.out.println();\n     \n      m = 3;\n      System.out.println(String.format(&quot;数字%d的二进制向左移%d位是%d&quot;, num, m, Lesson1_2.leftShift(num, m)));   //测试向左移位\n      System.out.println(String.format(&quot;数字%d的二进制向右移%d位是%d&quot;, num, m, Lesson1_2.rightShift(num, m)));   //测试向右移位 \n\n   } \n\n</code></pre><p>这段代码的运行结果是：数字53向左移1位是106；数字53向右移1位是26。数字53向左移3位是424，数字53向右移3位是6。</p><p>我来解释一下。其中，移位1次相当于乘以或除以2，而移位3次就相当于乘以或除以8（即2的3次方）。细心的话，你可能已经发现，Java中的左移位和右移位的表示是不太一样的。</p><p><strong>左移位是&lt;&lt;，那右移位为什么是&gt;&gt;&gt;而不是&gt;&gt;呢？</strong>实际上，&gt;&gt;也是右移操作。简单来说，之所以有这两种表达方式，根本原因是Java的二进制数值中最高一位是符号位。这里我给你详细解释一下。</p><p>当符号位为0时，表示该数值为正数；当符号位为1时，表示该数值为负数。我们以32位Java为例，数字53的二进制为110101，从右往左数的第32位是0，表示该数是正数，只是通常我们都将其省略。</p><p><img src=\"https://static001.geekbang.org/resource/image/83/ef/831a21734048b1fc3e357609527175ef.jpg?wh=1142*346\" alt=\"\"></p><p>如果数字是-53呢？那么第32位就不是0，而是1。请注意我这里列出的是补码。</p><p><img src=\"https://static001.geekbang.org/resource/image/85/1e/857248d65d7c4b746b3677d45b2a2c1e.jpg?wh=1142*339\" alt=\"\"></p><p>那么这个时候向右移位，就会产生一个问题：对于符号位（特别是符号位为1的时候），我们是否也需要将其右移呢？因此，Java里定义了两种右移，<strong>逻辑右移</strong>和<strong>算术右移</strong>。逻辑右移1位，左边补0即可。</p><p><img src=\"https://static001.geekbang.org/resource/image/74/c7/745a4880417a4dcb62f88bad7be800c7.jpg?wh=1142*723\" alt=\"\"></p><p>算术右移时保持符号位不变，除符号位之外的右移一位并补符号位1。补的1仍然在符号位之后。</p><p><img src=\"https://static001.geekbang.org/resource/image/b0/07/b00b38ba0e8e2349a64b52905852e107.jpg?wh=1142*720\" alt=\"\"></p><p>逻辑右移在Java和Python语言中使用&gt;&gt;&gt;表示，而算术右移使用&gt;&gt;表示。如果你有兴趣，可以自己编码尝试一下，看看这两种操作符输出的结果有何不同。</p><p>在C或C++语言中，逻辑右移和算数右移共享同一个运算符&gt;&gt;。那么，编译器是如何决定使用逻辑右移还是算数右移呢？答案是，取决于运算数的类型。如果运算数类型是unsigned，则采用逻辑右移；而是signed，则采用算数右移。如果你针对unsigned类型的数据使用算数右移，或者针对signed类型的数据使用逻辑右移，那么你首先需要进行类型的转换。</p><p>由于左移位无需考虑高位补1还是补0（符号位可能为1或0），所以不需要区分逻辑左移和算术左移。</p><h3>位的“或”</h3><p>我们刚才说了，二进制的“1”和“0”分别对应逻辑中的“真”和“假”，因此可以针对位进行逻辑操作。</p><p>逻辑“或”的意思是，参与操作的位中只要有一个位是1，那么最终结果就是1，也就是“真”。如果我们将二进制110101和100011的每一位对齐，进行按位的“或”操作，就会得到110111。</p><p><img src=\"https://static001.geekbang.org/resource/image/83/15/8394b6daf1d9727069736506332c4915.jpg?wh=1142*625\" alt=\"\"></p><h3>位的“与”</h3><p>同理，我们也可以针对位进行逻辑“与”的操作。“与”的意思是，参与操作的位中必须全都是1，那么最终结果才是1（真），否则就为0（假）。如果我们将二进制110101和100011的每一位对齐，进行按位的“与”操作，就会得到100001。</p><p><img src=\"https://static001.geekbang.org/resource/image/b1/19/b1c520385f4e5a5b719c393f9e1d0019.jpg?wh=1142*625\" alt=\"\"></p><h3>位的“异或”</h3><p>逻辑“异或”和“或”有所不同，它具有排异性，也就是说如果参与操作的位相同，那么最终结果就为0（假），否则为 1（真）。所以，如果要得到1，参与操作的两个位必须不同，这就是此处“异”的含义。我们将二进制110101和100011的每一位对齐，进行按位的“异或”操作，可以得到结果是10110。</p><p><img src=\"https://static001.geekbang.org/resource/image/c7/87/c7ae84301b2742b6714c01a77e6a6b87.jpg?wh=1142*623\" alt=\"\"></p><p>我总结一下，“异或”操作的本质其实就是，所有数值和自身进行按位的“异或”操作之后都为0。而且要通过“异或”操作得到0，也必须通过两个相同的数值进行按位“异或”。这表明了两个数值按位“异或”结果为0，是这两个数值相等的必要充分条件，可以作为判断两个变量是否相等的条件。</p><p>接下来，我们来学习一下，在代码中如何实现二进制的逻辑操作。Java中使用|表示按位的“或”，&amp;表示按位“与”，^表示按位“异或”。</p><pre><code>import java.math.BigInteger;\n\npublic class Lesson1_3 {  \n\n   /**\n    * @Description: 二进制按位“或”的操作\n    * @param num1-第一个数字，num2-第二个数字\n    * @return 二进制按位“或”的结果\n    */\n   public static int or(int num1, int num2) {\n        \n      return (num1 | num2);\n     \n   }  \n\n   /**\n    * @Description: 二进制按位“与”的操作\n    * @param num1-第一个数字，num2-第二个数字\n    * @return 二进制按位“与”的结果\n    */\n   public static int and(int num1, int num2) {     \n   \n      return (num1 &amp; num2);\n     \n   } \n\n   /**\n\n    * @Description: 二进制按位“异或”的操作\n    * @param num1-第一个数字，num2-第二个数字\n    * @return 二进制按位“异或”的结果\n    */\n\n   public static int xor(int num1, int num2) {     \n\n      return (num1 ^ num2);\n     \n   }  \n\n\n}\n</code></pre><p>同样，我们写一段测试代码，验证一下上面三个函数。</p><pre><code> public static void main(String[] args) {\n\n      int a = 53;\n      int b = 35;\n\n      System.out.println(String.format(&quot;数字%d(%s)和数字%d(%s)的按位‘或’结果是%d(%s)&quot;,\n            a, decimalToBinary(a), b, decimalToBinary(b), Lesson2_3.or(a, b), decimalToBinary(Lesson1_3.or(a, b)))); //获取十进制数53和35的按位“或”     \n\n      System.out.println(String.format(&quot;数字%d(%s)和数字%d(%s)的按位‘与’结果是%d(%s)&quot;,\n            a, decimalToBinary(a), b, decimalToBinary(b), Lesson2_3.and(a, b), decimalToBinary(Lesson1_3.and(a, b))));  //获取十进制数53和35的按位“与”     \n\n      System.out.println(String.format(&quot;数字%d(%s)和数字%d(%s)的按位‘异或’结果是%d(%s)&quot;,\n            a, decimalToBinary(a), a, decimalToBinary(a), Lesson2_3.xor(a, a), decimalToBinary(Lesson1_3.xor(a, a))));  //获取十进制数53和35的按位“异或”     \n\n   } \n\n\n</code></pre><p>这段代码的运行结果是：数字53(110101)和数字35(100011)的按位‘或’结果是55(110111)，数字53(110101)和数字35(100011)的按位‘与’结果是33(100001)，数字53(110101)和数字53(110101)的按位‘异或’结果是0(0)。</p><h2>小结</h2><p>今天我们聊了二进制，你可能会问：学习二进制究竟有什么用呢？平时的编程中，我们好像并没有使用相关的知识啊？确实，目前的高级语言可以帮助我们将人类的思维逻辑转换为使用0和1的机器语言，我们不用再为此操心了。但是，二进制作为现代计算机体系的基石，这些基础的概念和操作，你一定要非常了解。</p><p>二进制贯穿在很多常用的概念和思想中，例如逻辑判断、二分法、二叉树等等。逻辑判断中的真假值就是用二进制的1和0来表示的；二分法和二叉树都是把要处理的问题一分为二，正好也可以通过二进制的1和0来表示。因此，理解了二进制，你就能更加容易地理解很多计算机的数据结构和算法，也为我们后面的学习打下基础。</p><p><img src=\"https://static001.geekbang.org/resource/image/20/74/209f1b06efdf9a7413fb793571c7ed74.jpg?wh=1242*1914\" alt=\"\"></p><h2>思考题</h2><p>如果不使用Java语言自带的BigInteger类，我们还有什么方法来实现十进制到二进制的转换呢？（提示：可以使用二进制的移位和按位逻辑操作来实现。）</p><p><span class=\"orange\">欢迎在留言区交作业，并写下你今天的学习笔记。你可以点击“请朋友读”，把今天的内容分享给你的好友，和他一起精进。</span></p><p></p>","comments":[{"had_liked":false,"id":118806,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":true,"comment_ctime":1564448824,"is_pvip":true,"replies":[{"id":"43656","content":"你可以看下加餐部分关于负数的补码，就能明白了","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1564524760,"ip_address":"","comment_id":118806,"utype":1}],"discussion_count":4,"race_medal":0,"score":"9.2233720641889997e+18","product_id":100021201,"comment_content":"老师，您好.<br>请问下面这个，为什么是补1 ，而不是补0？<br><br>“算术右移时保持符号位不变，除符号位之外的右移一位并补符号位 1。补的 1 仍然在符号位之后。","like_count":6,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460589,"discussion_content":"你可以看下加餐部分关于负数的补码，就能明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564524760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572517,"discussion_content":"首先，数值在计算机中以补码表示。然后，对于算术右移，图中给出的-53是负数，符号位是1，所以补1。如果是正数，符号位为0，且补码与原码相同，那么补0即可。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652836089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1455958,"avatar":"https://static001.geekbang.org/account/avatar/00/16/37/56/11068390.jpg","nickname":"倡印","note":"","ucode":"4F53AA5D017D89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400264,"discussion_content":"这个是计算机的另一个基础知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633220498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1156074,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","nickname":"HoSalt","note":"","ucode":"610B03E2A002D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216955,"discussion_content":"还是没明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585493370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48236,"user_name":"无双","can_delete":false,"product_type":"c1","uid":1238757,"ip_address":"","ucode":"405779043D091E","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/e5/e3daa1a7.jpg","comment_is_top":false,"comment_ctime":1544405176,"is_pvip":false,"replies":[{"id":"17231","content":"如果要快速在二进制、八进制和十六进制间转换，方法确实存在，可以上网查一些资料。如果很多人都感兴趣，我可以加入","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544411974,"ip_address":"","comment_id":48236,"utype":1}],"discussion_count":2,"race_medal":0,"score":"409566298296","product_id":100021201,"comment_content":"请问有没有方法，快速实现进制转换，比如二进制、十进制、八进制、十六进制互相转化，我考试有要求要转，就是笔算，谢谢。","like_count":95,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432082,"discussion_content":"如果要快速在二进制、八进制和十六进制间转换，方法确实存在，可以上网查一些资料。如果很多人都感兴趣，我可以加入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544411974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1294191,"avatar":"https://static001.geekbang.org/account/avatar/00/13/bf/6f/98e73412.jpg","nickname":"匿名用户","note":"","ucode":"D9B53A5929DAF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292653,"discussion_content":"十进制转二进制：除二求余，得到低位到高位的二进制数字排列\n十进制转八进制：除八求余，得到低位到高位的八进制数字排列\n十进制转十六进制：除十六取余，得到低位到高位的十六进制数字排列，对于 10 ~ 15 转换为 A - F 需要做映射表\n\n二进制转十进制：每个二进制位数字乘以该位置的权值，最后求和（权值就是基数的二进制索引次方，索引从 0 开始，比如 2^0）\n八进制转十进进制：每个八进制位数字乘以该位的权值，最后求和\n十六进制转十进制：每个十六进制为数字乘以该位的权值，最后求和。对于 A ~ F 的字母需要查表取数值\n\n二进制转八进制：取三合一，即取三个二进制位求十进制数值；从右至左取三合一得到八进制的低位到高位数字排列（左侧取三不够时补 0 凑足）\n八进制转二进制：取一分三，即取一个八进制位求二进制数字；从左至右取一分三得到二进制的高位到低位数字排列\n\n二进制转十六进制：取四合一，即取四个二进制位求十进制数值；从右至左取四合一得到十六进制的低位到高位数字排列（左侧取四不够时补 0 凑足）\n十六进制转二进制：取一分四，即取一个十六进制为求二进制数字；从左至右取一分四得到二进制的高位到低位的数字排列\n\n八进制和十六进制互相转换借助二进制做中转","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1595296179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60688,"user_name":"huang","can_delete":false,"product_type":"c1","uid":1022220,"ip_address":"","ucode":"5C4691D0FAD085","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/0c/82250f1e.jpg","comment_is_top":false,"comment_ctime":1547531063,"is_pvip":false,"replies":[{"id":"21697","content":"很好的回答","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547574910,"ip_address":"","comment_id":60688,"utype":1}],"discussion_count":6,"race_medal":0,"score":"349439882039","product_id":100021201,"comment_content":"算术左移和逻辑左移一样，是因为对于有符号数来说，如果数据最高位（第二个bit）和符号位（第一个bit）不同，则左移之后必然溢出。<br>举个例子，8个bit表示-128-127，如果数据最高位和符号位不同，则这个数的绝对值肯定大于64，左移一位肯定溢出。<br>所以“有效”的左移不用担心数据最高位会改变符号位，也就不用区分逻辑左移和算术左移。","like_count":81,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436586,"discussion_content":"很好的回答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547574910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3411,"discussion_content":"     逻辑右移:所有数字都右移,然后左补0 . \n      逻辑左移:所有数字都左移, 右补0\n    \n    算术右移:算术右移需要考虑符号位，右移一位，若符号位为1，就在左边补1,；否则，就补0。\n     算术左移:与逻辑左移一致.","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1564465368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237880,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e3/78/3321053c.jpg","nickname":"hshayq","note":"","ucode":"F5435E14BCCD25","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305521,"discussion_content":"原来如此，左移会溢出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599981814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1653332,"avatar":"https://static001.geekbang.org/account/avatar/00/19/3a/54/72402617.jpg","nickname":"上善若水","note":"","ucode":"E3F15FB8576626","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41197,"discussion_content":"起码现在是64位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572362589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1509521,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLBZ0FpJ2bficfG0ICl8MPoticp1QtB0RWft5xgT4t4nDLz43ic4YPumwVGaRnMROXgNZoVkMhd7Txpuw/132","nickname":"Ron","note":"","ucode":"CF617342B05D8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4455,"discussion_content":"请问绝对值必大于64是怎么来的 求解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565434417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1637778,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIhfSWWhgia8nIay4jPAC4ib2jicgWqOpuwibX38WZvaIAwOW35jXD5QDPWkTICb7DN4e5GLyb171CXRw/132","nickname":"Geek_4533f8","note":"","ucode":"19C85E34F72FBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1509521,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ajNVdqHZLLBZ0FpJ2bficfG0ICl8MPoticp1QtB0RWft5xgT4t4nDLz43ic4YPumwVGaRnMROXgNZoVkMhd7Txpuw/132","nickname":"Ron","note":"","ucode":"CF617342B05D8F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7683,"discussion_content":"8bit的数据最高位是bit6（0开始），如果是正数，和符号位不同那这一bit就是1，那这个byte的值必然大于等于2的6次方64；如果是负数，和符号位不同那这一bit就是0，那这个byte的值必然小于等于10111111，也就是-65","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1567610913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4455,"ip_address":""},"score":7683,"extra":""}]}]},{"had_liked":false,"id":59019,"user_name":"King","can_delete":false,"product_type":"c1","uid":1360108,"ip_address":"","ucode":"6AA0FF81FA05D3","user_header":"https://static001.geekbang.org/account/avatar/00/14/c0/ec/1403f7b2.jpg","comment_is_top":false,"comment_ctime":1547274137,"is_pvip":false,"replies":[{"id":"21447","content":"很好的总结","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547406584,"ip_address":"","comment_id":59019,"utype":1}],"discussion_count":4,"race_medal":0,"score":"293605050265","product_id":100021201,"comment_content":"&#47;**<br>\t * @Title: decimalToBinary<br>\t * @Description: 十进制转二进制，方法1：余数短除法除以二<br>\t * @param decimalSource<br>\t * @return: String<br>\t *&#47;<br>\t&#47;*public static String decimalToBinary(int decimalSource) {<br>\t\tStringBuilder sb = new StringBuilder();<br>\t\twhile (decimalSource != 0) {<br>\t\t\tsb.append(decimalSource % 2);<br>\t\t\tdecimalSource = decimalSource &gt;&gt; 1;<br>\t\t}<br>\t\treturn sb.reverse().toString();<br>\t}*&#47;<br><br>\t&#47;**<br>\t * @Title: decimalToBinary<br>\t * @Description: 十进制转二进制，方法2：降二次幂及减法混合运算<br>\t * @param decimalSource<br>\t * @return: String<br>\t *&#47;<br>\t&#47;*public static String decimalToBinary(int decimalSource) {<br>\t\tint length = (int) (Math.log(decimalSource) &#47; Math.log(2));<br>\t\tStringBuffer sb = new StringBuffer();<br>\t\tdo {<br>\t\t\tdecimalSource = (int) (decimalSource - Math.pow(2, length));<br>\t\t\tint power = decimalSource &lt;= 0 ? -1 : (int) (Math.log(decimalSource) &#47; Math.log(2));<br>\t\t\tfor (int i = length; i &gt; power; i--) {<br>\t\t\t\tif (i == length) {<br>\t\t\t\t\tsb.append(&quot;1&quot;);<br>\t\t\t\t} else {<br>\t\t\t\t\tsb.append(&quot;0&quot;);<br>\t\t\t\t}<br>\t\t\t}<br>\t\t\tlength = power;<br>\t\t} while (decimalSource &gt; 0);<br>\t\treturn sb.toString();<br>\t}*&#47;<br>\t&#47;**<br>\t * <br>\t * @Title: decimalToBinary<br>\t * @Description: 十进制转二进制，方法3：位运算法<br>\t * @param decimalSource<br>\t * @return<br>\t * @return: String<br>\t *&#47;<br>\tpublic static String decimalToBinary(int decimalSource) {<br>\t\tStringBuffer sb = new StringBuffer();<br>\t\twhile (decimalSource != 0) {<br>\t\t\t&#47;&#47;此&amp;运算，decimalSource &amp; 1，目的是获取最低位的二进制数值<br>\t\t\tsb.append(decimalSource &amp; 1);<br>\t\t\t&#47;&#47;此&gt;&gt;运算，decimalSource &gt;&gt; 1，目的是将获取到的最低位二进制数值除去<br>\t\t\tdecimalSource = decimalSource &gt;&gt; 1;<br>\t\t}<br>\t\treturn sb.reverse().toString();<br>\t}<br>负整数转换为二进制 要点：<br>取反加一 解释：将该负整数对应的正整数先转换成二进制，然后对其“取补”，再对取补后的结果加1即可。<br>例如要把-52换算成二进制：<br>1.先取得52的二进制：00110100<br>2.对所得到的二进制数取反：11001011<br>3.将取反后的数值加一即可：11001100 即：(-52)10=(11001100)2","like_count":69,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436272,"discussion_content":"很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547406584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2993983,"avatar":"","nickname":"Geek_31cb7f","note":"","ucode":"40D2BA20D8C08C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569313,"discussion_content":"为什么最后要reverse一下呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651403591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2993983,"avatar":"","nickname":"Geek_31cb7f","note":"","ucode":"40D2BA20D8C08C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572518,"discussion_content":"先求出来的是低位，后求出来的是高位。你可以拿8来算一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652836626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":569313,"ip_address":""},"score":572518,"extra":""}]},{"author":{"id":1699582,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ee/fe/248b86a7.jpg","nickname":"八一","note":"","ucode":"FA1BB919F9FE6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":151264,"discussion_content":"计算器算出来不一样呢？‭1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1100 1100‬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579868239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48314,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1239362,"ip_address":"","ucode":"1B5EF54A2A56F8","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/42/1de79e71.jpg","comment_is_top":false,"comment_ctime":1544418821,"is_pvip":false,"replies":[{"id":"17254","content":"在elasticsearch的filter查询中，用到的bitset就是位运算，比查询倒排索引效率更高","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544426087,"ip_address":"","comment_id":48314,"utype":1}],"discussion_count":1,"race_medal":0,"score":"186228012549","product_id":100021201,"comment_content":"逻辑或，与，异或一般有什么使用场景，平常写代码不怎么用","like_count":43,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432124,"discussion_content":"在elasticsearch的filter查询中，用到的bitset就是位运算，比查询倒排索引效率更高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544426087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48485,"user_name":"溯雪","can_delete":false,"product_type":"c1","uid":1174371,"ip_address":"","ucode":"E819E5454BF216","user_header":"https://static001.geekbang.org/account/avatar/00/11/eb/63/09e7f442.jpg","comment_is_top":false,"comment_ctime":1544451428,"is_pvip":false,"replies":[{"id":"17322","content":"右移存在一个问题是，在高位补0还是1。但是左移只需要考虑后面补0就可以了","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544455063,"ip_address":"","comment_id":48485,"utype":1}],"discussion_count":4,"race_medal":0,"score":"160458241380","product_id":100021201,"comment_content":"老师，为什么不需要区分逻辑左移和算术左移呢？<br>比如十进制数-3，对应二进制1000...0011，那按照右移的思路，应该有两种移法，一种是符号位不动其它位置左移的1000...0110，一种是全部左移导致符号位被顶出去的0000....0110嘛","like_count":37,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432202,"discussion_content":"右移存在一个问题是，在高位补0还是1。但是左移只需要考虑后面补0就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544455063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1515101,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1e/5d/62fdc917.jpg","nickname":"Mango","note":"","ucode":"D34F0424F4F742","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5410,"discussion_content":"这个是计算机组成原理的基础知识了，负数的表示是采用补码表示法，这样操作之后，就不用考虑符号位了，与正数的加减也是不需要特殊处理，因此左移不需要分正数还是负数。\n举个例子，-3的原码是\n1000 0011\n反码是\n1111 1100\n补码是\n1111 1101\n补码左移一位是\n1111 1010\n减一得到其原码的反码是\n1111 1001\n由反码得到原码是\n1000 0110\n是不是就是-3左移一位了。\n","likes_number":26,"is_delete":false,"is_hidden":false,"ctime":1566232568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1777798,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/20/86/096dd69e.jpg","nickname":"Walker","note":"","ucode":"8DE92B787B26F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79080,"discussion_content":"因为机器数的位移和计算都是在补码的基础上进行的，你用补码试试左移的结果就会知道为什么","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1576053651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446437,"avatar":"https://static001.geekbang.org/account/avatar/00/16/12/25/f9cdf7e9.jpg","nickname":"耀明","note":"","ucode":"99D03E4547EB70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165,"discussion_content":"这个回答有点笼统","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1561210428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48447,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1544446721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"138983400193","product_id":100021201,"comment_content":"#python实现<br><br>#encoding=utf-8<br>def int3binary(num):<br>result=[]<br>while num!=0:<br>result.append(num &amp; 1)<br>num = num &gt;&gt; 1<br>result.reverse()<br>return result<br><br>print(*int2binary(10))<br><br>#输出 1010<br>","like_count":32},{"had_liked":false,"id":48249,"user_name":"指间砂的宿命","can_delete":false,"product_type":"c1","uid":1338245,"ip_address":"","ucode":"DFAE22BF3BD415","user_header":"https://static001.geekbang.org/account/avatar/00/14/6b/85/be43d09f.jpg","comment_is_top":false,"comment_ctime":1544406307,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"104623621411","product_id":100021201,"comment_content":"数字与1做与操作，结果为1说明低位是1，否则为0，然后数字右移，重复以上操作，直到数字为0结束，倒序输出所有结果","like_count":24,"discussions":[{"author":{"id":1524357,"avatar":"","nickname":"杨阳","note":"","ucode":"D838AFD9800E75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306157,"discussion_content":"你没有考虑负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600182626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12445,"discussion_content":"这个也是判断一个数奇偶性的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568531839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48253,"user_name":"Lugyedo","can_delete":false,"product_type":"c1","uid":1011793,"ip_address":"","ucode":"EB5E456B638E70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/51/f1825adb.jpg","comment_is_top":false,"comment_ctime":1544406707,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"83148785331","product_id":100021201,"comment_content":"为什么不区分逻辑左移和算术左移","like_count":20},{"had_liked":false,"id":51161,"user_name":"sloth-yp","can_delete":false,"product_type":"c1","uid":1237585,"ip_address":"","ucode":"41F02F0342BB82","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEK9ZoMKs1BEt7tOVAsk8Jqmg64kyYF9VIHN7oHjVRPj2YqKM4uoSuQ6uKgcsSziba6Xz4gM3aM96FA/132","comment_is_top":false,"comment_ctime":1545123123,"is_pvip":false,"replies":[{"id":"18508","content":"是的 需要考虑补码","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545146731,"ip_address":"","comment_id":51161,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70264599859","product_id":100021201,"comment_content":"最后的思考题， 是不是应该考虑负数，用补码表示？<br><br>    public static String decimal2Binary(int decimal) {<br>        &#47;&#47; 负数的话,先换成正数然后取反再加1,再递归调用本函数<br>        if (decimal &lt; 0) {<br>            int reverseNumber = ((decimal * -1) ^ Integer.MAX_VALUE) + 1;<br>            return decimal2Binary (reverseNumber);<br>        }<br>        StringBuilder sb = new StringBuilder();<br>        while (decimal &gt; 0) {<br>            &#47;&#47; 跟0x0001 按位与,求得最低位的值<br>            String lastNumber = String.valueOf(decimal &amp; 1);<br>            &#47;&#47; 插入到字符串的最前面(这样才是原始的顺序)<br>            sb.insert(0, lastNumber);<br>            &#47;&#47; 算术右移<br>            decimal = decimal &gt;&gt; 1;<br>        }<br>        return sb.toString();<br>    }","like_count":16,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433314,"discussion_content":"是的 需要考虑补码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545146731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48788,"user_name":"panda","can_delete":false,"product_type":"c1","uid":1094963,"ip_address":"","ucode":"D1E82CEF1520FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/b5/33/2af9ccd1.jpg","comment_is_top":false,"comment_ctime":1544537541,"is_pvip":false,"replies":[{"id":"17542","content":"是的 很经典的一道面试题","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544557676,"ip_address":"","comment_id":48788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70264014277","product_id":100021201,"comment_content":"异或 我想到一个算法题 判断很多数是不是有相等的 ","like_count":16,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432352,"discussion_content":"是的 很经典的一道面试题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544557676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48378,"user_name":"Li Shunduo","can_delete":false,"product_type":"c1","uid":1222882,"ip_address":"","ucode":"6C5AB4129E9780","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/e2/f8e51df2.jpg","comment_is_top":false,"comment_ctime":1544431793,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"70263908529","product_id":100021201,"comment_content":"请问文章里的图是用什么软件画的？","like_count":16,"discussions":[{"author":{"id":1238646,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e6/76/26f555ce.jpg","nickname":"上沅同学","note":"","ucode":"CDE043A508E4EA","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543723,"discussion_content":"手绘的，notebility 就可以，不过一般是小编画的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641282976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006027,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/cb/43124a2d.jpg","nickname":"立仔","note":"","ucode":"38885BA7B203BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380910,"discussion_content":"我也很好奇是啥软件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624788689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48275,"user_name":"Libra","can_delete":false,"product_type":"c1","uid":1339507,"ip_address":"","ucode":"88B239AAE6C120","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bX0Axom5S7Kxyvvtv2eibS5y68tCuJCNNm8V9poYKz4lPgj4F5uujjWr6qaS2S9JNpIyc2VhiaicibQicjMVo6mJq1A/132","comment_is_top":false,"comment_ctime":1544409760,"is_pvip":false,"replies":[{"id":"18773","content":"还可以考虑负数的情况","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545265941,"ip_address":"","comment_id":48275,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70263886496","product_id":100021201,"comment_content":"import java.util.Scanner;<br><br>public class Test1 {<br>    public static void main(String[] args) {<br>        Scanner scanner = new Scanner(System.in);<br><br>        int value = scanner.nextInt();<br>        boolean flag = false;<br><br>        for (int i = 31; i &gt;= 0; i--) {<br>            int temp = value &amp; (1 &lt;&lt; i);<br>            if (temp &gt; 0){<br>                flag = true;<br>            }<br>            if (flag){<br>                if (temp &gt; 0){<br>                    System.out.print(1);<br>                }else {<br>                    System.out.print(0);<br>                }<br>            }<br>        }<br>    }<br>}<br>","like_count":16,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432100,"discussion_content":"还可以考虑负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545265941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51027,"user_name":"daydreamer","can_delete":false,"product_type":"c1","uid":1339168,"ip_address":"","ucode":"375D9D4F9A7AF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/20/53cb569d.jpg","comment_is_top":false,"comment_ctime":1545101274,"is_pvip":false,"replies":[{"id":"18387","content":"我又查了一下，确实需要自己实现","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545112528,"ip_address":"","comment_id":51027,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53084708826","product_id":100021201,"comment_content":"我查了一下Python里面没有“逻辑右移”运算符吧，除非自己手动实现","like_count":12,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433239,"discussion_content":"我又查了一下，确实需要自己实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545112528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48671,"user_name":"桃园悠然在","can_delete":false,"product_type":"c1","uid":1017637,"ip_address":"","ucode":"704460D9CAD1CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/25/898dea4e.jpg","comment_is_top":false,"comment_ctime":1544512368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53084119920","product_id":100021201,"comment_content":"被池大吓得赶紧买一个数学专栏，配合吴军老师的数学之美一起看。","like_count":12},{"had_liked":false,"id":48427,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1544442133,"is_pvip":false,"replies":[{"id":"18770","content":"👍 再考虑一下负数的情况","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545265691,"ip_address":"","comment_id":48427,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53084049685","product_id":100021201,"comment_content":"2^3&lt;10&lt;2^4<br><br>得到3,然后<br><br>10&gt;&gt;3=1<br>（10&gt;&gt;2）&amp;1=0<br>（10&gt;&gt;1）&amp;1=1<br>10&amp;1=0<br><br>得到1010","like_count":12,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432174,"discussion_content":"👍 再考虑一下负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545265691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48246,"user_name":"石佳佳_Gemtra","can_delete":false,"product_type":"c1","uid":1235210,"ip_address":"","ucode":"C992091D9CC8D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/0a/ce61e397.jpg","comment_is_top":false,"comment_ctime":1544405999,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"48789046255","product_id":100021201,"comment_content":"1.不考虑溢出的话，二进制数左移 n 位，即乘以 2^n；同理，右移 n 位，即除以 2^n，且向下取整数，因为移除的 n 位不全为 0 的话，除的结果就会包含小数。<br>2.不考虑溢出的话，有符号和无符号的左移运算结果相同，而右移的结果不同，所以会有逻辑右移和算术右移的区别。<br>3.两个数按位「异或」结果为 0，是这两个数值相等的必要充分条件。<br>4.思考题<br>Java 不太了解，根据提示，判断 n 位是否为 1，可与 1 左移n位后的数进行「与」运算，为真则为 1，反之为 0，循环即可。","like_count":11},{"had_liked":false,"id":56924,"user_name":"刘凯","can_delete":false,"product_type":"c1","uid":1343108,"ip_address":"","ucode":"261828566E8957","user_header":"https://static001.geekbang.org/account/avatar/00/14/7e/84/be6d6114.jpg","comment_is_top":false,"comment_ctime":1546580734,"is_pvip":false,"replies":[{"id":"21422","content":"负数的处理很赞","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547401425,"ip_address":"","comment_id":56924,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44496253694","product_id":100021201,"comment_content":"思考题<br>- (void)decimal2Binary:(NSInteger)value{<br>    NSString *result = @&quot;&quot;;<br>    if (value &lt; 0) {<br>        value = ((value * -1)^(INTMAX_MAX)) + 1;<br>    }<br>    for (NSInteger i = 31 ;i &gt;= 0; i--) {<br>        if (value &amp; (1 &lt;&lt; i)) {<br>            result = [result stringByAppendingString:@&quot;1&quot;];<br>        }else{<br>            result = [result stringByAppendingString:@&quot;0&quot;];<br>        }<br>    }<br>    NSLog(@&quot;\u0010%@&quot;, result);<br><br>}<br>","like_count":10,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435314,"discussion_content":"负数的处理很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547401425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004133,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/65/d984d4e8.jpg","nickname":"令","note":"","ucode":"284FB90098734F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7299,"discussion_content":"负数补码太赞了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567480577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49001,"user_name":"Julian","can_delete":false,"product_type":"c1","uid":1331563,"ip_address":"","ucode":"451287999E982F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcqPrJEUz4PWI9fNOCFwPQ9SYZ9Sk7jcfLBl9IZSa0eCCibqKOO3FoaPZEB6ZiaWO7S1fTJ7nA3dNw/132","comment_is_top":false,"comment_ctime":1544586863,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35904325231","product_id":100021201,"comment_content":"01 | 二进制：不了解计算机的源头，你学什么编程的学习总结；<br>一：对于进制我现在的理解就是几进制就是以几为基数，然后按照左高右低规则进行基数幂运算然后在乘以数量然后在相加。例如：二进制110，首先基数是“2”；坐高右低原则就是“2 1 0”分别对应最左边的“1 1 0”；其实坐高右低就是从右边以0开始然后依次加一，这个是进行幂运算的多少次方的数字。所以这个二进制数转换成我们日常的十进制的计算规则就是：1*2^2  + 1*2^1 + 0*2^0;最终结果就是 4 + 2 + 1 = 7；<br><br>二：二进制的位操作；<br>    1.二进制的移位操作；分为左移（&lt;&lt;）和右移；其中右移又分为算数右移(&gt;&gt;)和逻辑右移(&gt;&gt;&gt;);<br>          二进制左移&lt;&lt;：110  其实就是一次把数字往左移动一位，最右边补0所以最终就是1100；左移规律是数字的值翻倍；<br>          二进制右移&gt;&gt;：同上就是把数字往右边移动一位，然后最左边数字看情况；如果是算术右移就要考虑正负数的问题；正负数在计算机里面java实现是看你操作系统位数，最后一位代表正负数的标识；0：代表正数；1：代表负数；所以算术右移我理解就是考虑计算，既然考虑计算也就是考虑正负数的问题；对于负数的算术右移左边是要上1的，对于正数的算数右移左边是上0的；但是对于逻辑右移，不管你是正数还是负数，左边都是上0的；<br><br>    2.二进制的逻辑操作；<br>     逻辑或  |  ：  就是2个二进制数，从右到左，对相同位置的数字进行或运算；或运算就是 全是0才表示0，其余全是1；或顾名思义，只要有真就代表真；<br>     逻辑与 &amp; ：  就是2个二进制数，从右到左，对相同位置的数字进行与运算；与运算就是参与运算数字全1才是1，其余的都是0；与顾明思议，相同的而且都是真才为真；<br>     逻辑异或  ^： 就是2个二进制数吗，从右到左，对相同位置的数字进行运算；异或运算就是参与运算的数字相同结果为0，其余全为1；异或顾明思议，不同的才为真；<br><br>在计算机世界，1代表真，0代表假；","like_count":8,"discussions":[{"author":{"id":3035567,"avatar":"","nickname":"710369","note":"","ucode":"176037974A488F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577407,"discussion_content":"总结的很棒，二进制110 是 十进制的6  110=1*2^2+1*2^1+0*2^0=4+2+0=6 应该是笔误 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656077330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48226,"user_name":"Transient","can_delete":false,"product_type":"c1","uid":1339438,"ip_address":"","ucode":"64E3798D1AAFFB","user_header":"https://static001.geekbang.org/account/avatar/00/14/70/2e/1faee32c.jpg","comment_is_top":false,"comment_ctime":1544404376,"is_pvip":false,"replies":[{"id":"17233","content":"是的 还有取反操作","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544412140,"ip_address":"","comment_id":48226,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31609175448","product_id":100021201,"comment_content":"加密算法中也有许多用到二进制运算吧，而且二进制应该还有取反操作吧","like_count":7,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432078,"discussion_content":"是的 还有取反操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544412140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62560,"user_name":"linzhiqun","can_delete":false,"product_type":"c1","uid":1373169,"ip_address":"","ucode":"D8A7B51CE3341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/f3/f1/0bb90835.jpg","comment_is_top":false,"comment_ctime":1548106669,"is_pvip":false,"replies":[{"id":"22154","content":"第一模块都是的，后面的模块和数据分析以及机器学习更相关，会酌情使用Python。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1548122147,"ip_address":"","comment_id":62560,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23022943149","product_id":100021201,"comment_content":"老师，请问这个专栏编程举例用的都是Java吗？","like_count":5,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437260,"discussion_content":"第一模块都是的，后面的模块和数据分析以及机器学习更相关，会酌情使用Python。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548122147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56343,"user_name":"WWR","can_delete":false,"product_type":"c1","uid":1193692,"ip_address":"","ucode":"1FCFD17A6E0390","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/dc/36b306a2.jpg","comment_is_top":false,"comment_ctime":1546425342,"is_pvip":false,"replies":[{"id":"20344","content":"这是个很好的问题。算术右移很好理解，无论是有符号还是无符号的数据类型，假设被右移的数字是x，x算术右移m位都是x&#47;(2^m)。对于C语言来说，并不存在这个问题，因为数据类型已经决定右移是算术右移还是逻辑右移。而Java通过&gt;&gt;&gt;，让你可以对有符号位的数据类型进行逻辑右移，效果是(x&#47;(2^m)+2^(n-m)+1)，至于Java中逻辑右移的应用场景，我个人在实际项目中还未遇到，需要结合逻辑右移的特点和实际的场景来看是否需要。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546452991,"ip_address":"","comment_id":56343,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23021261822","product_id":100021201,"comment_content":"老师，你好，我想问一下，逻辑右移和算数右移是解决了什么问题吗？使用场景是什么呢？","like_count":5,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434996,"discussion_content":"这是个很好的问题。算术右移很好理解，无论是有符号还是无符号的数据类型，假设被右移的数字是x，x算术右移m位都是x/(2^m)。对于C语言来说，并不存在这个问题，因为数据类型已经决定右移是算术右移还是逻辑右移。而Java通过&amp;gt;&amp;gt;&amp;gt;，让你可以对有符号位的数据类型进行逻辑右移，效果是(x/(2^m)+2^(n-m)+1)，至于Java中逻辑右移的应用场景，我个人在实际项目中还未遇到，需要结合逻辑右移的特点和实际的场景来看是否需要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546452991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48349,"user_name":"郑晨Cc","can_delete":false,"product_type":"c1","uid":1324942,"ip_address":"","ucode":"57146E444D6329","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/8e/cf0b4575.jpg","comment_is_top":false,"comment_ctime":1544426681,"is_pvip":false,"replies":[{"id":"18772","content":" 还需要考虑负数的情况","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545265898,"ip_address":"","comment_id":48349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23019263161","product_id":100021201,"comment_content":"思考题 <br>public class test {<br><br>\tpublic static void main(String[] args){<br>\t\t StringBuffer sb = null;<br>\t\tint a = 53;<br>\t\t<br>\t\tString buffer = null;<br>\t\t<br>\t\twhile(a&gt;1){<br>\t\t\tSystem.out.println(&quot;余数：&quot; + a % 2);<br>\t\t\tString b = String.valueOf(a % 2);<br>\t\t\tif(null == sb){<br>\t\t\t\tsb = new StringBuffer(b);<br>\t\t\t}else{<br>\t\t\t\tsb.insert(0, b);<br>\t\t\t}\t<br>\t\t\ta = a &gt;&gt;&gt;1;<br>\t\t\tSystem.out.println(&quot;商：&quot;+a);\t<br>\t\t\t<br>\t\t}<br>\t\t<br>\t\tsb.insert(0, a);<br>\t\tSystem.out.println(sb);<br>\t}<br>\t<br>}","like_count":5,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432141,"discussion_content":" 还需要考虑负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545265898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65351,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1549269763,"is_pvip":false,"replies":[{"id":"23200","content":"右移要区分逻辑还是算术右移，是因为负数的高位为1，不是0。算术右移还是补符号位，保证负数的右移也是除以2，所以叫“算术”右移。负数的算术右移一位，可以理解为符号位1不动，其他位右移，然后在符号位补一个1。<br>另外，要注意负数使用的是补码，而不是原码，具体的内容请参考后面的加餐一，里面有详细的解释。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1549302292,"ip_address":"","comment_id":65351,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18729138947","product_id":100021201,"comment_content":"通过这一节的阅读学习，理解了为什么计算机会使用二进制位。这和现代计算机系统的硬件实现有关。同时二进制位的使用，因为只有0和1两种结果，抗干扰能力强的优点。<br><br>在位计算中，有左移位和右移位，在课程中老师用计算，得到二进制左移一位，就是将数字翻倍。并在代码中加以实现。右移位相对复杂点，分为逻辑右移和算术右移，逻辑右移在左边补0就可以。算术右移的这句话我没能看懂。<br><br>请老师帮助我在解释一下这句话，算术右移时保持符号位不变，除符号位之外的右移一位并补符号位。补的1仍然在符号位之后。我理解的是符号位仍然是1，但您说补的1仍然在符号位之后，这不就相当补了2个1?<br><br>在位运算中，还有或与异或的运算。这部分好理解。在老师这部分代码中，老师在输出语句中写成了Lesson2_3,应该是Lesson1_3。<br><br>很喜欢老师的这种专栏风格，在解释完理论之后，在代码中加以实现，这样和实际结合的学习是有效的学习。<br>","like_count":4,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438418,"discussion_content":"右移要区分逻辑还是算术右移，是因为负数的高位为1，不是0。算术右移还是补符号位，保证负数的右移也是除以2，所以叫“算术”右移。负数的算术右移一位，可以理解为符号位1不动，其他位右移，然后在符号位补一个1。\n另外，要注意负数使用的是补码，而不是原码，具体的内容请参考后面的加餐一，里面有详细的解释。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549302292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48162,"user_name":"朱月俊","can_delete":false,"product_type":"c1","uid":1017707,"ip_address":"","ucode":"4DA0728B862FBD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","comment_is_top":false,"comment_ctime":1544374435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18724243619","product_id":100021201,"comment_content":"二进制左移1位相当于对应的十进制数字处以2取整数。因此，可以每次对十进制除以2并取整，将每次操作的余数按顺序从右到左排好序即可。","like_count":4},{"had_liked":false,"id":92944,"user_name":"陈大头真大","can_delete":false,"product_type":"c1","uid":1489604,"ip_address":"","ucode":"0B68F7CB5DD2D4","user_header":"https://static001.geekbang.org/account/avatar/00/16/ba/c4/e484d652.jpg","comment_is_top":false,"comment_ctime":1557366443,"is_pvip":false,"replies":[{"id":"33216","content":"感谢这个回复，我也学到了一些知识👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1557418185,"ip_address":"","comment_id":92944,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442268331","product_id":100021201,"comment_content":"@南山 这个应用场景现在比较少了，以前主要用位操作控制权限，用按位或赋权，用按位与检查是否拥有某个权限，多见与网络协议，文件格式，以及一些老的系统中。<br><br>优点很多，通过算术运算代替逻辑运算，效率更高，一个32位整型变量可以表示32个标志状态位，所以节省空间。<br><br>以前的设计中很常见，比如各种文件结构的设计中，或者一些C++框架中的宏定义中，都有。<br><br><br>这么好的东西不知道为什么现在的业务系统中很少使用了，反而到处在定义各种符号变量。","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449433,"discussion_content":"感谢这个回复，我也学到了一些知识👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557418185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64287,"user_name":"呦呦呦","can_delete":false,"product_type":"c1","uid":1225814,"ip_address":"","ucode":"CD7BA68921ABF2","user_header":"https://static001.geekbang.org/account/avatar/00/12/b4/56/06804073.jpg","comment_is_top":false,"comment_ctime":1548734598,"is_pvip":true,"replies":[{"id":"22810","content":"是的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1548773175,"ip_address":"","comment_id":64287,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14433636486","product_id":100021201,"comment_content":"“为什么不区分逻辑左移和算术左移”<br>因为符号位在左边、左移位并不会影响符号位","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437941,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548773175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62955,"user_name":"Jessiebyy","can_delete":false,"product_type":"c1","uid":1364172,"ip_address":"","ucode":"2923584C96C353","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLT5FUVKibUC0fib7gianN3STJueF1TC72ZEyxYu3PFlCBxeDo5QVxQq99QaIQsQ9KMbvBKAGsk8NqhA/132","comment_is_top":false,"comment_ctime":1548213251,"is_pvip":false,"replies":[{"id":"22357","content":"这是个好建议","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1548272567,"ip_address":"","comment_id":62955,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14433115139","product_id":100021201,"comment_content":"关于逻辑右移及算术右移，个人认为比较直观的应该是算术右移，符合左移翻倍右移减半的通常理解，建议把例子改成算术右移更好一些，然后介绍一下逻辑右移，毕竟逻辑右移的场景比较少。","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437417,"discussion_content":"这是个好建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548272567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57016,"user_name":"hper","can_delete":false,"product_type":"c1","uid":1015198,"ip_address":"","ucode":"284D0877781610","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/9e/686e5a18.jpg","comment_is_top":false,"comment_ctime":1546601834,"is_pvip":false,"replies":[{"id":"21425","content":"思考题的原意是，如果是负数，需要写出补码","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547401797,"ip_address":"","comment_id":57016,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14431503722","product_id":100021201,"comment_content":"public static String decimal2Binary(int num){<br>        String sign = &quot;&quot;;<br>        if(num&lt;0){<br>            sign=&quot;-&quot;;<br>            num=-num;<br>        }<br>        StringBuffer sb=new StringBuffer();<br><br>        while(0!=num){<br>            sb.append(num&amp;1);<br>            num=num&gt;&gt;1;<br>        }<br>        return sign+sb.reverse().toString();<br>    }","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435361,"discussion_content":"思考题的原意是，如果是负数，需要写出补码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547401797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56504,"user_name":"海洋之心","can_delete":false,"product_type":"c1","uid":1341575,"ip_address":"","ucode":"D540476207AFF4","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/87/54eb0929.jpg","comment_is_top":false,"comment_ctime":1546479155,"is_pvip":false,"replies":[{"id":"21421","content":"如果是自己实现，确实繁琐一点，不过可以梳理知识点。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547401279,"ip_address":"","comment_id":56504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14431381043","product_id":100021201,"comment_content":"public static String decimalToBinary(int decimalSource) {<br>        if(decimalSource==-2147483648) {<br>            return &quot;10000000 00000000 00000000 00000000&quot;;<br>        }<br>        int[] bits = new int[32];<br>        int i = 32;<br>        StringBuffer sb = new StringBuffer();<br><br><br>        int result = decimalSource;<br><br>        if(decimalSource&lt;0) {<br>            result = -decimalSource;<br>        }<br><br>        while(result!=0) {<br>            i--;<br>            bits[i] = result%2;<br>            result = result&#47;2;<br>        }<br><br>        if(decimalSource&lt;0) {<br>            &#47;&#47; 负数全部取反<br>            for(int j = 0; j&lt;bits.length; j++) {<br>                bits[j] = bits[j]^1;<br>            }<br>            &#47;&#47; 最高位置为1<br>            bits[0] = 1;<br>            &#47;&#47; 补1<br>            for(int j = 31; j&gt;=0; j--) {<br>                if(bits[j]==0) {<br>                    bits[j]=1;<br>                    break;<br>                } else {<br>                    bits[j]=0;<br>                    continue;<br>                }<br>            }<br>        }<br><br>        for(int j = 0; j&lt;bits.length; j++) {<br>            if(j%8==0) {<br>                sb.append(&quot; &quot;);<br>            }<br>            sb.append(bits[j]);<br>        }<br><br><br><br>        return sb.toString();<br>    }<br><br>&#47;&#47;感觉做的有些麻烦 还有什么简单的方法吗","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435077,"discussion_content":"如果是自己实现，确实繁琐一点，不过可以梳理知识点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547401279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54127,"user_name":"西北偏北","can_delete":false,"product_type":"c1","uid":1043160,"ip_address":"","ucode":"64BD69C84EE6A1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erdpKbFgRLnicjsr6qkrPVKZcFrG3aS2V51HhjFP6Mh2CYcjWric9ud1Qiclo8A49ia3eZ1NhibDib0AOCg/132","comment_is_top":false,"comment_ctime":1545795711,"is_pvip":false,"replies":[{"id":"19609","content":"所以你的意思是 设计成两种左移：一种是符号位被顶掉，另一种是符号位不动，而是后一位被顶掉？","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1545811210,"ip_address":"","comment_id":54127,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14430697599","product_id":100021201,"comment_content":"“右移存在一个问题是，在高位补0还是1。但是左移只需要考虑后面补0就可以了”还是不懂。右移考虑高位补0还是1，是因为担心左边符号位变化，最终使得一个数字的正负性发生改变。那左移，像前面那个同学说的，也可能把高位顶掉，最终符号高位是1还是0也不确定。为什么？我们不担心这种情况？","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434363,"discussion_content":"所以你的意思是 设计成两种左移：一种是符号位被顶掉，另一种是符号位不动，而是后一位被顶掉？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545811210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50227,"user_name":"Fly55","can_delete":false,"product_type":"c1","uid":1251563,"ip_address":"","ucode":"FFA9D5C6EDD6F4","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/eb/fd0b4a1f.jpg","comment_is_top":false,"comment_ctime":1544928187,"is_pvip":false,"replies":[{"id":"18039","content":"是的👍","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544936575,"ip_address":"","comment_id":50227,"utype":1}],"discussion_count":1,"race_medal":1,"score":"14429830075","product_id":100021201,"comment_content":"正数三码一样，负数的补码是取反末尾加1，可以说计算机存储的都是补码。","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432919,"discussion_content":"是的👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544936575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48635,"user_name":"至","can_delete":false,"product_type":"c1","uid":1106332,"ip_address":"","ucode":"AAED530E804EFF","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/9c/36358981.jpg","comment_is_top":false,"comment_ctime":1544502807,"is_pvip":true,"replies":[{"id":"17444","content":"负数使用的是补码，我会在答疑篇里补充这部分的内容","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544507032,"ip_address":"","comment_id":48635,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14429404695","product_id":100021201,"comment_content":"请问为什么 -53 &gt;&gt; 1 == -27 ?","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432285,"discussion_content":"负数使用的是补码，我会在答疑篇里补充这部分的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544507032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48507,"user_name":"咕噜","can_delete":false,"product_type":"c1","uid":1337098,"ip_address":"","ucode":"DC3C6F3B0E73FE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOnkSsTlp6k4qTh1aZhHCUZX8jKadViaib7UXMcwSXicqYNAxVSXcR5vM0ribgCUzMGiaULMZoOPT5OgQ/132","comment_is_top":false,"comment_ctime":1544456787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14429358675","product_id":100021201,"comment_content":"打卡1&#47;64，笔记已同步至博客。使用位操作实现进制转换还是第一次碰到，学习了！ ","like_count":3},{"had_liked":false,"id":191745,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1584793796,"is_pvip":true,"replies":[{"id":"75056","content":"还真没用过excel中的相关函数，感谢","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585630497,"ip_address":"","comment_id":191745,"utype":1}],"discussion_count":1,"race_medal":5,"score":"10174728388","product_id":100021201,"comment_content":"茶艺师学编程<br><br>老师好！<br><br>在excel中，可使用函数<br>十进制转化到二进制：DEC2BIN<br>二进制转化到十进制：BIN2DEC<br><br>Java中，可使用Interger.toBinaryString(n);<br>如果使用老师给出的提示的话，<br>生成一个二进制数，每左移一位，转换成十进制数，与目标数进行异或运算，看结果是不是0。不是的话，再左移一位，循环步骤，直到得出结果0，这时的二进制数就是目标数。","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488245,"discussion_content":"还真没用过excel中的相关函数，感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585630497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69036,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1411086,"ip_address":"","ucode":"74796B52DB09C5","user_header":"https://static001.geekbang.org/account/avatar/00/15/88/0e/30166248.jpg","comment_is_top":false,"comment_ctime":1550649847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10140584439","product_id":100021201,"comment_content":"签到","like_count":2},{"had_liked":false,"id":68021,"user_name":"李耀","can_delete":false,"product_type":"c1","uid":1340442,"ip_address":"","ucode":"AE819969A48947","user_header":"https://static001.geekbang.org/account/avatar/00/14/74/1a/72ac052a.jpg","comment_is_top":false,"comment_ctime":1550389901,"is_pvip":false,"replies":[{"id":"24122","content":"如果是原码的话没有问题。可以再考虑补码的情况","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1550423447,"ip_address":"","comment_id":68021,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10140324493","product_id":100021201,"comment_content":"我写了一个二进制转十进制，老师帮忙看看。<br>b = ‘1101’<br>i  = 0<br>while b != ‘’:<br>i = i * 2 + (ord(b[0])-ord(‘0’))<br>print（i）","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439474,"discussion_content":"如果是原码的话没有问题。可以再考虑补码的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550423447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63327,"user_name":"🐮","can_delete":false,"product_type":"c1","uid":1358155,"ip_address":"","ucode":"76268AC4940E6F","user_header":"https://static001.geekbang.org/account/avatar/00/14/b9/4b/45545130.jpg","comment_is_top":false,"comment_ctime":1548323736,"is_pvip":false,"replies":[{"id":"22440","content":"你说的第一位包括符号位吗？如果不包括，那么就是溢出了，你可以看看第一篇加餐文章，有详细的介绍。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1548344086,"ip_address":"","comment_id":63327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10138258328","product_id":100021201,"comment_content":"老师，如果是一个31位的二进制数，第一位是1，那么左移之后不就变成负数了吗？","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437549,"discussion_content":"你说的第一位包括符号位吗？如果不包括，那么就是溢出了，你可以看看第一篇加餐文章，有详细的介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548344086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62456,"user_name":"格非","can_delete":false,"product_type":"c1","uid":1004569,"ip_address":"","ucode":"89FABFFC377131","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/19/95ff4cbd.jpg","comment_is_top":false,"comment_ctime":1548062343,"is_pvip":false,"replies":[{"id":"22155","content":"可以不用固定i的取值范围，而根据n右移后的结果是否为0来判断。另外，还需要考虑负数的情况（补码）","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1548122199,"ip_address":"","comment_id":62456,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137996935","product_id":100021201,"comment_content":"用移位和与运算来将十进制转换为二进制：<br>public static void binaryToDecimal(int n){<br>    String result = &quot;&quot;;<br>    for(int i = 31;i&gt;=0;i--) {<br>        String s = Integer.toString(n &gt;&gt;&gt; i &amp; 1);<br>        result += s;<br>    }<br>    System.out.println(result);<br>}","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437222,"discussion_content":"可以不用固定i的取值范围，而根据n右移后的结果是否为0来判断。另外，还需要考虑负数的情况（补码）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548122199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62082,"user_name":"uiop","can_delete":false,"product_type":"c1","uid":1359952,"ip_address":"","ucode":"252B6214C07F04","user_header":"https://static001.geekbang.org/account/avatar/00/14/c0/50/90a8543a.jpg","comment_is_top":false,"comment_ctime":1547903766,"is_pvip":false,"replies":[{"id":"21971","content":"对 都转成补码","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547935594,"ip_address":"","comment_id":62082,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137838358","product_id":100021201,"comment_content":"感谢老师半夜回复问题，还有一个疑问，补码的存在是为了兼容计算机只有加法这一种算法，那咱们在进行含负数的加、减、乘、除、左右移位时，是不是负数都转成补码参与运算？<br>（我看老师有一个例子是:<br>如果数字是 -53 呢？那么第 32 位就不是 0，而是 1。请注意我这里列出的是补码。<br>那么这个时候向右移位，就会产生一个问题：对于符号位（特别是符号位为 1 的时候），我们是否也需要将其右移呢？因此，Java 里定义了两种右移，逻辑右移和算术右移。<br>老师特意说明列出的是补码）<br>","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437088,"discussion_content":"对 都转成补码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547935594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61684,"user_name":"uiop","can_delete":false,"product_type":"c1","uid":1359952,"ip_address":"","ucode":"252B6214C07F04","user_header":"https://static001.geekbang.org/account/avatar/00/14/c0/50/90a8543a.jpg","comment_is_top":false,"comment_ctime":1547774372,"is_pvip":false,"replies":[{"id":"21935","content":"如果补0就是逻辑右移了，算术右移需要保证在计算上向右移1位等价于除以2，所以你把补1和补0分别换算成十进制看看结果有什么不同，需要注意符号位1的话表示负数，是补码，要把补码转换成原码在转成十进制。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547831263,"ip_address":"","comment_id":61684,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137708964","product_id":100021201,"comment_content":"算术右移时保持符号位不变，除符号位之外的右移一位并补符号位 1。补的 1 仍然在符号位之后。<br>老师，为什么算术右移，符号位之外的右移一位，并补符号位1，为什么左边是补1呢，不是应该补0吗","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436951,"discussion_content":"如果补0就是逻辑右移了，算术右移需要保证在计算上向右移1位等价于除以2，所以你把补1和补0分别换算成十进制看看结果有什么不同，需要注意符号位1的话表示负数，是补码，要把补码转换成原码在转成十进制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547831263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61529,"user_name":"null  now","can_delete":false,"product_type":"c1","uid":1265600,"ip_address":"","ucode":"D0CA639E0938E9","user_header":"https://static001.geekbang.org/account/avatar/00/13/4f/c0/f4449ca3.jpg","comment_is_top":false,"comment_ctime":1547714634,"is_pvip":false,"replies":[{"id":"21876","content":"可以从位操作的角度来考虑一下。至于书籍，你说的是针对第1讲的这道题目的？如果是这样，可以看看算法设计和面试题。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547753018,"ip_address":"","comment_id":61529,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137649226","product_id":100021201,"comment_content":"您说的我都大概理解但是留下来的习题就不知道该怎么做了 有没有关于这方面的书可以借鉴或者能引导一下这方面的思绪？","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436898,"discussion_content":"可以从位操作的角度来考虑一下。至于书籍，你说的是针对第1讲的这道题目的？如果是这样，可以看看算法设计和面试题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547753018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61451,"user_name":"isunsw","can_delete":false,"product_type":"c1","uid":1096437,"ip_address":"","ucode":"612298B9398389","user_header":"https://static001.geekbang.org/account/avatar/00/10/ba/f5/359015e4.jpg","comment_is_top":false,"comment_ctime":1547700704,"is_pvip":false,"replies":[{"id":"21873","content":"可以，就是需要再考虑一下负数的补码","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547748270,"ip_address":"","comment_id":61451,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137635296","product_id":100021201,"comment_content":"递归，除②取余，到不可除为止。","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436873,"discussion_content":"可以，就是需要再考虑一下负数的补码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547748270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60989,"user_name":"SCAR","can_delete":false,"product_type":"c1","uid":1031209,"ip_address":"","ucode":"38C0927FA3C5FC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/29/022905e6.jpg","comment_is_top":false,"comment_ctime":1547601432,"is_pvip":false,"replies":[{"id":"21802","content":"原题的意思是，负数需要展示补码","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547682263,"ip_address":"","comment_id":60989,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137536024","product_id":100021201,"comment_content":"def to_bin(num):<br><br>    result=[1]<br><br>    while num!=0:<br><br>        if num&lt;0:<br><br>            num=num*(-1)<br><br>            result[0]=-1<br><br>        result.append(num&amp;1)<br><br>        num=num &gt;&gt; 1<br><br>    return result[0],result[:0:-1]<br><br>","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436697,"discussion_content":"原题的意思是，负数需要展示补码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547682263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55320,"user_name":"Maverick","can_delete":false,"product_type":"c1","uid":1354384,"ip_address":"","ucode":"EF65041830954D","user_header":"https://static001.geekbang.org/account/avatar/00/14/aa/90/82d5791a.jpg","comment_is_top":false,"comment_ctime":1546126859,"is_pvip":false,"replies":[{"id":"20039","content":"你可以看看加餐一，讨论了几个位操作的例子","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546148396,"ip_address":"","comment_id":55320,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136061451","product_id":100021201,"comment_content":"这个代码实现有什么实用地方吗？<br>异或真的从来没见过，听说会出在面试题中？","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434737,"discussion_content":"你可以看看加餐一，讨论了几个位操作的例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546148396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52604,"user_name":"夏天","can_delete":false,"product_type":"c1","uid":1339778,"ip_address":"","ucode":"43099282559AB5","user_header":"https://static001.geekbang.org/account/avatar/00/14/71/82/c9bd7904.jpg","comment_is_top":false,"comment_ctime":1545451371,"is_pvip":false,"replies":[{"id":"19172","content":"下周会有一个加餐，会介绍二进制位操作的应用","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1545498225,"ip_address":"","comment_id":52604,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135385963","product_id":100021201,"comment_content":"希望老师结合一下真实应用场景讲讲使用呢，要不又为了学而学了，","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433917,"discussion_content":"下周会有一个加餐，会介绍二进制位操作的应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545498225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52289,"user_name":"年才下","can_delete":false,"product_type":"c1","uid":1215978,"ip_address":"","ucode":"06A5EE8D654816","user_header":"https://static001.geekbang.org/account/avatar/00/12/8d/ea/38a6556e.jpg","comment_is_top":false,"comment_ctime":1545358834,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10135293426","product_id":100021201,"comment_content":"我觉得把算数右移叫做带符号右移,逻辑右移叫做无符号右移更容易区分","like_count":2},{"had_liked":false,"id":51980,"user_name":"杨小凡","can_delete":false,"product_type":"c1","uid":1308912,"ip_address":"","ucode":"5A7ACF4A79FA8F","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/f0/0285e98a.jpg","comment_is_top":false,"comment_ctime":1545288286,"is_pvip":false,"replies":[{"id":"18922","content":"细节研究的很透彻，赞","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545318736,"ip_address":"","comment_id":51980,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135222878","product_id":100021201,"comment_content":"简单写了一下java程序，对于&gt;&gt;和&gt;&gt;&gt;<br>byte的&gt;&gt;1和&gt;&gt;&gt;1的结果并没有区别，而int的&gt;&gt;1和&gt;&gt;&gt;1的结果是有区别的。<br>这是因为JAVA在对不足32位的数(byte,char,short)进行移位运算时候,都会先转成int(32位),所以前面都会补成1，然后再截取，所以显示效果上byte的&gt;&gt;1和&gt;&gt;&gt;1的结果并没有区别<br>","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433688,"discussion_content":"细节研究的很透彻，赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545318736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51506,"user_name":"谭大码畜。","can_delete":false,"product_type":"c1","uid":1183493,"ip_address":"","ucode":"DE6952C8AF9F68","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/05/63c09d4a.jpg","comment_is_top":false,"comment_ctime":1545191096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10135125688","product_id":100021201,"comment_content":"思考题看了半天不知道该如何下手，突然想起了若干年前大一计算机基础课学的“十进制转二进制使用除 2 取余法”，拿笔打了草稿以后....好吧，我这个猪脑子，先有数学公式再写代码真的要轻松多了。<br>代码的大概思路: <br>&#47;&#47; TODO 负数需要使用 num 的补码。<br>while (num &gt; 0) {<br>  &#47;&#47; 除 2 取余法。<br>  sb.append(num % 2); &#47;&#47; 字符串拼接<br>  num = num &gt;&gt; 1; &#47;&#47; 除 2 取整数商。<br>}<br>return sb.reverse(); &#47;&#47; 倒转顺序即为 num 对应的二进制。","like_count":2},{"had_liked":false,"id":51324,"user_name":"文若","can_delete":false,"product_type":"c1","uid":1017387,"ip_address":"","ucode":"3D3045975ED2DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/86/2b/f82a7d5a.jpg","comment_is_top":false,"comment_ctime":1545165368,"is_pvip":false,"replies":[{"id":"18524","content":"你可以结合文稿中的图来理解","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545177380,"ip_address":"","comment_id":51324,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135099960","product_id":100021201,"comment_content":"“算术右移时保持符号位不变，除符号位之外的右移一位并补符号位 1。补的 1 仍然在符号位之后。”还是不明白？？？","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433409,"discussion_content":"你可以结合文稿中的图来理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545177380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50378,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1544964443,"is_pvip":false,"replies":[{"id":"18093","content":"位操作一般可用于提升系统运算速度，例如elasticsearch里使用位操作进行文档的过滤","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544986978,"ip_address":"","comment_id":50378,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134899035","product_id":100021201,"comment_content":"按位与、或、非、异或有什么实际意义吗？","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432960,"discussion_content":"位操作一般可用于提升系统运算速度，例如elasticsearch里使用位操作进行文档的过滤","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544986978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49880,"user_name":"1024","can_delete":false,"product_type":"c1","uid":1339805,"ip_address":"","ucode":"7C2BF4B75D5254","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/J4YY7icaiaGLjWnOwQibKtuhDu5nnsLL1QgMv8GvC97PQCXt2hCN7AVucLII2S1yRY3voOLzRCnHexqE4dhib810og/132","comment_is_top":false,"comment_ctime":1544784824,"is_pvip":false,"replies":[{"id":"18765","content":"需要考虑负数的情况","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545264929,"ip_address":"","comment_id":49880,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134719416","product_id":100021201,"comment_content":"public static String dec2Bin(int dec) {<br>  StringBuilder stringBuilder =new StringBuilder();<br>  for (int i = dec; i &gt; 0; i = i &gt;&gt; 1) {<br>    stringBuilder.append(i&amp;1);<br>  }<br>  return stringBuilder.reverse().toString();<br>}","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432795,"discussion_content":"需要考虑负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545264929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49692,"user_name":"秀秀","can_delete":false,"product_type":"c1","uid":1006055,"ip_address":"","ucode":"1BE09699B0E54D","user_header":"","comment_is_top":false,"comment_ctime":1544753016,"is_pvip":false,"replies":[{"id":"17904","content":"对 要考虑负数的情况","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544758421,"ip_address":"","comment_id":49692,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134687608","product_id":100021201,"comment_content":"这里是否需要同时考虑正数和负数十进制转化为二进制？","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432726,"discussion_content":"对 要考虑负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544758421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49605,"user_name":"codertiany","can_delete":false,"product_type":"c1","uid":1239772,"ip_address":"","ucode":"2F7A9A959505B4","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/dc/e813af86.jpg","comment_is_top":false,"comment_ctime":1544746896,"is_pvip":false,"replies":[{"id":"17905","content":"可以考虑在答疑篇里加入","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544758462,"ip_address":"","comment_id":49605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134681488","product_id":100021201,"comment_content":"快速进行进制转换希望老师加入，我平时也会用到","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432684,"discussion_content":"可以考虑在答疑篇里加入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544758462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49562,"user_name":"bertZuo","can_delete":false,"product_type":"c1","uid":1339467,"ip_address":"","ucode":"0F4543D7BFEE63","user_header":"https://static001.geekbang.org/account/avatar/00/14/70/4b/9b7c7258.jpg","comment_is_top":false,"comment_ctime":1544715289,"is_pvip":false,"replies":[{"id":"17819","content":"你能举些例子，比如具体哪些方面不太熟悉？我会考虑放到答疑篇里","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544729970,"ip_address":"","comment_id":49562,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134649881","product_id":100021201,"comment_content":"老师，我对java语言不是很熟悉，看您演示的代码即便有注释仍会很迷惑，能否针对演示的代码有一个很详细的说明（语法呀逻辑呀…٩( &#39;ω&#39; )و ）","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432658,"discussion_content":"你能举些例子，比如具体哪些方面不太熟悉？我会考虑放到答疑篇里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544729970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49479,"user_name":"温馨喵","can_delete":false,"product_type":"c1","uid":1339665,"ip_address":"","ucode":"3C160BC44534C3","user_header":"https://static001.geekbang.org/account/avatar/00/14/71/11/138b1fc3.jpg","comment_is_top":false,"comment_ctime":1544695117,"is_pvip":false,"replies":[{"id":"18766","content":"需要考虑负数的情况","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545265468,"ip_address":"","comment_id":49479,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134629709","product_id":100021201,"comment_content":"把十进制转成二进制:<br>int i = 125;<br>StringBuilder b = new StringBuilder(i%2);<br>while ((i &#47;= 2) != 0) {<br>    b.append(i % 2);<br>}<br>b.reverse().toString();","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432632,"discussion_content":"需要考虑负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545265468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49474,"user_name":"温馨喵","can_delete":false,"product_type":"c1","uid":1339665,"ip_address":"","ucode":"3C160BC44534C3","user_header":"https://static001.geekbang.org/account/avatar/00/14/71/11/138b1fc3.jpg","comment_is_top":false,"comment_ctime":1544694444,"is_pvip":false,"replies":[{"id":"17809","content":"基本思路是对的","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544712871,"ip_address":"","comment_id":49474,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134629036","product_id":100021201,"comment_content":"十进制转二进制方法:<br>Int i = 50;<br>StringBuilder sb = new StringBuilder();<br>int b = i%2;<br>While(( i = i &gt;&gt; 1) != 0){<br>     i%2 + sb;<br>}<br>最后sb就是二进制数","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432629,"discussion_content":"基本思路是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544712871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49443,"user_name":"满场飞奔","can_delete":false,"product_type":"c1","uid":1194982,"ip_address":"","ucode":"5F8F4238BC93C4","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/e6/86ae0cd9.jpg","comment_is_top":false,"comment_ctime":1544689251,"is_pvip":false,"replies":[{"id":"17810","content":"补码是反码再加1","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544712974,"ip_address":"","comment_id":49443,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134623843","product_id":100021201,"comment_content":"补码那张图最后一位是不是该是0呢?","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432620,"discussion_content":"补码是反码再加1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544712974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49310,"user_name":"smarttime","can_delete":false,"product_type":"c1","uid":1140144,"ip_address":"","ucode":"460ED32D6165ED","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/b0/9d11054a.jpg","comment_is_top":false,"comment_ctime":1544663682,"is_pvip":false,"replies":[{"id":"17748","content":"我可以加入到答疑篇中","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544674143,"ip_address":"","comment_id":49310,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134598274","product_id":100021201,"comment_content":"老师能不能讲位运算的更多应用，如n为2次幂m&amp;(n-1)=m%n 还有掩码等应用","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432568,"discussion_content":"我可以加入到答疑篇中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544674143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48690,"user_name":"leadtoit","can_delete":false,"product_type":"c1","uid":1011804,"ip_address":"","ucode":"30AA51F36E4FA3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIu1n1DhUGGKTiaBfhgA0TydpRhVS27KClRKEjJCiaQo85VSrdsf8E0yRJZ5p3Qj8LDiafgicSBRFy0YA/132","comment_is_top":false,"comment_ctime":1544516543,"is_pvip":false,"replies":[{"id":"18767","content":"写了两种解，不错👍<br>再考虑一下负数的情况","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545265604,"ip_address":"","comment_id":48690,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134451135","product_id":100021201,"comment_content":"public class Lesson1_Work {<br><br>    public static String toBinary1(int num) {<br>        String result = &quot;&quot;;<br>        while (num &gt; 0) {<br>            result = num % 2 + result;<br>            num = num &#47; 2;<br>        }<br>        return result;<br>    }<br><br>    public static String toBinary2(int num) {<br>        String result = &quot;&quot;;<br>        int i = 0;<br>        int v;<br>        while ((v = (1 &lt;&lt; i++)) &lt;= num) {<br>            if ((num &amp; v) == 0) {<br>                result = 0 + result;<br>            } else {<br>                result = 1 + result;<br>            }<br>        }<br>        return result;<br>    }<br><br>    public static void main(String[] args) {<br>        int num = 53;<br>        System.out.println(toBinary1(num));<br>        System.out.println(toBinary2(num));<br>    }<br>}<br><br>=======输出===========<br>110101<br>110101","like_count":2,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432310,"discussion_content":"写了两种解，不错👍\n再考虑一下负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545265604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206717,"user_name":"浮夸，","can_delete":false,"product_type":"c1","uid":1524304,"ip_address":"","ucode":"6D3E692B5DE871","user_header":"https://static001.geekbang.org/account/avatar/00/17/42/50/4914d4fa.jpg","comment_is_top":false,"comment_ctime":1586920738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5881888034","product_id":100021201,"comment_content":"算数运算：使用在普通的四则运算中<br>逻辑运算：一般在处理图片的时候用到吧<br>记忆中是这样的","like_count":1},{"had_liked":false,"id":187655,"user_name":"坏男孩","can_delete":false,"product_type":"c1","uid":1905333,"ip_address":"","ucode":"8105F5107090E7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/12/b5/3ff7c7fd.jpg","comment_is_top":false,"comment_ctime":1584185096,"is_pvip":false,"replies":[{"id":"72755","content":"很好的提议👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1584403615,"ip_address":"","comment_id":187655,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879152392","product_id":100021201,"comment_content":"刚看这例子，二进制转换成十进制，十进制转换成二进制，您直接调用api实现的，我感觉是不是应该写出算法，可以给小白一点启示","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487186,"discussion_content":"很好的提议👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584403615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110914,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1562391973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5857359269","product_id":100021201,"comment_content":"计算机使用二进制还有一个原因是四则运算，加法可以通过简单的位运算处理，减法可以通过补码转化成加法，乘除通过移位转化成加减，十进制的补码就不好设计，九九乘法表就更难用开关电路实现。<br><br>所有的进制在数学上是等效的，二进制最简单。","like_count":1},{"had_liked":false,"id":96759,"user_name":"恬毅","can_delete":false,"product_type":"c1","uid":1015240,"ip_address":"","ucode":"914ED16F3BE714","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/c8/e4727683.jpg","comment_is_top":false,"comment_ctime":1558498593,"is_pvip":false,"replies":[{"id":"34660","content":"很仔细的分析👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1558543133,"ip_address":"","comment_id":96759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853465889","product_id":100021201,"comment_content":"<br>1、老师，十进制转换成二进制的方法decimalToBinary，在计算负数的时候是不正确的。用Integer.toBinaryString(-53)得出是准确的。<br>System.out.println(String.format(&quot; 数字 %d 的Integer.toBinaryString二进制是 %s&quot;, -53, Integer.toBinaryString(-53))); &#47;&#47; 获取十进制数 53 的二进制数<br>System.out.println(String.format(&quot; 数字 %d 的二进制是 %s&quot;, -53, Lesson1_1.decimalToBinary(-53))); &#47;&#47; 获取十进制数 53 的二进制数<br><br>下面是答案：<br> 数字 -53 的Integer.toBinaryString二进制是 11111111111111111111111111001011<br> 数字 -53 的Lesson1_1.decimalToBinary二进制是 -110101<br><br>2、所以以上解决了我刚刚的困扰：左移为什么只有&lt;&lt;，不区分逻辑左移和算术左移。<br>1）如果是正数的时候没有问题，因为左边符号位是0，如果数据最高位（第二个bit）和符号位（第一个bit）不同，则左移之后必然溢出。<br>2）如果是负数的时候，我刚开始以为只是最左边符号位是1，中间，还是0，比如-35的8个bit二进制是：10110101，但是实际上应该是：<br>11001011。也就是负数的二进制左边都是1，如果数据最高位（第二个bit）和符号位（第一个bit）不同，则左移之后必然溢出，所以“有效”的左移不用担心数据最高位会改变符号位。<br>附上负数的二进制计算：<br>    以负数-1为例：<br>    1.先将-1的绝对值转换成二进制，即为0000 0001；<br>    2.然后求该二进制的反码，即为 1111 1110；<br>    3.最后将反码加1，即为：1111 1111","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451005,"discussion_content":"很仔细的分析👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558543133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48554,"user_name":"瘦马","can_delete":false,"product_type":"c1","uid":1344216,"ip_address":"","ucode":"D1D6E62DD23652","user_header":"https://static001.geekbang.org/account/avatar/00/14/82/d8/1df27da4.jpg","comment_is_top":false,"comment_ctime":1544487376,"is_pvip":false,"replies":[{"id":"17446","content":"不同的编译器处理方式可能不同，你可以用代码试试看。在Java中溢出时符号位会被移出","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544507794,"ip_address":"","comment_id":48554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839454672","product_id":100021201,"comment_content":"收获：<br>1、了解到BigInteger<br>2、逻辑右移&gt;&gt;和算术右移&gt;&gt;&gt;<br>3、了解到二进制可应用于查询<br><br>疑惑：<br>1、左移不分逻辑和算术，那么左移溢出时，符号位如何变化？<br>","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432243,"discussion_content":"不同的编译器处理方式可能不同，你可以用代码试试看。在Java中溢出时符号位会被移出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544507794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48553,"user_name":"李付发","can_delete":false,"product_type":"c1","uid":1004268,"ip_address":"","ucode":"81CDF23BE22CA1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/ec/85a707ec.jpg","comment_is_top":false,"comment_ctime":1544487275,"is_pvip":false,"replies":[{"id":"17445","content":"异或的逻辑应该是如文中所说，你这里提到的电路设计异或我没有接触过，能否给点参考资料？感谢","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544507225,"ip_address":"","comment_id":48553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839454571","product_id":100021201,"comment_content":"位的异或讲解的感觉不对吧?在电路中是两个继电器串联的，当都为断开电路才有电流经过。只要有一个闭合或者都闭合电路就会没有电流经过也就是0。","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432242,"discussion_content":"异或的逻辑应该是如文中所说，你这里提到的电路设计异或我没有接触过，能否给点参考资料？感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544507225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48510,"user_name":"Vilochen.","can_delete":false,"product_type":"c1","uid":1101556,"ip_address":"","ucode":"19D9BF8534B480","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/f4/5bfc786a.jpg","comment_is_top":false,"comment_ctime":1544457226,"is_pvip":false,"replies":[{"id":"18768","content":"再考虑一下负数的情况","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545265644,"ip_address":"","comment_id":48510,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839424522","product_id":100021201,"comment_content":"public class BinaryTest {<br>    public static void main(String[] args) {<br>        String result = &quot;&quot;;<br>        int num = 10;<br>        while (num != 0) {<br>            result = (num &amp; 1) + result;<br>            num = num &gt;&gt; 1;<br>        }<br>        System.out.println(result);<br>    }<br>}","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432217,"discussion_content":"再考虑一下负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545265644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48450,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1544446860,"is_pvip":false,"replies":[{"id":"17325","content":"思路是对的 赞","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544455329,"ip_address":"","comment_id":48450,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839414156","product_id":100021201,"comment_content":"# python 实现将整数转为二进制<br>#encoding=utf-8<br>def int3binary(num):<br>    result=[]<br>    while num!=0:<br>        result.append(num &amp; 1)<br>        num = num &gt;&gt; 1<br>    result.reverse()<br>    return result<br><br>print(*int2binary(10))<br><br>#输出 1010","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432185,"discussion_content":"思路是对的 赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544455329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48449,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1544446818,"is_pvip":false,"replies":[{"id":"18769","content":"还要考虑负数的情况","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545265663,"ip_address":"","comment_id":48449,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839414114","product_id":100021201,"comment_content":"# python 实现将整数转为二进制<br>#encoding=utf-8<br>def int3binary(num):<br>    result=[]<br>    while num!=0:<br>        result.append(num &amp; 1)<br>        num = num &gt;&gt; 1<br>    result.reverse()<br>    return result<br><br>print(*int2binary(10))<br><br>#输出 1010","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432184,"discussion_content":"还要考虑负数的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545265663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48418,"user_name":"吴克才（sean）","can_delete":false,"product_type":"c1","uid":1062693,"ip_address":"","ucode":"FC5DEBB9441663","user_header":"https://static001.geekbang.org/account/avatar/00/10/37/25/5275561d.jpg","comment_is_top":false,"comment_ctime":1544440352,"is_pvip":false,"replies":[{"id":"18771","content":"应该是一一对应的，否则就会有歧义了。当然计算机里溢出的情况会导致问题。如果不是溢出，你能举个不是一一对应的例子吗？","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1545265852,"ip_address":"","comment_id":48418,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839407648","product_id":100021201,"comment_content":"为什么二进制数跟十进制数不是一一对应的？","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432171,"discussion_content":"应该是一一对应的，否则就会有歧义了。当然计算机里溢出的情况会导致问题。如果不是溢出，你能举个不是一一对应的例子吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545265852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48407,"user_name":"杨峰","can_delete":false,"product_type":"c1","uid":1262593,"ip_address":"","ucode":"3CC9858ED38360","user_header":"https://static001.geekbang.org/account/avatar/00/13/44/01/ff75ebde.jpg","comment_is_top":false,"comment_ctime":1544437272,"is_pvip":false,"replies":[{"id":"17323","content":"不会讲那些领域的，机器学习相关的还是以文本处理为主","user_name":"作者回复","user_name_real":"Sean","uid":"1275061","ctime":1544455161,"ip_address":"","comment_id":48407,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839404568","product_id":100021201,"comment_content":"会说神经网络和图形算法之类的吗？","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432165,"discussion_content":"不会讲那些领域的，机器学习相关的还是以文本处理为主","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544455161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48347,"user_name":"ming","can_delete":false,"product_type":"c1","uid":1108056,"ip_address":"","ucode":"65E4A1E07D11A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/58/ecb493dc.jpg","comment_is_top":false,"comment_ctime":1544426237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839393533","product_id":100021201,"comment_content":"关于补码，我搜索了一下，可以用到数学里面相反数的定义","like_count":1},{"had_liked":false,"id":48304,"user_name":"大海จุ๊บ","can_delete":false,"product_type":"c1","uid":1343161,"ip_address":"","ucode":"898B83BA07DD70","user_header":"https://static001.geekbang.org/account/avatar/00/14/7e/b9/39c85ddc.jpg","comment_is_top":false,"comment_ctime":1544416163,"is_pvip":false,"replies":[{"id":"17244","content":"这只是第一课，你看看目录。","user_name":"编辑回复","user_name_real":"郭蕾","uid":"1000473","ctime":1544417700,"ip_address":"","comment_id":48304,"utype":2}],"discussion_count":1,"race_medal":0,"score":"5839383459","product_id":100021201,"comment_content":"数学基础课是不是太基础了，这课的受众是什么人呢","like_count":1,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432118,"discussion_content":"这只是第一课，你看看目录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544417700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48183,"user_name":"香克斯","can_delete":false,"product_type":"c1","uid":1155343,"ip_address":"","ucode":"8074086892698B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIOoZZc3BiacbOmTgchUKYWnDicrOBjWhtMXiaWjBVGHAP5so37w8ehpjfSticgCDmUPLM4IqrtFh0uWQ/132","comment_is_top":false,"comment_ctime":1544398908,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839366204","product_id":100021201,"comment_content":"左移翻倍，右移除以二这样的结论，建议用表达式得出","like_count":1},{"had_liked":false,"id":48171,"user_name":"牧神午饭","can_delete":false,"product_type":"c1","uid":1341247,"ip_address":"","ucode":"491CC34E44FF0E","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/3f/09cfab74.jpg","comment_is_top":false,"comment_ctime":1544379832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839347128","product_id":100021201,"comment_content":"算术左移和逻辑左移是一样，但算术右移和逻辑右移不一样，为啥要这么设计嘞？","like_count":1},{"had_liked":false,"id":356086,"user_name":"MarkZoldyck","can_delete":false,"product_type":"c1","uid":2056178,"ip_address":"湖北","ucode":"4CA2132C996512","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5f/f2/121afc48.jpg","comment_is_top":false,"comment_ctime":1661956444,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1661956444","product_id":100021201,"comment_content":"class lesson_1_4:<br>    @staticmethod<br>    def decimal_to_binary(decimal_source):<br>        &quot;&quot;&quot;十进制转换成二进制<br><br>        :param decimal_source: int<br>        :return: str<br>        &quot;&quot;&quot;<br>        if decimal_source == 0:<br>            return &quot;0b0&quot;<br>        sign = &#39;0b&#39;<br>        if decimal_source &lt; 0:<br>            sign = &#39;-&#39; + sign<br>            decimal_source *= -1<br><br>        nubmer_list = []<br>        while decimal_source != 0:<br>            nubmer_list.append(str(decimal_source &amp; 1))<br>            decimal_source &gt;&gt;= 1<br>        return sign + &#39;&#39;.join(nubmer_list[-1::-1])","like_count":0},{"had_liked":false,"id":354058,"user_name":"瑞桁","can_delete":false,"product_type":"c1","uid":3075629,"ip_address":"美国","ucode":"923D84EFDBCA82","user_header":"https://static001.geekbang.org/account/avatar/00/2e/ee/2d/e19194eb.jpg","comment_is_top":false,"comment_ctime":1660050712,"is_pvip":false,"replies":[{"id":"129187","content":"很高兴对你有所帮助！","user_name":"作者回复","user_name_real":"编辑","uid":"1275061","ctime":1661057359,"ip_address":"美国","comment_id":354058,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660050712","product_id":100021201,"comment_content":"准大一尚未接触过计算机的小白，今天是第一节程序员正课。认真慢慢读了2次文稿，虽然还看不懂运行代码的部分，但完全把数学的部分理解了，跟高中数学逻辑部分有些联系，瞬间记忆被唤醒了一样。老师讲的深入浅出，很感谢老师，我感觉这是一个好的开始。加油，工科女要把程序员数学啃下来","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584712,"discussion_content":"很高兴对你有所帮助！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661057359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"美国"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350464,"user_name":"Geek2056","can_delete":false,"product_type":"c1","uid":2715378,"ip_address":"","ucode":"AC3F53B58EC399","user_header":"","comment_is_top":false,"comment_ctime":1656928340,"is_pvip":false,"replies":[{"id":"127851","content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":"1275061","ctime":1657924632,"ip_address":"","comment_id":350464,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656928340","product_id":100021201,"comment_content":"可以这么理解么，原码和补码是在计算机中一个数的两种表示形式，两者互余，反码作为中间过度的作用，来实现原码补码之间相互转换，用补码形式进行加减法运算，就可以把问题转化成无符号加减法运算","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580148,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657924632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349074,"user_name":"606793","can_delete":false,"product_type":"c1","uid":3031327,"ip_address":"","ucode":"FAF540C95982D4","user_header":"","comment_is_top":false,"comment_ctime":1655714366,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655714366","product_id":100021201,"comment_content":"十进制转二进制可以用短除法","like_count":0},{"had_liked":false,"id":342646,"user_name":"早八很难不迟到","can_delete":false,"product_type":"c1","uid":2617586,"ip_address":"","ucode":"10116FDC6138EF","user_header":"https://static001.geekbang.org/account/avatar/00/27/f0/f2/d8624dce.jpg","comment_is_top":false,"comment_ctime":1650381103,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650381103","product_id":100021201,"comment_content":"为什么计算机内部使用二进制？<br>1. 电路有开和关两种状态，没有进一步细分（为了提高抗干扰能力和可靠性），可以使用二进制完美表示<br>2. 逻辑学中有真和假的概念，抽象成数字就是0和1，基于与或非等逻辑运算，构造对应逻辑门<br><br>新的思考：<br>之前将十进制转二进制，只是简单背了一个口诀，除二取余，自底向上。而现在看来，这其实就是用与逻辑和移位逻辑对该十进制数字所对应二进制串的遍历。","like_count":0},{"had_liked":false,"id":331707,"user_name":"Jack","can_delete":false,"product_type":"c1","uid":1450366,"ip_address":"","ucode":"A0956D2467A8C6","user_header":"https://static001.geekbang.org/account/avatar/00/16/21/7e/12c77eaa.jpg","comment_is_top":false,"comment_ctime":1642732558,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642732558","product_id":100021201,"comment_content":"十进制转换为二进制，以Java，int类型为例，代码如下：<br>\tpublic static void print(int num) {<br>\t\tfor (int i = 31; i &gt;= 0; i--) {<br>\t\t\tSystem.out.print((num &amp; (1 &lt;&lt; i)) == 0 ? &quot;0&quot; : &quot;1&quot;);<br>\t\t}<br>\t\tSystem.out.println();<br>\t}<br>","like_count":0},{"had_liked":false,"id":331466,"user_name":"吾颜六涩","can_delete":false,"product_type":"c1","uid":1898594,"ip_address":"","ucode":"4C42E903AD2E39","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f8/62/6a51ed0c.jpg","comment_is_top":false,"comment_ctime":1642595422,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642595422","product_id":100021201,"comment_content":"刚学完数电，除了不懂java，还好","like_count":0},{"had_liked":false,"id":316182,"user_name":"郭凯","can_delete":false,"product_type":"c1","uid":1415531,"ip_address":"","ucode":"25C85A6313B9C6","user_header":"https://static001.geekbang.org/account/avatar/00/15/99/6b/6eb8a1a5.jpg","comment_is_top":false,"comment_ctime":1634193356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634193356","product_id":100021201,"comment_content":"二进制转换十进制写出来了,十进制转换二进制使用按位异或与移位实现还没想到:<br>  public static int binaryToDecimal(String num) {<br>        int decimalRs = 0;<br>        for (int i = 0; i &lt; num.length(); i++) {<br>            int powerVal = 1;<br>            if (i &gt; 0) {<br>                powerVal = 2 &lt;&lt; (i - 1);<br>            }<br>            decimalRs += (Integer.parseInt(num.substring(num.length() - (i + 1), num.length() - i)) * (powerVal));<br>        }<br>        return decimalRs;<br>    }","like_count":0},{"had_liked":false,"id":315751,"user_name":"不工","can_delete":false,"product_type":"c1","uid":1462843,"ip_address":"","ucode":"A8725E6D0E1765","user_header":"https://static001.geekbang.org/account/avatar/00/16/52/3b/f1501d79.jpg","comment_is_top":false,"comment_ctime":1633961884,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633961884","product_id":100021201,"comment_content":"业务开发这么久，基本没有用过位运算相关的内容","like_count":0},{"had_liked":false,"id":309642,"user_name":"魏建","can_delete":false,"product_type":"c1","uid":2746851,"ip_address":"","ucode":"F90C078A718207","user_header":"","comment_is_top":false,"comment_ctime":1630287676,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630287676","product_id":100021201,"comment_content":"&gt;&gt;是针对于有符号数，如果该数为正，最高位补0，反之补1；<br>&gt;&gt;&gt;是针对无符号数，最高位补0同时右移1位","like_count":0},{"had_liked":false,"id":303411,"user_name":"庄风","can_delete":false,"product_type":"c1","uid":1267661,"ip_address":"","ucode":"21FC66BA9E7EBB","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/cd/9235341a.jpg","comment_is_top":false,"comment_ctime":1626773553,"is_pvip":false,"replies":[{"id":"111225","content":"确实，原文多此一举了","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1628889832,"ip_address":"","comment_id":303411,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626773553","product_id":100021201,"comment_content":"binaryToDecimal()方法的最后一句也可以写成：return bi.intValue();","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523666,"discussion_content":"确实，原文多此一举了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628889832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297073,"user_name":"兔芭鸽","can_delete":false,"product_type":"c1","uid":1905204,"ip_address":"","ucode":"5909106D70D461","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/0ZSHicG8Ky9WLpfqZTiaYN44OxXAVG9YjRm9JsXYPq9GkSEFRTMmmHn35PCgTlFFmGgBMQvGdXjzZklKwbTqMzuQ/132","comment_is_top":false,"comment_ctime":1623300211,"is_pvip":false,"replies":[{"id":"107902","content":"这里是为了解释二进制右移一位的含义，就是将数字除以 2 并求整数商的操作。所以53除2是26.5之后，有一步求整处理得到26。","user_name":"编辑回复","user_name_real":"叶如芊","uid":"2547771","ctime":1623304330,"ip_address":"","comment_id":297073,"utype":2}],"discussion_count":2,"race_medal":0,"score":"1623300211","product_id":100021201,"comment_content":"53除2是26.5呀","like_count":0,"discussions":[{"author":{"id":2547771,"avatar":"https://static001.geekbang.org/account/avatar/00/26/e0/3b/8ec916b2.jpg","nickname":"多少","note":"","ucode":"0A6EF7AA6E4BB7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521709,"discussion_content":"这里是为了解释二进制右移一位的含义，就是将数字除以 2 并求整数商的操作。所以53除2是26.5之后，有一步求整处理得到26。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623304330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1905204,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/0ZSHicG8Ky9WLpfqZTiaYN44OxXAVG9YjRm9JsXYPq9GkSEFRTMmmHn35PCgTlFFmGgBMQvGdXjzZklKwbTqMzuQ/132","nickname":"兔芭鸽","note":"","ucode":"5909106D70D461","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378614,"discussion_content":"嗯嗯，看到了，是除以2的整数商，谢谢😜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623305213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294576,"user_name":"HAKU","can_delete":false,"product_type":"c1","uid":1623320,"ip_address":"","ucode":"79C3474DFD36F0","user_header":"https://static001.geekbang.org/account/avatar/00/18/c5/18/08bd8405.jpg","comment_is_top":false,"comment_ctime":1622004560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622004560","product_id":100021201,"comment_content":"作业：JS中会用parseInt来做二进制转十进制，parseInt(&#39;1111&#39;,2)&#47;&#47;15,但是输入的值要是合法的二进制数;<br>          十进制转二进制字符串，可以用循环遍历除余，简洁高操使用.toString(2)","like_count":0},{"had_liked":false,"id":265823,"user_name":"从容","can_delete":false,"product_type":"c1","uid":2353640,"ip_address":"","ucode":"A20F2A2BB2DA54","user_header":"https://static001.geekbang.org/account/avatar/00/23/e9/e8/de194220.jpg","comment_is_top":false,"comment_ctime":1607044430,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607044430","product_id":100021201,"comment_content":"python语言：<br>二进制转换十进制：int(str(字符),2)<br># 第一个参数如果是整数同样需要将整数转换成字符形式，第二个参数表示要转换成什么进制类型，例如2进制<br><br>十进制转换成二进制：bin(十进制数)<br># 参数不需要变成字符类型，参数不能传入其他类型数据<br><br>字符转换成为二进制：bin(ord(&#39;字符&#39;)<br># ord函数参数只能传入一个字符，转换原理先将字符转换成十进制编码值，再用bin将十进制编码值转换成二进制<br><br>请问各位大佬们，我这样子的理解是对的吗？","like_count":0},{"had_liked":false,"id":262941,"user_name":"黄老师","can_delete":false,"product_type":"c1","uid":1342542,"ip_address":"","ucode":"F2F33318EEB3F4","user_header":"https://static001.geekbang.org/account/avatar/00/14/7c/4e/a89fa77c.jpg","comment_is_top":false,"comment_ctime":1605892430,"is_pvip":false,"replies":[{"id":"96737","content":"没错👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1607281094,"ip_address":"","comment_id":262941,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605892430","product_id":100021201,"comment_content":"算术右移感觉可以换一种说法更好理解，就是符号位跟着一起移动，然后在最左边补上符号位。而逻辑右移是符号位跟着一起移动，但是固定补0。逻辑右移实际上就是物理上的逻辑移动，而算数右移是为了在补码形式下保证右移运算等于除2运算。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510043,"discussion_content":"没错👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607281094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257691,"user_name":"锐锐爱南球","can_delete":false,"product_type":"c1","uid":1158621,"ip_address":"","ucode":"7AA4CA355B9D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/dd/970e7b4a.jpg","comment_is_top":false,"comment_ctime":1604061925,"is_pvip":true,"replies":[{"id":"94366","content":"是的������","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1604805352,"ip_address":"","comment_id":257691,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604061925","product_id":100021201,"comment_content":"高中学过10进制转化为n进制可以采用除n取余法，应该可以编写一个函数实现10进制到任意进制的转换","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508418,"discussion_content":"是的������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604805352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247597,"user_name":"Ying .","can_delete":false,"product_type":"c1","uid":2162516,"ip_address":"","ucode":"11EA297DA5CE8C","user_header":"https://static001.geekbang.org/account/avatar/00/20/ff/54/572f2242.jpg","comment_is_top":false,"comment_ctime":1599752375,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599752375","product_id":100021201,"comment_content":"#include&lt;stdio.h&gt;<br>int main()<br>{<br>    int a, k, i;<br>    int remainder[30];<br>    while (1)<br>    {<br>        &#47;&#47;定义了一个remainder数组，用来收集短除法除得的余数，栈倒序输出。<br>        printf(&quot;请输入一个十进制数:  &quot;);<br>        scanf_s(&quot;%d&quot;, &amp;a);<br>        k = 0;<br>        while (a != 0)<br>        {<br>            remainder[k++] = a % 2;<br>            a = a &#47; 2;<br>        };<br>        printf(&quot;转换成二进制数是:  &quot;);<br>        for (i = k-1; i &gt;= 0; i--)<br>        {<br>            printf(&quot;%d&quot;, remainder[i]);<br>        }<br>        printf(&quot;\\n\\n&quot;);<br>    }<br>    return 0;<br>}","like_count":0},{"had_liked":false,"id":246980,"user_name":"zhaoey","can_delete":false,"product_type":"c1","uid":2168796,"ip_address":"","ucode":"CD70AA3ED52B5B","user_header":"https://static001.geekbang.org/account/avatar/00/21/17/dc/8edbd93e.jpg","comment_is_top":false,"comment_ctime":1599548893,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1599548893","product_id":100021201,"comment_content":" public static void main(String[] args) {<br>        &#47;&#47; 十进制转二进制规则：将该数不断除以2，直到商为0，然后将每步得到的余数倒过来<br>        int decimalSource = 9999;<br>        String s = decimalToBinary(decimalSource);<br>        System.out.println(s);<br>        System.out.println(new BigInteger(s,2));<br>    }<br><br>    public static String decimalToBinary(int decimalSource){<br>        String decimalSourceStr = String.valueOf(decimalSource);<br>        String ignoreSignBitSource = null;<br>        int t = decimalSourceStr.lastIndexOf(&#39;-&#39;);<br>        boolean signed = true;<br>        if (t &gt;= 0){<br>            &#47;&#47; 负数<br>            signed = false;<br>            ignoreSignBitSource = decimalSourceStr.replace(&quot;-&quot;,&quot;&quot;);<br>        }else{<br>            &#47;&#47; 正数<br>            ignoreSignBitSource = decimalSourceStr;<br>        }<br><br>        &#47;&#47; 1、将该数不断除以2，直到商为0<br>        int decimalSourceInt = Integer.parseInt(ignoreSignBitSource);<br>        int[] curs = new int[10];<br>        int cur = 0;<br>        int prev = decimalSourceInt;<br>        int index = 0;<br>        while (index == 0 || cur &gt; 0){<br>            cur = prev &#47; 2;<br>            if (index == curs.length){<br>                int[] tmps = new int[index + 10];<br>                System.arraycopy(curs,0,tmps,0,index);<br>                curs = tmps;<br>            }<br>            curs[index] = prev % 2;<br>            prev = cur;<br>            index++;<br>        }<br><br>        &#47;&#47; 2、组装余数并颠倒顺序<br>        StringBuffer sbf = new StringBuffer();<br>        for (int i = 0; i &lt; index; i++) {<br>            sbf.append(curs[i]);<br>        }<br>        if (!signed){<br>            sbf.append(&quot;-&quot;);<br>        }<br>        return sbf.reverse().toString();<br>    }","like_count":0,"discussions":[{"author":{"id":2168796,"avatar":"https://static001.geekbang.org/account/avatar/00/21/17/dc/8edbd93e.jpg","nickname":"zhaoey","note":"","ucode":"CD70AA3ED52B5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306015,"discussion_content":"只有自己输出的时候才是真正的掌握，加油！\n/**\n     * 二进制转10进制\n     * 从低位开始，将每个位上的数提取出来，乘以2的（位数-1）次方，然后求和\n     */\n    public static int binary2Decimal_2(String value){\n        String pos = value;\n        if (value.lastIndexOf(&#34;-&#34;) != -1){\n            pos = value.replace(&#34;-&#34;,&#34;&#34;);\n        }\n\n        StringBuilder sb = new StringBuilder(pos).reverse();\n        int index = 0,result = 0;\n        do {\n            String c = sb.substring(index, index + 1);\n            // result += Integer.parseInt(c) * Math.pow(2,index);\n            result += Integer.parseInt(c) * (index == 0 ? 1 : 2 << index - 1);\n        }while ((index += 1) < sb.length());\n\n        if (value.lastIndexOf(&#34;-&#34;) != -1){\n            result *= -1;\n        }\n        return result;\n    }","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600148170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2168796,"avatar":"https://static001.geekbang.org/account/avatar/00/21/17/dc/8edbd93e.jpg","nickname":"zhaoey","note":"","ucode":"CD70AA3ED52B5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306001,"discussion_content":"优化版本\n/**\n     * 十进制转二进制\n     * 将该数不断除以2，直到商为0，然后将每步得到的余数倒过来\n     */\n    public static String decimal2Binary(int value){\n        int pos = Math.abs(value);\n        if (0 == pos){\n            return &#34;0&#34;;\n        }\n\n        StringBuilder sb = new StringBuilder();\n        do {\n            sb.append(pos % 2);\n            pos = pos >> 1;\n        }while (pos > 0);\n        \n        if (value < 0){\n            // 负数情况\n            sb.append(&#34;-&#34;);\n        }\n        return sb.reverse().toString();\n    }","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600146168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246025,"user_name":"Geek8819","can_delete":false,"product_type":"c1","uid":2028950,"ip_address":"","ucode":"521AEDAB2EED81","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/96/e963b41b.jpg","comment_is_top":false,"comment_ctime":1599138129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599138129","product_id":100021201,"comment_content":"    public static String getBinary(int num) {<br>        boolean negative = false;<br>        if (num &lt; 0) {<br>            negative = true;<br>            num = Math.abs(num);<br>        }<br>        StringBuilder sb = new StringBuilder();<br>        int i = 0;<br>        while ((num &gt;&gt;&gt; i) &gt;= 1) {<br>            sb.append((num &gt;&gt;&gt; i) % 2);<br>            i++;<br>        }<br>        if (negative) {<br>            sb.append(&quot;-&quot;);<br>        }<br>        return sb.reverse().toString();<br>    }","like_count":0},{"had_liked":false,"id":245063,"user_name":"强劲九","can_delete":false,"product_type":"c1","uid":1235372,"ip_address":"","ucode":"62DB1860386A38","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/ac/26ada7b8.jpg","comment_is_top":false,"comment_ctime":1598800555,"is_pvip":false,"replies":[{"id":"90375","content":"很好的总结������","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1599062287,"ip_address":"","comment_id":245063,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598800555","product_id":100021201,"comment_content":"二进制是一个很好的「发明」，直接把各种平凡的电路的高低点位用 1 和 0 表达出来。其实如果要让计算机用十进制的方式计算，那么一个每一个数字都要对应到不同的电位，那么误差就会十分大，技术上也会十分昂贵，显然不好。<br><br>另外，即使现在计算机能够自动帮我们进行数制的转换，我们可以直接用熟悉的十进制思考，但是我们还是需要懂得最基本的二进制知识。并且当我们知道，用二进制如何去表示小数、循环小数等时，对于我们编程上也会更有帮助。这些底层的思维，是能力发展高度的决定因素。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504781,"discussion_content":"很好的总结������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599062287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242116,"user_name":"Nemo","can_delete":false,"product_type":"c1","uid":1657039,"ip_address":"","ucode":"2B11D18D6FA2AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/48/cf/8c88e6c0.jpg","comment_is_top":false,"comment_ctime":1597593317,"is_pvip":false,"replies":[{"id":"89998","content":"相信对你会有所帮助","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1598581784,"ip_address":"","comment_id":242116,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597593317","product_id":100021201,"comment_content":"好课不怕订阅晚","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503928,"discussion_content":"相信对你会有所帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598581784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237162,"user_name":"asia","can_delete":false,"product_type":"c1","uid":1344529,"ip_address":"","ucode":"1876DD836EFCE3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI85Y2Va9sKp8bOCCsjK7ABt6H6qzxunXk2zUJpdrOgoXergdAGfibEVoqKs0Zz8RicxmQyQiaRcx5nA/132","comment_is_top":false,"comment_ctime":1595694782,"is_pvip":false,"replies":[{"id":"87996","content":"抱歉我没有说清楚，这里特指上文的-53这个负数。如果通用来说，就是你说的。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1596082665,"ip_address":"","comment_id":237162,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1595694782","product_id":100021201,"comment_content":"老师，您好：“算术右移时保持符号位不变，除符号位之外的右移一位并补符号位 1。补的 1 仍然在符号位之后。” 这句话的表达是错的。<br>应该是：算术右移，在高位补0还是1，取决于符号为是0还是1。如果符号位是0则补0，符号为是1则补1。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502321,"discussion_content":"抱歉我没有说清楚，这里特指上文的-53这个负数。如果通用来说，就是你说的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596082665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344529,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI85Y2Va9sKp8bOCCsjK7ABt6H6qzxunXk2zUJpdrOgoXergdAGfibEVoqKs0Zz8RicxmQyQiaRcx5nA/132","nickname":"asia","note":"","ucode":"1876DD836EFCE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304541,"discussion_content":"收到 谢谢老师回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599610946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237161,"user_name":"asia","can_delete":false,"product_type":"c1","uid":1344529,"ip_address":"","ucode":"1876DD836EFCE3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI85Y2Va9sKp8bOCCsjK7ABt6H6qzxunXk2zUJpdrOgoXergdAGfibEVoqKs0Zz8RicxmQyQiaRcx5nA/132","comment_is_top":false,"comment_ctime":1595694405,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595694405","product_id":100021201,"comment_content":"老师，您好：我对53进行算数右移与逻辑右移，得到的结果是一样的。并不符合“算术右移时保持符号位不变，除符号位之外的右移一位并补符号位 1。补的 1 仍然在符号位之后”。请问是为什么？<br> &#47;**<br>     * 对操作树进行逻辑右移操作<br>     *<br>     * @param num 要进行右移的数字<br>     * @param m   右移m位<br>     * @return int<br>     *&#47;<br>    public static int rightShift(int num, int m) {<br>        return num &gt;&gt;&gt; m;<br>    }<br><br>    &#47;**<br>     * 对操作树进行算数右移操作<br>     *<br>     * @param num 要进行右移的数字<br>     * @param m   右移m位<br>     * @return int<br>     *&#47;<br>    public static int rightShift2(int num, int m) {<br>        return num &gt;&gt; m;<br>    }<br>测试：<br>int num = 53;<br>        int m = 3;<br>        System.out.println(String.format(&quot;对%d进行左移%d位后，得到的值为%d&quot;, num, m, Lesson1_2.leftShift(num, m)));<br><br>        System.out.println(String.format(&quot;对%d进行逻辑右移%d位后，得到的值为%d&quot;, num, m, Lesson1_2.rightShift(num, m)));<br><br>        System.out.println(String.format(&quot;对%d进行算数右移%d位后，得到的值为%d&quot;, num, m, Lesson1_2.rightShift2(num, m)));<br>输出结果：<br>对53进行左移3位后，得到的值为424<br>对53进行逻辑右移3位后，得到的值为6<br>对53进行算数右移3位后，得到的值为6","like_count":0},{"had_liked":false,"id":236189,"user_name":"Geek_ba6f28","can_delete":false,"product_type":"c1","uid":2075683,"ip_address":"","ucode":"5EC1D41CAD7A58","user_header":"","comment_is_top":false,"comment_ctime":1595340887,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595340887","product_id":100021201,"comment_content":"        int a = 53;&#47;&#47;暂未考虑负数<br>        String k = &quot;&quot;;<br>        while (a != 0) {<br>            k += a &amp; 1;<br>            a = a &gt;&gt;&gt; 1;<br><br>        }<br>        for (int i = k.length() - 1; i &gt;= 0; i--) {<br>            System.out.print(k.charAt(i));<br>        }","like_count":0},{"had_liked":false,"id":236037,"user_name":"匿名用户","can_delete":false,"product_type":"c1","uid":1294191,"ip_address":"","ucode":"D9B53A5929DAF7","user_header":"https://static001.geekbang.org/account/avatar/00/13/bf/6f/98e73412.jpg","comment_is_top":false,"comment_ctime":1595296160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595296160","product_id":100021201,"comment_content":"进制转换规则<br><br>十进制转二进制：除二求余，得到低位到高位的二进制数字排列<br>十进制转八进制：除八求余，得到低位到高位的八进制数字排列<br>十进制转十六进制：除十六取余，得到低位到高位的十六进制数字排列，对于 10 ~ 15 转换为 A - F 需要做映射表<br><br>二进制转十进制：每个二进制位数字乘以该位置的权值，最后求和（权值就是基数的二进制索引次方，索引从 0 开始，比如 2^0）<br>八进制转十进进制：每个八进制位数字乘以该位的权值，最后求和<br>十六进制转十进制：每个十六进制为数字乘以该位的权值，最后求和。对于 A ~ F 的字母需要查表取数值<br><br>二进制转八进制：取三合一，即取三个二进制位求十进制数值；从右至左取三合一得到八进制的低位到高位数字排列（左侧取三不够时补 0 凑足）<br>八进制转二进制：取一分三，即取一个八进制位求二进制数字；从左至右取一分三得到二进制的高位到低位数字排列<br><br>二进制转十六进制：取四合一，即取四个二进制位求十进制数值；从右至左取四合一得到十六进制的低位到高位数字排列（左侧取四不够时补 0 凑足）<br>十六进制转二进制：取一分四，即取一个十六进制为求二进制数字；从左至右取一分四得到二进制的高位到低位的数字排列<br><br>八进制和十六进制互相转换借助二进制做中转","like_count":0},{"had_liked":false,"id":227981,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1046920,"ip_address":"","ucode":"79F73D85EDF3E2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/88/cdda9e6f.jpg","comment_is_top":false,"comment_ctime":1592532000,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592532000","product_id":100021201,"comment_content":"异或其实是二进制位的比较操作，位相同则是0，<br>两个数不同异或的结果其实就是两个数的差异或者距离","like_count":0},{"had_liked":false,"id":223201,"user_name":"lcqbug","can_delete":false,"product_type":"c1","uid":1268609,"ip_address":"","ucode":"08FA17F21BCEC5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epbyHPGNLu9sDQOs1V6brMcDwia55pyIlP9n62oO6IYS6kIFDnOSON4ugSeBSy6WhDUnYyJC6vtnHQ/132","comment_is_top":false,"comment_ctime":1591020369,"is_pvip":false,"replies":[{"id":"82232","content":"对，在Python中没有","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1591026184,"ip_address":"","comment_id":223201,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591020369","product_id":100021201,"comment_content":"逻辑右移在 Java 和 Python 语言中使用 &gt;&gt;&gt; 表示，可是python中没有&gt;&gt;&gt; ?","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497053,"discussion_content":"对，在Python中没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591026184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223067,"user_name":"Geek_1bca3e","can_delete":false,"product_type":"c1","uid":2027228,"ip_address":"","ucode":"B801B5B2416B4C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2ibcQVCzwThf79tLAK9Fickoe75YVBK8X6tYggichZlgv07XtdpJcFYIRPBicbwdibzzicghyFpt3EfXg/132","comment_is_top":false,"comment_ctime":1590993767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590993767","product_id":100021201,"comment_content":"   &#47;&#47;十进制转二进制<br>   public static String  binaryToDecimal(int n){<br>      String result =&quot;&quot;;<br>        for(int i = 31;i &gt;= 0; i--){<br>           result += (n &gt;&gt; i &amp; 1);<br>        }<br>        result = result.substring(result.indexOf(&quot;1&quot;));<br>        System.out.println(&quot;转化结果为&quot;+result);<br>      return result;<br>   }","like_count":0},{"had_liked":false,"id":220269,"user_name":"六耳","can_delete":false,"product_type":"c1","uid":1343074,"ip_address":"","ucode":"3BE4EE104A23E6","user_header":"https://static001.geekbang.org/account/avatar/00/14/7e/62/bd0b743c.jpg","comment_is_top":false,"comment_ctime":1590218442,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590218442","product_id":100021201,"comment_content":"package math.lesson;<br><br>&#47;**<br> * 课后习题<br> * 如果不使用 Java 语言自带的 BigInteger 类，我们还有什么方法来实现十进制到二进制的转换呢？（提示：可以使用二进制的移位和按位逻辑操作来实现。）<br> * &lt;p&gt;<br> * 思路：<br> * 1. 位移法：decimal&amp;1 判断最后一位是0还是1，然后&gt;&gt;&gt;1，依次对比最后reverse<br> * 2. 取余法：decimal%2 取余数为最后一位，然后&gt;&gt;&gt;1，依次取余最后reverse<br> *<br> * @author pano<br> *&#47;<br>public class Lesson001 {<br><br>    &#47;**<br>     * 1. 位移法：decimal&amp;1 判断最后一位是0还是1，然后&gt;&gt;1，依次对比最后reverse<br>     * 考虑负数情况<br>     *&#47;<br>    public String decimalToBinary01(int decimal) {<br>        StringBuilder stringBuilder = new StringBuilder();<br>        while (decimal != 0) {<br>            stringBuilder.append(decimal &amp; 1);<br>            decimal = decimal &gt;&gt;&gt; 1;<br>        }<br>        return stringBuilder.length() &gt; 0 ? stringBuilder.reverse().toString() : &quot;0&quot;;<br>    }<br><br>    &#47;**<br>     * 2. 取余法：decimal%2 取余数为最后一位，然后&gt;&gt;1，依次取余最后reverse<br>     * 考虑负数情况<br>     *&#47;<br>    public String decimalToBinary02(int decimal) {<br>        StringBuilder stringBuilder = new StringBuilder();<br>        while (decimal != 0) {<br>            stringBuilder.append(Math.abs(decimal % 2));<br>            decimal = decimal &gt;&gt;&gt; 1;<br>        }<br>        return stringBuilder.length() &gt; 0 ? stringBuilder.reverse().toString() : &quot;0&quot;;<br>    }<br>}","like_count":0},{"had_liked":false,"id":220266,"user_name":"六耳","can_delete":false,"product_type":"c1","uid":1343074,"ip_address":"","ucode":"3BE4EE104A23E6","user_header":"https://static001.geekbang.org/account/avatar/00/14/7e/62/bd0b743c.jpg","comment_is_top":false,"comment_ctime":1590217922,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590217922","product_id":100021201,"comment_content":"package math.lesson;<br><br>&#47;**<br> * 课后习题<br> * 如果不使用 Java 语言自带的 BigInteger 类，我们还有什么方法来实现十进制到二进制的转换呢？（提示：可以使用二进制的移位和按位逻辑操作来实现。）<br> * &lt;p&gt;<br> * 思路：<br> * 1. 位移法：decimal&amp;1 判断最后一位是0还是1，然后&gt;&gt;1，依次对比最后reverse<br> * 2. 取余法：decimal%2 取余数为最后一位，然后&gt;&gt;1，依次取余最后reverse<br> *<br> * @author pano<br> *&#47;<br>public class Lesson001 {<br><br>    &#47;**<br>     * 1. 位移法：decimal&amp;1 判断最后一位是0还是1，然后&gt;&gt;1，依次对比最后reverse<br>     * 考虑负数情况<br>     *&#47;<br>    public String decimalToBinary01(int decimal) {<br>        StringBuilder stringBuilder = new StringBuilder();<br>        if (decimal &gt; 0) {<br>            while (decimal != 0) {<br>                stringBuilder.append(decimal &amp; 1);<br>                decimal = decimal &gt;&gt; 1;<br>            }<br>            return stringBuilder.reverse().toString();<br>        }<br>        if (decimal &lt; 0) {<br>            while (decimal != 0) {<br>                stringBuilder.append(decimal &amp; 1);<br>                decimal = decimal &gt;&gt;&gt; 1;<br>            }<br>            return stringBuilder.reverse().toString();<br>        }<br>        return &quot;0&quot;;<br>    }<br><br>    &#47;**<br>     * 2. 取余法：decimal%2 取余数为最后一位，然后&gt;&gt;1，依次取余最后reverse<br>     * 考虑负数情况<br>     *&#47;<br>    public String decimalToBinary02(int decimal) {<br>        StringBuilder stringBuilder = new StringBuilder();<br>        if (decimal &gt; 0) {<br>            while (decimal != 0) {<br>                stringBuilder.append(decimal % 2);<br>                decimal = decimal &gt;&gt; 1;<br>            }<br>            return stringBuilder.reverse().toString();<br>        }<br>        if (decimal &lt; 0) {<br>            while (decimal != 0) {<br>                stringBuilder.append(decimal % 2);<br>                decimal = decimal &gt;&gt;&gt; 1;<br>            }<br>            return stringBuilder.reverse().toString();<br>        }<br>        return &quot;0&quot;;<br>    }<br>}<br>","like_count":0},{"had_liked":false,"id":218947,"user_name":"飞鸟","can_delete":false,"product_type":"c1","uid":1025720,"ip_address":"","ucode":"AF66EEAB45B597","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/b8/4f66e13f.jpg","comment_is_top":false,"comment_ctime":1589902039,"is_pvip":false,"replies":[{"id":"81367","content":"很好的总结","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1590280158,"ip_address":"","comment_id":218947,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589902039","product_id":100021201,"comment_content":"互联网的基石原来是看起来小小的二进制，真奇妙。<br>学习十进制时我们喜欢做加减乘除，二进制好像很喜欢做真假判断，二进制的左右移原来是乘除运算，用异或可以对二进制序列的某一位进行操作这样就可以实现加减的效果。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495629,"discussion_content":"很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590280158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218375,"user_name":"peace","can_delete":false,"product_type":"c1","uid":2006148,"ip_address":"","ucode":"8629F9BFDC253E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erWrGjD40JI6WTIaSLfZ9icTyuuLEpPwCicr3Fv2icy8mibHBj5icMpIGxp9UD8rLIQib1RLpXIrwKaQxOA/132","comment_is_top":false,"comment_ctime":1589791497,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589791497","product_id":100021201,"comment_content":"将该数与1按位与，并将最后一位存入数组，之后将该数算数右移，直至该数为0,最后将数组中元素逆序输出","like_count":0},{"had_liked":false,"id":213603,"user_name":"爱极客","can_delete":false,"product_type":"c1","uid":1073528,"ip_address":"","ucode":"5FC59927D194D8","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUXWqIBiadT4H3XvpcLeOkeocfmpInuhCoHviaUrX7B0N8wnOicnqHZeicKg1SlLk070EFRya1RPQIicw/132","comment_is_top":false,"comment_ctime":1588489009,"is_pvip":false,"replies":[{"id":"79282","content":"是的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1588645322,"ip_address":"","comment_id":213603,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588489009","product_id":100021201,"comment_content":"与：两个数都是1 结果就是 1<br>或：两个数中如果有一个是1结果就是1<br>余或：两个数不相同，结果就是1","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493823,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588645322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204288,"user_name":"1043","can_delete":false,"product_type":"c1","uid":1485365,"ip_address":"","ucode":"AAA69CC175AEE3","user_header":"https://static001.geekbang.org/account/avatar/00/16/aa/35/1a4884f9.jpg","comment_is_top":false,"comment_ctime":1586359942,"is_pvip":false,"replies":[{"id":"76426","content":"对，64位就不会溢出，如果超出了64位，需要分段计算","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1586401819,"ip_address":"","comment_id":204288,"utype":1}],"discussion_count":1,"race_medal":5,"score":"1586359942","product_id":100021201,"comment_content":"现在处理器都是32-64位的，超出32位的部分只要操作系统是64bit的是不是数字就不能溢出呢？那如果处理字长足够长已经超出64bit了会怎么计算？都会合理设置类似IP地址设计的点分十进制或者陌号分十六进制那样的隔位符号吗？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491131,"discussion_content":"对，64位就不会溢出，如果超出了64位，需要分段计算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586401819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199706,"user_name":"HoSalt","can_delete":false,"product_type":"c1","uid":1156074,"ip_address":"","ucode":"610B03E2A002D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","comment_is_top":false,"comment_ctime":1585494199,"is_pvip":false,"replies":[{"id":"75053","content":"对，正数补0","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585630118,"ip_address":"","comment_id":199706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585494199","product_id":100021201,"comment_content":"「算术右移时保持符号位不变，除符号位之外的右移一位并补符号位 1。补的 1 仍然在符号位之后」<br>这是针对负数？正数是不是补0，那应该是补符号位的数","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489867,"discussion_content":"对，正数补0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585630118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192248,"user_name":"zhouliweb","can_delete":false,"product_type":"c1","uid":1888013,"ip_address":"","ucode":"56E43981002AF2","user_header":"","comment_is_top":false,"comment_ctime":1584844228,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584844228","product_id":100021201,"comment_content":"学习","like_count":0},{"had_liked":false,"id":189416,"user_name":"ano","can_delete":false,"product_type":"c1","uid":1783342,"ip_address":"","ucode":"7DE64BDFA78550","user_header":"https://static001.geekbang.org/account/avatar/00/1b/36/2e/376a3551.jpg","comment_is_top":false,"comment_ctime":1584513701,"is_pvip":false,"replies":[{"id":"75087","content":"看你的需要，查缺补漏","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585633098,"ip_address":"","comment_id":189416,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584513701","product_id":100021201,"comment_content":"老师，你好，我对数据结构和算法已经比较熟悉了，之前学过一些课程，前面这个基础思想篇是不是就可以略过了？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487691,"discussion_content":"看你的需要，查缺补漏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585633098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187349,"user_name":"GS","can_delete":false,"product_type":"c1","uid":1042618,"ip_address":"","ucode":"21C73A8CBD8093","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/ba/6d318c08.jpg","comment_is_top":false,"comment_ctime":1584088848,"is_pvip":false,"replies":[{"id":"72338","content":"Python是用于科学计算的，所以对数据的处理更好，可以实现更多位数","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1584128653,"ip_address":"","comment_id":187349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584088848","product_id":100021201,"comment_content":"python中貌似不会整型溢出，比如我的电脑，安装 python3<br>import sys<br>print(sys.maxsize)<br># 得到9223372036854775807<br># 然后我再把他左移一位，<br>print(9223372036854775807 &lt;&lt; 1)<br>#他就变成了 18446744073709551614","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487084,"discussion_content":"Python是用于科学计算的，所以对数据的处理更好，可以实现更多位数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584128653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187329,"user_name":"Zeal","can_delete":false,"product_type":"c1","uid":1898857,"ip_address":"","ucode":"327D516A1D0F0E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f9/69/384e33e6.jpg","comment_is_top":false,"comment_ctime":1584084808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584084808","product_id":100021201,"comment_content":"任意进制之间的转换，高转低是除与余，低转高是乘与补。<br>负数的话，先看作正数，再做负号处理。","like_count":0},{"had_liked":false,"id":186585,"user_name":"赵占涛","can_delete":false,"product_type":"c1","uid":1903822,"ip_address":"","ucode":"95A45CDB9D559F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0c/ce/905d9bf0.jpg","comment_is_top":false,"comment_ctime":1583888623,"is_pvip":false,"replies":[{"id":"72105","content":"确实是","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1583972682,"ip_address":"","comment_id":186585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583888623","product_id":100021201,"comment_content":"我觉得可以提一下16进制，16进制也经常被使用，因为16进制能快速的和2进制进行转换(肉眼转换或者说是人脑转换)，一个16进制位对应4个2进制位。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486805,"discussion_content":"确实是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583972682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180648,"user_name":"Handsome","can_delete":false,"product_type":"c1","uid":1747799,"ip_address":"","ucode":"61EFF4A1BAA5C6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ab/57/a57266b0.jpg","comment_is_top":false,"comment_ctime":1582358569,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582358569","product_id":100021201,"comment_content":"Python3并没有 逻辑右移运算符 &gt;&gt;&gt; 。<br>好像python3能自己做到对正数逻辑右移，对负数算术右移","like_count":0},{"had_liked":false,"id":180033,"user_name":"四喜","can_delete":false,"product_type":"c1","uid":1071389,"ip_address":"","ucode":"C5EBED19C0F332","user_header":"https://static001.geekbang.org/account/avatar/00/10/59/1d/c89abcd8.jpg","comment_is_top":false,"comment_ctime":1582169009,"is_pvip":false,"replies":[{"id":"69983","content":"确实可以","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1582222502,"ip_address":"","comment_id":180033,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582169009","product_id":100021201,"comment_content":"Javascript才有`&gt;&gt;&gt;`运算符，Python没有。Python可以自己这样实现，```def rshift(val, n, base=32): return val&gt;&gt;n if val &gt;= 0 else (val+2**base)&gt;&gt;n```","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484497,"discussion_content":"确实可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582222502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179519,"user_name":"闪耀之作r","can_delete":false,"product_type":"c1","uid":1712458,"ip_address":"","ucode":"11929B7EF47D4B","user_header":"https://static001.geekbang.org/account/avatar/00/1a/21/4a/05c36143.jpg","comment_is_top":false,"comment_ctime":1582019839,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582019839","product_id":100021201,"comment_content":"笔记:一、二进制简单来说就是用0和1数字表示，二、二进制具有在电路中抗干扰性强且可能性少，不容易出现判断错误与逻辑判断中的异或和或相匹配，三、用代码能更好的帮助我们对二进制的理解","like_count":0},{"had_liked":false,"id":177461,"user_name":"Geek_e2b99d","can_delete":false,"product_type":"c1","uid":1824010,"ip_address":"","ucode":"CE3A039A83B410","user_header":"","comment_is_top":false,"comment_ctime":1581396432,"is_pvip":false,"replies":[{"id":"69122","content":"是的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1581618106,"ip_address":"","comment_id":177461,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581396432","product_id":100021201,"comment_content":"之所以左移不需要区分逻辑和算术，在于有符号数以补码的形式存在，最高位和符号位始终保持一致。如果不同则溢出。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483436,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581618106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171337,"user_name":"陈悬高","can_delete":false,"product_type":"c1","uid":1065981,"ip_address":"","ucode":"457213A8351202","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/fd/908706cc.jpg","comment_is_top":false,"comment_ctime":1578904473,"is_pvip":false,"replies":[{"id":"66524","content":"是的👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1578983094,"ip_address":"","comment_id":171337,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578904473","product_id":100021201,"comment_content":"可以从集合论的观点来理解按位操作：<br><br>* AND 运算就是求集合的交集：A ∩ B = A AND B。<br><br>* OR 运算就是求集合的并集：A ∪ B = A OR B。<br><br>* XOR 运算就是求集合的对称差：A ⊕ B = A XOR B。<br><br>* NOT 运算就是求集合的补集：&amp;#8705;A = NOT A。<br><br>* 另外，还可以使用 AND 和 NOT 运算来求集合的差集：A - B = A ∩ &amp;#8705;B = A AND (NOT B)。<br><br>&gt; **集合的对称差**<br><br>&gt; 由属于集合 A 但不属于集合 B 或者属于集合 B 但不属于集合 A 的所有元素构成的集合，称为集合 A 和 集合 B 的**对称差**，记作 A ⊕ B，即 A ⊕ B = {x | (x∈A, 且 x&amp;#8713;B) 或 (x&amp;#8713;A, 且 x∈B)}。实际上，A ⊕ B = (A∪B) - (A∩B)。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481301,"discussion_content":"是的👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578983094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170299,"user_name":"我是爹","can_delete":false,"product_type":"c1","uid":1269600,"ip_address":"","ucode":"E02D8A7A916B61","user_header":"https://static001.geekbang.org/account/avatar/00/13/5f/60/7ea2d646.jpg","comment_is_top":false,"comment_ctime":1578563712,"is_pvip":false,"replies":[{"id":"66325","content":"这取决于编程语言，数据类型是否支持符号位","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1578851494,"ip_address":"","comment_id":170299,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578563712","product_id":100021201,"comment_content":"什么时候第32位不代表符号位<br>","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480929,"discussion_content":"这取决于编程语言，数据类型是否支持符号位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578851494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169588,"user_name":"Geek_Demon","can_delete":false,"product_type":"c1","uid":1802896,"ip_address":"","ucode":"FD4142C159F911","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLFfibM3pkQJ5ZVGGjr4f9Aa1EaxmcFfSe5LibGicek2DVxseJ60mhCYwquEF1fUmRxNcVvLia5zm9w5A/132","comment_is_top":false,"comment_ctime":1578383838,"is_pvip":false,"replies":[{"id":"65852","content":"是的，最基础最重要的操作之一","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1578421761,"ip_address":"","comment_id":169588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578383838","product_id":100021201,"comment_content":"位运算可以用来做权限设计，比如linux系统的读，写，可执行","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480622,"discussion_content":"是的，最基础最重要的操作之一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578421761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169120,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1578277311,"is_pvip":false,"replies":[{"id":"65856","content":"是的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1578427133,"ip_address":"","comment_id":169120,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578277311","product_id":100021201,"comment_content":"老师，算术右移你想表达的是，保证符号位不变，其他的位置 右移之后，在符号位的后面插入一个符号位相同的数字吧。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480429,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578427133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168265,"user_name":"小鸟淫太","can_delete":false,"product_type":"c1","uid":1247186,"ip_address":"","ucode":"AC44F552DDF93E","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/d2/d7a200d5.jpg","comment_is_top":false,"comment_ctime":1578039953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578039953","product_id":100021201,"comment_content":"function dlss (num) {<br>  let str = &#39;&#39;;<br>  do {<br>    str = (num &amp; 1) + str;<br>  } while (num = num &gt;&gt; 1);<br>  return str;<br>}<br><br>dlss(53) &#47;&#47; &quot;110101&quot;<br><br>dlss(53) == 53..toString(2) &#47;&#47; true","like_count":0},{"had_liked":false,"id":166604,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1577517607,"is_pvip":false,"replies":[{"id":"65011","content":"很好的总结和心得","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1577839999,"ip_address":"","comment_id":166604,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577517607","product_id":100021201,"comment_content":"今天的学习笔记——<br>带着问题学习<br>1、什么是二进制，什么是十进制？<br>2、二进制和十进制之间如何相互转换？<br>3、如何使用你所熟悉的语言来实现二进制和十进制之间的相互转换？<br>4、为什么计算机用的是二进制而不是十进制？<br>5、说说你所了解的左移位，举个例子试一试，以及右移位<br>6、使用你所熟悉的语言实现53的左移和右移一位！算出结果<br>7，说说你所知道的逻辑操作都有哪些？各自有什么特点？<br><br>以上是这节的问题，我的学习方式一般是将问题归纳，今天搞懂，明天在抽时间来看看是否还做得出来！如果做得出来，说明熟悉了，后天再试试，如果可以，说明掌握了！否则就是不掌握！写再多笔记都没用！","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479554,"discussion_content":"很好的总结和心得","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577839999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166603,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1577517200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577517200","product_id":100021201,"comment_content":"课后习题——<br>Java代码实现<br>public static void method1(int n) {<br>        int sum;<br>        String result = &quot;&quot;;<br>        for (int i = n; i &gt;= 1; i = i &#47; 2) {<br>            if (i % 2 == 0) {<br>                sum = 0;<br>            } else {<br>                sum = 1;<br>            }<br>            result = sum + result;<br>        }<br>        System.out.println(&quot;最终的结果是：&quot; + result);<br>    }","like_count":0},{"had_liked":false,"id":164298,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1576928594,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1576928594","product_id":100021201,"comment_content":"之前看过《编码的奥秘》和《深入理解计算机》，所以对二进制还是有一些了解的，但是编码实现这一部分的确是自己的弱项。<br><br>如果不使用语言自带的类，比如 Java 里面的 BigInteger，那么估计也就只有手工来转换了，按照除二取余的办法，然后还需要处理正负数的问题。<br><br>在留言里面看到不少同学使用位操作实现了十进制和二进制的转换。<br><br>验证了一些留言里面的代码，发现很多没有解决负数转二进制的问题，话说负数转二进制的方式我现在也有些模糊了。<br><br>另外发现文中示例 BigInteger 将 -53 转为二进制的时候，结果为：-110101，也并没有采用补码表示。","like_count":0},{"had_liked":false,"id":159887,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1575817461,"is_pvip":false,"replies":[{"id":"61301","content":"看你做了一系列很好的总结，坚持就会有收获","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1576017293,"ip_address":"","comment_id":159887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575817461","product_id":100021201,"comment_content":"在 C 或 C++ 语言中，逻辑右移和算数右移共享同一个运算符 &gt;&gt;。那么，编译器是如何决定使用逻辑右移还是算数右移呢？答案是，取决于运算数的类型。如果运算数类型是 unsigned，则采用逻辑右移；而是 signed，则采用算数右移。如果你针对 unsigned 类型的数据使用算数右移，或者针对 signed 类型的数据使用逻辑右移，那么你首先需要进行类型的转换。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477198,"discussion_content":"看你做了一系列很好的总结，坚持就会有收获","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576017293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158664,"user_name":"zerobg","can_delete":false,"product_type":"c1","uid":1342548,"ip_address":"","ucode":"A2A090B4CB24B7","user_header":"https://static001.geekbang.org/account/avatar/00/14/7c/54/704832e7.jpg","comment_is_top":false,"comment_ctime":1575429431,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575429431","product_id":100021201,"comment_content":"  public static String f1(int origin) {<br><br>        StringBuilder str = new StringBuilder();<br>        String bin = &quot;&quot;;<br>        if (origin &gt;= 0) {<br>            while (origin != 0) {<br>                int remainder = origin % 2;<br>                str.append(remainder);<br>                origin = origin &gt;&gt; 1;<br>            }<br>            bin = str.reverse().toString();<br>        } else {<br>            origin = -origin;<br>            int max = Integer.MAX_VALUE;<br>            origin =(origin ^ max )+ 1;<br>            if (origin &gt;= 0) {<br>                while (origin != 0) {<br>                    int remainder = origin % 2;<br>                    str.append(remainder);<br>                    origin = origin &gt;&gt; 1;<br>                }<br>                &#47;&#47;符号位补1<br>                str.append(&quot;1&quot;);<br>                bin = str.reverse().toString();<br>            }<br>        }<br>        return bin;<br>    }","like_count":0},{"had_liked":false,"id":157839,"user_name":"teddytyy","can_delete":false,"product_type":"c1","uid":1268738,"ip_address":"","ucode":"E1569D81A4154E","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/02/e7af1750.jpg","comment_is_top":false,"comment_ctime":1575268676,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575268676","product_id":100021201,"comment_content":"for (int i = 0; i &lt; 32; i++) {<br>    binary[i] = number&amp;(1&lt;&lt;31-i);<br>    binary[i] = binary[i] &gt;&gt; 31-i;<br>    binary[i] = (binary[i] == 0)? &#39;0&#39;:&#39;1&#39;;<br>}","like_count":0},{"had_liked":false,"id":145770,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1653332,"ip_address":"","ucode":"E3F15FB8576626","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/54/72402617.jpg","comment_is_top":false,"comment_ctime":1572362896,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572362896","product_id":100021201,"comment_content":"元状态只有正负吗？","like_count":0},{"had_liked":false,"id":145767,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1653332,"ip_address":"","ucode":"E3F15FB8576626","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/54/72402617.jpg","comment_is_top":false,"comment_ctime":1572362521,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1572362521","product_id":100021201,"comment_content":"量子计算机有叠加态，那就是三进制了啰","like_count":0},{"had_liked":false,"id":145766,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1653332,"ip_address":"","ucode":"E3F15FB8576626","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/54/72402617.jpg","comment_is_top":false,"comment_ctime":1572362388,"is_pvip":true,"replies":[{"id":"56576","content":"是的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1572545729,"ip_address":"","comment_id":145766,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572362388","product_id":100021201,"comment_content":"十进制只是因为我们的手有10根手指而已","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472570,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572545729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144969,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1572144466,"is_pvip":false,"replies":[{"id":"56121","content":"在常见的编程语言中， 这两者都会有所区别，例如在Java中数学的幂运算使用Matho.pow()","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1572282843,"ip_address":"","comment_id":144969,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572144466","product_id":100021201,"comment_content":"老师，幂运算和次方运算，以及异或都是^表示，怎么区分呀？<br>","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472192,"discussion_content":"在常见的编程语言中， 这两者都会有所区别，例如在Java中数学的幂运算使用Matho.pow()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572282843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140880,"user_name":"owllwo","can_delete":false,"product_type":"c1","uid":1135898,"ip_address":"","ucode":"EFD941354DDF20","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/1a/7745d46c.jpg","comment_is_top":false,"comment_ctime":1571066493,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571066493","product_id":100021201,"comment_content":"不会java 有点晕晕的","like_count":0},{"had_liked":false,"id":138893,"user_name":"Yang","can_delete":false,"product_type":"c1","uid":1186879,"ip_address":"","ucode":"6335082702CF34","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/3f/eabd0cb1.jpg","comment_is_top":false,"comment_ctime":1570501258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570501258","product_id":100021201,"comment_content":"通过按位与可以提取到固定位置的数，然后通过移位，则可以按位提取所有数字。","like_count":0},{"had_liked":false,"id":133957,"user_name":"芝草晟林💦","can_delete":false,"product_type":"c1","uid":1377608,"ip_address":"","ucode":"4C66F0ABA446C8","user_header":"https://static001.geekbang.org/account/avatar/00/15/05/48/a62045cb.jpg","comment_is_top":false,"comment_ctime":1568706770,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568706770","product_id":100021201,"comment_content":"只有我一个做前端的来这里学这个课程吗 O__O &quot;…","like_count":0,"discussions":[{"author":{"id":1156074,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","nickname":"HoSalt","note":"","ucode":"610B03E2A002D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216974,"discussion_content":"捞捞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585493934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122712,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1565497287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565497287","product_id":100021201,"comment_content":"思考题：利用移位操作和位的或操作，重写了老师例子中的二、十进制转换函数，两个方法都没有用BigInteger类，其中二进制转十进制用了权重相加进行转换，但程序中没有考虑符号位。<br>源代码如下：<br><br>public class NumberTransformation {<br>\t<br>\tpublic static String decimalToBinary(int decimalSource){<br>\t\t<br>\t\tif(decimalSource == 0) return &quot;0&quot;;<br>\t\t<br>\t\tStringBuffer result = new StringBuffer();<br>\t\tint tempSource = decimalSource;<br><br>\t\twhile(tempSource &gt;0){<br>\t\t\tresult.append((tempSource &amp; (int)1) &gt; 0  ? &quot;1&quot; : &quot;0&quot;);<br>\t\t\ttempSource &gt;&gt;&gt;= 1;<br>\t\t}<br><br>\t\treturn result.reverse().toString();<br>\t}<br>\t<br>\tpublic static int binaryToDecimal(String binarySource){<br>\t\t<br>\t\tint result = 0;<br>\t\tString tempSource = binarySource;<br>\t\tfor(int i = 0; i &lt; tempSource.length(); i ++){<br>\t\t\tresult = result * 2 + (tempSource.charAt(i) == &#39;0&#39; ? 0 : 1);  <br>\t\t}<br>\t\treturn result;<br>\t}<br><br>\tpublic static void main(String[] args) {<br>\t\tint a = 53;<br>\t\tString b = &quot;110101&quot;;<br>\t\tSystem.out.println(String.format(&quot; 数字 %d 的二进制是 %s&quot;, a, NumberTransformation.decimalToBinary(a))); &#47;&#47; 获取十进制数 53 的二进制数<br>\t\tSystem.out.println(String.format(&quot; 数字 %s 的十进制是 %d&quot;, b, NumberTransformation.binaryToDecimal(b))); &#47;&#47; 获取二进制数 110101 的十进制数<br>\t}<br>}<br>","like_count":0},{"had_liked":false,"id":119391,"user_name":"Ray","can_delete":false,"product_type":"c1","uid":1604089,"ip_address":"","ucode":"3A66800D8E35D6","user_header":"https://static001.geekbang.org/account/avatar/00/18/79/f9/3cd59b29.jpg","comment_is_top":false,"comment_ctime":1564577253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564577253","product_id":100021201,"comment_content":"拿到题目没有思路怎么办啊 毫无头绪","like_count":0},{"had_liked":false,"id":119083,"user_name":"1","can_delete":false,"product_type":"c1","uid":1617502,"ip_address":"","ucode":"FDCEEFE86DC661","user_header":"https://static001.geekbang.org/account/avatar/00/18/ae/5e/f23f49e4.jpg","comment_is_top":false,"comment_ctime":1564500271,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564500271","product_id":100021201,"comment_content":"# python解法 = = 嘻嘻<br>def intToBinary(i):<br>    res = []<br>    res.append(int(i%2))<br>    i = i &gt;&gt; 1<br>    if i!=0:<br>        return res + intToBinary(i)<br>    return res<br>print(list(reversed(intToBinary(256))))<br>结果：[1, 0, 0, 0, 0, 0, 0, 0, 0]","like_count":0},{"had_liked":false,"id":118972,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1564476713,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1564476713","product_id":100021201,"comment_content":"<br>    逻辑右移:所有数字都右移,然后左补0 . <br>    逻辑左移:所有数字都左移, 右补0<br>    <br>    算术右移:算术右移需要考虑符号位，右移一位，若符号位为1，就在左边补1,；否则，就补0。<br>    算术左移:所有数字都左移, 右补0(正数可能变成为负数)","like_count":0},{"had_liked":false,"id":110913,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1562391409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562391409","product_id":100021201,"comment_content":"十进制转化成二进制，就是不断乘2先找到最高位对应的二进制,最高位肯定是1.然后就减去这个数再用类似的方法找下一位。<br><br>二进制转十进制，就是把每一位乘以对应的2的指数，可以用一个循环处理。","like_count":0},{"had_liked":false,"id":108262,"user_name":"零极限","can_delete":false,"product_type":"c1","uid":1260579,"ip_address":"","ucode":"45F437CD69A47F","user_header":"https://static001.geekbang.org/account/avatar/00/13/3c/23/10f99c54.jpg","comment_is_top":false,"comment_ctime":1561707065,"is_pvip":false,"replies":[{"id":"39276","content":"移位操作主要是用于数字翻倍或者减半，例如迭代法中的二分法","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1561767219,"ip_address":"","comment_id":108262,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561707065","product_id":100021201,"comment_content":"老师您好，二进制移位在编程中有哪些具体的应用","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455890,"discussion_content":"移位操作主要是用于数字翻倍或者减半，例如迭代法中的二分法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561767219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103983,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1560582395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560582395","product_id":100021201,"comment_content":"左移加0翻倍，右移舍尾取整","like_count":0},{"had_liked":false,"id":103593,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1560475667,"is_pvip":false,"replies":[{"id":"37556","content":"后面加餐一中进行了补充说明","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1560528709,"ip_address":"","comment_id":103593,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560475667","product_id":100021201,"comment_content":"为什么要反码和补码","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453934,"discussion_content":"后面加餐一中进行了补充说明","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560528709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103405,"user_name":"我家门前有只猪","can_delete":false,"product_type":"c1","uid":1488035,"ip_address":"","ucode":"F8CF618CF4681E","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/a3/a159ca86.jpg","comment_is_top":false,"comment_ctime":1560429480,"is_pvip":false,"replies":[{"id":"37447","content":"是这样，右移的时候，我们需要考虑高位补什么，是补符号位还是补0？可是，在左移的时候，我们要考虑地位补什么，由于低位不是符号位，所以只可能补0。你所说的情况是另一个问题，那就是“溢出”。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1560443889,"ip_address":"","comment_id":103405,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560429480","product_id":100021201,"comment_content":"老师请问一下 左移的时候为什么不考虑有没有符号  本来符号位是0，左移之后符号位有可能变成1啊","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453863,"discussion_content":"是这样，右移的时候，我们需要考虑高位补什么，是补符号位还是补0？可是，在左移的时候，我们要考虑地位补什么，由于低位不是符号位，所以只可能补0。你所说的情况是另一个问题，那就是“溢出”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560443889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103156,"user_name":"刘清斌","can_delete":false,"product_type":"c1","uid":1123103,"ip_address":"","ucode":"775B053AF87B53","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/1f/6452b2e8.jpg","comment_is_top":false,"comment_ctime":1560388729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560388729","product_id":100021201,"comment_content":"思考题：这个数与1做与运算，得到最低位，然后再做逻辑右移。","like_count":0},{"had_liked":false,"id":102081,"user_name":"花儿与少年","can_delete":false,"product_type":"c1","uid":1046304,"ip_address":"","ucode":"E2D685737E4F1B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/20/e2dfa9c2.jpg","comment_is_top":false,"comment_ctime":1560130233,"is_pvip":false,"replies":[{"id":"36892","content":"如果是有符号位的数据类型，这取决于是算术右移还是逻辑右移","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1560184748,"ip_address":"","comment_id":102081,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560130233","product_id":100021201,"comment_content":"负数右移位时 不是带着符号位一起右移，右边溢出的部分舍弃就行吗","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453250,"discussion_content":"如果是有符号位的数据类型，这取决于是算术右移还是逻辑右移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560184748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98109,"user_name":":(){ :|: };:","can_delete":false,"product_type":"c1","uid":1314938,"ip_address":"","ucode":"3FB8D1ABA060AD","user_header":"https://static001.geekbang.org/account/avatar/00/14/10/7a/b15e6572.jpg","comment_is_top":false,"comment_ctime":1558917047,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558917047","product_id":100021201,"comment_content":"www.p1ayground.online 我写了一篇博客，也关于数在计算机中如何表示。 不知道理解的对不对～ ","like_count":0},{"had_liked":false,"id":96869,"user_name":"yyprime","can_delete":false,"product_type":"c1","uid":1543753,"ip_address":"","ucode":"694C94C2D52DC1","user_header":"https://static001.geekbang.org/account/avatar/00/17/8e/49/edd3d7a4.jpg","comment_is_top":false,"comment_ctime":1558525915,"is_pvip":false,"replies":[{"id":"34659","content":"对的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1558543089,"ip_address":"","comment_id":96869,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558525915","product_id":100021201,"comment_content":"老师，负数左移后，符号位是不是不变，就是为1啊","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451041,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558543089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96793,"user_name":"绘","can_delete":false,"product_type":"c1","uid":1543003,"ip_address":"","ucode":"1128AC61E9DB74","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/5b/bf32920c.jpg","comment_is_top":false,"comment_ctime":1558507762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558507762","product_id":100021201,"comment_content":"int a = -64;<br>System.out.print(a&gt;&gt;&gt;1);<br>----------------------<br>运行结果：2147483616<br>java，求解，jdk7","like_count":0},{"had_liked":false,"id":94168,"user_name":"naku","can_delete":false,"product_type":"c1","uid":1528610,"ip_address":"","ucode":"B49EF5B5B38400","user_header":"https://static001.geekbang.org/account/avatar/00/17/53/22/cce9a2e5.jpg","comment_is_top":false,"comment_ctime":1557736378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557736378","product_id":100021201,"comment_content":"算数右移和逻辑右移也可以理解成有符号右移和无符号右移吧。<br>学完这篇文章后的收获：<br>1、二进制的基本操作是与或非， 本来只会用除k取余法进行进制转换， 有了二进制的基本操作，可以完成任何数制到二进制的转换。  但是计算机中的二进制数是补码， 转为反码需要减-， 转为源码呢？<br>重点来了， 如果是32位有符号的那么与0+31位的1相异或就是取反。<br>2、作业：人生苦短，所以用python了<br>num = -53  <br>l = []<br>while num and num != -1:  #正数不断右移最终结果是0， 负数不断右移的最终结果是-1<br>    l.append(str(num &amp; 1))<br>    num = num &gt;&gt; 1<br>print(&#39;&#39;.join(reversed(l)))<br>","like_count":0},{"had_liked":false,"id":94009,"user_name":"崔津铭","can_delete":false,"product_type":"c1","uid":1086216,"ip_address":"","ucode":"D4111B08CEB8A6","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/08/9d22a187.jpg","comment_is_top":false,"comment_ctime":1557706327,"is_pvip":false,"replies":[{"id":"33695","content":"很好的补充👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1557766024,"ip_address":"","comment_id":94009,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557706327","product_id":100021201,"comment_content":"windows系统的很多底层API都是用位来表示属性的，比如：窗体样式属性","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449868,"discussion_content":"很好的补充👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557766024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93749,"user_name":"ventsea","can_delete":false,"product_type":"c1","uid":1338414,"ip_address":"","ucode":"629F64F0F4BA7A","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/2e/5365fbec.jpg","comment_is_top":false,"comment_ctime":1557578853,"is_pvip":false,"replies":[{"id":"33474","content":"这个是针对负数，补1。如果是-2算术右移就补1，获得-1的补码","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1557589723,"ip_address":"","comment_id":93749,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557578853","product_id":100021201,"comment_content":"算术右移时保持符号位不变，除符号位之外的右移一位并补符号位 1。补的 1 仍然在符号位之后。老师，我还是不太懂，将一个十进制等于2的二进制算术右移，也是补1？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449760,"discussion_content":"这个是针对负数，补1。如果是-2算术右移就补1，获得-1的补码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557589723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89234,"user_name":"vivi","can_delete":false,"product_type":"c1","uid":1357983,"ip_address":"","ucode":"360A81D2003C99","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/9f/c64f0896.jpg","comment_is_top":false,"comment_ctime":1556113376,"is_pvip":false,"replies":[{"id":"31979","content":"确实在平时编程很少有用到","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1556129273,"ip_address":"","comment_id":89234,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556113376","product_id":100021201,"comment_content":"请问老师逻辑右移使用场景有哪些呢？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448064,"discussion_content":"确实在平时编程很少有用到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556129273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87602,"user_name":"Eco","can_delete":false,"product_type":"c1","uid":1373230,"ip_address":"","ucode":"5459B494753183","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/x86UN2kFbJGGwiaw7yeVtyaf05y5eZmdOciaAF09WEBRVicbPGsej1b62UAH3icjeJqvibVc6aqB0EuFwDicicKKcF47w/132","comment_is_top":false,"comment_ctime":1555640046,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555640046","product_id":100021201,"comment_content":"正数十进制÷2的余数其实就是该数二进制的最低位，因此通过和1作&amp;操作即可得出该余数，最后再结合逻辑右移便能得出该数的二进制。","like_count":0},{"had_liked":false,"id":87026,"user_name":"~记得微笑∩﹏∩","can_delete":false,"product_type":"c1","uid":1216715,"ip_address":"","ucode":"EBC383F0FB54BE","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/cb/72063354.jpg","comment_is_top":false,"comment_ctime":1555498510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555498510","product_id":100021201,"comment_content":"package one_二进制;<br><br>import java.util.Scanner;<br><br>&#47;*<br> * 如果不是用Java语言自带的BigInteger类，怎么实现十进制到二进制的转化（提示：可使用二进制的移位和按位逻辑操作来实现）<br> *&#47;<br>public class Four_思考题 {<br><br>\t public static void main(String[] args) {<br>\t        Scanner sc = new Scanner(System.in);<br>\t        <br>\t        System.out.println(&quot;请输入一个十进制数：&quot;);<br>\t        int x = sc.nextInt();\t\t\t\t<br>\t        int num = 0;<br>\t        <br>\t        for (int i = 31; i &gt;= 0; i--) {<br>\t        \tif (x &gt;= Math.pow(2, i)) {<br>\t        \t\tnum = i;\t\t\t\t\t<br>\t        \t\tbreak;<br>\t        \t}<br>\t        }<br>\t        <br>\t        String bi = &quot;&quot;;<br>\t        while(num != 0) {<br>\t        \tbi += (x &gt;&gt; num) &amp; 1;<br>\t        \tnum--;<br>\t        }<br>\t        bi = bi + (x &amp; 1);<br>\t        System.out.println(bi);<br>\t }<br>}<br>","like_count":0},{"had_liked":false,"id":85838,"user_name":"一颗大白菜","can_delete":false,"product_type":"c1","uid":1321226,"ip_address":"","ucode":"4A15D1CECD1853","user_header":"https://static001.geekbang.org/account/avatar/00/14/29/0a/0ba09c68.jpg","comment_is_top":false,"comment_ctime":1555254176,"is_pvip":false,"replies":[{"id":"30879","content":"确认了Python 3中没有这个操作。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1555259784,"ip_address":"","comment_id":85838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555254176","product_id":100021201,"comment_content":"Python 语言中使用 &gt;&gt;&gt; 表示 试了下python3报错","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446831,"discussion_content":"确认了Python 3中没有这个操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555259784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84943,"user_name":"何小明","can_delete":false,"product_type":"c1","uid":1284162,"ip_address":"","ucode":"6E544266EB00F9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/j73RKC9WPibn23aVSianxGWeG4uqbd9lEyb9UJIEhawKAwjLb2uW3HBFWgXYPXpjX7ahN30u9kDGmh7lBaribIaZA/132","comment_is_top":false,"comment_ctime":1554948312,"is_pvip":false,"replies":[{"id":"30587","content":"是的，有的时候也会启发我们设计一些大型的系统，提示效率。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1554998727,"ip_address":"","comment_id":84943,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554948312","product_id":100021201,"comment_content":"这些知识在嵌入式软件开发经常使用到的，在操作寄存器这些基础知识是必备的，虽然现在STM公司有很完善的官方库，但是如果想要更有效的开发，还是需要理解这些“位”操作的","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446504,"discussion_content":"是的，有的时候也会启发我们设计一些大型的系统，提示效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554998727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83841,"user_name":"游来游去的W","can_delete":false,"product_type":"c1","uid":1471174,"ip_address":"","ucode":"E3BDDE22F091FE","user_header":"https://static001.geekbang.org/account/avatar/00/16/72/c6/c010006d.jpg","comment_is_top":false,"comment_ctime":1554723185,"is_pvip":false,"replies":[{"id":"30296","content":"同时考虑了正负数👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1554740272,"ip_address":"","comment_id":83841,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554723185","product_id":100021201,"comment_content":"&#47;&#47;正负数运算都适用的一种方式<br>public class moveNumber {<br><br>\tpublic static void main(String[] args) {<br>\t\t&#47;&#47; TODO Auto-generated method stub<br>\t\tf(-9);<br>\t}<br>\t<br>\tpublic static void f(int number) {<br>\t\tStringBuilder sb = new StringBuilder();<br>\t\tint a =number;<br>\t\tint b;<br>\t\tfor(int i=31;i&gt;=0;i--)<br>\t\t{<br>\t\t\tb=a&amp;1;        &#47;&#47;b用于存储每次与1运算的结果<br>\t\t\tsb.append(b); &#47;&#47;将结果放入容器sb中<br>\t\t\ta=a&gt;&gt;1;       &#47;&#47;逻辑右移操作（就计算结果而言，逻辑右移与算数右移的结果是一样的）<br>\t\t}<br>\t\tSystem.out.println(sb.reverse().toString()); &#47;&#47;reverse操作<br>\t}<br>}","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446161,"discussion_content":"同时考虑了正负数👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554740272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82329,"user_name":"free zyq","can_delete":false,"product_type":"c1","uid":1141823,"ip_address":"","ucode":"F1414E56313CEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/3f/718038ac.jpg","comment_is_top":false,"comment_ctime":1554186224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554186224","product_id":100021201,"comment_content":"想起了编码这本书，也讲了最基础的逻辑门，但是对应的电路看了一脸懵逼","like_count":0},{"had_liked":false,"id":81025,"user_name":"母鸡啊","can_delete":false,"product_type":"c1","uid":1368194,"ip_address":"","ucode":"7C7F0C8C59F0B0","user_header":"https://static001.geekbang.org/account/avatar/00/14/e0/82/5eb76481.jpg","comment_is_top":false,"comment_ctime":1553779151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553779151","product_id":100021201,"comment_content":"作者大大讲得很清晰明了，nice!","like_count":0},{"had_liked":false,"id":80164,"user_name":"Jing","can_delete":false,"product_type":"c1","uid":1474491,"ip_address":"","ucode":"690067C1ACA141","user_header":"https://static001.geekbang.org/account/avatar/00/16/7f/bb/794dd610.jpg","comment_is_top":false,"comment_ctime":1553611747,"is_pvip":false,"replies":[{"id":"29216","content":"代码很简洁👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1553616363,"ip_address":"","comment_id":80164,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553611747","product_id":100021201,"comment_content":"static string ConvertTo2Base(int num)<br>{<br>StringBuilder s = new StringBuilder();<br>int r;<br>do<br>{<br>r = num &amp; 1;<br>num = num &gt;&gt; 1;<br>s.Insert(0,r);<br>}<br>while(num != 0 &amp;&amp; s.Length &lt; 32);<br>return s.ToString();<br>}<br>&#47;&#47;这是C#版本和Java差不多 测了一下正数发负数 最大值最小值都正常  但是负数的处理通过位数长度来限制感觉不太好","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444768,"discussion_content":"代码很简洁👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553616363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78805,"user_name":"立冬","can_delete":false,"product_type":"c1","uid":1467313,"ip_address":"","ucode":"287FA88D933FD5","user_header":"https://static001.geekbang.org/account/avatar/00/16/63/b1/a6103703.jpg","comment_is_top":false,"comment_ctime":1553243042,"is_pvip":false,"replies":[{"id":"28692","content":"你是指有符号位数的左移还是右移？","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1553274724,"ip_address":"","comment_id":78805,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553243042","product_id":100021201,"comment_content":"符号移位那正负怎么办","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444235,"discussion_content":"你是指有符号位数的左移还是右移？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553274724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78334,"user_name":"苗","can_delete":false,"product_type":"c1","uid":1088710,"ip_address":"","ucode":"5ECCC6C855E541","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/c6/05a6798f.jpg","comment_is_top":false,"comment_ctime":1553131482,"is_pvip":false,"replies":[{"id":"28606","content":"仅从这一段话来看，应该是和Java中不同数据类型的长度有关，转成int型应该是为了避免溢出","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1553190600,"ip_address":"","comment_id":78334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553131482","product_id":100021201,"comment_content":"java编程思想中有一段话一直没有理解，希望老师可以解释一下。“If you shift a char,byte,or short, it will be promoted to int before the shift takes place, and the result will be an int. Only the filve low-order bits of the right-hand side will be used.This prevents you from shifting more than the number of bits in an int.”","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444052,"discussion_content":"仅从这一段话来看，应该是和Java中不同数据类型的长度有关，转成int型应该是为了避免溢出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553190600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75111,"user_name":"ABin","can_delete":false,"product_type":"c1","uid":1438727,"ip_address":"","ucode":"F452D3399176E7","user_header":"https://static001.geekbang.org/account/avatar/00/15/f4/07/fb6cf085.jpg","comment_is_top":false,"comment_ctime":1552356031,"is_pvip":false,"replies":[{"id":"27549","content":"可以使用语言自带的库函数，也可以自己尝试位操作来解决","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1552408419,"ip_address":"","comment_id":75111,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552356031","product_id":100021201,"comment_content":"十进制转二进制 应该怎么转呢?","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442799,"discussion_content":"可以使用语言自带的库函数，也可以自己尝试位操作来解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552408419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72711,"user_name":"胖蜥蜴","can_delete":false,"product_type":"c1","uid":1349830,"ip_address":"","ucode":"6A450F1181A9A5","user_header":"https://static001.geekbang.org/account/avatar/00/14/98/c6/7389f01e.jpg","comment_is_top":false,"comment_ctime":1551700581,"is_pvip":false,"replies":[{"id":"26365","content":"对，也是一种方法","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1551720087,"ip_address":"","comment_id":72711,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551700581","product_id":100021201,"comment_content":"mysql分库分表一般也是用主键id取余","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441701,"discussion_content":"对，也是一种方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551720087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71017,"user_name":"WANG","can_delete":false,"product_type":"c1","uid":1014839,"ip_address":"","ucode":"40795CDD7734F8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/37/a747c9f2.jpg","comment_is_top":false,"comment_ctime":1551245372,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1551245372","product_id":100021201,"comment_content":"# coding:utf8<br># python版<br>num = &#39;53&#39;<br>print(&quot;十进制转二进制&quot;, bin(int(num, 10)))<br><br><br>num = &#39;110101&#39;<br>print(&quot;二进制转十进制&quot;, int(num, 2))<br><br><br>num = 110101<br>print(&quot;数字 {} 的二进制向左移 {} 位是 {}&quot;.format(num, 1, bin(int(str(num &lt;&lt; 1), 10))))<br>print(&quot;数字 {} 的二进制向右移 {} 位是 {}&quot;.format(num, 1, bin(int(str(num &gt;&gt; 1), 10))))<br><br><br>print(&quot;将数字{} 和数字{} 按位 于&amp; 计算的计算结果是: {}&quot;.format(3, 5, 3&amp;5))<br>print(&quot;将数字{} 和数字{} 按位 并| 计算的计算结果是: {}&quot;.format(3, 5, 3|5))<br>print(&quot;将数字{} 和数字{} 按位 异或^ 计算的计算结果是: {}&quot;.format(3, 5, 3^5))<br><br>输出:<br>十进制转二进制 0b110101<br>二进制转十进制 53<br>数字 110101 的二进制向左移 1 位是 0b110101110000101010<br>数字 110101 的二进制向右移 1 位是 0b1101011100001010<br>将数字3 和数字5 按位 于&amp; 计算的计算结果是: 1<br>将数字3 和数字5 按位 并| 计算的计算结果是: 7<br>将数字3 和数字5 按位 异或^ 计算的计算结果是: 6<br><br>","like_count":0},{"had_liked":false,"id":70134,"user_name":"depp","can_delete":false,"product_type":"c1","uid":1051975,"ip_address":"","ucode":"6EA98DE99CFCCE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIqWaVic6yGdicbtBFeAOuX28nRUyhaJrv5Tq5mrm4zM2DBOIZnO68bU4aYaoQxervC8F8kSxLdGGDg/132","comment_is_top":false,"comment_ctime":1551007456,"is_pvip":false,"replies":[{"id":"25014","content":"考虑到了补码，👌","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1551035018,"ip_address":"","comment_id":70134,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551007456","product_id":100021201,"comment_content":"# encoding: utf8<br><br>def decimal2binary(num):<br>\tbits = []<br><br>\twhile num &gt; 0:<br>\t\tbits.append(str(num &amp; 1))<br>\t\tnum = num &gt;&gt; 1<br>\t<br>\tbits.reverse()<br><br>\tif num &lt; 0:<br>\t\tabs_num = -num<br><br>\t\twhile abs_num &gt; 0:<br>\t\t\tbits.append(str(abs_num &amp; 1))<br>\t\t\tabs_num = abs_num &gt;&gt; 1<br>\t\t<br>\t\tbits.reverse()<br><br>\t\tfor i in range(len(bits)):<br>\t\t\tif bits[i] == &#39;1&#39;:<br>\t\t\t\tbits[i] = &#39;0&#39;<br>\t\t\telse: <br>\t\t\t\tbits[i] = &#39;1&#39;<br><br>\t\tprint(bits)<br>\t\tbits_max = len(bits) - 1<br><br>\t\tfor inx in range(len(bits)):<br>\t\t\tif bits[bits_max - inx] == &#39;1&#39;:<br>\t\t\t\tbits[bits_max - inx] = &#39;0&#39;<br>\t\t\t\tcontinue<br>\t\t\telse:<br>\t\t\t\tbits[bits_max - inx] = &#39;1&#39;<br>\t\t\t\tbreak<br>\t\t<br>\t\tbits.insert(0, &#39;1&#39;)<br><br>\treturn &#39;&#39;.join(bits)<br> \t<br>print(decimal2binary(-10))<br><br>这是python版本作业 请老师指正","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440456,"discussion_content":"考虑到了补码，👌","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551035018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70058,"user_name":"qingbusheng","can_delete":false,"product_type":"c1","uid":1053437,"ip_address":"","ucode":"40B93065442A93","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/fd/b94cd881.jpg","comment_is_top":false,"comment_ctime":1550979117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550979117","product_id":100021201,"comment_content":"二进制转10进制，可以采用8421码。","like_count":0},{"had_liked":false,"id":61911,"user_name":"快乐有家","can_delete":false,"product_type":"c1","uid":1387265,"ip_address":"","ucode":"983AFD03B08A1F","user_header":"https://static001.geekbang.org/account/avatar/00/15/2b/01/1dd0bb9b.jpg","comment_is_top":false,"comment_ctime":1547854660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547854660","product_id":100021201,"comment_content":"内容感觉太少了，特别是实力应用场景！比如我前两天遇到的一个需求:需要用一个数字来存储两个数字？实现方式就是通过高低位来分别存储。其实看二进制这种文章，我感觉最需要的还是实际场景。","like_count":0},{"had_liked":false,"id":61791,"user_name":"秋刀鱼","can_delete":false,"product_type":"c1","uid":1339368,"ip_address":"","ucode":"8F7ADE2474DDE5","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/e8/3d3b0b82.jpg","comment_is_top":false,"comment_ctime":1547801681,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547801681","product_id":100021201,"comment_content":"老师笔记清晰，大赞！","like_count":0},{"had_liked":false,"id":56156,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1033203,"ip_address":"","ucode":"9812E46AC591F9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/f3/2bce39ce.jpg","comment_is_top":false,"comment_ctime":1546398307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546398307","product_id":100021201,"comment_content":"对2取余 确认余数是1还是0<br>对2取整 重复操作<br>StringBuilder sb = new StringBuilder();<br>while(decimal!=0) {<br>\tsb.append(((decimal%2)&amp;1));<br>\tdecimal = decimal&gt;&gt;1;<br>}<br>sb.reverse().toString()","like_count":0},{"had_liked":false,"id":55608,"user_name":"虢國技醬","can_delete":false,"product_type":"c1","uid":1056807,"ip_address":"","ucode":"5A192262AA037E","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/27/a6932fbe.jpg","comment_is_top":false,"comment_ctime":1546242162,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546242162","product_id":100021201,"comment_content":"打卡👊","like_count":0},{"had_liked":false,"id":55597,"user_name":"ω","can_delete":false,"product_type":"c1","uid":1340302,"ip_address":"","ucode":"A39F1D1449AA1B","user_header":"https://static001.geekbang.org/account/avatar/00/14/73/8e/b718a642.jpg","comment_is_top":false,"comment_ctime":1546239852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546239852","product_id":100021201,"comment_content":"越接近底层的语言，越方便进行转换，现在的语言封装得很好，所以已经没有多简单的方法进行转换了。其实最简单的转换是用位读取与位移进行","like_count":0},{"had_liked":false,"id":54482,"user_name":"microsnow","can_delete":false,"product_type":"c1","uid":1121444,"ip_address":"","ucode":"3C24EE8D64E5E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/a4/3a7a0213.jpg","comment_is_top":false,"comment_ctime":1545879583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545879583","product_id":100021201,"comment_content":"&#47;**<br> * 十进制转二进制[PHP版]<br> * @param int $dec_num<br> *&#47;<br>function DecToBin($dec_num)<br>{<br>\t$bin_str = &#39;&#39;;<br>\t$tmp_num = abs($dec_num);<br>\t$bin_arr = [];<br>\twhile($tmp_num) {<br>\t\t$bin_str .= $tmp_num&amp;0b000001;<br>\t\t$tmp_num = $tmp_num &gt;&gt; 1;<br>\t}<br>\t$bin_str = strrev($bin_str);<br>\treturn $bin_str;<br>}","like_count":0},{"had_liked":false,"id":54393,"user_name":"大山的子孙","can_delete":false,"product_type":"c1","uid":1237702,"ip_address":"","ucode":"1CBEF005020119","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/c6/fe62045a.jpg","comment_is_top":false,"comment_ctime":1545840962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545840962","product_id":100021201,"comment_content":"模运算   以时钟为例子，13点可表示成1点","like_count":0},{"had_liked":false,"id":53585,"user_name":"指尖流逝","can_delete":false,"product_type":"c1","uid":1005381,"ip_address":"","ucode":"417009F674FAF1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/45/c418ea5c.jpg","comment_is_top":false,"comment_ctime":1545698270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545698270","product_id":100021201,"comment_content":"每天早上七点半到九点，配合《程序员的数学》三件套一起看。希望能坚持下去，(๑•̀ㅂ•́)و✧加油","like_count":0},{"had_liked":false,"id":52429,"user_name":"Conan","can_delete":false,"product_type":"c1","uid":1040974,"ip_address":"","ucode":"808968AB230CD1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/4e/ff3c3b57.jpg","comment_is_top":false,"comment_ctime":1545380470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545380470","product_id":100021201,"comment_content":"现在才知道右移分为逻辑右移和算术右移：）","like_count":0},{"had_liked":false,"id":50828,"user_name":"归零","can_delete":false,"product_type":"c1","uid":1103208,"ip_address":"","ucode":"C99B8E93009A46","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/68/2201b6b9.jpg","comment_is_top":false,"comment_ctime":1545051220,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1545051220","product_id":100021201,"comment_content":"敲了一遍代码，对二进制重新复习了一遍","like_count":0},{"had_liked":false,"id":50781,"user_name":"Neo_Zhang","can_delete":false,"product_type":"c1","uid":1175689,"ip_address":"","ucode":"92FFEFE7905AE9","user_header":"https://static001.geekbang.org/account/avatar/00/11/f0/89/25899406.jpg","comment_is_top":false,"comment_ctime":1545044455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545044455","product_id":100021201,"comment_content":"想起许多竞赛编程题的基础就是熟练编写各种进制转换程序","like_count":0},{"had_liked":false,"id":50583,"user_name":"LAMBO","can_delete":false,"product_type":"c1","uid":1214041,"ip_address":"","ucode":"10EDE0FC134FA8","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/59/e8f58a2a.jpg","comment_is_top":false,"comment_ctime":1545012342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545012342","product_id":100021201,"comment_content":"“与”：全为真，才为真（即：一有假，则为假）。<br>“或”：全为假，才为假（即：一有真，则为真）。<br>“异或”：异则真，同则假。","like_count":0},{"had_liked":false,"id":50538,"user_name":"NO.9","can_delete":false,"product_type":"c1","uid":1336970,"ip_address":"","ucode":"B92F14B493406F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/fUDCLLob6DFS8kZcMUfxOc4qQHeQfW4rIMK5Ty2u2AqLemcdhVRw7byx85HrVicSvy5AiabE0YGMj5gVt8ibgrusA/132","comment_is_top":false,"comment_ctime":1545008216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545008216","product_id":100021201,"comment_content":"哈哈，正在复习日本的软考，刚好都看过，不过看中文的讲解更亲切。","like_count":0},{"had_liked":false,"id":50489,"user_name":"戴草帽的长虫","can_delete":false,"product_type":"c1","uid":1341511,"ip_address":"","ucode":"A2D9BDD72D942F","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/47/38def7d3.jpg","comment_is_top":false,"comment_ctime":1544983081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544983081","product_id":100021201,"comment_content":"思考题：<br>&#47;**<br>     * @description 不使用BigInteger类，实现int类型的十进制转二进制<br>     * @param decimalSource 待转的十进制数<br>     * @return String 转为二进制的结果<br>     *&#47;<br>    public static String decimalToBinary01(int decimalSource){<br><br>        StringBuffer stringBuffer = new StringBuffer();<br>        &#47;&#47;转换为二进制<br>        for (int i = 31; i &gt;= 0; i--) {<br>            &#47;&#47;通过移位依次让高位的值移到低位，再于1相与，取得最后一位的值<br>            stringBuffer.append((decimalSource &gt;&gt;&gt; i) &amp; 1);<br>        }<br>        &#47;&#47;去掉前面的0<br>        String str = String.valueOf(stringBuffer).replaceAll(&quot;^(0+)&quot;,&quot;&quot;);<br>        return str;<br><br>    }","like_count":0},{"had_liked":false,"id":50260,"user_name":"卡卡","can_delete":false,"product_type":"c1","uid":1298798,"ip_address":"","ucode":"E85C439AF7E56F","user_header":"https://static001.geekbang.org/account/avatar/00/13/d1/6e/040a30d1.jpg","comment_is_top":false,"comment_ctime":1544935757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544935757","product_id":100021201,"comment_content":" private static String decimal2BinaryStr(int num) {<br>        boolean isNegative = false;<br>        if (num &lt; 0) {<br>            isNegative = true;<br>            num = num * -1;<br>        }<br>        if (num &lt; 2) {<br>            return &quot;0x&quot; + (isNegative ? &quot;-&quot; : &quot;&quot;) + num;<br>        }<br>        StringBuilder sb = new StringBuilder();<br>        List&lt;Integer&gt; xList = new ArrayList&lt;&gt;();<br>        do {<br>            &#47;&#47;由于一个整数跟 1 进行 逻辑与 操作，结果是 0【个位数是0】或者 1【个位数是1】。所以可以拿到这个数的个位数<br>            int x = num &amp; 1;<br>            xList.add(0, x);<br>        } while ((num = num &gt;&gt; 1) &gt; 0);<br><br>        for (Integer integer : xList) {<br>            sb.append(integer);<br>        }<br>        return &quot;0x&quot; + (isNegative ? &quot;-&quot; : &quot;&quot;) + sb.toString();<br>    }","like_count":0},{"had_liked":false,"id":50259,"user_name":"卡卡","can_delete":false,"product_type":"c1","uid":1298798,"ip_address":"","ucode":"E85C439AF7E56F","user_header":"https://static001.geekbang.org/account/avatar/00/13/d1/6e/040a30d1.jpg","comment_is_top":false,"comment_ctime":1544935637,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544935637","product_id":100021201,"comment_content":" private static String decimal2BinaryStr(int num) {<br>        boolean isNegative = false;<br>        if (num &lt; 0) {<br>            isNegative = true;<br>            num = num * -1;<br>        }<br>        if (num &lt; 2) {<br>            return &quot;0x&quot; + (isNegative ? &quot;-&quot; : &quot;&quot;) + num;<br>        }<br>        StringBuilder sb = new StringBuilder();<br>        List&lt;Integer&gt; xList = new ArrayList&lt;&gt;();<br>        do {<br>            &#47;&#47;由于一个整数跟 1 进行 逻辑与 操作，结果是 0【个位数是0】或者 1【个位数是1】。所以可以拿到这个数的个位数<br>            int x = num &amp; 1;<br>            xList.add(0, x);<br>        } while ((num = num &gt;&gt; 1) &gt; 0);<br><br>        for (Integer integer : xList) {<br>            sb.append(integer);<br>        }<br>        return &quot;0x&quot; + (isNegative ? &quot;-&quot; : &quot;&quot;) + sb.toString();<br>    }","like_count":0},{"had_liked":false,"id":50225,"user_name":"Fly55","can_delete":false,"product_type":"c1","uid":1251563,"ip_address":"","ucode":"FFA9D5C6EDD6F4","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/eb/fd0b4a1f.jpg","comment_is_top":false,"comment_ctime":1544928049,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1544928049","product_id":100021201,"comment_content":"计算机里存储的都是补码。","like_count":0},{"had_liked":false,"id":49978,"user_name":"野犬","can_delete":false,"product_type":"c1","uid":1347922,"ip_address":"","ucode":"308523588161A5","user_header":"https://static001.geekbang.org/account/avatar/00/14/91/52/1f5d793d.jpg","comment_is_top":false,"comment_ctime":1544805665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544805665","product_id":100021201,"comment_content":"哇哇哇！<br>这种利用移位和位运算操作实现十进制转二进制的操作第一次见诶！<br>我的想法就是不断对2取余，入栈，再出栈。","like_count":0},{"had_liked":false,"id":49330,"user_name":"metalmac.kyle","can_delete":false,"product_type":"c1","uid":1001832,"ip_address":"","ucode":"74795A8825FCAA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/68/bef5f7d3.jpg","comment_is_top":false,"comment_ctime":1544667131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544667131","product_id":100021201,"comment_content":"逻辑清晰，简洁明了，可见老师数学功底深你厚！很喜欢，又复习了一遍二进制，现实工作中面临最大的问题是如何快速在负数十六进制补码形式和十进制间进行手算呢？老记不清负数的规律，","like_count":0},{"had_liked":false,"id":48887,"user_name":"Maiza","can_delete":false,"product_type":"c1","uid":1007248,"ip_address":"","ucode":"D6911CDAC0D8C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/90/5f79859b.jpg","comment_is_top":false,"comment_ctime":1544575778,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544575778","product_id":100021201,"comment_content":"哇 还有学习笔记 不要太赞 ！","like_count":0},{"had_liked":false,"id":48818,"user_name":"xong","can_delete":false,"product_type":"c1","uid":1121055,"ip_address":"","ucode":"1F5D8274321893","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/1f/3dcf1980.jpg","comment_is_top":false,"comment_ctime":1544542804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544542804","product_id":100021201,"comment_content":"讲二进制，感到必须要讲 原码 反码 补码 等一些非常基础的知识，幸好大一时，带我的老师比较严格，也幸好刚毕业，还加入了这个专栏，又回忆起当时的点滴，期待老师的答疑篇～","like_count":0},{"had_liked":false,"id":48813,"user_name":"子悠","can_delete":false,"product_type":"c1","uid":1000383,"ip_address":"","ucode":"070BB09477E8A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/bf/9a982bc1.jpg","comment_is_top":false,"comment_ctime":1544541367,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1544541367","product_id":100021201,"comment_content":"最后的图片学习笔记不错","like_count":0},{"had_liked":false,"id":48613,"user_name":"送你一匹马","can_delete":false,"product_type":"c1","uid":1338420,"ip_address":"","ucode":"90423665D3463D","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/34/64c9a286.jpg","comment_is_top":false,"comment_ctime":1544496744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544496744","product_id":100021201,"comment_content":"写的很通俗很详细，非常有价值！","like_count":0},{"had_liked":false,"id":48481,"user_name":"少盐","can_delete":false,"product_type":"c1","uid":1305743,"ip_address":"","ucode":"BCC7E264B75702","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/8f/8299495a.jpg","comment_is_top":false,"comment_ctime":1544451243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544451243","product_id":100021201,"comment_content":"不会Java，python还行，用笔算会转换，程序写不出来，有空把Java基本语法学习下","like_count":0},{"had_liked":false,"id":48454,"user_name":"WRUI","can_delete":false,"product_type":"c1","uid":1338057,"ip_address":"","ucode":"26C6097646759E","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/c9/7a5a1524.jpg","comment_is_top":false,"comment_ctime":1544447493,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544447493","product_id":100021201,"comment_content":"BigInteger：不可变的任意精度整数","like_count":0},{"had_liked":false,"id":48441,"user_name":"syf","can_delete":false,"product_type":"c1","uid":1111580,"ip_address":"","ucode":"683EEF28204A6E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/1c/b67aa5f6.jpg","comment_is_top":false,"comment_ctime":1544445316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544445316","product_id":100021201,"comment_content":"数学基础太薄弱了，位运算到看完这篇文章才算明白，也可能是自己太菜，平时基本用不到。思考题也是倒推出来的，如果能被2除尽就取0，不能就取1，往右移一位。","like_count":0},{"had_liked":false,"id":48425,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1544441820,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544441820","product_id":100021201,"comment_content":"10&gt;&gt;3=1<br>（10&gt;&gt;2）&amp;1=0<br>（10&gt;&gt;1）&amp;1=1<br>10&amp;1=0","like_count":0},{"had_liked":false,"id":48423,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1094597,"ip_address":"","ucode":"1D15D3B64F2606","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","comment_is_top":false,"comment_ctime":1544441530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544441530","product_id":100021201,"comment_content":"十进制转二进制：<br><br>和2作与运算求相应的二进制位<br>右移1位<br><br>重复上述过程，并拼接每次求出来的位<br><br>","like_count":0},{"had_liked":false,"id":48416,"user_name":"hunter","can_delete":false,"product_type":"c1","uid":1338388,"ip_address":"","ucode":"22E4DDE3066539","user_header":"","comment_is_top":false,"comment_ctime":1544439680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544439680","product_id":100021201,"comment_content":"算术右移 与逻辑右移 没啥意义 这个本身就应该应该根据类型约束 是由符号 还是无符号","like_count":0},{"had_liked":false,"id":48410,"user_name":"总指挥","can_delete":false,"product_type":"c1","uid":1022702,"ip_address":"","ucode":"C33506F095DDEC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9a/ee/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1544437840,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544437840","product_id":100021201,"comment_content":"图文结合，不错","like_count":0},{"had_liked":false,"id":48334,"user_name":"loyt","can_delete":false,"product_type":"c1","uid":1130746,"ip_address":"","ucode":"721F4A6E95B644","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/fa/65ef3cb5.jpg","comment_is_top":false,"comment_ctime":1544423704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544423704","product_id":100021201,"comment_content":"打卡第一课","like_count":0},{"had_liked":false,"id":48269,"user_name":"只贪微凉","can_delete":false,"product_type":"c1","uid":1187921,"ip_address":"","ucode":"7FC7D6C2F6DE12","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/51/eaa0d576.jpg","comment_is_top":false,"comment_ctime":1544408158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544408158","product_id":100021201,"comment_content":"除2取整，余数排列下来就是2进制","like_count":0},{"had_liked":false,"id":48240,"user_name":"大叔爱学习","can_delete":false,"product_type":"c1","uid":1216608,"ip_address":"","ucode":"9BBC009A354D75","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/60/b8e3494d.jpg","comment_is_top":false,"comment_ctime":1544405461,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544405461","product_id":100021201,"comment_content":"左移没有符号位的顾虑","like_count":0},{"had_liked":false,"id":48235,"user_name":"Kaer","can_delete":false,"product_type":"c1","uid":1113558,"ip_address":"","ucode":"1BD233D3FAC2B1","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/d6/71e1cc29.jpg","comment_is_top":false,"comment_ctime":1544405116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544405116","product_id":100021201,"comment_content":"老师，右移会有除不尽的情况，是怎么取舍的，还有小数点的情况。能讲一讲吗","like_count":0},{"had_liked":false,"id":48232,"user_name":"栖枝","can_delete":false,"product_type":"c1","uid":1023930,"ip_address":"","ucode":"4E9A35439B615F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/ba/5a9cb72f.jpg","comment_is_top":false,"comment_ctime":1544404806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544404806","product_id":100021201,"comment_content":"10进制转换2进制 10进制除2取余，按取余的先后顺序倒序输出余数即可","like_count":0},{"had_liked":false,"id":48191,"user_name":"xzyeah","can_delete":false,"product_type":"c1","uid":1106882,"ip_address":"","ucode":"AEC6AA55A73D44","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/c2/7406eaf1.jpg","comment_is_top":false,"comment_ctime":1544400662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544400662","product_id":100021201,"comment_content":"讲解的特别简单易懂<br>关于10进制转2进制实现的想法<br>原理，移位运算，2进制右移(位数减去1)的位就是当前位的值，如010移动2位就是0，移动1位就是1<br>实现，根据数据类型长度循环递减做数值右移位操作","like_count":0},{"had_liked":false,"id":48173,"user_name":"Walson","can_delete":false,"product_type":"c1","uid":1325406,"ip_address":"","ucode":"5015368CAF8FD0","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/5e/0554e617.jpg","comment_is_top":false,"comment_ctime":1544380013,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1544380013","product_id":100021201,"comment_content":"简单易懂","like_count":0},{"had_liked":false,"id":48172,"user_name":"Walson","can_delete":false,"product_type":"c1","uid":1325406,"ip_address":"","ucode":"5015368CAF8FD0","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/5e/0554e617.jpg","comment_is_top":false,"comment_ctime":1544379990,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1544379990","product_id":100021201,"comment_content":"简单易懂","like_count":0}]}