{"id":17921,"title":"07 | 白话容器基础（三）：深入理解容器镜像","content":"<p>你好，我是张磊。我在今天这篇文章的最后，放置了一张Kubernetes的技能图谱，希望对你有帮助。</p>\n<p>在前两次的分享中，我讲解了Linux容器最基础的两种技术：Namespace和Cgroups。希望此时，你已经彻底理解了“容器的本质是一种特殊的进程”这个最重要的概念。</p>\n<p>而正如我前面所说的，Namespace的作用是“隔离”，它让应用进程只能看到该Namespace内的“世界”；而Cgroups的作用是“限制”，它给这个“世界”围上了一圈看不见的墙。这么一折腾，进程就真的被“装”在了一个与世隔绝的房间里，而这些房间就是PaaS项目赖以生存的应用“沙盒”。</p>\n<p>可是，还有一个问题不知道你有没有仔细思考过：这个房间四周虽然有了墙，但是如果容器进程低头一看地面，又是怎样一副景象呢？</p>\n<p>换句话说，<strong>容器里的进程看到的文件系统又是什么样子的呢？</strong></p>\n<p>可能你立刻就能想到，这一定是一个关于Mount Namespace的问题：容器里的应用进程，理应看到一份完全独立的文件系统。这样，它就可以在自己的容器目录（比如/tmp）下进行操作，而完全不会受宿主机以及其他容器的影响。</p>\n<p>那么，真实情况是这样吗？</p>\n<p>“左耳朵耗子”叔在多年前写的一篇<a href=\"https://coolshell.cn/articles/17010.html\">关于Docker基础知识的博客</a>里，曾经介绍过一段小程序。这段小程序的作用是，在创建子进程时开启指定的Namespace。</p><!-- [[[read_end]]] -->\n<p>下面，我们不妨使用它来验证一下刚刚提到的问题。</p>\n<pre><code>#define _GNU_SOURCE\n#include &lt;sys/mount.h&gt; \n#include &lt;sys/types.h&gt;\n#include &lt;sys/wait.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sched.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;unistd.h&gt;\n#define STACK_SIZE (1024 * 1024)\nstatic char container_stack[STACK_SIZE];\nchar* const container_args[] = {\n  &quot;/bin/bash&quot;,\n  NULL\n};\n\nint container_main(void* arg)\n{  \n  printf(&quot;Container - inside the container!\\n&quot;);\n  execv(container_args[0], container_args);\n  printf(&quot;Something's wrong!\\n&quot;);\n  return 1;\n}\n\nint main()\n{\n  printf(&quot;Parent - start a container!\\n&quot;);\n  int container_pid = clone(container_main, container_stack+STACK_SIZE, CLONE_NEWNS | SIGCHLD , NULL);\n  waitpid(container_pid, NULL, 0);\n  printf(&quot;Parent - container stopped!\\n&quot;);\n  return 0;\n}\n</code></pre>\n<p>这段代码的功能非常简单：在main函数里，我们通过clone()系统调用创建了一个新的子进程container_main，并且声明要为它启用Mount Namespace（即：CLONE_NEWNS标志）。</p>\n<p>而这个子进程执行的，是一个“/bin/bash”程序，也就是一个shell。所以这个shell就运行在了Mount Namespace的隔离环境中。</p>\n<p>我们来一起编译一下这个程序：</p>\n<pre><code>$ gcc -o ns ns.c\n$ ./ns\nParent - start a container!\nContainer - inside the container!\n</code></pre>\n<p>这样，我们就进入了这个“容器”当中。可是，如果在“容器”里执行一下ls指令的话，我们就会发现一个有趣的现象： /tmp目录下的内容跟宿主机的内容是一样的。</p>\n<pre><code>$ ls /tmp\n# 你会看到好多宿主机的文件\n</code></pre>\n<p>也就是说：</p>\n<blockquote>\n<p>即使开启了Mount Namespace，容器进程看到的文件系统也跟宿主机完全一样。</p>\n</blockquote>\n<p>这是怎么回事呢？</p>\n<p>仔细思考一下，你会发现这其实并不难理解：<strong>Mount Namespace修改的，是容器进程对文件系统“挂载点”的认知</strong>。但是，这也就意味着，只有在“挂载”这个操作发生之后，进程的视图才会被改变。而在此之前，新创建的容器会直接继承宿主机的各个挂载点。</p>\n<p>这时，你可能已经想到了一个解决办法：创建新进程时，除了声明要启用Mount Namespace之外，我们还可以告诉容器进程，有哪些目录需要重新挂载，就比如这个/tmp目录。于是，我们在容器进程执行前可以添加一步重新挂载 /tmp目录的操作：</p>\n<pre><code>int container_main(void* arg)\n{\n  printf(&quot;Container - inside the container!\\n&quot;);\n  // 如果你的机器的根目录的挂载类型是shared，那必须先重新挂载根目录\n  // mount(&quot;&quot;, &quot;/&quot;, NULL, MS_PRIVATE, &quot;&quot;);\n  mount(&quot;none&quot;, &quot;/tmp&quot;, &quot;tmpfs&quot;, 0, &quot;&quot;);\n  execv(container_args[0], container_args);\n  printf(&quot;Something's wrong!\\n&quot;);\n  return 1;\n}\n</code></pre>\n<p>可以看到，在修改后的代码里，我在容器进程启动之前，加上了一句mount(“none”, “/tmp”, “tmpfs”, 0, “”)语句。就这样，我告诉了容器以tmpfs（内存盘）格式，重新挂载了/tmp目录。</p>\n<p>这段修改后的代码，编译执行后的结果又如何呢？我们可以试验一下：</p>\n<pre><code>$ gcc -o ns ns.c\n$ ./ns\nParent - start a container!\nContainer - inside the container!\n$ ls /tmp\n</code></pre>\n<p>可以看到，这次/tmp变成了一个空目录，这意味着重新挂载生效了。我们可以用mount -l检查一下：</p>\n<pre><code>$ mount -l | grep tmpfs\nnone on /tmp type tmpfs (rw,relatime)\n</code></pre>\n<p>可以看到，容器里的/tmp目录是以tmpfs方式单独挂载的。</p>\n<p>更重要的是，因为我们创建的新进程启用了Mount Namespace，所以这次重新挂载的操作，只在容器进程的Mount Namespace中有效。如果在宿主机上用mount -l来检查一下这个挂载，你会发现它是不存在的：</p>\n<pre><code># 在宿主机上\n$ mount -l | grep tmpfs\n</code></pre>\n<p><strong>这就是Mount Namespace跟其他Namespace的使用略有不同的地方：它对容器进程视图的改变，一定是伴随着挂载操作（mount）才能生效。</strong></p>\n<p>可是，作为一个普通用户，我们希望的是一个更友好的情况：每当创建一个新容器时，我希望容器进程看到的文件系统就是一个独立的隔离环境，而不是继承自宿主机的文件系统。怎么才能做到这一点呢？</p>\n<p>不难想到，我们可以在容器进程启动之前重新挂载它的整个根目录“/”。而由于Mount Namespace的存在，这个挂载对宿主机不可见，所以容器进程就可以在里面随便折腾了。</p>\n<p>在Linux操作系统里，有一个名为chroot的命令可以帮助你在shell中方便地完成这个工作。顾名思义，它的作用就是帮你“change root file system”，即改变进程的根目录到你指定的位置。它的用法也非常简单。</p>\n<p>假设，我们现在有一个$HOME/test目录，想要把它作为一个/bin/bash进程的根目录。</p>\n<p>首先，创建一个test目录和几个lib文件夹：</p>\n<pre><code>$ mkdir -p $HOME/test\n$ mkdir -p $HOME/test/{bin,lib64,lib}\n$ cd $T\n</code></pre>\n<p>然后，把bash命令拷贝到test目录对应的bin路径下：</p>\n<pre><code>$ cp -v /bin/{bash,ls} $HOME/test/bin\n</code></pre>\n<p>接下来，把bash命令需要的所有so文件，也拷贝到test目录对应的lib路径下。找到so文件可以用ldd 命令：</p>\n<pre><code>$ T=$HOME/test\n$ list=&quot;$(ldd /bin/ls | egrep -o '/lib.*\\.[0-9]')&quot;\n$ for i in $list; do cp -v &quot;$i&quot; &quot;${T}${i}&quot;; done\n</code></pre>\n<p>最后，执行chroot命令，告诉操作系统，我们将使用$HOME/test目录作为/bin/bash进程的根目录：</p>\n<pre><code>$ chroot $HOME/test /bin/bash\n</code></pre>\n<p>这时，你如果执行&quot;ls /&quot;，就会看到，它返回的都是$HOME/test目录下面的内容，而不是宿主机的内容。</p>\n<p>更重要的是，对于被chroot的进程来说，它并不会感受到自己的根目录已经被“修改”成$HOME/test了。</p>\n<p>这种视图被修改的原理，是不是跟我之前介绍的Linux Namespace很类似呢？</p>\n<p>没错！</p>\n<p><strong>实际上，Mount Namespace正是基于对chroot的不断改良才被发明出来的，它也是Linux操作系统里的第一个Namespace。</strong></p>\n<p>当然，为了能够让容器的这个根目录看起来更“真实”，我们一般会在这个容器的根目录下挂载一个完整操作系统的文件系统，比如Ubuntu16.04的ISO。这样，在容器启动之后，我们在容器里通过执行&quot;ls /&quot;查看根目录下的内容，就是Ubuntu 16.04的所有目录和文件。</p>\n<p><strong>而这个挂载在容器根目录上、用来为容器进程提供隔离后执行环境的文件系统，就是所谓的“容器镜像”。它还有一个更为专业的名字，叫作：rootfs（根文件系统）。</strong></p>\n<p>所以，一个最常见的rootfs，或者说容器镜像，会包括如下所示的一些目录和文件，比如/bin，/etc，/proc等等：</p>\n<pre><code>$ ls /\nbin dev etc home lib lib64 mnt opt proc root run sbin sys tmp usr var\n</code></pre>\n<p>而你进入容器之后执行的/bin/bash，就是/bin目录下的可执行文件，与宿主机的/bin/bash完全不同。</p>\n<p>现在，你应该可以理解，对Docker项目来说，它最核心的原理实际上就是为待创建的用户进程：</p>\n<ol>\n<li>\n<p>启用Linux Namespace配置；</p>\n</li>\n<li>\n<p>设置指定的Cgroups参数；</p>\n</li>\n<li>\n<p>切换进程的根目录（Change Root）。</p>\n</li>\n</ol>\n<p>这样，一个完整的容器就诞生了。不过，Docker项目在最后一步的切换上会优先使用pivot_root系统调用，如果系统不支持，才会使用chroot。这两个系统调用虽然功能类似，但是也有细微的区别，这一部分小知识就交给你课后去探索了。</p>\n<p>另外，<strong>需要明确的是，rootfs只是一个操作系统所包含的文件、配置和目录，并不包括操作系统内核。在Linux操作系统中，这两部分是分开存放的，操作系统只有在开机启动时才会加载指定版本的内核镜像。</strong></p>\n<p>所以说，rootfs只包括了操作系统的“躯壳”，并没有包括操作系统的“灵魂”。</p>\n<p>那么，对于容器来说，这个操作系统的“灵魂”又在哪里呢？</p>\n<p>实际上，同一台机器上的所有容器，都共享宿主机操作系统的内核。</p>\n<p>这就意味着，如果你的应用程序需要配置内核参数、加载额外的内核模块，以及跟内核进行直接的交互，你就需要注意了：这些操作和依赖的对象，都是宿主机操作系统的内核，它对于该机器上的所有容器来说是一个“全局变量”，牵一发而动全身。</p>\n<p>这也是容器相比于虚拟机的主要缺陷之一：毕竟后者不仅有模拟出来的硬件机器充当沙盒，而且每个沙盒里还运行着一个完整的Guest OS给应用随便折腾。</p>\n<p>不过，<strong>正是由于rootfs的存在，容器才有了一个被反复宣传至今的重要特性：一致性。</strong></p>\n<p>什么是容器的“一致性”呢？</p>\n<p>我在专栏的第一篇文章<a href=\"https://time.geekbang.org/column/article/14254\">《小鲸鱼大事记（一）：初出茅庐》</a>中曾经提到过：由于云端与本地服务器环境不同，应用的打包过程，一直是使用PaaS时最“痛苦”的一个步骤。</p>\n<p>但有了容器之后，更准确地说，有了容器镜像（即rootfs）之后，这个问题被非常优雅地解决了。</p>\n<p><strong>由于rootfs里打包的不只是应用，而是整个操作系统的文件和目录，也就意味着，应用以及它运行所需要的所有依赖，都被封装在了一起。</strong></p>\n<p>事实上，对于大多数开发者而言，他们对应用依赖的理解，一直局限在编程语言层面。比如Golang的Godeps.json。但实际上，一个一直以来很容易被忽视的事实是，<strong>对一个应用来说，操作系统本身才是它运行所需要的最完整的“依赖库”。</strong></p>\n<p>有了容器镜像“打包操作系统”的能力，这个最基础的依赖环境也终于变成了应用沙盒的一部分。这就赋予了容器所谓的一致性：无论在本地、云端，还是在一台任何地方的机器上，用户只需要解压打包好的容器镜像，那么这个应用运行所需要的完整的执行环境就被重现出来了。</p>\n<p><strong>这种深入到操作系统级别的运行环境一致性，打通了应用在本地开发和远端执行环境之间难以逾越的鸿沟。</strong></p>\n<p>不过，这时你可能已经发现了另一个非常棘手的问题：难道我每开发一个应用，或者升级一下现有的应用，都要重复制作一次rootfs吗？</p>\n<p>比如，我现在用Ubuntu操作系统的ISO做了一个rootfs，然后又在里面安装了Java环境，用来部署我的Java应用。那么，我的另一个同事在发布他的Java应用时，显然希望能够直接使用我安装过Java环境的rootfs，而不是重复这个流程。</p>\n<p>一种比较直观的解决办法是，我在制作rootfs的时候，每做一步“有意义”的操作，就保存一个rootfs出来，这样其他同事就可以按需求去用他需要的rootfs了。</p>\n<p>但是，这个解决办法并不具备推广性。原因在于，一旦你的同事们修改了这个rootfs，新旧两个rootfs之间就没有任何关系了。这样做的结果就是极度的碎片化。</p>\n<p>那么，既然这些修改都基于一个旧的rootfs，我们能不能以增量的方式去做这些修改呢？这样做的好处是，所有人都只需要维护相对于base rootfs修改的增量内容，而不是每次修改都制造一个“fork”。</p>\n<p>答案当然是肯定的。</p>\n<p>这也正是为何，Docker公司在实现Docker镜像时并没有沿用以前制作rootfs的标准流程，而是做了一个小小的创新：</p>\n<blockquote>\n<p>Docker在镜像的设计中，引入了层（layer）的概念。也就是说，用户制作镜像的每一步操作，都会生成一个层，也就是一个增量rootfs。</p>\n</blockquote>\n<p>当然，这个想法不是凭空臆造出来的，而是用到了一种叫作联合文件系统（Union File System）的能力。</p>\n<p>Union File System也叫UnionFS，最主要的功能是将多个不同位置的目录联合挂载（union mount）到同一个目录下。比如，我现在有两个目录A和B，它们分别有两个文件：</p>\n<pre><code>$ tree\n.\n├── A\n│  ├── a\n│  └── x\n└── B\n  ├── b\n  └── x\n</code></pre>\n<p>然后，我使用联合挂载的方式，将这两个目录挂载到一个公共的目录C上：</p>\n<pre><code>$ mkdir C\n$ mount -t aufs -o dirs=./A:./B none ./C\n</code></pre>\n<p>这时，我再查看目录C的内容，就能看到目录A和B下的文件被合并到了一起：</p>\n<pre><code>$ tree ./C\n./C\n├── a\n├── b\n└── x\n</code></pre>\n<p>可以看到，在这个合并后的目录C里，有a、b、x三个文件，并且x文件只有一份。这，就是“合并”的含义。此外，如果你在目录C里对a、b、x文件做修改，这些修改也会在对应的目录A、B中生效。</p>\n<p>那么，在Docker项目中，又是如何使用这种Union File System的呢？</p>\n<p>我的环境是Ubuntu 16.04和Docker CE 18.05，这对组合默认使用的是AuFS这个联合文件系统的实现。你可以通过docker info命令，查看到这个信息。</p>\n<p>AuFS的全称是Another UnionFS，后改名为Alternative UnionFS，再后来干脆改名叫作Advance UnionFS，从这些名字中你应该能看出这样两个事实：</p>\n<ol>\n<li>\n<p>它是对Linux原生UnionFS的重写和改进；</p>\n</li>\n<li>\n<p>它的作者怨气好像很大。我猜是Linus Torvalds（Linux之父）一直不让AuFS进入Linux内核主干的缘故，所以我们只能在Ubuntu和Debian这些发行版上使用它。</p>\n</li>\n</ol>\n<p>对于AuFS来说，它最关键的目录结构在/var/lib/docker路径下的diff目录：</p>\n<pre><code>/var/lib/docker/aufs/diff/&lt;layer_id&gt;\n</code></pre>\n<p><strong>而这个目录的作用，我们不妨通过一个具体例子来看一下。</strong></p>\n<p>现在，我们启动一个容器，比如：</p>\n<pre><code>$ docker run -d ubuntu:latest sleep 3600\n</code></pre>\n<p>这时候，Docker就会从Docker Hub上拉取一个Ubuntu镜像到本地。</p>\n<p>这个所谓的“镜像”，实际上就是一个Ubuntu操作系统的rootfs，它的内容是Ubuntu操作系统的所有文件和目录。不过，与之前我们讲述的rootfs稍微不同的是，Docker镜像使用的rootfs，往往由多个“层”组成：</p>\n<pre><code>$ docker image inspect ubuntu:latest\n...\n     &quot;RootFS&quot;: {\n      &quot;Type&quot;: &quot;layers&quot;,\n      &quot;Layers&quot;: [\n        &quot;sha256:f49017d4d5ce9c0f544c...&quot;,\n        &quot;sha256:8f2b771487e9d6354080...&quot;,\n        &quot;sha256:ccd4d61916aaa2159429...&quot;,\n        &quot;sha256:c01d74f99de40e097c73...&quot;,\n        &quot;sha256:268a067217b5fe78e000...&quot;\n      ]\n    }\n</code></pre>\n<p>可以看到，这个Ubuntu镜像，实际上由五个层组成。这五个层就是五个增量rootfs，每一层都是Ubuntu操作系统文件与目录的一部分；而在使用镜像时，Docker会把这些增量联合挂载在一个统一的挂载点上（等价于前面例子里的“/C”目录）。</p>\n<p>这个挂载点就是/var/lib/docker/aufs/mnt/<ID>，比如：</p>\n<pre><code>/var/lib/docker/aufs/mnt/6e3be5d2ecccae7cc0fcfa2a2f5c89dc21ee30e166be823ceaeba15dce645b3e\n</code></pre>\n<p>不出意外的，这个目录里面正是一个完整的Ubuntu操作系统：</p>\n<pre><code>$ ls /var/lib/docker/aufs/mnt/6e3be5d2ecccae7cc0fcfa2a2f5c89dc21ee30e166be823ceaeba15dce645b3e\nbin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var\n</code></pre>\n<p>那么，前面提到的五个镜像层，又是如何被联合挂载成这样一个完整的Ubuntu文件系统的呢？</p>\n<p>这个信息记录在AuFS的系统目录/sys/fs/aufs下面。</p>\n<p>首先，通过查看AuFS的挂载信息，我们可以找到这个目录对应的AuFS的内部ID（也叫：si）：</p>\n<pre><code>$ cat /proc/mounts| grep aufs\nnone /var/lib/docker/aufs/mnt/6e3be5d2ecccae7cc0fc... aufs rw,relatime,si=972c6d361e6b32ba,dio,dirperm1 0 0\n</code></pre>\n<p>即，si=972c6d361e6b32ba。</p>\n<p>然后使用这个ID，你就可以在/sys/fs/aufs下查看被联合挂载在一起的各个层的信息：</p>\n<pre><code>$ cat /sys/fs/aufs/si_972c6d361e6b32ba/br[0-9]*\n/var/lib/docker/aufs/diff/6e3be5d2ecccae7cc...=rw\n/var/lib/docker/aufs/diff/6e3be5d2ecccae7cc...-init=ro+wh\n/var/lib/docker/aufs/diff/32e8e20064858c0f2...=ro+wh\n/var/lib/docker/aufs/diff/2b8858809bce62e62...=ro+wh\n/var/lib/docker/aufs/diff/20707dce8efc0d267...=ro+wh\n/var/lib/docker/aufs/diff/72b0744e06247c7d0...=ro+wh\n/var/lib/docker/aufs/diff/a524a729adadedb90...=ro+wh\n</code></pre>\n<p>从这些信息里，我们可以看到，镜像的层都放置在/var/lib/docker/aufs/diff目录下，然后被联合挂载在/var/lib/docker/aufs/mnt里面。</p>\n<p><strong>而且，从这个结构可以看出来，这个容器的rootfs由如下图所示的三部分组成：</strong></p>\n<p><img src=\"https://static001.geekbang.org/resource/image/8a/5f/8a7b5cfabaab2d877a1d4566961edd5f.png?wh=1350*1002\" alt=\"\" /></p>\n<p><strong>第一部分，只读层。</strong></p>\n<p>它是这个容器的rootfs最下面的五层，对应的正是ubuntu:latest镜像的五层。可以看到，它们的挂载方式都是只读的（ro+wh，即readonly+whiteout，至于什么是whiteout，我下面马上会讲到）。</p>\n<p>这时，我们可以分别查看一下这些层的内容：</p>\n<pre><code>$ ls /var/lib/docker/aufs/diff/72b0744e06247c7d0...\netc sbin usr var\n$ ls /var/lib/docker/aufs/diff/32e8e20064858c0f2...\nrun\n$ ls /var/lib/docker/aufs/diff/a524a729adadedb900...\nbin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var\n</code></pre>\n<p>可以看到，这些层，都以增量的方式分别包含了Ubuntu操作系统的一部分。</p>\n<p><strong>第二部分，可读写层。</strong></p>\n<p>它是这个容器的rootfs最上面的一层（6e3be5d2ecccae7cc），它的挂载方式为：rw，即read write。在没有写入文件之前，这个目录是空的。而一旦在容器里做了写操作，你修改产生的内容就会以增量的方式出现在这个层中。</p>\n<p>可是，你有没有想到这样一个问题：如果我现在要做的，是删除只读层里的一个文件呢？</p>\n<p>为了实现这样的删除操作，AuFS会在可读写层创建一个whiteout文件，把只读层里的文件“遮挡”起来。</p>\n<p>比如，你要删除只读层里一个名叫foo的文件，那么这个删除操作实际上是在可读写层创建了一个名叫.wh.foo的文件。这样，当这两个层被联合挂载之后，foo文件就会被.wh.foo文件“遮挡”起来，“消失”了。这个功能，就是“ro+wh”的挂载方式，即只读+whiteout的含义。我喜欢把whiteout形象地翻译为：“白障”。</p>\n<p>所以，最上面这个可读写层的作用，就是专门用来存放你修改rootfs后产生的增量，无论是增、删、改，都发生在这里。而当我们使用完了这个被修改过的容器之后，还可以使用docker commit和push指令，保存这个被修改过的可读写层，并上传到Docker Hub上，供其他人使用；而与此同时，原先的只读层里的内容则不会有任何变化。这，就是增量rootfs的好处。</p>\n<p><strong>第三部分，Init层。</strong></p>\n<p>它是一个以“-init”结尾的层，夹在只读层和读写层之间。Init层是Docker项目单独生成的一个内部层，专门用来存放/etc/hosts、/etc/resolv.conf等信息。</p>\n<p>需要这样一层的原因是，这些文件本来属于只读的Ubuntu镜像的一部分，但是用户往往需要在启动容器时写入一些指定的值比如hostname，所以就需要在可读写层对它们进行修改。</p>\n<p>可是，这些修改往往只对当前的容器有效，我们并不希望执行docker commit时，把这些信息连同可读写层一起提交掉。</p>\n<p>所以，Docker做法是，在修改了这些文件之后，以一个单独的层挂载了出来。而用户执行docker commit只会提交可读写层，所以是不包含这些内容的。</p>\n<p>最终，这7个层都被联合挂载到/var/lib/docker/aufs/mnt目录下，表现为一个完整的Ubuntu操作系统供容器使用。</p>\n<h2>总结</h2>\n<p>在今天的分享中，我着重介绍了Linux容器文件系统的实现方式。而这种机制，正是我们经常提到的容器镜像，也叫作：rootfs。它只是一个操作系统的所有文件和目录，并不包含内核，最多也就几百兆。而相比之下，传统虚拟机的镜像大多是一个磁盘的“快照”，磁盘有多大，镜像就至少有多大。</p>\n<p>通过结合使用Mount Namespace和rootfs，容器就能够为进程构建出一个完善的文件系统隔离环境。当然，这个功能的实现还必须感谢chroot和pivot_root这两个系统调用切换进程根目录的能力。</p>\n<p>而在rootfs的基础上，Docker公司创新性地提出了使用多个增量rootfs联合挂载一个完整rootfs的方案，这就是容器镜像中“层”的概念。</p>\n<p>通过“分层镜像”的设计，以Docker镜像为核心，来自不同公司、不同团队的技术人员被紧密地联系在了一起。而且，由于容器镜像的操作是增量式的，这样每次镜像拉取、推送的内容，比原本多个完整的操作系统的大小要小得多；而共享层的存在，可以使得所有这些容器镜像需要的总空间，也比每个镜像的总和要小。这样就使得基于容器镜像的团队协作，要比基于动则几个GB的虚拟机磁盘镜像的协作要敏捷得多。</p>\n<p>更重要的是，一旦这个镜像被发布，那么你在全世界的任何一个地方下载这个镜像，得到的内容都完全一致，可以完全复现这个镜像制作者当初的完整环境。这，就是容器技术“强一致性”的重要体现。</p>\n<p>而这种价值正是支撑Docker公司在2014~2016年间迅猛发展的核心动力。容器镜像的发明，不仅打通了“开发-测试-部署”流程的每一个环节，更重要的是：</p>\n<blockquote>\n<p>容器镜像将会成为未来软件的主流发布方式。</p>\n</blockquote>\n<h2>思考题</h2>\n<ol>\n<li>\n<p>既然容器的rootfs（比如，Ubuntu镜像），是以只读方式挂载的，那么又如何在容器里修改Ubuntu镜像的内容呢？（提示：Copy-on-Write）</p>\n</li>\n<li>\n<p>除了AuFS，你知道Docker项目还支持哪些UnionFS实现吗？你能说出不同宿主机环境下推荐使用哪种实现吗？</p>\n</li>\n</ol>\n<p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。<br />\n<img src=\"https://static001.geekbang.org/resource/image/0d/cb/0da944e5bac4fe1d00d3f01a747e86cb.jpg?wh=6803*11220\" alt=\"\" /></p>\n<p>点击<a href=\"https://time.geekbang.org/column/article/17841\">这里</a>查看大图。</p>\n<p></p>\n","neighbors":{"left":{"article_title":"06 | 白话容器基础（二）：隔离与限制","id":14653},"right":{"article_title":"08 | 白话容器基础（四）：重新认识Docker容器","id":18119}},"comments":[{"had_liked":false,"id":23474,"user_name":"张磊 Kubernetes","can_delete":false,"product_type":"c1","uid":1218095,"ip_address":"","ucode":"16E29BDAB1F5BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","comment_is_top":true,"comment_ctime":1536400375,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"9.2233729446292992e+18","product_id":100015201,"comment_content":"有读者反映，咱们重新挂载&#47;tmp目录的实验执行完成后，在宿主机上居然可以看到这个挂载信息。。这是怎么回事呢？实际上，大家自己装的虚拟机，或者云上的虚拟机的根目录，很多都是以share方式的挂载的。这时候，你在容器里做mount也会继承share方式。这样就会把容器内挂载传播到宿主机上。解决这个问题，你可以在重新挂载&#47;tmp之前，在容器内先执行一句：mount(“”, “&#47;“, NULL, MS_PRIVATE, “”) 这样，容器内的根目录就是private挂载的了。","like_count":211,"discussions":[{"author":{"id":1069133,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/4d/db91e218.jpg","nickname":"sam700000","note":"","ucode":"C2ABDDC56B2D50","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21582,"discussion_content":"加了这句也不行，或者我使用 mount --make-private / 命令，先修改根目录的挂载类型，然后用命令 findmnt -o TARGET,PROPAGATION / 查看根目录已经修改成private类型了，再运行ns命令还是不行，依然在另一个跑在宿主机的终端上看到了/tmp的挂载，新的挂载还是传播到宿主机上了\n\n解决方法：\n突然意识到我的linux系统中/tmp的挂载是独立于根目录的，于是我执行了一个命令 findmnt -o TARGET,PROPAGATION /tmp 发现挂载类型是shared，我晕~我这边的情况应该是改/tmp的挂载点类型为private，而不是根目录的，所以我执行 mount --make-private /tmp 然后查看挂在类型 findmnt -o TARGET,PROPAGATION /tmp，变为private，之后再运行ns，可以了~（做这步前我已经把根目录的挂载类型改回shared了）\n\n总结：\n应该先查看下自己宿主机的挂载信息cat /proc/mount ，再来判断应该是改哪个挂载点的挂在类型，我的 Linux 发行版是 Centos 7","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1569502455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069133,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/4d/db91e218.jpg","nickname":"sam700000","note":"","ucode":"C2ABDDC56B2D50","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21589,"discussion_content":"或者把mount(“”, “/“, NULL, MS_PRIVATE, “”); 这句改一下（我不太会linux c编程），我尝试改成mount(&#34;&#34;, &#34;/tmp&#34;, &#34;tmpfs&#34;, MS_PRIVATE, &#34;&#34;); 放在重新挂载/tmp 前，实测可行","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1569503142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23312,"user_name":"Linux云计算网络","can_delete":false,"product_type":"c1","uid":1114062,"ip_address":"","ucode":"8E1F8B049D3C95","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/ce/73ee54bf.jpg","comment_is_top":false,"comment_ctime":1536283213,"is_pvip":false,"replies":[{"id":"8445","content":"课代表又出现啦","user_name":"作者回复","comment_id":23312,"uid":"1218095","ip_address":"","utype":1,"ctime":1536286614,"user_name_real":"Geek_6ef93d"}],"discussion_count":6,"race_medal":0,"score":"2157609865805","product_id":100015201,"comment_content":"1. 上面的读写层通常也称为容器层，下面的只读层称为镜像层，所有的增删查改操作都只会作用在容器层，相同的文件上层会覆盖掉下层。知道这一点，就不难理解镜像文件的修改，比如修改一个文件的时候，首先会从上到下查找有没有这个文件，找到，就复制到容器层中，修改，修改的结果就会作用到下层的文件，这种方式也被称为copy-on-write。<br><br>2. 查了一下，包括但不限于以下这几种：aufs, device mapper, btrfs, overlayfs, vfs, zfs。aufs是ubuntu 常用的，device mapper 是 centos，btrfs 是 SUSE，overlayfs ubuntu 和 centos 都会使用，现在最新的 docker 版本中默认两个系统都是使用的 overlayfs，vfs 和 zfs 常用在 solaris 系统。<br><br>欢迎补充和指正。","like_count":503,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423507,"discussion_content":"课代表又出现啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536286614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1122150,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1f/66/59e0647a.jpg","nickname":"万历十五年","note":"","ucode":"3D8CF5DF847AE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369782,"discussion_content":"容器的镜像概念和ps中的图层很像，ps里上面的图层可以修改，遮挡下面的图层。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1619155109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2172434,"avatar":"https://static001.geekbang.org/account/avatar/00/21/26/12/b10dfa8b.jpg","nickname":"坚信光明就在远方！","note":"","ucode":"1723C129AB5871","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408691,"discussion_content":"修改的结果就会作用到下层（镜像层？）的文件？不是这样吧，镜像层ro","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635304035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1200040,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4f/a8/6e7c9971.jpg","nickname":"小林","note":"","ucode":"B0F82911880F7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344254,"discussion_content":"学渣来抄作业了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611372495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297630,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","nickname":"剑八","note":"","ucode":"0A09F41DB8A4E7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322834,"discussion_content":"分层复用，扩展的思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604827000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225747,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b4/13/6019c6ad.jpg","nickname":"Y.K.K","note":"","ucode":"0B68F97280AF32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298897,"discussion_content":"请问我访问了overlayfs文件夹为什么是空的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597469660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24080,"user_name":"Jeff.W","can_delete":false,"product_type":"c1","uid":1140420,"ip_address":"","ucode":"2043F83FB7B39C","user_header":"https://static001.geekbang.org/account/avatar/00/11/66/c4/038f9325.jpg","comment_is_top":false,"comment_ctime":1536799895,"is_pvip":false,"replies":[{"id":"8827","content":"于是，你就做了一句诗","user_name":"作者回复","comment_id":24080,"uid":"1218095","ip_address":"","utype":1,"ctime":1536821397,"user_name_real":"Geek_6ef93d"}],"discussion_count":12,"race_medal":0,"score":"1427465942167","product_id":100015201,"comment_content":"继Namespace构建了四周的围墙（进程隔离），Cgroups构建了受控的天空优先使用阳光雨露（资源限制），Mount namespace与rootfs构建了脚下的大地，这片土地是你熟悉和喜欢的，不管你走到哪里，都可以带着它，就好像你从未离开过家乡，没有丝毫的陌生感（容器的一致性）～","like_count":333,"discussions":[{"author":{"id":1265707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","nickname":"第一装甲集群司令克莱斯特","note":"","ucode":"4E8FBB23AD860B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354318,"discussion_content":"你早晚把自己骚死！嘎嘎！","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1615274507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292149,"discussion_content":"老哥，不如转行写诗","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1595119133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2475978,"avatar":"https://static001.geekbang.org/account/avatar/00/25/c7/ca/58dbc342.jpg","nickname":"燃烧者","note":"","ucode":"0AF7EE168C010F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372573,"discussion_content":"哪里可以买到您的著作","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1620380191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423830,"discussion_content":"于是，你就做了一句诗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1536821397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1881733,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/b6/85/f10816ca.jpg","nickname":"潇湘夜雨","note":"","ucode":"C03F181FB9573D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":579158,"discussion_content":"老师这个评价啊，excited","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1657205978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":423830,"ip_address":""},"score":579158,"extra":""}]},{"author":{"id":1813643,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ac/8b/5f02056a.jpg","nickname":"Mr.Wang","note":"","ucode":"2BBB013B26B2D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163268,"discussion_content":"666","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581065760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2420731,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/AYCIZYjDO4UAMhqNYNElcNiczfuD2qU6VkcEmSugImsq5bjicRNTQE1dJhPIuUDunzxSLexDoYazK7QadT3AekJw/132","nickname":"Geek_84025d","note":"","ucode":"D01E97134E49FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404921,"discussion_content":"秀儿！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634461955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2301840,"avatar":"https://static001.geekbang.org/account/avatar/00/23/1f/90/bf183d37.jpg","nickname":"DmonJ","note":"","ucode":"E909BB993DCD51","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388778,"discussion_content":"秀!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628950746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2393367,"avatar":"https://static001.geekbang.org/account/avatar/00/24/85/17/6f6daab0.jpg","nickname":"柳永斌","note":"","ucode":"1243EA86996DBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338302,"discussion_content":"楚门的世界 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609235987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073829,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/a5/43aa0c27.jpg","nickname":"TKbook","note":"","ucode":"F6E0E99CC79059","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320184,"discussion_content":"牛皮~~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604284504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020000,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/60/44bf9fcc.jpg","nickname":"D瓜哥","note":"","ucode":"616192C94A700C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311524,"discussion_content":"老哥，太溜了…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602385324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1099525,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","nickname":"微末凡尘","note":"","ucode":"25EDFD0914D0F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020000,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/60/44bf9fcc.jpg","nickname":"D瓜哥","note":"","ucode":"616192C94A700C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348121,"discussion_content":"看到朋友了，你好哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612432197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311524,"ip_address":""},"score":348121,"extra":""}]}]},{"had_liked":false,"id":23365,"user_name":"栖枝","can_delete":false,"product_type":"c1","uid":1023930,"ip_address":"","ucode":"4E9A35439B615F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/ba/5a9cb72f.jpg","comment_is_top":false,"comment_ctime":1536307653,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"641486434757","product_id":100015201,"comment_content":"whiteout,这就是我每次想把之前不需要的东西删了，但是镜像也没变小的原因啊，手动捂脸","like_count":150,"discussions":[{"author":{"id":1821477,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/cb/25/31193083.jpg","nickname":"刘二宝","note":"","ucode":"723D5295611012","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203018,"discussion_content":"可以修改dockerfile重新生成自己的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583985239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2054366,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/58/de/429a33ba.jpg","nickname":"来日纵使千千阙歌","note":"","ucode":"AB7CCC8048A69A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288718,"discussion_content":"所以高层的删除不会减小容器大小\n修改目录权限，也会增大镜像大小","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593848546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1930487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lwN7wy2iaibicicBicoN7eRsRtGA75dOYjuWtdqbOSUo65SHR2XHqJb01wgtnDdkBQA3cpibnCb1fibOJD2QwvRs4EU2w/132","nickname":"liam","note":"","ucode":"81C4A20429F7DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2054366,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/58/de/429a33ba.jpg","nickname":"来日纵使千千阙歌","note":"","ucode":"AB7CCC8048A69A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291148,"discussion_content":"来给我解释下为啥修改目录权限也不让镜像增大？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594718599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":288718,"ip_address":""},"score":291148,"extra":""},{"author":{"id":1146983,"avatar":"https://static001.geekbang.org/account/avatar/00/11/80/67/4e381da5.jpg","nickname":"Derek","note":"","ucode":"A4D5DED1E00F60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1930487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lwN7wy2iaibicicBicoN7eRsRtGA75dOYjuWtdqbOSUo65SHR2XHqJb01wgtnDdkBQA3cpibnCb1fibOJD2QwvRs4EU2w/132","nickname":"liam","note":"","ucode":"81C4A20429F7DF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293626,"discussion_content":"我想是因为修改了文件，就会在增加一层，所以就变大了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595601465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291148,"ip_address":""},"score":293626,"extra":""},{"author":{"id":1735152,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/79/f0/19c6ae1c.jpg","nickname":"Geek_7324de","note":"","ucode":"B1C2CB60D75FB5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1930487,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/lwN7wy2iaibicicBicoN7eRsRtGA75dOYjuWtdqbOSUo65SHR2XHqJb01wgtnDdkBQA3cpibnCb1fibOJD2QwvRs4EU2w/132","nickname":"liam","note":"","ucode":"81C4A20429F7DF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308109,"discussion_content":"因为需要修改目录的权限在只读层的话，就需要copy-on-write方式复制到读写层，再去修改权限？变相的增加了可读写层的大小？","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1600847380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291148,"ip_address":""},"score":308109,"extra":""}]},{"author":{"id":2497779,"avatar":"https://static001.geekbang.org/account/avatar/00/26/1c/f3/833ad47e.jpg","nickname":"Geek_lucas","note":"","ucode":"AF728FA8C856F7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547725,"discussion_content":"不仅不会变小，可能还会变大，气人不气人🐶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642840460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23325,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1536286299,"is_pvip":false,"replies":[{"id":"8452","content":"好问题。aufs是一层一层往上盖的，所以我给的例子里，A里面的x会覆盖B里面的x。","user_name":"作者回复","comment_id":23325,"uid":"1218095","ip_address":"","utype":1,"ctime":1536290832,"user_name_real":"Geek_6ef93d"}],"discussion_count":8,"race_medal":0,"score":"473982688859","product_id":100015201,"comment_content":"目录联合挂载时，如果A和B目录里的x文件内容不一样，这时如何处理？","like_count":110,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423514,"discussion_content":"好问题。aufs是一层一层往上盖的，所以我给的例子里，A里面的x会覆盖B里面的x。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536290832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1649120,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/e0/35835788.jpg","nickname":"Rs先生","note":"","ucode":"4B09A979E106F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336629,"discussion_content":"老师你好，我在实验的时候设置了A和B目录里的x文件内容是不同的，按照你说的，aufs的确是一层一层盖上去的。但是如果是这样的话，可读可写层中打上污点的内容不就把可读层中的内容覆盖掉了嘛，这是怎么通过可读可写层+只读层生成修改后的镜像呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608637823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052282,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0e/7a/ab527628.jpg","nickname":"zackery","note":"","ucode":"92D737D6773855","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181857,"discussion_content":"那么请问，A和B的层级关系是如何确定的呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582383013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1735152,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/79/f0/19c6ae1c.jpg","nickname":"Geek_7324de","note":"","ucode":"B1C2CB60D75FB5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1052282,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0e/7a/ab527628.jpg","nickname":"zackery","note":"","ucode":"92D737D6773855","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308111,"discussion_content":"mount -t aufs -o dirs=./A:./B none ./C，是有顺序的","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1600847819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":181857,"ip_address":""},"score":308111,"extra":""}]},{"author":{"id":2509433,"avatar":"https://static001.geekbang.org/account/avatar/00/26/4a/79/8b92731d.jpg","nickname":"Xcxing","note":"","ucode":"F9131BE3BE50CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588296,"discussion_content":"但是我这边实验得出的是，a的x内容和b的x内容直接合并了，并不是覆盖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663655259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1451623,"avatar":"https://static001.geekbang.org/account/avatar/00/16/26/67/c3d90f46.jpg","nickname":"may_huang","note":"","ucode":"EAF989F18FC109","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54819,"discussion_content":"这样B里面的x数据不就丢失了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574316820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1043738,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","nickname":"asdf100","note":"","ucode":"39D8D71453E575","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1451623,"avatar":"https://static001.geekbang.org/account/avatar/00/16/26/67/c3d90f46.jpg","nickname":"may_huang","note":"","ucode":"EAF989F18FC109","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":55873,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574407994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":54819,"ip_address":""},"score":55873,"extra":""},{"author":{"id":1353338,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a6/7a/ecaf598f.jpg","nickname":"契卡","note":"","ucode":"D0E3B93F96E744","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1451623,"avatar":"https://static001.geekbang.org/account/avatar/00/16/26/67/c3d90f46.jpg","nickname":"may_huang","note":"","ucode":"EAF989F18FC109","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":584281,"discussion_content":"只是对于容器内的进程而言看不到B中的X吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660720214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":54819,"ip_address":"浙江"},"score":584281,"extra":""}]}]},{"had_liked":false,"id":23302,"user_name":"oddrock","can_delete":false,"product_type":"c1","uid":1037506,"ip_address":"","ucode":"55BADA192250B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/c2/910d231e.jpg","comment_is_top":false,"comment_ctime":1536280895,"is_pvip":true,"replies":[{"id":"8438","content":"没！办！法！所以我去年一直在搞katacontainers，这种基于虚拟化的容器是有独立内核的。","user_name":"作者回复","comment_id":23302,"uid":"1218095","ip_address":"","utype":1,"ctime":1536286163,"user_name_real":"Geek_6ef93d"}],"discussion_count":4,"race_medal":0,"score":"409558174015","product_id":100015201,"comment_content":"请问老师，听了您今天的课，认识到容器使用的内核是和宿主机内核一致的，但如果容器需要不同的内核怎么办？","like_count":96,"discussions":[{"author":{"id":1020529,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/71/9fd7cd7a.jpg","nickname":"Daniel","note":"","ucode":"282E09B3146501","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132398,"discussion_content":"我在YouTube上查了一下 katacontainers，发先了作者的演讲视频 Tutorial: KataContainers the Hard Way: Kubernetes + containerd + KataContainers - Lei Zhang, Alibaba &amp; Xu Wang, HyperHQ，感觉作者的英语真棒，相比之下，感觉作者的演讲要比同伴好太多了，技术好，英文演讲能力也好。强👍 可能，Wang Xu 太紧张了，又是用英文做presentation, 难免会紧张。让我想起了我在国外时候第一次做Presentation. 还有，外国人在YouTube上的留言确实是想说啥说啥，“nice content. but Xu sounds extremely nervous. horrible presentation on his part.” 但是作为国人，在世界上做演讲，已经很不错了。赞👍","likes_number":23,"is_delete":false,"is_hidden":false,"ctime":1578904287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423503,"discussion_content":"没！办！法！所以我去年一直在搞katacontainers，这种基于虚拟化的容器是有独立内核的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1536286163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2509433,"avatar":"https://static001.geekbang.org/account/avatar/00/26/4a/79/8b92731d.jpg","nickname":"Xcxing","note":"","ucode":"F9131BE3BE50CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588097,"discussion_content":"那能不能把这种情况归为不适用容器化的方案？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663553768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2831411,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIibrEIHcdaxz0VZK9zicPCBqfMRLvFLLdFVXKbr5nTYrxhs8yuMFypFRG0tibhOmuZxxBtGwFAjb9fg/132","nickname":"Geek_5b46e9","note":"","ucode":"1806317C418E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414112,"discussion_content":"容器的一致性就来源于共享内核，不共用内核是虚批化，不同内核一船通过多Container､或不同载荷。不确定是否正确，请指教。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636646942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23664,"user_name":"汤尼房","can_delete":false,"product_type":"c1","uid":1100996,"ip_address":"","ucode":"A4D961DD9C2F74","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/c4/5ac16f31.jpg","comment_is_top":false,"comment_ctime":1536579599,"is_pvip":false,"replies":[{"id":"8686","content":"很简单啊，因为scratch本身就是个空镜像。你想想，假如你是centos公司，你在发布centos镜像的时候总得FROM吧？所以docker公司就给你做了个scratch：万能的base镜像。","user_name":"作者回复","comment_id":23664,"uid":"1218095","ip_address":"","utype":1,"ctime":1536652783,"user_name_real":"Geek_6ef93d"}],"discussion_count":6,"race_medal":0,"score":"358018865167","product_id":100015201,"comment_content":"老师你好，很好奇dockerhub上关于系统镜像的制作过程，比如对于centos7.4的镜像，首先能想到的是应该依据centos官方发布的centos7.4的系统镜像，然后将此镜像中的内核给去掉，仅保留剩下的文件、配置和目录或者是保留必要的文件、配置和目录；但通过查看centos7.4的Dockerfile之后发现其依赖的base image是scratch，然后在scratch的基础上添加centos-7.4.1708-docker.tar.xz，后来查看ubuntu镜像发现其base image也是scratch，老师能简单说下scratch基础镜像吗（镜像文件的制作过程等），猜想scratch应该是包含了多个系统之间共同的东西，否则为啥多个版本的系统镜像以及不同版本的系统镜像的基础镜像都用的是scratch，所以对scratch基础镜像很好奇，望老师指点一下","like_count":84,"discussions":[{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292150,"discussion_content":"scratch ，少儿编程，起点。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1595119394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1696456,"avatar":"","nickname":"贝少芬","note":"","ucode":"5C04C7C524DCF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32430,"discussion_content":"哈哈，from scratch！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571036123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423667,"discussion_content":"很简单啊，因为scratch本身就是个空镜像。你想想，假如你是centos公司，你在发布centos镜像的时候总得FROM吧？所以docker公司就给你做了个scratch：万能的base镜像。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1536652783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1770905,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/05/99/0acc9dbd.jpg","nickname":"陈宏星","note":"","ucode":"9E4BB63276A3EF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349052,"discussion_content":"其实楼上想问的是：这个scratch中有什么，做了什么，它还依赖了什么？我理解楼上是想自己做一个不依赖任何其他base的image，如果要依赖，也希望是自己做这个scratch，这个这个scratch自己做的话该怎么做等。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612861520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1057611,"avatar":"https://static001.geekbang.org/account/avatar/00/10/23/4b/5578cbd1.jpg","nickname":"IsaacGao","note":"","ucode":"95C640D185A060","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1770905,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/05/99/0acc9dbd.jpg","nickname":"陈宏星","note":"","ucode":"9E4BB63276A3EF","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":363490,"discussion_content":"什么也没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617203467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349052,"ip_address":""},"score":363490,"extra":""}]},{"author":{"id":1658796,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","nickname":"Aprelude","note":"","ucode":"840D3F7A35AEEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409765,"discussion_content":"不是liunx的文件系统吗，为啥是空的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635506657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28259,"user_name":"╯梦深处゛","can_delete":false,"product_type":"c1","uid":1063649,"ip_address":"","ucode":"87F0E836B70FD2","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/e1/b6b311cb.jpg","comment_is_top":false,"comment_ctime":1538035221,"is_pvip":false,"replies":[{"id":"10150","content":"我一向反对源码分析。那是偷懒的态度。","user_name":"作者回复","comment_id":28259,"uid":"1218095","ip_address":"","utype":1,"ctime":1538039794,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"310775680533","product_id":100015201,"comment_content":"喜欢这种从出现到发展、由浅入深、由一小段代码讲述某种实现的讲述，既容易理解，也深入了解了原理。娓娓道来，很有条理，就像身临当时docker的实现场景！","like_count":72,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425200,"discussion_content":"我一向反对源码分析。那是偷懒的态度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538039794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41372,"user_name":"Hans","can_delete":false,"product_type":"c1","uid":1155198,"ip_address":"","ucode":"813C7767CC5E6F","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/7e/d6dbaf51.jpg","comment_is_top":false,"comment_ctime":1542770111,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"254945840575","product_id":100015201,"comment_content":"我使用的ubuntu系统使用docker时没有&#47;var&#47;lib&#47;docker&#47;aufs目录，只有&#47;var&#47;lib&#47;docker&#47;overlay2目录，通过docker inspect命令可以查看到镜像在该目录下生成的各种目录文件，<br>LowerDir：指向镜像层；<br>UpperDir：指向容器层，在容器中创建文件后，文件出现在此目录；<br>MergedDir：容器挂载点 ，lowerdir和upperdir整合起来提供统一的视图给容器，作为根文件系统；<br>WorkDir：用于实现copy_up操作。","like_count":60,"discussions":[{"author":{"id":1658378,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4e/0a/a19b3909.jpg","nickname":"漩涡佐助栋","note":"","ucode":"A48889365ABF21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219821,"discussion_content":"现在docker默认的是overlay2 ","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585813508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028277,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","nickname":"Unknown element","note":"","ucode":"34A129800D0238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588626,"discussion_content":"我也找到了这些目录，但是lowerDir下的路径都不存在，这是为啥呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663914500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351012,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/64/272dc1b7.jpg","nickname":"圆滚滚","note":"","ucode":"E4D81822A87D50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550180,"discussion_content":"你的评论解决了我的疑问，非常感谢赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644408142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2206508,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/O6qftWBakkjQHrAhF5tia21GKkQxibJaPy2nWUKc9eiaouaqb67Hj60RRKgjgHhzPmaxaHkLszcNYrDSkj21lPylQ/132","nickname":"Geek_a852c8","note":"","ucode":"D925A9D71A76BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352842,"discussion_content":"是的。我也是只找到overlay2了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614867152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203739,"discussion_content":"解决了吗 没有aufs的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584074695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1248307,"avatar":"https://static001.geekbang.org/account/avatar/00/13/0c/33/c5026169.jpg","nickname":"hiyang","note":"","ucode":"E521EE72C0F247","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283188,"discussion_content":"可以这样修改，https://blog.csdn.net/liumiaocn/article/details/79429198，不过aufs 要废弃了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1592207967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":203739,"ip_address":""},"score":283188,"extra":""}]}]},{"had_liked":false,"id":23294,"user_name":"vx:jiancheng_goon","can_delete":false,"product_type":"c1","uid":1218615,"ip_address":"","ucode":"FD34901B061825","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/37/7f575aec.jpg","comment_is_top":false,"comment_ctime":1536279080,"is_pvip":false,"replies":[{"id":"8454","content":"女朋友应该很开心😃","user_name":"作者回复","comment_id":23294,"uid":"1218095","ip_address":"","utype":1,"ctime":1536291005,"user_name_real":"Geek_6ef93d"}],"discussion_count":5,"race_medal":0,"score":"224874578472","product_id":100015201,"comment_content":"女朋友1 3 5追电视剧，我1 3 5追k8s。","like_count":52,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423496,"discussion_content":"女朋友应该很开心😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536291005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131867,"avatar":"https://static001.geekbang.org/account/avatar/00/11/45/5b/dde3d9fb.jpg","nickname":"在路上","note":"","ucode":"4B88071C52F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539935,"discussion_content":"那2 4 干嘛？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639885052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2598745,"avatar":"","nickname":"Geek_15f028","note":"","ucode":"5DD5FEF3B55F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1131867,"avatar":"https://static001.geekbang.org/account/avatar/00/11/45/5b/dde3d9fb.jpg","nickname":"在路上","note":"","ucode":"4B88071C52F857","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544268,"discussion_content":"dddd","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1641453691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":539935,"ip_address":""},"score":544268,"extra":""},{"author":{"id":1095819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b8/8b/68555cbf.jpg","nickname":"Geek_122dd9","note":"","ucode":"12BDEF1FC06633","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2598745,"avatar":"","nickname":"Geek_15f028","note":"","ucode":"5DD5FEF3B55F16","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585899,"discussion_content":"鄙人比较愚昧，道友可否明说？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661886907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544268,"ip_address":"广东"},"score":585899,"extra":""},{"author":{"id":3094706,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaexL1b8o76RqM4F2PZhWYGxsic2EuFSWWh5IhibqfdjcDzJbhlcag1z0rECfUo0vZREbMyiaW7P8XA/132","nickname":"青储","note":"","ucode":"C52BBD98B68501","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1131867,"avatar":"https://static001.geekbang.org/account/avatar/00/11/45/5b/dde3d9fb.jpg","nickname":"在路上","note":"","ucode":"4B88071C52F857","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587679,"discussion_content":"硬干不干吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663215977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":539935,"ip_address":"广东"},"score":587679,"extra":""}]}]},{"had_liked":false,"id":23305,"user_name":"snakorse","can_delete":false,"product_type":"c1","uid":1064887,"ip_address":"","ucode":"0AD727E1F16993","user_header":"https://static001.geekbang.org/account/avatar/00/10/3f/b7/0d8b5431.jpg","comment_is_top":false,"comment_ctime":1536281850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"147565169914","product_id":100015201,"comment_content":"精彩到炸裂！！！","like_count":34},{"had_liked":false,"id":23301,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1536280730,"is_pvip":false,"replies":[{"id":"8439","content":"用kubernetes ，打开GC功能，定时清理","user_name":"作者回复","comment_id":23301,"uid":"1218095","ip_address":"","utype":1,"ctime":1536286202,"user_name_real":"Geek_6ef93d"}],"discussion_count":4,"race_medal":0,"score":"147565168794","product_id":100015201,"comment_content":"请教一个低级的问题，我现在用docker部署，在多次部署以后，会导致磁盘占用空间急剧的增大，老是需要扩容，虽然对不使用的镜像定时做了删除，但还是会出现这样的问题，产生的文件也不敢在生产环境随便进行删除，只能清理镜像和容器。<br>","like_count":34,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423502,"discussion_content":"用kubernetes ，打开GC功能，定时清理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536286202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2179383,"avatar":"https://static001.geekbang.org/account/avatar/00/21/41/37/b89f3d67.jpg","nickname":"我在睡觉","note":"","ucode":"6503B611151D3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334174,"discussion_content":"什么造成了这种磁盘占用持续增长呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607758393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1250580,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/14/21e0807e.jpg","nickname":"gm","note":"","ucode":"0E39AE5BE34E27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2179383,"avatar":"https://static001.geekbang.org/account/avatar/00/21/41/37/b89f3d67.jpg","nickname":"我在睡觉","note":"","ucode":"6503B611151D3C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369585,"discussion_content":"生产新的镜像时，之前的镜像还在","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619086004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":334174,"ip_address":""},"score":369585,"extra":""},{"author":{"id":2179383,"avatar":"https://static001.geekbang.org/account/avatar/00/21/41/37/b89f3d67.jpg","nickname":"我在睡觉","note":"","ucode":"6503B611151D3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1250580,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/14/21e0807e.jpg","nickname":"gm","note":"","ucode":"0E39AE5BE34E27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371521,"discussion_content":"提问者不是说，定期在删除镜像吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619825844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369585,"ip_address":""},"score":371521,"extra":""}]}]},{"had_liked":false,"id":35668,"user_name":"Vinsec","can_delete":false,"product_type":"c1","uid":1227766,"ip_address":"","ucode":"BFD541E05D3AD7","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/f6/af833125.jpg","comment_is_top":false,"comment_ctime":1540734741,"is_pvip":false,"replies":[{"id":"12796","content":"是","user_name":"作者回复","comment_id":35668,"uid":"1218095","ip_address":"","utype":1,"ctime":1540875433,"user_name_real":"Geek_6ef93d"}],"discussion_count":8,"race_medal":0,"score":"143274655509","product_id":100015201,"comment_content":"docker run -ti ubuntu &#47;bin&#47;bash<br>此时会有一个隐式的chroot过程<br>请问这个chroot的过程是将&#47;bin&#47;bash进程的Home目录切换成了&#47;var&#47;lib&#47;docker&#47;aufs&#47;mnt&#47;[id]了么？<br><br>","like_count":33,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427618,"discussion_content":"是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540875433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1945368,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLteQvbpia3wbNMSVCBZlKkTr6kiaYdGclYibBU7cBH0NKicZTiaPeTBv2Dy10Taq9LOvzrB0kzUVCA8xQ/132","nickname":"杨f","note":"","ucode":"3CB7888D86A639","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555977,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647155273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2253329,"avatar":"","nickname":"Geek_dc2071","note":"","ucode":"C41438B17E79D7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547691,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642828102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1088716,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/cc/b640e578.jpg","nickname":"大卫高","note":"","ucode":"0B12DF6AF08E7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536955,"discussion_content":"这个很有启发性，一种原来如此的感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638922083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1690614,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cb/f6/b28c351c.jpg","nickname":"Horizon","note":"","ucode":"4DF87A3F31199E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390483,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629858538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1602866,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/32/781fc162.jpg","nickname":"有bear来","note":"","ucode":"D6764934D46EDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389953,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629535340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1442097,"avatar":"https://static001.geekbang.org/account/avatar/00/16/01/31/4d116521.jpg","nickname":"鹏鹏哥","note":"","ucode":"28452AB202EA9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381649,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625152253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102560,"discussion_content":"mark，这里比较有用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577353766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23343,"user_name":"long904","can_delete":false,"product_type":"c1","uid":1000033,"ip_address":"","ucode":"88BD5116816722","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/61/78d5d09a.jpg","comment_is_top":false,"comment_ctime":1536290480,"is_pvip":false,"replies":[{"id":"8456","content":"如果你的应用依赖内核版本，那果断跨不了平台，除非再创建对应的虚拟机出来做宿主。说跨平台其实是因为大多数应用没有内核依赖。windows系统会给容器外面套一个vm，所以也能运行linux容器。","user_name":"作者回复","comment_id":23343,"uid":"1218095","ip_address":"","utype":1,"ctime":1536292858,"user_name_real":"Geek_6ef93d"}],"discussion_count":3,"race_medal":0,"score":"113205440176","product_id":100015201,"comment_content":"请教老师，以我理解容器镜像依赖宿主机内核。那么如果镜像是基于Linux的系统制作而成（线上运行环境就是Linux），那么如果在Windows系统上它是不能运行这个镜像了，对吗？甚至目标机器如果内核跟镜像制作不同（比如centos5和centos7）如果是，请问该怎么理解容器跨平台部署一说？谢谢。","like_count":26,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423523,"discussion_content":"如果你的应用依赖内核版本，那果断跨不了平台，除非再创建对应的虚拟机出来做宿主。说跨平台其实是因为大多数应用没有内核依赖。windows系统会给容器外面套一个vm，所以也能运行linux容器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536292858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1717785,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/CccT5NgKlZRlTL8f4BsIDqfJ8tRkHPyaR3SXnfgU7acxo2OO7vGzNWjfQBuFnbPPzVYH8Lh49f1jyicuuRSndcA/132","nickname":"Md3zed","note":"","ucode":"83EAD89468ED7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336115,"discussion_content":"这个问题我也蛮疑惑的，如果rootfs依赖linux内核，那不是意味着在不同内核版本制作的容器镜像也依赖宿主机是内核版本，另外如果是mac os那是不是和windows一样在docker上也套了一个vm?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608481700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1008350,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/de/57cbb843.jpg","nickname":"billow","note":"","ucode":"6D58AEA45BA6A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1717785,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/CccT5NgKlZRlTL8f4BsIDqfJ8tRkHPyaR3SXnfgU7acxo2OO7vGzNWjfQBuFnbPPzVYH8Lh49f1jyicuuRSndcA/132","nickname":"Md3zed","note":"","ucode":"83EAD89468ED7B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584347,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660783530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336115,"ip_address":"湖北"},"score":584347,"extra":""}]}]},{"had_liked":false,"id":89912,"user_name":"Dylan_","can_delete":false,"product_type":"c1","uid":1464927,"ip_address":"","ucode":"3186BB4EDB8DAB","user_header":"https://static001.geekbang.org/account/avatar/00/16/5a/5f/68cb4387.jpg","comment_is_top":false,"comment_ctime":1556328861,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"104635543965","product_id":100015201,"comment_content":"既然容器的 rootfs（比如，Ubuntu 镜像），是以只读方式挂载的，那么又如何在容器里修改 Ubuntu 镜像的内容呢？（提示：Copy-on-Write）<br>--------<br>Copy-On-Write机制简称COW，是程序开发中比较常用的一种优化策略。在复制一个对象时,并不是真正的把原先的对象复制到内存的另外一个位置上，而是在新对象的内存映射表中设置一个指针，指向源对象的位置，并把那块内存的Copy-On-Write位设置为1，这是一种延时懒惰策略。<br>对于容器，有一个场景是我们经常碰到的，我们从宿主机单独挂载了一个文件到容器里，然后修改宿主机的文件，容器里的文件却没生效。原因是，编辑过程中将变更写入新文件， 保存时再将备份文件替换原文件，此时会导致文件的inode发生变化。而docker 挂载文件时，并不是挂载了某个文件的路径，而是实打实的挂载了对应的文件，即挂载了inode文件。","like_count":24,"discussions":[{"author":{"id":1705398,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epe5FHOGaqylibG286CLun69mztcvjg76DC2UcwrMU1tghYYzC2FoBzu7EiaDB8J6pj0ia5uSUj9Gs9Q/132","nickname":"bleem","note":"","ucode":"BBD719579A0C3F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362497,"discussion_content":"docker只挂载inode，容器外部的文件改变之后，容器内也跟着改变，那这种问题怎么解决呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616948019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115284,"user_name":"Geek_2b5c15","can_delete":false,"product_type":"c1","uid":1607950,"ip_address":"","ucode":"E320C0F61FAC27","user_header":"","comment_is_top":false,"comment_ctime":1563524069,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"78872935397","product_id":100015201,"comment_content":"docker 18.09.06 似乎将aufs替换成了overlayFS，导致 没有 &#47;var&#47;lib&#47;docker&#47;aufs&#47;mnt 目录。","like_count":18,"discussions":[{"author":{"id":1261493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3f/b5/5fe77e16.jpg","nickname":"不经意间","note":"","ucode":"C39D98697ACB8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391744,"discussion_content":"宿主机是什么系统，什么版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630599106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105387,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/eb/80f9d212.jpg","nickname":"lttzzlll","note":"","ucode":"FA160F7C02ABAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389062,"discussion_content":"是的。我说怎么找不到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629106370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65762,"user_name":"Chaos","can_delete":false,"product_type":"c1","uid":1014962,"ip_address":"","ucode":"7CDC32065ABA78","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/b2/d2f03436.jpg","comment_is_top":false,"comment_ctime":1549630206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"70269106942","product_id":100015201,"comment_content":"读完这篇，对 Docker 创新的增量分层 rootfs 设计有了新的认识，也知道了背后的原因：这种方式打包应用可以更彻底的把依赖打包进去，且分发能保持一致性。镜像以前只停留在会用，知道大概是如何工作的，层越多镜像体积就越大。<br><br>虚拟机的虚拟磁盘，若是动态分配的话，未使用的空间是不占 host 存储空间的，可以 zero out 之后导出来瘦身。比如 VirtualBox 的 dynamic allocation 导出没有使用的空间是不占磁盘空间的。所以这句「而相比之下，传统虚拟机的镜像大多是一个磁盘的“快照”，磁盘有多大，镜像就有多大」不严谨，应该是虚拟机的虚拟磁盘容量被占用了多少，镜像就有多大。虚拟机镜像，可以理解为把虚拟磁盘所在的 block device 直接 dd 到一个文件。<br><br>Vagrant base box 有些也可以做得很小，不过终究没法做到和 Docker 镜像那样分多层，然后复用其中的某些层来得轻薄高效。<br><br>读了一下 Docker 官方的文档，现在默认用 overlay2 作为 storage driver 主要是性能更好。而且 OverlayFS 已经进入 Linux 内核主线，而 AUFS 拒绝，呵呵。 aufs 的问题是支持的层多，而这样会影响读写性能，这个和虚拟化中虚拟磁盘 copy-on-write 方式创建的快照数量多影响虚拟机读写性能是类似的道理。","like_count":16},{"had_liked":false,"id":24064,"user_name":"王由华","can_delete":false,"product_type":"c1","uid":1080681,"ip_address":"","ucode":"355CC4668A4921","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/69/21b4b5cb.jpg","comment_is_top":false,"comment_ctime":1536798210,"is_pvip":false,"replies":[{"id":"8828","content":"哈哈，是会膨胀啦。可以压缩镜像，做法网上可以搜到。","user_name":"作者回复","comment_id":24064,"uid":"1218095","ip_address":"","utype":1,"ctime":1536821466,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"70256274946","product_id":100015201,"comment_content":"被whiteout遮挡的文件会被清除吗？用什么命令清除的？否则镜像不是就膨胀了。","like_count":16,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423826,"discussion_content":"哈哈，是会膨胀啦。可以压缩镜像，做法网上可以搜到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536821466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23543,"user_name":"Kaer","can_delete":false,"product_type":"c1","uid":1113558,"ip_address":"","ucode":"1BD233D3FAC2B1","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/d6/71e1cc29.jpg","comment_is_top":false,"comment_ctime":1536474781,"is_pvip":false,"replies":[{"id":"8583","content":"重新打包也解决不了问题，你的宿主机必须跟开发环境一致才行。linuxkit这个工具就是干这个的。","user_name":"作者回复","comment_id":23543,"uid":"1218095","ip_address":"","utype":1,"ctime":1536562547,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"70255951517","product_id":100015201,"comment_content":"老师你好，如果依赖了内核运行的应用，必须得重新在跟宿主机相同内核下重新打包镜像才行吗？有没有完美解决方案：比如在镜像打包的时候，打一个兼容内核的补丁。","like_count":16,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423608,"discussion_content":"重新打包也解决不了问题，你的宿主机必须跟开发环境一致才行。linuxkit这个工具就是干这个的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536562547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23531,"user_name":"Hunsbiously","can_delete":false,"product_type":"c1","uid":1008477,"ip_address":"","ucode":"300A5168EC94A6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/5d/b523af2d.jpg","comment_is_top":false,"comment_ctime":1536468326,"is_pvip":false,"replies":[{"id":"8584","content":"好","user_name":"作者回复","comment_id":23531,"uid":"1218095","ip_address":"","utype":1,"ctime":1536562566,"user_name_real":"Geek_6ef93d"}],"discussion_count":5,"race_medal":0,"score":"65960977766","product_id":100015201,"comment_content":"你好，这个视频是我看到的一个很好的视频，希望老师能够找机会，详细分析下.<br>https:&#47;&#47;m.youtube.com&#47;watch?v=90kZRyPcRZw#fauxfullscreen","like_count":15,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423603,"discussion_content":"好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536562566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1156153,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a4/39/a3e452cd.jpg","nickname":"a115","note":"","ucode":"0C733004371E29","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558119,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648098071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1088716,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/cc/b640e578.jpg","nickname":"大卫高","note":"","ucode":"0B12DF6AF08E7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536956,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638922207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1690614,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cb/f6/b28c351c.jpg","nickname":"Horizon","note":"","ucode":"4DF87A3F31199E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390482,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629858532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1442097,"avatar":"https://static001.geekbang.org/account/avatar/00/16/01/31/4d116521.jpg","nickname":"鹏鹏哥","note":"","ucode":"28452AB202EA9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381650,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625152263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23320,"user_name":"Regular","can_delete":false,"product_type":"c1","uid":1025998,"ip_address":"","ucode":"80B3EA083534CA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/ce/7ee0d672.jpg","comment_is_top":false,"comment_ctime":1536283935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"61665826079","product_id":100015201,"comment_content":"在容器中修改文件时，Docker会从上到下依次在各镜像层中查找比文件。找到后，会把此文件复制到容器层（可读写层），然后修改。这就是 Copy on Write.","like_count":14},{"had_liked":false,"id":136758,"user_name":"sam700000","can_delete":false,"product_type":"c1","uid":1069133,"ip_address":"","ucode":"C2ABDDC56B2D50","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/4d/db91e218.jpg","comment_is_top":false,"comment_ctime":1569503706,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"57404078554","product_id":100015201,"comment_content":"读了这篇之后，去看了左耳朵耗子大师的 DOCKER基础技术：LINUX NAMESPACE 上下两篇，再去看官档关于overlay2的运行原理，还有linux mount技术的相关文章<br>对容器技术的了解又加深了，真心感谢写技术文章的大佬们","like_count":13},{"had_liked":false,"id":23625,"user_name":"陈华","can_delete":false,"product_type":"c1","uid":1082730,"ip_address":"","ucode":"3AF9E8EB39E507","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKtS26SJpSF7JLu9pusGsy1Qln0NdQg1eV2YKOJxpX2QXaBuuyXMqZY3fm0rhzKwsqN5aa6CVNOQQ/132","comment_is_top":false,"comment_ctime":1536551168,"is_pvip":false,"replies":[{"id":"8580","content":"首先，docker镜像比较小不只是因为没有内核，内核本身其实不大。大小的差异主要因为我们平常看见的虚拟机镜像实际上是整个磁盘的快照。其次，一般情况下，内核放下安装盘里，解压到磁盘上，加载到内存中。有兴趣可以读这里：https:&#47;&#47;blog.csdn.net&#47;gatieme&#47;article&#47;details&#47;50914250","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536562384,"ip_address":"","comment_id":23625,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53076158720","product_id":100015201,"comment_content":"老师说没有内核所以rootfs会比较小，请问一般安装的linux系统内核文件在哪里存放呢？，","like_count":12,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423644,"discussion_content":"首先，docker镜像比较小不只是因为没有内核，内核本身其实不大。大小的差异主要因为我们平常看见的虚拟机镜像实际上是整个磁盘的快照。其次，一般情况下，内核放下安装盘里，解压到磁盘上，加载到内存中。有兴趣可以读这里：https://blog.csdn.net/gatieme/article/details/50914250","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536562384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23699,"user_name":"shupian418","can_delete":false,"product_type":"c1","uid":1147915,"ip_address":"","ucode":"2B5A9574AA0C6F","user_header":"","comment_is_top":false,"comment_ctime":1536592492,"is_pvip":false,"replies":[{"id":"8712","content":"得看看报错，八成是依赖之类的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536669399,"ip_address":"","comment_id":23699,"utype":1}],"discussion_count":6,"race_medal":0,"score":"48781232748","product_id":100015201,"comment_content":"ns.c 启动失败 <br>Parent - start a container<br>Parent - container stopped<br>","like_count":11,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423684,"discussion_content":"得看看报错，八成是依赖之类的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536669399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044175,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOBwR7MCVqwZbPA5RQ2mjUjd571jUXUcBCE7lY5vSMibWn8D5S4PzDZMaAhRPdnRBqYbVOBTJibhJg/132","nickname":"ヾ(◍°∇°◍)ﾉﾞ","note":"","ucode":"89545632BDA56E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":142,"discussion_content":"权限问题也可能, 需要root权限","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1561172350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1770905,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/05/99/0acc9dbd.jpg","nickname":"陈宏星","note":"","ucode":"9E4BB63276A3EF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349053,"discussion_content":"sudo ./ns","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612861996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1354151,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a9/a7/de3ee890.jpg","nickname":"拉我吃","note":"","ucode":"8BC9C44FE00097","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1770905,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/05/99/0acc9dbd.jpg","nickname":"陈宏星","note":"","ucode":"9E4BB63276A3EF","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":376581,"discussion_content":"救星","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622200488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349053,"ip_address":""},"score":376581,"extra":""}]},{"author":{"id":2509433,"avatar":"https://static001.geekbang.org/account/avatar/00/26/4a/79/8b92731d.jpg","nickname":"Xcxing","note":"","ucode":"F9131BE3BE50CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588136,"discussion_content":"sudo执行还是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663569971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178689,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fc/41/bc18ff9f.jpg","nickname":"木心","note":"","ucode":"955588CA0BBD33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10525,"discussion_content":"试着打开coolshell 照着做就行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568294106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23335,"user_name":"droid","can_delete":false,"product_type":"c1","uid":1219053,"ip_address":"","ucode":"EFAC7FEE027E25","user_header":"https://static001.geekbang.org/account/avatar/00/12/99/ed/ba309aad.jpg","comment_is_top":false,"comment_ctime":1536288101,"is_pvip":false,"replies":[{"id":"8457","content":"看得这么细，当然要表扬才是。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536292877,"ip_address":"","comment_id":23335,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48780928357","product_id":100015201,"comment_content":"代码中的&quot;container_stack+STACK_SIZE&quot;一开始没看明白，后来发现是栈，要传栈底指针。大家见笑。","like_count":11,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423521,"discussion_content":"看得这么细，当然要表扬才是。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536292877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30499,"user_name":"凯文1985","can_delete":false,"product_type":"c1","uid":1036921,"ip_address":"","ucode":"9A42344649072B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d2/79/0a432fde.jpg","comment_is_top":false,"comment_ctime":1538894388,"is_pvip":true,"replies":[{"id":"11022","content":"修改当然是可读写层。提交后变成只读层的最上面一层。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538953545,"ip_address":"","comment_id":30499,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44488567348","product_id":100015201,"comment_content":"如果对docker原始镜像进行修改 比如在ubuntu镜像上安装Java 那么增加的层是在最下面的只读层上吗<br>","like_count":10,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426025,"discussion_content":"修改当然是可读写层。提交后变成只读层的最上面一层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538953545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3029424,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epq2AfJ26y9tHb6z7kyRyF9vdFsEYcibgwZKZNkwaHpLLLLNyjT4NeqCnYjcdOOibN1OwG27X0ede6g/132","nickname":"HIM","note":"","ucode":"3EB56F684CB343","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":589572,"discussion_content":"&#34;所以，最上面这个可读写层的作用，就是专门用来存放你修改 rootfs 后产生的增量，无论是增、删、改，都发生在这里。而当我们使用完了这个被修改过的容器之后，还可以使用 docker commit 和 push 指令，保存这个被修改过的可读写层，并上传到 Docker Hub 上，供其他人使用；而与此同时，原先的只读层里的内容则不会有任何变化。这，就是增量 rootfs 的好处。&#34;\n所以这个”原先的只读层里的内容则不会有任何变化“ 应该理解为 原本已有的只读层不会变，并再此基础上新增层， 而不是整个只读层不会变吗？\n即commit后就会将读写层的内容合并到只读层的最上层吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665132988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":426025,"ip_address":"广东"},"score":589572,"extra":""}]}]},{"had_liked":false,"id":23370,"user_name":"silencedoctor","can_delete":false,"product_type":"c1","uid":1109673,"ip_address":"","ucode":"5BED092F5791D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/a9/971234c5.jpg","comment_is_top":false,"comment_ctime":1536310313,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"44485983273","product_id":100015201,"comment_content":"老师你好我想请问一下  我的系统是Ubuntu16.04.4  docker是18.06.0   &#47;var&#47;lib&#47;docker下并没有aufs这个文件夹  执行docker image他又确实分了层这是什么原因呢","like_count":10,"discussions":[{"author":{"id":1962270,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f1/1e/92bd287c.jpg","nickname":"斐语","note":"","ucode":"9649CC6AE6399C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382588,"discussion_content":"新版本默认Storage Driver是overlay2","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625641603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350738,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9c/52/8a4902ce.jpg","nickname":"gggggggb","note":"","ucode":"4DA862E45C331D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221287,"discussion_content":"后面的版本默认使用的是unionFS是overlay2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585998951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260026,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","nickname":"安排","note":"","ucode":"F78CFA9624CAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102552,"discussion_content":"那估计使用的不是aufs这种联合文件系统吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577353137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137785,"user_name":"Jepsenwan","can_delete":false,"product_type":"c1","uid":1220569,"ip_address":"","ucode":"FEED052E0C10F5","user_header":"","comment_is_top":false,"comment_ctime":1569848200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40224553864","product_id":100015201,"comment_content":"run 容器的时候 使用--dns 来指定dns 服务器覆盖init层的&#47;etc&#47;resolv.conf","like_count":9},{"had_liked":false,"id":23817,"user_name":"从一路","can_delete":false,"product_type":"c1","uid":1219931,"ip_address":"","ucode":"4CA6DF6455E4B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/5b/89819320.jpg","comment_is_top":false,"comment_ctime":1536671137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40191376801","product_id":100015201,"comment_content":"同样遇到 .&#47;ns 启动失败 <br>Parent - start a container<br>Parent - container stopped<br><br>我切换到root用户就好了","like_count":9},{"had_liked":false,"id":23498,"user_name":"初学者","can_delete":false,"product_type":"c1","uid":1042833,"ip_address":"","ucode":"9471A905D07CE1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e9/91/4219d305.jpg","comment_is_top":false,"comment_ctime":1536423674,"is_pvip":true,"replies":[{"id":"8585","content":"当然是docker引擎做的，在容器启动之前就做好这个层，和其他层一起挂载好。然后容器才会创建。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536562678,"ip_address":"","comment_id":23498,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40191129338","product_id":100015201,"comment_content":"对镜像中的init层不是很理解，这一层中的文件的修改到底由谁以及什么时候触发的，如果是在容器启动阶段，修改的结果不是应该放到容器读写层吗？","like_count":9,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423590,"discussion_content":"当然是docker引擎做的，在容器启动之前就做好这个层，和其他层一起挂载好。然后容器才会创建。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536562678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1496652,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/1LBKicKhg0LLB9pHo0sqXjibuvAe9bxQ2WtiaF1TJ5criaIe0CGZD3JO6o6PLR6jVG19xCDg1cW9K489BemaDau5Tg/132","nickname":"Geek_0107","note":"","ucode":"AE217F2E8E8ACB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261891,"discussion_content":"容器启动后vi改变hosts文件，会保存到读写层，还是init层，如果是读写层的话，commit是不是会一起提交，但init层是只读挂载，应该不会保存到init层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589020017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100062,"user_name":"jiakon","can_delete":false,"product_type":"c1","uid":1021219,"ip_address":"","ucode":"D99164D760715B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/95/23/c3eeda8b.jpg","comment_is_top":false,"comment_ctime":1559429490,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35919167858","product_id":100015201,"comment_content":"list=&quot;$(ldd &#47;bin&#47;ls | egrep -o &#39;&#47;lib.*\\.[0-9]&#39;)&quot; 这个错了，应该是bash。否则下面的chroot $HOME&#47;test &#47;bin&#47;bash会报依赖库不存在","like_count":8},{"had_liked":false,"id":53525,"user_name":"Geek_dbdb0d","can_delete":false,"product_type":"c1","uid":1082236,"ip_address":"","ucode":"BDF3A73C97E7DF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKkIlG1QR7odsuy5Qzu4pf7ptHPsthtFTyjMygzWibVLDLSjehJkXLFh2ZSamYsibwWLHLbv2dI64A/132","comment_is_top":false,"comment_ctime":1545662965,"is_pvip":false,"replies":[{"id":"19441","content":"不能。这就是容器不如虚拟机的缺点。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1545695171,"ip_address":"","comment_id":53525,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35905401333","product_id":100015201,"comment_content":"你好，既然镜像只包含了一个操作系统的文件和目录，同一个镜像怎么保证在不同内核的宿主机中都能正确的工作？","like_count":8,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434168,"discussion_content":"不能。这就是容器不如虚拟机的缺点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545695171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374164,"discussion_content":"按理说image, 不强依赖于Linux kernel啊。否则这么多Linux kernel，岂不是对应的Linux kernel都得弄一个image？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621046455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2254917,"avatar":"https://static001.geekbang.org/account/avatar/00/22/68/45/ddf89612.jpg","nickname":"bestgopher","note":"","ucode":"D89735C8CA9C6E","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":577120,"discussion_content":"你在说什么？镜像不打包kernel","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655942011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374164,"ip_address":""},"score":577120,"extra":""}]}]},{"had_liked":false,"id":31439,"user_name":"帅","can_delete":false,"product_type":"c1","uid":1207367,"ip_address":"","ucode":"DB792F56C26429","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/47/57b6c4e8.jpg","comment_is_top":false,"comment_ctime":1539180238,"is_pvip":false,"replies":[{"id":"11301","content":"没错","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539216648,"ip_address":"","comment_id":31439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35898918606","product_id":100015201,"comment_content":"老师好，请问，如果我在ubuntu:16.04的基础镜像上加了自己的东西，然后build新的镜像，这时候其他人用我这个新镜像的时候，是不是只读层就包含了我添加的东东？","like_count":8,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426338,"discussion_content":"没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539216648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30065,"user_name":"李博越","can_delete":false,"product_type":"c1","uid":1027808,"ip_address":"","ucode":"E6CDA0CDC0BCE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/e0/3e636955.jpg","comment_is_top":false,"comment_ctime":1538643244,"is_pvip":false,"replies":[{"id":"10837","content":"这个例子不正好说明了容器镜像只有文件没有内核么？你通过proc文件不管改了啥，必然都影响的是宿主机内核啊。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538659666,"ip_address":"","comment_id":30065,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35898381612","product_id":100015201,"comment_content":"既然容器里的rootfs 只是一个操作系统所包含的文件、配置和目录，那为啥我在dockerfile中配置keepalive参数‘&#47;proc&#47;sys&#47;net&#47;ipv4&#47;tcp_keepalive_time’不生效呢？为啥在容器宿主机上配置才生效？<br>查询了下官方文档，是因为这个配置是kernel层面的所以必须修改宿主机吗？但是这个配置是在&#47;proc下的呀？<br>参考文档：http:&#47;&#47;tldp.org&#47;HOWTO&#47;TCP-Keepalive-HOWTO&#47;usingkeepalive.html","like_count":8,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425841,"discussion_content":"这个例子不正好说明了容器镜像只有文件没有内核么？你通过proc文件不管改了啥，必然都影响的是宿主机内核啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538659666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23556,"user_name":"Joe Black","can_delete":false,"product_type":"c1","uid":1052528,"ip_address":"","ucode":"21FE222A286445","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/70/c8680841.jpg","comment_is_top":false,"comment_ctime":1536483803,"is_pvip":false,"replies":[{"id":"8582","content":"是的。或者，应用依赖某个特定内核版本才有的特性。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536562457,"ip_address":"","comment_id":23556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35896222171","product_id":100015201,"comment_content":"请问所谓的“应用依赖内核”是指程序直接进行内核调用，而不是仅仅使用c运行库，可以这样理解吗？","like_count":8,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423614,"discussion_content":"是的。或者，应用依赖某个特定内核版本才有的特性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536562457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181734,"user_name":"辉晖","can_delete":false,"product_type":"c1","uid":1574062,"ip_address":"","ucode":"E5EC033EE4952B","user_header":"https://static001.geekbang.org/account/avatar/00/18/04/ae/0118c132.jpg","comment_is_top":false,"comment_ctime":1582625596,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31647396668","product_id":100015201,"comment_content":"docker commit后，原本的可读写层，就加到新镜像的只读层了吗","like_count":7,"discussions":[{"author":{"id":1735152,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/79/f0/19c6ae1c.jpg","nickname":"Geek_7324de","note":"","ucode":"B1C2CB60D75FB5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308119,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600849228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52949,"user_name":"Yuhui","can_delete":false,"product_type":"c1","uid":1110470,"ip_address":"","ucode":"811933B016179F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/c6/6f39a982.jpg","comment_is_top":false,"comment_ctime":1545557125,"is_pvip":false,"replies":[{"id":"19225","content":"有的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1545578270,"ip_address":"","comment_id":52949,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31610328197","product_id":100015201,"comment_content":"请教一下老师，aufs等支持联合挂载的文件系统对层数有限制吗？谢谢！","like_count":7,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434003,"discussion_content":"有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545578270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120005,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1564753236,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27334557012","product_id":100015201,"comment_content":"rootfs只是一个文件系统，没有内核，如果你的应用调用了一个高版本的内核系统调用，即使打包成了镜像，也无法在低版本的内核上运行，所以镜像还是和操作系统有一定的绑定关系，不知道理解的是否正确","like_count":6},{"had_liked":false,"id":96243,"user_name":"lizhaochao","can_delete":false,"product_type":"c1","uid":1170705,"ip_address":"","ucode":"1357C60BB567B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/11/04ebee55.jpg","comment_is_top":false,"comment_ctime":1558362666,"is_pvip":false,"replies":[{"id":"36298","content":"见后面的容器设计模式部分","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1559619190,"ip_address":"","comment_id":96243,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27328166442","product_id":100015201,"comment_content":"应用程序的代码 是打包到镜像里的 还是挂载到docker里的 持续集成是打包镜像 还是cp文件到目录 持续发布涉及打包镜像吗","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450788,"discussion_content":"见后面的容器设计模式部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559619190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":27701,"user_name":"Leon廖","can_delete":false,"product_type":"c1","uid":1018550,"ip_address":"","ucode":"3BB340F2C8F00D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pftx8PrTibZqu39dxkicUdrXbaMe6v4rcoTzOoF9Z04OibIIDgbpRIrDS9lYBYc97QAscGp77vU6nN5uxRiceRER3Q/132","comment_is_top":false,"comment_ctime":1537930614,"is_pvip":false,"replies":[{"id":"9976","content":"对，压缩的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537937847,"ip_address":"","comment_id":27701,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27307734390","product_id":100015201,"comment_content":"image展开后是一系列目录，但push&#47;pull在网络上传送的image是tar格式的？<br>就好像Java的jar其实是zip格式的","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425010,"discussion_content":"对，压缩的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537937847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25418,"user_name":"liuy1226","can_delete":false,"product_type":"c1","uid":1010724,"ip_address":"","ucode":"676316D87C07AD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/24/f2dfbbec.jpg","comment_is_top":false,"comment_ctime":1537325549,"is_pvip":true,"replies":[{"id":"9242","content":"当然是 图","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537334641,"ip_address":"","comment_id":25418,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27307129325","product_id":100015201,"comment_content":"老师您好，我们知道docker镜像采用了镜像共享技术减少了镜像存储空间的大小，现在的问题是docker镜像这种实现的数据结构模型是什么，比如多个镜像共享了一个基础镜像。","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424297,"discussion_content":"当然是 图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537334641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105387,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/eb/80f9d212.jpg","nickname":"lttzzlll","note":"","ucode":"FA160F7C02ABAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389066,"discussion_content":"拓扑排序就能得到依赖关系吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629106711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34006,"user_name":"旭","can_delete":false,"product_type":"c1","uid":1263368,"ip_address":"","ucode":"1AC4D6A6F2D2A1","user_header":"https://static001.geekbang.org/account/avatar/00/13/47/08/985632a6.jpg","comment_is_top":false,"comment_ctime":1539945809,"is_pvip":false,"replies":[{"id":"12183","content":"占用比已经很高了，应该超过阈值了。kubelet有个image gc的参数","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540026462,"ip_address":"","comment_id":34006,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23014782289","product_id":100015201,"comment_content":"老师，问题是这样的，只要我这个镜像没有运行的容器，这个镜像过段时间就会自动被删掉，我用docker images 看不到那个镜像了 。磁盘还有100多G，已占用96%。老师怎么继续再评论再评论","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427100,"discussion_content":"占用比已经很高了，应该超过阈值了。kubelet有个image gc的参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540026462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374166,"discussion_content":"这个GC的参数默认是开启的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621046741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23891,"user_name":"大麦08","can_delete":false,"product_type":"c1","uid":1194974,"ip_address":"","ucode":"3BB6D954F03F61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eppE3Zu7Gspiar34LSAg5R3qGukw9qJnmGU54FokyUGmwCtEcUnrwEIYXDPrhAJMvtjZvgaYjC3bNA/132","comment_is_top":false,"comment_ctime":1536714721,"is_pvip":false,"replies":[{"id":"8737","content":"centos默认用的一般是devicemapper","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536720354,"ip_address":"","comment_id":23891,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23011551201","product_id":100015201,"comment_content":"请问老师，在centos里aufs存放在哪里啊","like_count":5,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423769,"discussion_content":"centos默认用的一般是devicemapper","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536720354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155062,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9f/f6/7431e82e.jpg","nickname":"xueerfei007","note":"","ucode":"EF3FE821E5B54A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14709,"discussion_content":"我的机器上在/var/lib/docker/overlay2","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568777774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23401,"user_name":"linbo","can_delete":false,"product_type":"c1","uid":1111620,"ip_address":"","ucode":"2E230245E24F5B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/44/af862cf8.jpg","comment_is_top":false,"comment_ctime":1536330410,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23011166890","product_id":100015201,"comment_content":"为啥我在宿主机上能看到mount的内容呢","like_count":5,"discussions":[{"author":{"id":1113946,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/5a/67b02644.jpg","nickname":"Rainbow","note":"","ucode":"6F775B38D3BFB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289592,"discussion_content":"实际上，大家自己装的虚拟机，或者云上的虚拟机的根目录，很多都是以share方式的挂载的。这时候，你在容器里做mount也会继承share方式。这样就会把容器内挂载传播到宿主机上。解决这个问题，你可以在重新挂载/tmp之前，在容器内先执行一句：mount(“”, “/“, NULL, MS_PRIVATE, “”) 这样，容器内的根目录就是private挂载的了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594139812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155062,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9f/f6/7431e82e.jpg","nickname":"xueerfei007","note":"","ucode":"EF3FE821E5B54A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":14708,"discussion_content":"我也能看到，不知为何","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568777739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217453,"user_name":"沙里飞","can_delete":false,"product_type":"c1","uid":2005433,"ip_address":"","ucode":"E68FE314029A3A","user_header":"https://static001.geekbang.org/account/avatar/00/1e/99/b9/96261f86.jpg","comment_is_top":false,"comment_ctime":1589507177,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18769376361","product_id":100015201,"comment_content":"测试ns程序的时候，发现需要使用sudo或者设置CAP_SYS_ADMIN才能够运行。<br><br>CLONE_NEWNS (since Linux 2.4.19)<br><br>Only a privileged process (one having the CAP_SYS_ADMIN capability) may specify the CLONE_NEWNS flag. It is not permitted to specify both CLONE_NEWNS and CLONE_FS in the same clone() call.","like_count":4},{"had_liked":false,"id":23324,"user_name":"xianhai","can_delete":false,"product_type":"c1","uid":1073505,"ip_address":"","ucode":"906578663CEB3E","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/61/677e8f92.jpg","comment_is_top":false,"comment_ctime":1536286269,"is_pvip":false,"replies":[{"id":"8449","content":"就是network namespace啊","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536289609,"ip_address":"","comment_id":23324,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18716155453","product_id":100015201,"comment_content":"docker占用的port和宿主机的port互不干扰，docker是怎么实现port space独立的？","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423513,"discussion_content":"就是network namespace啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536289609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186152,"user_name":"MrVito","can_delete":false,"product_type":"c1","uid":1252169,"ip_address":"","ucode":"716FF6F8871706","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/49/ddefc656.jpg","comment_is_top":false,"comment_ctime":1583767035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14468668923","product_id":100015201,"comment_content":"pivot_root主要是把整个系统切换到一个新的root目录，而移除对之前root文件系统的依赖，这样你就能够umount原先的root文件系统。而chroot是针对某个进程，而系统的其它部分依旧运行于老的root目录。","like_count":3},{"had_liked":false,"id":76539,"user_name":"饭粒","can_delete":false,"product_type":"c1","uid":1153455,"ip_address":"","ucode":"4C3220B0D43997","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","comment_is_top":false,"comment_ctime":1552630173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14437532061","product_id":100015201,"comment_content":"看了下评论我的环境（CentOS Linux release 7.4.1708，Docker 18.06.0）应该是 overlayfs  做的UnionFS。<br>```<br># cat &#47;proc&#47;mounts | grep overlay<br>overlay &#47;var&#47;lib&#47;docker&#47;overlay2&#47;599452f1096a2f501d38c7acbc494f33e3eb0f0c536072e0c977e9d76acb77eb&#47;merged overlay rw,seclabel,relatime,lowerdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;U7645UABO6TGYLG6JNNLOCGBQ3:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;M4V6AHOOKS5Q4BFUXKALQU72EX:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;YEYTDYCWS3ZXW4UGDTZPDI3WDV:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;ATB2KV727RQ2YKHOIS55RS27OD:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;KSIKWNJ2GA5EAMYJ2IJTY2ASOT,upperdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;599452f1096a2f501d38c7acbc494f33e3eb0f0c536072e0c977e9d76acb77eb&#47;diff,workdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;599452f1096a2f501d38c7acbc494f33e3eb0f0c536072e0c977e9d76acb77eb&#47;work 0 0<br><br># ls &#47;var&#47;lib&#47;docker&#47;overlay2&#47;599452f1096a2f501d38c7acbc494f33e3eb0f0c536072e0c977e9d76acb77eb&#47;merged&#47;<br>bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var<br>```<br>","like_count":3},{"had_liked":false,"id":57364,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1546764428,"is_pvip":false,"replies":[{"id":"22069","content":"启动参数里指定即可","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1548053867,"ip_address":"","comment_id":57364,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14431666316","product_id":100015201,"comment_content":"老师，现在docker新版本存储驱动都是layerfs的overlay2,我看官方文档也没说明怎么切换到aufs,请指点下怎么搞","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435546,"discussion_content":"启动参数里指定即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548053867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53859,"user_name":"淸曉","can_delete":false,"product_type":"c1","uid":1332899,"ip_address":"","ucode":"6E63DA4E29FE09","user_header":"https://static001.geekbang.org/account/avatar/00/14/56/a3/649d861c.jpg","comment_is_top":false,"comment_ctime":1545742832,"is_pvip":false,"replies":[{"id":"19834","content":"这不就是正常的C语言程序么，编译运行方法文中都给出了","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1545953861,"ip_address":"","comment_id":53859,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14430644720","product_id":100015201,"comment_content":"老师你好！关于文中讲到的程序，我不理解：<br>#define _GNU_SOURCE<br>#include &lt;sys&#47;mount.h&gt; <br>#include &lt;sys&#47;types.h&gt;<br>#include &lt;sys&#47;wait.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;sched.h&gt;<br>#include &lt;signal.h&gt;<br>#include &lt;unistd.h&gt;<br>#define STACK_SIZE (1024 * 1024)<br>static char container_stack[STACK_SIZE];<br>char* const container_args[] = {<br>  &quot;&#47;bin&#47;bash&quot;,<br>  NULL<br>};<br> <br>int container_main(void* arg)<br>{  <br>  printf(&quot;Container - inside the container!\\n&quot;);<br>  execv(container_args[0], container_args);<br>  printf(&quot;Something&#39;s wrong!\\n&quot;);<br>  return 1;<br>}<br> <br>int main()<br>{<br>  printf(&quot;Parent - start a container!\\n&quot;);<br>  int container_pid = clone(container_main, container_stack+STACK_SIZE, CLONE_NEWNS | SIGCHLD , NULL);<br>  waitpid(container_pid, NULL, 0);<br>  printf(&quot;Parent - container stopped!\\n&quot;);<br>  return 0;<br>}<br>像类似于这样的程序是什么文件？是比如.sh，.jar等等。<br>应该在哪里创建，怎么去写，怎么执行，用什么执行？<br>望老师体谅运维小学生的心，给予详细描述！","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434271,"discussion_content":"这不就是正常的C语言程序么，编译运行方法文中都给出了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545953861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52245,"user_name":"Uncroyable","can_delete":false,"product_type":"c1","uid":1168234,"ip_address":"","ucode":"0971B8DF0E190D","user_header":"https://static001.geekbang.org/account/avatar/00/11/d3/6a/925e6711.jpg","comment_is_top":false,"comment_ctime":1545354096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14430255984","product_id":100015201,"comment_content":"楼上遇到ns.c启动失败我也遇到了，是因为我的ubuntu也是docker容器，权限不够吧，clone返回的-1，打印一下errno就知道了。运行的时候docker run加上--privileged参数就好了。","like_count":3},{"had_liked":false,"id":24230,"user_name":"Vinsec","can_delete":false,"product_type":"c1","uid":1227766,"ip_address":"","ucode":"BFD541E05D3AD7","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/f6/af833125.jpg","comment_is_top":false,"comment_ctime":1536855297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14421757185","product_id":100015201,"comment_content":"从基本原理讲起，再引导至容器上的具体应用和改进，深入浅出。我觉得作者不仅技术牛，文笔的逻辑也是非常好的，能在抽象和具体中不停切换而且毫无枯燥之感。好了，夸完了。目前来说，课程完全是值得这个价格的，期待大佬后续知识付费产品。","like_count":3},{"had_liked":false,"id":23332,"user_name":"贾鹏","can_delete":false,"product_type":"c1","uid":1157930,"ip_address":"","ucode":"9213D847AC7313","user_header":"https://static001.geekbang.org/account/avatar/00/11/ab/2a/f3207127.jpg","comment_is_top":false,"comment_ctime":1536287433,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14421189321","product_id":100015201,"comment_content":"问题1，我理解的是每次发生了修改，都会在上层生成一个新的镜像layer，而没有发生修改的内容是不会被记录layer里的。就像dockerfile里面的run指令，每一个run都会生成一个layer(docker history能看到顺序)。并且如果是相关动作，其实是以最后的指令为准的（也就是覆盖掉了前面的)。<br><br>问题2，devicemapper的磁盘使用率低 overlay aufs容器启动快，磁盘使用率高<br><br>都是个人理解，也没有查资料确认，有问题欢迎指正","like_count":3},{"had_liked":false,"id":23316,"user_name":"陶希阳","can_delete":false,"product_type":"c1","uid":1131314,"ip_address":"","ucode":"3BED65B051924C","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/32/0b81fc39.jpg","comment_is_top":false,"comment_ctime":1536283427,"is_pvip":false,"replies":[{"id":"8436","content":"就本专栏里提到的东西，不懂的搜一下，就足够了。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536285994,"ip_address":"","comment_id":23316,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14421185315","product_id":100015201,"comment_content":"linux基础知识有些薄弱，要掌握到什么程度才能理解容器基础知识","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423509,"discussion_content":"就本专栏里提到的东西，不懂的搜一下，就足够了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536285994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135363,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1569138787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10159073379","product_id":100015201,"comment_content":"老师好，我这边docker compose把宿主机上的文件volume映射到容器，然后在容器里通过我们的程序(或者vim)修改这个文件，容器里修改成功了，但宿主机上文件内容未变。而当我把映射文件变为映射该文件的目录，容器的文件变了，宿主机上的文件也变了，这是什么原因？<br>映射文件与映射目录有什么区别吗？","like_count":2},{"had_liked":false,"id":85188,"user_name":"MarkFeng","can_delete":false,"product_type":"c1","uid":1220152,"ip_address":"","ucode":"82968C267E4D21","user_header":"https://static001.geekbang.org/account/avatar/00/12/9e/38/2dbe5f46.jpg","comment_is_top":false,"comment_ctime":1554996638,"is_pvip":false,"replies":[{"id":"31579","content":"其他人并不一定用你最后一个commit的镜像，他们可能使用任何一个commit来做base","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1555697682,"ip_address":"","comment_id":85188,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10144931230","product_id":100015201,"comment_content":"其实不太能理解文章中举的`ubuntu os中装java环境`的例子，因为感觉docker commit其实就是在不断的制作新的base rootfs。只不过说大家可能会基于不同的base rootfs去做新的base rootfs。难道是指因为分层的关系，便于后面的人能够看到每个base rootfs版本的继承关系？","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446588,"discussion_content":"其他人并不一定用你最后一个commit的镜像，他们可能使用任何一个commit来做base","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555697682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65278,"user_name":"Aeins","can_delete":false,"product_type":"c1","uid":1045910,"ip_address":"","ucode":"D5BF220767541D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/96/0cf9f3c7.jpg","comment_is_top":false,"comment_ctime":1549185056,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10139119648","product_id":100015201,"comment_content":"rootfs不包含操作系统内核，是什么意思。<br>那内核存放在哪里","like_count":2,"discussions":[{"author":{"id":1318941,"avatar":"https://static001.geekbang.org/account/avatar/00/14/20/1d/0c1a184c.jpg","nickname":"罗辑思维","note":"","ucode":"D257A06EDE928E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178765,"discussion_content":"使用宿主机的内核。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582195254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52859,"user_name":"Yuhui","can_delete":false,"product_type":"c1","uid":1110470,"ip_address":"","ucode":"811933B016179F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/c6/6f39a982.jpg","comment_is_top":false,"comment_ctime":1545544029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10135478621","product_id":100015201,"comment_content":"shupian418遇到的情况我也遇到了，说到底其实就是要sudo运行这个程序的意思：sudo .&#47;ns就可以了。。。<br>container_id的返回值是-1，如果在代码里加上错误处理立刻真相大白：<br>  int container_pid = clone(container_main, container_stack+STACK_SIZE, CLONE_NEWNS | SIGCHLD , NULL);<br>  if (container_pid == -1)<br>        perror(&quot;clone&quot;);<br><br>依赖路径看起来很简单：<br>calvin@calvin-X502CA:~&#47;ws&#47;kubernetes&#47;demo$ ldd ns<br>\tlinux-vdso.so.1 =&gt;  (0x00007ffc0d74b000)<br>\tlibc.so.6 =&gt; &#47;lib&#47;x86_64-linux-gnu&#47;libc.so.6 (0x00007fceea9fd000)<br>\t&#47;lib64&#47;ld-linux-x86-64.so.2 (0x00007fceeadc7000)<br>readelf -r ns显示：<br>Relocation section &#39;.rela.plt&#39; at offset 0x418 contains 6 entries:<br>  Offset          Info           Type           Sym. Value    Sym. Name + Addend<br>000000601020  000200000007 R_X86_64_JUMP_SLO 0000000000000000 clone@GLIBC_2.2.5 + 0<br>这个估计一般很难出错","like_count":2},{"had_liked":false,"id":42908,"user_name":"青青","can_delete":false,"product_type":"c1","uid":1052740,"ip_address":"","ucode":"772DBA56F95B6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/44/3dc7bd60.jpg","comment_is_top":false,"comment_ctime":1543103617,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133038209","product_id":100015201,"comment_content":"留言区也有好多知识点啊","like_count":2},{"had_liked":false,"id":29139,"user_name":"多霸","can_delete":false,"product_type":"c1","uid":1118935,"ip_address":"","ucode":"C217A93E65CC51","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/d7/e1e36240.jpg","comment_is_top":false,"comment_ctime":1538273920,"is_pvip":true,"replies":[{"id":"10484","content":"确实不到位……容器文件系统跟宿主是完全隔离的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538277878,"ip_address":"","comment_id":29139,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10128208512","product_id":100015201,"comment_content":"老师好，请教一个问题，现在刚开始学习docker，目前从网上下载的镜像都是多层的，并且最底层的我理解一般都是一套完整的操作系统目录结构吧，那如果我自己做镜像，只想运行个简单的可执行文件，想和宿主机的操作系统文件完全保持一致，那是不是可以不打操作系统那层镜像呢？如果可行，这么做的话，镜像就能很小了，但同时是不是也有一些缺点，比如依赖性，安全性上？还理解不到位，所以还请多多指教，谢谢","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425503,"discussion_content":"确实不到位……容器文件系统跟宿主是完全隔离的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538277878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28256,"user_name":"╯梦深处゛","can_delete":false,"product_type":"c1","uid":1063649,"ip_address":"","ucode":"87F0E836B70FD2","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/e1/b6b311cb.jpg","comment_is_top":false,"comment_ctime":1538034872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10127969464","product_id":100015201,"comment_content":"只读层：<br><br>```<br>$ ls &#47;var&#47;lib&#47;docker&#47;aufs&#47;diff&#47;72b0744e06247c7d0...<br>etc sbin usr var<br>$ ls &#47;var&#47;lib&#47;docker&#47;aufs&#47;diff&#47;32e8e20064858c0f2...<br>run<br>$ ls &#47;var&#47;lib&#47;docker&#47;aufs&#47;diff&#47;a524a729adadedb900...<br>bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var<br>```<br><br>理论上只读层上层的会覆盖下层的，但是增量修改应该发生在读写层，那为什么这个代码中会出现上层目录和最下层目录相同的情况？按理来说这些目录不是应该不会变化的吗？有多个的原因是什么？<br>2018-09-27<br> 作者回复<br>名字一样不代表里面的内容一样啊，内容一样也不代表权限一样啊<br><br>2018-09-27<br>------------------------------------------------------------------------------------------------------<br><br>感谢回答！还有个疑问：为什么其他两层都只有一层，而只读层却有5层呢？而5层却可能存在同目录或文件不一样的情况，为什么不采取从最上层往最下层覆盖，最后只保留一层？","like_count":2},{"had_liked":false,"id":26444,"user_name":"祁勇","can_delete":false,"product_type":"c1","uid":1169908,"ip_address":"","ucode":"01146648475309","user_header":"https://static001.geekbang.org/account/avatar/00/11/d9/f4/844fdd25.jpg","comment_is_top":false,"comment_ctime":1537603068,"is_pvip":false,"replies":[{"id":"9665","content":"参考某一篇的思考题","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537688494,"ip_address":"","comment_id":26444,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10127537660","product_id":100015201,"comment_content":"容器启动，看到的内存和宿主机一样大，如何改变这个大小","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424635,"discussion_content":"参考某一篇的思考题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537688494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23285,"user_name":"假装乐","can_delete":false,"product_type":"c1","uid":1093437,"ip_address":"","ucode":"97A7D0A6D93865","user_header":"https://static001.geekbang.org/account/avatar/00/10/af/3d/28b61e6b.jpg","comment_is_top":false,"comment_ctime":1536276224,"is_pvip":false,"replies":[{"id":"8442","content":"再仔细看看whiteout的解释？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536286403,"ip_address":"","comment_id":23285,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10126210816","product_id":100015201,"comment_content":"可读写层增改好理解，删是怎么实现的呢","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423493,"discussion_content":"再仔细看看whiteout的解释？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536286403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350129,"user_name":"one","can_delete":false,"product_type":"c1","uid":1044249,"ip_address":"","ucode":"52C39C45517EA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ef/19/f6e49172.jpg","comment_is_top":false,"comment_ctime":1656585765,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5951553061","product_id":100015201,"comment_content":"新版本docker将aufs替换成了overlayFS，导致没有 &#47;var&#47;lib&#47;docker&#47;aufs&#47;mnt 目录。<br>centos系统默认也没有aufs, 则可以通过下面命令实现联合文件。<br>挂载命令：<br>mount -t overlay overlay -o lowerdir=.&#47;A,upperdir=.&#47;B,workdir=work .&#47;C<br><br>合并规则整理如下：<br>1.读规则：<br>- upper没有, 而lower有的文件时，需从lower读；<br>- 只在upper有的文件时，则直接从 upper 读<br>- lower 和 upper 都有的文件时，则直接从 upper 读。<br><br>2.写规则：<br>- 对只在 upper 有的文件时，则直接在 upper 写<br>- 对在lower 和 upper 都有的文件时，则直接在 upper 写。<br>- 对只在 lower 有的文件写时，则会做一个拷贝的操作，先从 lower将文件拷贝一份到upper,写的操作只对从lower 复制到 upper 的文件生效，而 lower 还是原文件。<br><br>3.删规则：<br>- lower 和 upper 都有的文件，upper 的会被删除，在 upper 目录下创建一个 ‘without’ 文件，而 lower 的不会被删除。<br>- lower 有而 upper 没有的文件时，会为被删除的文件在 upper 目录下创建一个 ‘without’ 文件，而 lower 的不会被删除。<br>- lower 和 upper 都有的目录时，upper 的会被删除，在 upper 目录下创建一个类似‘without’ 文件的 &#39;opaque&#39; 目录，而 lower 的不会被删除。<br><br>卸载命令：<br>umount &#47;root&#47;temp&#47;overlay&#47;C<br><br>参考:<br>https:&#47;&#47;www.kernel.org&#47;doc&#47;html&#47;latest&#47;filesystems&#47;overlayfs.html","like_count":1},{"had_liked":false,"id":280794,"user_name":"Bourne","can_delete":false,"product_type":"c1","uid":1311299,"ip_address":"","ucode":"1286279F70B13F","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/43/1c2fb7b3.jpg","comment_is_top":false,"comment_ctime":1614394226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5909361522","product_id":100015201,"comment_content":"貌似编译后的ns，要以root身份运行，不然直接打印Parent - container stopped!了，都不会进到容器里。","like_count":1},{"had_liked":false,"id":277499,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1612432410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5907399706","product_id":100015201,"comment_content":"这节课看的我有一点点的懵逼，知道了一点就是容器使用的是宿主机的内核，namespace进程隔离，cGroups资源隔离，rootfs构建了整个文件系统，还有镜像分层的概念","like_count":1},{"had_liked":false,"id":273333,"user_name":"Jay66","can_delete":false,"product_type":"c1","uid":2398816,"ip_address":"","ucode":"0461952B6DD4F1","user_header":"https://static001.geekbang.org/account/avatar/00/24/9a/60/4af14727.jpg","comment_is_top":false,"comment_ctime":1610537850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5905505146","product_id":100015201,"comment_content":"golang程序如果用容器发布，程序内指定了可执行的cpu数，实际上这个是取决于宿主机的cpu数？因为内核是一样的么？","like_count":1},{"had_liked":false,"id":266891,"user_name":"不在低谷拂袖去","can_delete":false,"product_type":"c1","uid":2009895,"ip_address":"","ucode":"6E8B62B024BFC5","user_header":"https://static001.geekbang.org/account/avatar/00/1e/ab/27/949432a6.jpg","comment_is_top":false,"comment_ctime":1607516837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5902484133","product_id":100015201,"comment_content":"有一个疑问，容器镜像只打包了躯壳，没有打包灵魂，如果出现内核不兼容的情况，该怎么处理？","like_count":1},{"had_liked":false,"id":258086,"user_name":"ANUBIS","can_delete":false,"product_type":"c1","uid":1802320,"ip_address":"","ucode":"86EDF421192D9F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/80/50/6b6e0f72.jpg","comment_is_top":false,"comment_ctime":1604289584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5899256880","product_id":100015201,"comment_content":"我有个stupid question 。【实际上，Mount Namespace 正是基于对 chroot 的不断改良才被发明出来的，它也是 Linux 操作系统里的第一个 Namespace。】我理解的第一个namespace不应该是PID namespace么？如果进程没有被单独隔离出来，那么mount namespace的存在意义又是什么呢，它会在什么场景下如何使用？","like_count":1},{"had_liked":false,"id":244651,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1598604699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893571995","product_id":100015201,"comment_content":"copy on wirte按照字面的理解,是在修改的时候,先拷贝出一份拷贝文件,在拷贝文件上进行修改,这样的话,是不是可以理解为,修改镜像内容就是先拷贝一份,在可修改的地方修改好之后,进行只读层的替换呢?","like_count":1},{"had_liked":false,"id":242512,"user_name":"Geek_00b6c5","can_delete":false,"product_type":"c1","uid":2125808,"ip_address":"","ucode":"B35F81C958C0F8","user_header":"","comment_is_top":false,"comment_ctime":1597745309,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5892712605","product_id":100015201,"comment_content":"那么问题来了？这些层是怎么区分的呢？比如一个镜像，那些被归为只读，读写，init呢？","like_count":1,"discussions":[{"author":{"id":1220739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/83/637f54f6.jpg","nickname":"Dahl","note":"","ucode":"BACAF3999F2843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308132,"discussion_content":"操作系统层面的一般为只读层，init层就是commit不会提交的个性化信息比如hostname,hosts,resolv.cnf等，每启动一个容器都会为你创建一个新的层，就是读写层","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1600851924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194702,"user_name":"Richard","can_delete":false,"product_type":"c1","uid":1316758,"ip_address":"","ucode":"893F958B9DD161","user_header":"https://static001.geekbang.org/account/avatar/00/14/17/96/846fc11b.jpg","comment_is_top":false,"comment_ctime":1585098378,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880065674","product_id":100015201,"comment_content":"突然想到服务器上的进程如果都以容器运行，每个容器有自己的lib共享库，那是不是说动态链接的时代要过去了？docker镜像根本没有考虑动态链接的感受啊，毕竟动链最重要的初衷之一就是节省内存啊。","like_count":1},{"had_liked":false,"id":139994,"user_name":"风过留痕","can_delete":false,"product_type":"c1","uid":1659261,"ip_address":"","ucode":"F13405AD8511B1","user_header":"https://static001.geekbang.org/account/avatar/00/19/51/7d/2772ec9a.jpg","comment_is_top":false,"comment_ctime":1570781685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5865748981","product_id":100015201,"comment_content":"看完这一章节，我对chroot 还是不太理解，这个是怎么做到绑定对应的进程的？<br>pivot_root 这个是把整个文件系统都替换掉了，那么再来一个 namespace + pivot_root 的时候对之前的是不是有影响那？<br>还有就是 rootfs 是包含了这个文件系统的，但是 chroot 不是只修改了执行的 “根” 吗？是怎么做到把这个文件系统都一起打包的那？<br>希望老师给解答一下或者是有推荐的文章可以解决我的疑问。<br>","like_count":1},{"had_liked":false,"id":97371,"user_name":"月下听禅","can_delete":false,"product_type":"c1","uid":1341634,"ip_address":"","ucode":"D8831F6734717B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erAicnu11ExsSicJvph8fwz48qVSEqJ2y4VUhNAm21fFtJACP6bS37JBgBfr3kFf29ClaBZ0xbXu0WA/132","comment_is_top":false,"comment_ctime":1558661554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853628850","product_id":100015201,"comment_content":"老师的技术真厉害，研究的很底层。以前只知道怎么使用docker，对docker的内部实现也是一知半解。谢谢老师的详细讲解。<br><br>作为一个程序员，技术这么厉害，还能把问题这么通俗易懂表达出来，佩服！","like_count":1},{"had_liked":false,"id":90008,"user_name":"lu_yinghai","can_delete":false,"product_type":"c1","uid":1227553,"ip_address":"","ucode":"72D9AB70E75C80","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/21/fd4dbcfc.jpg","comment_is_top":false,"comment_ctime":1556365406,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5851332702","product_id":100015201,"comment_content":"请问macOS并不是linux内核，为什么也能运行docker容器？谢谢","like_count":1,"discussions":[{"author":{"id":1770905,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/05/99/0acc9dbd.jpg","nickname":"陈宏星","note":"","ucode":"9E4BB63276A3EF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349057,"discussion_content":"macOS/Windows上都先做一个轻量级的虚拟机，然后在docker engine是跑在这个虚拟机里面的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1612863192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1962270,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f1/1e/92bd287c.jpg","nickname":"斐语","note":"","ucode":"9649CC6AE6399C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382589,"discussion_content":"楼上正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625641846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68098,"user_name":"凌","can_delete":false,"product_type":"c1","uid":1257995,"ip_address":"","ucode":"41369B360C794F","user_header":"https://static001.geekbang.org/account/avatar/00/13/32/0b/81ae214b.jpg","comment_is_top":false,"comment_ctime":1550412763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5845380059","product_id":100015201,"comment_content":"还是要感谢linux一切皆文件啊。原来docker并不是想象中那么完美，kubernetes不依赖于docker也是希望有一天能适配更完美的方案吧","like_count":1},{"had_liked":false,"id":61059,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1547609950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842577246","product_id":100015201,"comment_content":"张老师，这个统一的挂载点，就是前文讲到的（chroot）切换的根目录的工作路径吧。mount挂载可挂载其中单一的工作目录到主机的目录，由于隔离，主机不可见（commit），会永久保存。<br>$ ls &#47;var&#47;lib&#47;docker&#47;aufs&#47;mnt&#47;6e3be5d2ecccae7cc0fcfa2a2f5c89dc21ee30e166be823ceaeba15dce645b3e<br>bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var<br>","like_count":1},{"had_liked":false,"id":57365,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1546764575,"is_pvip":false,"replies":[{"id":"22060","content":"要看是哪个版本的ubuntu","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1548053531,"ip_address":"","comment_id":57365,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841731871","product_id":100015201,"comment_content":"老师，是不是现在意味着新版的ubuntu都无法使用aufs，除非修改文件系统<br>AUFS cannot use the following backing filesystems: aufs, btrfs, or ecryptfs. This means that the filesystem which contains &#47;var&#47;lib&#47;docker&#47;aufs cannot be one of these filesystem types.","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435547,"discussion_content":"要看是哪个版本的ubuntu","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548053531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46905,"user_name":"付鹏","can_delete":false,"product_type":"c1","uid":1171142,"ip_address":"","ucode":"E251FBBDDC95B9","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/c6/8fa6dc35.jpg","comment_is_top":false,"comment_ctime":1543999638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838966934","product_id":100015201,"comment_content":"ubantu18.04版本默认是overlay2,不是 Aufs, 这样的话，放镜像的目录变成什么了？&#47;var&#47;lib&#47;docker&#47;overlay2&#47;下面没有 mnt这个目录啊","like_count":1},{"had_liked":false,"id":39225,"user_name":"牛牛肥","can_delete":false,"product_type":"c1","uid":1226493,"ip_address":"","ucode":"4F455A76F22BB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/b6/fd/a0f60753.jpg","comment_is_top":false,"comment_ctime":1542212331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837179627","product_id":100015201,"comment_content":"在centos中，mount -l 看到的是以下结果，老师能结合将一下吗？lowdir merge等目录对应的关系。<br>verlay on &#47;var&#47;lib&#47;docker&#47;overlay2&#47;65330cd214bd2d88e655585b8ca0d252e7cd01437b178958780a1d2535a4a7d2&#47;merged type overlay (rw,relatime,lowerdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;2ZN56NBVHUVSY4SEURX7VVJXVE:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;EEF62UOUXONIFEU6HUWUUMVR6Z:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;WDUWDPLUOTWFESPBUOLAKMQ2LZ:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;IH7OC46IEJ4PBFZHB22RZ2ELEO:&#47;var&#47;lib&#47;docker&#47;overlay2&#47;l&#47;AUKSEXFOK7PAPINH72ZZ6UV4TV,upperdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;65330cd214bd2d88e655585b8ca0d252e7cd01437b178958780a1d2535a4a7d2&#47;diff,workdir=&#47;var&#47;lib&#47;docker&#47;overlay2&#47;65330cd214bd2d88e655585b8ca0d252e7cd01437b178958780a1d2535a4a7d2&#47;work)<br>shm on &#47;var&#47;lib&#47;docker&#47;containers&#47;32339d0ca86b38321a6f69e3635371dc8f060efc5853f8e54b031d998f78df6a&#47;mounts&#47;shm type tmpfs (rw,nosuid,nodev,noexec,relatime,size=65536k)<br>proc on &#47;run&#47;docker&#47;netns&#47;f9de97ec9b7b type proc (rw,relatime)","like_count":1},{"had_liked":false,"id":39168,"user_name":"牛牛肥","can_delete":false,"product_type":"c1","uid":1226493,"ip_address":"","ucode":"4F455A76F22BB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/b6/fd/a0f60753.jpg","comment_is_top":false,"comment_ctime":1542202124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5837169420","product_id":100015201,"comment_content":"overlayfs是什么时候开始的呢？能解释下为什么会逐步整合在一起吗？","like_count":1},{"had_liked":false,"id":29746,"user_name":"尧尧尧","can_delete":false,"product_type":"c1","uid":1203284,"ip_address":"","ucode":"E8E9709A58F7FC","user_header":"https://static001.geekbang.org/account/avatar/00/12/5c/54/6d25a19d.jpg","comment_is_top":false,"comment_ctime":1538529304,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5833496600","product_id":100015201,"comment_content":"感觉unionfs和git有些类似哎","like_count":1,"discussions":[{"author":{"id":1256033,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2a/61/88e97b67.jpg","nickname":"阿丑","note":"","ucode":"9A214DDC2CE9CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54527,"discussion_content":"Git更博大精深","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574301910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28212,"user_name":"╯梦深处゛","can_delete":false,"product_type":"c1","uid":1063649,"ip_address":"","ucode":"87F0E836B70FD2","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/e1/b6b311cb.jpg","comment_is_top":false,"comment_ctime":1538023538,"is_pvip":false,"replies":[{"id":"10145","content":"名字一样不代表里面的内容一样啊，内容一样也不代表权限一样啊","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1538025098,"ip_address":"","comment_id":28212,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5832990834","product_id":100015201,"comment_content":"只读层：<br><br>```<br>$ ls &#47;var&#47;lib&#47;docker&#47;aufs&#47;diff&#47;72b0744e06247c7d0...<br>etc sbin usr var<br>$ ls &#47;var&#47;lib&#47;docker&#47;aufs&#47;diff&#47;32e8e20064858c0f2...<br>run<br>$ ls &#47;var&#47;lib&#47;docker&#47;aufs&#47;diff&#47;a524a729adadedb900...<br>bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var<br>```<br><br>理论上只读层上层的会覆盖下层的，但是增量修改应该发生在读写层，那为什么这个代码中会出现上层目录和最下层目录相同的情况？按理来说这些目录不是应该不会变化的吗？有多个的原因是什么？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425181,"discussion_content":"名字一样不代表里面的内容一样啊，内容一样也不代表权限一样啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538025098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":25364,"user_name":"manatee","can_delete":false,"product_type":"c1","uid":1041112,"ip_address":"","ucode":"708D90E7A265BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/d8/f0562ede.jpg","comment_is_top":false,"comment_ctime":1537319404,"is_pvip":false,"replies":[{"id":"9223","content":"先理解aufs为主，其他类型的原理其实非常类似，有机会介绍","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537326798,"ip_address":"","comment_id":25364,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5832286700","product_id":100015201,"comment_content":"老师您好，我下载了18.06的docker已经不使用aufs而是overlay作为磁盘存储，能讲一下这当面的内容吗<br>","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424271,"discussion_content":"先理解aufs为主，其他类型的原理其实非常类似，有机会介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537326798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24138,"user_name":"魏颖琪","can_delete":false,"product_type":"c1","uid":1184964,"ip_address":"","ucode":"097544C71EBDA7","user_header":"https://static001.geekbang.org/account/avatar/00/12/14/c4/e354d8ba.jpg","comment_is_top":false,"comment_ctime":1536819989,"is_pvip":false,"replies":[{"id":"8856","content":"篇幅所限，暂时不能全覆盖了。不过原理相通，可以先自己尝试学习一下。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536841046,"ip_address":"","comment_id":24138,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5831787285","product_id":100015201,"comment_content":"现在的docker版本好像是使用overlay（至少我在Ubuntu18.04是这样），overlay里面的workdir不明白什么含义，老师能否介绍一下。","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423856,"discussion_content":"篇幅所限，暂时不能全覆盖了。不过原理相通，可以先自己尝试学习一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536841046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23354,"user_name":"明珠","can_delete":false,"product_type":"c1","uid":1218179,"ip_address":"","ucode":"F55F64691BD31E","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/83/747d4431.jpg","comment_is_top":false,"comment_ctime":1536297566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831264862","product_id":100015201,"comment_content":"&#47;etc&#47;rc.local可以挂载在init层吗?用于容器启动的时候可以执行这里命令","like_count":1},{"had_liked":false,"id":23314,"user_name":"Vincen","can_delete":false,"product_type":"c1","uid":1218185,"ip_address":"","ucode":"1029A901EC7BA0","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/89/9312b3a2.jpg","comment_is_top":false,"comment_ctime":1536283360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831250656","product_id":100015201,"comment_content":"简单易懂","like_count":1},{"had_liked":false,"id":23298,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":1025518,"ip_address":"","ucode":"57E12A2F9CD915","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/ee/6bbac848.jpg","comment_is_top":false,"comment_ctime":1536279868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5831247164","product_id":100015201,"comment_content":"我不会做题，等下面的大大","like_count":1},{"had_liked":false,"id":358985,"user_name":"HIM","can_delete":false,"product_type":"c1","uid":3029424,"ip_address":"广东","ucode":"3EB56F684CB343","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epq2AfJ26y9tHb6z7kyRyF9vdFsEYcibgwZKZNkwaHpLLLLNyjT4NeqCnYjcdOOibN1OwG27X0ede6g/132","comment_is_top":false,"comment_ctime":1665118862,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665118862","product_id":100015201,"comment_content":"求大佬们解惑：<br>1、读写层（也称容器层）可供开发者之间合作修改开发，而commit后 会将读写层上的多个层合并变为一个读写层吗？ 而容器的变大 主要是由于读写层和init层上的增量改动吗？<br>2、将镜像v1拉取下来，然后只在容器层上做修改， 做commit、push后，得到v1.1镜像。那v1和v1.1的镜像层是一样的吗？<br>2、若要修改只读层(也称镜像层)，要用到copy-on-write技术。那例如centOs镜像的更新， 官方是在旧版本上修改容器层作为一个新版本 还是用copy-on-write技术修改镜像层咧","like_count":0},{"had_liked":false,"id":357808,"user_name":"Xcxing","can_delete":false,"product_type":"c1","uid":2509433,"ip_address":"广东","ucode":"F9131BE3BE50CE","user_header":"https://static001.geekbang.org/account/avatar/00/26/4a/79/8b92731d.jpg","comment_is_top":false,"comment_ctime":1663656372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663656372","product_id":100015201,"comment_content":"docker版本20.10.14，ubuntu操作系统，文章后半段大部分不太一致，导致理解不了，强烈建议老师按照最新的实现更新下文档，谢谢","like_count":0},{"had_liked":false,"id":354034,"user_name":"Victor Chen","can_delete":false,"product_type":"c1","uid":1273685,"ip_address":"江苏","ucode":"7D94A09E2124EF","user_header":"https://static001.geekbang.org/account/avatar/00/13/6f/55/42867cb5.jpg","comment_is_top":false,"comment_ctime":1660036117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660036117","product_id":100015201,"comment_content":"&quot;而你进入容器之后执行的 &#47;bin&#47;bash，就是 &#47;bin 目录下的可执行文件，与宿主机的 &#47;bin&#47;bash 完全不同。&quot;<br>为什么完全不同，把宿主机的&#47;挂载进来，不都是同一个目录吗？","like_count":0},{"had_liked":false,"id":351160,"user_name":"阿巍-豆夫","can_delete":false,"product_type":"c1","uid":1005123,"ip_address":"","ucode":"732188848B0A85","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/43/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1657582864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657582864","product_id":100015201,"comment_content":"实际上，同一台机器上的所有容器，都共享宿主机操作系统的内核。<br><br>是不是说linux的镜像，语法运行在windows的宿主机上？ 因为win和Linux的系统内核完全不同？","like_count":0},{"had_liked":false,"id":348268,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1654916602,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1654916602","product_id":100015201,"comment_content":"我真是被老师的文笔震惊了，优雅，清晰，易理解。","like_count":0},{"had_liked":false,"id":348138,"user_name":"党","can_delete":false,"product_type":"c1","uid":1071974,"ip_address":"","ucode":"EE531DB3EA124D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/66/ad35bc68.jpg","comment_is_top":false,"comment_ctime":1654767229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654767229","product_id":100015201,"comment_content":"上次碰到个问题 磁盘爆满 当时不明白为啥在那些目录下查 现在终于明白了 容器里的目录都是在宿主机某个目录上的","like_count":0},{"had_liked":false,"id":342647,"user_name":"Nio","can_delete":false,"product_type":"c1","uid":1529642,"ip_address":"","ucode":"A1B8D3C01FB937","user_header":"https://static001.geekbang.org/account/avatar/00/17/57/2a/c6c95f37.jpg","comment_is_top":false,"comment_ctime":1650381297,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1650381297","product_id":100015201,"comment_content":"mount namespace + rootfs + 分层镜像，妙啊","like_count":0},{"had_liked":false,"id":341943,"user_name":"爱编程的运维","can_delete":false,"product_type":"c1","uid":2535502,"ip_address":"","ucode":"696DBA399CCFA3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/4faqHgQSawd4VzAtSv0IWDddm9NucYWibRpxejWPH5RUO310qv8pAFmc0rh0Qu6QiahlTutGZpia8VaqP2w6icybiag/132","comment_is_top":false,"comment_ctime":1649926700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649926700","product_id":100015201,"comment_content":"执行：mount -t aufs -o dirs=.&#47;A:.&#47;B none .&#47;C，报错了<br>mount: unknown filesystem type &#39;aufs&#39;<br>哪位同学解答一下？<br>操作系统是centos7.9","like_count":0},{"had_liked":false,"id":341635,"user_name":"怀揣梦想的学渣","can_delete":false,"product_type":"c1","uid":1916685,"ip_address":"","ucode":"2349B9F4F6FDE3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3f/0d/1e8dbb2c.jpg","comment_is_top":false,"comment_ctime":1649745915,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649745915","product_id":100015201,"comment_content":"最后这个图谱清晰明了，可以知道到底要接触什么内容，有种开了全局地图的感觉。<br>看评论，作者在文章也提到 katacontainers，期待作者可以分享更多学习的思路和经验。","like_count":0},{"had_liked":false,"id":335735,"user_name":"肖小勇","can_delete":false,"product_type":"c1","uid":2693559,"ip_address":"","ucode":"2C3147C6190424","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/KPhkPWv5GJzGOMfpr7zUuiaib7NC1sa03v5uEO0xgUCNiaKP5CORCicOGpgQ4CP42xE8kzx0ax70iaZW9ibOwvrDiaqhQ/132","comment_is_top":false,"comment_ctime":1645668957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645668957","product_id":100015201,"comment_content":"想知道的是，比如基于Ubuntu的镜像能放到基于centos的系统里挂载作为容器运行么？另外，基于低版本ubuntu系统做的镜像能挂载到高版本的Ubuntu系统上做容器运行么","like_count":0},{"had_liked":false,"id":328823,"user_name":"氧化钙CCCCaO","can_delete":false,"product_type":"c1","uid":1691119,"ip_address":"","ucode":"EE9D14509857B2","user_header":"https://static001.geekbang.org/account/avatar/00/19/cd/ef/24e887f5.jpg","comment_is_top":false,"comment_ctime":1640912966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640912966","product_id":100015201,"comment_content":"docker镜像的各个层是联合挂载实现合成的 学到了 ","like_count":0},{"had_liked":false,"id":327467,"user_name":"阿甘","can_delete":false,"product_type":"c1","uid":1057843,"ip_address":"","ucode":"BC93175B70E05D","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","comment_is_top":false,"comment_ctime":1640141397,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1640141397","product_id":100015201,"comment_content":"&gt; 实际上，同一台机器上的所有容器，都共享宿主机操作系统的内核。<br>关于这个我有个疑惑，因为之前百度为了平滑的从centos4.6升级到6.3，使用了chroot机制，内部称之为V2环境，是一种在centos4.6上切换到centos6.3的简单粗暴的机制。<br>但是从这个机制可以看出chroot是可以切换操作系统内核的，不一定要跟宿主机共享内核。关于这个老师是怎么理解的？","like_count":0},{"had_liked":false,"id":326309,"user_name":"PoalJ","can_delete":false,"product_type":"c1","uid":2839516,"ip_address":"","ucode":"D69A99D437627C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/53/dc/0da5335c.jpg","comment_is_top":false,"comment_ctime":1639467296,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639467296","product_id":100015201,"comment_content":"大佬，在rootfs的只读层中，是可以执行删除操作吗？","like_count":0},{"had_liked":false,"id":324973,"user_name":"章潘","can_delete":false,"product_type":"c1","uid":2630632,"ip_address":"","ucode":"1A24E1B3084450","user_header":"https://static001.geekbang.org/account/avatar/00/28/23/e8/9f445339.jpg","comment_is_top":false,"comment_ctime":1638764298,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638764298","product_id":100015201,"comment_content":"相见恨晚，醍醐灌顶","like_count":0},{"had_liked":false,"id":316252,"user_name":"Geek_fightingDC","can_delete":false,"product_type":"c1","uid":1843027,"ip_address":"","ucode":"EF7F7316ADFF49","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83equSjO9AVmwhvyhTZzk6icNTSED9s1sUdFZSfqTHq2PmZ4MibMFX58C8qDW2a4cjiaFvAdiaRchsLz54g/132","comment_is_top":false,"comment_ctime":1634221439,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1634221439","product_id":100015201,"comment_content":"打卡第七天。<br><br>今天学习了docker的mount namespace技术，底层依赖的chroot技术，隔离出一套单独的文件系统。<br><br>也学习了aufs分层，以增量的方式构建docker镜像。<br><br>Docker镜像的这种一致性，解决了应用运行的环境问题。","like_count":0},{"had_liked":false,"id":311501,"user_name":"奔跑的小孩","can_delete":false,"product_type":"c1","uid":1304259,"ip_address":"","ucode":"0053193F7A9870","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/21uTMWr7bx5qMibp2hwmGvLbYuj5Aic2dqD3futlNo25eDGDt4t7zzN9cdnj7cVGwTot1U4AyADfWUpqjq1SicgWQ/132","comment_is_top":false,"comment_ctime":1631258563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631258563","product_id":100015201,"comment_content":"docker镜像的存在，其实就是文件系统，这个文件系统是叠加的模式，增量","like_count":0},{"had_liked":false,"id":299401,"user_name":"ninn","can_delete":false,"product_type":"c1","uid":1657109,"ip_address":"","ucode":"2B442BCBB651A4","user_header":"https://static001.geekbang.org/account/avatar/00/19/49/15/af1eb168.jpg","comment_is_top":false,"comment_ctime":1624611437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624611437","product_id":100015201,"comment_content":"whiteout就是说把a层的一个文件copy到b层去然后加个&quot;.&quot;隐藏起来。那么在联合挂载的时候，为啥不是两个文件都存在？","like_count":0},{"had_liked":false,"id":297141,"user_name":"一直说自己小怂包","can_delete":false,"product_type":"c1","uid":1025779,"ip_address":"","ucode":"1EAD275B61C010","user_header":"","comment_is_top":false,"comment_ctime":1623324986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623324986","product_id":100015201,"comment_content":"https:&#47;&#47;blog.csdn.net&#47;u010566813&#47;article&#47;details&#47;117783220  写了一篇文章，(其实是一个系列)，基于centos的overlay2各种id的关系和计算，推荐给大家吧","like_count":0},{"had_liked":false,"id":296474,"user_name":"北冥Master","can_delete":false,"product_type":"c1","uid":1014142,"ip_address":"","ucode":"EBCCEC79AFC5DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/7e/c38ac02f.jpg","comment_is_top":false,"comment_ctime":1622990749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622990749","product_id":100015201,"comment_content":"新版本docker不用aufs了吗？系统上没有找到aufs相关目录。docker19.03.8，操作系统centos7.8。另外读者微信群有吗？","like_count":0},{"had_liked":false,"id":290236,"user_name":"风","can_delete":false,"product_type":"c1","uid":2555961,"ip_address":"","ucode":"7B2001FD3EF8B2","user_header":"https://static001.geekbang.org/account/avatar/00/27/00/39/09ec9733.jpg","comment_is_top":false,"comment_ctime":1619443320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619443320","product_id":100015201,"comment_content":"这个课程真牛逼，面面俱到，深入浅出","like_count":0},{"had_liked":false,"id":282933,"user_name":"小科蜜","can_delete":false,"product_type":"c1","uid":2194303,"ip_address":"","ucode":"E81B6DBB603AFC","user_header":"https://static001.geekbang.org/account/avatar/00/21/7b/7f/27ae9b63.jpg","comment_is_top":false,"comment_ctime":1615469545,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615469545","product_id":100015201,"comment_content":"容器镜像将会成为未来软件的主流发布方式","like_count":0},{"had_liked":false,"id":258917,"user_name":"梦想的优惠券","can_delete":false,"product_type":"c1","uid":1257418,"ip_address":"","ucode":"D3B44F6C618CA7","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/ca/cbce6e94.jpg","comment_is_top":false,"comment_ctime":1604580799,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1604580799","product_id":100015201,"comment_content":"值得学习","like_count":0},{"had_liked":false,"id":254886,"user_name":"Geek_286196","can_delete":false,"product_type":"c1","uid":1703018,"ip_address":"","ucode":"297707320FF673","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/TUMtkaIMdbEMSTicJ3ibh5YGVZMAXAK2B8xotVI8c374WJ9L8aZwhVVHBgAAEg6LafFk6v7IG16m8G2wcSrxe8Dg/132","comment_is_top":false,"comment_ctime":1603205646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603205646","product_id":100015201,"comment_content":"请教下张老师，同一个宿主机下，同一个镜像生成的多个容器，在宿主机上这些容器对应的文件系统占用空间在宿主机上是一份空间还是多份空间呢？ 不同的linux镜像生成的多个容器,在宿主机上对应的文件系统空间是占用一份还是多份空间呢?","like_count":0},{"had_liked":false,"id":251138,"user_name":"孔维康","can_delete":false,"product_type":"c1","uid":1778085,"ip_address":"","ucode":"0997CF0D977022","user_header":"","comment_is_top":false,"comment_ctime":1601375451,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601375451","product_id":100015201,"comment_content":"我unionfs是devicemapper，发现&#47;var&#47;lib&#47;docker&#47;mnt里的所有&lt;mount-id&gt;-init层都是空的，没有resolve.conf和hosts等文件，这是怎么回事呢？","like_count":0},{"had_liked":false,"id":245515,"user_name":"Donald","can_delete":false,"product_type":"c1","uid":1043694,"ip_address":"","ucode":"78337CC105B102","user_header":"","comment_is_top":false,"comment_ctime":1598965127,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1598965127","product_id":100015201,"comment_content":"启动一个容器，能根据这个容器id找到统一的挂载目录是哪个吗？","like_count":0,"discussions":[{"author":{"id":1220739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/83/637f54f6.jpg","nickname":"Dahl","note":"","ucode":"BACAF3999F2843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308131,"discussion_content":"docker inspect ","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600851837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241544,"user_name":"一个慢慢爬行的普通人","can_delete":false,"product_type":"c1","uid":1193589,"ip_address":"","ucode":"D38C25E119BCD7","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/75/e346e04e.jpg","comment_is_top":false,"comment_ctime":1597330847,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597330847","product_id":100015201,"comment_content":"不知道老师值得共享层是哪一层呢，是只读层吗？","like_count":0,"discussions":[{"author":{"id":1220739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/83/637f54f6.jpg","nickname":"Dahl","note":"","ucode":"BACAF3999F2843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308133,"discussion_content":"两个容器相同的层，都可以成为共享层。举个不恰当的例子，咱俩都是人，又都是男性，那么我现在创建一个拥有100万的男性，我只需要创建一个100万层，即可，人和男性都是共享的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600852094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235537,"user_name":"格局太小","can_delete":false,"product_type":"c1","uid":2002583,"ip_address":"","ucode":"216C7DCF4AD4FD","user_header":"https://static001.geekbang.org/account/avatar/00/1e/8e/97/6db35a93.jpg","comment_is_top":false,"comment_ctime":1595080357,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1595080357","product_id":100015201,"comment_content":"老师，为啥我按照你的方法该变目录报错。。。百度了一下大概是缺少依赖，但是我软链之后还是报错<br><br><br>[root@localhost ~]# chroot $HOME&#47;test &#47;bin&#47;bash<br>&#47;bin&#47;bash: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory","like_count":0,"discussions":[{"author":{"id":1237199,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","nickname":"幼儿编程教学","note":"","ucode":"F13F3150E6CAE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350257,"discussion_content":"手动copy下 cp /lib/x86_64-linux-gnu/libtinfo.so.5 ~/test/lib/x86_64-linux-gnu","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613788321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1220739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/83/637f54f6.jpg","nickname":"Dahl","note":"","ucode":"BACAF3999F2843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308134,"discussion_content":"需要按照文档中的提示，把bash的库文件，拷贝到chroot后的目录下，就类似文档中的ls命令那样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600852159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234477,"user_name":"拾月霜寒","can_delete":false,"product_type":"c1","uid":2056785,"ip_address":"","ucode":"65E00BD4F14E97","user_header":"https://static001.geekbang.org/account/avatar/00/1f/62/51/8db5cad4.jpg","comment_is_top":false,"comment_ctime":1594698846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594698846","product_id":100015201,"comment_content":"老师，init层的修改也是用copy-on-write实现的吗？<br>还有inti层的readonly是不是针对docker容器而言，因为容器启动之前里面的内容可以被docker引擎修改的？","like_count":0},{"had_liked":false,"id":232077,"user_name":"John5","can_delete":false,"product_type":"c1","uid":1902889,"ip_address":"","ucode":"61188D1D626107","user_header":"https://static001.geekbang.org/account/avatar/00/1d/09/29/b170a88f.jpg","comment_is_top":false,"comment_ctime":1593850978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593850978","product_id":100015201,"comment_content":"听大佬讲完，明白隔离是怎么回事了","like_count":0},{"had_liked":false,"id":221348,"user_name":"好名字可以让你的朋友更容易记住你","can_delete":false,"product_type":"c1","uid":1631857,"ip_address":"","ucode":"A63F588D3424FE","user_header":"https://static001.geekbang.org/account/avatar/00/18/e6/71/9e085aa7.jpg","comment_is_top":false,"comment_ctime":1590479737,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1590479737","product_id":100015201,"comment_content":"有一个问题, 在centos上运行docker 创建一个ubuntu的容器.  centos内核不支持aufs ,那创建出来的ubuntu容器是不是也不支持aufs? ","like_count":0,"discussions":[{"author":{"id":1220739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/83/637f54f6.jpg","nickname":"Dahl","note":"","ucode":"BACAF3999F2843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308137,"discussion_content":"容器不包含内核，内核还是操作系统的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600852231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202504,"user_name":"慕华","can_delete":false,"product_type":"c1","uid":1128579,"ip_address":"","ucode":"3026277274798B","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/83/cf789e0e.jpg","comment_is_top":false,"comment_ctime":1585997496,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1585997496","product_id":100015201,"comment_content":"要怎么样才能把容器修改的内容保存成镜像呢？比如：我从一个Mysql镜像，创建了一个容器，然后在这个容器上创建了数据库，添加了数据，然后我想要把这个包含数据的mysql容器打包成镜像（用这个镜像创建的容器得有那些数据库和数据），该怎么做呢？","like_count":0,"discussions":[{"author":{"id":1220739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/83/637f54f6.jpg","nickname":"Dahl","note":"","ucode":"BACAF3999F2843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308138,"discussion_content":"你需要看一下docker commit命令\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600852256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196997,"user_name":"J","can_delete":false,"product_type":"c1","uid":1075605,"ip_address":"","ucode":"A82ED41C7AC59B","user_header":"https://static001.geekbang.org/account/avatar/00/10/69/95/22f155db.jpg","comment_is_top":false,"comment_ctime":1585329354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585329354","product_id":100015201,"comment_content":"豁然开朗👍","like_count":0},{"had_liked":false,"id":195476,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1119133,"ip_address":"","ucode":"4BCA899B8E4E85","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/9d/0ff43179.jpg","comment_is_top":false,"comment_ctime":1585190425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585190425","product_id":100015201,"comment_content":"之前在同事做好的镜像里升级一个python包，先做的删除这个包，删除时报错，不让删除。不知这又和whiteout有什么关系。","like_count":0},{"had_liked":false,"id":194466,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1585060873,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585060873","product_id":100015201,"comment_content":"老师，一般开发完了，会打包一个镜像，部署到内测环境，如果要提交给测试部门了，某些参数要修改，在原来的基础上，单独制作一个层吗？还是引用外部的配置文件呢？","like_count":0,"discussions":[{"author":{"id":1220739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/83/637f54f6.jpg","nickname":"Dahl","note":"","ucode":"BACAF3999F2843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308139,"discussion_content":"配置中心比较合理。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600852310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192444,"user_name":"韩向民","can_delete":false,"product_type":"c1","uid":1310021,"ip_address":"","ucode":"C0335C3785C303","user_header":"https://static001.geekbang.org/account/avatar/00/13/fd/45/a498dcb9.jpg","comment_is_top":false,"comment_ctime":1584851171,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584851171","product_id":100015201,"comment_content":"对docker镜像有更细致的了解了","like_count":0},{"had_liked":false,"id":183231,"user_name":"云芒","can_delete":false,"product_type":"c1","uid":1752876,"ip_address":"","ucode":"88D0E856146E94","user_header":"https://static001.geekbang.org/account/avatar/00/1a/bf/2c/de7cc672.jpg","comment_is_top":false,"comment_ctime":1582977956,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1582977956","product_id":100015201,"comment_content":"老师，我在使用了chroot命令之后，一直显示 <br>bash-4.2# ls &#47;<br>bash: ls: command not found<br>这个是为什么呢","like_count":0,"discussions":[{"author":{"id":1926177,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/64/21/9e743711.jpg","nickname":"正宗老菜鸟","note":"","ucode":"F54623D3A2DC5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226107,"discussion_content":"我和你一样","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586421347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1926177,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/64/21/9e743711.jpg","nickname":"正宗老菜鸟","note":"","ucode":"F54623D3A2DC5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226120,"discussion_content":"找到方法了，执行export PATH=$PATH:/bin","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586423238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1590887,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/67/004cb4f8.jpg","nickname":"MOK_G_S","note":"","ucode":"C1CED3D134C70A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340346,"discussion_content":"/bin/ls /","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609983587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178846,"user_name":"Neo","can_delete":false,"product_type":"c1","uid":1004003,"ip_address":"","ucode":"DA1C960B5F23DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/e3/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1581840092,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581840092","product_id":100015201,"comment_content":"这集好精彩，就是信息量有点大，哈哈哈哈","like_count":0},{"had_liked":false,"id":176011,"user_name":"南城","can_delete":false,"product_type":"c1","uid":1817605,"ip_address":"","ucode":"19F138101AE688","user_header":"","comment_is_top":false,"comment_ctime":1580910734,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580910734","product_id":100015201,"comment_content":"- 容器镜像:<br>- [ ] 挂载在容器根目录上、用来为容器进程提供隔离后执行环境的文件系统，就是所谓的“容器镜像”。它还有一个更为专业的名字，叫作：rootfs（根文件系统）。<br>&gt;rootfs 只是一个操作系统所包含的文件、配置和目录，并不包括操作系统内核。在 Linux 操作系统中，这两部分是分开存放的，操作系统只有在开机启动时才会加载指定版本的内核镜像。<br>- [ ] Docker 镜像使用的 rootfs，往往由多个“层”组成：只读层、Init 层、可读写层。 <br>&gt;可读写层 <br>1. 增：直接添加；<br>2. 删:AuFS 会在可读写层创建一个 whiteout 文件，把只读层里的文件“遮挡”起来;(“ro+wh”的挂载方式，即只读 +whiteout 的含义);<br>3. 改:修改一个文件的时候，首先会从上到下查找有没有这个文件，找到，就复制到容器层中，修改，修改的结果就会作用到下层的文件，这种方式也被称为copy-on-write。","like_count":0},{"had_liked":false,"id":173427,"user_name":"陈靖","can_delete":false,"product_type":"c1","uid":1147418,"ip_address":"","ucode":"8C9596A54DB5C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/1a/64ec25ff.jpg","comment_is_top":false,"comment_ctime":1579532325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579532325","product_id":100015201,"comment_content":"我在mac上跑ubuntu是什么原理？","like_count":0},{"had_liked":false,"id":169128,"user_name":"bus801","can_delete":false,"product_type":"c1","uid":1777680,"ip_address":"","ucode":"7BBF63E76DC395","user_header":"https://static001.geekbang.org/account/avatar/00/1b/20/10/5786e0d8.jpg","comment_is_top":false,"comment_ctime":1578278029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578278029","product_id":100015201,"comment_content":"docker image的bootfs在哪里呢？","like_count":0},{"had_liked":false,"id":169111,"user_name":"喵喵喵","can_delete":false,"product_type":"c1","uid":1211713,"ip_address":"","ucode":"E3AD8BF42E19DF","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/41/3c5b770b.jpg","comment_is_top":false,"comment_ctime":1578276121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578276121","product_id":100015201,"comment_content":"打卡～","like_count":0},{"had_liked":false,"id":167131,"user_name":"诛尽乱世繁华","can_delete":false,"product_type":"c1","uid":1222945,"ip_address":"","ucode":"67FAAF3E31BEF5","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/21/7b3eef35.jpg","comment_is_top":false,"comment_ctime":1577696756,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1577696756","product_id":100015201,"comment_content":"在centos7环境执行 chroot $HOME&#47;test &#47;bin&#47;bash 进入到bash-4.2，输入ls，提示command not found","like_count":0,"discussions":[{"author":{"id":1220739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/83/637f54f6.jpg","nickname":"Dahl","note":"","ucode":"BACAF3999F2843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308140,"discussion_content":"输入绝对路径，因为没有声明$PATH","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600852363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1752876,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/bf/2c/de7cc672.jpg","nickname":"云芒","note":"","ucode":"88D0E856146E94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190815,"discussion_content":"我也遇到了这样的问题，centos7.7，你后来解决了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582978364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164398,"user_name":"BestWill","can_delete":false,"product_type":"c1","uid":1761533,"ip_address":"","ucode":"BFAAD00FFEA16F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoZ2ib2qeG69ibf1mb9eicfH0sF3MpHbaGtsyp6SVEiaA1F2Ked2RZw0jENTZlicibFr4FJCHvIU5VmWR3g/132","comment_is_top":false,"comment_ctime":1576978588,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576978588","product_id":100015201,"comment_content":"为什么在我的系统里找不到&#47;var&#47;lib&#47;docker&#47;aufs目录呢， 目录下边只有containers等其它目录，并没有aufs","like_count":0,"discussions":[{"author":{"id":1220739,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/83/637f54f6.jpg","nickname":"Dahl","note":"","ucode":"BACAF3999F2843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308141,"discussion_content":"新版本docker使用overlay2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600852384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155803,"user_name":"Zack","can_delete":false,"product_type":"c1","uid":1758012,"ip_address":"","ucode":"758511DF7D6D17","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eokhlnrZO1G1SnxWka7hSeqwHnIcuQKugQDBDKUDXc2ZDXKsibHTNviaG6CiaqBiaK5Bwcu37xakaFthw/132","comment_is_top":false,"comment_ctime":1574759079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574759079","product_id":100015201,"comment_content":"Dockfile:<br>FROM node:10<br># 镜像制作人<br>MAINTAINER zack<br><br>写了一个指定rootfs为node:10的镜像，node:10镜像大小为903MB，打包完的应用镜像也为903MB<br>但是推送到docker市场的镜像大小居然缩水为 347MB了？想不通啊...","like_count":0},{"had_liked":false,"id":112720,"user_name":"普罗米修斯","can_delete":false,"product_type":"c1","uid":1394030,"ip_address":"","ucode":"DDA7DE4DE371FC","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/6e/11cf22de.jpg","comment_is_top":false,"comment_ctime":1562809789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562809789","product_id":100015201,"comment_content":"一个rootfs是通过unionfs技术把多个目录挂载在同一个目录下的结果，镜像的每一个层都是一个rootfs……","like_count":0},{"had_liked":false,"id":101959,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1222211,"ip_address":"","ucode":"8175463FB4705B","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/43/cb6ab349.jpg","comment_is_top":false,"comment_ctime":1560073885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560073885","product_id":100015201,"comment_content":"老师，您好！我想请教个问题。为什么在chroot中的&#47;bin&#47;bash进程里面新增了一个文件，在宿主机可见呢？根据Mount Namespace的作用，宿主机应该看不到这个挂载的呀？","like_count":0},{"had_liked":false,"id":101774,"user_name":"lizhaochao","can_delete":false,"product_type":"c1","uid":1170705,"ip_address":"","ucode":"1357C60BB567B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/11/04ebee55.jpg","comment_is_top":false,"comment_ctime":1559967652,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559967652","product_id":100015201,"comment_content":"想问下 有没有什么工具(在线或集成到ide的) 可以查询每个api对象以及拥有的属性的层级关系 比如我可以查出来 container 可以在pod下 pod可以在deployment下 等等所有的东西","like_count":0},{"had_liked":false,"id":98283,"user_name":"HU","can_delete":false,"product_type":"c1","uid":1393906,"ip_address":"","ucode":"57B15A671382C3","user_header":"https://static001.geekbang.org/account/avatar/00/15/44/f2/d8060b48.jpg","comment_is_top":false,"comment_ctime":1558948073,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558948073","product_id":100015201,"comment_content":"新装的Ubuntu 和Docker里 默认已经是overlay2了","like_count":0},{"had_liked":false,"id":98184,"user_name":"liugddx","can_delete":false,"product_type":"c1","uid":1016163,"ip_address":"","ucode":"FDB66E03A74422","user_header":"https://static001.geekbang.org/account/avatar/00/0f/81/63/2ceecb43.jpg","comment_is_top":false,"comment_ctime":1558927168,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558927168","product_id":100015201,"comment_content":"chroot实验执行 chroot $HOME&#47;test &#47;bin&#47;bash提示如下异常：<br>&#47;bin&#47;bash: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory，请问下怎么解决呢？","like_count":0,"discussions":[{"author":{"id":1237199,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/cf/43f201f2.jpg","nickname":"幼儿编程教学","note":"","ucode":"F13F3150E6CAE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350256,"discussion_content":"手动copy下 `cp /lib/x86_64-linux-gnu/libtinfo.so.5 ~/test/lib/x86_64-linux-gnu`","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613788293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91164,"user_name":"Fire","can_delete":false,"product_type":"c1","uid":1186807,"ip_address":"","ucode":"4A2C50B77EDB2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/1b/f7/45e8b64a.jpg","comment_is_top":false,"comment_ctime":1556885668,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556885668","product_id":100015201,"comment_content":"老师您好，我在阿里云主机上实验namespace的挂载，发现容器里面和宿主机里面运行mount -l都能看的到&#47;tmp目录的挂载。并且每次运行都能产生一个新的挂载，我只好手动运行 umount none取消了挂载。这种情况大约会是什么原因呢？","like_count":0},{"had_liked":false,"id":79428,"user_name":"龙坤","can_delete":false,"product_type":"c1","uid":1233455,"ip_address":"","ucode":"D1724E68D6304D","user_header":"https://static001.geekbang.org/account/avatar/00/12/d2/2f/04882ff8.jpg","comment_is_top":false,"comment_ctime":1553482548,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1553482548","product_id":100015201,"comment_content":"了解到容器镜像的制作与使用方式","like_count":0},{"had_liked":false,"id":77512,"user_name":"程空万里","can_delete":false,"product_type":"c1","uid":1218737,"ip_address":"","ucode":"EAF054AE7D1AC7","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/b1/73268f62.jpg","comment_is_top":false,"comment_ctime":1552958291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552958291","product_id":100015201,"comment_content":"只能说：太精彩了！","like_count":0},{"had_liked":false,"id":57937,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1546946192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546946192","product_id":100015201,"comment_content":"老师你好我想请问一下 我的系统是Ubuntu16.04.4 docker是18.06.0 &#47;var&#47;lib&#47;docker下并没有aufs这个文件夹 执行docker image他又确实分了层这是什么原因呢","like_count":0},{"had_liked":false,"id":40578,"user_name":"zixuan","can_delete":false,"product_type":"c1","uid":1131300,"ip_address":"","ucode":"C72920DD05B074","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/24/3f9f7c70.jpg","comment_is_top":false,"comment_ctime":1542633521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542633521","product_id":100015201,"comment_content":"容器使用rootfs的时候  Chroot 和 Mount Namespace 是一回事吗？其中一个用另一个实现？如果两个机制都要用到是怎么配合的？","like_count":0},{"had_liked":false,"id":38912,"user_name":"lee","can_delete":false,"product_type":"c1","uid":1298740,"ip_address":"","ucode":"2B1F9A243FA695","user_header":"https://static001.geekbang.org/account/avatar/00/13/d1/34/cea5b9ec.jpg","comment_is_top":false,"comment_ctime":1542159290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542159290","product_id":100015201,"comment_content":"容器层的修改会增量添加，如果直接修改一个容器内的文件，会增加容器镜像的大小。想要不增加镜像的大小，需要在dockerfile中的同一层修改文件，然后重新build一个镜像。 可是，一但dockerfile文件没有及时更新或者遗失了，在编写一个和镜像一致的dockerfile又很耗时。有没有办法可以解决没有dockerfile的镜像，修改镜像中的文件的同时又不会使镜像变大呢？","like_count":0},{"had_liked":false,"id":36444,"user_name":"得大自在","can_delete":false,"product_type":"c1","uid":1089776,"ip_address":"","ucode":"231708CA97F602","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/f0/3fda6b8a.jpg","comment_is_top":false,"comment_ctime":1541119047,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541119047","product_id":100015201,"comment_content":"老师，请教一个问题，为什用ubuntu打包的镜像可以跑在centos的kernel上？他们都是不同发行版本。难道linux做到了kernel完全独立化，不通的发行版本只是在lib层面不一样？","like_count":0},{"had_liked":false,"id":36168,"user_name":"嗷大猫的鱼","can_delete":false,"product_type":"c1","uid":1204931,"ip_address":"","ucode":"BF980405C8E7DF","user_header":"https://static001.geekbang.org/account/avatar/00/12/62/c3/d7f2bd8f.jpg","comment_is_top":false,"comment_ctime":1540961330,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540961330","product_id":100015201,"comment_content":"老师，为什么我mount之后，我宿主机上的文件夹也成空的了？？","like_count":0},{"had_liked":false,"id":34702,"user_name":"旭","can_delete":false,"product_type":"c1","uid":1263368,"ip_address":"","ucode":"1AC4D6A6F2D2A1","user_header":"https://static001.geekbang.org/account/avatar/00/13/47/08/985632a6.jpg","comment_is_top":false,"comment_ctime":1540262782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540262782","product_id":100015201,"comment_content":"我没有用到k8s ，就只有docker，但镜像还是被删掉了","like_count":0},{"had_liked":false,"id":34589,"user_name":"小鱼儿","can_delete":false,"product_type":"c1","uid":1053492,"ip_address":"","ucode":"989EC453936B91","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/34/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1540213928,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540213928","product_id":100015201,"comment_content":"老师，求助！我装了docker for windows并启用了Linux容器，自动起了hyper-v虚拟机，请问，我如何进入到该虚拟机？ ","like_count":0},{"had_liked":false,"id":34560,"user_name":"杜伟","can_delete":false,"product_type":"c1","uid":1265798,"ip_address":"","ucode":"830A6C7CB2AECD","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/86/899457cf.jpg","comment_is_top":false,"comment_ctime":1540206126,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540206126","product_id":100015201,"comment_content":"怎么知道某个镜像它是联合挂载在哪个目录？","like_count":0},{"had_liked":false,"id":34543,"user_name":"杜伟","can_delete":false,"product_type":"c1","uid":1265798,"ip_address":"","ucode":"830A6C7CB2AECD","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/86/899457cf.jpg","comment_is_top":false,"comment_ctime":1540201760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540201760","product_id":100015201,"comment_content":"在ubuntu下，用aufs测试，在联合后的文件夹里，更改b文件内容，B&#47;b文件内容不会变更","like_count":0},{"had_liked":false,"id":34533,"user_name":"杜伟","can_delete":false,"product_type":"c1","uid":1265798,"ip_address":"","ucode":"830A6C7CB2AECD","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/86/899457cf.jpg","comment_is_top":false,"comment_ctime":1540199445,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540199445","product_id":100015201,"comment_content":"ns.c执行后直接返回<br>root@ubuntu:&#47;mnt# .&#47;ns <br>Parent - start a container!<br>Container - inside the container!<br>root@ubuntu:&#47;mnt# ","like_count":0},{"had_liked":false,"id":33870,"user_name":"旭","can_delete":false,"product_type":"c1","uid":1263368,"ip_address":"","ucode":"1AC4D6A6F2D2A1","user_header":"https://static001.geekbang.org/account/avatar/00/13/47/08/985632a6.jpg","comment_is_top":false,"comment_ctime":1539913262,"is_pvip":false,"replies":[{"id":"12138","content":"这是kubele的image gc功能，你磁盘不够大了吧","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539924115,"ip_address":"","comment_id":33870,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1539913262","product_id":100015201,"comment_content":"老师，问题是这样的，只要我这个镜像没有运行的容器，这个镜像过段时间就会自动被删掉，我用docker images 看不到那个镜像了","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427065,"discussion_content":"这是kubele的image gc功能，你磁盘不够大了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539924115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32861,"user_name":"haiker","can_delete":false,"product_type":"c1","uid":1131183,"ip_address":"","ucode":"4C4C799CACCF79","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/af/8c37ca95.jpg","comment_is_top":false,"comment_ctime":1539705808,"is_pvip":false,"replies":[{"id":"11973","content":"不止内核呀，指令集都不一样","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1539743717,"ip_address":"","comment_id":32861,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1539705808","product_id":100015201,"comment_content":"针对x86制作的镜像在ARM平台上不能使用，是因为内核不相同吗？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":426904,"discussion_content":"不止内核呀，指令集都不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539743717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30159,"user_name":"Rain","can_delete":false,"product_type":"c1","uid":1175329,"ip_address":"","ucode":"603DFFAC6A3755","user_header":"https://static001.geekbang.org/account/avatar/00/11/ef/21/69c181b8.jpg","comment_is_top":false,"comment_ctime":1538705936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1538705936","product_id":100015201,"comment_content":"对aufs的讲解，这一篇很精彩","like_count":0},{"had_liked":false,"id":25341,"user_name":"黄朋飞","can_delete":false,"product_type":"c1","uid":1107062,"ip_address":"","ucode":"A1E7E0460A1BCC","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/76/a97242c0.jpg","comment_is_top":false,"comment_ctime":1537317074,"is_pvip":false,"replies":[{"id":"9225","content":"容器只是一个进程，所有空间都占的是宿主机的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1537326899,"ip_address":"","comment_id":25341,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537317074","product_id":100015201,"comment_content":"请问老师，目录挂载到容器后，这个目录对于容器内是可见的，对于宿主机不可见，那相应的容器挂载的这个目录占用的是宿主机的磁盘空间吧？我这时候查看宿主机的磁盘空间发现一部分被占用，我还不知道被谁占用了，是不是很奇怪？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424263,"discussion_content":"容器只是一个进程，所有空间都占的是宿主机的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537326899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24378,"user_name":"cxyfreedom","can_delete":false,"product_type":"c1","uid":1059047,"ip_address":"","ucode":"6796B2F49A0AD8","user_header":"","comment_is_top":false,"comment_ctime":1536936125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536936125","product_id":100015201,"comment_content":"想问一下老师那段程序启用了 Mount Namespace，仍然能在宿主机上面同样查看到挂载的 &#47;tmp 目录，谢谢","like_count":0},{"had_liked":false,"id":24172,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1536829374,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536829374","product_id":100015201,"comment_content":"你好，我编译那个容器程序，没有进入容器，程序直接退出了","like_count":0},{"had_liked":false,"id":24002,"user_name":"青空","can_delete":false,"product_type":"c1","uid":1156340,"ip_address":"","ucode":"7A9BCDDAAC5C2F","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/f4/fb7cfea0.jpg","comment_is_top":false,"comment_ctime":1536746663,"is_pvip":false,"replies":[{"id":"8832","content":"是。跟只读层道理一样。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536821623,"ip_address":"","comment_id":24002,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536746663","product_id":100015201,"comment_content":"老师好  请问图中init层也是ro+wh的  那比如改了host最后是怎么生效的 感觉会和底下的那层一样做法？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423804,"discussion_content":"是。跟只读层道理一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536821623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23981,"user_name":"殷智伟","can_delete":false,"product_type":"c1","uid":1227567,"ip_address":"","ucode":"77B77F1D958598","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/2f/cc56416e.jpg","comment_is_top":false,"comment_ctime":1536740729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536740729","product_id":100015201,"comment_content":"在容器里面可以看到&#47;etc&#47;hostname文件的内容，这个文件在init层，但是在&#47;var&#47;lib&#47;docker&#47;overlay2&#47;xxxx&#47;merged&#47;etc和&#47;var&#47;lib&#47;docker&#47;overlay2&#47;xxxx-init&#47;diff&#47;etc目录下，hostname文件都看不见内容。init层在容器启动时被修改的内容保存在哪里去了？","like_count":0},{"had_liked":false,"id":23783,"user_name":"uncleli","can_delete":false,"product_type":"c1","uid":1088359,"ip_address":"","ucode":"0215D0D7735592","user_header":"","comment_is_top":false,"comment_ctime":1536652410,"is_pvip":false,"replies":[{"id":"8708","content":"可以通过观察mnt里新增加的目录找到","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536669071,"ip_address":"","comment_id":23783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536652410","product_id":100015201,"comment_content":"老师，怎么根据 containerid 找到它的联合挂载点呢？也就是怎么确定某个容器的 &#47;var&#47;lib&#47;docker&#47;aufs&#47;mnt&#47;6e....，试了一下docker inspect 没发现可用的信息","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423724,"discussion_content":"可以通过观察mnt里新增加的目录找到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536669071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23525,"user_name":"何先生","can_delete":false,"product_type":"c1","uid":1178630,"ip_address":"","ucode":"A004799E6D813F","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/06/6cc5d4d5.jpg","comment_is_top":false,"comment_ctime":1536467251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536467251","product_id":100015201,"comment_content":"读写层的内容会持久保存吗，保存在哪里？又或者每次重启容器就没了？","like_count":0},{"had_liked":false,"id":23497,"user_name":"择动","can_delete":false,"product_type":"c1","uid":1038386,"ip_address":"","ucode":"09FB38D0F89E49","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/32/fab70236.jpg","comment_is_top":false,"comment_ctime":1536422161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536422161","product_id":100015201,"comment_content":"所以我用mac的话，也是和windows一样，又多跑一个vm来运行linux容器吗？那么，由前几节讲的是不是运行vm就会比在linux运行直接运营容器多一些性能损耗？","like_count":0},{"had_liked":false,"id":23483,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1128822,"ip_address":"","ucode":"2C74CFC1AE2774","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/76/b14221a5.jpg","comment_is_top":false,"comment_ctime":1536406338,"is_pvip":false,"replies":[{"id":"8587","content":"是这样，还比较初步","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536562730,"ip_address":"","comment_id":23483,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536406338","product_id":100015201,"comment_content":"请教，istio 才1.0，有大的系统用它实现的嘛？现在旧系统服务化，是不是采用spring  cloud  比较稳妥？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423583,"discussion_content":"是这样，还比较初步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536562730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23463,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1128822,"ip_address":"","ucode":"2C74CFC1AE2774","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/76/b14221a5.jpg","comment_is_top":false,"comment_ctime":1536382798,"is_pvip":false,"replies":[{"id":"8500","content":"istio本身当然是最建议采用的。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536406016,"ip_address":"","comment_id":23463,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536382798","product_id":100015201,"comment_content":"请教一下，IBM  推  icp，里边集成了istio，可用嘛，谢谢，目前对于微服务治理，开发，您有什么建议？spring  cloud？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423573,"discussion_content":"istio本身当然是最建议采用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536406016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23377,"user_name":"假装乐","can_delete":false,"product_type":"c1","uid":1093437,"ip_address":"","ucode":"97A7D0A6D93865","user_header":"https://static001.geekbang.org/account/avatar/00/10/af/3d/28b61e6b.jpg","comment_is_top":false,"comment_ctime":1536315436,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536315436","product_id":100015201,"comment_content":"竟然听漏了，我晕，明白了明白了","like_count":0},{"had_liked":false,"id":23347,"user_name":"心情不错","can_delete":false,"product_type":"c1","uid":1218172,"ip_address":"","ucode":"A62967BE93885C","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/7c/b1e6ea51.jpg","comment_is_top":false,"comment_ctime":1536293598,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536293598","product_id":100015201,"comment_content":"需要修改的都是可读写层 所以修改镜像内容不需要关心只读层","like_count":0},{"had_liked":false,"id":23300,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1090442,"ip_address":"","ucode":"C10A43CD529087","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/8a/6cc92398.jpg","comment_is_top":false,"comment_ctime":1536280703,"is_pvip":false,"replies":[{"id":"8441","content":"只读层永远不会变","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1536286326,"ip_address":"","comment_id":23300,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1536280703","product_id":100015201,"comment_content":"只读层如何增加增量，是可读写层上的修改转过去的吗？","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423501,"discussion_content":"只读层永远不会变","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536286326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}