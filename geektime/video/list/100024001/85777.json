{"id":85777,"title":"18 | 不一样的接口类型，一样的多态","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":119074,"user_name":"SeeaYouL","can_delete":false,"product_type":"c3","uid":1475415,"ip_address":"","ucode":"AB3FFE8CF611F2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo1TwKH1gHhywibMg3nu2VN38hPyLJmC53Fu6RkR0bMrM8SCYW8FM1taWj7hH3jOFXTiaft941plwKw/132","comment_is_top":false,"comment_ctime":1564498355,"is_pvip":false,"replies":[{"id":44001,"content":"这是因为在Go Spec中有这样的定义 “The method set of the corresponding pointer type *T is the set of all methods declared with receiver *T or T (that is, it also contains the method set of T).“ 即指针类型可以访问定义在指针类型和值类型上的所有方法。可以参考这篇文章：https:&#47;&#47;suraj.io&#47;post&#47;golang-methods-interfaces&#47;","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1564713064,"ip_address":"","comment_id":119074,"utype":1}],"discussion_count":6,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"package polymorphism\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;testing&quot;\n)\n\ntype Code string\ntype Programmer interface {\n\tWriteHelloWorld() Code\n}\n\ntype GoProgrammer struct {\n}\n\nfunc (g GoProgrammer) WriteHelloWorld() Code {\n\treturn &quot;fmt.Println(\\&quot;Hello World!\\&quot;)&quot;\n}\n\ntype JavaProgrammer struct {\n}\n\nfunc (j JavaProgrammer) WriteHelloWorld() Code {\n\treturn &quot;System.out.Println(\\&quot;Hello World!\\&quot;)&quot;\n}\n\nfunc WriteFirstProgrammer(p Programmer) {\n\tfmt.Printf(&quot;%T %v\\n&quot;, p, p.WriteHelloWorld())\n}\n\nfunc TestPolymorphism(t *testing.T) {\n\tgoProg := GoProgrammer{}\n\t&#47;&#47; goProg := new(GoProgrammer)\n\tjavaProg := new(JavaProgrammer)\n\tWriteFirstProgrammer(goProg)\n\tWriteFirstProgrammer(javaProg)\n}\n老师，为什么我这样写的输出结果没有报错？\n输出如下：\n=== RUN   TestPolymorphism\npolymorphism.GoProgrammer fmt.Println(&quot;Hello World!&quot;)\n*polymorphism.JavaProgrammer System.out.Println(&quot;Hello World!&quot;)\n--- PASS: TestPolymorphism (0.00s)\nPASS\ncoverage: 0.0% of statements\nok  \t_&#47;E_&#47;go_learning&#47;src&#47;ch12&#47;polymorphic\t0.233s\n\nDone","like_count":6,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460737,"discussion_content":"这是因为在Go Spec中有这样的定义 “The method set of the corresponding pointer type *T is the set of all methods declared with receiver *T or T (that is, it also contains the method set of T).“ 即指针类型可以访问定义在指针类型和值类型上的所有方法。可以参考这篇文章：https://suraj.io/post/golang-methods-interfaces/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564713064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2403351,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ac/17/430ddd05.jpg","nickname":"🐟","note":"","ucode":"F61C3F67E4A2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":542239,"discussion_content":"顺着老师的话往下说做一个补充：值类型对象也可以访问定义在指针类型和值类型上的所有方法。当然，这里的方法是指 对象的成员方法。而非从interface上实现的方法。    所以如果是从interface里实现的方法。则遵循的规则如下： 指针类型对象 实现了定义在指针类型上的方法时或者实现了定义在值类型的方法上时 都可以看做实现了interface； 而值类型对象 只有实现了 定义在值类型上的方法 才可以被看作是实现了interface。 有点绕。 不知道这么理解对不对。老师如果看到 能否再次解惑下。我感觉理解应该是对的 但是还是不太清楚这种机制 背后在内存层面以及语言设计层面为什么要这么做","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640689104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":460737,"ip_address":"","group_id":0},"score":542239,"extra":""}]},{"author":{"id":1182219,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0a/0b/985d3800.jpg","nickname":"郭星","note":"","ucode":"8A0F5DF80E0C61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290236,"discussion_content":"WriteFirstProgrammer(goProg) 这一行代码根本就不能编译通过吧(go版本 1.14),接口变量只能接收指向实例化的指针; ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594386333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1242498,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/82/75f71508.jpg","nickname":"曾立涵","note":"","ucode":"C8E9019A44FB9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1182219,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0a/0b/985d3800.jpg","nickname":"郭星","note":"","ucode":"8A0F5DF80E0C61","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295890,"discussion_content":"能过的，因为他func（p GoProgrammer）传的是实例而不是func （p *GoProgrammer）指向实例的指针","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596376422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":290236,"ip_address":"","group_id":0},"score":295890,"extra":""},{"author":{"id":2403351,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ac/17/430ddd05.jpg","nickname":"🐟","note":"","ucode":"F61C3F67E4A2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1242498,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/82/75f71508.jpg","nickname":"曾立涵","note":"","ucode":"C8E9019A44FB9B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542027,"discussion_content":"我尝试了，确实是这样的，但是不太明白为啥是这样。大神如果有幸被你看到 可否进行解答呢？感激不尽","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640621560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295890,"ip_address":"","group_id":0},"score":542027,"extra":""}]},{"author":{"id":1475415,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo1TwKH1gHhywibMg3nu2VN38hPyLJmC53Fu6RkR0bMrM8SCYW8FM1taWj7hH3jOFXTiaft941plwKw/132","nickname":"SeeaYouL","note":"","ucode":"AB3FFE8CF611F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3693,"discussion_content":"没想到结课了还能得到老师的回复，老师太敬业了吧，感谢感谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564716419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76932,"user_name":"t7ink","can_delete":false,"product_type":"c3","uid":1057762,"ip_address":"","ucode":"7D822FAE8E34FA","user_header":"https://static001.geekbang.org/account/avatar/00/10/23/e2/06575acb.jpg","comment_is_top":false,"comment_ctime":1552760022,"is_pvip":false,"replies":[{"id":28071,"content":"那就我当做那个接口的实现使用。所以，Go更提倡小接口（单个方法）大的接口有小接口组成","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1552785581,"ip_address":"","comment_id":76932,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"既然是duck type类型，如果一个结构没有实现全部接口，那go编译器只会认为它是什么？","like_count":3,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443509,"discussion_content":"那就我当做那个接口的实现使用。所以，Go更提倡小接口（单个方法）大的接口有小接口组成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552785581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124766,"user_name":"Geek_338030","can_delete":false,"product_type":"c3","uid":1614014,"ip_address":"","ucode":"6F2ACB3C528BAA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1ZcgbSZ1Q0eARic4sFq9PRO0rT55MAYUAcBVNK3dE6ficOQViblBlzUTnMJyK2bZbU3IsewnDxKD5Wtrq01DeHnWQ/132","comment_is_top":false,"comment_ctime":1565966824,"is_pvip":false,"replies":[{"id":45897,"content":"嗯，只要是在结构上实现了interface的方法，则可以传入结构实例指针类型或者结构的实例。\n如果方法是在结构的指针上实现的，则只能传入结构实例的指针。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1566121639,"ip_address":"","comment_id":124766,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"看了留言里说的那样改法后就可以将实例传入到WriteProgram（）里了，那请问课中所说的interface类型只能传入指针类型还成立吗","like_count":2,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463313,"discussion_content":"嗯，只要是在结构上实现了interface的方法，则可以传入结构实例指针类型或者结构的实例。\n如果方法是在结构的指针上实现的，则只能传入结构实例的指针。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566121639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155761,"user_name":"燕行","can_delete":false,"product_type":"c3","uid":1048380,"ip_address":"","ucode":"AE2BEFD3C5F31F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/3c/215aecca.jpg","comment_is_top":false,"comment_ctime":1574750807,"is_pvip":false,"replies":[{"id":60088,"content":"非常感谢🙏指出","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1574903381,"ip_address":"","comment_id":155761,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，你好，多态是polymorphism 不是 polymorphsim","like_count":1,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475862,"discussion_content":"非常感谢🙏指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574903381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115762,"user_name":"贵州 IT民工","can_delete":false,"product_type":"c3","uid":1110946,"ip_address":"","ucode":"7AED88C12FD672","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/a2/70ed46ae.jpg","comment_is_top":false,"comment_ctime":1563720587,"is_pvip":false,"replies":[{"id":43158,"content":"这里你可以简单的看作是GO的特殊写法。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1564148398,"ip_address":"","comment_id":115762,"utype":1}],"discussion_count":3,"race_medal":1,"score":2,"product_id":100024001,"comment_content":"老师，switch这里case的值不是v的值，是表达式的嘛 还是.(type)的特殊写法呢","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459277,"discussion_content":"这里你可以简单的看作是GO的特殊写法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564148398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600220,"discussion_content":"Type switches","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674117778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110946,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f3/a2/70ed46ae.jpg","nickname":"贵州 IT民工","note":"","ucode":"7AED88C12FD672","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3169,"discussion_content":"好，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564245425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77379,"user_name":".Alter","can_delete":false,"product_type":"c3","uid":1158580,"ip_address":"","ucode":"081F4EC6BC53F6","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/b4/ce3964a1.jpg","comment_is_top":false,"comment_ctime":1552915162,"is_pvip":false,"replies":[{"id":28323,"content":"这个为什么要用两段式呢，对于这个情况v后面的v有什么用呢？前面v已经被赋值并且可以在下面使用了。v的值是类型，你可以通过%T来输出","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1552964532,"ip_address":"","comment_id":77379,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师您好，请问为何我写两段式的switch语句会报错呢？\nswitch v := p.(type) ; v {\n  &#47;&#47; code\n}\n\n会报：use of .(type) outside type switch\n.(type)是只可以用在switch语句中吗？\n\n还有就是，这里面的v的返回结果是什么呢？可以用case判断类型，但打印出的是value值","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443706,"discussion_content":"这个为什么要用两段式呢，对于这个情况v后面的v有什么用呢？前面v已经被赋值并且可以在下面使用了。v的值是类型，你可以通过%T来输出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552964532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83091,"user_name":"jason-台北","can_delete":false,"product_type":"c3","uid":1456024,"ip_address":"","ucode":"EB59FE96D03835","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gFE2skMqzrfiaRCmRTqCVK2ZfqUOhXXJE3BsUPvpibEEibwaFMVuiaQ41JSHZL2fhanhtVheEjlGrroiavl5Fgh7mYw/132","comment_is_top":false,"comment_ctime":1554405113,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"interface,不只是能傳指針類型的實例，而是看您的實例有沒有實踐interface 的方法。\n","like_count":18,"discussions":[{"author":{"id":1067570,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4a/32/23db38ab.jpg","nickname":"Sunny","note":"","ucode":"FE57B69A9CF91D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606077,"discussion_content":"也很奇怪这个问题，当做注意点记下来吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676904787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2721761,"avatar":"https://static001.geekbang.org/account/avatar/00/29/87/e1/b3edcc09.jpg","nickname":"范飞扬","note":"","ucode":"A665DF46833A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592053,"discussion_content":"老师讲错了，interface 也可以传 非指针，需要修改代码而已，代码如下：\n\ntype Code string\ntype Programmer interface {\n\tWriteHelloWorld() Code\n}\n\ntype GoProgrammer struct {\n}\n\n//\n//func (p *GoProgrammer) WriteHelloWorld() Code {\n//\treturn &#34;fmt.Println(\\&#34;Hello World!\\&#34;)&#34;\n//}\n\nfunc (p GoProgrammer) WriteHelloWorld() Code {\n\treturn &#34;fmt.Println(\\&#34;Hello World!\\&#34;)&#34;\n}\n\ntype JavaProgrammer struct {\n}\n\nfunc (p *JavaProgrammer) WriteHelloWorld() Code {\n\treturn &#34;System.out.Println(\\&#34;Hello World!\\&#34;)&#34;\n}\n\nfunc writeFirstProgram(p Programmer) {\n\tfmt.Printf(&#34;%T %v\\n&#34;, p, p.WriteHelloWorld())\n}\n\nfunc TestPolymorphism(t *testing.T) {\n\tgoProg := GoProgrammer{}\n\tjavaProg := new(JavaProgrammer)\n\twriteFirstProgram(goProg) // polymorphism.GoProgrammer fmt.Println(&#34;Hello World!&#34;)\n\twriteFirstProgram(javaProg) // *polymorphism.JavaProgrammer System.out.Println(&#34;Hello World!&#34;)\n}","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1667048428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2005062,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJsOFUdib57ORbvFMEaFlRukxkntWJ9tgZJKUBq01g4j7Mo82wV4OHdTuSpWOELQaiaS9BflZpssWhA/132","nickname":"Geek_2c2a1f","note":"","ucode":"F95E7FD91CB2D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310369,"discussion_content":"是的，如果是值类型实现了这个接口，那既可以传值也可以传指针。但是为什么指针实现了，就必须传指针呢，这个还没搞清楚","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1601802564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248099,"user_name":"慵懒的二狗","can_delete":false,"product_type":"c3","uid":1186815,"ip_address":"","ucode":"C54AF3D77E65D6","user_header":"https://static001.geekbang.org/account/avatar/00/12/1b/ff/c0921053.jpg","comment_is_top":false,"comment_ctime":1600008984,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"三分钟三十秒的时候，只说要new指针类型，根本就没讲为啥必须是声明指针类型，原理在哪。一路听下来感觉课程好几处都一带而过不讲清楚原理。课程质量不好。","like_count":12,"discussions":[{"author":{"id":1876823,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/X4ib36ADEvj76XaKD4OUY9k15KqWCAVCwibPicBxz6BBUfDrVolpYInn8zFOw3JBPtVw3L4Lkibaf2eLPemwGKzAXA/132","nickname":"Geek_427d0c","note":"","ucode":"D7A04138C4B8CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309120,"discussion_content":"“因为Programmer是interface，interface只能是指针的实例”。3分50秒","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1601192877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2834523,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/gC0ujfu46rHmBPJDQrbafIhFfjFeTehQehKw3DpxwGSUnlfy5k6qWbKN9gCHSwF2uhIWSbVfZbo790EpNKleKA/132","nickname":"funtrin","note":"","ucode":"6C73FE32EDF0F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545877,"discussion_content":"。。。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642069389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2563580,"avatar":"https://static001.geekbang.org/account/avatar/00/27/1d/fc/12dc7a46.jpg","nickname":"Ru","note":"","ucode":"EEF496EC828DD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382250,"discussion_content":"因为定义的函数输入是指针","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625487591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273975,"user_name":"Jake","can_delete":false,"product_type":"c3","uid":1216486,"ip_address":"","ucode":"DA16FA2ADA9EAC","user_header":"https://static001.geekbang.org/account/avatar/00/12/8f/e6/932e8a90.jpg","comment_is_top":false,"comment_ctime":1610772177,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"v := p.(type)\ntype 是怎么来的？","like_count":2,"discussions":[{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600213,"discussion_content":"https://go.dev/ref/spec#Type_assertions","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674116622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2033634,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/e2/32c9a634.jpg","nickname":"申","note":"","ucode":"CE7BFCF552B4F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351725,"discussion_content":"应该是一种类型断言，goland中的.(type)只能用于switch中，但视频里没有提。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614415317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233626,"user_name":"郭星","can_delete":false,"product_type":"c3","uid":1182219,"ip_address":"","ucode":"8A0F5DF80E0C61","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/0b/985d3800.jpg","comment_is_top":false,"comment_ctime":1594370440,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"这里实现的多态实际是因为接口变量中存储了实例的结构体类型,因此在调用重写的方法时,实际调用的就是结构体中的方法","like_count":2},{"had_liked":false,"id":78253,"user_name":"reven404","can_delete":false,"product_type":"c3","uid":1022868,"ip_address":"","ucode":"F84AAF2DC1D18F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/94/4977913a.jpg","comment_is_top":false,"comment_ctime":1553105317,"is_pvip":false,"replies":null,"discussion_count":10,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"go语言不支持继承，但支持多态。\n\n下叙代码片段暑促结果怎么理解比较恰当，两次&quot;%T&quot;输出的类型不一致。\n\ntype FileAttrs interface {\n\tgetPath() string\n}\n\ntype File struct {\n\tName string\n}\ntype BlobFile struct {\n\tFile\n}\n\ntype TextFile struct {\n\tFile\n}\n\nfunc (file *File) getPath() string {\n\n\treturn fmt.Sprintf(&quot;%s&#47;%T&quot;, file.Name, file)\n}\n\nfunc printFileAttrs(file FileAttrs) {\n\tfmt.Printf(&quot;file name: %s ? %T\\n&quot;, file.getPath(), file)\n}\n\nfunc TestFile(t *testing.T) {\n\n\tfile := &amp;File{Name: &quot;0&quot;}\n\tbf := &amp;BlobFile{File{Name: &quot;1&quot;}}\n\ttf := &amp;TextFile{File{Name: &quot;2&quot;}}\n\tprintFileAttrs(file)\n\tprintFileAttrs(bf)\n\tprintFileAttrs(tf)\n}\n","like_count":2,"discussions":[{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600245,"discussion_content":"这段代码让我一激灵 谢谢老哥贡献代码 哈哈 评论区有东西的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674131603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600242,"discussion_content":"编程语言都是图灵完备的，你很难说它没有某个特性，这个看编程功底，golang 简洁但是仍然是图灵完备的，所以很多时候不要说绝对的话还是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674127645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600241,"discussion_content":"第一段代码看起来非常像是通过接口和组合实现了继承，这个在 golang 中也成为借口继承","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674127087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600239,"discussion_content":"一人血书，极客时间把文本编辑器支持 markdown","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674126796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600238,"discussion_content":"// 1. 接口实现\ntype FileAttrs interface {\n\tgetPath() string\n}\n\ntype File struct {\n\tName string\n}\n\n// File 实现了 Duck Type Interface FileAttrs\n// 这个方法在编译后实际上是 &#34;File + getPath&#34;\nfunc (file *File) getPath() string {\n\treturn fmt.Sprintf(&#34;%s/%T&#34;, file.Name, file)\n}\n\nfunc printFileAttrs(file FileAttrs) {\n\tfmt.Printf(&#34;file name: %s ? %T\\n&#34;, file.getPath(), file)\n}\n\n// 2. 组合优于继承\n// 并且因为 File 实现了 getPath 方法，由于组合存在，实际上 BlobFile 和 TextFile 都实现了 getPath方法\ntype BlobFile struct {\n\tFile // 组合，组合后这些 struct 都拥有了 File 的方法\n}\n\n// 使用 BlobFile 的对象调用\n// 这个方法在编译后实际上是 &#34;BlobFile + getPath&#34;\n// func (file *BlobFile) getPath() string {\n// \treturn fmt.Sprintf(&#34;%s/%T BolbFile&#34;, file.Name, file)\n// }\n\ntype TextFile struct {\n\tFile // 组合\n}\n\n// 使用 TextFile 的对象调用\n// 这个方法在编译后实际上是 &#34;TextFile + getPath&#34;\n// 这三个 getPath 在 golang 内部看来是不同的\n// func (file *TextFile) getPath() string {\n// \treturn fmt.Sprintf(&#34;%s/%T TextFile&#34;, file.Name, file)\n// }\n\nfunc main() {\n\n\tfile := &amp;File{Name: &#34;0&#34;}\n\tbf := &amp;BlobFile{File{Name: &#34;1&#34;}}\n\ttf := &amp;TextFile{File{Name: &#34;2&#34;}}\n\tprintFileAttrs(file)\n\tprintFileAttrs(bf)\n\tprintFileAttrs(tf)\n\tfmt.Println(bf.getPath())\n\tfmt.Println(tf.getPath())\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674126765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600236,"discussion_content":"这个老哥的例子还是很有意思的。\n看下面的两段代码吧\n```golang\n// 1. 接口实现\ntype FileAttrs interface {\n\tgetPath() string\n}\n\ntype File struct {\n\tName string\n}\n\n// File 实现了 Duck Type Interface FileAttrs\n// 这个方法在编译后实际上是 &#34;File + getPath&#34;\nfunc (file *File) getPath() string {\n\treturn fmt.Sprintf(&#34;%s/%T&#34;, file.Name, file)\n}\n\nfunc printFileAttrs(file FileAttrs) {\n\tfmt.Printf(&#34;file name: %s ? %T\\n&#34;, file.getPath(), file)\n}\n\n// 2. 组合优于继承\n// 并且因为 File 实现了 getPath 方法，由于组合存在，实际上 BlobFile 和 TextFile 都实现了 getPath方法\ntype BlobFile struct {\n\tFile // 组合，组合后这些 struct 都拥有了 File 的方法\n}\n\n// 使用 BlobFile 的对象调用\n// 这个方法在编译后实际上是 &#34;BlobFile + getPath&#34;\nfunc (file *BlobFile) getPath() string {\n\treturn fmt.Sprintf(&#34;%s/%T BolbFile&#34;, file.Name, file)\n}\n\ntype TextFile struct {\n\tFile // 组合\n}\n\n// 使用 TextFile 的对象调用\n// 这个方法在编译后实际上是 &#34;TextFile + getPath&#34;\n// 这三个 getPath 在 golang 内部看来是不同的\nfunc (file *TextFile) getPath() string {\n\treturn fmt.Sprintf(&#34;%s/%T TextFile&#34;, file.Name, file)\n}\n\nfunc main() {\n\n\tfile := &amp;File{Name: &#34;0&#34;}\n\tbf := &amp;BlobFile{File{Name: &#34;1&#34;}}\n\ttf := &amp;TextFile{File{Name: &#34;2&#34;}}\n\tprintFileAttrs(file)\n\tprintFileAttrs(bf)\n\tprintFileAttrs(tf)\n\tfmt.Println(bf.getPath())\n\tfmt.Println(tf.getPath())\n}\n```","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674126750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364619,"discussion_content":"我觉的这个输出结果很合理啊\n\n=== RUN   TestFile\nfile name: 0*go_learning.File ? *go_learning.File\nfile name: 1*go_learning.File ? *go_learning.BlobFile\nfile name: 2*go_learning.File ? *go_learning.TextFile\n--- PASS: TestFile (0.00s)\nPASS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617539921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1242498,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/82/75f71508.jpg","nickname":"曾立涵","note":"","ucode":"C8E9019A44FB9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295897,"discussion_content":"File在Blob和Text中是匿名结构体，File的方法被引入到这两者中，getpath的参数是File，所以printFileAttrs里getpath的%T就是File（三个都相同），第二个%T对应file FileAttrs，也就是根据你传入的实例对应的类型，（这时候三个都不同）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596378186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433247,"avatar":"https://static001.geekbang.org/account/avatar/00/15/de/9f/b6c59a75.jpg","nickname":"dust！","note":"","ucode":"7ADCCC7985B381","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177195,"discussion_content":"是没有继承啊，第一个结果不是输出了就是File的类型了吗？跟前一节演示的Dog与Pet类似啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582084643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1598484,"avatar":"https://static001.geekbang.org/account/avatar/00/18/64/14/13f37902.jpg","nickname":"mamba","note":"","ucode":"24DB3BBFFFF8B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1372,"discussion_content":"这有啥不理解的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562586490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250687,"user_name":"Geek_427d0c","can_delete":false,"product_type":"c3","uid":1876823,"ip_address":"","ucode":"D7A04138C4B8CB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/X4ib36ADEvj76XaKD4OUY9k15KqWCAVCwibPicBxz6BBUfDrVolpYInn8zFOw3JBPtVw3L4Lkibaf2eLPemwGKzAXA/132","comment_is_top":false,"comment_ctime":1601196091,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"补充一点，我做了实验，发现p.(int)相当于把入参转换成int，如果入参不是int型，那么i会是int的空值，也就是0.所以下面的代码，输出not integer 0\nif i,ok: = p.(int); !ok {\n  fmt.Println(&quot;not integer&quot;, i)\n} \n如果是传“10”，打印是not integer 0","like_count":1},{"had_liked":false,"id":233830,"user_name":"Aprelude","can_delete":false,"product_type":"c3","uid":1658796,"ip_address":"","ucode":"840D3F7A35AEEF","user_header":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","comment_is_top":false,"comment_ctime":1594465794,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"go里面接口实现不依赖于接口，接口实现改了接口定义还要去维护 感觉接口定义没啥作用啊","like_count":1,"discussions":[{"author":{"id":2658412,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/pFZlQIFFHQ0E4SNCWPdgrQO19Dg1GPIsFibQzwpicF64rEOL2PoUwGMXrZQ70raDHdEicIDauiaeVKLBbze2NCABibg/132","nickname":"Geek_5e294c","note":"","ucode":"E3B53893EBB2D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586827,"discussion_content":"个人理解，接口类型主要是作为通用函数的入参，使得函数对类型的适应性得到了扩充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662532131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286736,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1617540286,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"空接口类似于 C++ 里面的 void * 可以穿任何类型进去，类似于 Java 中的 object，如果真的使用的时候，需要进行类型转换\n\n在 Go 里面可以使用断言 p.(type) 来判断类型，但是确实和留言里面说的一样，只能用于 switch 中，算是一种约定么？\n\n最近的着三节，连起来看，Go 不支持继承，接口的实现和 Java 之类的语言也有很大的区别，但是可以实现多态。\n\n不明觉厉，虽然不知道这些特性有什么优势，但是从 Google 的背书和大佬们的支持，应该还是有潜力的。","like_count":0},{"had_liked":false,"id":257893,"user_name":"晴天了","can_delete":false,"product_type":"c3","uid":1359669,"ip_address":"","ucode":"5310E02F8DF1F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/35/0e3a92a7.jpg","comment_is_top":false,"comment_ctime":1604198272,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"Solid 中的 接口隔离原则","like_count":0},{"had_liked":false,"id":198129,"user_name":"Vicky~婵娟","can_delete":false,"product_type":"c3","uid":1899341,"ip_address":"","ucode":"E10E28773B60F9","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fb/4d/c5ac9df5.jpg","comment_is_top":false,"comment_ctime":1585411055,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"感觉现在Java,Go, Python傻傻分不清楚了","like_count":0},{"had_liked":false,"id":189402,"user_name":"翡翠虎","can_delete":false,"product_type":"c3","uid":1448015,"ip_address":"","ucode":"2572E93C4C57A5","user_header":"https://static001.geekbang.org/account/avatar/00/16/18/4f/9e4d5591.jpg","comment_is_top":false,"comment_ctime":1584512539,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"GORM 查询的返回结果类型是 interface{} | *[]UserModel，里面有多个元素，我如何操作才能够遍历这个结果呢？\n","like_count":0},{"had_liked":false,"id":170904,"user_name":"海盗船长","can_delete":false,"product_type":"c3","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1578754442,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"type Code string&#47;&#47;类型定义 type Code=string &#47;&#47;类型别名","like_count":0},{"had_liked":false,"id":97443,"user_name":"Geek_f99568","can_delete":false,"product_type":"c3","uid":1369680,"ip_address":"","ucode":"71F490E6C59B4A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoGzk8vZK27cY76jFIO3qJNukRRiboT35kDpkOibyxrXyoUt4GeUFuVmQLlfNIOggp6trI7QZbHVMLA/132","comment_is_top":false,"comment_ctime":1558670204,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"老师，我也想知道荣同学这段代码的理解。","like_count":0}]}