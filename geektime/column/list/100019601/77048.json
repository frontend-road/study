{"id":77048,"title":"04 | 代码规范的价值：复盘苹果公司的GoToFail漏洞","content":"<p>我们在上一讲中讨论了一个优秀的程序员都需要具备哪些良好的品质，第一点就是要熟练掌握一门编程语言。</p><p>作为每天都要和代码打交道的人，光是熟练掌握还不够。我们需要像文字写作者一样，对代码有一种“洁癖”，那就是强调代码的规范化。</p><h2>什么是编码规范？</h2><p>要回答为什么需要编码规范，我们首先要了解编码规范指的是什么。</p><p>编码规范指的是针对特定编程语言约定的一系列规则，通常包括文件组织、缩进、注释、声明、语句、空格、命名约定、编程实践、编程原则和最佳实践等。</p><p>一般而言，一份高质量的编码规范，是严格的、清晰的、简单的，也是权威的。但是我们有时候并不想从内心信服，更别提自觉遵守了。你可能想问，遵循这样的约定到底有什么用呢？</p><p>编码规范可以帮我们选择编码风格、确定编码方法，以便更好地进行编码实践。 简单地说，<strong>一旦学会了编码规范，并且严格地遵守它们，可以让我们的工作更简单，更轻松，少犯错误</strong>。</p><p>这个问题弄明白了，我们就能愉快地遵守这些约定，改进我们的编程方式了。</p><h2>规范的代码，可以降低代码出错的几率</h2><p><strong>复杂是代码质量的敌人</strong>。 越复杂的代码，越容易出现问题，并且由于复杂性，我们很难发现这些隐藏的问题。</p><p>我们在前面已经讨论过苹果公司的安全漏洞（GoToFail漏洞），接下来再来看看这个bug的伪代码。这个代码很简单，就是两个if条件语句，如果判断没问题，就执行相关的操作。</p><!-- [[[read_end]]] --><pre><code>    if ((error = doSomething()) != 0)\n        goto fail;\n        goto fail;\n    if ((error= doMore()) != 0)\n        goto fail;\nfail:\n    return error;\n</code></pre><p>这段代码没有正确地使用缩进和大括号，不是一段符合编码规范的源代码。 如果我们使用符合规范的编码方式，这个安全漏洞就自然消失了。你可以看到，下面的代码里，我给if语句中加了大括号，代码看起来一下子就简单很多了。</p><pre><code>    if ((error = doSomething()) != 0) {\n        goto fail;\n        goto fail;\n    }\n    if ((error= doMore()) != 0) {\n        goto fail;\n    }\nfail:\n    return error;\n</code></pre><p>所以<strong>在编码的时候，我们应该尽量使代码风格直观、逻辑简单、表述直接</strong>。 如果遵守编码规范，我们就可以更清楚、直接地表述代码逻辑。</p><h2>规范的代码，可以提高编码的效率</h2><p>还记得我们在前面讨论过代码“出道”的重重关卡吗？这些关卡，构成了代码制造的流水线。优秀的代码，来源于优秀的流水线。</p><p>如果我们都遵守相同的编码规范，在每一道关卡上，会产生什么样的质变呢？</p><p>在程序员编写代码这道关，如果我们规范使用缩进、命名、写注释，可以节省我们大量的时间。比如，如果使用规范的命名，那么看到名字我们就能知道它是一个变量，还是一个常量；是一个方法，还是一个类。</p><p>在编译器这道关，我们可以避免额外的警告检查，从而节省时间。还记得我们前面讨论过的GCC关于正确使用缩进的编译警告吗？ 如果有编译警告出现，我们一般都要非常慎重地检查核对该警告有没有潜在威胁。这对我们的精力和时间，其实是不必要的浪费。</p><p>还记得GCC由于老旧的编程风格的原因，不支持无法访问代码编译错误吗？ 过度自由的编码风格，有时候甚至会阻碍编译器开发一些非常有用的特性，使得我们无心的过失行为越积累越不好解决。</p><p>在代码评审这道关，如果我们不遵守共同的编码规范，这多多少少会影响评审者阅读代码的效率。为什么呢？因为评审者和编码者往往有着不一样的审美偏好。一条评审意见，可能要花费评审者很长时间来确认、评论。 然后，源代码编写者需要分析评审意见，再回到流水线的第一关，更改代码、编译、测试，再次提交评审，等待评审结果。</p><p>审美偏好一般都难以协调，由此导致的重复工作让编码的效率变得更低了。</p><p>在代码分析这道关，编码规范也是可以执行检查分析的一个重要部分。类似于编译器，如果有警告出现，分析警告对我们的精力是一种不必要的浪费； 如果过度自由，同样会阻碍代码分析工具提供更丰富的特性。</p><p>只要警报拉响，不管处在哪一个关卡，源代码编写者都需要回到流水线的第一关，重新评估反馈、更改代码、编译代码、提交评审、等待评审结果等等。每一次的返工，都是对时间和精力的消耗。</p><p><strong>总结一下，在代码制造的每一道关卡，规范执行得越早，问题解决得越早，整个流水线的效率也就越高。</strong></p><p>前一段时间，阿里巴巴发表了《阿里巴巴Java开发手册》。我相信，或许很快，执行阿里巴巴Java编码规约检查的工具就会出现，并且成为流水线的一部分。 对于违反强制规约的，报以错误；对于违反推荐或者规约参考的，报以警告。这样，流水线才会自动促进程序员的学习和成长，修正不符合规范的编码。</p><h2>规范的代码，降低软件维护成本</h2><p>代码经过重重关卡，好不容易“出道”了，这样就结束了吗？</p><p>恰恰相反，“出道”之后，才是代码生命周期的真正开始。</p><p>如果是开源代码，它会面临更多眼光的挑剔。即使是封闭代码，也有可能接受各种各样的考验。\"出道”的代码有它自己的旅程，有时候超越我们的控制和想象。在它的旅程中，会有新的程序员加入进来，观察它，分析它，改造它，甚至毁灭它。软件的维护，是这个旅程中最值得考虑的部分。</p><p>有统计数据表明，<strong>在一个软件生命周期里，软件维护阶段花费了大约80%的成本</strong>。这个成分，当然包括你我投入到软件维护阶段的时间和精力。</p><p>举例来说吧，让我们一起来看看，一个Java的代码问题，在OpenJDK社区会发生什么呢？</p><p>在Java的开发过程中，当需要代码变更时，我们需要考虑一个问题：使用这些代码的应用是否可以像以前一样工作？</p><p>一旦出现了问题，一般有两种可能：要么是Java的代码变更存在兼容性问题，要么存在应用使用Java规范不当的问题。这就需要确认问题的根源到底是什么。</p><p>由于OpenJDK是开源代码，应用程序的开发者往往需要调试、阅读源代码。阅读源代码这件事情，在一定程度上，类似于代码评审的部分工作。如果代码是规范的，那么他们的阅读心情就会好一些，效率也就更高。</p><p>如果发现了任何问题，可以提交问题报告。问题报告一般需要明确列出存在的具体问题。 对于问题报告，也会有专门的审阅者进行研究分析，这个问题描述是否清晰？它是不是一个真正的问题？由谁解决最合适？</p><p>很多情况下，报告的审阅者也需要阅读、调试源代码。良好的编码规范，可以帮助他们快速理解问题，并且找到最合适的处理人员。</p><p>如果确定了问题，开发人员或者维护人员会进一步评估、设计潜在的解决方案。如果原代码的作者不能提供任何帮助，比如已经离职，那么他们可以依靠的信息，就只有代码本身了。</p><p>你看，这个代码问题修改的过程重包含了很多角色：代码的编写者、代码的使用者、问题的审阅者以及问题的解决者， 这些角色一般不是同一个人。在修改代码时，不管我们是其中的哪一个角色，遵守规范的代码都能够节省我们的时间。</p><p><strong>很多软件代码，其生命的旅程超越了它的创造者，超越了团队的界限，超越了组织的界限，甚至会进入我们难以预想的领域</strong>。即使像空格缩进这样的小问题，随着这段代码的扩散，以及接触到这段代码人数的增加，由它造成的效率问题也会对应的扩散、扩大。</p><p>而严格遵守共同的编码规范，提高代码的可读性，可以使参与其中的人更容易地理解代码，更快速地理解代码，更快速地解决问题。</p><h2>编码规范越使用越高效</h2><p>除了上面我们说道的好处，编码规范还有一个特点，就是越使用越高效。</p><p>比如我们小时候都背诵过乘法口诀，如果我问你，3乘3得几？ 我相信，你立即就会告诉我，答案是9。 不管这时候你是在开车、还是在走路；是在吃饭，还是在玩游戏。</p><p>如果我问你，13乘以23，结果是多少？ 除非你经过非常特殊的训练，你不会立即就有答案，甚至你走路的时候，不停下脚步，就算不出这个结果。</p><p>如果我问一个还没学过乘法的小孩子呢？ 3乘3的算术，对于小孩子，也许是一个不小的难题。</p><p>对于背诵过乘法口诀的我们来说，3乘3的算术根本就不需要计算，我们的大脑可以快速地、毫不费力地、无意识地处理这样的问题。 这种系统是我们思维的快系统。 快系统勤快、省力，我们喜欢使用它。</p><p>而对于13乘以23的算术，我们的大脑需要耗费脑力，只有集中注意力，才能运算出来。这种系统是我们思维的慢系统。慢系统懒惰、费劲，我们不愿意使用它。</p><p>快系统和慢系统分工协作，快系统搞不定的事情，就需要慢系统接管。 快系统处理简单、固定的模式，而慢系统出面解决异常状况和复杂问题。</p><p>比如上面苹果公司安全漏洞的那个例子，如果我们像乘法表一样熟练使用编码规范，一旦遇到没有使用大括号的语句，我们立即就会非常警觉。 因为，不使用大括号的编码方式不符合我们习以为常的惯例，快系统立即就能判别出异常状况，然后交给慢系统做进一步的思考。 如果我们没有养成编码规范的习惯，我们的快系统就会无视这样的状况，错失挽救的机会。</p><p>所以，我们要尽早地使用编码规范，尽快地培养对代码风格的敏感度。 良好的习惯越早形成，我们的生活越轻松。</p><h2>小结</h2><p>对于编码规范这件事，我特别想和你分享盐野七生在《罗马人的故事》这套书里的一句话：“<strong>一件东西，无论其实用性多强，终究比不上让人心情愉悦更为实用。</strong>”</p><p>严格地遵守编码规范，可以使我们的工作更简单，更轻松，更愉快。 记住，<strong>优秀的代码不光是给自己看的，也是给别人看的，而且首先是给别人看的</strong>。</p><p>你有什么编码规范的故事和大家分享吗？ 欢迎你在留言区写写自己的想法，我们可以进一步讨论。也欢迎你把今天的文章分享给跟你协作的同学，看看编码规范能不能让你们之间的合作更轻松愉快。</p><h2>一起来动手</h2><p>下面的这段代码，我们前面用过一次，我稍微做了点修改。我们这次重点来看编码的规范，有哪些地方你看着不顺眼，你会怎么改进？</p><pre><code>package com.example;\n\nimport java.util.Collections;\nimport java.util.List;\nimport javax.net.ssl.SNIServerName;\n\nclass ServerNameSpec {\n    final List&lt;SNIServerName&gt; serverNames;\n\n    ServerNameSpec(List&lt;SNIServerName&gt; serverNames) {\n        this.serverNames = Collections.&lt;SNIServerName&gt;unmodifiableList(serverNames);\n    }\n\n    public String toString() {\n        if (serverNames == null || serverNames.isEmpty())\n        return &quot;&lt;no server name indicator specified&gt;&quot;;\n        \n        StringBuilder builder = new StringBuilder(512);\n        serverNames.stream().map((sn) -&gt; {\n            builder.append(sn.toString());\n            return sn;\n        }).forEachOrdered((_item) -&gt; {\n            builder.append(&quot;\\n&quot;);\n        });\n\n        return builder.toString();\n    }\n}\n</code></pre><p>你也可以把这篇文章分享给你的朋友或者同事，一起来讨论一下这道小小的练习题。</p><p></p>","comments":[{"had_liked":false,"id":58624,"user_name":"Carlos","can_delete":false,"product_type":"c1","uid":1143912,"ip_address":"","ucode":"687CD9CA3E7C9B","user_header":"https://static001.geekbang.org/account/avatar/00/11/74/68/3725546b.jpg","comment_is_top":true,"comment_ctime":1547145359,"is_pvip":false,"replies":[{"id":"21194","content":"如果逻辑没有理清楚，就开始写代码，就有可能后面越改越乱。<br><br>我想起来前面有人说的小黄鸭的办法，把代码逻辑讲给小黄鸭听。能讲出来，逻辑就被梳理了一遍。<br><br>我在评审代码的时候，如果看到太复杂的代码，我就问作者问题，问为什么这样，问什么不那样做。几个问题下来，代码就会顺利些。","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1547168797,"ip_address":"","comment_id":58624,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.2233720598768005e+18","product_id":100019601,"comment_content":"我感觉我就是一个有代码洁癖的人，写代码时有自己的原则和规范方法，其中做到易读和结构简洁是首要原则，这里面像命名，缩进，空行这种静态规则，有IDE的帮助还算比较容易做到。对于不少人来说比较难做到的可能是代码逻辑的组织。前几天刚看了个同事写的代码，关于视频课程管理的，表结构设计也是他做的。业务上要求课程需要属于某个等级，等级属于类别，类别属于厂商，为了做到同一个课程向不同客户展示不同的价格，又设计了个课程价格关系模型。这几个子项都有对应的业务模型和业务接口类。问题来了，添加课程时，在课程的某一个controller方法里，分别通过getparameter获取参数，构造数据对象，然后调用业务逻辑接口执行插入，最终完成多个业务模型的操作，有的是一对多再来个循环。一个方法里干这么多事情，我都接受了，居然把获取参数和给对象赋值无规律的穿插进行，偶尔还穿插来个参数校验，并且还在方法内部把获取过来的参数加个中文注释。删除课程数据时，需要把关联子模型数据也删除掉，他把各个子模型的删除方法都写到课程的service里。另外还存在A引用B，B又引用A，同时A又被其他好几个地方引用，不同引用之间通过不同参数走不同分支，并且有些参数在哪个场景下传过来的，他自己也弄不清了。带来这样问题就是写代码前，没把逻辑脉络梳理清楚，完全跟着感觉走，就一个简单的增删改查能写成这样，真怀疑要是把一个后端数据服务的代码给他写不知道能给写成啥样。","like_count":5,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436141,"discussion_content":"如果逻辑没有理清楚，就开始写代码，就有可能后面越改越乱。\n\n我想起来前面有人说的小黄鸭的办法，把代码逻辑讲给小黄鸭听。能讲出来，逻辑就被梳理了一遍。\n\n我在评审代码的时候，如果看到太复杂的代码，我就问作者问题，问为什么这样，问什么不那样做。几个问题下来，代码就会顺利些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547168797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1898023,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","nickname":"术子米德","note":"","ucode":"382EA7E2AF0B56","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531896,"discussion_content":"从你留言里的几个方法名字，没看出你很“洁癖”嘛","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637461945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58665,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1547169809,"is_pvip":false,"replies":[{"id":"21222","content":"😂我看这个留言，满是欢乐啊。<br><br>为什么没办法说呢？ 一般这种问题，说了就是帮助他提高啊。 当然，我也理解有些公司文化不开放。<br><br>我替你想两个办法，一个是琢磨琢磨怎么说他会愉快滴接受，并且感谢你。或者，琢磨琢磨怎么搞个规范，让流程帮助他。 他变好了，你也工作轻松，心情愉快，对吧？ 多赢！ 这种事情，也能给你带来成就感，不信你就试一试😄。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547179970,"ip_address":"","comment_id":58665,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57381744657","product_id":100019601,"comment_content":"读烂代码就想抽人。<br>类似于new一堆对象。然后在几十行以后才使用   如果命名规范还好，如若不规范就要点回去看。<br>还有这样奇怪的代码，写了个循环便利集合，但是循环中只有<br>if（list.get（0）！=null）｛<br>return list.get（0）；<br>｝<br>每次读这样的代码。全都要研究一下这个循环是干啥的。<br>还有这样的，解决异常。try包了一大串代码，找哪一行抛的异常很费劲。<br>还有实体类型字段，String state=“1”；<br>然后后面备注。1代表啥，2代表啥，3代表啥。<br>不老老实实写个枚举或者常量嘛？<br>还有代码里的无端空行。写一行，空一行......一个半屏幕滚动能看完的代码，硬是看了两个半屏幕。<br>关键是还没法去说，毕竟同事之间。只是默默祈祷，不要让自己维护他的代码就好。","like_count":13,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436158,"discussion_content":"😂我看这个留言，满是欢乐啊。\n\n为什么没办法说呢？ 一般这种问题，说了就是帮助他提高啊。 当然，我也理解有些公司文化不开放。\n\n我替你想两个办法，一个是琢磨琢磨怎么说他会愉快滴接受，并且感谢你。或者，琢磨琢磨怎么搞个规范，让流程帮助他。 他变好了，你也工作轻松，心情愉快，对吧？ 多赢！ 这种事情，也能给你带来成就感，不信你就试一试😄。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1547179970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2630218,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DIib9PmT6hkFXibalDGiabibUgZCCatBXd3EFjeWUZQLe0B32pTVQibMDVeAFPddLnttkTIytunlaqFVndicJFytuKnQ/132","nickname":"冯俊明","note":"","ucode":"22F230D0B5C0EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377888,"discussion_content":"程序中尽量不要出现魔法值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622947838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59179,"user_name":"Y024","can_delete":false,"product_type":"c1","uid":1018056,"ip_address":"","ucode":"397126D2E17997","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/c8/ae476935.jpg","comment_is_top":false,"comment_ctime":1547312256,"is_pvip":true,"replies":[{"id":"21386","content":"谢谢提供这么多资源🙏","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547353053,"ip_address":"","comment_id":59179,"utype":1}],"discussion_count":2,"race_medal":1,"score":"44496985216","product_id":100019601,"comment_content":"阿里巴巴 java 开发规范，官方已提供了 idea、eclipse 插件，详情可以访问官方链接：https:&#47;&#47;github.com&#47;alibaba&#47;p3c&#47;blob&#47;master&#47;README.md<br><br>此外还有FindBugs、PMDPlugin、CheckStyle<br>、JavaNCSS、sonarlint，可以多管齐下，为你保驾护航。","like_count":10,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436308,"discussion_content":"谢谢提供这么多资源🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547353053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030242,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/62/60937bbd.jpg","nickname":"逗你玩😄","note":"","ucode":"2E6309586B0363","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548052,"discussion_content":"sonarlint 感觉最好用。阿里的笔记本性能不太好的不建议装","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643012554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58653,"user_name":"richey","can_delete":false,"product_type":"c1","uid":1003597,"ip_address":"","ucode":"4EC65BA051E1C5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/4d/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1547166899,"is_pvip":true,"replies":[{"id":"21193","content":"谢谢你！ 我要记得下次把这个修订了。","user_name":"作者回复","user_name_real":"相磋相磨","uid":"1111315","ctime":1547167847,"ip_address":"","comment_id":58653,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27316970675","product_id":100019601,"comment_content":"范老师，阿里的代码规约检查插件已经有了，还挺好用的","like_count":6,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436151,"discussion_content":"谢谢你！ 我要记得下次把这个修订了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547167847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58637,"user_name":"cocoa","can_delete":false,"product_type":"c1","uid":1259577,"ip_address":"","ucode":"0FEEB436AB88B4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKjoHHMVibKZicReibTxbZtNQRgqneI5lOaiaTvtxaiau6YXjMSvA2rM2chV10WliayrkAJcGT6p3ZWkT0Q/132","comment_is_top":false,"comment_ctime":1547164622,"is_pvip":true,"replies":[{"id":"21577","content":"&gt; 1.属性明确加上private<br>如果是个公开类，需要使用private修饰符。 如果是内部类，使用缺省的修饰符也可以。<br><br>&gt; 2.泛型赋值的时候自动判断类型，不用显示加<br>是的。<br><br>&gt; 3.if的第一个或条件不需要<br>如果把缺省的无参构造函数补上，这个条件就明显地不需要了。<br><br>&gt; 4.if使用大括号<br>对的。<br><br>&gt; 5.map一般用来转换，这块用迭代foreach就行了<br>&gt; 6.不用使用顺序迭代，本来集合list就有顺序<br>是的，foreach足以。<br><br>&gt; 7.toSring显示标明override<br>是的，这是一个违反规范的地方。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547518900,"ip_address":"","comment_id":58637,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27316968398","product_id":100019601,"comment_content":"1.属性明确加上private<br>2.泛型赋值的时候自动判断类型，不用显示加<br>3.if的第一个或条件不需要<br>4.if使用大括号<br>5.map一般用来转换，这块用迭代foreach就行了<br>6.不用使用顺序迭代，本来集合list就有顺序<br>7.toSring显示标明override","like_count":6,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436146,"discussion_content":"&amp;gt; 1.属性明确加上private\n如果是个公开类，需要使用private修饰符。 如果是内部类，使用缺省的修饰符也可以。\n\n&amp;gt; 2.泛型赋值的时候自动判断类型，不用显示加\n是的。\n\n&amp;gt; 3.if的第一个或条件不需要\n如果把缺省的无参构造函数补上，这个条件就明显地不需要了。\n\n&amp;gt; 4.if使用大括号\n对的。\n\n&amp;gt; 5.map一般用来转换，这块用迭代foreach就行了\n&amp;gt; 6.不用使用顺序迭代，本来集合list就有顺序\n是的，foreach足以。\n\n&amp;gt; 7.toSring显示标明override\n是的，这是一个违反规范的地方。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547518900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294314,"user_name":"阔别","can_delete":false,"product_type":"c1","uid":2417306,"ip_address":"","ucode":"E37411D178B604","user_header":"https://static001.geekbang.org/account/avatar/00/24/e2/9a/9ff4869c.jpg","comment_is_top":false,"comment_ctime":1621877364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10211811956","product_id":100019601,"comment_content":"我不明白换行这个事情有什么必要来回说的, 现在工具不都可以格式化吗, 我无意diss作者,但是我已经看到第四节了,依然没有看到真正有任何价值的东西","like_count":2},{"had_liked":false,"id":60398,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1547468685,"is_pvip":false,"replies":[{"id":"21561","content":"赞！ 领导和同事看到你的留言也没问题的，规范是多赢的局面，大家都进步。规范这东西，用的人越多力量越大，效率越高。<br><br>同事们没有规范，大概率是还没有意识到规范的好处。前几篇文章我自己都觉得都有点啰嗦。但是我就是要把这些基本的理念，翻过来调过去的讲，从不同的角度讲。有了这些意识以后，技术的东西就都是小事了。我也建议你分享一下专栏的这几篇文章给同事们。<br><br>我想一想有什么形式，可以让三五个小伙伴组成一个小组，把代码规范就启动起来，还不增加大家的工作负担。也许后续我们可以写一个专题文章。专栏的小伙伴们，也帮着想想办法。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547487480,"ip_address":"","comment_id":60398,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137403277","product_id":100019601,"comment_content":"“我替你想两个办法，一个是琢磨琢磨怎么说他会愉快滴接受，并且感谢你。或者，琢磨琢磨怎么搞个规范，让流程帮助他。 他变好了，你也工作轻松，心情愉快，对吧？ 多赢！ 这种事情，也能给你带来成就感，不信你就试一试😄。”<br>为了看到规范代码。我做了以下的事：<br>1. 自己先更加严格要求自己的代码。<br>2. 参加了阿里巴巴代码规范的认证考试，并拿到了证书。<br>3. 把证书给领导看一眼（证明我自己是规范的），然后说规范很有用。<br>4.领导表示，嗯，他也觉得是这样。<br>5.领导在群里通知，建议大家考一下，费用公司报销。<br>5几个月过去了，我还是唯一一个我们单位执证上岗的。<br>6. 报了范老师的课程。无法要求别人，但是更不能停止精进自己！最起码不能让别人骂我的代码！<br>希望这段留言不会被我同事或者领导看到，紧张。<br>不过，被看到了，貌似也有好处，没准我们公司的代码明天就规范化了呢。","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436491,"discussion_content":"赞！ 领导和同事看到你的留言也没问题的，规范是多赢的局面，大家都进步。规范这东西，用的人越多力量越大，效率越高。\n\n同事们没有规范，大概率是还没有意识到规范的好处。前几篇文章我自己都觉得都有点啰嗦。但是我就是要把这些基本的理念，翻过来调过去的讲，从不同的角度讲。有了这些意识以后，技术的东西就都是小事了。我也建议你分享一下专栏的这几篇文章给同事们。\n\n我想一想有什么形式，可以让三五个小伙伴组成一个小组，把代码规范就启动起来，还不增加大家的工作负担。也许后续我们可以写一个专题文章。专栏的小伙伴们，也帮着想想办法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547487480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60317,"user_name":"槛外人","can_delete":false,"product_type":"c1","uid":1053058,"ip_address":"","ucode":"3F821FB998E63A","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/82/ab3f0985.jpg","comment_is_top":false,"comment_ctime":1547457806,"is_pvip":false,"replies":[{"id":"21579","content":"好的，以后多考虑加点实践。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547519511,"ip_address":"","comment_id":60317,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137392398","product_id":100019601,"comment_content":"希望能多点最佳实践，最近几期好像有点重复了","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436474,"discussion_content":"好的，以后多考虑加点实践。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547519511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58979,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1547264461,"is_pvip":false,"replies":[{"id":"21357","content":"我们这个专栏就是讨论怎么写好代码的。我们慢慢来。 讨论区有很多高手，多参与讨论，多做练手题。一定会有收获的。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547270777,"ip_address":"","comment_id":58979,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10137199053","product_id":100019601,"comment_content":"看自己的代码不顺眼，看别人的也是，开源代码很多就看着赏心悦目。总感觉那方面还需要加强，总是不得其法","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436264,"discussion_content":"我们这个专栏就是讨论怎么写好代码的。我们慢慢来。 讨论区有很多高手，多参与讨论，多做练手题。一定会有收获的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547270777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213887,"avatar":"https://static001.geekbang.org/account/avatar/00/12/85/bf/5c5e86bb.jpg","nickname":"旺旺","note":"","ucode":"161B267F67EBCA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289178,"discussion_content":"哈哈哈哈   这个留言好逗，特别真诚  一起加油 奥利给","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594018550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58678,"user_name":"秦凯","can_delete":false,"product_type":"c1","uid":1069307,"ip_address":"","ucode":"523228E55CE480","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/fb/872e2cf1.jpg","comment_is_top":false,"comment_ctime":1547173533,"is_pvip":false,"replies":[{"id":"21225","content":"好使😊，tab键，可以在IDE设置好，vi也可以设置，把tab换成四个空格。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547184078,"ip_address":"","comment_id":58678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137108125","product_id":100019601,"comment_content":"分享两条简单、有价值的实践：<br>在编辑器中设置使用指定的空格数（一般四个）替换tab键；<br>范老师之前提到的，用if else 替换三目运算符，以及用 i += 1; 替换 ++i;等，可以让代码逻辑更易于理解，降低阅读成本。","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436166,"discussion_content":"好使😊，tab键，可以在IDE设置好，vi也可以设置，把tab换成四个空格。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547184078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61853,"user_name":"ownraul","can_delete":false,"product_type":"c1","uid":1080963,"ip_address":"","ucode":"37A3D24BE83D0E","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/83/27fd9c50.jpg","comment_is_top":false,"comment_ctime":1547819836,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5842787132","product_id":100019601,"comment_content":"代码首先是给自己看的，然后是给别人看的，最终还要给以后的自己看的<br>只有让人一眼望去，其中想要表达的逻辑能清晰明了，一览无遗，这才是好代码","like_count":1},{"had_liked":false,"id":351518,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1657861207,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657861207","product_id":100019601,"comment_content":"优秀的代码不光是给自己看的，也是给别人看的，而且首先是给别人看的。--记下来","like_count":0},{"had_liked":false,"id":345604,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1652427442,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652427442","product_id":100019601,"comment_content":"Stream的缩进烧脑 override加上 成员变量私有 我想改的","like_count":0},{"had_liked":false,"id":321227,"user_name":"进化菌","can_delete":false,"product_type":"c1","uid":1276861,"ip_address":"","ucode":"B30A5F78BB4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/bd/ccb37425.jpg","comment_is_top":false,"comment_ctime":1636716443,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636716443","product_id":100019601,"comment_content":"规范规范，有规矩有范例，遵守规矩效仿案例。<br>练习里，有看到没有使用合理的缩进和大括号……其实，最近看自己一个月前的代码，一个方法了放过重的逻辑，看的也是很头大。<br>代码如写诗，总得努力改变，让Ta如同自己一般清晰稳健的劳动~","like_count":0},{"had_liked":false,"id":195486,"user_name":"玄兴梦影","can_delete":false,"product_type":"c1","uid":1364855,"ip_address":"","ucode":"D9EDBBC61317E9","user_header":"https://static001.geekbang.org/account/avatar/00/14/d3/77/fb38ccf1.jpg","comment_is_top":false,"comment_ctime":1585191175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585191175","product_id":100019601,"comment_content":"代码如诗！","like_count":0},{"had_liked":false,"id":171806,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1579016232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579016232","product_id":100019601,"comment_content":"对o  为啥不加大括号？？？  脑子进水了？？？","like_count":0},{"had_liked":false,"id":128498,"user_name":"華","can_delete":false,"product_type":"c1","uid":1075757,"ip_address":"","ucode":"90C0F71429BA20","user_header":"https://static001.geekbang.org/account/avatar/00/10/6a/2d/09700017.jpg","comment_is_top":false,"comment_ctime":1566890069,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566890069","product_id":100019601,"comment_content":"编码规范除了个人要有良好的编码习惯外，最好还是能有一些工具来辅助，比如阿里的编码规范插件，还有团队协作编码，基础的规则，可以使用EditorConfig制定。","like_count":0},{"had_liked":false,"id":96446,"user_name":"Sisyphus235","can_delete":false,"product_type":"c1","uid":1366359,"ip_address":"","ucode":"829CC4CE0FA96E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ooZCPFY1xgC81h0Eu3vuqbWG5MaBp8RNmvXXGQwupo2LpSOLq0rBlTDRAF1yM6wF09WdeG49rA9dJSVKIUBxnQ/132","comment_is_top":false,"comment_ctime":1558426039,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558426039","product_id":100019601,"comment_content":"代码不是写给自己看的，也没有代码不需要迭代开发，规范的代码能提高协作的效率","like_count":0},{"had_liked":false,"id":59049,"user_name":"小田","can_delete":false,"product_type":"c1","uid":1073342,"ip_address":"","ucode":"59CA02059F71E4","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/be/68ce2fd0.jpg","comment_is_top":false,"comment_ctime":1547286588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547286588","product_id":100019601,"comment_content":"代码规范是协作的基础，质量的保证，因此促成了开发的高质量、高效率","like_count":0},{"had_liked":false,"id":58910,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1547252790,"is_pvip":false,"replies":[{"id":"21360","content":"这就是要找的问题呀😄","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547276070,"ip_address":"","comment_id":58910,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547252790","product_id":100019601,"comment_content":"为什么后面追加要改成流逝的数据？","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436248,"discussion_content":"这就是要找的问题呀😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547276070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58829,"user_name":"yaya","can_delete":false,"product_type":"c1","uid":1233856,"ip_address":"","ucode":"8C7FAC8F828BA4","user_header":"https://static001.geekbang.org/account/avatar/00/12/d3/c0/d38daa2d.jpg","comment_is_top":false,"comment_ctime":1547205229,"is_pvip":false,"replies":[{"id":"21302","content":"虽然是通用的原则，但是主要是用Java代码示范。 非常抱歉，我需要把这些意识的东西，用一门编程语言展示出来，我刚好对Java比较熟，就使用了Java语言。<br><br>要是代码不明白，留言区留言，我在回复里给解释下。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547224447,"ip_address":"","comment_id":58829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547205229","product_id":100019601,"comment_content":"这个课程是以java作为基础的吗？虽然还是可以读懂，但是有些细节比较模糊","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436226,"discussion_content":"虽然是通用的原则，但是主要是用Java代码示范。 非常抱歉，我需要把这些意识的东西，用一门编程语言展示出来，我刚好对Java比较熟，就使用了Java语言。\n\n要是代码不明白，留言区留言，我在回复里给解释下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547224447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58827,"user_name":"yaya","can_delete":false,"product_type":"c1","uid":1233856,"ip_address":"","ucode":"8C7FAC8F828BA4","user_header":"https://static001.geekbang.org/account/avatar/00/12/d3/c0/d38daa2d.jpg","comment_is_top":false,"comment_ctime":1547205020,"is_pvip":false,"replies":[{"id":"21303","content":"我建议在一个广泛使用的规范上拓展，比如Java的编码规范，Google的Java编码风格，阿里巴巴的Java编码指南。<br><br>一般的编码规范会提供IDE插件。有人留言阿里巴巴的Java编码指南就已经有插件了。你找找看。<br><br>另外，IDE插件，并不能解决所有的编码规范问题。 我们第一篇会讨论很多编码规范，但是篇幅限制，也不全，偏重的是让大家养成基本的意识和习惯。所以，找一个业界广泛接纳的规范吧，如果你的公司没有自己的规范。也试着把规范在团队、公司推广，利人利己利公司😄","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547225147,"ip_address":"","comment_id":58827,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547205020","product_id":100019601,"comment_content":"现在有什么统一的规范吗，我对于变量命名，方法命名，对于英语不是很好词汇量不是很多的人感觉有点困难，有什么ide可以用吗","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436224,"discussion_content":"我建议在一个广泛使用的规范上拓展，比如Java的编码规范，Google的Java编码风格，阿里巴巴的Java编码指南。\n\n一般的编码规范会提供IDE插件。有人留言阿里巴巴的Java编码指南就已经有插件了。你找找看。\n\n另外，IDE插件，并不能解决所有的编码规范问题。 我们第一篇会讨论很多编码规范，但是篇幅限制，也不全，偏重的是让大家养成基本的意识和习惯。所以，找一个业界广泛接纳的规范吧，如果你的公司没有自己的规范。也试着把规范在团队、公司推广，利人利己利公司😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547225147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58826,"user_name":"yaya","can_delete":false,"product_type":"c1","uid":1233856,"ip_address":"","ucode":"8C7FAC8F828BA4","user_header":"https://static001.geekbang.org/account/avatar/00/12/d3/c0/d38daa2d.jpg","comment_is_top":false,"comment_ctime":1547205019,"is_pvip":false,"replies":[{"id":"21308","content":"在你的上一条留言回复了，你找找看。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547226825,"ip_address":"","comment_id":58826,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547205019","product_id":100019601,"comment_content":"现在有什么统一的规范吗，我对于变量命名，方法命名，对于英语不是很好词汇量不是很多的人感觉有点困难，有什么ide可以用吗","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436223,"discussion_content":"在你的上一条留言回复了，你找找看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547226825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58815,"user_name":"adang","can_delete":false,"product_type":"c1","uid":1143712,"ip_address":"","ucode":"0F2ECF8B92D46B","user_header":"https://static001.geekbang.org/account/avatar/00/11/73/a0/7dcc9212.jpg","comment_is_top":false,"comment_ctime":1547199305,"is_pvip":false,"replies":[{"id":"21306","content":"你这个总结好，就是的，流水线要顺畅👍，顺畅就有效率。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547225674,"ip_address":"","comment_id":58815,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547199305","product_id":100019601,"comment_content":"编码规范没有绝对的好与坏，最重要的是大家要遵守，目的就是为了高效率的协作，就像范老师所说的流水线要顺畅","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436218,"discussion_content":"你这个总结好，就是的，流水线要顺畅👍，顺畅就有效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547225674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58694,"user_name":"王智","can_delete":false,"product_type":"c1","uid":1079657,"ip_address":"","ucode":"0335277F255F7A","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/69/5960a2af.jpg","comment_is_top":false,"comment_ctime":1547176699,"is_pvip":false,"replies":[{"id":"21218","content":"加油，时间它是你的朋友。我们的进步就是来自于我们知道自己知道的不多。 Stay stupid, stay hungry!","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547179488,"ip_address":"","comment_id":58694,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547176699","product_id":100019601,"comment_content":"刚开始工作,感觉自己写的代码好low,时间复杂度很高,自己写的都不想看,(╥╯^╰╥),还得磨练,这个需要加强,加油.","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436176,"discussion_content":"加油，时间它是你的朋友。我们的进步就是来自于我们知道自己知道的不多。 Stay stupid, stay hungry!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547179488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58663,"user_name":"Kai","can_delete":false,"product_type":"c1","uid":1024088,"ip_address":"","ucode":"CD3FACF1803D8F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/58/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1547169298,"is_pvip":false,"replies":[{"id":"21223","content":"应该有一套规范，不然，看到烂代码，都不好意思开口帮助编码的小伙伴。","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547180193,"ip_address":"","comment_id":58663,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547169298","product_id":100019601,"comment_content":"我觉得每个公司都可以有一套自己的或者fork当前流行的代码规范，这样做code review也会更容易。另外设置一个lint自动帮助格式化代码，提出警告也是十分必要的","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436156,"discussion_content":"应该有一套规范，不然，看到烂代码，都不好意思开口帮助编码的小伙伴。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547180193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58628,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1547160192,"is_pvip":false,"replies":[{"id":"21576","content":"&gt; 1. 第十一行那加泛型的方式容易出错<br>是的，右侧让编译器自己选择就行。<br><br>&gt; 2. 第十五行，十六行没有大括号和缩进<br>是的。<br><br>&gt; 3. 第二十二行的_item，感觉没有使用到，是不是可以省略<br>留着也行，问题是_item不符合命名的规范。<br><br>另外，整个18-24行，增加的代码的复杂性，降低了代码的效率。<br>","user_name":"作者回复","user_name_real":"范学雷","uid":"1111315","ctime":1547518657,"ip_address":"","comment_id":58628,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547160192","product_id":100019601,"comment_content":"1. 第十一行那加泛型的方式容易出错<br>2. 第十五行，十六行没有大括号和缩进<br>3. 第二十二行的_item，感觉没有使用到，是不是可以省略","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436142,"discussion_content":"&amp;gt; 1. 第十一行那加泛型的方式容易出错\n是的，右侧让编译器自己选择就行。\n\n&amp;gt; 2. 第十五行，十六行没有大括号和缩进\n是的。\n\n&amp;gt; 3. 第二十二行的_item，感觉没有使用到，是不是可以省略\n留着也行，问题是_item不符合命名的规范。\n\n另外，整个18-24行，增加的代码的复杂性，降低了代码的效率。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547518657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}