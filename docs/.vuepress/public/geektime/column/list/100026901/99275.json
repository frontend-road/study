{"id":99275,"title":"13 | 搭建积木：Python 模块化","content":"<p>你好，我是景霄。</p><p>这是基础版块的最后一节。到目前为止，你已经掌握了 Python 这一门当代武功的基本招式和套路，走出了新手村，看到了更远的世界，有了和这个世界过过招的冲动。</p><p>于是，你可能开始尝试写一些不那么简单的系统性工程，或者代码量较大的应用程序。这时候，简单的一个 py 文件已经过于臃肿，无法承担一个重量级软件开发的重任。</p><p>今天这节课的主要目的，就是化繁为简，将功能模块化、文件化，从而可以像搭积木一样，将不同的功能，组件在大型工程中搭建起来。</p><h2>简单模块化</h2><p>说到最简单的模块化方式，你可以把函数、类、常量拆分到不同的文件，把它们放在同一个文件夹，然后使用  <code>from your_file import function_name, class_name</code> 的方式调用。之后，这些函数和类就可以在文件内直接使用了。</p><pre><code># utils.py\n\ndef get_sum(a, b):\n    return a + b\n</code></pre><pre><code># class_utils.py\n\nclass Encoder(object):\n    def encode(self, s):\n        return s[::-1]\n\nclass Decoder(object):\n    def decode(self, s):\n        return ''.join(reversed(list(s)))\n</code></pre><pre><code># main.py\n\nfrom utils import get_sum\nfrom class_utils import *\n\nprint(get_sum(1, 2))\n\nencoder = Encoder()\ndecoder = Decoder()\n\nprint(encoder.encode('abcde'))\nprint(decoder.decode('edcba'))\n\n########## 输出 ##########\n\n3\nedcba\nabcde\n</code></pre><p>我们来看这种方式的代码：get_sum() 函数定义在 utils.py，Encoder 和 Decoder 类则在 class_utils.py，我们在 main 函数直接调用 from import ，就可以将我们需要的东西 import 过来。</p><p>非常简单。</p><p>但是这就足够了吗？当然不，慢慢地，你会发现，所有文件都堆在一个文件夹下也并不是办法。</p><!-- [[[read_end]]] --><p>于是，我们试着建一些子文件夹：</p><pre><code># utils/utils.py\n\ndef get_sum(a, b):\n    return a + b\n</code></pre><pre><code># utils/class_utils.py\n\nclass Encoder(object):\n    def encode(self, s):\n        return s[::-1]\n\nclass Decoder(object):\n    def decode(self, s):\n        return ''.join(reversed(list(s)))\n</code></pre><pre><code># src/sub_main.py\n\nimport sys\nsys.path.append(&quot;..&quot;)\n\nfrom utils.class_utils import *\n\nencoder = Encoder()\ndecoder = Decoder()\n\nprint(encoder.encode('abcde'))\nprint(decoder.decode('edcba'))\n\n########## 输出 ##########\n\nedcba\nabcde\n</code></pre><p>而这一次，我们的文件结构是下面这样的：</p><pre><code>.\n├── utils\n│   ├── utils.py\n│   └── class_utils.py\n├── src\n│   └── sub_main.py\n└── main.py\n</code></pre><p>很容易看出，main.py 调用子目录的模块时，只需要使用 <code>.</code> 代替 <code>/</code>  来表示子目录，utils.utils 表示 utils 子文件夹下的 utils.py 模块就行。</p><p>那如果我们想调用上层目录呢？注意，<code>sys.path.append(\"..\")</code> 表示将当前程序所在位置<strong>向上</strong>提了一级，之后就能调用 utils 的模块了。</p><p>同时要注意一点，import 同一个模块只会被执行一次，这样就可以防止重复导入模块出现问题。当然，良好的编程习惯应该杜绝代码多次导入的情况。<strong>在Facebook 的编程规范中，除了一些极其特殊的情况，import 必须位于程序的最前端</strong>。</p><p>最后我想再提一下版本区别。你可能在许多教程中看到过这样的要求：我们还需要在模块所在的文件夹新建一个 <code>__init__.py</code>，内容可以为空，也可以用来表述包对外暴露的模块接口。不过，事实上，这是 Python 2 的规范。在 Python 3 规范中，<code>__init__.py</code> 并不是必须的，很多教程里没提过这一点，或者没讲明白，我希望你还是能注意到这个地方。</p><p>整体而言，这就是最简单的模块调用方式了。在我初用 Python 时，这种方式已经足够我完成大学期间的项目了，毕竟，很多学校项目的文件数只有个位数，每个文件代码也只有几百行，这种组织方式能帮我顺利完成任务。</p><p>但是在我来到 Facebook后，我发现，一个项目组的 workspace 可能有上千个文件，有几十万到几百万行代码。这种调用方式已经完全不够用了，学会新的组织方式迫在眉睫。</p><p>接下来，我们就系统学习下，模块化的科学组织方式。</p><h2>项目模块化</h2><p>我们先来回顾下相对路径和绝对路径的概念。</p><p>在 Linux 系统中，每个文件都有一个绝对路径，以 <code>/</code> 开头，来表示从根目录到叶子节点的路径，例如 <code>/home/ubuntu/Desktop/my_project/test.py</code>，这种表示方法叫作绝对路径。</p><p>另外，对于任意两个文件，我们都有一条通路可以从一个文件走到另一个文件，例如 <code>/home/ubuntu/Downloads/example.json</code>。再如，我们从 test.py 访问到 example.json，需要写成 <code>'../../Downloads/example.json'</code>，其中 <code>..</code> 表示上一层目录。这种表示方法，叫作相对路径。</p><p>通常，一个 Python 文件在运行的时候，都会有一个运行时位置，最开始时即为这个文件所在的文件夹。当然，这个运行路径以后可以被改变。运行  <code>sys.path.append(\"..\")</code> ，则可以改变当前 Python 解释器的位置。不过，一般而言我并不推荐，固定一个确定路径对大型工程来说是非常必要的。</p><p>理清楚这些概念后，我们就很容易搞懂，项目中如何设置模块的路径。</p><p>首先，你会发现，相对位置是一种很不好的选择。因为代码可能会迁移，相对位置会使得重构既不雅观，也易出错。因此，在大型工程中尽可能使用绝对位置是第一要义。对于一个独立的项目，所有的模块的追寻方式，最好从项目的根目录开始追溯，这叫做相对的绝对路径。</p><p>事实上，在 Facebook 和 Google，整个公司都只有一个代码仓库，全公司的代码都放在这个库里。我刚加入 Facebook 时对此感到很困惑，也很新奇，难免会有些担心：</p><ul>\n<li>这样做似乎会增大项目管理的复杂度吧？</li>\n<li>是不是也会有不同组代码隐私泄露的风险呢？</li>\n</ul><p>后来，随着工作的深入，我才发现了这种代码仓库独有的几个优点。</p><p>第一个优点，简化依赖管理。整个公司的代码模块，都可以被你写的任何程序所调用，而你写的库和模块也会被其他人调用。调用的方式，都是从代码的根目录开始索引，也就是前面提到过的相对的绝对路径。这样极大地提高了代码的分享共用能力，你不需要重复造轮子，只需要在写之前，去搜一下有没有已经实现好的包或者框架就可以了。</p><p>第二个优点，版本统一。不存在使用了一个新模块，却导致一系列函数崩溃的情况；并且所有的升级都需要通过单元测试才可以继续。</p><p>第三个优点，代码追溯。你可以很容易追溯，一个 API 是从哪里被调用的，它的历史版本是怎样迭代开发，产生变化的。</p><blockquote>\n<p>如果你有兴趣，可以参考这篇论文：<a href=\"https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext\">https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext</a></p>\n</blockquote><p>在做项目的时候，虽然你不可能把全世界的代码都放到一个文件夹下，但是类似模块化的思想还是要有的——那就是以项目的根目录作为最基本的目录，所有的模块调用，都要通过根目录一层层向下索引的方式来 import。</p><p>明白了这一点后，这次我们使用 PyCharm 来创建一个项目。这个项目结构如下所示：</p><pre><code>.\n├── proto\n│   ├── mat.py\n├── utils\n│   └── mat_mul.py\n└── src\n    └── main.py\n</code></pre><pre><code># proto/mat.py\n\nclass Matrix(object):\n    def __init__(self, data):\n        self.data = data\n        self.n = len(data)\n        self.m = len(data[0])\n</code></pre><pre><code># utils/mat_mul.py\n\nfrom proto.mat import Matrix\n\ndef mat_mul(matrix_1: Matrix, matrix_2: Matrix):\n    assert matrix_1.m == matrix_2.n\n    n, m, s = matrix_1.n, matrix_1.m, matrix_2.m\n    result = [[0 for _ in range(n)] for _ in range(s)]\n    for i in range(n):\n        for j in range(s):\n            for k in range(m):\n                result[i][k] += matrix_1.data[i][j] * matrix_2.data[j][k]\n\n    return Matrix(result)\n</code></pre><pre><code># src/main.py\n\nfrom proto.mat import Matrix\nfrom utils.mat_mul import mat_mul\n\n\na = Matrix([[1, 2], [3, 4]])\nb = Matrix([[5, 6], [7, 8]])\n\nprint(mat_mul(a, b).data)\n\n########## 输出 ##########\n\n[[19, 22], [43, 50]]\n</code></pre><p>这个例子和前面的例子长得很像，但请注意 <code>utils/mat_mul.py</code>，你会发现，它 import Matrix 的方式是<code>from proto.mat</code>。这种做法，直接从项目根目录中导入，并依次向下导入模块 mat.py  中的 Matrix，而不是使用 <code>..</code> 导入上一级文件夹。</p><p>是不是很简单呢？对于接下来的所有项目，你都能直接使用 Pycharm 来构建。把不同模块放在不同子文件夹里，跨模块调用则是从顶层直接索引，一步到位，非常方便。</p><p>我猜，这时你的好奇心来了。你尝试使用命令行进入 src 文件夹，直接输入  <code>Python main.py</code>，报错，找不到 proto。你不甘心，退回到上一级目录，输入<code>Python src/main.py</code>，继续报错，找不到 proto。</p><p>Pycharm 用了什么黑魔法呢？</p><p>实际上，Python 解释器在遇到 import 的时候，它会在一个特定的列表中寻找模块。这个特定的列表，可以用下面的方式拿到：</p><pre><code>import sys  \n\nprint(sys.path)\n\n########## 输出 ##########\n\n['', '/usr/lib/python36.zip', '/usr/lib/python3.6', '/usr/lib/python3.6/lib-dynload', '/usr/local/lib/python3.6/dist-packages', '/usr/lib/python3/dist-packages']\n</code></pre><p>请注意，它的第一项为空。其实，Pycharm 做的一件事，就是将第一项设置为项目根目录的绝对地址。这样，每次你无论怎么运行 main.py，import 函数在执行的时候，都会去项目根目录中找相应的包。</p><p>你说，你想修改下，使得普通的 Python 运行环境也能做到？这里有两种方法可以做到：</p><pre><code>import sys\n\nsys.path[0] = '/home/ubuntu/workspace/your_projects'\n</code></pre><p>第一种方法，“大力出奇迹”，我们可以强行修改这个位置，这样，你的 import 接下来肯定就畅通无阻了。但这显然不是最佳解决方案，把绝对路径写到代码里，是我非常不推荐的方式（你可以写到配置文件中，但找配置文件也需要路径寻找，于是就会进入无解的死循环）。</p><p>第二种方法，是修改 PYTHONHOME。这里我稍微提一下 Python 的 Virtual Environment（虚拟运行环境）。Python 可以通过 Virtualenv 工具，非常方便地创建一个全新的 Python 运行环境。</p><p>事实上，我们提倡，对于每一个项目来说，最好要有一个独立的运行环境来保持包和模块的纯净性。更深的内容超出了今天的范围，你可以自己查资料了解。</p><p>回到第二种修改方法上。在一个 Virtual Environment 里，你能找到一个文件叫 activate，在这个文件的末尾，填上下面的内容：</p><pre><code>export PYTHONPATH=&quot;/home/ubuntu/workspace/your_projects&quot;\n</code></pre><p>这样，每次你通过 activate 激活这个运行时环境的时候，它就会自动将项目的根目录添加到搜索路径中去。</p><h2>神奇的 <code>if __name__ == '__main__'</code></h2><p>最后一部分，我们再来讲讲  <code>if __name__ == '__main__'</code>  ，这个我们经常看到的写法。</p><p>Python 是脚本语言，和 C++、Java 最大的不同在于，不需要显式提供 main() 函数入口。如果你有 C++、Java 等语言经验，应该对 main() {} 这样的结构很熟悉吧？</p><p>不过，既然 Python 可以直接写代码，<code>if __name__ == '__main__'</code>  这样的写法，除了能让 Python 代码更好看（更像 C++ ）外，还有什么好处吗？</p><p>项目结构如下：</p><pre><code>.\n├── utils.py\n├── utils_with_main.py\n├── main.py\n└── main_2.py\n</code></pre><pre><code># utils.py\n\ndef get_sum(a, b):\n    return a + b\n\nprint('testing')\nprint('{} + {} = {}'.format(1, 2, get_sum(1, 2)))\n</code></pre><pre><code># utils_with_main.py\n\ndef get_sum(a, b):\n    return a + b\n\nif __name__ == '__main__':\n    print('testing')\n    print('{} + {} = {}'.format(1, 2, get_sum(1, 2)))\n</code></pre><pre><code># main.py\n\nfrom utils import get_sum\n\nprint('get_sum: ', get_sum(1, 2))\n\n########## 输出 ##########\n\ntesting\n1 + 2 = 3\nget_sum: 3\n</code></pre><pre><code># main_2.py\n\nfrom utils_with_main import get_sum\n\nprint('get_sum: ', get_sum(1, 2))\n\n########## 输出 ##########\n\nget_sum_2: 3\n</code></pre><p>看到这个项目结构，你就很清晰了吧。</p><p>import 在导入文件的时候，会自动把所有暴露在外面的代码全都执行一遍。因此，如果你要把一个东西封装成模块，又想让它可以执行的话，你必须将要执行的代码放在 <code>if __name__ == '__main__'</code>下面。</p><p>为什么呢？其实，<code>__name__</code> 作为 Python 的魔术内置参数，本质上是模块对象的一个属性。我们使用 import 语句时，<code>__name__</code> 就会被赋值为该模块的名字，自然就不等于 <code>__main__</code>了。更深的原理我就不做过多介绍了，你只需要明白这个知识点即可。</p><h2>总结</h2><p>今天这节课，我为你讲述了如何使用 Python 来构建模块化和大型工程。这里需要强调几点：</p><ol>\n<li>通过绝对路径和相对路径，我们可以 import 模块；</li>\n<li>在大型工程中模块化非常重要，模块的索引要通过绝对路径来做，而绝对路径从程序的根目录开始；</li>\n<li>记着巧用<code>if __name__ == '__main__'</code>来避开 import 时执行。</li>\n</ol><h2>思考题</h2><p>最后，我想为你留一道思考题。<code>from module_name import *</code>和<code>import module_name</code>有什么区别呢？欢迎留言和我分享，也欢迎你把这篇文章分享给你的同事、朋友。</p><p></p>","neighbors":{"left":{"article_title":"12 | 面向对象（下）：如何实现一个搜索引擎？","id":98998},"right":{"article_title":"14 | 答疑（一）：列表和元组的内部实现是怎样的？","id":99828}},"comments":[{"had_liked":false,"id":101889,"user_name":"Jingxiao","can_delete":false,"product_type":"c1","uid":1259521,"ip_address":"","ucode":"EB966BB87132F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","comment_is_top":true,"comment_ctime":1560031160,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"9.2233730391421993e+18","product_id":100026901,"comment_content":"思考题答案：<br>很多回复说的很对，from module_name import * 会把 module 中所有的函数和类全拿过来，如果和其他函数名类名有冲突就会出问题；import model_name 也会导入所有函数和类，但是调用的时候必须使用 model_name.func 的方法来调用，等于增加了一层 layer，有效避免冲突。","like_count":234,"discussions":[{"author":{"id":1111985,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/b1/982ea185.jpg","nickname":"Frank","note":"","ucode":"9DADD72C193296","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6731,"discussion_content":"回答的好，怎么没有人评论。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567073045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2459939,"avatar":"https://static001.geekbang.org/account/avatar/00/25/89/23/e71f180b.jpg","nickname":"Geek_fc975d","note":"","ucode":"05B6507FE4349B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556781,"discussion_content":"回答的太好，刚还遇到了没有＋from直接import的问题，会报错：\n\nTypeError: module() takes at most 2 arguments (3 given)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647509912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2143277,"avatar":"https://static001.geekbang.org/account/avatar/00/20/b4/2d/44680897.jpg","nickname":"Resolution","note":"","ucode":"F74C067C58CD05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301347,"discussion_content":"棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598497318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114254,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1105161,"ip_address":"","ucode":"1EECCA0F43E278","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","comment_is_top":false,"comment_ctime":1563262105,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"147592150169","product_id":100026901,"comment_content":"本文中说在 Python 3 规范中，包目录下的__init__.py 并不是必须的，这个我想补充一下，这个__init__.py最好还是有，并且在这个文件里面通过from . import module的形式把该目录下的所有模块文件都写上，如果不这样做，我们只能通过from 包目录 import 模块 的方式来正确使用，而如果直接 import 包目录 的话，虽然import过程不会报错，但是我们在使用该包目录下的模块的时候就会报找不到模块的错误了！","like_count":35,"discussions":[{"author":{"id":1718152,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/37/88/dfc34f3f.jpg","nickname":"白夜","note":"","ucode":"D7E189D38D377F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":246023,"discussion_content":"是这样吗：\nimport utils \nprint(&#39;get_sum: &#39;, utils.get_sum(1, 2))\n亲测没建立__init__.py也没有报错。。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1587718908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101525,"user_name":"jim","can_delete":false,"product_type":"c1","uid":1151390,"ip_address":"","ucode":"55C0AEDEF5EF41","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er3Yia2VGLEvBfCLWI5NoBn2dlqmY0GdXiadwY8Tofnq6AoRHy7rVicnz7U4R8DUxynpicTp4lZ8K0OcA/132","comment_is_top":false,"comment_ctime":1559840984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"126113892568","product_id":100026901,"comment_content":"from module_name import * 是导入module_name 内的所有内容，可以直接调用内部方法；import module_name，则是导入module_name，在代码中必须写成module_name.function的形式。","like_count":29},{"had_liked":false,"id":167076,"user_name":"上梁山","can_delete":false,"product_type":"c1","uid":1217427,"ip_address":"","ucode":"9268C813DE1D9B","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/93/c84fe253.jpg","comment_is_top":false,"comment_ctime":1577685225,"is_pvip":false,"replies":[{"id":"66519","content":"好建议，这里确实没想到读者会有误解。","user_name":"作者回复","comment_id":167076,"uid":"1513504","ip_address":"","utype":1,"ctime":1578979301,"user_name_real":"高山流水"}],"discussion_count":4,"race_medal":0,"score":"61707227369","product_id":100026901,"comment_content":"文章中有这么一句话：“import 同一个模块只会被执行一次，这样就可以防止重复导入模块出现问题。”<br>“import 同一个模块只会被执行一次”，这句话让我这个新手有点困惑。<br>这里的只会被执行一次，指的是导入模块的语句只执行一次，还是指被导入的模块中的语句只执行一次。<br>我相信很多向我这样的新手，都会认为是前者。<br>但是，经过代码实验，这里指的是被导入的模块中的语句只执行一次。<br><br>假如现在有main.py和foo.py两个文件，<br>foo.py中内容如下：<br>def bar():<br>    print(&#39;bar&#39;)<br>print(&#39;hello&#39;)<br><br>main.py中内容如下：<br>from foo import bar<br>import foo<br>bar()<br>foo.bar()<br>执行python main.py后的结果是：<br>hello<br>bar<br>bar","like_count":14,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479735,"discussion_content":"好建议，这里确实没想到读者会有误解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578979301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2672000,"avatar":"https://static001.geekbang.org/account/avatar/00/28/c5/80/1de66c45.jpg","nickname":"Alex","note":"","ucode":"ECC12A67C85D2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382009,"discussion_content":"确实是被导入的模块中的语句只执行一次。  from utils import get_sum  这行语句，在jupyter notebook里面第一次执行时候有输出 “testing” 和 “1 + 2 = 3”. 但是之后再次运行，就什么都没有了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625368258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1922298,"avatar":"","nickname":"patience","note":"","ucode":"46BEA083F550A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282528,"discussion_content":"作为小白，这一讲老师讲的很明白，但是我听的云里雾里，只能先过去，以后知识水平提高了，再回头理解了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592010019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1714189,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/28/0d/9d10e756.jpg","nickname":"raito4","note":"","ucode":"7F307F9988D4A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1922298,"avatar":"","nickname":"patience","note":"","ucode":"46BEA083F550A8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300429,"discussion_content":"+1，上一讲也有点，以后回头再看应该会有新感受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598093325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":282528,"ip_address":""},"score":300429,"extra":""}]}]},{"had_liked":false,"id":105803,"user_name":"Kuzaman","can_delete":false,"product_type":"c1","uid":1166957,"ip_address":"","ucode":"DB60937873CBF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/6d/6de830ef.jpg","comment_is_top":false,"comment_ctime":1561085886,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"57395660734","product_id":100026901,"comment_content":"找到一种通用的加载环境变量的方法，很适用于 python虚拟环境virtualenvwrapper-win：<br>原理：python运行时都会先去site-packages目录下寻找.pth文件，如果有就先加载里面的路径到环境变量中。<br>操作：在X:\\Python36\\Lib\\site-packages目录下增加一个 xxx.pth文件文件内容是要运行项目的绝对地址，windows操作系统记得使用   \\\\   作为分隔符。<br>如果项目路径中有中文，运行python会报错：“UnicodeDecodeError: &#39;gbk&#39; codec can&#39;t decode byte 0xaa in position 42: illegal multibyte sequence”。<br>解决方案：修改python环境源码 X:\\Python36\\lib\\site.py的159行，由【f = open(fullname, &quot;r&quot;)】修改为【f = open(fullname, &quot;r&quot;,encoding=&#39;utf-8&#39;)】","like_count":13,"discussions":[{"author":{"id":2321982,"avatar":"https://static001.geekbang.org/account/avatar/00/23/6e/3e/874ec3c1.jpg","nickname":"cooper","note":"","ucode":"27259668DC97B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358352,"discussion_content":"请问添加的内容就是一个绝对路径就好了吗？其他什么都不需要添加吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615970528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1742968,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/98/78/6459e29e.jpg","nickname":"麦芽科技学堂","note":"","ucode":"A90DDE4B6696BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":198047,"discussion_content":"亲测有效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583466345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101569,"user_name":"书了个一","can_delete":false,"product_type":"c1","uid":1307448,"ip_address":"","ucode":"DC8B604167EFC3","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/38/a2e2a81f.jpg","comment_is_top":false,"comment_ctime":1559873999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44509546959","product_id":100026901,"comment_content":"老师端午节快乐！","like_count":10},{"had_liked":false,"id":101654,"user_name":"萧潇风","can_delete":false,"product_type":"c1","uid":1152788,"ip_address":"","ucode":"24BB9E0134B7F5","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/14/20087885.jpg","comment_is_top":false,"comment_ctime":1559901916,"is_pvip":false,"replies":[{"id":"36714","content":"windows 的文件系统和 Linux 不太相同，学计算机科学还是尽早切换到 linux 系统吧","user_name":"作者回复","comment_id":101654,"uid":"1513504","ip_address":"","utype":1,"ctime":1560032787,"user_name_real":"高山流水"}],"discussion_count":2,"race_medal":0,"score":"40214607580","product_id":100026901,"comment_content":"export PYTHONPATH=&quot;&#47;home&#47;ubuntu&#47;workspace&#47;your_projects&quot;<br><br>在windows系统 中 亲测无效 T_T","like_count":9,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453057,"discussion_content":"windows 的文件系统和 Linux 不太相同，学计算机科学还是尽早切换到 linux 系统吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560032787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160393,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b4/c9/176d89cf.jpg","nickname":"甜筒","note":"","ucode":"D01AD95DDB9B2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7349,"discussion_content":"win10下，修改Activate.ps1。添加 $env:PYTHONPATH=&#34;C:\\code\\pypractice\\&#34;\n$env:PATH = &#34;$env:VIRTUAL_ENV\\Scripts;$env:PATH;$env:PYTHONPATH&#34; 。在 powershell 里是可以的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567500165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103844,"user_name":"乘坐Tornado的线程魔法师","can_delete":false,"product_type":"c1","uid":1132661,"ip_address":"","ucode":"C4C9915866E769","user_header":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","comment_is_top":false,"comment_ctime":1560528609,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31625299681","product_id":100026901,"comment_content":"老师，对于文中“项目模块化”的段落，有关二维矩阵相乘运算，您给的例子是行与列维度相同的，所以代码运行没有问题；如果您试一下3 x 2的矩阵与2 x 3的矩阵相乘, 例如：[[1, 2], [3, 4], [5, 6]] 与[[5, 6, 7]， [7, 8, 9]]，代码则会报错（索引溢出）。<br><br>我改写了一下mat_nul方法：<br>def mat_mul(matrix_1: Matrix, matrix_2: Matrix):<br>    assert matrix_1.m == matrix_2.n<br>    n, s, m = matrix_1.n, matrix_1.m, matrix_2.m<br>    result = [[0 for _ in range(m)] for _ in range(n)]<br>    for i in range(n):<br>        for j in range(s):<br>            for k in range(m):<br>                print(i, j, k)<br>                result[i][k] += matrix_1.data[i][j] * matrix_2.data[j][k]<br>    return Matrix(result)<br><br>我自测通过，请您帮忙验证下！不胜感激!","like_count":7,"discussions":[{"author":{"id":1525309,"avatar":"https://static001.geekbang.org/account/avatar/00/17/46/3d/55653953.jpg","nickname":"AI悦创","note":"","ucode":"D1007711CB0A79","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546766,"discussion_content":"我运行不起来，能加个微信帮我看看是什么问题吗？微信：Jiabcdefh","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642418887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109527,"user_name":"Cynthia🌸","can_delete":false,"product_type":"c1","uid":1163960,"ip_address":"","ucode":"B3A48089794940","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/b8/ec758482.jpg","comment_is_top":false,"comment_ctime":1562051261,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27331855037","product_id":100026901,"comment_content":"1. 在 Python 3 规范中，__init__.py 并不是必须的，这只是python2的规范。<br>2. 项目中，import可以用相对路径，是pycharm的黑魔法。自己也可以通过虚拟环境配置path实现。强烈建议一个项目用一个虚拟环境以保持纯净！<br>3. import在导入时会把暴露在外面的代码都执行一遍，因此不想执行的话，请加上 if __main__ 的条件判断。","like_count":6},{"had_liked":false,"id":103539,"user_name":"Smirk","can_delete":false,"product_type":"c1","uid":1230263,"ip_address":"","ucode":"F677072767F0A4","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/b7/87e7e865.jpg","comment_is_top":false,"comment_ctime":1560472062,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27330275838","product_id":100026901,"comment_content":"这节不错，目录结构那个之前一直用相对路径，但是觉得不干净，也奇怪为什么pycharm可以，但没深究，终于等到老师的文字，赞","like_count":7},{"had_liked":false,"id":101871,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1560006065,"is_pvip":false,"replies":[{"id":"36705","content":"哈哈对，除非是老项目维护，新项目最好使用 python 3 来构建，确定好规范后就可以大胆 coding，不用太担心兼容性问题。","user_name":"作者回复","comment_id":101871,"uid":"1513504","ip_address":"","utype":1,"ctime":1560030109,"user_name_real":"高山流水"}],"discussion_count":1,"race_medal":0,"score":"23034842545","product_id":100026901,"comment_content":"作者写的都是原来疑惑的地方，如有时候要新建一个模块总是纠结于是添加文件夹还是包，怀疑加文件夹是不是不如加包规范，有时面对每个文件夹一个空的__init__.py，觉得真是不够优雅，现在好了，原来是2和3的区别，以后可以大胆的用文件夹来组织模块了。另外就是觉得python 命名模块名不能像java和.net那样以公司名.application.web.api格式，觉得还是有点别扭。","like_count":5,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453150,"discussion_content":"哈哈对，除非是老项目维护，新项目最好使用 python 3 来构建，确定好规范后就可以大胆 coding，不用太担心兼容性问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560030109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151844,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1573799620,"is_pvip":false,"replies":[{"id":"63102","content":"👍","user_name":"作者回复","comment_id":151844,"uid":"1513504","ip_address":"","utype":1,"ctime":1577251560,"user_name_real":"高山流水"}],"discussion_count":1,"race_medal":0,"score":"18753668804","product_id":100026901,"comment_content":"思考题<br>两者的前缀不同。第一种，把目录下的文件都倒入了，每个文件有各自前缀。第二种，只是倒入了一个前缀，所有文件都通过这个相同前缀。第一种类似于拷贝一个目录下所有文件。第二种类似于拷贝整个目录。","like_count":4,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474634,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577251560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129903,"user_name":"2020","can_delete":false,"product_type":"c1","uid":1344670,"ip_address":"","ucode":"0DEA914CDBE5B7","user_header":"https://static001.geekbang.org/account/avatar/00/14/84/9e/05ed50dd.jpg","comment_is_top":false,"comment_ctime":1567322537,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14452224425","product_id":100026901,"comment_content":"我自己试了下：实际上PyCharm在程序执行的时候会将项目根目录的绝对路径以及当前执行的文件所在的绝对路径一起加到sys.path里，所以无论怎么执行都能找到模块","like_count":4},{"had_liked":false,"id":270173,"user_name":"非同凡想","can_delete":false,"product_type":"c1","uid":1934969,"ip_address":"","ucode":"713FD449A49D5A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","comment_is_top":false,"comment_ctime":1608970300,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10198904892","product_id":100026901,"comment_content":"老师矩阵乘法有错误！！！正确的如下：<br><br>&#39;&#39;&#39;<br>matrix 1  n*m<br>matrix 2  m*s<br>result    n*s<br>&#39;&#39;&#39;<br>def mat_mul(matrix_1: Matrix, matrix_2: Matrix):<br>    assert matrix_1.m == matrix_2.n<br>    n, m, s = matrix_1.n, matrix_1.m, matrix_2.m<br>    result = [[0 for _ in range(s)] for _ in range(n)]<br>    for i in range(n):<br>        for j in range(s):<br>            for k in range(m):<br>                #matrx_1 的第i行每个格子 * matrx_2 第j列每个格子，再求和<br>                result[i][j] += matrix_1.data[i][k] * matrix_2.data[k][j]<br><br>    return Matrix(result)<br>","like_count":2,"discussions":[{"author":{"id":2068426,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/khSCxaCDAVYgaOooEMIuyHE7bSdPt3AxagWLOdUNjTaSfwWfTK7GbBdulRRCAPmtfyLyL4VibLFTa00Gy6Qqa2w/132","nickname":"Geek_57c4c6","note":"","ucode":"C0FFB7B57BF998","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352811,"discussion_content":"我就感觉这里有问题，result的维度和景老师写的对不上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614858393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228777,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":1923859,"ip_address":"","ucode":"89EA5FCF036C42","user_header":"https://static001.geekbang.org/account/avatar/00/1d/5b/13/6db9ba58.jpg","comment_is_top":false,"comment_ctime":1592806962,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10182741554","product_id":100026901,"comment_content":"方法一：from module_name import * 是将 模块中的说有函数或类，以原来的名称导入，可以直接使用；<br>方法二：import module_name 相当于导入了一个字典，需要通过module_name.xxxx的方式获取模块中的函数，属性等；<br><br>方法一多个模块中如果用相同名字的函数，可能会报错；<br>方法二模块名字太长的话不方便。可以使用 as 使用别名，有利于解决方法一中的函数重名问题。<br>","like_count":2},{"had_liked":false,"id":107559,"user_name":"Geek_66525b","can_delete":false,"product_type":"c1","uid":1579919,"ip_address":"","ucode":"E44D060DC8DAEC","user_header":"","comment_is_top":false,"comment_ctime":1561557574,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10151492166","product_id":100026901,"comment_content":"如果使用conda， 怎么达到和Virtualenv同样的效果呢？","like_count":2,"discussions":[{"author":{"id":1107179,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e4/eb/a6ec4c1e.jpg","nickname":"风中劲草","note":"","ucode":"DF4AAEC3FE95A2","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388372,"discussion_content":"conda create -n envname python=xxx","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1628735769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102631,"user_name":"Kuzaman","can_delete":false,"product_type":"c1","uid":1166957,"ip_address":"","ucode":"DB60937873CBF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/6d/6de830ef.jpg","comment_is_top":false,"comment_ctime":1560267134,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10150201726","product_id":100026901,"comment_content":"老师，python虚拟环境使用【virtualenvwrapper-win、virtualenv】，我用的是sublimetext3它只能配置编译环境的位置（我在sublime的tools--build system--python-venv01指向了虚拟环境Venv01），但是我无法达到老师文章说的：“这样，每次你通过 activate 激活这个运行时环境的时候，，它就会自动将项目的根目录添加到搜索路径中去。”","like_count":2},{"had_liked":false,"id":101956,"user_name":"更好的做自己","can_delete":false,"product_type":"c1","uid":1339294,"ip_address":"","ucode":"92CC2D8E4B3B52","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/9e/951afb1f.jpg","comment_is_top":false,"comment_ctime":1560071968,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10150006560","product_id":100026901,"comment_content":"老师，我使用anaconda配置的virtual env，在相应virtual env中找到的activate文件后加上PYTHONPATH，使用source activate激活virtual env后，echo $PYTHONPATH没有值输出，运行python main.py，依然会报ModuleNotFoundError: No module named &#39;proto&#39;这个错误，使用原生Python解释器和mkvirtualenv能够成功，这是anaconda在activate时的机制不同吗？希望老师解答一下","like_count":2},{"had_liked":false,"id":101736,"user_name":"Geek_59f23e","can_delete":false,"product_type":"c1","uid":1513783,"ip_address":"","ucode":"A463C6EB7447FD","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/37/e0a9bf99.jpg","comment_is_top":false,"comment_ctime":1559953425,"is_pvip":false,"replies":[{"id":"36711","content":"多谢，是 reversed.","user_name":"作者回复","comment_id":101736,"uid":"1513504","ip_address":"","utype":1,"ctime":1560032352,"user_name_real":"高山流水"}],"discussion_count":1,"race_medal":0,"score":"10149888017","product_id":100026901,"comment_content":"class_utils.py那儿应该是reversed吧，而不是reverse。","like_count":2,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453093,"discussion_content":"多谢，是 reversed.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560032352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251843,"user_name":"天蓬太帅","can_delete":false,"product_type":"c1","uid":1181615,"ip_address":"","ucode":"21AB295504D0F9","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/af/351a9fe7.jpg","comment_is_top":false,"comment_ctime":1601904344,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5896871640","product_id":100026901,"comment_content":"老师，您说“在 Facebook 和 Google，整个公司都只有一个代码仓库，全公司的代码都放在这个库里。”<br>能不能多介绍一下？在一个代码仓库，如果用pycharm，怎么做到不同project，不同虚拟环境公用这个代码库呢？","like_count":1},{"had_liked":false,"id":228781,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":1923859,"ip_address":"","ucode":"89EA5FCF036C42","user_header":"https://static001.geekbang.org/account/avatar/00/1d/5b/13/6db9ba58.jpg","comment_is_top":false,"comment_ctime":1592808257,"is_pvip":true,"replies":[{"id":"84944","content":"抱歉这里的意思让你造成误解。这里想表达的是：<br><br>如果你要把一个东西封装成模块，又想让它`单独`可以被执行的话，你必须将要执行的代码放在 if __name__ == &#39;__main__&#39;下面。","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1593301185,"ip_address":"","comment_id":228781,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887775553","product_id":100026901,"comment_content":"“import 在导入文件的时候，会自动把所有暴露在外面的代码全都执行一遍。因此，如果你要把一个东西封装成模块，又想让它可以执行的话，你必须将要执行的代码放在 if __name__ == &#39;__main__&#39;下面。”<br>导入的模块if __name__ == &#39;__main__&#39;下面的语句没有被执行。","like_count":1,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499190,"discussion_content":"抱歉这里的意思让你造成误解。这里想表达的是：\n\n如果你要把一个东西封装成模块，又想让它`单独`可以被执行的话，你必须将要执行的代码放在 if __name__ == &amp;#39;__main__&amp;#39;下面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593301185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225821,"user_name":"Hy","can_delete":false,"product_type":"c1","uid":1742549,"ip_address":"","ucode":"F912E8A8D97591","user_header":"https://static001.geekbang.org/account/avatar/00/1a/96/d5/23fecf33.jpg","comment_is_top":false,"comment_ctime":1591867112,"is_pvip":false,"replies":[{"id":"84945","content":"对函数参数指定类型：https:&#47;&#47;docs.python.org&#47;zh-cn&#47;3&#47;library&#47;typing.html","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1593301306,"ip_address":"","comment_id":225821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886834408","product_id":100026901,"comment_content":"老师您好，请问这个函数后面的参数是什么意思，没见过这种写法，中间加一个冒号<br><br>def mat_mul(matrix_1: Matrix, matrix_2: Matrix)","like_count":1,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498003,"discussion_content":"对函数参数指定类型：https://docs.python.org/zh-cn/3/library/typing.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593301306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221622,"user_name":"牺牲","can_delete":false,"product_type":"c1","uid":1619402,"ip_address":"","ucode":"5780E562A43494","user_header":"https://static001.geekbang.org/account/avatar/00/18/b5/ca/bba4d696.jpg","comment_is_top":false,"comment_ctime":1590550744,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"5885518040","product_id":100026901,"comment_content":"__name__==__main__，不应该是想封装但不想被执行的代码放下面吗，文章里怎么是想让执行的。","like_count":1},{"had_liked":false,"id":151856,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1573800155,"is_pvip":false,"replies":[{"id":"63096","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1577249402,"ip_address":"","comment_id":151856,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868767451","product_id":100026901,"comment_content":"树状结构是大多数项目的组织方式，树状结构本身不复杂，从根节点到每个节点有唯一路径，这条路径可以用一致的方式来引用文件。树状结构可以表达的文件上限是层数的指数，对于大型项目也没问题。如果目录是线性结构，文件一多，查找就费力。文件直接的调用如果用相对路径，这就相当于在树状的结构中引入了中间节点的边，几乎让树成图，复杂度大大增加。","like_count":1,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474638,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577249402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144547,"user_name":"大象","can_delete":false,"product_type":"c1","uid":1001866,"ip_address":"","ucode":"856D1E9F24EA4F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/8a/3f5af969.jpg","comment_is_top":false,"comment_ctime":1571967733,"is_pvip":false,"replies":[{"id":"56037","content":"正常 import，但是 B 的 requirements.txt 可能要包含 A 正常运行必须的包。另一个建议来自 Google 的开源源代码管理工具 bazel，可以尝试。","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1572244502,"ip_address":"","comment_id":144547,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866935029","product_id":100026901,"comment_content":"请教老师一个问题：如果我们所有的项目（项目A，项目B，项目C）都在一个文件夹底下，每个项目都有自己的虚拟运行环境。如果我项目A是公共库，项目B要引用项目A，那么我需要怎么做？谢谢","like_count":1,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472002,"discussion_content":"正常 import，但是 B 的 requirements.txt 可能要包含 A 正常运行必须的包。另一个建议来自 Google 的开源源代码管理工具 bazel，可以尝试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572244502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121905,"user_name":"lyt","can_delete":false,"product_type":"c1","uid":1526706,"ip_address":"","ucode":"8C179F339C2A27","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/OwolYO3ppfrxTcX81cswxNkD4tIlHM7vrnfroMzoTx878mDCnfJ3esicvbhm7ricUAbR7T9DjEDstVklh9z6uzjQ/132","comment_is_top":false,"comment_ctime":1565246643,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5860213939","product_id":100026901,"comment_content":"老师您好，Pycharm是什么呢？Pytorch，tensor这些框架都有什么不同","like_count":1,"discussions":[{"author":{"id":1051873,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0c/e1/f663213e.jpg","nickname":"拾掇拾掇","note":"","ucode":"D775F374C2A1D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":169001,"discussion_content":"要学会怎么使用搜索引擎","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581600680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119400,"user_name":"mercy","can_delete":false,"product_type":"c1","uid":1022225,"ip_address":"","ucode":"0843ACF5C72A17","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/11/9f09be94.jpg","comment_is_top":false,"comment_ctime":1564578697,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5859545993","product_id":100026901,"comment_content":"老师，类实例化成对象后，直接把对象当成函数调用的做法叫什么呢？","like_count":1,"discussions":[{"author":{"id":1022225,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/11/9f09be94.jpg","nickname":"mercy","note":"","ucode":"0843ACF5C72A17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3627,"discussion_content":"没人回答，自顶😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564646706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101805,"user_name":"小侠龙旋风","can_delete":false,"product_type":"c1","uid":1126441,"ip_address":"","ucode":"073F3924A99835","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/29/d6816ebf.jpg","comment_is_top":false,"comment_ctime":1559978646,"is_pvip":false,"replies":[{"id":"36708","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560030758,"ip_address":"","comment_id":101805,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854945942","product_id":100026901,"comment_content":"在pycharm里，我会使用“Mark Directory as -&gt; Sources Root”来设置当前文件夹为根目录。<br>思考题：<br>1.from module_name import * 能够导入模块下所有的类&#47;函数等内容，使用时不需要包含模块名。容易出现重名现象，发生错误；<br>2.import module_name 只是将模块名导入，调用时必须模块名.xxx。<br>3.from  module_name  import  class_name 需要用模块中的哪个类就导入哪个类，比较推荐。","like_count":1,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453123,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560030758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101619,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1559888993,"is_pvip":false,"replies":[{"id":"36715","content":"👍端午快乐！","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560033853,"ip_address":"","comment_id":101619,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854856289","product_id":100026901,"comment_content":"老师的基础模块，帮助自己扫清了一下知识盲区，期待老师接下来的进阶篇，up,up,up。老师端午节快乐。","like_count":1,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453038,"discussion_content":"👍端午快乐！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560033853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355503,"user_name":"贝贝","can_delete":false,"product_type":"c1","uid":1163119,"ip_address":"北京","ucode":"964FD46CEC87CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/bf/6f/1916fba0.jpg","comment_is_top":false,"comment_ctime":1661434126,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661434126","product_id":100026901,"comment_content":"【我们使用 import 语句时，__name__ 就会被赋值为该模块的名字，自然就不等于 __main__了 】这个没有太懂，  if __name__ == &#39;__main__&#39; 里的代码什么时候执行呢？ ","like_count":0},{"had_liked":false,"id":319320,"user_name":"海滨","can_delete":false,"product_type":"c1","uid":1009518,"ip_address":"","ucode":"F1B94D2DB944DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/6e/f5ee46e8.jpg","comment_is_top":false,"comment_ctime":1635742971,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1635742971","product_id":100026901,"comment_content":"终于理解了模块化引用的好处","like_count":0},{"had_liked":false,"id":290774,"user_name":"lcqbug","can_delete":false,"product_type":"c1","uid":1268609,"ip_address":"","ucode":"08FA17F21BCEC5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epbyHPGNLu9sDQOs1V6brMcDwia55pyIlP9n62oO6IYS6kIFDnOSON4ugSeBSy6WhDUnYyJC6vtnHQ/132","comment_is_top":false,"comment_ctime":1619749211,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619749211","product_id":100026901,"comment_content":"为什么 import XXX 要放在 From xx import xx前面呢?","like_count":0},{"had_liked":false,"id":273552,"user_name":"生无所息","can_delete":false,"product_type":"c1","uid":2396309,"ip_address":"","ucode":"F96CE1084E50F7","user_header":"https://static001.geekbang.org/account/avatar/00/24/90/95/0a9e93eb.jpg","comment_is_top":false,"comment_ctime":1610636727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610636727","product_id":100026901,"comment_content":"最开始还以为又被割韭菜了，学完第一章，发现老师确实有料，不仅基础扎实，还站在一个项目开发者的角度思考，爱了，爱了，老师带带我","like_count":0},{"had_liked":false,"id":273151,"user_name":"三件事","can_delete":false,"product_type":"c1","uid":1055819,"ip_address":"","ucode":"BCC867C8961A24","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","comment_is_top":false,"comment_ctime":1610456650,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1610456650","product_id":100026901,"comment_content":"不应该是用相对路径会有利于代码迁移吗？绝对路径都是写死的，迁移到其他位置，不手动改路径基本会报错吧。","like_count":0,"discussions":[{"author":{"id":1402034,"avatar":"https://static001.geekbang.org/account/avatar/00/15/64/b2/18005d2a.jpg","nickname":"Leo Zhao","note":"","ucode":"5E4917CCD120B0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351504,"discussion_content":"老师说的 是绝对 ＋相对。绝对体现在python path指向跟目录中，  相对体现在 from 跟目录 Import.. 时候。system.path.append 不管绝对，相对在后来 重构的时候有问题。比如 utils.py 换了个文件夹位子。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614307615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249516,"user_name":"龍蝦","can_delete":false,"product_type":"c1","uid":1000076,"ip_address":"","ucode":"BE1D500833F070","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/8c/373d4027.jpg","comment_is_top":false,"comment_ctime":1600680202,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600680202","product_id":100026901,"comment_content":"http:&#47;&#47;pylint.pycqa.org&#47;en&#47;stable&#47;user_guide&#47;run.html?highlight=pylintrc#command-line-options<br><br>If the current working directory is in a Python module, Pylint searches up the hierarchy of Python modules until it finds a pylintrc file. This allows you to specify coding standards on a module-by-module basis. Of course, a directory is judged to be a Python module if it contains an __init__.py file.<br><br>Python3 不要求 __init__.py，pylint 没有遵守相同规则哇。","like_count":0},{"had_liked":false,"id":238449,"user_name":"Bee","can_delete":false,"product_type":"c1","uid":2086265,"ip_address":"","ucode":"3774D0CA746DA9","user_header":"https://static001.geekbang.org/account/avatar/00/1f/d5/79/e1801426.jpg","comment_is_top":false,"comment_ctime":1596171500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596171500","product_id":100026901,"comment_content":"所以最佳实践是啥呢 本地的目录和线上不一致的话 就会报错，项目部署有没有指导啊","like_count":0},{"had_liked":false,"id":232872,"user_name":"海盗船长","can_delete":false,"product_type":"c1","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1594134043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594134043","product_id":100026901,"comment_content":"20200707 第一天","like_count":0},{"had_liked":false,"id":232185,"user_name":"Fire","can_delete":false,"product_type":"c1","uid":1186807,"ip_address":"","ucode":"4A2C50B77EDB2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/1b/f7/45e8b64a.jpg","comment_is_top":false,"comment_ctime":1593910783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593910783","product_id":100026901,"comment_content":"景霄老师好，proto示例中的矩阵乘法的代码实现是存在错误的，一个n*m矩阵与一个m*s矩阵相乘得到一个n*s的新矩阵，mat_mul函数的初始化和循环计算部分是存在错误的。我修正了下：<br>```<br>def mat_mul(matrix_1: Matrix, matrix_2: Matrix):<br>    assert matrix_1.m == matrix_2.n<br>    n, m, s = matrix_1.n, matrix_1.m, matrix_2.m<br>    result = [[0 for _ in range(s)] for _ in range(n)]<br>    for i in range(n):<br>        for j in range(m):<br>            for k in range(s):<br>                result[i][k] += matrix_1.data[i][j] * matrix_2.data[j][k]<br><br>    return Matrix(result)<br>```","like_count":0},{"had_liked":false,"id":220454,"user_name":"ShmilyVidian","can_delete":false,"product_type":"c1","uid":1177103,"ip_address":"","ucode":"2B2485B48B8D33","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/0f/0499db2c.jpg","comment_is_top":false,"comment_ctime":1590245971,"is_pvip":false,"replies":[{"id":"84946","content":"对","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1593301531,"ip_address":"","comment_id":220454,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590245971","product_id":100026901,"comment_content":"from module_name import * 是导入module_name 中的所有内容，可以直接调用内部方法容易引入冲突；import module_name，则是导入module_name，在代码中调用必须写成module_name.function的，减少引起冲突，通过module_name做了一层桥接隔离。","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496145,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593301531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216189,"user_name":"做一个可靠的UDP","can_delete":false,"product_type":"c1","uid":1995257,"ip_address":"","ucode":"2428ED20AD3398","user_header":"https://static001.geekbang.org/account/avatar/00/1e/71/f9/85329b42.jpg","comment_is_top":false,"comment_ctime":1589203053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589203053","product_id":100026901,"comment_content":"个人理解import model_name是把一个模块连同namespace加载进来了，还是独立的namespace，from model_name import * 是尝试把模块中的内容都加载进当前文件的namespace，可能会冲突","like_count":0},{"had_liked":false,"id":198809,"user_name":"徐旭","can_delete":false,"product_type":"c1","uid":1814806,"ip_address":"","ucode":"1D3091D15373E5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b1/16/dd11930c.jpg","comment_is_top":false,"comment_ctime":1585468848,"is_pvip":false,"replies":[{"id":"75936","content":"谢谢","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1586150458,"ip_address":"","comment_id":198809,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585468848","product_id":100026901,"comment_content":"赞赞，老师讲得不错","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489753,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586150458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197919,"user_name":"徐旭","can_delete":false,"product_type":"c1","uid":1814806,"ip_address":"","ucode":"1D3091D15373E5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b1/16/dd11930c.jpg","comment_is_top":false,"comment_ctime":1585403571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585403571","product_id":100026901,"comment_content":"赞👍","like_count":0},{"had_liked":false,"id":197663,"user_name":"徐旭","can_delete":false,"product_type":"c1","uid":1814806,"ip_address":"","ucode":"1D3091D15373E5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b1/16/dd11930c.jpg","comment_is_top":false,"comment_ctime":1585390429,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585390429","product_id":100026901,"comment_content":"老师讲得不错","like_count":0},{"had_liked":false,"id":179748,"user_name":"slim_czf","can_delete":false,"product_type":"c1","uid":1309368,"ip_address":"","ucode":"0907F7F3A13A4F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1LvJFRCIdEE97nggX6b8p8dWvYiaxF8V6sJUibyEmwXcKicwrYNPicNicO7T3icm3e2836OvZzEjn8oLLM1lkNuPjGLw/132","comment_is_top":false,"comment_ctime":1582090762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582090762","product_id":100026901,"comment_content":"思考题：<br>第一次import时，如from module_name import a，解释器会将module_name这个模块对象缓存至一个字典结构的全局变量中sys.modules，其中key为&quot;module_name&quot;，value为此模块对象。而在当前程序所在的模块import module_name，其实只是在当前的内存空间申请一个变量module_name，这个变量是对前面对应全局变量的引用。同理，如果是from module_name import *，则是在当前空间申请多个变量，容易导致变量名冲突。","like_count":0},{"had_liked":false,"id":159009,"user_name":"lllong33","can_delete":false,"product_type":"c1","uid":1528751,"ip_address":"","ucode":"5D012385994C3D","user_header":"https://static001.geekbang.org/account/avatar/00/17/53/af/e5bf5d08.jpg","comment_is_top":false,"comment_ctime":1575514508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575514508","product_id":100026901,"comment_content":"减少 from .. import .. 的使用，可以有效防止命名冲突。使用 imoprt 相当于加上一层标识","like_count":0},{"had_liked":false,"id":157440,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1575164989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575164989","product_id":100026901,"comment_content":"不带init.py，想用setup.py打包就不行了，这点很头疼","like_count":0},{"had_liked":false,"id":144543,"user_name":"大象","can_delete":false,"product_type":"c1","uid":1001866,"ip_address":"","ucode":"856D1E9F24EA4F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/8a/3f5af969.jpg","comment_is_top":false,"comment_ctime":1571967449,"is_pvip":false,"replies":[{"id":"55931","content":"你可以把代码仓库理解为树状结构，有一个root，然后底下有针对不同的项目，有不同的repo，比如android一个repo，ios有一个repo，服务器端有一个repo，等等","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1572200257,"ip_address":"","comment_id":144543,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571967449","product_id":100026901,"comment_content":"“事实上，在 Facebook 和 Google，整个公司都只有一个代码仓库，全公司的代码都放在这个库里。”不太理解这里的意思是啥？是类似于在git的同一个组底下么？还是说所有的项目在同一个文件夹底下？","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472000,"discussion_content":"你可以把代码仓库理解为树状结构，有一个root，然后底下有针对不同的项目，有不同的repo，比如android一个repo，ios有一个repo，服务器端有一个repo，等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572200257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137947,"user_name":"自由民","can_delete":false,"product_type":"c1","uid":1346236,"ip_address":"","ucode":"435C67531697F1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/bc/cb39ed38.jpg","comment_is_top":false,"comment_ctime":1569934685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569934685","product_id":100026901,"comment_content":"小结:①引用路径有绝对路径和相对路径；②大型工程用绝对路径，从源代码根目录开始；③用if __name__ ==&quot;__main__&quot;来避免在import时执行。<br>思考题:前者使用时直接使用函数名，后者要用模块名.函数名来使用。<br>课程的练习代码: https:&#47;&#47;github.com&#47;zwdnet&#47;PythonPractice","like_count":0},{"had_liked":false,"id":129822,"user_name":"2020","can_delete":false,"product_type":"c1","uid":1344670,"ip_address":"","ucode":"0DEA914CDBE5B7","user_header":"https://static001.geekbang.org/account/avatar/00/14/84/9e/05ed50dd.jpg","comment_is_top":false,"comment_ctime":1567269830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567269830","product_id":100026901,"comment_content":"思考题：前者可以直接使用导入模块的函数，后者需要加上模块名，应该相当于js中命名空间的概念","like_count":0},{"had_liked":false,"id":123428,"user_name":"Ana","can_delete":false,"product_type":"c1","uid":1526019,"ip_address":"","ucode":"41C841FE46CB2B","user_header":"https://static001.geekbang.org/account/avatar/00/17/49/03/7c9b0809.jpg","comment_is_top":false,"comment_ctime":1565674495,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565674495","product_id":100026901,"comment_content":"老师，请教一个问题：<br>在pycharm中直接import当前目录的一个自己写的模块，虽然可以正常运行，但是pycharm会有红色波浪线，这是为什么呢？","like_count":0,"discussions":[{"author":{"id":1110437,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f1/a5/6cc9f728.jpg","nickname":"秋天的透明雨🌧️","note":"","ucode":"9363B49BFA6C14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209946,"discussion_content":"你的代码应该不在工程的根目录下，在工厂的子目录下，导入时加上“子目录.&#34;。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584692993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122300,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1565334930,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565334930","product_id":100026901,"comment_content":"思考题：<br>from module_name import * 语句把命名为“module_name”的目录下的所有模块都导入进来；<br>import module_name 语句只导入命名为“module_name”的这一个模块。<br>","like_count":0},{"had_liked":false,"id":121307,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1565096921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565096921","product_id":100026901,"comment_content":"老师您好，能讲一下代码调试技术嘛？包括如何调试正在运行的python进程","like_count":0},{"had_liked":false,"id":117792,"user_name":"郭杰","can_delete":false,"product_type":"c1","uid":1139077,"ip_address":"","ucode":"8A14FC047A679B","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/85/6accd013.jpg","comment_is_top":false,"comment_ctime":1564131972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564131972","product_id":100026901,"comment_content":"from module_name import * 一个是引用单独的类和import引用的是全部的类<br><br>","like_count":0},{"had_liked":false,"id":116530,"user_name":"梁大瓜","can_delete":false,"product_type":"c1","uid":1435855,"ip_address":"","ucode":"04D708E3662D27","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/cf/554f08f9.jpg","comment_is_top":false,"comment_ctime":1563864823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563864823","product_id":100026901,"comment_content":"讲真，pycharm的路径管理让我迷惑了好一阵子。后来大概理解了，但是还是老师讲的明白。","like_count":0},{"had_liked":false,"id":107109,"user_name":"响雨","can_delete":false,"product_type":"c1","uid":1581705,"ip_address":"","ucode":"C5FB3A3BC68F92","user_header":"https://static001.geekbang.org/account/avatar/00/18/22/89/73397ccb.jpg","comment_is_top":false,"comment_ctime":1561460581,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561460581","product_id":100026901,"comment_content":"import 将导入所有的模块内容到一个类似字典的对象当中，如果在A模块修改了模块C其中不可变类型的值，B再导入C的话，带过来的那个值会变化，是A修改后的值。","like_count":0},{"had_liked":false,"id":106633,"user_name":"自负盈亏","can_delete":false,"product_type":"c1","uid":1468575,"ip_address":"","ucode":"36B2F3A3E953F8","user_header":"https://static001.geekbang.org/account/avatar/00/16/68/9f/83eb76fb.jpg","comment_is_top":false,"comment_ctime":1561360745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561360745","product_id":100026901,"comment_content":"import os<br>import sys<br><br>sys.path.append(os.path.join(os.getcwd(), os.path.basename(__file__)))<br>print(sys.path)<br># 这样呢","like_count":0},{"had_liked":false,"id":106102,"user_name":"taoist","can_delete":false,"product_type":"c1","uid":1195004,"ip_address":"","ucode":"D70AFE25CD8F10","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/fc/04a75cd0.jpg","comment_is_top":false,"comment_ctime":1561175059,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1561175059","product_id":100026901,"comment_content":"from module_name import * 会把 module_name 模块里所有内容，导入到当前模块空间，<br>import module_name 把 module_name 作为一个模块导入，使用model_name.xxx 进行调用，可以避免不同模块相同函数名、变量名、类名的冲突","like_count":0},{"had_liked":false,"id":105132,"user_name":"小胖","can_delete":false,"product_type":"c1","uid":1022958,"ip_address":"","ucode":"1B8D884D254070","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/ee/8950c240.jpg","comment_is_top":false,"comment_ctime":1560926203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560926203","product_id":100026901,"comment_content":"第一个在调用的时候，前面不需要写模块名，第二在调用的时候需要写模块名","like_count":0},{"had_liked":false,"id":105095,"user_name":"blacky","can_delete":false,"product_type":"c1","uid":1001676,"ip_address":"","ucode":"9B674AC50B098A","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epssBXvp72yv0eibzPpckKJI1AvPsVicT8HwhJyjWUFibAiaiacmtUfQKcGuJ0xWsa1P6CibhvjDuNgwrBA/132","comment_is_top":false,"comment_ctime":1560915275,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1560915275","product_id":100026901,"comment_content":"矩阵相乘的代码，三重循环里的行号和列号是不是写错了？","like_count":0},{"had_liked":false,"id":105090,"user_name":"_stuView","can_delete":false,"product_type":"c1","uid":1244561,"ip_address":"","ucode":"C2D4AAB08515F1","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/91/65ff3154.jpg","comment_is_top":false,"comment_ctime":1560914620,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560914620","product_id":100026901,"comment_content":"if __name__ == ‘__main__’还是不太懂","like_count":0,"discussions":[{"author":{"id":1742549,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/96/d5/23fecf33.jpg","nickname":"Hy","note":"","ucode":"F912E8A8D97591","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283523,"discussion_content":"比如说你的名字叫韩梅梅，你有三项技能，做宫保鸡丁，写代码，游泳，你的工作单位是餐厅，工作职能是炒菜，假设“写代码”和“游泳”两个功能写在if __name__ == ‘__main__’后面，当你的工作单位引用你的技能时（也就是当别的模块引用另一个模块时），你叫韩厨师，仅仅暴露你做宫保鸡丁的能力即可，不需要“写代码”和“游泳”（写在if __name__ == ‘__main__后面，不执行），当你不是被引用，而是执行自己的模块时，也就是当你叫韩梅梅时，你可以全部执行这三个技能。（写在if __name__ == ‘__main__的也执行）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592289597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104562,"user_name":"吴","can_delete":false,"product_type":"c1","uid":1495840,"ip_address":"","ucode":"4807FB811B2EDC","user_header":"https://static001.geekbang.org/account/avatar/00/16/d3/20/95e71191.jpg","comment_is_top":false,"comment_ctime":1560777036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560777036","product_id":100026901,"comment_content":"老师，您好，行业的文本语意解析有什么好的资料书籍，请老师推荐一下","like_count":0},{"had_liked":false,"id":104218,"user_name":"风居住的街","can_delete":false,"product_type":"c1","uid":1542673,"ip_address":"","ucode":"0075A7FB66F797","user_header":"https://static001.geekbang.org/account/avatar/00/17/8a/11/8e9fc7e7.jpg","comment_is_top":false,"comment_ctime":1560685759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560685759","product_id":100026901,"comment_content":"大家分析一下，为什么py模块化是要中央集权式的结构，而有些其他的系统适合分布式的呢？","like_count":0},{"had_liked":false,"id":103355,"user_name":"啊Ray","can_delete":false,"product_type":"c1","uid":1081676,"ip_address":"","ucode":"FE14A61A6F3C15","user_header":"https://static001.geekbang.org/account/avatar/00/10/81/4c/e42bc9b8.jpg","comment_is_top":false,"comment_ctime":1560419234,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560419234","product_id":100026901,"comment_content":"第二种方法固然是不错，但是不知道老师是否遇到过某些应用无法使用Virtual Environment的情况呢？要是有这种情况又不想把代码写死又有什么好办法呢？","like_count":0},{"had_liked":false,"id":102869,"user_name":"春之绿野","can_delete":false,"product_type":"c1","uid":1057216,"ip_address":"","ucode":"296003F7D2B086","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/c0/38816c31.jpg","comment_is_top":false,"comment_ctime":1560318128,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1560318128","product_id":100026901,"comment_content":"第二种方法调用的时候还要加上module_name,第一种方法可以直接调用模块的方法","like_count":0},{"had_liked":false,"id":102397,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1560215902,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560215902","product_id":100026901,"comment_content":"很多第三方库中都会有这个__init__.py文件，是否也和模块化有相，有什么用？","like_count":0},{"had_liked":false,"id":102280,"user_name":"大斌","can_delete":false,"product_type":"c1","uid":1002183,"ip_address":"","ucode":"1434C2B0A29135","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/c7/ec18673b.jpg","comment_is_top":false,"comment_ctime":1560175339,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560175339","product_id":100026901,"comment_content":"from module_name import * 是从模块导入所有内容,可以直接调用，但是可能会和现有代码冲突。<br>import module_name 是导入整个模块，调用的时候要附带模块前缀，避免代码冲突","like_count":0},{"had_liked":false,"id":102055,"user_name":"Hoo-Ah","can_delete":false,"product_type":"c1","uid":1306913,"ip_address":"","ucode":"823093A6C7DEE7","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/21/52e8267b.jpg","comment_is_top":false,"comment_ctime":1560126982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560126982","product_id":100026901,"comment_content":"from和import都会把要导入的模块执行一遍，不过from module_name import *会把模块里面的所有属性加载到当前模块，可能会造成变量名的冲突；而import把模块名加载到当前模块中，也可能会造成冲突，不过几率比较小。","like_count":0},{"had_liked":false,"id":102016,"user_name":"yshan","can_delete":false,"product_type":"c1","uid":1136788,"ip_address":"","ucode":"A2ECDCDA52B8EE","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/94/c8bc2b59.jpg","comment_is_top":false,"comment_ctime":1560103909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560103909","product_id":100026901,"comment_content":"加油，需要学以致用","like_count":0},{"had_liked":false,"id":101968,"user_name":"aqten","can_delete":false,"product_type":"c1","uid":1546156,"ip_address":"","ucode":"86D25978B986B6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKgYuT4PMHzd0mhNSyWrH1ic27NhBmJGbAojBGgfKkvkOLAVdH7Ozngy71fYSyQx85bCLPsicxz20Fw/132","comment_is_top":false,"comment_ctime":1560077145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560077145","product_id":100026901,"comment_content":"这堂课解答了我好多一直有疑问的问题","like_count":0},{"had_liked":false,"id":101906,"user_name":"code2","can_delete":false,"product_type":"c1","uid":1281792,"ip_address":"","ucode":"BBA5748FB6A01C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8OPzdpDraQMvCNWAicicDt54sDaIYJZicBLfMyibXVs4V0ZibEdkZlbzxxL7aGpRoeyvibag5LaAaaGKSdwYQMY2hUrQ/132","comment_is_top":false,"comment_ctime":1560047791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560047791","product_id":100026901,"comment_content":"from module_name import *和import module_name有什么区别？<br>前者是直接引语，后者是间接引语<br>","like_count":0},{"had_liked":false,"id":101849,"user_name":"蒙开强","can_delete":false,"product_type":"c1","uid":1317706,"ip_address":"","ucode":"61B3183781B9F7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/4a/f9df2d06.jpg","comment_is_top":false,"comment_ctime":1559995077,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559995077","product_id":100026901,"comment_content":"老师，你好，这个建包分模块感觉没java方面的好用，经常出现ValueError: attempted relative import beyond top-level package这种问题，有时怎么引都感觉引不对","like_count":0},{"had_liked":false,"id":101806,"user_name":"Sky","can_delete":false,"product_type":"c1","uid":1033740,"ip_address":"","ucode":"7C585132491E8C","user_header":"","comment_is_top":false,"comment_ctime":1559978771,"is_pvip":false,"replies":[{"id":"36707","content":"可以的，参考 Google 内部的代码系统，所有产品代码，到 reseach 的代码，全部在一个文件夹下。","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560030736,"ip_address":"","comment_id":101806,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559978771","product_id":100026901,"comment_content":"&gt; 所有文件都堆在一个文件夹下也并不是办法<br>所以真正的工程化的解法是？","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453124,"discussion_content":"可以的，参考 Google 内部的代码系统，所有产品代码，到 reseach 的代码，全部在一个文件夹下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560030736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101779,"user_name":"Wing·三金","can_delete":false,"product_type":"c1","uid":1341402,"ip_address":"","ucode":"6B9F5822C3717F","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/da/54c663f3.jpg","comment_is_top":false,"comment_ctime":1559968608,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1559968608","product_id":100026901,"comment_content":"思考题：<br>from module_name import * 能够导入模块下所有的类&#47;函数等内容，完后可以直接调用模块下所有方法；而 import module_name 只是将名称导入，不一定会将所有内容也导入，比如 import sklearn; sklearn.feature_extraction 是可行的，但是 import sklearn; sklearn.svm 会报错 （AttributeError: module &#39;sklearn&#39; has no attribute &#39;svm&#39;）。具体的原因我还没明白，因为我看着 feature_extraction 和 svm 的文件目录结构是很相似的，__init__.py 内容也大同小异；从 sklearn 的 __init__.py 文件来看，似乎是由于在 import 时只会选择性导入【部分】子模块。希望有高手能帮忙解答下，或者老师考虑下开个答疑课嘿嘿。<br><br>另外有个疑问：<br>我在 win10 下用 virtualenv 创建了一个 env 名为 ver_2.1，当目录结构为<br>ver_2.1<br>|-Include<br>|-Lib<br>|-Scripts<br>|-tcl<br>|-proto<br>|-src<br>|-utils<br>时，在 cmd 进入 Scripts 文件夹并 activate，用命令行 python ..&#47;src&#47;main.py 能正常运行出结果[[19, 22], [43, 50]]，而且我没修改 active 文件；<br>但是当我尝试将 proto src utils 放进新建的文件夹 codes，也就是目录结构改为<br>ver_2.1<br>|-Include<br>|-Lib<br>|-Scripts<br>|-tcl<br>|-codes<br>  |--proto<br>  |--src<br>  |--utils<br>时就会出现ModuleNotFoundError: No module named &#39;proto&#39;，尝试过在 Scriptsa&#47;activate 文件末尾添加 export PYTHONPATH=&quot;C:\\ver_2.1\\codes&quot; 和 export PYTHONPATH=&quot;C:\\ver_2.1&quot;（也试过将 \\ 换为 &#47; 和 \\\\），但始终无法找到 proto，不知老师和其他同学能否看出问题在哪呢？请指教~","like_count":0,"discussions":[{"author":{"id":1164589,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c5/2d/3f658d3f.jpg","nickname":"Eline","note":"","ucode":"936EF16B8C08FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473,"discussion_content":"我遇到过1个问题，应该和你说的问题类似。在win10 PyCharm 2019.1.2 (Professional Edition)下，在原有project--package1--package2--package3路径下，创建3个packages--proto,src,utils，执行课程里面的代码时，也会提示：ModuleNotFoundError: No module named &#39;proto&#39;，手动输入proto，pycharm不会匹配到mat，根据pycharm的系统匹配提示，手动导包，也就是：from project.package1.package2.package3.proto.mat import Matrix 这样太繁琐了。 pycharm单独打开package3，代码执行正常。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561606767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101703,"user_name":"可乐泡枸杞","can_delete":false,"product_type":"c1","uid":1308516,"ip_address":"","ucode":"C709B781DF0456","user_header":"https://static001.geekbang.org/account/avatar/00/13/f7/64/03d8154f.jpg","comment_is_top":false,"comment_ctime":1559919785,"is_pvip":false,"replies":[{"id":"36712","content":"端午快乐 lol，最好的学习方式就是先领悟 top level 的核心，再掌握细节知识，加油！","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560032435,"ip_address":"","comment_id":101703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559919785","product_id":100026901,"comment_content":"端午节快乐。<br>还没从搜索引擎那缓过来。。先不求甚解一下。","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453077,"discussion_content":"端午快乐 lol，最好的学习方式就是先领悟 top level 的核心，再掌握细节知识，加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560032435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101618,"user_name":"lllong33","can_delete":false,"product_type":"c1","uid":1528751,"ip_address":"","ucode":"5D012385994C3D","user_header":"https://static001.geekbang.org/account/avatar/00/17/53/af/e5bf5d08.jpg","comment_is_top":false,"comment_ctime":1559888537,"is_pvip":false,"replies":[{"id":"36716","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560033864,"ip_address":"","comment_id":101618,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559888537","product_id":100026901,"comment_content":"不推荐使用 *，会导入过多不需要的内容。<br><br>from module_name import *，可以直接使用类、函数、变量等<br>import module_name，需module_name.func()","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453037,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560033864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101613,"user_name":"SCAR","can_delete":false,"product_type":"c1","uid":1031209,"ip_address":"","ucode":"38C0927FA3C5FC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/29/022905e6.jpg","comment_is_top":false,"comment_ctime":1559886328,"is_pvip":false,"replies":[{"id":"36717","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560033879,"ip_address":"","comment_id":101613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559886328","product_id":100026901,"comment_content":"思考题：<br>from module_name import * 是把module_name下的所有变量或对象映射到当前命名空间，访问调用的话直接写变量或者变量对象调用即可。这种调用方式要注意一点的是如果变量和调用者里变量对象同名或者调用者import其他模块而来的变量同名的话，该变量会覆盖其他同名变量或者被其他同名变量所覆盖。<br>而import module_name是把module_name映射到当前命名空间，要访问其下的变量或变量对象调用必须加上module_name，比如module_name.xx()。","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453036,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560033879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101610,"user_name":"John Si","can_delete":false,"product_type":"c1","uid":1526611,"ip_address":"","ucode":"705B90724A4BD4","user_header":"https://static001.geekbang.org/account/avatar/00/17/4b/53/67c08006.jpg","comment_is_top":false,"comment_ctime":1559884109,"is_pvip":false,"replies":[{"id":"36718","content":"答案正确，端午快乐！","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560033911,"ip_address":"","comment_id":101610,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559884109","product_id":100026901,"comment_content":"老师端午节快乐！<br><br>from import module_name import * 和 import module_的主要分别是 from import module_name import * 可直接调用module内的函数或值，假如不是用这种方式import的话，则需透过module_name.xxxxx 方式去调用。<br><br>如有错请老师跟各位同学指正或补充。","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453034,"discussion_content":"答案正确，端午快乐！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560033911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101596,"user_name":"canownu","can_delete":false,"product_type":"c1","uid":1524498,"ip_address":"","ucode":"0E9B2EDDBC8572","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoT9nVNcyrunC5RjsOZwLObffWPgKnsCVcjctqFPNSK6j1XHNibDPQpBVmO6jyIemnepILyTIJ7SQw/132","comment_is_top":false,"comment_ctime":1559878119,"is_pvip":false,"replies":[{"id":"36719","content":"端午快乐～","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560033930,"ip_address":"","comment_id":101596,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559878119","product_id":100026901,"comment_content":"大家端午安康","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453027,"discussion_content":"端午快乐～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560033930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101556,"user_name":"GentleCP","can_delete":false,"product_type":"c1","uid":1525440,"ip_address":"","ucode":"BB1EE3720D44F0","user_header":"https://static001.geekbang.org/account/avatar/00/17/46/c0/01292b08.jpg","comment_is_top":false,"comment_ctime":1559870483,"is_pvip":false,"replies":[{"id":"36720","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560033947,"ip_address":"","comment_id":101556,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559870483","product_id":100026901,"comment_content":"from module import *之后，module里的函数类都可以直接用该名字调用，而import module调用其类和函数需要在前面加module.函数名（类名）的方式，建议采用第二种，因为这样可以知道某个函数，类是从哪个模块来的，第一种方式万一你有两个模块都有一个同名函数，调用就会出问题","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453012,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560033947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101543,"user_name":"mickle","can_delete":false,"product_type":"c1","uid":1201493,"ip_address":"","ucode":"1F89608B5E06C7","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/55/19ec7b0e.jpg","comment_is_top":false,"comment_ctime":1559867035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559867035","product_id":100026901,"comment_content":"from module_name import * 可能和作用域中现有变量同名从而产生覆盖，而import module_name 是用module_name为前缀，不会同名。","like_count":0},{"had_liked":false,"id":101541,"user_name":"","can_delete":false,"product_type":"c1","uid":1322330,"ip_address":"","ucode":"FA2983C5AD320C","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/5a/cc637589.jpg","comment_is_top":false,"comment_ctime":1559866738,"is_pvip":false,"replies":[{"id":"36721","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1560033956,"ip_address":"","comment_id":101541,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559866738","product_id":100026901,"comment_content":"from module_name import *   是倒入mpdule_name文件中所有的函数、类<br><br><br>import module_name    是倒入文件名，底层的模块需要以  module_name.  的方式进行调用","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453005,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560033956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101539,"user_name":"王征","can_delete":false,"product_type":"c1","uid":1130985,"ip_address":"","ucode":"F07FE3C51C00F6","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/e9/586275da.jpg","comment_is_top":false,"comment_ctime":1559866191,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559866191","product_id":100026901,"comment_content":"import module_name之后，引用的时候要使用 module_name.function（或 class）的方式，from module_name import * 可以直接调用模块中的方法或类，不需要带模块名。","like_count":0}]}