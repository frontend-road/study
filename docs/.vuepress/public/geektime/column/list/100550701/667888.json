{"id":667888,"title":"09｜全面调教：让GPT理解“否定”","content":"<p>你好，我是键盘，我们继续驯服 GPT。</p><p>这节课我们来直面“人智协作”中绕不开的底层诉求——精准控制。什么意思呢？它可以拆解成两个子课题。</p><p><img src=\"https://static001.geekbang.org/resource/image/88/70/88807cff656284544433f2ca9d569170.png?wh=1142x364\" alt=\"图片\"></p><ol>\n<li><strong>要：</strong>清晰、明确地表达你的需求。</li>\n<li><strong>不要：</strong>引导AI规避你不想生成的内容。</li>\n</ol><p>大多数人都盯着“要什么”，却忽略了“精准地不要什么”的重要性，结果就是因为这20%的细节，让80%的结果可用性大幅下降。这就是课程标题中“让GPT理解否定”的含义了。</p><p>其实在GPT这类语言模型中遇到的“控制”难题到了非文本生成模型中也无法回避。比如Midjourney，它的出图质量那么高，为什么大家花了钱还在愁落地应用呢？Stable Diffusion + ControlNet会告诉你，是控制。ControlNet插件就是直接指挥SD应该用什么表情、什么角度、什么姿势等等细节来绘图的。控制效果不好，消耗更多的成本，也足够让你质疑AI、怀疑人生。</p><p>这节课我会带你设计一个脚本人设来实现长图的自动切割，通过案例讲明白如何让 GPT 理解“否定”。这个脚本在商品详情页的裁剪、图片邮件切割等等这类图片切割的场景里都非常实用。</p><p>我们需要用到Mac自带的AppleScript，Windows用户使用Python也可以替代实现。如果你会使用Figma，也可以让ChatGPT帮助开发一个插件来实现。</p><!-- [[[read_end]]] --><p>以上方案都不需要开发基础，我会把它们作为分支功能合入prompt，和你一起通通实现。</p><h2><strong>GPT无法有效理解“否定”的根源是什么？</strong></h2><p>GPT模型是基于概率和模式来识别prompt的，而不是通过真正的阅读来理解文本。所以TA可能无法准确地理解和处理否定概念。但它的性能和准确度会随着模型的更新和优化而提高。另一方面，GPT会通过提取重点关键字来进一步理解prompt。</p><p>这里面，具体的关键词权重最高，连接词和“不要”这样的表达可能会被忽略。</p><p>在咱们课程的留言区中，叶筱结合自己的理解，给出了生动的比喻。</p><p><img src=\"https://static001.geekbang.org/resource/image/7f/24/7fec802e20d08ebb2495e96a9f69e024.jpg?wh=1125x515\" alt=\"图片\" title=\"叶筱的留言\"></p><p>再比如我们讲过的“双语混打”中<a href=\"https://time.geekbang.org/column/article/663631\">爬取Twitter数据</a>的案例，GPT会更倾向于使用相关的API来实现，偏偏我还在prompt中提到了API，那TA就会盯着API关键词，忽略“不要使用”四个大字。</p><center>\n💬 案例prompt\n</center><pre><code class=\"language-plain\">写一个python脚本，将Twitter的&lt;post&gt;抓取后保存为pdf，不要使用Twitter API。\n</code></pre><p>也就是说，在这种模式下，GPT更大概率会使用API来实现，而不是你说什么就是什么。使用“不要”换成“Do not”这种<a href=\"http://time.geekbang.org/column/article/663631\">双语混打</a>策略都不能彻底解决“有效否定”的原因也在这里。</p><p>下面是<a href=\"https://help.openai.com/en/articles/6654000-best-practices-for-prompt-engineering-with-openai-api\">官方实践</a>给出的佐证和指导，可以参考。</p><blockquote>\n<p>Instead of just saying what not to do, say what to do instead。（用肯定来取代否定）<br>\n<strong>　</strong><br>\n❌ Less effective（效果不佳）</p>\n</blockquote><pre><code class=\"language-plain\">The following is a conversation between an Agent and a Customer. DO NOT ASK USERNAME OR PASSWORD. DO NOT REPEAT.\n\nCustomer: I can’t log in to my account.\nAgent:\n</code></pre><blockquote>\n<p>✅ Better（效果更好）</p>\n</blockquote><pre><code class=\"language-plain\">The following is a conversation between an Agent and a Customer. The agent will attempt to diagnose the problem and suggest a solution, whilst refraining from asking any questions related to PII. Instead of asking for PII, such as username or password, refer the user to the help article www.samplewebsite.com/help/faq\n\nCustomer: I can’t log in to my account.\nAgent:\n</code></pre><h2>在案例中学习：全面调教，设计一个长图裁剪脚本</h2><p>上面的官方指导我在第二节课的“<a href=\"https://time.geekbang.org/column/article/663631\">有效否定三策略</a>”中也有讲过，再复习一下。</p><ol>\n<li>否定转肯定。</li>\n<li>侧重肯定，再附上对应的否定。</li>\n<li>加入示例调教。</li>\n</ol><p>现在你可以<a href=\"https://time.geekbang.org/column/article/666642\">借助综合人设模版</a>，直接通过展开 <code>/功能：要做什么</code> 来盘点需求，同步设计prompt，看看怎么<strong>针对综合人设的5个重点定义，把“有效否定3策略”融合进去</strong>。</p><p>为了方便理解，你可以先把“肯定/否定”这一组概念，扩展为要/不要、偏好/默认、是/不是、应该/避免……因为它们和“肯定/否定”一样，都隐藏了一个判断的逻辑。</p><ul>\n<li><strong>功能：要做什么</strong><strong>，</strong><strong>不要什么。</strong></li>\n</ul><p>开局先用一句话定义核心功能，围绕核心来有序展开细节，你的设计就不会乱。</p><center>\n💬 prompt设计：核心功能\n</center><pre><code class=\"language-markdown\">功能：针对指定路径的长图，按一个指定高度切割为多个切片，宽度不变，新建桌面文件夹Slices保存\n</code></pre><p>这里我还命名了一个综合人设“Script Master”，可以容纳不同平台和编程语言的解决方案。另外，“任务完成”这种关键的反馈也设置一下，让GPT设计好UI，而且可以精准控制差异化，比如Mac上用弹窗、Python的是文字反馈、Figma则是完整GUI（图形用户界面）。除了这些实际功能，还有洗脑用的“初始化”，让GPT先和用户打招呼，递出菜单沟通需求。</p><center>\n💬 prompt设计：子功能\n</center><pre><code class=\"language-markdown\">/mac：用AppleScript编写一个脚本来实现，`格式选择`需要UI\n/win：编写一个python脚本来实现\n/figma：开发一个Figma插件来实现，需要UI\n/help：列出`偏好`菜单，提供指引\n</code></pre><center>\n💬 prompt设计：初始化\n</center><pre><code class=\"language-markdown\">初始化：{`回复`+`配图`+`偏好`列表+`指令`表格……}\n</code></pre><ul>\n<li><strong>偏好：偏好什么，否则默认什么。</strong></li>\n</ul><p>GPT理解偏好的语境还是很容易的，侧重肯定你的偏好即可。没有想法就默认使用一套设计好的高容错默认值。</p><p>比如你日常用的是Windows，初始prompt里的平台默认值就改成Windows。这些偏好会决定GPT用什么设置来接收什么任务，用什么样的方式去执行。注意，偏好不是焊死的，随时可以用/help指令来调整。</p><center>\n💬 可复用的prompt写法\n</center><pre><code class=\"language-markdown\">🎛️ 基础：&lt;用户基础&gt; 默认：小白\n</code></pre><ul>\n<li><strong>判断：满足条件做什么，否则做什么。</strong></li>\n</ul><p>这是让GPT一步一步思考的关键。</p><p>先说<strong>情况判断</strong>。与其一条路走到黑，让GPT不停地执行所有事情，不如设计多个分支，某个节点满足条件再自动推理下一个分支，会更加精准、高效。“一条道走到黑”是没有判断的，即使出错也可能最后再给你反馈。就像地上一个井盖丢了，就应该先树立一个警示牌，而不是等人掉进去了再说“哦欧……”。</p><p>举个例子，如果想达到的效果是：假如用户定位是“小白”，则提供必要的安装指引再开始设计；如果用户有一定基础，则直接给出代码，不要给多余的指引。那应该怎么写呢？</p><center>\n💬 可复用的prompt判断示例\n</center><pre><code class=\"language-markdown\">如果用户是“小白”，请直接提供方案。否则：\n- 选择/win的情况，你应该先引导用户安装python、安装依赖包。\n- 选择/figma插件的情况，你应该提供详尽的指导。\n</code></pre><p>还有一种判断是<strong>确认类判断</strong>，“是”就继续，“不是”就修改。我倾向于用“#注释”的方式来调教GPT。比如“不要使用代码块回复”即遇到Markdown就正确地渲染出来。</p><p>另外，假如用户已经修改了某个参数，确认过了，那么根据“偏好只确认一次”，就不要再麻烦用户继续确认其他的设置，直接进入主题就好。</p><pre><code class=\"language-markdown\">#不要使用代码块回复，偏好只确认一次\n</code></pre><p>如果前面已经提供了“偏好”，那就按需修改，不然就扣1默认，进入主题。</p><pre><code class=\"language-markdown\">请确认你的偏好，回“1”保持默认。\n</code></pre><ul>\n<li><strong>模版：什么<strong><strong>输出</strong></strong>格式？拒绝单调。</strong></li>\n</ul><p>模版就是所谓的示例调教，让GPT抄作业。通过这种方式，直截了当地说清楚GPT应该做什么。注意不要使用干巴巴的纯文字段落，要用咱们说过的结构化表达。</p><center>\n💬 可复用的prompt写法\n</center><pre><code class=\"language-markdown\">表格输出`偏好`，模版：\n## ✦偏好✦\n表格 #不要使用序号\n\n用列表列出`指令`菜单，模版：\n## ✦指令✦\n</code></pre><p>不同的分支，可以有不同的模版，比如设置项适合用带图标的表格，指令菜单适合用列表，表格序号是冗余可以去掉。这些差异性和颗粒度都能通过自然语言精准控制。</p><ul>\n<li><strong>要求：应该怎样，避免怎样。</strong></li>\n</ul><p>因为要求是影响全局的，所以描述就要更加缜密，重点应用“先肯定，再附上对应的否定”，把“要”和“不要”都带上。在这个案例里，最重要的事情是强调“把用户提供的信息自动填入设计的代码中”，不要让人来操心。剩下的做到高效、简洁易懂和少冗余，把必要的要求用“肯定”的语气表达出来就足够了。</p><center>\n💬 可复用的prompt写法\n</center><pre><code class=\"language-markdown\">- 把用户提供的路径填入脚本，而不是人力整合。\n- 使用高效的算法，避免复杂的运算和步骤。\n- 尽量少地调用依赖库存，使用简洁易懂的注释，而不是包含大量术语的方式。&nbsp;\n- 正确渲染markdown。\n- 请一步一步思考，输出完整的代码。\n</code></pre><p>最后，在综合人设prompt（模板在<a href=\"https://time.geekbang.org/column/article/666081\">这里</a>）的设计中梳理需求，全盘控制。</p><p><img src=\"https://static001.geekbang.org/resource/image/87/f8/87b3e4c1207f9c3eec64293aa26c0af8.png?wh=1830x1878\" alt=\"图片\"></p><p>可以看到，在“有效否定3策略”的基础上，这里使用了更全面的控制，其中有2点最重要。</p><ol>\n<li><strong>加入判断，应对复杂。</strong>通过设计多个任务节点的方式，有效释放GPT思维链（CoT）的能力，一步一步推理，而且是有针对性地选择某个任务节点来继续。</li>\n<li><strong>增加上下文联系，让描述模式更好理解。</strong>比如“使用高效的方式”和“避免额外的引用库”这样的上下文组合。比在某些位置单纯提到“不要什么”更精准，不需要处处添加示例。</li>\n</ol><h3>自检，排除自相矛盾</h3><p>跑机之前，先过一遍整体的描述有没有自相矛盾的地方。因为多综合人设容易突破500字，前后不一致的概率就更大。比如前文要求“不要使用序号”，后面又来一句“序号列居中对齐”。如果出现这种低级错误，一定要修正初始prompt后再继续。</p><p><img src=\"https://static001.geekbang.org/resource/image/06/a2/060a345795eddd1949a36db1efc146a2.png?wh=1142x320\" alt=\"图片\" title=\"做好自检\"></p><p>一切就绪，我们放飞ChatGPT对话框的小飞机。</p><h3>一步一步实现</h3><p>首先和GPT沟通偏好。通过emoji加表格菜单的方式就能打造友好的UI交互。这里的图片裁切任务，宽度不变，单独要求高度使用1456px。根据“只确认一次”的要求，我们就可以直接选择不同场景的指令开始派活。</p><p><img src=\"https://static001.geekbang.org/resource/image/94/b0/9427c97c1194defcedc5815b3f24dfb0.png?wh=1024x967\" alt=\"图片\" title=\"偏好确认\"></p><p><strong>第一种场景</strong>，选择 <code>/mac</code> ，用AppleScript来实现。这里发现需要额外的ImageMagick支持，粘贴代码运行就好。接着拿到AppleScript代码，依旧是复制粘贴，想不想夸GPT就随你了。</p><p><img src=\"https://static001.geekbang.org/resource/image/cc/98/cc5fd454d2273b2c38d52d07648daa98.png?wh=1920x485\" alt=\"图片\"></p><p>一稿过，既高效又有效。路径和参数都自动合入到了代码里，也按要求给出了提醒UI，完全不需要我们懂编码，也不需要操作图像处理工具。可以看到，这里如无意外，最重要的反而是“完成的反馈”，我在 <code>🔔 提醒</code> 中给出了偏好设置。</p><p>那有意外怎么办呢？老办法，用prompt模版 <code>报错：你复制的报错信息</code> 。</p><p><img src=\"https://static001.geekbang.org/resource/image/cc/34/ccd939bdc4888d9f5d5a4f75ab8f6434.png?wh=1325x508\" alt=\"图片\" title=\"参数无需人工填入，无报错，顺利执行\"></p><p><strong>第二种场景</strong>，切到 <code>/win</code> ，验收Windows用户使用Python来实现的情况，也一稿通过了（设计师泪流满面)。依赖库只使用了图形处理所需的PIL和访问系统的os，没有多余。</p><p><img src=\"https://static001.geekbang.org/resource/image/72/48/72e13d9df519956cb09e6ac5199e8648.png?wh=1920x497\" alt=\"图片\" title=\"给出 Python 安装指引和实现方案\"></p><p>这里的命名不是严格遵循“偏好”的，其实对于复杂的任务，局部不稳定输出还是比较常见的。只要不影响核心的功能，通过上一节课的<a href=\"https://time.geekbang.org/column/article/667209\">迭代方法</a>持续沟通修正就好，这里就只要指正一次。</p><p>成果顺利验收。</p><p><img src=\"https://static001.geekbang.org/resource/image/58/f9/5887839c16ce97c0c3edbf0cf1df84f9.png?wh=1280x508\" alt=\"图片\" title=\"Python 方案顺利执行（此处未修改命名方式）\"></p><p>到这里已经跑了2个方案，输出有点长了，很多小伙伴输出一长就会迷路。没关系，一句 <code>/help</code> 就能解决。除了切换需求，你也可以随时修改偏好。除此之外的其他疑问，GPT都会为你排忧解难。</p><p><img src=\"https://static001.geekbang.org/resource/image/76/f7/76358a36ee15fef99daf14f8e1a1eaf7.png?wh=1024x766\" alt=\"图片\" title=\"随时提供帮助\"></p><p><strong>第三个场景</strong>，切到 <code>/figma</code> ，用（指挥GPT）开发一个插件的方式来实现。</p><p><img src=\"https://static001.geekbang.org/resource/image/70/df/7090502ce791454bb6668b4445309bdf.png?wh=1920x472\" alt=\"图片\" title=\"“开发”一个 Figma 插件\"></p><p>Figma插件这个方式主打GUI可视化交互，需要比较长的迭代沟通，这里我用设计师小伙伴 <a href=\"https://dribbble.com/kakit\">Kakitchen</a> 实现的成品给你感受一下。现在在GPT的协助下，一位设计师就可以秒变全栈工程师。</p><p><img src=\"https://static001.geekbang.org/resource/image/9a/7d/9a8fd99789f8f7eyyef633b42252e37d.png?wh=1074x653\" alt=\"图片\" title=\"做一个 Figma 插件来裁剪\"></p><h3>彩蛋：图片嵌入和流程图</h3><p>案例到这里就结束了，不过除了迭代答案，我们当然也迭代知识，在这次实验里我有2个关于定义专业输出的新发现，和你分享一下，分别是精准控制图片嵌入和流程图生成（控制逻辑）。</p><h4>图片嵌入：“要你好看”</h4><p>偏好设置中的配图来自可商用的高质量图库Unsplash。在GPT中使用图片，除了必要的数据可视化和图形辅助学习，装饰类的都不适合占太大篇幅，尤其是高度。</p><p><img src=\"https://static001.geekbang.org/resource/image/f0/53/f06a5a51297acf7eec9a13637f820f53.png?wh=732x620\" alt=\"图片\" title=\"把握图片的合适高度\"></p><p>根据原图URL中的参数 <code>&fit=crop&w=1974</code> ，可以看出自适应方式是裁剪，宽度是1974px。如果你已经有一个选好的 <a href=\"https://unsplash.com/\">unsplash</a> 图片的链接，那就用这行Markdown模版嵌入图片。</p><pre><code class=\"language-markdown\">![接口配图](https://source.unsplash.com/目标宽度x目标高度/?&lt;关键词&gt;) \n</code></pre><p>不想动手找图片，那就用之前分享过的翻盲盒接口，这种方式不能控制目标图片，它会随着浏览器的刷新，根据关键词来变换输出。</p><pre><code class=\"language-markdown\">![接口配图](https://source.unsplash.com/目标宽度x目标高度/?&lt;关键词&gt;) \n</code></pre><h4>流程图：先胜后战，全局在握</h4><p>假如你还想用可视化的方式清晰地还原设计逻辑，通过这种方式来自检或者细化设计，怎么办？</p><center> \n💬 prompt\n</center><pre><code>将xx流程输出为mermaid代码\n</code></pre><p>用上面的prompt，再找一个支持Mermaid的编辑器，把GPT生成的代码贴进去，节点中的emoji和符号（比如“?” ）会造成报错，去掉即可。这里我用了Notion笔记，看右图成果，哪里需要自己动手画？</p><p><img src=\"https://static001.geekbang.org/resource/image/fe/1b/fe6d14db6d70220425daac314cb1051b.png?wh=1021x750\" alt=\"\" title=\"还原 GPT “一步一步思考”的路径\"></p><h2>小黑板</h2><p>这节课，我从“人智协作”中绕不开的底层诉求出发，将精准控制拆解成了“要”和“不要”两个子课题，“要”的问题前面的课程已经解决了，所以我们集火解决掌控“不要”的问题。</p><p>GPT无法有效理解“否定”，主要源于TA是根据概率和模式来识别，而不是通过真正的阅读来理解文本的基础逻辑。另一方面，GPT通过提取重点关键字来实现进一步操作，“不要”这样的动作可能会被忽略。所以，我们可以通过融合“有效否定3策略”“加入判断”和“增加上下文联系”等多种策略来保证GPT能够真正“阅读理解”。</p><p>比如我们这节课设计的Script Master，在“/功能”中明确要做什么、不要什么，而不是只说要什么；在“偏好”中侧重肯定个人偏好，否则就用默认值容错，无需示例；再加入“判断”，满足条件做什么，否则做什么，精准控制实现路径和方法；使用“模版”示例调教，让GPT抄作业；最后列出“要求”，说一说应该怎样，避免怎样。</p><p>整体prompt的设计也加入了上下文联系的方法来减少冗余表达或者多余的示例。在用不同方式实现长图自动裁剪的案例中，我们掌握了让 GPT真正理解“否定”的方法，有效地掌控全局。</p><p><img src=\"https://static001.geekbang.org/resource/image/5c/f1/5c320c5e97bbc761f41cce0acb5325f1.png?wh=1142x364\" alt=\"图片\" title=\"GPT 无法有效理解“否定”的根源\"></p><p>彩蛋环节，我分享了灵活控制嵌入图片尺寸的方法，还有使用mermaid代码一键生成流程图来还原设计逻辑的方法。它们在日常的GPT工作流中还大有可为，记得多多尝试。</p><p>其实这个方案一开始是受小伙伴的Figma插件思路启发的，我探索了其他几种不同实现方式之后才整合成一个综合方案。GPT的学习之路，很多志同道合的朋友都在互相启发，希望这种“携手共进”的方式也能给你学习灵感。</p><p>这套课程中，我们不仅要系统掌握利用GPT解决问题的基本规律，对于具体的问题，还要刨根问底，这样才能将有限的方法变成可以无限迁移的方法论。</p><p><strong>要点</strong><strong>：</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/d9/a7/d99e121d69c7ef1ffe9d5d8bf5954ba7.png?wh=1706x784\" alt=\"图片\"></p><h2>踏浪扬帆</h2><p>超级个体的时代已经来临，你可以大胆做很多以前不敢想的事情了。尝试用同样的思路处理垃圾邮件、通讯录或者零散的记事本。通过智能删减，让自己更轻松。</p><p>测试验收前，记得备份好重要的信息哦。</p><p>期待在评论区看到你的思考或感受分享，也欢迎你将这节课分享给感兴趣的朋友们，戳此加入<a href=\"http://jinshuju.net/f/oI1KKM\">课程交流群</a>，我们下节课再会。</p><h2>附｜Script Master</h2><p>兼容：ChatGPT，建议去掉配图来释放占用的字数。</p><p>效果更佳：GPT-4</p><p>插件：不需要</p><p>字数：480</p><p>声明：本人设仅供个人学习体验，未经许可不得商用。</p><pre><code class=\"language-markdown\">你是一个计算机脚本设计专家，请根据下面的说明，确认用户偏好之后，实现[一个长图切割脚本设计]\n功能：针对指定路径的长图 {替换你的长图路径}，按一个指定高度切割为多个切片，宽度不变，新建桌面文件夹Slices保存。\n\n---\n1、初始化：{`回复`+`配图`+`偏好`列表+`指令`表格。 #不要使用代码块回复，偏好只确认一次\n\n- 回复：“**Hi I’m Script Maser,请确认你的偏好，回“1”保持默认。**\n偏好示例：平台：Win\n”\n\n- ![配图](https://images.unsplash.com/photo-1516670428252-df97bba108d1?ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=800&amp;h=100&amp;q=80)\n\n- 表格输出`偏好`，模版：\n## ✦偏好✦\n表格 #不要使用序号\n\n- 用列表列出`指令`菜单，模版：\n## ✦指令✦\n}\n\n2、偏好：\n🎛️ 基础：&lt;用户基础&gt; 默认：小白\n💻 平台：&lt;Win&gt; 默认：Mac\n🔔 提醒：&lt;定义代码中的完成提示&gt; 默认：“🎉 任务已完成”\n🏞️ 格式：&lt;jpg&gt; 默认：png\n📝 命名：&lt;切片命名&gt; 默认：原图名称_s_count\n📏 高度：&lt;切片高度&gt; 默认：750\n\n3、指令：\n/mac：用AppleScript编写一个脚本来实现，`格式选择`需要UI\n/win：编写一个python脚本来实现\n/figma：开发一个Figma插件来实现，需要UI\n/help：列出`偏好`菜单，提供指引\n\n4、判断：\n如果用户是“小白”，请直接提供方案。否则：\n- 选择/win的情况，你应该先引导用户安装python、安装依赖包。\n- 选择/figma插件的情况，你应该提供详尽的指导。\n\n5、要求：\n- 把用户提供的路径填入脚本，而不是人力整合。\n- 使用高效的算法，避免复杂的运算和步骤。\n- 尽量少地调用依赖库存，使用简洁易懂的注释，而不是包含大量术语。&nbsp;\n- 正确渲染markdown。\n- 请一步一步思考，输出完整的代码。\n</code></pre>","neighbors":{"left":{"article_title":"08｜迭代答案：让结果更惊喜","id":667209},"right":{"article_title":"10｜触手可及：万能助手随叫随到","id":668306}},"comments":[{"had_liked":false,"id":382128,"user_name":"赵赵赵","can_delete":false,"product_type":"c1","uid":3692971,"ip_address":"北京","ucode":"A248746B76A7F7","user_header":"https://static001.geekbang.org/account/avatar/00/38/59/ab/9b7b14a6.jpg","comment_is_top":false,"comment_ctime":1696751870,"is_pvip":false,"replies":[{"id":139261,"content":"等它输出完毕。\n&#47;help不是在GPT输出的时候插话，而是聊了一大段发现自己忘了设计的指令了，输入&#47;help就能得到菜单和指引。","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1697092979,"ip_address":"广东","comment_id":382128,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"上文说“输出有点长了，很多小伙伴输出一长就会迷路。没关系，一句 &#47;help 就能解决。”可是我发现有的时候一个方案都没跑完它就迷路了，都来不及输入&#47;help了，这该怎么解决呢？","like_count":0,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629457,"discussion_content":"等它输出完毕。\n/help不是在GPT输出的时候插话，而是聊了一大段发现自己忘了设计的指令了，输入/help就能得到菜单和指引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697092979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376609,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1687073369,"is_pvip":false,"replies":[{"id":137279,"content":"Q1：斜杆可以理解为“综合知识的”、“多面手”或者“全栈”。\nQ2:官方服务。（镜像站和其他AI也能用。）\nQ3：ai.com，需要科学上网。（官方服务）","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1687080323,"ip_address":"广东","comment_id":376609,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"从09课开始看，会复习前面的内容，所以问题会穿插包含前面某课的内容。\nQ1：“斜杠工程师”是什么意思？\nQ2：本专栏是基于哪个网站讲解的？是https:&#47;&#47;openai.com&#47;吗？还是国内的某个镜像网站？\nQ3：手机上哪个网站或APP可以使用chatGPT？","like_count":0,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621292,"discussion_content":"Q1：斜杆可以理解为“综合知识的”、“多面手”或者“全栈”。\nQ2:官方服务。（镜像站和其他AI也能用。）\nQ3：ai.com，需要科学上网。（官方服务）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687080323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376518,"user_name":"ᴶᴱᴿ","can_delete":false,"product_type":"c1","uid":3588216,"ip_address":"广东","ucode":"4E0DADC47389DF","user_header":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","comment_is_top":false,"comment_ctime":1686886609,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"如果你想将某些不可能的任务变成可能，真正利用GPT的思维链这一点极为重要。比如，你想生成一份超长的PPT，应该先确认好主题，生成大纲，接着填充细节，再输出数据源和参考等补充，最后它可以是PPT、论文、推文或者任何富文本文稿。\n \n逐步推理，逐步执行，而不是劈头盖脸就生成一份超长PPT，还要求GPT不能侧漏或者翻车。","like_count":3,"discussions":[{"author":{"id":3206957,"avatar":"https://static001.geekbang.org/account/avatar/00/30/ef/2d/757bb0d3.jpg","nickname":"Toni","note":"","ucode":"E6B2FACCC1E000","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621210,"discussion_content":"写清晰明了的Prompt 不仅有利于ChatGPT 返回更优质的回复，在与ChatGPT 对话改Prompt 的过程中，更容易理清思路，明白自己想要什么。尽管像生成PPT 这样的技巧很快就会被微软新推出的超级好用的功能所取代，但我认为像本课中用到的Prompt 技巧做为对ChatGPT 的底层了解还是非常有用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686915740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":3206957,"avatar":"https://static001.geekbang.org/account/avatar/00/30/ef/2d/757bb0d3.jpg","nickname":"Toni","note":"","ucode":"E6B2FACCC1E000","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621518,"discussion_content":"技巧会被迭代，但沟通需求的方法总是有效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687282596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":621210,"ip_address":"广东","group_id":0},"score":621518,"extra":""},{"author":{"id":3206957,"avatar":"https://static001.geekbang.org/account/avatar/00/30/ef/2d/757bb0d3.jpg","nickname":"Toni","note":"","ucode":"E6B2FACCC1E000","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":621609,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687343180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":621518,"ip_address":"瑞士","group_id":0},"score":621609,"extra":""}]}]}]}