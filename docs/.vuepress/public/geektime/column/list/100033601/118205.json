{"id":118205,"title":"05 | 渲染流程（上）：HTML、CSS和JavaScript，是如何变成页面的？","content":"<p>在<a href=\"https://time.geekbang.org/column/article/117637\">上一篇文章</a>中我们介绍了导航相关的流程，那导航被提交后又会怎么样呢？就进入了渲染阶段。这个阶段很重要，了解其相关流程能让你“看透”页面是如何工作的，有了这些知识，你可以解决一系列相关的问题，比如能熟练使用开发者工具，因为能够理解开发者工具里面大部分项目的含义，能优化页面卡顿问题，使用JavaScript优化动画流程，通过优化样式表来防止强制同步布局，等等。</p><p>既然它的功能这么强大，那么今天，我们就来好好聊聊<strong>渲染流程</strong>。</p><p>通常，我们编写好HTML、CSS、JavaScript等文件，经过浏览器就会显示出漂亮的页面（如下图所示），但是你知道它们是如何转化成页面的吗？这背后的原理，估计很多人都答不上来。</p><p><img src=\"https://static001.geekbang.org/resource/image/2b/79/2b08a85c63bee68c6fd95dabb648fd79.png?wh=1142*451\" alt=\"\"></p><center><span class=\"reference\">渲染流程示意图</span></center><p>从图中可以看出，左边输入的是HTML、CSS、JavaScript数据，这些数据经过中间渲染模块的处理，最终输出为屏幕上的像素。</p><p>这中间的<strong>渲染模块</strong>就是我们今天要讨论的主题。为了能更好地理解下文，你可以先结合下图快速抓住HTML、CSS和JavaScript的含义：</p><p><img src=\"https://static001.geekbang.org/resource/image/31/e6/31cd7172f743193d682d088a60cb44e6.png?wh=1142*704\" alt=\"\"></p><center><span class=\"reference\">HTML、CSS和JavaScript关系图</span></center><p>从上图可以看出，<strong>HTML的内容是由标记和文本组成</strong>。标记也称为<strong>标签</strong>，每个标签都有它自己的语义，浏览器会根据标签的语义来正确展示HTML内容。比如上面的<code>&lt;p&gt;</code>标签是告诉浏览器在这里的内容需要创建一个新段落，中间的文本就是段落中需要显示的内容。</p><!-- [[[read_end]]] --><p>如果需要改变HTML的字体颜色、大小等信息，就需要用到CSS。CSS又称为<strong>层叠样式表，是由选择器和属性组成</strong>，比如图中的p选择器，它会把HTML里面<code>&lt;p&gt;</code>标签的内容选择出来，然后再把选择器的属性值应用到<code>&lt;p&gt;</code>标签内容上。选择器里面有个color属性，它的值是red，这是告诉渲染引擎把<code>&lt;p&gt;</code>标签的内容显示为红色。</p><p>至于<strong>JavaScript（简称为JS），使用它可以使网页的内容“动”起来</strong>，比如上图中，可以通过JavaScript来修改CSS样式值，从而达到修改文本颜色的目的。</p><p>搞清楚HTML、CSS和JavaScript的含义后，那么接下来我们就正式开始分析渲染模块了。</p><p>由于渲染机制过于复杂，所以渲染模块在执行过程中会被划分为很多子阶段，输入的HTML经过这些子阶段，最后输出像素。我们把这样的一个处理流程叫做<strong>渲染流水线</strong>，其大致流程如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/92/e8/9259f8732ddad472e5e08a633ad46de8.png?wh=1142*244\" alt=\"\"></p><center><span class=\"reference\">渲染流水线示意图</span></center><p>按照渲染的时间顺序，流水线可分为如下几个子阶段：构建DOM树、样式计算、布局阶段、分层、绘制、分块、光栅化和合成。内容比较多，我会用两篇文章来为你详细讲解这各个子阶段。接下来，在介绍每个阶段的过程中，你应该重点关注以下三点内容：</p><ul>\n<li>开始每个子阶段都有其<strong>输入的内容</strong>；</li>\n<li>然后每个子阶段有其<strong>处理过程</strong>；</li>\n<li>最终每个子阶段会生成<strong>输出内容</strong>。</li>\n</ul><p>理解了这三部分内容，能让你更加清晰地理解每个子阶段。</p><h2>构建DOM树</h2><p>为什么要构建DOM树呢？<strong>这是因为浏览器无法直接理解和使用HTML，所以需要将HTML转换为浏览器能够理解的结构——DOM树</strong>。</p><p>这里我们还需要简单介绍下什么是<strong>树结构</strong>，为了更直观地理解，你可以参考下面我画的几个树结构：</p><p><img src=\"https://static001.geekbang.org/resource/image/fc/38/fcad0a4e3e73c796f00d6120284a3638.png?wh=1142*859\" alt=\"\"></p><center><span class=\"reference\">树结构示意图</span></center><p>从图中可以看出，树这种结构非常像我们现实生活中的“树”，其中每个点我们称为<strong>节点</strong>，相连的节点称为<strong>父子节点</strong>。树结构在浏览器中的应用还是比较多的，比如下面我们要介绍的渲染流程，就在频繁地使用树结构。</p><p>接下来咱们还是言归正传，来看看DOM树的构建过程，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/12/79/125849ec56a3ea98d4b476c66c754f79.png?wh=1142*555\" alt=\"\"></p><center><span class=\"reference\">DOM树构建过程示意图</span></center><p>从图中可以看出，构建DOM树的<strong>输入内容</strong>是一个非常简单的HTML文件，然后经由HTML解析器解析，最终输出树状结构的DOM。</p><p>为了更加直观地理解DOM树，你可以打开Chrome的“开发者工具”，选择“Console”标签来打开控制台，然后在控制台里面输入“document”后回车，这样你就能看到一个完整的DOM树结构，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/47/73/47f57c3eee749dd838939bfe5dd64573.png?wh=1044*890\" alt=\"\"></p><center><span class=\"reference\">DOM可视化</span></center><p>图中的document就是DOM结构，你可以看到，DOM和HTML内容几乎是一样的，但是和HTML不同的是，DOM是保存在内存中树状结构，可以通过JavaScript来查询或修改其内容。</p><p>那下面就来看看如何通过JavaScript来修改DOM的内容，在控制台中输入：</p><pre><code>document.getElementsByTagName(&quot;p&quot;)[0].innerText = &quot;black&quot;\n</code></pre><p>这行代码的作用是把第一个<code>&lt;p&gt;</code>标签的内容修改为black，具体执行结果你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/e7/74/e730aa1d73c1151c588e2f8c7e22c274.png?wh=1142*712\" alt=\"\"></p><center><span class=\"reference\">通过JavaScript修改DOM</span></center><p>从图中可以看出，在执行了一段修改第一个<code>&lt;p&gt;</code>标签的JavaScript代码后，DOM的第一个p节点的内容成功被修改，同时页面中的内容也被修改了。</p><p>好了，现在我们已经生成DOM树了，但是DOM节点的样式我们依然不知道，要让DOM节点拥有正确的样式，这就需要样式计算了。</p><h2>样式计算（Recalculate Style）</h2><p>样式计算的目的是为了计算出DOM节点中每个元素的具体样式，这个阶段大体可分为三步来完成。</p><h3>1. 把CSS转换为浏览器能够理解的结构</h3><p>那CSS样式的来源主要有哪些呢？你可以先参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/bc/7c/bc93df7b8d03b2675f21e1d9e4e1407c.png?wh=1142*585\" alt=\"\"></p><center><span class=\"reference\">HTML加载CSS的三种方式</span></center><p>从图中可以看出，CSS样式来源主要有三种：</p><ul>\n<li>通过link引用的外部CSS文件</li>\n<li><code>&lt;style&gt;</code>标记内的 CSS</li>\n<li>元素的style属性内嵌的CSS</li>\n</ul><p>和HTML文件一样，浏览器也是无法直接理解这些纯文本的CSS样式，所以<strong>当渲染引擎接收到CSS文本时，会执行一个转换操作，将CSS文本转换为浏览器可以理解的结构——styleSheets</strong>。</p><p>为了加深理解，你可以在Chrome控制台中查看其结构，只需要在控制台中输入document.styleSheets，然后就看到如下图所示的结构：</p><p><img src=\"https://static001.geekbang.org/resource/image/8e/ab/8ec7d5ecfadcd05b3f1ec762223a9aab.png?wh=1142*588\" alt=\"\"></p><center><span class=\"reference\">styleSheets</span></center><p>从图中可以看出，这个样式表包含了很多种样式，已经把那三种来源的样式都包含进去了。当然样式表的具体结构不是我们今天讨论的重点，你只需要知道渲染引擎会把获取到的CSS文本全部转换为styleSheets结构中的数据，并且该结构同时具备了查询和修改功能，这会为后面的样式操作提供基础。</p><h3>2. 转换样式表中的属性值，使其标准化</h3><p>现在我们已经把现有的CSS文本转化为浏览器可以理解的结构了，那么<strong>接下来就要对其进行属性值的标准化操作</strong>。</p><p>要理解什么是属性值标准化，你可以看下面这样一段CSS文本：</p><pre><code>body { font-size: 2em }\np {color:blue;}\nspan  {display: none}\ndiv {font-weight: bold}\ndiv  p {color:green;}\ndiv {color:red; }\n</code></pre><p>可以看到上面的CSS文本中有很多属性值，如2em、blue、bold，这些类型数值不容易被渲染引擎理解，所以<strong>需要将所有值转换为渲染引擎容易理解的、标准化的计算值</strong>，这个过程就是属性值标准化。</p><p>那标准化后的属性值是什么样子的？</p><p><img src=\"https://static001.geekbang.org/resource/image/12/60/1252c6d3c1a51714606daa6bdad3a560.png?wh=1142*346\" alt=\"\"></p><center><span class=\"reference\">标准化属性值</span></center><p>从图中可以看到，2em被解析成了32px，red被解析成了rgb(255,0,0)，bold被解析成了700……</p><h3>3. 计算出DOM树中每个节点的具体样式</h3><p>现在样式的属性已被标准化了，接下来就需要计算DOM树中每个节点的样式属性了，如何计算呢？</p><p><strong>这就涉及到CSS的继承规则和层叠规则了。</strong></p><p>首先是CSS继承。<strong>CSS继承就是每个DOM节点都包含有父节点的样式</strong>。这么说可能有点抽象，我们可以结合具体例子，看下面这样一张样式表是如何应用到DOM节点上的。</p><pre><code>body { font-size: 20px }\np {color:blue;}\nspan  {display: none}\ndiv {font-weight: bold;color:red}\ndiv  p {color:green;}\n</code></pre><p>这张样式表最终应用到DOM节点的效果如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/fe/b4/fe9a0ea868dc02a3c4a59f6080aa80b4.png?wh=1142*876\" alt=\"\"></p><center><span class=\"reference\">计算后DOM的样式</span></center><p>从图中可以看出，所有子节点都继承了父节点样式。比如body节点的font-size属性是20，那body节点下面的所有节点的font-size都等于20。</p><p>为了加深你对CSS继承的理解，你可以打开Chrome的“开发者工具”，选择第一个“element”标签，再选择“style”子标签，你会看到如下界面：</p><p><img src=\"https://static001.geekbang.org/resource/image/88/b2/88a3aac427cc7c09361eac01a85fc7b2.png?wh=1142*1043\" alt=\"\"></p><center><span class=\"reference\">样式的继承过程界面</span></center><p>这个界面展示的信息很丰富，大致可描述为如下。</p><ul>\n<li>首先，可以选择要查看的<strong>元素的样式（位于图中的区域2中）</strong>，在图中的第1个区域中点击对应的元素，就可以在下面的区域查看该元素的样式了。比如这里我们选择的元素是<code>&lt;p&gt;</code>标签，位于html.body.div.这个路径下面。</li>\n<li>其次，可以从<strong>样式来源（位于图中的区域3中）</strong>中查看样式的具体来源信息，看看是来源于样式文件，还是来源于UserAgent样式表。<strong>这里需要特别提下UserAgent样式，它是浏览器提供的一组默认样式，如果你不提供任何样式，默认使用的就是UserAgent样式</strong>。</li>\n<li>最后，可以通过区域2和区域3来查看样式继承的具体过程。</li>\n</ul><p>以上就是CSS继承的一些特性，样式计算过程中，会根据DOM节点的继承关系来合理计算节点样式。</p><p>样式计算过程中的第二个规则是样式层叠。<strong>层叠是CSS的一个基本特征，它是一个定义了如何合并来自多个源的属性值的算法。它在CSS处于核心地位，CSS的全称“层叠样式表”正是强调了这一点</strong>。关于层叠的具体规则这里就不做过多介绍了，网上资料也非常多，你可以自行搜索学习。</p><p>总之，样式计算阶段的目的是为了计算出DOM节点中每个元素的具体样式，在计算过程中需要遵守CSS的继承和层叠两个规则。这个阶段最终输出的内容是每个DOM节点的样式，并被保存在ComputedStyle的结构内。</p><p>如果你想了解每个DOM元素最终的计算样式，可以打开Chrome的“开发者工具”，选择第一个“element”标签，然后再选择“Computed”子标签，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/d8/46/d87415b0187e3860404bf963f1c3d646.png?wh=1142*857\" alt=\"\"></p><center><span class=\"reference\">DOM元素最终计算的样式</span></center><p>上图红色方框中显示了html.body.div.p标签的ComputedStyle的值。你想要查看哪个元素，点击左边对应的标签就可以了。</p><h2>布局阶段</h2><p>现在，我们有DOM树和DOM树中元素的样式，但这还不足以显示页面，因为我们还不知道DOM元素的几何位置信息。<strong>那么接下来就需要计算出DOM树中可见元素的几何位置，我们把这个计算过程叫做布局</strong>。</p><p>Chrome在布局阶段需要完成两个任务：创建布局树和布局计算。</p><h3>1. 创建布局树</h3><p>你可能注意到了DOM树还含有很多不可见的元素，比如head标签，还有使用了display:none属性的元素。所以<strong>在显示之前，我们还要额外地构建一棵只包含可见元素布局树</strong>。</p><p>我们结合下图来看看布局树的构造过程：</p><p><img src=\"https://static001.geekbang.org/resource/image/8e/0e/8e48b77dd48bdc509958e73b9935710e.png?wh=1142*984\" alt=\"\"></p><center><span class=\"reference\">布局树构造过程示意图</span></center><p>从上图可以看出，DOM树中所有不可见的节点都没有包含到布局树中。</p><p>为了构建布局树，浏览器大体上完成了下面这些工作：</p><ul>\n<li>遍历DOM树中的所有可见节点，并把这些节点加到布局树中；</li>\n<li>而不可见的节点会被布局树忽略掉，如head标签下面的全部内容，再比如body.p.span这个元素，因为它的属性包含 dispaly:none，所以这个元素也没有被包进布局树。</li>\n</ul><h3>2. 布局计算</h3><p>现在我们有了一棵完整的布局树。那么接下来，就要计算布局树节点的坐标位置了。布局的计算过程非常复杂，我们这里先跳过不讲，等到后面章节中我再做详细的介绍。</p><p>在执行布局操作的时候，会把布局运算的结果重新写回布局树中，所以布局树既是输入内容也是输出内容，这是布局阶段一个不合理的地方，因为在布局阶段并没有清晰地将输入内容和输出内容区分开来。针对这个问题，Chrome团队正在重构布局代码，下一代布局系统叫LayoutNG，试图更清晰地分离输入和输出，从而让新设计的布局算法更加简单。</p><h2>总结</h2><p>好了，今天正文就到这里，我画了下面这张比较完整的渲染流水线，你可以结合这张图来回顾下今天的内容。</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/9a/a4a0ea4da58260aafc9aabdd37613f9a.png?wh=1142*305\" alt=\"\"></p><center><span class=\"reference\">渲染流水线图</span></center><p>从图中可以看出，本节内容我们介绍了渲染流程的前三个阶段：DOM生成、样式计算和布局。要点可大致总结为如下：</p><ul>\n<li>浏览器不能直接理解HTML数据，所以第一步需要将其转换为浏览器能够理解的DOM树结构；</li>\n<li>生成DOM树后，还需要根据CSS样式表，来计算出DOM树所有节点的样式；</li>\n<li>最后计算DOM元素的布局信息，使其都保存在布局树中。</li>\n</ul><p>到这里我们的每个节点都拥有了自己的样式和布局信息，那么后面几个阶段就要利用这些信息去展示页面了，由于篇幅限制，剩下的这些阶段我会在下一篇文章中介绍。</p><h2>思考时间</h2><p>最后，给你留个思考题：如果下载CSS文件阻塞了，会阻塞DOM树的合成吗？会阻塞页面的显示吗？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p>","comments":[{"had_liked":true,"id":124086,"user_name":"mfist","can_delete":false,"product_type":"c1","uid":1373624,"ip_address":"","ucode":"4F99F422C23FB4","user_header":"https://static001.geekbang.org/account/avatar/00/14/f5/b8/9f165f4b.jpg","comment_is_top":false,"comment_ctime":1565821818,"is_pvip":false,"replies":[{"id":"46463","content":"借这里解答下留的题目：<br><br>当从服务器接收HTML页面的第一批数据时，DOM解析器就开始工作了，在解析过程中，如果遇到了JS脚本，如下所示：<br>&lt;html&gt;<br>    &lt;body&gt;<br>        极客时间<br>        &lt;script&gt;<br>        document.write(&quot;--foo&quot;)<br>        &lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>那么DOM解析器会先执行JavaScript脚本，执行完成之后，再继续往下解析。<br><br>那么第二种情况复杂点了，我们内联的脚本替换成js外部文件，如下所示：<br>&lt;html&gt;<br>    &lt;body&gt;<br>        极客时间<br>        &lt;script type=&quot;text&#47;javascript&quot; src=&quot;foo.js&quot;&gt;&lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>这种情况下，当解析到JavaScript的时候，会先暂停DOM解析，并下载foo.js文件，下载完成之后执行该段JS文件，然后再继续往下解析DOM。这就是JavaScript文件为什么会阻塞DOM渲染。<br><br>我们再看第三种情况，还是看下面代码：<br>&lt;html&gt;<br>    &lt;head&gt;<br>        &lt;style type=&quot;text&#47;css&quot; src = &quot;theme.css&quot; &#47;&gt;<br>    &lt;&#47;head&gt;<br>    &lt;body&gt;<br>        &lt;p&gt;极客时间&lt;&#47;p&gt;<br>        &lt;script&gt;<br>            let e = document.getElementsByTagName(&#39;p&#39;)[0]<br>            e.style.color = &#39;blue&#39;<br>        &lt;&#47;script&gt;<br>    &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>当我在JavaScript中访问了某个元素的样式，那么这时候就需要等待这个样式被下载完成才能继续往下执行，所以在这种情况下，CSS也会阻塞DOM的解析。<br><br><br>所以JS和CSS都有可能会阻塞DOM解析，关于详细信息我们会在后面的章节中详细介绍。<br>","user_name":"作者回复","comment_id":124086,"uid":"1141464","ip_address":"","utype":1,"ctime":1566307458,"user_name_real":"李兵"}],"discussion_count":27,"race_medal":0,"score":"1109667384186","product_id":100033601,"comment_content":"关于下载css文件阻塞的问题，我理解<br>1 不会阻塞dom树的构建，原因Html转化为dom树的过程，发现文件请求会交给网络进程去请求对应文件，渲染进程继续解析Html。<br>2 会阻塞页面的显示，当计算样式的时候需要等待css文件的资源进行层叠样式。资源阻塞了，会进行等待，直到网络超时，network直接报出相应错误，渲染进程继续层叠样式计算<br><br>","like_count":259,"discussions":[{"author":{"id":1687802,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c0/fa/61f78abd.jpg","nickname":"Geek_012295","note":"","ucode":"41721DD2144F77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100509,"discussion_content":"我觉得只能说css会间接通过阻塞js的执行来阻塞dom树的构建，当只有css和html文档时css不会阻塞页面解析","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1577265602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2062010,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/76/ba/2e2c0b0c.jpg","nickname":"瘾君子","note":"","ucode":"F250EC47D7D21B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1687802,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c0/fa/61f78abd.jpg","nickname":"Geek_012295","note":"","ucode":"41721DD2144F77","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354810,"discussion_content":"说的对","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615344551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":100509,"ip_address":""},"score":354810,"extra":""},{"author":{"id":1067707,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4a/bb/f4fe1b40.jpg","nickname":"春天的风剑客","note":"","ucode":"83749ADA48A0FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2062010,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/76/ba/2e2c0b0c.jpg","nickname":"瘾君子","note":"","ucode":"F250EC47D7D21B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405181,"discussion_content":"不对，渲染是一个流水线，css没有下载并解析完成怎么构建渲染树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634525347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":354810,"ip_address":""},"score":405181,"extra":""},{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1067707,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4a/bb/f4fe1b40.jpg","nickname":"春天的风剑客","note":"","ucode":"83749ADA48A0FB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576981,"discussion_content":"这里问的是“是否堵塞Dom树的构建” 不是问是否堵塞布局树的构建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655875072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":405181,"ip_address":""},"score":576981,"extra":""}]},{"author":{"id":1383570,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1c/92/42014f9b.jpg","nickname":"待我长发及腰","note":"","ucode":"7678A2A35FCE75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266400,"discussion_content":"老师的这个观点不大对呀。你的代码还是用js改变了dom的样式，不还是Js阻塞的吗，跟css有啥关系，他的theme.css是交给网络进程去下载的","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1589509312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1177430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/56/b82eeac7.jpg","nickname":"champ可口可乐了","note":"","ucode":"EA75C67E9124C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1383570,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1c/92/42014f9b.jpg","nickname":"待我长发及腰","note":"","ucode":"7678A2A35FCE75","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304310,"discussion_content":"感觉这里是边进行DOM解析，边进行样式计算，在继续解析脚本后面的DOM之前，前面的DOM要执行完样式计算才可以，要不然脚本就访问不了元素的style属性。所以如果css文件加载不出来，前面的样式计算就没法进行，脚本就会阻塞在那里，导致后面的DOM解析也没法进行","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1599543685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":266400,"ip_address":""},"score":304310,"extra":""},{"author":{"id":1750628,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUaOs097vUd4wh5GCqnPkHM6oR2TMIOI0xQEooL2EH6DpzdjsQbyRhsJuD0AyG3QkFcWq5icZlgmA/132","nickname":"rl58xz","note":"","ucode":"3409114D447098","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1383570,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1c/92/42014f9b.jpg","nickname":"待我长发及腰","note":"","ucode":"7678A2A35FCE75","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307767,"discussion_content":"你需要看一下后面，js运行如果有改变css，那么css需要先进行处理，进行处理之前肯定要有css文件，所以就会阻塞dom解析。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600754591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":266400,"ip_address":""},"score":307767,"extra":""},{"author":{"id":2062010,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/76/ba/2e2c0b0c.jpg","nickname":"瘾君子","note":"","ucode":"F250EC47D7D21B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1383570,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1c/92/42014f9b.jpg","nickname":"待我长发及腰","note":"","ucode":"7678A2A35FCE75","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354807,"discussion_content":"第三个案例的意思是:  CSS阻塞了JS,  则CSS间接阻塞了页面渲染","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1615344408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":266400,"ip_address":""},"score":354807,"extra":""}]},{"author":{"id":1138560,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5f/80/51269d88.jpg","nickname":"Hurry","note":"","ucode":"12FEE2A50CC667","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4958,"discussion_content":"是否阻塞页面渲染，这个得分情况，如果是首次渲染，有可能阻塞，但是如果不是最开始引入的 css 文件，就不一定了会阻塞了，另外也可以在标签上设置媒体查询，例如 <link href=&#34;aaa.css&#34; rel=&#34;stylesheet&#34; media=&#34;print&#34;> 这个只在打印机上生效，肯定就不阻塞，另外我有一个疑问，是否可以通过 prefetch 或 preload 调整资源的优先级，是否会对页面渲染造成影响 ？ ","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1565858811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463002,"discussion_content":"借这里解答下留的题目：\n\n当从服务器接收HTML页面的第一批数据时，DOM解析器就开始工作了，在解析过程中，如果遇到了JS脚本，如下所示：\n&amp;lt;html&amp;gt;\n    &amp;lt;body&amp;gt;\n        极客时间\n        &amp;lt;script&amp;gt;\n        document.write(&amp;quot;--foo&amp;quot;)\n        &amp;lt;/script&amp;gt;\n    &amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n那么DOM解析器会先执行JavaScript脚本，执行完成之后，再继续往下解析。\n\n那么第二种情况复杂点了，我们内联的脚本替换成js外部文件，如下所示：\n&amp;lt;html&amp;gt;\n    &amp;lt;body&amp;gt;\n        极客时间\n        &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;foo.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\n    &amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n这种情况下，当解析到JavaScript的时候，会先暂停DOM解析，并下载foo.js文件，下载完成之后执行该段JS文件，然后再继续往下解析DOM。这就是JavaScript文件为什么会阻塞DOM渲染。\n\n我们再看第三种情况，还是看下面代码：\n&amp;lt;html&amp;gt;\n    &amp;lt;head&amp;gt;\n        &amp;lt;style type=&amp;quot;text/css&amp;quot; src = &amp;quot;theme.css&amp;quot; /&amp;gt;\n    &amp;lt;/head&amp;gt;\n    &amp;lt;body&amp;gt;\n        &amp;lt;p&amp;gt;极客时间&amp;lt;/p&amp;gt;\n        &amp;lt;script&amp;gt;\n            let e = document.getElementsByTagName(&amp;#39;p&amp;#39;)[0]\n            e.style.color = &amp;#39;blue&amp;#39;\n        &amp;lt;/script&amp;gt;\n    &amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n当我在JavaScript中访问了某个元素的样式，那么这时候就需要等待这个样式被下载完成才能继续往下执行，所以在这种情况下，CSS也会阻塞DOM的解析。\n\n\n所以JS和CSS都有可能会阻塞DOM解析，关于详细信息我们会在后面的章节中详细介绍。\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1566307458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3070797,"avatar":"","nickname":"Geek_ddd9a6","note":"","ucode":"3DC81DA8B5AF97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":581661,"discussion_content":"&lt;html&gt;\n    &lt;head&gt;\n        &lt;style type=&#34;text/css&#34; src = &#34;theme.css&#34; /&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;p&gt;极客时间&lt;/p&gt;\n        &lt;script&gt;\n            let e = document.getElementsByTagName(&#39;p&#39;)[0]\n            console.log(e)// 如果阻塞了dom的解析，怎么可能打印出来？？\n            e.style.color = &#39;blue&#39;\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\ncss根本不会阻塞dom的解析，dom与样式有关系吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658911096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":463002,"ip_address":""},"score":581661,"extra":""}]},{"author":{"id":1625265,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cc/b1/97549d7d.jpg","nickname":"。。。","note":"","ucode":"12EB7D2BDE7112","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217367,"discussion_content":"我试验发现及时js不访问元素样式也一样会被css阻塞  甚至只写一个script标签都会被前面的css阻塞","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1585550252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1625265,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cc/b1/97549d7d.jpg","nickname":"。。。","note":"","ucode":"12EB7D2BDE7112","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281345,"discussion_content":"怎么试验的，求同学讲一下。我也想测试一下老师的这个观点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591715162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":217367,"ip_address":""},"score":281345,"extra":""},{"author":{"id":1177430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/56/b82eeac7.jpg","nickname":"champ可口可乐了","note":"","ucode":"EA75C67E9124C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1625265,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cc/b1/97549d7d.jpg","nickname":"。。。","note":"","ucode":"12EB7D2BDE7112","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304311,"discussion_content":"应该是的，因为引擎没法判断你是否在脚本里访问了元素的样式，所以只要出现脚本，全部阻塞处理","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599543849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":217367,"ip_address":""},"score":304311,"extra":""},{"author":{"id":1177430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/56/b82eeac7.jpg","nickname":"champ可口可乐了","note":"","ucode":"EA75C67E9124C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304313,"discussion_content":"很容易测试，你只需要在服务器延迟对css文件的返回就可以了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599543901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281345,"ip_address":""},"score":304313,"extra":""}]},{"author":{"id":1133028,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/e4/fb47bfcd.jpg","nickname":"dellyoung","note":"","ucode":"3672FF1D1F8EFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179185,"discussion_content":"如果给script加上async或者defer就可以避免这种情况了把","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1582209846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2062010,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/76/ba/2e2c0b0c.jpg","nickname":"瘾君子","note":"","ucode":"F250EC47D7D21B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133028,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/e4/fb47bfcd.jpg","nickname":"dellyoung","note":"","ucode":"3672FF1D1F8EFD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354809,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615344447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":179185,"ip_address":""},"score":354809,"extra":""},{"author":{"id":1162862,"avatar":"https://static001.geekbang.org/account/avatar/00/11/be/6e/46a5da10.jpg","nickname":"Hong","note":"","ucode":"2E7FB03BFEC8F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133028,"avatar":"https://static001.geekbang.org/account/avatar/00/11/49/e4/fb47bfcd.jpg","nickname":"dellyoung","note":"","ucode":"3672FF1D1F8EFD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368262,"discussion_content":"async和defer都是下载过程并行了，async执行过程还是可能阻塞，是乱序执行的，defer会等到dom都ready了，才执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618634699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":179185,"ip_address":""},"score":368262,"extra":""},{"author":{"id":2166481,"avatar":"","nickname":"Geek_da875e","note":"","ucode":"FFD7263AB1BA1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1162862,"avatar":"https://static001.geekbang.org/account/avatar/00/11/be/6e/46a5da10.jpg","nickname":"Hong","note":"","ucode":"2E7FB03BFEC8F9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379355,"discussion_content":"defer不是在DOMContentLoaded事件前执行么。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623843390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368262,"ip_address":""},"score":379355,"extra":""}]},{"author":{"id":1596478,"avatar":"https://static001.geekbang.org/account/avatar/00/18/5c/3e/8ec901b9.jpg","nickname":"andylzc","note":"","ucode":"80C4B9AC394AF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200170,"discussion_content":"老师是不是弄错了，我的理解是，CSS并不会阻塞DOM的解析，它阻塞的是DOM的渲染","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583663909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1782777,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/33/f9/50b76abe.jpg","nickname":"AMIR","note":"","ucode":"65142D9669071B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83749,"discussion_content":"老师，这里的dom树解析，指的就是构建dom树嘛","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576461329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1750628,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUaOs097vUd4wh5GCqnPkHM6oR2TMIOI0xQEooL2EH6DpzdjsQbyRhsJuD0AyG3QkFcWq5icZlgmA/132","nickname":"rl58xz","note":"","ucode":"3409114D447098","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1782777,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/33/f9/50b76abe.jpg","nickname":"AMIR","note":"","ucode":"65142D9669071B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307768,"discussion_content":"我理解是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600754659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":83749,"ip_address":""},"score":307768,"extra":""}]},{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354499,"discussion_content":"当从服务器接收HTML页面的第一批数据时，DOM解析器就开始工作了。\n\n额这个观点与讲述输入URL到页面展示的过程中有矛盾地方。\n\n网络进程接收到完整请求数据，才告诉浏览器进程，然后渲染进程与网络进程建立通道传输数据。\n\n那么到底是下载完了才渲染还是边下载边渲染。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615297528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1544328,"avatar":"https://static001.geekbang.org/account/avatar/00/17/90/88/cd4bb862.jpg","nickname":"你可以叫我61","note":"","ucode":"BC586029546F8E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375673,"discussion_content":"网络进程在接收到响应头时就会通知浏览器进程，然后浏览器进程收到通知就会告诉渲染进程进行提交文档的准备，这时渲染进程就和网络进程建立通道了，也就是已经开始了提交文档的流程，等文档接收、解析完毕时，渲染进程通知浏览器进程文档提交确认，最后浏览器移除原有界面，更新现在的状态\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1621813980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":354499,"ip_address":""},"score":375673,"extra":""}]}]},{"had_liked":true,"id":124376,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1565871024,"is_pvip":false,"replies":[{"id":"45634","content":"和DOM不一样，在源码里面并没有CSSOM这个词，你说的CSSOM 应该是就是styleSheets，这个styleSheets是能直观感受的到的。<br><br>渲染树也是16年之前的东西了，现在的代码完全重构了，你可以把LayoutTree看成是渲染树，不过和之前的渲染树还是有一些差别的。","user_name":"作者回复","comment_id":124376,"uid":"1141464","ip_address":"","utype":1,"ctime":1565876136,"user_name_real":"李兵"}],"discussion_count":3,"race_medal":0,"score":"358048156592","product_id":100033601,"comment_content":"这节讲的有些过于省略了，好多东西没有深入去讲。我记得是DOM树和CSSOM树并行构建合成渲染树。从这个角度来说，不会阻塞DOM树的构建，但是会阻塞页面显示，因为页面显示需要完整的渲染树去完成布局计算。","like_count":83,"discussions":[{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223534,"discussion_content":"老师都说了：值得注意的是，在执行 Parse HTML 的时候，如果遇到 JavaScript 脚本，那么会暂停当前的 HTML 解析而去执行 JavaScript 脚本。当我在JavaScript中访问了某个元素的样式，那么这时候就需要等待这个样式被下载完成才能继续往下执行，所以在这种情况下，CSS也会阻塞DOM的解析。","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1586233807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463144,"discussion_content":"和DOM不一样，在源码里面并没有CSSOM这个词，你说的CSSOM 应该是就是styleSheets，这个styleSheets是能直观感受的到的。\n\n渲染树也是16年之前的东西了，现在的代码完全重构了，你可以把LayoutTree看成是渲染树，不过和之前的渲染树还是有一些差别的。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1565876136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1025440,"avatar":"","nickname":"普若木特","note":"","ucode":"4A6322B0AC93E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":590183,"discussion_content":"老师在后面的课程里面又经常用CSSOM这种说法😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665574692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":463144,"ip_address":"上海"},"score":590183,"extra":""}]}]},{"had_liked":false,"id":126001,"user_name":"海骅薯条","can_delete":false,"product_type":"c1","uid":1080760,"ip_address":"","ucode":"B40DB6D38FC08E","user_header":"https://static001.geekbang.org/account/avatar/00/10/7d/b8/62ed38de.jpg","comment_is_top":false,"comment_ctime":1566291373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"139005244845","product_id":100033601,"comment_content":"下载CSS文件阻塞了，原则上会阻塞页面的显示，但是浏览器可以有自己的容错机制，例如下载超时后，均采用user-agent stylesheet 默认样式进行渲染就可以啦，虽然丑点，但是内容在HTML都显示出来啦","like_count":32},{"had_liked":false,"id":221171,"user_name":"刘大夫","can_delete":false,"product_type":"c1","uid":1707726,"ip_address":"","ucode":"B03DCF41E50ADF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/0e/ce/1e02a513.jpg","comment_is_top":false,"comment_ctime":1590420507,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"134734406683","product_id":100033601,"comment_content":"这节讲的真好，什么 CSSOM、渲染树不是不讲，而是真的过时了，现在就是分层、光栅化和合成","like_count":31,"discussions":[{"author":{"id":1339706,"avatar":"https://static001.geekbang.org/account/avatar/00/14/71/3a/30aaf3c7.jpg","nickname":"LHC","note":"","ucode":"A80FABB09FF53E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357246,"discussion_content":"跟webgl渲染类似了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615771276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":124325,"user_name":"Bean","can_delete":false,"product_type":"c1","uid":1557853,"ip_address":"","ucode":"DC1A0C8B6BF083","user_header":"https://static001.geekbang.org/account/avatar/00/17/c5/5d/9e75eb36.jpg","comment_is_top":false,"comment_ctime":1565861085,"is_pvip":false,"replies":[{"id":"45623","content":"这个链接有一些参考资料你可以参考下：https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;116572","user_name":"作者回复","comment_id":124325,"uid":"1141464","ip_address":"","utype":1,"ctime":1565871957,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"83170239709","product_id":100033601,"comment_content":"老师，渲染进程的工作原理您是从哪知道的，看浏览器的源码吗？ 有链接吗来一个","like_count":19,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463117,"discussion_content":"这个链接有一些参考资料你可以参考下：https://time.geekbang.org/column/article/116572","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565871957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":true,"id":124074,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1565804013,"is_pvip":true,"replies":[{"id":"45556","content":"分开来，结构会更加清晰，目前布局操作都是在主线程执行执行的，如果将布局的输入结构和输出结构分开来，那么可以在另外一个线程上执行布局操作，解析完把结果提交给主线程，这样会减轻主线程的压力。<br><br>所将输入结构和输出结构分开，后续就可以更好地重构渲染模块的代码了！<br><br>这也是Chrome渲染团队目前在做的一件事。","user_name":"作者回复","comment_id":124074,"uid":"1141464","ip_address":"","utype":1,"ctime":1565831951,"user_name_real":"李兵"}],"discussion_count":7,"race_medal":2,"score":"70285280749","product_id":100033601,"comment_content":"请问老师，为什么没有清晰地将输入内容和输出内容区分开来不好，我们平时编码过程中，应该尽量做到将输入内容和输出内容区分开来吗？","like_count":16,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462996,"discussion_content":"分开来，结构会更加清晰，目前布局操作都是在主线程执行执行的，如果将布局的输入结构和输出结构分开来，那么可以在另外一个线程上执行布局操作，解析完把结果提交给主线程，这样会减轻主线程的压力。\n\n所将输入结构和输出结构分开，后续就可以更好地重构渲染模块的代码了！\n\n这也是Chrome渲染团队目前在做的一件事。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565831951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110470,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f1/c6/6f39a982.jpg","nickname":"Yuhui","note":"","ucode":"811933B016179F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324554,"discussion_content":"能明确一下这里说的到底是主线程还是主进程吗？谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605125437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1167366,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d0/06/eef9d730.jpg","nickname":"lacaja","note":"","ucode":"09B480B29D32E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1110470,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f1/c6/6f39a982.jpg","nickname":"Yuhui","note":"","ucode":"811933B016179F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387852,"discussion_content":"主线程。你说的主进程是指浏览器主进程吧，这里说的主线程是渲染进程中的主线程，和浏览器主进程属于不同模块下的。自己画下图就明白了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628473547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":324554,"ip_address":""},"score":387852,"extra":""}]},{"author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5199,"discussion_content":"应该类似双缓冲，等alternate tree完成后，再取代现有tree","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566042263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1015542,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/f6/abb7bfe3.jpg","nickname":"永远蔡","note":"","ucode":"ABE9FA50A3C28D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19862,"discussion_content":"Fiber ？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569232106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5199,"ip_address":""},"score":19862,"extra":""},{"author":{"id":1568263,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ee/07/465058c7.jpg","nickname":"Even.Yu","note":"","ucode":"D55F190AC6E4FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391501,"discussion_content":"看来React学到家了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630486277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5199,"ip_address":""},"score":391501,"extra":""},{"author":{"id":1098566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/46/308c3958.jpg","nickname":"不蒸馒头","note":"","ucode":"EB26EC2B9CFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1568263,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ee/07/465058c7.jpg","nickname":"Even.Yu","note":"","ucode":"D55F190AC6E4FB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541878,"discussion_content":"哈哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640589803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391501,"ip_address":""},"score":541878,"extra":""}]}]},{"had_liked":false,"id":124420,"user_name":"袋袋","can_delete":false,"product_type":"c1","uid":1551852,"ip_address":"","ucode":"C1F5AE7699B28A","user_header":"https://static001.geekbang.org/account/avatar/00/17/ad/ec/776c9f72.jpg","comment_is_top":false,"comment_ctime":1565880833,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"31630651905","product_id":100033601,"comment_content":"不阻塞dom合成，也不阻塞页面渲染，页面还是会生成，只不过没有样式而已，别忘了标签是有语义化的","like_count":7,"discussions":[{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200118,"discussion_content":"google 文档中对此有描述 https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-blocking-css","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583658816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200111,"discussion_content":"会阻塞页面渲染，比如你可以尝试在页面中加载一个很大的css文件，你会发现等css文件加载完了后页面才会显示。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583658352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1138706,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/12/268826e6.jpg","nickname":"Marvin","note":"","ucode":"D955A98C48CBEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1039904,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/de/20/03130a39.jpg","nickname":"沧海一声笑","note":"","ucode":"5297F2F4736B63","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301423,"discussion_content":"说明老师的这部分解释已经过时了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598521479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":200111,"ip_address":""},"score":301423,"extra":""}]}]},{"had_liked":false,"id":125830,"user_name":"Aaaaaaaaaaayou","can_delete":false,"product_type":"c1","uid":1073601,"ip_address":"","ucode":"67BA315B87587D","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","comment_is_top":false,"comment_ctime":1566263429,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"27336067205","product_id":100033601,"comment_content":"css继承中应该不是所有的属性都会继承吧","like_count":6,"discussions":[{"author":{"id":1735027,"avatar":"","nickname":"刘员外","note":"","ucode":"BC3AA6B2D6B860","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45319,"discussion_content":"不是所有的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573022283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1367464,"avatar":"https://static001.geekbang.org/account/avatar/00/14/dd/a8/a2c910b6.jpg","nickname":"katalya","note":"","ucode":"CCD1FE6C4F8C1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586983,"discussion_content":"文字类的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662638356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/46/308c3958.jpg","nickname":"不蒸馒头","note":"","ucode":"EB26EC2B9CFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541877,"discussion_content":"display就不会继承","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640589599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1601298,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6f/12/817b4349.jpg","nickname":"张富强","note":"","ucode":"051A0A4791F226","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362061,"discussion_content":"你看看position,width,height这些就不会继承","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616837538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124585,"user_name":"man-moonth","can_delete":false,"product_type":"c1","uid":1383156,"ip_address":"","ucode":"145EED9CFA19E4","user_header":"https://static001.geekbang.org/account/avatar/00/15/1a/f4/a40453e7.jpg","comment_is_top":false,"comment_ctime":1565924753,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"27335728529","product_id":100033601,"comment_content":"我打开chrome面板的performance，记录了页面的加载过程。想请教一个问题。<br>首先确认一下几个概念：<br>1. recalculatestyle过程是指生成computedStyle过程吗？<br>2. DOMContentLoaded事件标识浏览器已经完全加载了 HTML，DOM 树已经构建完毕。<br>我发现在DOMContentLoaded之前，生成computedStyle和构建DOM的过程是并行的。我之前的想法是，计算DOM节点的样式（computedStyle）的前置条件是构建DOM、CSS生成StyleSheets并完成属性值标准化，这样才能保证DOM节点样式的计算有条不紊。我的问题是：浏览器是如何并行处理构建DOM、生成computedStyle的流程的？","like_count":6},{"had_liked":false,"id":128759,"user_name":"悬炫","can_delete":false,"product_type":"c1","uid":1159974,"ip_address":"","ucode":"28BA6B2169256B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/26/cc28a05a.jpg","comment_is_top":false,"comment_ctime":1566958056,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23041794536","product_id":100033601,"comment_content":"<br>DOM树的构建和样式计算都是在渲染进程的主线程上执行的，他们可以并行执行吗？如果可以的话，那他们是如何来实现并行的呢？是通过异步回调还是说用的是类似于Generator函数的协程呢？在css会阻塞dom树的构建的情况下，主线程是如何去暂停DOM树的构建，后期又是如何恢复DOM树的构建的呢？希望老师解答一下","like_count":5,"discussions":[{"author":{"id":1383570,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1c/92/42014f9b.jpg","nickname":"待我长发及腰","note":"","ucode":"7678A2A35FCE75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266393,"discussion_content":"他为啥会并行，肯定是先进行DOM树的构建，才有的样式计算啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589508514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1568263,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ee/07/465058c7.jpg","nickname":"Even.Yu","note":"","ucode":"D55F190AC6E4FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1383570,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1c/92/42014f9b.jpg","nickname":"待我长发及腰","note":"","ucode":"7678A2A35FCE75","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391503,"discussion_content":"你这个说法不应该是串行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630486749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":266393,"ip_address":""},"score":391503,"extra":""}]}]},{"had_liked":false,"id":124237,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565839865,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18745709049","product_id":100033601,"comment_content":"如果下载 CSS 文件阻塞了，会阻塞 DOM 树的合成吗？会阻塞页面的显示吗？<br>不会阻塞DOM 树的合成，但会阻塞页面的显示。<br>DOM 树和CSSOM树是并行生成的，两个都完成后才进行布局树的生成，但如果期间有JS文件，那就需要等待JS文件加载并执行完成，JS也需要等待CSSOM树生成，因为JS可能操作DOM树和CSSOM树。","like_count":4},{"had_liked":false,"id":124075,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1565804240,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"18745673424","product_id":100033601,"comment_content":"思考题。不会，CSS阻塞了，DOM树照样能正常解析和渲染。猜测浏览器机制，会优先渲染DOM到页面上。平时网络不好时遇到过。","like_count":4},{"had_liked":false,"id":299433,"user_name":"Neil","can_delete":false,"product_type":"c1","uid":1780539,"ip_address":"","ucode":"24D788649501B4","user_header":"https://static001.geekbang.org/account/avatar/00/1b/2b/3b/10825655.jpg","comment_is_top":false,"comment_ctime":1624625262,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14509527150","product_id":100033601,"comment_content":"布局树构造过程示意图误导性太强了。计算样式阶段并不会生成&quot;ComputedStyle&quot;树，而是遍历styleSheets里的规则和DOM树，计算出每个DOM节点样式，放在每个DOM节点的ComputedStyle属性里。<br>参考：<br>https:&#47;&#47;www.youtube.com&#47;watch?v=m-J-tbAlFic<br>https:&#47;&#47;www.youtube.com&#47;watch?v=PwYxv-43iM4&amp;list=PL9ioqAuyl6ULtk9hyUKX__VH1EBE5r4me&amp;index=1<br>","like_count":2,"discussions":[{"author":{"id":3070797,"avatar":"","nickname":"Geek_ddd9a6","note":"","ucode":"3DC81DA8B5AF97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581660,"discussion_content":"确实很多误导，边看边查证，新手不要轻信","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1658910604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/46/308c3958.jpg","nickname":"不蒸馒头","note":"","ucode":"EB26EC2B9CFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541864,"discussion_content":"好烦，都不知道哪里是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640587430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288710,"user_name":"Hong","can_delete":false,"product_type":"c1","uid":1162862,"ip_address":"","ucode":"2E7FB03BFEC8F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/be/6e/46a5da10.jpg","comment_is_top":false,"comment_ctime":1618634967,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14503536855","product_id":100033601,"comment_content":"提个建议哈，老师讲到专有名词的时候，如果能把对应的英文名标注一下就更好了，比如提到的渲染树LayoutTree，否则可能容易造成困扰；上面内容如果再能详细深入一些就更好了。<br><br>觉得前端开发如何按上面的内容来回答，面试官可能不会很满意，最后还是推荐一片经典详文<br>https:&#47;&#47;www.html5rocks.com&#47;zh&#47;tutorials&#47;internals&#47;howbrowserswork&#47;","like_count":3,"discussions":[{"author":{"id":1448709,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1b/05/66d9d23c.jpg","nickname":"moozee","note":"","ucode":"AEC76107485C81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387041,"discussion_content":"同学，你发的这个链接太老的，2011年的，感觉参考价值不大，很多东西都变了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1627958445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201199,"user_name":"abson","can_delete":false,"product_type":"c1","uid":1517591,"ip_address":"","ucode":"ED6E65CB4221AE","user_header":"https://static001.geekbang.org/account/avatar/00/17/28/17/2ee45db9.jpg","comment_is_top":false,"comment_ctime":1585732248,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14470634136","product_id":100033601,"comment_content":"老师你好，我特意试了一下在HTML文件分别写了link、style和内联样式的形式引入css代码，然后在谷歌浏览器控制台上输出styleSheets的时候发现styleSheetList数组就只有两个，分别是link和style，内联样式是没有的。您本文说styleSheet会把三种css引入方式都显示出来这里是否是有别的依据支持呢？","like_count":3,"discussions":[{"author":{"id":1098566,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/46/308c3958.jpg","nickname":"不蒸馒头","note":"","ucode":"EB26EC2B9CFC6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541876,"discussion_content":"mdn上说了：&#34;styleSheets是DocumentOrShadowRoot接口定义的只读属性, 它会返回一个StyleSheetList/CssStyleSheet对象，这个对象对应的是通过引入或者嵌入文档中的样式表&#34; 并没有说包含内联的样式\nhttps://developer.mozilla.org/zh-CN/docs/Web/API/Document/stylesheets#%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640589564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2543090,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cd/f2/76a87691.jpg","nickname":"雪阿","note":"","ucode":"3805AB441BFCF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378583,"discussion_content":"我试了下确实是没有，你有查到怎么处理内联样式的嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623294139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127480,"user_name":"why.","can_delete":false,"product_type":"c1","uid":1235099,"ip_address":"","ucode":"C9E9B10F2BC0EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/9b/f9a00567.jpg","comment_is_top":false,"comment_ctime":1566727083,"is_pvip":false,"replies":[{"id":"47229","content":"是的，理解的没问题","user_name":"作者回复","comment_id":127480,"uid":"1141464","ip_address":"","utype":1,"ctime":1566746882,"user_name_real":"李兵"}],"discussion_count":1,"race_medal":0,"score":"14451628971","product_id":100033601,"comment_content":"dom 树解析在前，合成在后，既然解析阶段都阻塞了，合成那就更不用说了啊，阻塞，可以这样理解吗?","like_count":3,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464515,"discussion_content":"是的，理解的没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566746882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303649,"user_name":"基础平台部-学习账号","can_delete":false,"product_type":"c1","uid":2700310,"ip_address":"","ucode":"98E4401AC1383B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoLuYlxY5PGFMQqICGqPibvIic6O0RM56GtjbFwccMyDoUQHGI4LwLhVtFazmnHqCfTP2KHUHSckiazg/132","comment_is_top":false,"comment_ctime":1626916092,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10216850684","product_id":100033601,"comment_content":"document.styleSheets接口只会返回引入和嵌入文档的样式表吧，不会返回内联样式，mdn有说明：https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;API&#47;Document&#47;stylesheets","like_count":2},{"had_liked":false,"id":177338,"user_name":"tomision","can_delete":false,"product_type":"c1","uid":1821835,"ip_address":"","ucode":"92A251597DADB0","user_header":"https://static001.geekbang.org/account/avatar/00/1b/cc/8b/0060a75c.jpg","comment_is_top":false,"comment_ctime":1581349364,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10171283956","product_id":100033601,"comment_content":"老师，有个问题：<br><br>前端优化中总是告诉我们将 &lt;script&gt; 标签放在 &lt;&#47;body&gt; 的前面，即页面的最底部；<br><br>除了放在顶部执行的时候可能获取不到想要的 dom 元素之外，放在底部其实也会阻塞 DOM 解析？<br><br>所以 DOM 解析是一点点渲染出来的还是一次性渲染出来的？如果是等待全部解析完成，再提交进入后续的流程，那其实 &lt;script&gt; 标签放在页面底部的价值呢？","like_count":2,"discussions":[{"author":{"id":2048167,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJicY6aibicUnB4FYI5iak5wItcIbdf8O6IHWvts0b4USaagZ7ia7yg2G0Jdln9f0OJpiaGBY7yRLeYLWWQ/132","nickname":"Geek_f23c02","note":"","ucode":"2D3AE24A8F5DAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414217,"discussion_content":"放在底部不会阻塞dom解析吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636693976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1384326,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1f/86/3a7eeac4.jpg","nickname":"leslee","note":"","ucode":"DB1CBF9F8D16BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":223638,"discussion_content":"虽然放在底部也阻塞解析,但是你前面的DOM元素已经解析完成了不是么， 已经可以进行各种操作了。这样理解应该没错吧。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586242197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124108,"user_name":"ytd","can_delete":false,"product_type":"c1","uid":1038790,"ip_address":"","ucode":"C6AEA2D19E447A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d9/c6/8be8664d.jpg","comment_is_top":false,"comment_ctime":1565827091,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10155761683","product_id":100033601,"comment_content":"1，不会阻塞dom树生成，因为dom树只要把html下载下来后就可以生成了<br>2，会阻塞页面显示，浏览器需要等待下载样式表文件合成样式表，进行后面的样式计算。<br>但是实际观察chrome浏览器加载页面，即便某个样式文件因为网络错误不能下载，页面最终也会显示，是不是样式计算和后续的布局是一个反复的过程？即，先用浏览器默认样式和style标签内样式、内联样式合成并布局显示页面，等下载好外部样式表再次合成并布局。不知道这样理解对不对？另外，如果用户通过操作修改了样式，是不是合成和布局也需要重新进行？","like_count":2,"discussions":[{"author":{"id":1568263,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ee/07/465058c7.jpg","nickname":"Even.Yu","note":"","ucode":"D55F190AC6E4FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391504,"discussion_content":"应该是，所谓重排 重绘 的说法就应该是这么来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630486900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344378,"user_name":"Geek_4c5172","can_delete":false,"product_type":"c1","uid":2989668,"ip_address":"","ucode":"D28A068DF8F926","user_header":"","comment_is_top":false,"comment_ctime":1651500329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5946467625","product_id":100033601,"comment_content":"Chrome 版本：Version 103.0.5034.0 (Official Build) canary (arm64)。<br><br>通过一系列的试验，得出一些规律：<br><br>1. html解析渲染顺序是，对dom树进行深度遍历，依次解析渲染；例如：html -&gt; head -&gt; link(head) -&gt; script(head) -&gt; body -&gt; ...<br><br>2. 当html渲染遇到css或js时，会阻塞html渲染；当css或js下载、解析、执行完毕之后，html将继续渲染。<br><br>3. js的下载和执行会阻塞css的解析。<br>","like_count":2},{"had_liked":false,"id":279277,"user_name":"Geek_d95d52","can_delete":false,"product_type":"c1","uid":2409480,"ip_address":"","ucode":"6089A0A9F9255B","user_header":"","comment_is_top":false,"comment_ctime":1613704274,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5908671570","product_id":100033601,"comment_content":"domtree 的 构建  和 css rule的生成 是 串行 还是并行","like_count":1,"discussions":[{"author":{"id":2527788,"avatar":"https://static001.geekbang.org/account/avatar/00/26/92/2c/7975bdd9.jpg","nickname":"砌下落花起，犹罔顾春寒。","note":"","ucode":"B43A986E957220","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539151,"discussion_content":"我也想问一下这个问题，如果是并行，那么按理说应该要由两个线程来完成啊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1639623135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268468,"user_name":"余熙","can_delete":false,"product_type":"c1","uid":1240802,"ip_address":"","ucode":"7F98DCFB899CB7","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/e2/23e44221.jpg","comment_is_top":false,"comment_ctime":1608208773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5903176069","product_id":100033601,"comment_content":"请问老师的插图是用什么软件画的呢？<br>每张图风格都不一样，老师的插图好丰富生动，对帮助理解提升好大。","like_count":1},{"had_liked":false,"id":164909,"user_name":"Geek_012295","can_delete":false,"product_type":"c1","uid":1687802,"ip_address":"","ucode":"41721DD2144F77","user_header":"https://static001.geekbang.org/account/avatar/00/19/c0/fa/61f78abd.jpg","comment_is_top":false,"comment_ctime":1577109905,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5872077201","product_id":100033601,"comment_content":"老师您用的是什么作图软件，可以告知一下吗？","like_count":1,"discussions":[{"author":{"id":1163321,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c0/39/16340f72.jpg","nickname":"zlxag","note":"","ucode":"136FB0201B64A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313855,"discussion_content":"我也问过，老师说是ppt","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603099535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126483,"user_name":"sheeeeep","can_delete":false,"product_type":"c1","uid":1340246,"ip_address":"","ucode":"218AA77BAA73C8","user_header":"https://static001.geekbang.org/account/avatar/00/14/73/56/9cfb1e43.jpg","comment_is_top":false,"comment_ctime":1566393006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861360302","product_id":100033601,"comment_content":"自己总结一下老师对课后问题的回答：JS的执行会阻塞解析DOM，执行过程中，如果读取元素了的样式，则需要先下载完成CSS，则同样会导致DOM解析的阻塞","like_count":1},{"had_liked":false,"id":358282,"user_name":"Geek_1efec9","can_delete":false,"product_type":"c1","uid":2371632,"ip_address":"广东","ucode":"66B0EDC98B5B27","user_header":"","comment_is_top":false,"comment_ctime":1664166175,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664166175","product_id":100033601,"comment_content":"老师说的问题， 我认为是没有错误的。结合渲染进程来说，其只有一个主线程。那在渲染进程开始解析HTML数据的时候，只能一行一行执行，如果遇到CSS或者JS，就会停下DOM的解析，去下载或者执行CSS或者JS，接着继续对DOM的解析，然后输出DOM。","like_count":0},{"had_liked":false,"id":354488,"user_name":"xinCrazy","can_delete":false,"product_type":"c1","uid":1314571,"ip_address":"北京","ucode":"C6ADA5BE993219","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJDVEPYH20ibMFeHjU9WVicAW1gzia2axxibOW2ibxic333ODcTx52ia9DfcRyUcUwAAmGTXBfCriaT9ONygg/132","comment_is_top":false,"comment_ctime":1660460314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660460314","product_id":100033601,"comment_content":"加点chromium源码就好了","like_count":0},{"had_liked":false,"id":349048,"user_name":"ladidili","can_delete":false,"product_type":"c1","uid":1217498,"ip_address":"","ucode":"38886C1908DE6B","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/da/0e47c76e.jpg","comment_is_top":false,"comment_ctime":1655692003,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655692003","product_id":100033601,"comment_content":"只说了<br>输入是什么<br>输出是什么<br>没有说具体如何处理","like_count":0},{"had_liked":false,"id":335381,"user_name":"Hhpon","can_delete":false,"product_type":"c1","uid":1020726,"ip_address":"","ucode":"12FE37D4B67631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/36/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1645497714,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1645497714","product_id":100033601,"comment_content":"请问如果JS会阻塞DOM的解析，我们为什么还要把JS写在文档的最后呢？写在前面还是后面不都是会影响解析吗，只是先影响和后影响的区别。<br>如果CSS一般情况下不会影响DOM的解析，我们为什么要把CSS写在Head里面呢？","like_count":0,"discussions":[{"author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555750,"discussion_content":"又把课文看了一下，我猜第一个问题的答案是，css 样式的应用是和 html 解析并行的。也就是 dom 树构建了多少，那么这部分节点的 css 就会应用上去，不是等整个 dom 树构建完毕才应用 css。这样的话，把 script 放在最后，虽然对 html 解析完成的时间影响不大，但可以让 css 应用尽早完成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647057337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555747,"discussion_content":"第2个问题，css 的下载是和 html 的解析并行的。所以把 css link 写在前面，可以尽早下载。\n第 1 个问题，不清楚，同求解答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647056638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334272,"user_name":"Hhpon","can_delete":false,"product_type":"c1","uid":1020726,"ip_address":"","ucode":"12FE37D4B67631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/36/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1644841464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644841464","product_id":100033601,"comment_content":"您好，请问js是在哪个阶段执行的呢？","like_count":0},{"had_liked":false,"id":326503,"user_name":"砌下落花起，犹罔顾春寒。","can_delete":false,"product_type":"c1","uid":2527788,"ip_address":"","ucode":"B43A986E957220","user_header":"https://static001.geekbang.org/account/avatar/00/26/92/2c/7975bdd9.jpg","comment_is_top":false,"comment_ctime":1639543917,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639543917","product_id":100033601,"comment_content":"dom树和cssom树是同时构建的吗","like_count":0},{"had_liked":false,"id":319079,"user_name":"沙","can_delete":false,"product_type":"c1","uid":1377412,"ip_address":"","ucode":"131A5114452DE5","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/84/cb0a009b.jpg","comment_is_top":false,"comment_ctime":1635568466,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1635568466","product_id":100033601,"comment_content":"下载css阻塞了不过影响dom树的解析，但是会影响页面的渲染","like_count":0},{"had_liked":false,"id":318396,"user_name":"lilithinker","can_delete":false,"product_type":"c1","uid":1026159,"ip_address":"","ucode":"CE0682BFA1FB01","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/6f/00bdc332.jpg","comment_is_top":false,"comment_ctime":1635291504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635291504","product_id":100033601,"comment_content":"资源加载完了才提交文档吗？","like_count":0},{"had_liked":false,"id":306079,"user_name":"Geek_panda","can_delete":false,"product_type":"c1","uid":1622868,"ip_address":"","ucode":"ED245B851B841A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yxWUVmiccGZdE0lVATCpdUQDh7ubI7BGXRxiadfog14S3TjRR2dcqMLOR87jf2EA3taEFw4FdNMSDhRanKhMB2Kw/132","comment_is_top":false,"comment_ctime":1628330736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628330736","product_id":100033601,"comment_content":"cssom是一颗树，和老师说的和document.styleSheets对应的观点不匹配","like_count":0},{"had_liked":false,"id":305765,"user_name":"湾湾","can_delete":false,"product_type":"c1","uid":2044959,"ip_address":"","ucode":"0016964BD39366","user_header":"https://static001.geekbang.org/account/avatar/00/1f/34/1f/dc1a1312.jpg","comment_is_top":false,"comment_ctime":1628152551,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628152551","product_id":100033601,"comment_content":"请问老师，css下载会阻碍dom渲染，为什么有时候还会看到没有样式的页面，后面又有了样式","like_count":0},{"had_liked":false,"id":301061,"user_name":"你好，阳光","can_delete":false,"product_type":"c1","uid":2145095,"ip_address":"","ucode":"1A2F487C57F7D9","user_header":"https://static001.geekbang.org/account/avatar/00/20/bb/47/b60ae3eb.jpg","comment_is_top":false,"comment_ctime":1625499320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625499320","product_id":100033601,"comment_content":"下载css文件本身不会阻塞dom树的合成，但是会阻塞js代码的执行（js需要获取完整的样式信息），而js代码会阻塞dom树的合成，所以当存在js代码时，下载css文件也会阻塞dom树的合成。","like_count":0},{"had_liked":false,"id":298565,"user_name":"溪涧","can_delete":false,"product_type":"c1","uid":2514580,"ip_address":"","ucode":"CDC8437B3C9E69","user_header":"https://static001.geekbang.org/account/avatar/00/26/5e/94/86812d4c.jpg","comment_is_top":false,"comment_ctime":1624198707,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1624198707","product_id":100033601,"comment_content":"如果是通过css设置visibility或者opacity属性的话，会在布局树中生成该节点嘛？","like_count":0,"discussions":[{"author":{"id":1807194,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/C6fI3RLRvzrOq9mqQwhOzencvIdeKHOqOYJ1xfe5PamialwdYAKXR7FribaFrRkQsys9JDrsahuJLeP7np2d5gfA/132","nickname":"Geek_fecd39","note":"","ucode":"9C8D8B24AB6862","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394602,"discussion_content":"会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631953202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295155,"user_name":"JK","can_delete":false,"product_type":"c1","uid":2541968,"ip_address":"","ucode":"DE557E26C38719","user_header":"https://static001.geekbang.org/account/avatar/00/26/c9/90/14c0cc4c.jpg","comment_is_top":false,"comment_ctime":1622275089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622275089","product_id":100033601,"comment_content":"并不是所有的CSS样式都会继承吧。比如width 、height、等这里有没有一个区分。","like_count":0},{"had_liked":false,"id":293317,"user_name":"废废","can_delete":false,"product_type":"c1","uid":1888182,"ip_address":"","ucode":"F2BDDE5A62E95B","user_header":"","comment_is_top":false,"comment_ctime":1621333438,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1621333438","product_id":100033601,"comment_content":"样式计算的第二点属性值标准化，看Chrome的开发者工具的Elments模块，em单位并没有转换为px，Chrome浏览器是不是原本就能识别em单位","like_count":0,"discussions":[{"author":{"id":2989668,"avatar":"","nickname":"Geek_4c5172","note":"","ucode":"D28A068DF8F926","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569554,"discussion_content":"不论Chrome如何处理em，页面某个标签渲染在屏幕上，就需要显示像素点，就需要栅格化为像素单位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651477900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290011,"user_name":"小屯","can_delete":false,"product_type":"c1","uid":2588851,"ip_address":"","ucode":"DAB4EB12A0FC3D","user_header":"https://static001.geekbang.org/account/avatar/00/27/80/b3/01c25078.jpg","comment_is_top":false,"comment_ctime":1619320683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619320683","product_id":100033601,"comment_content":"css文件阻塞，不会影响dom树的合成，但是会影响页面的渲染","like_count":0},{"had_liked":false,"id":283794,"user_name":"王玄","can_delete":false,"product_type":"c1","uid":1394410,"ip_address":"","ucode":"E54ABB340D1E49","user_header":"https://static001.geekbang.org/account/avatar/00/15/46/ea/b86667b8.jpg","comment_is_top":false,"comment_ctime":1615939975,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1615939975","product_id":100033601,"comment_content":"老师我想问一下 是不是构建完dom 就已经完成了DomContentLoad","like_count":0,"discussions":[{"author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555751,"discussion_content":"dom 树构建完毕， defer js 执行完毕，然后 fire DomContentLoad 事件。但此时，可能有 async js 未完成执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647057830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1162862,"avatar":"https://static001.geekbang.org/account/avatar/00/11/be/6e/46a5da10.jpg","nickname":"Hong","note":"","ucode":"2E7FB03BFEC8F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368264,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618635039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258824,"user_name":"陈志强","can_delete":false,"product_type":"c1","uid":1989037,"ip_address":"","ucode":"1AD8B376B79412","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWcQoeJoksEibTQzNEmg5ZflNjzZZ4DDfGE5b2ChEQWkmHFUicv2Q06q4WpAIpcS7blFZRZonKOskQ/132","comment_is_top":false,"comment_ctime":1604563732,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604563732","product_id":100033601,"comment_content":"因为dom树的合成跟cssom的合成是可以单独进行的，所以对于css文件阻塞来说，应该是不会阻塞dom树的合成，对于页面的显示应该是会阻塞的，因为需要通过dom树加上cssom树去构建可见树，如果css阻塞的话，页面显示就会晚，但不排除浏览器会对其优化，比如默认代理样式","like_count":0},{"had_liked":false,"id":258286,"user_name":"Geek_802152","can_delete":false,"product_type":"c1","uid":2283204,"ip_address":"","ucode":"FDED4C56D28E2D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/O2E7oAtDV7OJk4EY95nFlj6G6Q3j9YT9MWjQm7BgsqiawUKGRfXOR1bia50kpa1sznCeko6b27e6aAkyEyia5W49Q/132","comment_is_top":false,"comment_ctime":1604369568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604369568","product_id":100033601,"comment_content":"不会阻塞DOM书的合成和页面的渲染，只是显示的页面没有样式。","like_count":0},{"had_liked":false,"id":257534,"user_name":"123bb49","can_delete":false,"product_type":"c1","uid":2203968,"ip_address":"","ucode":"88F2C057E491EA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/9Z6zUvIW61ySFZBx8LMnfTXrB1Hc7SkGxiaia8B06Oza0UjlvRhzCpwHXA2Gia4MPOg8mPiaHYsYMRKE3E4Htnibpng/132","comment_is_top":false,"comment_ctime":1604022357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604022357","product_id":100033601,"comment_content":"老师你好，布局计算后，再到布局树里面那些不可见元素也设置到布局树了吗？","like_count":0},{"had_liked":false,"id":253294,"user_name":"J6","can_delete":false,"product_type":"c1","uid":2093945,"ip_address":"","ucode":"3F097CE1FFCA05","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f3/79/a2bedc1e.jpg","comment_is_top":false,"comment_ctime":1602675963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602675963","product_id":100033601,"comment_content":"开篇狗头：这页面，不写也罢✔","like_count":0},{"had_liked":false,"id":232475,"user_name":"redbuck","can_delete":false,"product_type":"c1","uid":1887486,"ip_address":"","ucode":"656A9CC823CEC9","user_header":"https://static001.geekbang.org/account/avatar/00/1c/cc/fe/55c33139.jpg","comment_is_top":false,"comment_ctime":1594014609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594014609","product_id":100033601,"comment_content":"visibility: hidden的元素不可见,但它应该也会参与到布局树中吧","like_count":0},{"had_liked":false,"id":226576,"user_name":"赛飞","can_delete":false,"product_type":"c1","uid":1372006,"ip_address":"","ucode":"189B7A3231B06C","user_header":"https://static001.geekbang.org/account/avatar/00/14/ef/66/dc3f4555.jpg","comment_is_top":false,"comment_ctime":1592144304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592144304","product_id":100033601,"comment_content":"DOM树跟CSSOM树的同时构建的吗？","like_count":0},{"had_liked":false,"id":224660,"user_name":"james","can_delete":false,"product_type":"c1","uid":1232771,"ip_address":"","ucode":"AC42035106E5B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/yyibGRYCArsUNBfCAEAibua09Yb9D5AdO8TkCmXymhAepibqmlz0hzg06ggBLxyvXicnjqFVGr7zYF0rQoZ0aXCBAg/132","comment_is_top":false,"comment_ctime":1591499646,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1591499646","product_id":100033601,"comment_content":"关于下载css文件阻塞的问题，我理解<br>1 不会阻塞dom树的构建，原因Html转化为dom树的过程，发现文件请求会交给网络进程去请求对应文件，渲染进程继续解析Html。<br>2 会阻塞页面的显示，当计算样式的时候需要等待css文件的资源进行层叠样式。资源阻塞了，会进行等待，直到网络超时，network直接报出相应错误，渲染进程继续层叠样式计算","like_count":0},{"had_liked":false,"id":207979,"user_name":"我母鸡啊！","can_delete":false,"product_type":"c1","uid":1633705,"ip_address":"","ucode":"7BFB14BC99E978","user_header":"https://static001.geekbang.org/account/avatar/00/18/ed/a9/662318ab.jpg","comment_is_top":false,"comment_ctime":1587225388,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587225388","product_id":100033601,"comment_content":"不会阻塞dom树合成，会阻塞页面显示","like_count":0},{"had_liked":false,"id":204594,"user_name":"HoSalt","can_delete":false,"product_type":"c1","uid":1156074,"ip_address":"","ucode":"610B03E2A002D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/ea/53333dd5.jpg","comment_is_top":false,"comment_ctime":1586426014,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586426014","product_id":100033601,"comment_content":"「和DOM不一样，在源码里面并没有CSSOM这个词，你说的CSSOM 应该是就是styleSheets，这个styleSheets是能直观感受的到的」<br>之前一直看到的是要生成 CSSOM ，请问CSSOM（styleSheets）的生成和DOM相关吗，是基于DOM构建的吗，经常看到两者的结构非常类似？","like_count":0},{"had_liked":false,"id":200851,"user_name":"Roy","can_delete":false,"product_type":"c1","uid":1930723,"ip_address":"","ucode":"909B8B605C317A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/75/e3/ef489d57.jpg","comment_is_top":false,"comment_ctime":1585661257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585661257","product_id":100033601,"comment_content":"很详细，以前开发浏览器一直很模糊这些内容，经过这么讲解，了解很多。","like_count":0},{"had_liked":false,"id":158741,"user_name":"匡晨辉","can_delete":false,"product_type":"c1","uid":1763707,"ip_address":"","ucode":"BF88FE410C20F4","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e9/7b/b844f3a4.jpg","comment_is_top":false,"comment_ctime":1575445189,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575445189","product_id":100033601,"comment_content":"老师，如果一个页面有很多个外联css文件，是需要把所有的css文件全部下载完毕后才能生成computeStyle 还是是个持续过程，下载一个css就更新computeStyle？如果是前者的话，也就是说css加载完毕前，页面是空白的，但实际流量网页有这种现象：开始显示的没有样式的页面，过了一段时间就好了，这就矛盾了；但如果是后者的话，那咱们生成computestyle的过程中可能有更新的操作，从老师您的课程中并没有体现，具体机制到底是怎么样的，老师能不能帮忙解答一下？","like_count":0},{"had_liked":false,"id":157777,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1575257967,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1575257967","product_id":100033601,"comment_content":"渲染进程有几个线程，执行到js代码时主线程是到了V8引擎那了吗？并且V8引擎有时还会等CSS代码下载完才会继续解析下面的js代码？","like_count":0},{"had_liked":false,"id":142002,"user_name":"王二柱","can_delete":false,"product_type":"c1","uid":1240051,"ip_address":"","ucode":"13E69122213172","user_header":"https://static001.geekbang.org/account/avatar/00/12/eb/f3/8853f960.jpg","comment_is_top":false,"comment_ctime":1571277845,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571277845","product_id":100033601,"comment_content":"请问“DOM 是保存在内存中树状结构，可以通过 JavaScript 来查询或修改其内容”，既然DOM树已经保存在内存中并且可以通过JS查询，为什么有的框架还需要建立一个虚拟DOM树呢，岂不是占用了更多的内存","like_count":0,"discussions":[{"author":{"id":1731375,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6b/2f/11fcbacb.jpg","nickname":"东东","note":"","ucode":"9FE7336B580AB2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323745,"discussion_content":"你应该听说过频繁操作真实的DOM特别影响性能吧，虚拟DOM是真实DOM的一层抽象，抽象出来之后大量操作的是js，最后挂载到真实的DOM节点上，牺牲一点内存从而减少大量DOM操作","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1604990276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137246,"user_name":"why.","can_delete":false,"product_type":"c1","uid":1235099,"ip_address":"","ucode":"C9E9B10F2BC0EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/9b/f9a00567.jpg","comment_is_top":false,"comment_ctime":1569666522,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569666522","product_id":100033601,"comment_content":"&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;en&quot;&gt;<br>  &lt;head&gt;<br>    &lt;title&gt;css阻塞&lt;&#47;title&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;<br>    &lt;style&gt;<br>      h1 {<br>        color: red !important<br>      }<br>    &lt;&#47;style&gt;<br>    &lt;script&gt;<br>      function h () {<br>        <br>        console.log(document.querySelectorAll(&#39;h1&#39;))<br>      }<br>      h()<br>    &lt;&#47;script&gt;<br>    &lt;link href=&quot;https:&#47;&#47;github.githubassets.com&#47;assets&#47;site-d20aa35917cf810095fab7458ea2a8e4.css&quot; rel=&quot;stylesheet&quot;&gt;<br>  &lt;&#47;head&gt;<br>  &lt;body&gt;<br>    &lt;h1&gt;这是红色的&lt;&#47;h1&gt;<br>    &lt;script&gt;<br>      console.log(&#39;hello world&#39;)<br>    &lt;&#47;script&gt;<br>  &lt;&#47;body&gt;<br>&lt;&#47;html&gt;<br>未等css样式加载完成，上述log 已经打印出了h1结点 (那可以理解成css不会阻塞dom解析吧)；body 里面添加js脚本，是需要等待css样式加载完成之后才能执行","like_count":0,"discussions":[{"author":{"id":1015542,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/f6/abb7bfe3.jpg","nickname":"永远蔡","note":"","ucode":"ABE9FA50A3C28D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111069,"discussion_content":"测试了一下，确实在 css 下载完之后，h1 节点才显示出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577777802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131351,"user_name":"杨学茂","can_delete":false,"product_type":"c1","uid":1377459,"ip_address":"","ucode":"C12DAA295CC945","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/b3/3f0b69f9.jpg","comment_is_top":false,"comment_ctime":1567729094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567729094","product_id":100033601,"comment_content":"解析css的时机是什么？如果将style和link标签放在最后，我们会先看到一版默认样式，这种情况下css阻塞合成与渲染了吗？","like_count":0},{"had_liked":false,"id":131225,"user_name":"Kyeon","can_delete":false,"product_type":"c1","uid":1611794,"ip_address":"","ucode":"2F1B07584597E0","user_header":"https://static001.geekbang.org/account/avatar/00/18/98/12/60a9a434.jpg","comment_is_top":false,"comment_ctime":1567674726,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567674726","product_id":100033601,"comment_content":"老师好，当渲染进程接收到html文档之后，它先顺序解析这篇文档。假设这篇文档的head标签中外联了css文件，那么DOM解析器暂停DOM解析，等待网络进程下载css文件之后浏览器进程提交给渲染进程该css文件，收到文件后继续DOM解析，开始解析css文件。那么，请问解析这个css文件的流程是不是就是文章中的三步：1. 转换css结构 2. 标准化属性值 3. 计算DOM节点样式 ？如果流程是这样的的话，是不是说渲染阶段中包含的这些子阶段其实并不是一级一级顺序执行的？ 谢谢","like_count":0},{"had_liked":false,"id":131100,"user_name":"空山鸟语","can_delete":false,"product_type":"c1","uid":1375838,"ip_address":"","ucode":"BA9993D7A4DC80","user_header":"https://static001.geekbang.org/account/avatar/00/14/fe/5e/9b723d19.jpg","comment_is_top":false,"comment_ctime":1567644138,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1567644138","product_id":100033601,"comment_content":"css选择器优先级怎么评定？<br>每个选择器是有一个固定的值吗？<br>比如<br> #idname  {}<br>.classname.active {}<br>这两个选择器匹配到同一个dom的时候，二者的优先级哪个高？","like_count":0,"discussions":[{"author":{"id":2989668,"avatar":"","nickname":"Geek_4c5172","note":"","ucode":"D28A068DF8F926","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569544,"discussion_content":"自己写个HTML，试一下，不就知道了么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651476007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1705160,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/04/c8/319bf7ce.jpg","nickname":"null","note":"","ucode":"32670E61DF9AA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37983,"discussion_content":"内联样式权重1000，id选择器权重100，类选择器权重10，标签选择器权重1，比较优先级时将权重加起来，谁大谁优先级就高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571708747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1147347,"avatar":"https://static001.geekbang.org/account/avatar/00/11/81/d3/f0a88806.jpg","nickname":"🍐 🍾 🔆","note":"","ucode":"1B7C90800AD4D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1705160,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/04/c8/319bf7ce.jpg","nickname":"null","note":"","ucode":"32670E61DF9AA9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":59621,"discussion_content":"不是单纯的加法 11个id 也不会超过一个内联","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574691657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37983,"ip_address":""},"score":59621,"extra":""}]},{"author":{"id":1623081,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyw5ZhWPjGbnRHDMialWvv2ick17cXA4F0PT8VrMwlNI7e4LBqRIFvwdOGibRzibx2ohwJpYlj26iczibg/132","nickname":"Geek_43c33c","note":"","ucode":"A43A6E6A27022B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30456,"discussion_content":"id选择器优先级比class类选择器优先级高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570838603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130673,"user_name":"Cris","can_delete":false,"product_type":"c1","uid":1473520,"ip_address":"","ucode":"F8A287134F1078","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","comment_is_top":false,"comment_ctime":1567506013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567506013","product_id":100033601,"comment_content":"js css阻塞dom解析是不是会表现为页面白屏？","like_count":0},{"had_liked":false,"id":130671,"user_name":"Cris","can_delete":false,"product_type":"c1","uid":1473520,"ip_address":"","ucode":"F8A287134F1078","user_header":"https://static001.geekbang.org/account/avatar/00/16/7b/f0/269139d5.jpg","comment_is_top":false,"comment_ctime":1567505568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567505568","product_id":100033601,"comment_content":"不可见节点，除了html节点以及其子节点，display none 的节点，还有其他情况吗？","like_count":0},{"had_liked":false,"id":129522,"user_name":"铿然","can_delete":false,"product_type":"c1","uid":1162461,"ip_address":"","ucode":"D529242EC2E2EA","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/dd/c9413f59.jpg","comment_is_top":false,"comment_ctime":1567148013,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567148013","product_id":100033601,"comment_content":"补充之前angular性能影响的其他信息：  主要是 编译后的 main.js 的执行时间长。<br><br>Evaluate Script<br>Total Time<br>18.55 s<br>Self Time<br>16.21 s<br>Script<br>main.js:1<br><br>这方面有什么优化思路么？  这个时间太长了。<br><br>注：本地开发模式，  生产环境没有这么慢。","like_count":0},{"had_liked":false,"id":129481,"user_name":"铿然","can_delete":false,"product_type":"c1","uid":1162461,"ip_address":"","ucode":"D529242EC2E2EA","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/dd/c9413f59.jpg","comment_is_top":false,"comment_ctime":1567136232,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567136232","product_id":100033601,"comment_content":"老师，请教个页面性能问题的排查思路。<br><br>前端angular单页应用，部分组件没有使用懒加载，这样的话首次加载页面可能很多。每次打开页面都非常慢，信息如下：<br><br>1. 跟踪过后台服务，时间很短，排除后台服务原因<br>2. chrom的network中有一段时间4~22秒没有任何调用（没有绿色的横线）<br>3. chrom的performance跟踪性能，中间4~22秒是一个黄色块，然后下面的详情中Parse HTML这个蓝色快很长，Parse HTML下的Evaluate Script黄色块很长。<br><br>其他参考信息：<br>webpackJsonpCallback<br>Total Time<br>16.80 s<br>Self Time<br>0<br>Function<br>webpackJsonpCallback @ bootstrap:2<br><br>checkDeferredModules<br>Total Time<br>16.80 s<br>Self Time<br>0<br>Function<br>checkDeferredModules @ bootstrap:32<br><br>综合来看我猜测是页面渲染时间太长， 而4~22秒这个时间也太长了，什么样的界面需要这么长时间。<br><br>想知道接下来该如何利用chrom的performance或者其他工具分析和解决这个性能问题？  这个分析的思路是啥？ 也就是怎么知道要改什么地方？","like_count":0},{"had_liked":false,"id":128746,"user_name":"布衣小酱","can_delete":false,"product_type":"c1","uid":1427453,"ip_address":"","ucode":"46D4676C39E951","user_header":"https://static001.geekbang.org/account/avatar/00/15/c7/fd/b6dec088.jpg","comment_is_top":false,"comment_ctime":1566956359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566956359","product_id":100033601,"comment_content":"布局阶段才创建的布局树，它怎么会作为布局阶段的输入内容呢？","like_count":0},{"had_liked":false,"id":125896,"user_name":"小兵","can_delete":false,"product_type":"c1","uid":1261674,"ip_address":"","ucode":"AA3BA727C25179","user_header":"https://static001.geekbang.org/account/avatar/00/13/40/6a/ab1cf396.jpg","comment_is_top":false,"comment_ctime":1566269337,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566269337","product_id":100033601,"comment_content":"html文件中link的js和css文件是在在一次请求全部返回，还是要首先返回html文件，解析之后再向服务器发送请求？","like_count":0},{"had_liked":false,"id":125882,"user_name":"哎姆哦剋","can_delete":false,"product_type":"c1","uid":1553505,"ip_address":"","ucode":"D2532A348F07E5","user_header":"https://static001.geekbang.org/account/avatar/00/17/b4/61/1db459e5.jpg","comment_is_top":false,"comment_ctime":1566267890,"is_pvip":false,"replies":[{"id":"46796","content":"已经回复了，看下评论","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1566427408,"ip_address":"","comment_id":125882,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566267890","product_id":100033601,"comment_content":"答案到底是什么，老师给个标准答案啊！","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463732,"discussion_content":"已经回复了，看下评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566427408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125562,"user_name":"董懂","can_delete":false,"product_type":"c1","uid":1545789,"ip_address":"","ucode":"EDF4CAB275A69B","user_header":"https://static001.geekbang.org/account/avatar/00/17/96/3d/99c58108.jpg","comment_is_top":false,"comment_ctime":1566204305,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566204305","product_id":100033601,"comment_content":"不会，因为就算CSS没有被加载，还有user agent 的样式。dom 树还是会构建，HTML 文档会渲染出来，只是样式就不是我们期待的样式而已。","like_count":0,"discussions":[{"author":{"id":2989668,"avatar":"","nickname":"Geek_4c5172","note":"","ucode":"D28A068DF8F926","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569543,"discussion_content":"会有“预扫描”机制，扫描html&gt;head中是否有css。如果有css，则HTML渲染会等待这些css文件的解析；否则直接采用user agent样式，进行HTML渲染。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651475904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125559,"user_name":"李懂","can_delete":false,"product_type":"c1","uid":1330436,"ip_address":"","ucode":"539E6639042C88","user_header":"https://static001.geekbang.org/account/avatar/00/14/4d/04/5e0d3713.jpg","comment_is_top":false,"comment_ctime":1566203987,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566203987","product_id":100033601,"comment_content":"css和dom树是分开的，所以不会阻塞dom解析，合成需要css所以会阻塞，要不然，需要重复合成，影响效率！","like_count":0},{"had_liked":false,"id":124582,"user_name":"深蓝","can_delete":false,"product_type":"c1","uid":1035807,"ip_address":"","ucode":"85C7094E3A5289","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/1f/220c6d83.jpg","comment_is_top":false,"comment_ctime":1565924519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565924519","product_id":100033601,"comment_content":"下载 CSS 文件阻塞，不会阻塞dom树生成，会影响布局树吧","like_count":0},{"had_liked":false,"id":124501,"user_name":"Zend","can_delete":false,"product_type":"c1","uid":1053921,"ip_address":"","ucode":"80EBB0B6772E27","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/e1/ee5705a2.jpg","comment_is_top":false,"comment_ctime":1565913372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565913372","product_id":100033601,"comment_content":"层叠样式不是很清楚","like_count":0},{"had_liked":false,"id":124489,"user_name":"柒月","can_delete":false,"product_type":"c1","uid":1371240,"ip_address":"","ucode":"839A8F88C376A3","user_header":"https://static001.geekbang.org/account/avatar/00/14/ec/68/06d59613.jpg","comment_is_top":false,"comment_ctime":1565911972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565911972","product_id":100033601,"comment_content":"不会的。就是平时打开网页时页面样式乱的情况。","like_count":0},{"had_liked":false,"id":124317,"user_name":"潮汐","can_delete":false,"product_type":"c1","uid":1042208,"ip_address":"","ucode":"F5E4F6DF9CEA9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/20/70a95f94.jpg","comment_is_top":false,"comment_ctime":1565859381,"is_pvip":false,"replies":[{"id":"45635","content":"我尽量在留言区回答问题吧，在正式文章里面回答问题会暂用比较多的时间。<br><br>另外CSS和JS下载都是异步的，也就是在解析DOM的过程中下载的。<br><br>这块内容我会在后面的页面模块做详细介绍。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565876229,"ip_address":"","comment_id":124317,"utype":1}],"discussion_count":1,"race_medal":4,"score":"1565859381","product_id":100033601,"comment_content":"对留言顶部第一条基本赞成。<br>但有个疑问：css文件的下载是在网络进程中进行，成功或失败，都是在通知准备渲染进程时已经确定了的吧，还是说渲染过程中会并行下载文件。如果是前者，应该没有阻碍的问题，最多延迟进入准备渲染阶段，也相当于阻塞了页面加载；如果是后者，猜测会阻碍布局树的生成。<br>提个建议：如果上一节课的问题有标准的对与错答案，下节课开头，老师能不能给一个解答或提及。","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463114,"discussion_content":"我尽量在留言区回答问题吧，在正式文章里面回答问题会暂用比较多的时间。\n\n另外CSS和JS下载都是异步的，也就是在解析DOM的过程中下载的。\n\n这块内容我会在后面的页面模块做详细介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565876229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124071,"user_name":"XWL","can_delete":false,"product_type":"c1","uid":1597186,"ip_address":"","ucode":"5D3988791C60AF","user_header":"https://static001.geekbang.org/account/avatar/00/18/5f/02/f8a80843.jpg","comment_is_top":false,"comment_ctime":1565803620,"is_pvip":false,"replies":[{"id":"45552","content":"重绘和重排这些概念会在06节介绍，要等渲染流水线介绍完。","user_name":"作者回复","user_name_real":"李兵","uid":"1141464","ctime":1565830819,"ip_address":"","comment_id":124071,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565803620","product_id":100033601,"comment_content":"应该不会阻塞，link加载CSS样式本身是异步进行的，所以并不会影响浏览器继续解析之后的DOM的标签，最后由CSS树和DOM树合成render树，然后由render树渲染成页面，所以CSS的下载不阻塞DOM树，但阻塞着最后页面的渲染。<br>这是我的理解，有错误请指出。。。<br>另外，老师为什么不讲讲回流和重绘","like_count":0,"discussions":[{"author":{"id":1141464,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6a/d8/228449c9.jpg","nickname":"李兵","note":"","ucode":"3F3D3F6E20209E","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462994,"discussion_content":"重绘和重排这些概念会在06节介绍，要等渲染流水线介绍完。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565830819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124067,"user_name":"gallifrey","can_delete":false,"product_type":"c1","uid":1366631,"ip_address":"","ucode":"A4E5E0E7E2DEF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/da/67/73a0c754.jpg","comment_is_top":false,"comment_ctime":1565801621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565801621","product_id":100033601,"comment_content":"DOM合成不受影响，但是肯定会阻塞页面的显示","like_count":0}]}