{"id":99318,"title":"02 | 一篇文章带你快速搞定Kafka术语","content":"<p>你好，我是胡夕。今天我们正式开启Apache Kafka学习之旅。</p><p>在Kafka的世界中有很多概念和术语是需要你提前理解并熟练掌握的，这对于后面你深入学习Kafka各种功能和特性将大有裨益。下面我来盘点一下Kafka的各种术语。</p><p>在专栏的第一期我说过Kafka属于分布式的消息引擎系统，它的主要功能是提供一套完备的消息发布与订阅解决方案。在Kafka中，发布订阅的对象是主题（Topic），你可以为每个业务、每个应用甚至是每类数据都创建专属的主题。</p><p>向主题发布消息的客户端应用程序称为生产者（Producer），生产者程序通常持续不断地向一个或多个主题发送消息，而订阅这些主题消息的客户端应用程序就被称为消费者（Consumer）。和生产者类似，消费者也能够同时订阅多个主题的消息。我们把生产者和消费者统称为客户端（Clients）。你可以同时运行多个生产者和消费者实例，这些实例会不断地向Kafka集群中的多个主题生产和消费消息。</p><p>有客户端自然也就有服务器端。Kafka的服务器端由被称为Broker的服务进程构成，即一个Kafka集群由多个Broker组成，Broker负责接收和处理客户端发送过来的请求，以及对消息进行持久化。虽然多个Broker进程能够运行在同一台机器上，但更常见的做法是将不同的Broker分散运行在不同的机器上，这样如果集群中某一台机器宕机，即使在它上面运行的所有Broker进程都挂掉了，其他机器上的Broker也依然能够对外提供服务。这其实就是Kafka提供高可用的手段之一。</p><!-- [[[read_end]]] --><p>实现高可用的另一个手段就是备份机制（Replication）。备份的思想很简单，就是把相同的数据拷贝到多台机器上，而这些相同的数据拷贝在Kafka中被称为副本（Replica）。好吧，其实在整个分布式系统里好像都叫这个名字。副本的数量是可以配置的，这些副本保存着相同的数据，但却有不同的角色和作用。Kafka定义了两类副本：领导者副本（Leader Replica）和追随者副本（Follower Replica）。前者对外提供服务，这里的对外指的是与客户端程序进行交互；而后者只是被动地追随领导者副本而已，不能与外界进行交互。当然了，你可能知道在很多其他系统中追随者副本是可以对外提供服务的，比如MySQL的从库是可以处理读操作的，但是在Kafka中追随者副本不会对外提供服务。对了，一个有意思的事情是现在已经不提倡使用Master-Slave来指代这种主从关系了，毕竟Slave有奴隶的意思，在美国这种严禁种族歧视的国度，这种表述有点政治不正确了，所以目前大部分的系统都改成Leader-Follower了。</p><p>副本的工作机制也很简单：生产者总是向领导者副本写消息；而消费者总是从领导者副本读消息。至于追随者副本，它只做一件事：向领导者副本发送请求，请求领导者把最新生产的消息发给它，这样它能保持与领导者的同步。</p><p>虽然有了副本机制可以保证数据的持久化或消息不丢失，但没有解决伸缩性的问题。伸缩性即所谓的Scalability，是分布式系统中非常重要且必须要谨慎对待的问题。什么是伸缩性呢？我们拿副本来说，虽然现在有了领导者副本和追随者副本，但倘若领导者副本积累了太多的数据以至于单台Broker机器都无法容纳了，此时应该怎么办呢？一个很自然的想法就是，能否把数据分割成多份保存在不同的Broker上？如果你就是这么想的，那么恭喜你，Kafka就是这么设计的。</p><p>这种机制就是所谓的分区（Partitioning）。如果你了解其他分布式系统，你可能听说过分片、分区域等提法，比如MongoDB和Elasticsearch中的Sharding、HBase中的Region，其实它们都是相同的原理，只是Partitioning是最标准的名称。</p><p>Kafka中的分区机制指的是将每个主题划分成多个分区（Partition），每个分区是一组有序的消息日志。生产者生产的每条消息只会被发送到一个分区中，也就是说如果向一个双分区的主题发送一条消息，这条消息要么在分区0中，要么在分区1中。如你所见，Kafka的分区编号是从0开始的，如果Topic有100个分区，那么它们的分区号就是从0到99。</p><p>讲到这里，你可能有这样的疑问：刚才提到的副本如何与这里的分区联系在一起呢？实际上，副本是在分区这个层级定义的。每个分区下可以配置若干个副本，其中只能有1个领导者副本和N-1个追随者副本。生产者向分区写入消息，每条消息在分区中的位置信息由一个叫位移（Offset）的数据来表征。分区位移总是从0开始，假设一个生产者向一个空分区写入了10条消息，那么这10条消息的位移依次是0、1、2、......、9。</p><p>至此我们能够完整地串联起Kafka的三层消息架构：</p><ul>\n<li>第一层是主题层，每个主题可以配置M个分区，而每个分区又可以配置N个副本。</li>\n<li>第二层是分区层，每个分区的N个副本中只能有一个充当领导者角色，对外提供服务；其他N-1个副本是追随者副本，只是提供数据冗余之用。</li>\n<li>第三层是消息层，分区中包含若干条消息，每条消息的位移从0开始，依次递增。</li>\n<li>最后，客户端程序只能与分区的领导者副本进行交互。</li>\n</ul><p>讲完了消息层次，我们来说说Kafka Broker是如何持久化数据的。总的来说，Kafka使用消息日志（Log）来保存数据，一个日志就是磁盘上一个只能追加写（Append-only）消息的物理文件。因为只能追加写入，故避免了缓慢的随机I/O操作，改为性能较好的顺序I/O写操作，这也是实现Kafka高吞吐量特性的一个重要手段。不过如果你不停地向一个日志写入消息，最终也会耗尽所有的磁盘空间，因此Kafka必然要定期地删除消息以回收磁盘。怎么删除呢？简单来说就是通过日志段（Log Segment）机制。在Kafka底层，一个日志又进一步细分成多个日志段，消息被追加写到当前最新的日志段中，当写满了一个日志段后，Kafka会自动切分出一个新的日志段，并将老的日志段封存起来。Kafka在后台还有定时任务会定期地检查老的日志段是否能够被删除，从而实现回收磁盘空间的目的。</p><p>这里再重点说说消费者。在专栏的第一期中我提到过两种消息模型，即点对点模型（Peer to Peer，P2P）和发布订阅模型。这里面的点对点指的是同一条消息只能被下游的一个消费者消费，其他消费者则不能染指。在Kafka中实现这种P2P模型的方法就是引入了消费者组（Consumer Group）。所谓的消费者组，指的是多个消费者实例共同组成一个组来消费一组主题。这组主题中的每个分区都只会被组内的一个消费者实例消费，其他消费者实例不能消费它。为什么要引入消费者组呢？主要是为了提升消费者端的吞吐量。多个消费者实例同时消费，加速整个消费端的吞吐量（TPS）。我会在专栏的后面详细介绍消费者组机制，所以现在你只需要了解消费者组是做什么的即可。另外这里的消费者实例可以是运行消费者应用的进程，也可以是一个线程，它们都称为一个消费者实例（Consumer Instance）。</p><p>消费者组里面的所有消费者实例不仅“瓜分”订阅主题的数据，而且更酷的是它们还能彼此协助。假设组内某个实例挂掉了，Kafka能够自动检测到，然后把这个Failed实例之前负责的分区转移给其他活着的消费者。这个过程就是Kafka中大名鼎鼎的“重平衡”（Rebalance）。嗯，其实既是大名鼎鼎，也是臭名昭著，因为由重平衡引发的消费者问题比比皆是。事实上，目前很多重平衡的Bug社区都无力解决。</p><p>每个消费者在消费消息的过程中必然需要有个字段记录它当前消费到了分区的哪个位置上，这个字段就是消费者位移（Consumer Offset）。注意，这和上面所说的位移完全不是一个概念。上面的“位移”表征的是分区内的消息位置，它是不变的，即一旦消息被成功写入到一个分区上，它的位移值就是固定的了。而消费者位移则不同，它可能是随时变化的，毕竟它是消费者消费进度的指示器嘛。另外每个消费者有着自己的消费者位移，因此一定要区分这两类位移的区别。我个人把消息在分区中的位移称为分区位移，而把消费者端的位移称为消费者位移。</p><h2>小结</h2><p>我来总结一下今天提到的所有名词术语：</p><ul>\n<li>消息：Record。Kafka是消息引擎嘛，这里的消息就是指Kafka处理的主要对象。</li>\n<li>主题：Topic。主题是承载消息的逻辑容器，在实际使用中多用来区分具体的业务。</li>\n<li>分区：Partition。一个有序不变的消息序列。每个主题下可以有多个分区。</li>\n<li>消息位移：Offset。表示分区中每条消息的位置信息，是一个单调递增且不变的值。</li>\n<li>副本：Replica。Kafka中同一条消息能够被拷贝到多个地方以提供数据冗余，这些地方就是所谓的副本。副本还分为领导者副本和追随者副本，各自有不同的角色划分。副本是在分区层级下的，即每个分区可配置多个副本实现高可用。</li>\n<li>生产者：Producer。向主题发布新消息的应用程序。</li>\n<li>消费者：Consumer。从主题订阅新消息的应用程序。</li>\n<li>消费者位移：Consumer Offset。表征消费者消费进度，每个消费者都有自己的消费者位移。</li>\n<li>消费者组：Consumer Group。多个消费者实例共同组成的一个组，同时消费多个分区以实现高吞吐。</li>\n<li>重平衡：Rebalance。消费者组内某个消费者实例挂掉后，其他消费者实例自动重新分配订阅主题分区的过程。Rebalance是Kafka消费者端实现高可用的重要手段。</li>\n</ul><p>最后我用一张图来展示上面提到的这些概念，希望这张图能够帮助你形象化地理解所有这些概念：</p><p><img src=\"https://static001.geekbang.org/resource/image/58/91/58c35d3ab0921bf0476e3ba14069d291.jpg?wh=3752*2035\" alt=\"\"></p><h2>开放讨论</h2><p>请思考一下为什么Kafka不像MySQL那样允许追随者副本对外提供读服务？</p><p>欢迎写下你的思考和答案，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p>","neighbors":{"left":{"article_title":"01 |  消息引擎系统ABC","id":98948},"right":{"article_title":"03 | Kafka只是消息引擎系统吗？","id":99797}},"comments":[{"had_liked":false,"id":102440,"user_name":"胡夕","can_delete":false,"product_type":"c1","uid":1288090,"ip_address":"","ucode":"5709A689B6683B","user_header":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","comment_is_top":true,"comment_ctime":1560221532,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"9.2233726440054006e+18","product_id":100029201,"comment_content":"结尾处增加了一张图，提炼了02中讲到的Kafka概念和术语，希望能够帮助到你：）","like_count":142,"discussions":[{"author":{"id":1024486,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","nickname":"旭东(Frank)","note":"","ucode":"176FA629800062","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35330,"discussion_content":"图的位置可以提前点，感觉等个图好着急，都有自己画的冲动。原来这也是一个促使自学主动性的方法。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571271529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1024486,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","nickname":"旭东(Frank)","note":"","ucode":"176FA629800062","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46290,"discussion_content":"跟我一张，本来要画图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573138683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":35330,"ip_address":""},"score":46290,"extra":""}]},{"author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292165,"discussion_content":"图里分区个数是3， 消费者组大小是4，会不会不严谨 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595124568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1625530,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","nickname":"YueShi","note":"","ucode":"8F7AFAE4641A7D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292805,"discussion_content":"我理解的是这个消费者组只消费一个Topic，不知道理解的对不","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595337580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292165,"ip_address":""},"score":292805,"extra":""},{"author":{"id":1257422,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ce/c72d4c67.jpg","nickname":"movesan","note":"","ucode":"29CDF0F2B604C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1625530,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","nickname":"YueShi","note":"","ucode":"8F7AFAE4641A7D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":295821,"discussion_content":"消费者需要消费同一个Topic 下不同分区的消息，所以一个消费者正常是消费对应的一个分区","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596356843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292805,"ip_address":""},"score":295821,"extra":""}]},{"author":{"id":1358294,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b9/d6/76f4f49a.jpg","nickname":"临渊羡鱼","note":"","ucode":"89E71DE332A8E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74896,"discussion_content":"哈哈哈我也是在边看边画图","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575702734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101320,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1559781505,"is_pvip":false,"discussion_count":14,"race_medal":0,"score":"1126841213057","product_id":100029201,"comment_content":"看了不少留言，大有裨益，算是总结。不从follower读几个原因：1，kafka的分区已经让读是从多个broker读从而负载均衡，不是MySQL的主从，压力都在主上；2，kafka保存的数据和数据库的性质有实质的区别就是数据具有消费的概念，是流数据，kafka是消息队列，所以消费需要位移，而数据库是实体数据不存在这个概念，如果从kafka的follower读，消费端offset控制更复杂；3，生产者来说，kafka可以通过配置来控制是否等待follower对消息确认的，如果从上面读，也需要所有的follower都确认了才可以回复生产者，造成性能下降，如果follower出问题了也不好处理","like_count":263,"discussions":[{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285928,"discussion_content":"我觉得最后一条对我有启发，follower是主动请求leader同步数据的，这种情况要保证数据的完整性，势必要跟同步策略中的 ack=-1的情况一样，要等同步完成，才能提供服务。想象一下海量数据的情况下，leader下面有n个follower，如果都同步完成，那会有多慢。而且这种慢是双向的，生产者等消息发送成功，消费者等消息同步成功。这样“削峰填谷”就不存在了。\n而且，follower提供服务完全没必要，因为一个分区只能被一个消费者消费。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1592990689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123870,"avatar":"https://static001.geekbang.org/account/avatar/00/11/26/1e/adc166df.jpg","nickname":"无眠","note":"","ucode":"FBFA936A884EAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357629,"discussion_content":"总结的挺好，但第3点说的不准确，因为无论follower是否与leader的消息完全同步，当follower提供读服务时，如果follower挂了则必然需要转移消费者的offset，这样增加了复杂度且收益也不大。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1615823787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1091917,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a9/4d/2891caf7.jpg","nickname":"Sunshine","note":"","ucode":"76EB724B15E530","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342713,"discussion_content":"第3点，疑问：生产者写入消息到某个partition，等待follower replica确认，合理范围，为啥如果从上面读（即消费）需要所有follower replica确认？为啥要回复生产者？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610788528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1231549,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","nickname":"吃饭饭","note":"","ucode":"95CFA07CDA2957","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291898,"discussion_content":"总结的真好👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594990557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1282641,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/51/0505254d.jpg","nickname":"Fighter","note":"","ucode":"B1925EE400372D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282367,"discussion_content":"还有leader重新选举 也是个点 总之就是要是从副本读 可能复杂度更高了 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591954191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1173129,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e6/89/d8aec012.jpg","nickname":"Liang","note":"","ucode":"E1A816EE5CE7DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":255477,"discussion_content":"总结的很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588404404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061786,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/9a/a323b2f1.jpg","nickname":"悠悠小竹子","note":"","ucode":"A5E6731D28EBF9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187734,"discussion_content":"消费端offset控制更复杂。复杂在哪里？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582766335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1173129,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e6/89/d8aec012.jpg","nickname":"Liang","note":"","ucode":"E1A816EE5CE7DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1061786,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/9a/a323b2f1.jpg","nickname":"悠悠小竹子","note":"","ucode":"A5E6731D28EBF9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":255472,"discussion_content":"这个应该是跟一致性算法有关了，如果follower Replica来控制offset，那么就违背来一致性算法中只能由leader Replica同步数据的规则，那么整个算法就需要重新设计了，更多的希望老师补充或者纠正下","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588404297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":187734,"ip_address":""},"score":255472,"extra":""}]},{"author":{"id":1326537,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3d/c9/a1e6a307.jpg","nickname":"沐","note":"","ucode":"678F6A0C778CDD","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":84419,"discussion_content":"总结的很棒，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576496762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46298,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573139202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1029952,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b7/40/979af7cc.jpg","nickname":"敬彦辉","note":"","ucode":"99C18D514673FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40235,"discussion_content":"总结得很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572134273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110662,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/86/d689f77e.jpg","nickname":"Hank_Yan","note":"","ucode":"86899B561C502B","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29969,"discussion_content":"总结的很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570792610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618531,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqY8Xfp7kpT5lImU30Sjib7olnveVeEB2rLR4ku7eRyL9ic2j1ONQpj7pU1ADOiarvlIhmLkMqMQMwRg/132","nickname":"徐昊","note":"","ucode":"8B7F308AA0A006","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13868,"discussion_content":"nbplus","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568710313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1212634,"avatar":"https://static001.geekbang.org/account/avatar/00/12/80/da/9c0c458c.jpg","nickname":"安静","note":"","ucode":"7C4DB6D81A48EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4211,"discussion_content":"总觉得很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565228063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104153,"user_name":"时光剪影","can_delete":false,"product_type":"c1","uid":1093159,"ip_address":"","ucode":"CC6F24C30AE3E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/ae/27/3dfcc699.jpg","comment_is_top":false,"comment_ctime":1560668733,"is_pvip":false,"replies":[{"id":"37740","content":"厉害！感觉比我写的简洁：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560687597,"ip_address":"","comment_id":104153,"utype":1}],"discussion_count":13,"race_medal":0,"score":"688755436093","product_id":100029201,"comment_content":"整理一遍个人的理解：<br><br>Kafka体系架构=M个producer +N个broker +K个consumer+ZK集群<br><br>producer:生产者<br><br>Broker：服务代理节点，Kafka服务实例。<br>n个组成一个Kafka集群，通常一台机器部署一个Kafka实例，一个实例挂了其他实例仍可以使用，体现了高可用<br><br>consumer：消费者<br>消费topic 的消息， 一个topic 可以让若干个consumer消费，若干个consumer组成一个 consumer group ，一条消息只能被consumer group 中一个consumer消费，若干个partition 被若干个consumer 同时消费，达到消费者高吞吐量<br><br>topic ：主题<br><br>partition： 一个topic 可以拥有若干个partition（从 0 开始标识partition ），分布在不同的broker 上， 实现发布与订阅时负载均衡。producer 通过自定义的规则将消息发送到对应topic 下某个partition，以offset标识一条消息在一个partition的唯一性。<br>一个partition拥有多个replica，提高容灾能力。 <br>replica 包含两种类型：leader 副本、follower副本，<br>leader副本负责读写请求，follower 副本负责同步leader副本消息，通过副本选举实现故障转移。<br>partition在机器磁盘上以log 体现，采用顺序追加日志的方式添加新消息、实现高吞吐量","like_count":161,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454147,"discussion_content":"厉害！感觉比我写的简洁：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560687597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1212709,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/25/bcf4b216.jpg","nickname":"豪","note":"","ucode":"BF83BF86C0B5C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569529,"discussion_content":"一个topic 可以拥有若干个partition，这个多个partition可以分布到不同的broker上？这里不太明白","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1651470439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1616970,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2UXuSevhia94o9Eky4OfMuSictaldxcqpjGuvRCOcvjIIoVBAENLEZbv2lgwmwC8icK1ZrUcneNtiaeFBV8MT3uzNg/132","nickname":"Gavin","note":"","ucode":"A5735665E303FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308045,"discussion_content":"请问下，kafka中分区和rocketmq中tag是一个概念吗r","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600828875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1048525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/cd/9c44f2d5.jpg","nickname":"Mong狗","note":"","ucode":"9DF0D65D75984E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1616970,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2UXuSevhia94o9Eky4OfMuSictaldxcqpjGuvRCOcvjIIoVBAENLEZbv2lgwmwC8icK1ZrUcneNtiaeFBV8MT3uzNg/132","nickname":"Gavin","note":"","ucode":"A5735665E303FD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370479,"discussion_content":"应该是和队列一个概念","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619429589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308045,"ip_address":""},"score":370479,"extra":""}]},{"author":{"id":2845977,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/6d/19/204b0900.jpg","nickname":"Black Jack","note":"","ucode":"CB16C8F44EF422","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553307,"discussion_content":"学习了，码一下，有空看看\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645843520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532273,"discussion_content":"牛逼， mark。\n问一下， 明明是直接写到 leaedr的， 怎么  leaedr还叫 个副本?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637565364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2165795,"avatar":"","nickname":"Geek_riki","note":"","ucode":"1D2C280C6DEBBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303531,"discussion_content":"zk就是保证主/从副本同步的关键吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599291965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1173129,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e6/89/d8aec012.jpg","nickname":"Liang","note":"","ucode":"E1A816EE5CE7DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":255492,"discussion_content":"consumer：消费者\n这里补充一下：应该是一个partition条消息只能被一个consumer group中的一个consumer消费，如果不同的consumer group的其他consumer也是可以消费这条消息的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588405052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1077985,"avatar":"https://static001.geekbang.org/account/avatar/00/10/72/e1/8670abf3.jpg","nickname":"北冥有人","note":"","ucode":"708F6213BA905E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41190,"discussion_content":"那么，一个 partition 下至少得有一个 副本，也就是 leaedr了？ 是不是这样的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572362246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1477999,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8d/6f/c21eff20.jpg","nickname":"平叔叔","note":"","ucode":"E521DFF752C89B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18875,"discussion_content":"以offset标识一条消息在一个partition的唯一性 怎么保证唯一性 不理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569117093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1477999,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8d/6f/c21eff20.jpg","nickname":"平叔叔","note":"","ucode":"E521DFF752C89B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46301,"discussion_content":"一个主题三个分区，那数据只会在其中一个分区。\n同时，分区位置只增加，所以唯一\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573139298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":18875,"ip_address":""},"score":46301,"extra":""},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1477999,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8d/6f/c21eff20.jpg","nickname":"平叔叔","note":"","ucode":"E521DFF752C89B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46302,"discussion_content":"个人理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573139308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":18875,"ip_address":""},"score":46302,"extra":""}]},{"author":{"id":1103893,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d8/15/82d09be2.jpg","nickname":"YL","note":"","ucode":"F6E5916B8357D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":685,"discussion_content":"不错，理解起来要更加容易一些！谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561960681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101265,"user_name":"邋遢的流浪剑客","can_delete":false,"product_type":"c1","uid":1260881,"ip_address":"","ucode":"32AF6F9070506D","user_header":"https://static001.geekbang.org/account/avatar/00/13/3d/51/9723276c.jpg","comment_is_top":false,"comment_ctime":1559761893,"is_pvip":false,"replies":[{"id":"36491","content":"是的。前些天在知乎上就这个问题也解答了一下，有兴趣可以看看：https:&#47;&#47;www.zhihu.com&#47;question&#47;327925275&#47;answer&#47;705690755","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559780284,"ip_address":"","comment_id":101265,"utype":1}],"discussion_count":13,"race_medal":0,"score":"383811851237","product_id":100029201,"comment_content":"如果允许follower副本对外提供读服务（主写从读），首先会存在数据一致性的问题，消息从主节点同步到从节点需要时间，可能造成主从节点的数据不一致。主写从读无非就是为了减轻leader节点的压力，将读请求的负载均衡到follower节点，如果Kafka的分区相对均匀地分散到各个broker上，同样可以达到负载均衡的效果，没必要刻意实现主写从读增加代码实现的复杂程度","like_count":90,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452880,"discussion_content":"是的。前些天在知乎上就这个问题也解答了一下，有兴趣可以看看：https://www.zhihu.com/question/327925275/answer/705690755","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1559780284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394207,"discussion_content":"从两个维度来看。首先读写分离是应对度多写少 那么消息中间件显然不是这个场景。其次  数据读取时延的衡量维度在于 数据规模+数据结构。这部分kafka可以通过分区来自主控制规规模  而读取是顺序io也不需要特别设计数据结构。\n最后 谈谈大家经常说可见性 分布式一致性问题 ，简单来说就是要控制读写一致性 或者说把主节点的高水位线也加到副本节点上 这部分工作量确实也不小","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631785396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544219,"discussion_content":"最后一句话说的很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641442389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1650562,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2f/82/bd80d7de.jpg","nickname":"Ben","note":"","ucode":"E436EE4CA7C146","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388351,"discussion_content":"这里的读负载均衡应该看是否读相同的数据。多个消费者组的不同消费者可以读（消费）同一分区的一条消息，如果从分区也提供读服务，肯定能达到负载均衡。这和分区分散在不同broker还不太一样，那种情况是对读不同消息请求的负载均衡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628729883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035999,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ce/df/3e24aa5b.jpg","nickname":"吃到140","note":"","ucode":"1862A57AB4C173","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378345,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623168028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026832,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ab/10/b812ff3e.jpg","nickname":"Hesher","note":"","ucode":"99AB8B1704CB7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370262,"discussion_content":"MySQL主从也有一致性问题，这解释不了这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619349229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1061803,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/ab/d8ba4242.jpg","nickname":"哒哒哒","note":"","ucode":"9378AD329F8AE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026832,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ab/10/b812ff3e.jpg","nickname":"Hesher","note":"","ucode":"99AB8B1704CB7E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407420,"discussion_content":"场景不同，MySQL用以数据分析，实时性要求不高，即使存在强一致性问题，但只要数据最终一致问题应该就不大。而Kafka主要面向实时的流数据处理，短时间的数据不一致就会对处理的数据产生影响。简而言之，二者存在相同的一致性问题，但是对时间的敏感度并不一样，所以产生的影响也就不一样。个人看法！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635001313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":370262,"ip_address":""},"score":407420,"extra":""},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1061803,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/ab/d8ba4242.jpg","nickname":"哒哒哒","note":"","ucode":"9378AD329F8AE0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543683,"discussion_content":"个人认为从实时性角度来看，Kafka也并非要求所有场景的实时性特别高，不然怎么有削峰填谷一说呢？既然在峰时要排队，也仅是要求数据最终一致，这一点不能说明问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641268001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":407420,"ip_address":""},"score":543683,"extra":""}]},{"author":{"id":1628357,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d8/c5/756cfa08.jpg","nickname":"wan","note":"","ucode":"214CB4A7EE2740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319393,"discussion_content":"mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604022581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1811115,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a2/ab/6533b670.jpg","nickname":"大壮","note":"","ucode":"A7BC5B78186044","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284578,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592561161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053277,"avatar":"https://static001.geekbang.org/account/avatar/00/10/12/5d/e9cea49e.jpg","nickname":"老杜去哪儿","note":"","ucode":"14A219FD54B124","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275690,"discussion_content":"M","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590755073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1557861,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c5/65/ea837941.jpg","nickname":"夜色","note":"","ucode":"2F68CDE65699A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265721,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589430308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46303,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573139370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207384,"user_name":"卡特","can_delete":false,"product_type":"c1","uid":1060491,"ip_address":"","ucode":"FF63677089E701","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/8b/32a8c5a0.jpg","comment_is_top":false,"comment_ctime":1587078325,"is_pvip":true,"replies":[{"id":"77460","content":"整个故事是这样的：假设C1消费P0,P1, C2消费P2,P3。如果C1从未提交，C1挂掉，C2开始消费P0,P1，发现没有对应提交位移，那么按照C2的auto.offset.reset值决定从那里消费，如果是earliest，从P0，P1的最小位移值（可能不是0）开始消费，如果是latest，从P0, P1的最新位移值（分区高水位值）开始消费。但如果C1之前提交了位移，那么C1挂掉之后C2从C1最新一次提交的位移值开始消费。<br><br>所谓的重复消费是指，C1消费了一部分数据，还没来得及提交这部分数据的位移就挂了。C2承接过来之后会重新消费这部分数据。<br><br>我说清楚了吗：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587088669,"ip_address":"","comment_id":207384,"utype":1}],"discussion_count":2,"race_medal":0,"score":"199155573941","product_id":100029201,"comment_content":"加入a主题有4个分区，消费者组有2个实例，发布应用的时候，会先新启动一个服务节点，加入消费组，通过重平衡分配到到至少1个最多2个分区，消费者的偏移量是<br>1，重新从0开始<br>2，拿到分配分区的上一个消费者偏移量？<br><br>如果按照文章说的，即偏移量为0，消息应该会重复消费；<br><br>如果拿到上一个消费者的偏移量则不会消息重复消费，具体过程又是怎样的？<br><br>求解惑，","like_count":46,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492105,"discussion_content":"整个故事是这样的：假设C1消费P0,P1, C2消费P2,P3。如果C1从未提交，C1挂掉，C2开始消费P0,P1，发现没有对应提交位移，那么按照C2的auto.offset.reset值决定从那里消费，如果是earliest，从P0，P1的最小位移值（可能不是0）开始消费，如果是latest，从P0, P1的最新位移值（分区高水位值）开始消费。但如果C1之前提交了位移，那么C1挂掉之后C2从C1最新一次提交的位移值开始消费。\n\n所谓的重复消费是指，C1消费了一部分数据，还没来得及提交这部分数据的位移就挂了。C2承接过来之后会重新消费这部分数据。\n\n我说清楚了吗：）","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587088669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202222,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep66fdwo3ebSicKjf0iacAx4C2tZOthDDD4bSJqib1iauFBK6EoMSWUBp4UbbN2BQlib7mFR3hQD6MUwew/132","nickname":"chai","note":"","ucode":"C686EB1B1EBAB6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351213,"discussion_content":"这种情况只能业务层自己处理了吧，在消息体中添加唯一ID，消费者消费到消息后，进行该唯一ID的校验，比如使用redis实现分布式锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614178329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102152,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1560152191,"is_pvip":false,"replies":[{"id":"36834","content":"我个人觉得是很不错的答案，自己也学到了一些：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560156111,"ip_address":"","comment_id":102152,"utype":1}],"discussion_count":6,"race_medal":0,"score":"173358844031","product_id":100029201,"comment_content":"为什么 Kafka 不像 MySQL 那样允许追随者副本对外提供读服务？<br><br>答：因为mysql一般部署在不同的机器上一台机器读写会遇到瓶颈，Kafka中的领导者副本一般均匀分布在不同的broker中，已经起到了负载的作用。即：同一个topic的已经通过分区的形式负载到不同的broker上了，读写的时候针对的领导者副本，但是量相比mysql一个还实例少太多，个人觉得没有必要在提供度读服务了。（如果量大还可以使用更多的副本，让每一个副本本身都不太大）不知道这样理解对不对?","like_count":40,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453283,"discussion_content":"我个人觉得是很不错的答案，自己也学到了一些：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560156111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1529858,"avatar":"https://static001.geekbang.org/account/avatar/00/17/58/02/2b7ccf09.jpg","nickname":"民工597","note":"","ucode":"DB6857E21E9318","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320454,"discussion_content":"那样可能会有一致性问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604372225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625530,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","nickname":"YueShi","note":"","ucode":"8F7AFAE4641A7D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292807,"discussion_content":"领导者副本，副本不是已经最低级别了吗，\nTopic下面是partition，partition下面是replica，\n\n那么为什么一个replica还部署在不同的broker中呢？\n\n这一块有点疑问，希望得到解答💕","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595337812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1625530,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","nickname":"YueShi","note":"","ucode":"8F7AFAE4641A7D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":344790,"discussion_content":"我觉得多副本的作用只是为了冗余，当领导者副本所在的 broker 挂了之后，还可以从跟随者副本的 broker 那里找回失去的那部分数据，如果你都放在同一台机器（同一个 broker）上的话，那么这台机器坏了的话，数据不就一起丢失了吗？！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611571985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292807,"ip_address":""},"score":344790,"extra":""},{"author":{"id":2029015,"avatar":"","nickname":"小钢炮","note":"","ucode":"676C4CCF3CCD0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1625530,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","nickname":"YueShi","note":"","ucode":"8F7AFAE4641A7D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":414121,"discussion_content":"不是一个replica部署在不同的broker，正确的说法是一个分区下面的各个replica尽量部署到不同的broker。如果有两个replica部署到同一个broker，broker挂了，这两个replica就都丢失了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636649933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292807,"ip_address":""},"score":414121,"extra":""},{"author":{"id":2029015,"avatar":"","nickname":"小钢炮","note":"","ucode":"676C4CCF3CCD0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1625530,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","nickname":"YueShi","note":"","ucode":"8F7AFAE4641A7D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":414123,"discussion_content":"补充一点，分区可以实现scability，增加分区，增加了消息存储量，一个分区对应一个领导者副本，通过多个分区，可以实现负载均衡。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636650134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292807,"ip_address":""},"score":414123,"extra":""}]}]},{"had_liked":false,"id":106096,"user_name":"jacke","can_delete":false,"product_type":"c1","uid":1161209,"ip_address":"","ucode":"05F355E1FF88C5","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/f9/a8f26b10.jpg","comment_is_top":false,"comment_ctime":1561173256,"is_pvip":false,"replies":[{"id":"38479","content":"目前Kafka的设计中多个分区的话无法保证全局的消息顺序。如果一定要实现全局的消息顺序，只能单分区","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561337757,"ip_address":"","comment_id":106096,"utype":1}],"discussion_count":7,"race_medal":0,"score":"143295094024","product_id":100029201,"comment_content":"胡老师：<br>       还想问个分区的问题，比如一个topic分为0，1，2 个分区<br>       写入0到9条消息，按照轮训分布:<br>              0分区：0，1，2，9<br>              1分区：3，4，5，<br>              2分区：6，7，8<br>        那对于消费端来说，不管是p2p点对点模式，还是push&#47;sub模式来说，<br>        如何保证消费端的读取顺序也是从0到9？因为0到9条消息是分布在3个<br>        分区上的，同时消费者是主动轮训模式去读分区数据的，<br>        有没有可能读到后面写的数据呢？比如先读到5在读到4？<br>        ps:刚开始学习，问题比较多，谅解<br>    ","like_count":33,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454947,"discussion_content":"目前Kafka的设计中多个分区的话无法保证全局的消息顺序。如果一定要实现全局的消息顺序，只能单分区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561337757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202222,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep66fdwo3ebSicKjf0iacAx4C2tZOthDDD4bSJqib1iauFBK6EoMSWUBp4UbbN2BQlib7mFR3hQD6MUwew/132","nickname":"chai","note":"","ucode":"C686EB1B1EBAB6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351221,"discussion_content":"这个一般是根据业务场景进行分区，比如在直播领域，要求同一个房间内的各种行为消息（进房、离房、关注等）是有序的，那完全可以根据直播id进行分区，保证相同的直播id的消息全部落到同一个分区，进而保证消息的有序性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614179112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2109853,"avatar":"","nickname":"beifengzhishen001","note":"","ucode":"77D42B7DD9E754","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329830,"discussion_content":"按照单分区有序原则，肯定是先读到4再读到5，但是3和8哪个先读到就不好说了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606466160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1144171,"avatar":"https://static001.geekbang.org/account/avatar/00/11/75/6b/fd685164.jpg","nickname":"lcf枫","note":"","ucode":"D51E8F68BD41CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300052,"discussion_content":"这一点好像可以指定key 让他打到相同的partition 上。但是像DB 这种就没办法，只能是一个分区了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597919029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54806,"discussion_content":"这个点会导致很多使用场景受限啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574315714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1156148,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a4/34/0ab08db6.jpg","nickname":"swift","note":"","ucode":"B243DCD10B04F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226121,"discussion_content":"我理解在大多数场景中，能够由生产者根据数据的业务特点控制发送到哪个分区就足够了吧。比如从不同的实例采集到的日志，只要保证发送时每个实例自己的日志在同一个分区顺序相同就可以了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1586423409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":54806,"ip_address":""},"score":226121,"extra":""},{"author":{"id":1594532,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqGaJsoQicG7Bo1qTpl3ruFd2zmIS4ECgqOejH2RkvXED8skWicwKzQdyFyhuFaIzk0wxHv0H1mshHg/132","nickname":"杨佳胜","note":"","ucode":"8834DC6E5A701D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1156148,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a4/34/0ab08db6.jpg","nickname":"swift","note":"","ucode":"B243DCD10B04F0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":346380,"discussion_content":"日志好说，有些时序性高的场景就得考虑下了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611929102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":226121,"ip_address":""},"score":346380,"extra":""}]}]},{"had_liked":false,"id":102610,"user_name":"莫道不销魂","can_delete":false,"product_type":"c1","uid":1225659,"ip_address":"","ucode":"62EC6258F04759","user_header":"https://static001.geekbang.org/account/avatar/00/12/b3/bb/7789fc32.jpg","comment_is_top":false,"comment_ctime":1560263583,"is_pvip":false,"replies":[{"id":"37164","content":"1. 如果producer指定了要发送的目标分区，消息自然是去到那个分区；否则就按照producer端参数partitioner.class指定的分区策略来定；如果你没有指定过partitioner.class，那么默认的规则是：看消息是否有key，如果有则计算key的murmur2哈希值%topic分区数；如果没有key，按照轮询的方式确定分区。<br>2. 这个层级其实是逻辑概念。在物理上还是以日志段（log segment）文件的方式保存，日志段文件在内存中有对应的Java对象，里面关联了你说的这些。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560306518,"ip_address":"","comment_id":102610,"utype":1}],"discussion_count":2,"race_medal":0,"score":"108934445983","product_id":100029201,"comment_content":"老师，我想问下<br>1、 kafka是按照什么规则将消息划分到各个分区的？<br>2、既然同一个topic下的消息分布在不同的分区，那是什么机制将topic、partition、record关联或者说管理起来的？","like_count":25,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453500,"discussion_content":"1. 如果producer指定了要发送的目标分区，消息自然是去到那个分区；否则就按照producer端参数partitioner.class指定的分区策略来定；如果你没有指定过partitioner.class，那么默认的规则是：看消息是否有key，如果有则计算key的murmur2哈希值%topic分区数；如果没有key，按照轮询的方式确定分区。\n2. 这个层级其实是逻辑概念。在物理上还是以日志段（log segment）文件的方式保存，日志段文件在内存中有对应的Java对象，里面关联了你说的这些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560306518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46306,"discussion_content":"这个问题很nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573139639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101263,"user_name":"(´田ω田`)","can_delete":false,"product_type":"c1","uid":1210588,"ip_address":"","ucode":"CA043D3EC6FE7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/78/dc/0c9c9b0f.jpg","comment_is_top":false,"comment_ctime":1559757157,"is_pvip":false,"replies":[{"id":"36490","content":"在一个消费者组下，一个分区只能被一个消费者消费，但一个消费者可能被分配多个分区，因而在提交位移时也就能提交多个分区的位移。<br><br>针对你说的第二种情况，答案是：是的。有一个消费者将无法分配到任何分区，处于idle状态。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559780234,"ip_address":"","comment_id":101263,"utype":1}],"discussion_count":3,"race_medal":0,"score":"96049037669","product_id":100029201,"comment_content":"1、主题中的每个分区都只会被组内的一个消费者实例消费，其他消费者实例不能消费它。<br>2、假设组内某个实例挂掉了，Kafka 能够自动检测到，然后把这个 Failed 实例之前负责的分区转移给其他活着的消费者。<br><br>意思是1个分区只能同时被1个消费者消费，但是1个消费者能同时消费多个分区是吗？那1个消费者里面就会有多个消费者位移变量？<br>如果1个主题有2个分区，消费者组有3个消费者，那至少有1个消费者闲置？","like_count":22,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452878,"discussion_content":"在一个消费者组下，一个分区只能被一个消费者消费，但一个消费者可能被分配多个分区，因而在提交位移时也就能提交多个分区的位移。\n\n针对你说的第二种情况，答案是：是的。有一个消费者将无法分配到任何分区，处于idle状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559780234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285925,"discussion_content":"也就是说消费者数量要小于等于分区数量?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592989633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":555208,"discussion_content":"是的。比如 10 个分区，最多有 10 个消费者。如果想要提高并行度，只能加分区。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646810851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285925,"ip_address":""},"score":555208,"extra":""}]}]},{"had_liked":false,"id":105423,"user_name":"Happy","can_delete":false,"product_type":"c1","uid":1281479,"ip_address":"","ucode":"A19C5ECF0AE5FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/c7/d66952bc.jpg","comment_is_top":false,"comment_ctime":1560996609,"is_pvip":false,"replies":[{"id":"38193","content":"同意：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561020715,"ip_address":"","comment_id":105423,"utype":1}],"discussion_count":3,"race_medal":0,"score":"83165375233","product_id":100029201,"comment_content":"主写从读无非就是为了减轻leader节点的压力，而kafka中数据分布相对比较均匀，所说的Follower从节点,实际上也是其他topic partition的Leader节点，所以在Follower可以读数据，那么会影响Follower节点上的做为Leader的partition的读性能，所以整体性能并没有提升，但是带来了主从数据同步延迟导致的数据不一致的问题","like_count":19,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454679,"discussion_content":"同意：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561020715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2109853,"avatar":"","nickname":"beifengzhishen001","note":"","ucode":"77D42B7DD9E754","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329835,"discussion_content":"很好的思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606466474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326885,"discussion_content":"follower的作用就是起到leader挂掉后，升级位leader吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605694039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109677,"user_name":"快跑","can_delete":false,"product_type":"c1","uid":1564645,"ip_address":"","ucode":"90ED7E6D40C58E","user_header":"https://static001.geekbang.org/account/avatar/00/17/df/e5/65e37812.jpg","comment_is_top":false,"comment_ctime":1562075742,"is_pvip":false,"replies":[{"id":"39757","content":"如果retries&gt;0并且max.in.flight.requests.per.connection&gt;1有可能出现消息乱序的情况 ","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562114616,"ip_address":"","comment_id":109677,"utype":1}],"discussion_count":2,"race_medal":0,"score":"65986585182","product_id":100029201,"comment_content":"老师，你好<br>假如只有一个Producer进程，Kafka只有一分区。Producer按照1，2，3，4，5的顺序发送消息，Kafka这个唯一分区收到消息一定是1，2，3，4，5么？ Producer端，网络，数据格式等因素，会不会导致Kafka只有一个分区接收到数据顺序跟Producer发送数据顺序不一致","like_count":15,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456509,"discussion_content":"如果retries&amp;gt;0并且max.in.flight.requests.per.connection&amp;gt;1有可能出现消息乱序的情况 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562114616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300553,"discussion_content":"好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598168507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164764,"user_name":"FunnyCoder","can_delete":false,"product_type":"c1","uid":1791274,"ip_address":"","ucode":"9ACD895546F15C","user_header":"https://static001.geekbang.org/account/avatar/00/1b/55/2a/1ef26397.jpg","comment_is_top":false,"comment_ctime":1577088182,"is_pvip":false,"replies":[{"id":"62874","content":"使用standalone consumer就完全避免rebalance了。事实上很多主流大数据流处理框架（Spark、Flink）都是这么使用的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1577149223,"ip_address":"","comment_id":164764,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44526761142","product_id":100029201,"comment_content":"小白一枚 Kafka可以关闭重平衡吗？可不可在逻辑上新建一个消费者或者将failed消费者重启 而不是分配给其他消费者","like_count":10,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478886,"discussion_content":"使用standalone consumer就完全避免rebalance了。事实上很多主流大数据流处理框架（Spark、Flink）都是这么使用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577149223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109666,"user_name":"莫道不销魂","can_delete":false,"product_type":"c1","uid":1225659,"ip_address":"","ucode":"62EC6258F04759","user_header":"https://static001.geekbang.org/account/avatar/00/12/b3/bb/7789fc32.jpg","comment_is_top":false,"comment_ctime":1562073935,"is_pvip":false,"replies":[{"id":"39758","content":"一个分区的N个副本一定在N个不同的Broker上。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562114636,"ip_address":"","comment_id":109666,"utype":1}],"discussion_count":5,"race_medal":0,"score":"44511746895","product_id":100029201,"comment_content":"老师 ，一个分区的N个副本是在同个Broker中的吗，还是在不同的Broker中，还是说是随机的？","like_count":10,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456505,"discussion_content":"一个分区的N个副本一定在N个不同的Broker上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562114636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1186115,"avatar":"https://static001.geekbang.org/account/avatar/00/12/19/43/226ca347.jpg","nickname":"Michael 🛡YZY","note":"","ucode":"F1D2BF8489A7D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161335,"discussion_content":"副本replica存在的意义就在于避免某一个broker goes down 所以副本必须分散在不同broker上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580890480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54827,"discussion_content":"这个问题如果从反方向提问，例如“只有一个 broker ，那么是不是就不允许有多个副本的存在了？”我猜答案为“是的”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574317621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1833151,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHziahkgLzMiaAIRicJUd2n8asMFntzHzmmpIvlw3smg45vx0aGLqYkU446esficyEQ7m5j6AOdHeDBg/132","nickname":"常星星","note":"","ucode":"ABE70EEFB0C0DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226675,"discussion_content":"我猜也是，同一broker备份一个相同的副本，没意义","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586438988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":54827,"ip_address":""},"score":226675,"extra":""},{"author":{"id":1670763,"avatar":"https://static001.geekbang.org/account/avatar/00/19/7e/6b/36fc4516.jpg","nickname":"FIRE","note":"","ucode":"85861D990FB3AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544725,"discussion_content":"我猜不是，一个broker可以多个分区，分区有多个的话，副本也可以多个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641657232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":54827,"ip_address":""},"score":544725,"extra":""}]}]},{"had_liked":false,"id":101639,"user_name":"你好旅行者","can_delete":false,"product_type":"c1","uid":1154101,"ip_address":"","ucode":"5C72A428DC28F3","user_header":"https://static001.geekbang.org/account/avatar/00/11/9c/35/9dc79371.jpg","comment_is_top":false,"comment_ctime":1559897485,"is_pvip":false,"replies":[{"id":"36804","content":"只能是分散负载了，多做一些分区。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560135277,"ip_address":"","comment_id":101639,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44509570445","product_id":100029201,"comment_content":"我之前在学习Kafka的时候也有过这个问题，为什么Kafka不支持读写分离，让从节点对外提供读服务？<br>其实读写分离的本质是为了对读请求进行负载均衡，但是在Kafka中，一个topic的多个Prtition天然就被分散到了不同的broker服务器上，这种架构本身就解决了负载均衡地问题。也就是说，Kafka的设计从一刻开始就考虑到了分布式的问题，我觉得这是Linkedln开发团队了不起的地方。<br>尽管如此，我觉得还有一个问题我没有想明白，如果Producer就是对某些broker中的leader副本进行大量的写入，或者Consumer就是对某些broker中的leader副本进行大量的拉取操作，那单台broker服务器的性能不还是成为了整个集群的瓶颈？请问老师，这种情况Kafka是怎么解决的呢？","like_count":10,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453048,"discussion_content":"只能是分散负载了，多做一些分区。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560135277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101358,"user_name":"然行","can_delete":false,"product_type":"c1","uid":1103274,"ip_address":"","ucode":"3DF253F89B0B4A","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/aa/09581405.jpg","comment_is_top":false,"comment_ctime":1559788051,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"44509461011","product_id":100029201,"comment_content":"kafka客户端读操作是会移动broker中分区的offset，如果副本提供读服务，副本更变offset，再回同步领导副本，数据一致性就无法得到保障","like_count":10,"discussions":[{"author":{"id":1110662,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/86/d689f77e.jpg","nickname":"Hank_Yan","note":"","ucode":"86899B561C502B","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29975,"discussion_content":"👍🏻，也是一点。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570792798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1703222,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fd/36/f947c340.jpg","nickname":"Roger宇","note":"","ucode":"CBA23C01409349","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207330,"discussion_content":"并不是，broker中offset只要数据不变化，不会被消费者的读取操作改变，消费者的offset是自己记录的。这个解释可能不太对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584492172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1156148,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a4/34/0ab08db6.jpg","nickname":"swift","note":"","ucode":"B243DCD10B04F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1703222,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fd/36/f947c340.jpg","nickname":"Roger宇","note":"","ucode":"CBA23C01409349","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226644,"discussion_content":"虽然没研究过，不过按道理消费者位移应该是记录在服务端的，每个客户端或组的Id在每个分区都有一条记录才是。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586438253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":207330,"ip_address":""},"score":226644,"extra":""},{"author":{"id":1703222,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fd/36/f947c340.jpg","nickname":"Roger宇","note":"","ucode":"CBA23C01409349","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1156148,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a4/34/0ab08db6.jpg","nickname":"swift","note":"","ucode":"B243DCD10B04F0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":246724,"discussion_content":"你说消费者位移的话确实在server端。我以为你说的整个server存储的日志的位移。位移这个词在kafka概念里太高频了，得说清楚具体哪个位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587774779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":226644,"ip_address":""},"score":246724,"extra":""},{"author":{"id":1173129,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e6/89/d8aec012.jpg","nickname":"Liang","note":"","ucode":"E1A816EE5CE7DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1703222,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fd/36/f947c340.jpg","nickname":"Roger宇","note":"","ucode":"CBA23C01409349","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":255496,"discussion_content":"消费者的offset不是自己记录的，是在服务端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588405761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":207330,"ip_address":""},"score":255496,"extra":""}]}]},{"had_liked":false,"id":211301,"user_name":"行则将至","can_delete":false,"product_type":"c1","uid":1542987,"ip_address":"","ucode":"DB972F2DF059C4","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/fa52d222.jpg","comment_is_top":false,"comment_ctime":1587947023,"is_pvip":false,"replies":[{"id":"78551","content":"多久都要认真回答！<br>确实就像你说的，没有提交位移的数据，自然也就无法获取之前消费进度。其他没有什么影响了~","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587950621,"ip_address":"","comment_id":211301,"utype":1}],"discussion_count":1,"race_medal":1,"score":"35947685391","product_id":100029201,"comment_content":"专栏过去这么久了。不知道还回不回被老师回答。老师，如果consumer一直不提交位移，会有什么影响？目前想到的是：当前consumer 实例宕机，后续消费该分区的消费者实例就只能遵从auto.reset.offset的指定了。除此之外还有其他问题吗？","like_count":8,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493245,"discussion_content":"多久都要认真回答！\n确实就像你说的，没有提交位移的数据，自然也就无法获取之前消费进度。其他没有什么影响了~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587950621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132727,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1568205253,"is_pvip":false,"replies":[{"id":"50883","content":"不会自动迁移，需要你手动迁移。分区数不可以减少","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568250548,"ip_address":"","comment_id":132727,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35927943621","product_id":100029201,"comment_content":"分区数量一开始定义后，后面可以增加分区后，原来分区的数据应该不会迁移吧？分区数量可以减少吗？","like_count":8,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467090,"discussion_content":"不会自动迁移，需要你手动迁移。分区数不可以减少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568250548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101300,"user_name":"dbo","can_delete":false,"product_type":"c1","uid":1052678,"ip_address":"","ucode":"3C5343589E47C2","user_header":"","comment_is_top":false,"comment_ctime":1559780006,"is_pvip":false,"replies":[{"id":"36502","content":"我个人认为维护成本不高。Kafka中消费进度由clients端来操作，即消费者来决定什么时候提交位移，而且是提交到专属的topic上，与副本本身关联不大。实际上社区最近正在讨论是否允许follower副本提供读服务。不过我同意的是，follower副本提供读服务后会推高follower所在broker的磁盘读IO","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559781196,"ip_address":"","comment_id":101300,"utype":1}],"discussion_count":3,"race_medal":0,"score":"31624551078","product_id":100029201,"comment_content":"Myaql中从追随者读取数据对server和client都没有影响，而Kafka中从追随者读取消息意味着消费了数据，需要标记该数据被消费了，涉及到做一些进度维护的操作，多个消费实例做这些操作复杂性比较高，如果可以从追随者读也可能会牺牲性能，这是我的理解，请老师指正。","like_count":7,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452898,"discussion_content":"我个人认为维护成本不高。Kafka中消费进度由clients端来操作，即消费者来决定什么时候提交位移，而且是提交到专属的topic上，与副本本身关联不大。实际上社区最近正在讨论是否允许follower副本提供读服务。不过我同意的是，follower副本提供读服务后会推高follower所在broker的磁盘读IO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559781196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1276794,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7b/7a/d63750b2.jpg","nickname":"张家新￣ー￣","note":"","ucode":"8AA584D64A6301","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5071,"discussion_content":"我理解总体的磁盘的io不会提高的，更可能出现的是数据一致性问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565923789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1064894,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3f/be/c7141382.jpg","nickname":"是KK呀","note":"","ucode":"5DCEB53A13D049","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1276794,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7b/7a/d63750b2.jpg","nickname":"张家新￣ー￣","note":"","ucode":"8AA584D64A6301","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304108,"discussion_content":"我觉得数据一致性没问题，每条消息都有offset，只是提供读数据的载体换成了副本而已，为啥会增加数据一致性问题？控制offset不就可以了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599470067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5071,"ip_address":""},"score":304108,"extra":""}]}]},{"had_liked":false,"id":101273,"user_name":"周小桥","can_delete":false,"product_type":"c1","uid":1062408,"ip_address":"","ucode":"80875AE7675695","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/08/e3ed94b8.jpg","comment_is_top":false,"comment_ctime":1559775961,"is_pvip":false,"replies":[{"id":"36492","content":"Kafka不采用主从分离的讨论最近火起来了。如果要让follower抗读，需要解决很多一致性的问题，另外Kafka也不属于典型的读多写少场景，主从分离的优势不明显。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559780391,"ip_address":"","comment_id":101273,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27329579737","product_id":100029201,"comment_content":"这里的术语介绍，在阿里一面的时候有被问到。<br><br>为什么副本不提供对外读？<br><br>我认为这个副本只是提供一个数据跟leader的同步，和当leader故障后能进行切换。还有消费者读取数据是根据offset去读取的，一份文件够了。","like_count":6,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452883,"discussion_content":"Kafka不采用主从分离的讨论最近火起来了。如果要让follower抗读，需要解决很多一致性的问题，另外Kafka也不属于典型的读多写少场景，主从分离的优势不明显。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559780391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325608,"discussion_content":"主从同步无外乎三种模式，异步、半同步、组同步。组同步依赖raft协议，KIP-500还没发布，就不说了。半同步每次随机挑一个，对消费者来说每次看到的数据都是不可保证的，没办法接受，而且又增加了难度。异步同步就不用讨论了。那么最后只看主节点，就符合逻辑语义了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605361221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130425,"user_name":"蚊子","can_delete":false,"product_type":"c1","uid":1093207,"ip_address":"","ucode":"DA78BDAA69AA6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/ae/57/7504f5ca.jpg","comment_is_top":false,"comment_ctime":1567464350,"is_pvip":false,"replies":[{"id":"48676","content":"在Kafka中你可以认为一个分区的HW表征了当前该分区下所有副本都已经保存了的消息的最大位移","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1567473155,"ip_address":"","comment_id":130425,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23042300830","product_id":100029201,"comment_content":"请教一下老师：high water mark怎么理解？","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465947,"discussion_content":"在Kafka中你可以认为一个分区的HW表征了当前该分区下所有副本都已经保存了的消息的最大位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567473155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1093207,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ae/57/7504f5ca.jpg","nickname":"蚊子","note":"","ucode":"DA78BDAA69AA6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9378,"discussion_content":"这么一说理解了，谢谢老师","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568162901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109445,"user_name":"funnyx","can_delete":false,"product_type":"c1","uid":1115049,"ip_address":"","ucode":"A9B8E27919AE4D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoZqcVJzUjfu5noOW6OPAh6ibrBicibLmicibnVyVLHdf7GwAzf2th5s1oQ9pUbLpmq2mlVBauUZn8QUnw/132","comment_is_top":false,"comment_ctime":1562033572,"is_pvip":false,"replies":[{"id":"39765","content":"server = Broker","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562115248,"ip_address":"","comment_id":109445,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23036870052","product_id":100029201,"comment_content":"胡老师，您好，最近正在学习Kafka，看了您的文章，感觉获益匪浅，但是有个地方还请指教一下，在Kafka官网看的，”Each partition has one server which acts as the &quot;leader&quot; and zero or more servers which act as &quot;followers&quot;. 请问这里的server该作何理解？","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456413,"discussion_content":"server = Broker","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562115248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1984820,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/yb5R8iaxicD8sViaZHtpJNDpXaRjnT7czqiaGGFUNpQL1zDQxibict9HoKYSIKElvrBibZTLta89qQ8C0JDCH1mBUtib6Q/132","nickname":"Geek_90a324","note":"","ucode":"C9267BC63EA3F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279405,"discussion_content":"应该是副本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591340777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102270,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1560173498,"is_pvip":false,"replies":[{"id":"36912","content":"1. 客户端发送Metadata请求获取每个topic分区的leader，之后再发送真实的数据请求（Produce请求或Fetch请求）<br>2. 如果消费者挂了自然是没法提交位移，所以有重复消费的问题。Kafka一直是承认这一点的啊，即消费者端存在消息被消费多次的情况","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560214869,"ip_address":"","comment_id":102270,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23035009978","product_id":100029201,"comment_content":"谢谢老师之前的回答：<br>对于之前的回答还有点小疑惑：<br>1、客户端会首先请求topic分区的leader副本在哪个broker上，内部自动执行的，你无需操心； <br>     哈哈，确实不用操心，只是特别好奇他是怎么选的？ 因为每个topic的每个分区leader还不一样。<br><br>2、重平衡时每个消费者都会尽力去做一次位移提交（如果它会提交位移的话），这样当rebalance完成后Kafka会告诉它们订阅分区当前消费到了那里。<br>我理解你说的应该是在检测到有节点挂了，kafka会进行重平衡，此时未挂的节点会尽力提交自己的位移，对吧？但是针对挂了的节点我理解是没法位移提交的，针对没有没有位移提交怎么处理呀？<br><br>真的感谢老师的回答。","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453330,"discussion_content":"1. 客户端发送Metadata请求获取每个topic分区的leader，之后再发送真实的数据请求（Produce请求或Fetch请求）\n2. 如果消费者挂了自然是没法提交位移，所以有重复消费的问题。Kafka一直是承认这一点的啊，即消费者端存在消息被消费多次的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560214869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101429,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1559806949,"is_pvip":false,"replies":[{"id":"36562","content":"Kafka提供了消费者组实现你说的这个需求~~","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559813799,"ip_address":"","comment_id":101429,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23034643429","product_id":100029201,"comment_content":"kafka能否做到多个消费者消费一个生产者生产的数据，并能保证每个消费者消费的消息不会重复，做到并行消费?","like_count":5,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452960,"discussion_content":"Kafka提供了消费者组实现你说的这个需求~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559813799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1137642,"avatar":"https://static001.geekbang.org/account/avatar/00/11/5b/ea/8a2dceaa.jpg","nickname":"PP丶","note":"","ucode":"3185CBE58473DB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561966,"discussion_content":"你不是说重平衡有消息重复消费的问题么。楼主需求事不能重复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649754528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178579,"user_name":"翟岳辉","can_delete":false,"product_type":"c1","uid":1099755,"ip_address":"","ucode":"B5C0777AF0092B","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/eb/50a4842a.jpg","comment_is_top":false,"comment_ctime":1581751112,"is_pvip":false,"replies":[{"id":"69363","content":"1. 连接数在Kafka端没有限制<br>2. Kafka 2.1开始支持客户端的DNS解析，方法是设置客户端的client.dns.lookup","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1581814112,"ip_address":"","comment_id":178579,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18761620296","product_id":100029201,"comment_content":"老师，我想问两个问题<br>1.kafka支持接入多少生产者，生产者连接数有没有限制？<br>2.kafka生产侧是否支持f5负载均衡，或者是说如果kafka的服务ip发生变化，有没有什么设计，可以避免让生产者修改broker的列表，dns?","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483887,"discussion_content":"1. 连接数在Kafka端没有限制\n2. Kafka 2.1开始支持客户端的DNS解析，方法是设置客户端的client.dns.lookup","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581814112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159105,"user_name":"高志强","can_delete":false,"product_type":"c1","uid":1276563,"ip_address":"","ucode":"68737002043752","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","comment_is_top":false,"comment_ctime":1575538794,"is_pvip":false,"replies":[{"id":"60892","content":"数据通常都在呢。消息何时在Broker端被删除取决于Broker端的配置。通常情况下，Kafka默认保存最近一周的数据，一周前的数据自动删除","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1575594180,"ip_address":"","comment_id":159105,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18755407978","product_id":100029201,"comment_content":"老师我有个问题，消费者位移可以手动往回调么，当位移向前后，分区里之前的数据还会存在么，如果存在啥时会被删除呢","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476950,"discussion_content":"数据通常都在呢。消息何时在Broker端被删除取决于Broker端的配置。通常情况下，Kafka默认保存最近一周的数据，一周前的数据自动删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575594180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1965699,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","nickname":"慎独明强","note":"","ucode":"DC2F7F2C0C8F60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320413,"discussion_content":"消息是存在磁盘上，通过定时任务去判定是否删除。消费者位移只是服务端维护的一个消费进度，通过消息位移去磁盘读取数据，前移会导致重复消费。可以借鉴多个消费组可以消费同一个topic的所有消息来理解，就是通过每个消费组维护了不同的消费进度。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604365772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120295,"user_name":"蓝魔丶","can_delete":false,"product_type":"c1","uid":1219438,"ip_address":"","ucode":"2AE4359E263558","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","comment_is_top":false,"comment_ctime":1564821949,"is_pvip":false,"replies":[{"id":"44256","content":"没有。不光Kafka，所有partitioned database都有这个问题。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564966223,"ip_address":"","comment_id":120295,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18744691133","product_id":100029201,"comment_content":"老师，kafka采用多个多个分区支持负载均衡，这样无法保证全局顺序唯一吧，现在业内常采用单分区来解决这个问题，但是这样又丢失了负载均衡能力，后面kafka会针对这个问题会进一步加强吗？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461275,"discussion_content":"没有。不光Kafka，所有partitioned database都有这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564966223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394208,"discussion_content":"全局有序 要严格遵循一个全局时钟 。这方面实现方式是paxos协议族 和 分布式数据库如tidb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631785673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110949,"user_name":"Mick","can_delete":false,"product_type":"c1","uid":1391216,"ip_address":"","ucode":"5CCE3E2BDB110A","user_header":"https://static001.geekbang.org/account/avatar/00/15/3a/70/a874d69c.jpg","comment_is_top":false,"comment_ctime":1562401100,"is_pvip":false,"replies":[{"id":"40506","content":"“同一主题下的分区有没有可能到不同的borker上？” ——非常可能，而且也是期望的结果。<br><br>“同一分区的副本有没有可能在不同的borker上” —— 必须如此。同一分区的不同副本必然在不同的broker上。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1562546632,"ip_address":"","comment_id":110949,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18742270284","product_id":100029201,"comment_content":"老师，同一主题下的分区有没有可能到不同的borker上？同一分区的副本有没有可能在不同的borker上","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457136,"discussion_content":"“同一主题下的分区有没有可能到不同的borker上？” ——非常可能，而且也是期望的结果。\n\n“同一分区的副本有没有可能在不同的borker上” —— 必须如此。同一分区的不同副本必然在不同的broker上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562546632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1616445,"avatar":"https://static001.geekbang.org/account/avatar/00/18/aa/3d/c14e338e.jpg","nickname":"建锋","note":"","ucode":"DF4AAE135B152B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586211,"discussion_content":"按我的理解：分区是为了避免单点存储太多数据影响性能，副本主要是做高可用。所以尽量分开在不同的Broker 不同的服务器上  才能达到目的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662039741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103652,"user_name":"wrzgeek","can_delete":false,"product_type":"c1","uid":1031589,"ip_address":"","ucode":"69C4980053E388","user_header":"","comment_is_top":false,"comment_ctime":1560483444,"is_pvip":false,"replies":[{"id":"37570","content":"1. 有算法，不是随机的。其实不只是leader，整个副本在broker上的分配策略大体上都遵循轮询的公平法则。<br>2. 从follower中选择leader的算法如下：<br> 2.1 从ISR中选择存活的第一个副本为新leader<br> 2.2 如果ISR为空，看是否开启了unclean leader选举，如果没有开启，那么Kafka干脆就不选leader了，直接将分区置于不可用状态；否则Kafka就从剩下的存活副本中选第一个副本作为leader（这里的顺序就是ZooKeeper中保存的副本集合顺序，即assigned_replicas项）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560558271,"ip_address":"","comment_id":103652,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18740352628","product_id":100029201,"comment_content":"小白提问:<br>1. leader 副本分布在哪个broker上随机的吗？还是有什么机制<br>2. 如文中最后一个图所示，假如broker1挂掉，broker2上的follower副本会变为leader副本吗？假如不止一个follower副本，是不是有某种选举方式来决定哪个follower副本会升级为leader副本？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453952,"discussion_content":"1. 有算法，不是随机的。其实不只是leader，整个副本在broker上的分配策略大体上都遵循轮询的公平法则。\n2. 从follower中选择leader的算法如下：\n 2.1 从ISR中选择存活的第一个副本为新leader\n 2.2 如果ISR为空，看是否开启了unclean leader选举，如果没有开启，那么Kafka干脆就不选leader了，直接将分区置于不可用状态；否则Kafka就从剩下的存活副本中选第一个副本作为leader（这里的顺序就是ZooKeeper中保存的副本集合顺序，即assigned_replicas项）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560558271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102109,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1560138370,"is_pvip":false,"replies":[{"id":"36836","content":"重平衡时每个消费者都会尽力去做一次位移提交（如果它会提交位移的话），这样当rebalance完成后Kafka会告诉它们订阅分区当前消费到了那里。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560156243,"ip_address":"","comment_id":102109,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18740007554","product_id":100029201,"comment_content":"老师你好，每个消费者有着自己的消费者位移。“重平衡”时Kafka怎么知道已挂的消费者消费到哪里了？谢谢","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453263,"discussion_content":"重平衡时每个消费者都会尽力去做一次位移提交（如果它会提交位移的话），这样当rebalance完成后Kafka会告诉它们订阅分区当前消费到了那里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560156243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547667,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/93/4159edaa.jpg","nickname":"朴素柠檬c","note":"","ucode":"2D4CBB70D801B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327193,"discussion_content":"突然断电了 怎么尽力？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605764991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101412,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1559803424,"is_pvip":false,"replies":[{"id":"36568","content":"目前看很难。Kafka不能推送消息给consumer。Consumer只能不断地轮训去获取消息。从Kafka流向consumer的唯一方式就是通过poll。另外维持一个长连接去轮训的开销通常也没有你想的那么大，特别是Kafka用的是Linux上的epoll，性能还不错，至少比select好。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559815102,"ip_address":"","comment_id":101412,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18739672608","product_id":100029201,"comment_content":"老师请教一个问题，对于发布&#47;订阅者模式来说，消息往往是存储在某种形式的队列中的，那如何把这个队列中的消息推送给消费者呢？我们公司的做法就是利用一个线程去轮询将消息分发到各自的消费者中；可是，从实际业务场景来看，往往消息生产者只在某个特定的时间段去生产消息，而且消息是少量的，几十到几百个；服务器一直开一个线程去轮询我总觉得有些浪费资源；请问除了轮询以外有没有其他办法？","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452954,"discussion_content":"目前看很难。Kafka不能推送消息给consumer。Consumer只能不断地轮训去获取消息。从Kafka流向consumer的唯一方式就是通过poll。另外维持一个长连接去轮训的开销通常也没有你想的那么大，特别是Kafka用的是Linux上的epoll，性能还不错，至少比select好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559815102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101298,"user_name":"杨俊","can_delete":false,"product_type":"c1","uid":1158214,"ip_address":"","ucode":"3CAE634618D924","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/46/7e24bad6.jpg","comment_is_top":false,"comment_ctime":1559779993,"is_pvip":true,"replies":[{"id":"36501","content":"Kafka的副本拉取是完全异步的。另外实际上最新版本已经不单纯依赖高水位来判断了，而是依靠leader epoch","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559781061,"ip_address":"","comment_id":101298,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18739649177","product_id":100029201,"comment_content":"领导者将数据同步到追随者副本既不是同步复制又不是异步复制，有一个isr列表维护，追随者副本自己去拉数据，有时候可能网络问题导致追随者副本之间存在数据不一致问题，高低水位不一样，isr列表的副本数也会不一样","like_count":4,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452897,"discussion_content":"Kafka的副本拉取是完全异步的。另外实际上最新版本已经不单纯依赖高水位来判断了，而是依靠leader epoch","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559781061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212292,"user_name":"孙同学","can_delete":false,"product_type":"c1","uid":1676238,"ip_address":"","ucode":"C6C82400D15336","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/ce/092acd6a.jpg","comment_is_top":false,"comment_ctime":1588084631,"is_pvip":false,"replies":[{"id":"78917","content":"也是有意义的。通常情况下单broker下多分区（不好太多）也要比单broker下单分区的TPS来的大","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588125444,"ip_address":"","comment_id":212292,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14472986519","product_id":100029201,"comment_content":"看了好多遍终于明白了分区和副本的关系，有多个broker才会有副本，一个broker里的topic进行分区是没有意义的","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493471,"discussion_content":"也是有意义的。通常情况下单broker下多分区（不好太多）也要比单broker下单分区的TPS来的大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588125444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207902,"user_name":"而立斋","can_delete":false,"product_type":"c1","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1587211893,"is_pvip":false,"replies":[{"id":"77597","content":"broker部署和topic，partition并无直接关联。不过通常情况下一个broker上的分区数不要超过2000。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587220293,"ip_address":"","comment_id":207902,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14472113781","product_id":100029201,"comment_content":"本来以为理解了，看了评论区之后更加糊涂了。还是能弄清楚 broker的部署，和topic partition有什么关系？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492276,"discussion_content":"broker部署和topic，partition并无直接关联。不过通常情况下一个broker上的分区数不要超过2000。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587220293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185230,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1583540458,"is_pvip":true,"replies":[{"id":"71718","content":"1. 一般来说，一个Broker就是一个Kafka服务器实例。集群中允许有多个Broker。实际上绝大多数情况下都是多实例的集群模式。<br>2. 向Topic生产消息本来就涉及到多个Broker。不同分区的数据可以由不同的Broker来处理。<br>3. 如果属于同一个消费者组，这些消费者不能同时消费同一个分区里面的消息。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1583666790,"ip_address":"","comment_id":185230,"utype":1}],"discussion_count":1,"race_medal":5,"score":"14468442346","product_id":100029201,"comment_content":"文章讲的很清楚，让我对Kafka的结构有了初步的认识，有几个问题想请教一下：<br>1. 一个Broker就是一个Kafka实例吗？在Kafka集群中，一个Kafka实例可以有多个Broker吗？<br>2. 一个Topic可以由多个Broker处理吗？topic下面不同的分区的数据可以由不同的Broker来处理吗？<br>3. 消费者组去消费消息的时候，不同的消费者可以同时消费同一个分区里面的消息吗？<br><br>上面的问题都比较基础，请见谅。<br>","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486299,"discussion_content":"1. 一般来说，一个Broker就是一个Kafka服务器实例。集群中允许有多个Broker。实际上绝大多数情况下都是多实例的集群模式。\n2. 向Topic生产消息本来就涉及到多个Broker。不同分区的数据可以由不同的Broker来处理。\n3. 如果属于同一个消费者组，这些消费者不能同时消费同一个分区里面的消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583666790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142715,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1053498,"ip_address":"","ucode":"59752A51A382A6","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/3a/b0454322.jpg","comment_is_top":false,"comment_ctime":1571473154,"is_pvip":false,"replies":[{"id":"55213","content":"同一个分区下分leader副本和follower副本。所有的副本都是指在同一个分区下的。leader和follower位于不同的broker，实现高可用","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571616189,"ip_address":"","comment_id":142715,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14456375042","product_id":100029201,"comment_content":"leader 副本 和 follower 副本 ，会在同一个分区么？应该在不同的分区吧，我理解有几个数据副本，就应该有几个分区，一个是leader，其他是follower，不然都在一个分区，对高可用没意义呀。。。","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471239,"discussion_content":"同一个分区下分leader副本和follower副本。所有的副本都是指在同一个分区下的。leader和follower位于不同的broker，实现高可用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571616189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1093421,"avatar":"https://static001.geekbang.org/account/avatar/00/10/af/2d/3dd65e6b.jpg","nickname":"xhkk","note":"","ucode":"B36B04D83B6C70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":531695,"discussion_content":"leader 和 follwer 位于不同的broker， 还能在同一个分区下？分区是可以跨broker的么 ？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637389129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":471239,"ip_address":""},"score":531695,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":123245,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1565652641,"is_pvip":false,"replies":[{"id":"45267","content":"1. Kafka程序的含义比较模糊，它也可能指Kafka客户端程序，如果是客户端，就不是Broker进程了。Broker是服务器端的概念<br>2. 通常还是建议将不同的Broker放在不同的机器上。所谓不同，也就是指server.properties中的配置不同，比如每个Broker的broker.id必须是唯一的。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565657060,"ip_address":"","comment_id":123245,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14450554529","product_id":100029201,"comment_content":"Kafka 的服务器端由被称为 Broker 的服务进程构成，即一个 Kafka 集群由多个 Broker 组成，Broker 负责接收和处理客户端发送过来的请求，以及对消息进行持久化。虽然多个 Broker 进程能够运行在同一台机器上，但更常见的做法是将不同的 Broker 分散运行在不同的机器上，这样如果集群中某一台机器宕机，即使在它上面运行的所有 Broker 进程都挂掉了，其他机器上的 Broker 也依然能够对外提供服务。这其实就是 Kafka 提供高可用的手段之一。<br>再次请教几个小问题：<br>1：启动一个kafka程序，就是启动一个broker进程服务嘛？<br>2：假设有三台服务器A&#47;B&#47;C，三个broker进程服务1&#47;2&#47;3，老师的建议是将1&#47;2&#47;3三个broker进程同时分别放在A&#47;B&#47;C三台机器上吗？还有不同的broker是什么概念？他们应该都是同样的kafka程序，启动后进程号会不一样，这里的不同的broker是以什么角度讲的？<br>初学，感觉这个broker的意思没弄明白，望老师或其它同学帮忙解答一下。","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462596,"discussion_content":"1. Kafka程序的含义比较模糊，它也可能指Kafka客户端程序，如果是客户端，就不是Broker进程了。Broker是服务器端的概念\n2. 通常还是建议将不同的Broker放在不同的机器上。所谓不同，也就是指server.properties中的配置不同，比如每个Broker的broker.id必须是唯一的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565657060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110140,"user_name":"小名叫大明","can_delete":false,"product_type":"c1","uid":1129317,"ip_address":"","ucode":"4804D68A396B40","user_header":"https://static001.geekbang.org/account/avatar/00/11/3b/65/203298ce.jpg","comment_is_top":false,"comment_ctime":1562200579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14447102467","product_id":100029201,"comment_content":"虽然很多大神都已经详细的回答了老师课后留的问题，但还是记录一下在没有看留言区内容时自己想到的答案。 <br><br>kafka之所以没有考虑 从副本 对外提供服务还是因为基于一致性维护成本的考虑 <br><br>留言区得到的更具体的有: <br><br>1. 一致性的考虑<br>2. kafka的消息分区及主副本已经实现了类似于MySQL主节点需要从节点支持读要解决的问题: 主节点写及读压力<br>3. 其他","like_count":3},{"had_liked":false,"id":102105,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1560137156,"is_pvip":false,"replies":[{"id":"36837","content":"我个人觉得只要有助于正确理解Kafka，具体的说法并不是那么重要。&quot;副本是在分区层级下的&quot;的依据是在Kafka的源码Partition.scala中，每个分区对象都保存了一个hashmap，map中的对象就是Replica副本对象。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560156393,"ip_address":"","comment_id":102105,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14445039044","product_id":100029201,"comment_content":"老师你好，<br><br>副本：Replica。Kafka 中同一条消息能够被拷贝到多个地方以提供数据冗余，这些地方就是所谓的副本。副本还分为领导者副本和追随者副本，各自有不同的角色划分。副本是在分区层级下的，即每个分区可配置多个副本实现高可用。<br><br>“副本是在分区层级下的”感觉这么说不太准确，副本应该是分区的拷贝，和分区应该属于同一层级。<br><br>","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453261,"discussion_content":"我个人觉得只要有助于正确理解Kafka，具体的说法并不是那么重要。&amp;quot;副本是在分区层级下的&amp;quot;的依据是在Kafka的源码Partition.scala中，每个分区对象都保存了一个hashmap，map中的对象就是Replica副本对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560156393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101601,"user_name":"huaweichen","can_delete":false,"product_type":"c1","uid":1249907,"ip_address":"","ucode":"974917DE2AE92E","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/73/2183839d.jpg","comment_is_top":false,"comment_ctime":1559879912,"is_pvip":false,"replies":[{"id":"36805","content":"很多问题都是开放式的，没有具体的答案。主要是想让大家一起思考一下。正确与否不重要，关键是能够参与到讨论：）<br><br>你说的我是赞同的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560135334,"ip_address":"","comment_id":101601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14444781800","product_id":100029201,"comment_content":"和一些朋友讨论了一下：<br>1. 首先Partition已经承担了Master-Slave的“高性能”功效。<br>2. Follower的设计和存在，是为了“高可用”的目的，所以“高性能”的重担不在它的肩上。<br>3. Leader是source of truth，所以读写都应该在leader上。<br>4. 由于有__consumer_offsets的机制，每次读写都应该是在leader上，如果replica也参与了read服务，那么consumer offet就乱了。<br><br>不知道对不对。<br><br>老师，答案会公布在哪里啊？","like_count":3,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453030,"discussion_content":"很多问题都是开放式的，没有具体的答案。主要是想让大家一起思考一下。正确与否不重要，关键是能够参与到讨论：）\n\n你说的我是赞同的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560135334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207240,"user_name":"W","can_delete":false,"product_type":"c1","uid":1254217,"ip_address":"","ucode":"CEBEB8042DE386","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/49/5a3f295a.jpg","comment_is_top":false,"comment_ctime":1587031703,"is_pvip":true,"replies":[{"id":"77466","content":"嗯嗯，确实有很大一部分原因是这个~","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587089169,"ip_address":"","comment_id":207240,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10176966295","product_id":100029201,"comment_content":"我的理解是，mysql其实主从节点之间也会存在主从延迟，数据不一致的问题，针对一些要求数据强实时性，强一致性的业务来说，最好不要使用读写分离的方案。数据库中存在数据历史版本的概念，而kafka中的是流数据的概念","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492054,"discussion_content":"嗯嗯，确实有很大一部分原因是这个~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587089169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206364,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1586847418,"is_pvip":false,"replies":[{"id":"77343","content":"是的。这是很重要的原因。另外社区目前已经实现了有限度的主从分离功能，惊不惊喜：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1587004260,"ip_address":"","comment_id":206364,"utype":1}],"discussion_count":1,"race_medal":1,"score":"10176782010","product_id":100029201,"comment_content":"简单看了下评论，基本上回答了课后的思考，但都没提到数据一致性的问题，如果允许从follower节点读取数据，那么因为主从延迟使得无法快速获取数据，另外还会导致即使在一个partition中的数据也无法保证顺序性。","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491763,"discussion_content":"是的。这是很重要的原因。另外社区目前已经实现了有限度的主从分离功能，惊不惊喜：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587004260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186914,"user_name":"ty","can_delete":false,"product_type":"c1","uid":1323305,"ip_address":"","ucode":"EA3B3A3E7AF62F","user_header":"","comment_is_top":false,"comment_ctime":1583970022,"is_pvip":false,"replies":[{"id":"72112","content":"差不多可以这样理解：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1583975860,"ip_address":"","comment_id":186914,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173904614","product_id":100029201,"comment_content":"胡老师你好，请问副本是日志文件吗","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486917,"discussion_content":"差不多可以这样理解：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583975860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185237,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1583542574,"is_pvip":true,"replies":[{"id":"71717","content":"可以的。你可以控制消息保存在哪个分区中以及分区保存在哪个（些）broker上","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1583666658,"ip_address":"","comment_id":185237,"utype":1}],"discussion_count":1,"race_medal":5,"score":"10173477166","product_id":100029201,"comment_content":"再请教一个问题，Topic是承载消息的逻辑容器，那么从物理存储角度来看，不同的Topic，消息存储可以做到物理隔离吗？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486303,"discussion_content":"可以的。你可以控制消息保存在哪个分区中以及分区保存在哪个（些）broker上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583666658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147106,"user_name":"懒懒的龟","can_delete":false,"product_type":"c1","uid":1673894,"ip_address":"","ucode":"1B2B9DB4DE3883","user_header":"","comment_is_top":false,"comment_ctime":1572795420,"is_pvip":false,"replies":[{"id":"56828","content":"它们都是值","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1572831995,"ip_address":"","comment_id":147106,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10162730012","product_id":100029201,"comment_content":"消息位移和消费者位移都是一个固定的值吗，还是一个范围值。","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473148,"discussion_content":"它们都是值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572831995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144584,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1571973291,"is_pvip":true,"replies":[{"id":"55956","content":"是的。消费者组之间没有关联","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1572225000,"ip_address":"","comment_id":144584,"utype":1}],"discussion_count":1,"race_medal":2,"score":"10161907883","product_id":100029201,"comment_content":"老师说点对点的实现方式通过消费组，但是如果多个消费组订阅了同一个 topic ，是不是同一个消息依然会被多个消费组的消费者去消费？","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472015,"discussion_content":"是的。消费者组之间没有关联","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572225000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107380,"user_name":"beiliu","can_delete":false,"product_type":"c1","uid":1292128,"ip_address":"","ucode":"06E1EC1244A52B","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLmBgic9UlGySyG377pCVzNnbgsGttrKTCFztunJlBTDS32oTyHsJjAFJJsYJyhk9cNE5OZeGKWJ6Q/132","comment_is_top":false,"comment_ctime":1561523967,"is_pvip":false,"replies":[{"id":"38937","content":"专栏后面会有介绍。不过你要是着急的话，不妨试试：<br>bin&#47;kafka-run-class.sh kafka.tools.GetOffsetShell  <br>命令","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561596532,"ip_address":"","comment_id":107380,"utype":1}],"discussion_count":2,"race_medal":1,"score":"10151458559","product_id":100029201,"comment_content":"老师，您好，那我想问一下，怎么使用自带带shell脚本获取到某个topic的当前最新的offset位置呀","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455493,"discussion_content":"专栏后面会有介绍。不过你要是着急的话，不妨试试：\nbin/kafka-run-class.sh kafka.tools.GetOffsetShell  \n命令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561596532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46329,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573140659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105827,"user_name":"jacke","can_delete":false,"product_type":"c1","uid":1161209,"ip_address":"","ucode":"05F355E1FF88C5","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/f9/a8f26b10.jpg","comment_is_top":false,"comment_ctime":1561090017,"is_pvip":false,"replies":[{"id":"38297","content":"第一，我们不可能只选择往一个分区发送消息吧。<br><br>第二，分区是在主题之下的，分区不可用了表示clients无法访问这个主题下的分区了。<br><br>第三，offset保存在broker端的内部topic中，不是在clients中保存。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561104497,"ip_address":"","comment_id":105827,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10151024609","product_id":100029201,"comment_content":"胡老师问几个问题：<br>第一个：<br>每个主题划分成多个分区（Partition), 每个分区有多个备份，但是生产者生产的每条消息只会被发送到一个分区中，那其他没有使用的分区有什么用？<br>还有在回答去，副本在broker上的分配策略相关的：<br><br>“如果ISR为空，看是否开启了unclean leader选举，如果没有开启，那么Kafka干脆就不选leader了，直接将分区置于不可用状态；”<br>分区不可用，这样的情况下，是不是分区上所有的主题都不能读写了？<br>第二个：<br>      多个消费者可以消费同一个主题，那消费者自己的offset，是不是保存在client端？<br>","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454827,"discussion_content":"第一，我们不可能只选择往一个分区发送消息吧。\n\n第二，分区是在主题之下的，分区不可用了表示clients无法访问这个主题下的分区了。\n\n第三，offset保存在broker端的内部topic中，不是在clients中保存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561104497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104137,"user_name":"亦然","can_delete":false,"product_type":"c1","uid":1380477,"ip_address":"","ucode":"088B2C5DFB6032","user_header":"https://static001.geekbang.org/account/avatar/00/15/10/7d/26f0c0d0.jpg","comment_is_top":false,"comment_ctime":1560663359,"is_pvip":false,"replies":[{"id":"37739","content":"同意：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560687567,"ip_address":"","comment_id":104137,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10150597951","product_id":100029201,"comment_content":"课后思考题<br>看了大家的回答，我也从功能角度说说看吧。<br>Master-Slave 模式主要是为了减轻读的压力，而对于一致性的话，数据库这种只需要保证最终一致性即可。但是对于 Kafka 这种消息系统来说，从每个分区读也是实现了负载均衡，但是需要保证强一致性，避免不同节点读到数据滞后等情况。","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454140,"discussion_content":"同意：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560687567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103871,"user_name":"rm -rf 😊ི","can_delete":false,"product_type":"c1","uid":1070908,"ip_address":"","ucode":"BC448EC4206D95","user_header":"https://static001.geekbang.org/account/avatar/00/10/57/3c/081b89ec.jpg","comment_is_top":false,"comment_ctime":1560557261,"is_pvip":false,"replies":[{"id":"37576","content":"有一定道理：） ","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560559080,"ip_address":"","comment_id":103871,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10150491853","product_id":100029201,"comment_content":"我的理解是，kafka如果提供副本的读，可能会导致消息被重复消费，不好保证消费者的幂等性。mysql不一样，读的内容是完全可以重复并且不需要幂等性保障","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454035,"discussion_content":"有一定道理：） ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560559080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102561,"user_name":"sljoai","can_delete":false,"product_type":"c1","uid":1018071,"ip_address":"","ucode":"FF88C4BA265DE0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/d7/07f8bc6c.jpg","comment_is_top":false,"comment_ctime":1560252463,"is_pvip":false,"replies":[{"id":"37184","content":"取不出数据时，有什么报错吗？另外你的fetch.max.bytes值多少？","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560308980,"ip_address":"","comment_id":102561,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10150187055","product_id":100029201,"comment_content":"老师，请问一下影响KafkaConsumer.poll能否读取出数据的因素有哪些呢？<br>场景：使用assign的方式获取数据，且poll的超时时间设置成1s。<br>1.消息本身较大时，当将max.partition.fetch.bytes设置成52428800（50MB）时无法读取出数据；当将max.partition.fetch.bytes变小些时，比如10M，就可以读取出数据。<br>2.消息本身较小时，max.partition.fetch.bytes为50MB时，也能读取出数据；","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453479,"discussion_content":"取不出数据时，有什么报错吗？另外你的fetch.max.bytes值多少？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560308980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102106,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1560137714,"is_pvip":false,"replies":[{"id":"36838","content":"1. 客户端会首先请求topic分区的leader副本在哪个broker上，内部自动执行的，你无需操心；<br>2. 记下了你的建议，后面我会注意的。另外专栏后面关于客户端运行机制的介绍：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560156508,"ip_address":"","comment_id":102106,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10150072306","product_id":100029201,"comment_content":"老师你好，<br>有两个疑问：<br>1、文中说的Leader-Follower 指的是副本之间的关系，broker之间是对等关系，对吧？如果是对等关系，生产和消费时我怎么找到领导者副本所在的broker呢？<br>2、希望老师大致描述一下生产和消费时Kafka内部的处理流程？（如果能画个图,那将感激不尽）<br>谢谢老师。<br>","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453262,"discussion_content":"1. 客户端会首先请求topic分区的leader副本在哪个broker上，内部自动执行的，你无需操心；\n2. 记下了你的建议，后面我会注意的。另外专栏后面关于客户端运行机制的介绍：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560156508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101449,"user_name":"大番茄","can_delete":false,"product_type":"c1","uid":1180183,"ip_address":"","ucode":"8F19A295B9653B","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/17/2930d112.jpg","comment_is_top":false,"comment_ctime":1559810904,"is_pvip":false,"replies":[{"id":"36566","content":"就像专栏里面说的，副本是在分区层级下定义的，即一个分区能够配置多个副本。生产者向分区写消息时其实是向leader副本写消息。其他follower副本主动去leader副本拉取这条消息实现同步。不知道这么解释清楚点了吗","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559814353,"ip_address":"","comment_id":101449,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10149745496","product_id":100029201,"comment_content":"首次接触kafka，有个理解疑问麻烦解惑：<br>    在：刚才提到的副本如何与这里的分区联系在 ，生产者向分区写入消息， 这个消息是和副本之间是种什么关系的啊？<br><br>另外，这个关系老师可以出张图表示吗，感谢！<br> <br> ","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452968,"discussion_content":"就像专栏里面说的，副本是在分区层级下定义的，即一个分区能够配置多个副本。生产者向分区写消息时其实是向leader副本写消息。其他follower副本主动去leader副本拉取这条消息实现同步。不知道这么解释清楚点了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559814353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101434,"user_name":"石妖","can_delete":false,"product_type":"c1","uid":1230322,"ip_address":"","ucode":"C6DD9EFEDD2416","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/f2/fccf87bb.jpg","comment_is_top":false,"comment_ctime":1559808029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10149742621","product_id":100029201,"comment_content":"课后问题，我觉得是以下两个原因：<br>1.数据库中数据的读取只是数据的展示，而kafka中消息的读取意味着消费，consumer offset就会随之增加，kafka中的读取“相当于”MySQL中的更新，这两者的逻辑是不同的；<br>2.kafka集群可以通过增加partition及broker的方式实现负载均衡，并不需要从follower replica读取（消费）消息，那样会增加维护consumer offset的难度；而由于第一点的差异，使得MySQL可以通过将follower数据对外提供服务的方式来减轻leader节点的压力，实现读写分离，从而达到负载均衡。","like_count":2},{"had_liked":false,"id":101393,"user_name":"皮皮","can_delete":false,"product_type":"c1","uid":1156624,"ip_address":"","ucode":"D692CFAA982137","user_header":"https://static001.geekbang.org/account/avatar/00/11/a6/10/3ff2e1a5.jpg","comment_is_top":false,"comment_ctime":1559798629,"is_pvip":true,"replies":[{"id":"36564","content":"目前Kafka不支持第三种“折中”办法。。。要么只写leader，要么所有follower全部同步。但是，我同意很多分布式系统是可以配置同步follower和异步follower共存的，比如一个同步follower+N-1个异步follower的伪同步。Facebook的MySQL就是这个原理，参见http:&#47;&#47;yoshinorimatsunobu.blogspot.com&#47;2014&#47;04&#47;semi-synchronous-replication-at-facebook.html","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559814224,"ip_address":"","comment_id":101393,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10149733221","product_id":100029201,"comment_content":"前面有同学在问replica的leader和follower之间如何复制数据保证消息的持久化的问题，我了解的是有3种模式：1.生产者消息发过来以后，写leader成功后即告知生产者成功，然后异步的将消息同步给其他follower，这种方式效率最高，但可能丢数据；2.同步等待所有follower都复制成功后通知生产者消息发送成功，这样不会丢数据，但效率不高；3.折中的办法，同步等待部分follower复制成功，如1个follower复制成功再返回，这样兼顾效率和消息的持久化。具体选择哪种要根据业务情况进行选择。说的不对的地方请老师斧正。","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452943,"discussion_content":"目前Kafka不支持第三种“折中”办法。。。要么只写leader，要么所有follower全部同步。但是，我同意很多分布式系统是可以配置同步follower和异步follower共存的，比如一个同步follower+N-1个异步follower的伪同步。Facebook的MySQL就是这个原理，参见http://yoshinorimatsunobu.blogspot.com/2014/04/semi-synchronous-replication-at-facebook.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559814224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101282,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1559777877,"is_pvip":true,"replies":[{"id":"36493","content":"Kafka不是PUSH模型，而是PULL模型，即follower副本不断地从leader处拉取消息。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559780426,"ip_address":"","comment_id":101282,"utype":1}],"discussion_count":1,"race_medal":1,"score":"10149712469","product_id":100029201,"comment_content":"至于追随者副本，它只做一件事：向领导者副本发送请求，请求领导者把最新生产的消息发给它，这样它能保持与领导者的同步...<br>kafka 不是领导者副本向追随者副本 推送消息吗？ 这里说的是追随者副本向领导者副本拉取消息？<br><br><br>极客时间版权所有: https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;99318","like_count":2,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452888,"discussion_content":"Kafka不是PUSH模型，而是PULL模型，即follower副本不断地从leader处拉取消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559780426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341359,"user_name":"非洲黑猴子","can_delete":false,"product_type":"c1","uid":2639724,"ip_address":"","ucode":"F5FEAC07D562E0","user_header":"https://static001.geekbang.org/account/avatar/00/28/47/6c/78184d19.jpg","comment_is_top":false,"comment_ctime":1649566307,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"5944533603","product_id":100029201,"comment_content":"请思考一下为什么 Kafka 不像 MySQL 那样允许追随者副本对外提供读服务？<br>我觉得应该是Kafka仗着处理的业务简单+自己本身的设计所带来的高性能， 导致了单个Leader节点就能应付各种读写才这么做的。<br>1. 业务简单： 队列的数据结构比较简单，不像MySQL是个B+树，Kafka的每个分区就是记录流水账，顺着往下写就好<br>2. 性能好：<br>    a. NIO多路复用的方式读取生产者发来的消息<br>    b. 充分利用系统内存的Page Cache异步刷盘<br>    c. 对磁盘进行顺序读写，远快于MySQL的随机读写<br>    d. sendfile 把消息发出去，性能很高<br>    e. 如果consumer一直在读取，则以上的 a + b + d = 消息不进入用户态的处理，直接从NIO读进内核的page cache内存，然后通过sendfile这个系统调用，走DMA发出去，则数据还没落盘，就像在broker上“打水漂”一样从生产者传递给了消费者<br>    f. 多个Partition增加了并行度和单位时间内的吞吐量<br>另外，Kafka这么做还避免了MySQL主从数据不一致所带来的各种困扰，这也有点像Redis选择的单线程的原因吧","like_count":1},{"had_liked":false,"id":242705,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1597820750,"is_pvip":false,"replies":[{"id":"89542","content":"我其实并没有太理解造成重复读的原因。从follower读主要的麻烦在于滞后性，因为follower通常落后于leader，所以有可能读不到消息。。。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1597885225,"ip_address":"","comment_id":242705,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5892788046","product_id":100029201,"comment_content":"我还不是很了解kafka哈，但感觉如果从follower读的话，消费端模型会异常复杂，还要解决“重复”读的问题。因为现在我只要读每个broker的leader就可以拿到所有的数据，但要是不区分leader和follower来读数据的话，客户端要想拿到完整的数据，就需要确定有多少topic、topic有多少分区、分区分布在那些机器，这样才不会漏数据；而且如果一个消费者随意读一台机器上的partition，总的来看，会造成大量重复读。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504079,"discussion_content":"我其实并没有太理解造成重复读的原因。从follower读主要的麻烦在于滞后性，因为follower通常落后于leader，所以有可能读不到消息。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597885225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233038,"user_name":"时光守护者-基兰","can_delete":false,"product_type":"c1","uid":1554995,"ip_address":"","ucode":"F0B0887B1979D2","user_header":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","comment_is_top":false,"comment_ctime":1594199472,"is_pvip":false,"replies":[{"id":"86020","content":"是要加1的。每条消息被写入到日志之后它的位移值就不变了","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1594256417,"ip_address":"","comment_id":233038,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5889166768","product_id":100029201,"comment_content":"原文：上面的“位移”表征的是分区内的消息位置，它是不变的，即一旦消息被成功写入到一个分区上，它的位移值就是固定的了<br><br>问题：那新来的一个消息又写入到这个分区，位移值是不是要加1？这里的位移值固定怎么理解呢","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500864,"discussion_content":"是要加1的。每条消息被写入到日志之后它的位移值就不变了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594256417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2405411,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b4/23/0e296758.jpg","nickname":"姜尧","note":"","ucode":"D813E046DD81E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381735,"discussion_content":"老师还在吗？随着新消息的不停写入，新消息的位移值就无限大了？直到..?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625195959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212295,"user_name":"孙同学","can_delete":false,"product_type":"c1","uid":1676238,"ip_address":"","ucode":"C6C82400D15336","user_header":"https://static001.geekbang.org/account/avatar/00/19/93/ce/092acd6a.jpg","comment_is_top":false,"comment_ctime":1588084798,"is_pvip":false,"replies":[{"id":"78916","content":"嗯，很好的建议~","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1588125406,"ip_address":"","comment_id":212295,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5883052094","product_id":100029201,"comment_content":"图中producer不应该只向broker0写数据，应该画个大框，表示集群，是向集群中写数据，然后集群负责算法将数据写入哪个broker的partition","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493472,"discussion_content":"嗯，很好的建议~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588125406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192094,"user_name":"冬风向左吹","can_delete":false,"product_type":"c1","uid":1066928,"ip_address":"","ucode":"376C45C5134F93","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/b0/a9b77a1e.jpg","comment_is_top":false,"comment_ctime":1584837287,"is_pvip":false,"replies":[{"id":"73516","content":"partition的作用在于分区，将海量的消息划分到不同的broker上进行处理，至于分区下的副本主要目的在于备份，两者的目的不是一样的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1584846770,"ip_address":"","comment_id":192094,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879804583","product_id":100029201,"comment_content":"如果允许follower节点提供读，应该就可以省掉partition这个概念，设计上岂不是更简单？增加partition这个概念无非就是分担只有一个主节点的压力，像数据同步，记录消费者的位移，放在哪里做不是做，follower一样可以做","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488324,"discussion_content":"partition的作用在于分区，将海量的消息划分到不同的broker上进行处理，至于分区下的副本主要目的在于备份，两者的目的不是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584846770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188610,"user_name":"『SIGNIFICANT』","can_delete":false,"product_type":"c1","uid":1697419,"ip_address":"","ucode":"1F661466FE5F97","user_header":"https://static001.geekbang.org/account/avatar/00/19/e6/8b/27d0d277.jpg","comment_is_top":false,"comment_ctime":1584374433,"is_pvip":false,"replies":[{"id":"72768","content":"您的意思是特定时间段的消息必须要在某个时间点前消费完否则就失效了，是吗？如果是这样的话只能加速您的consumer消费速度了。事实上，流处理中的窗口化就是类似的想法","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1584408358,"ip_address":"","comment_id":188610,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879341729","product_id":100029201,"comment_content":"如果消息中包含时间，而消费端消费和这个时间强相关，要是消费不过来，岂不是接收到的数据都会被认为是已经过时的不正确的数据，怎么解决这个问题。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487466,"discussion_content":"您的意思是特定时间段的消息必须要在某个时间点前消费完否则就失效了，是吗？如果是这样的话只能加速您的consumer消费速度了。事实上，流处理中的窗口化就是类似的想法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584408358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188354,"user_name":"大坏狐狸","can_delete":false,"product_type":"c1","uid":1325678,"ip_address":"","ucode":"5044F89A505C5B","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/6e/e39e90ca.jpg","comment_is_top":false,"comment_ctime":1584344081,"is_pvip":false,"replies":[{"id":"72771","content":"感谢鼓励：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1584408410,"ip_address":"","comment_id":188354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879311377","product_id":100029201,"comment_content":"非常优秀 我应该早点看的。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487386,"discussion_content":"感谢鼓励：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584408410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177670,"user_name":"宋强","can_delete":false,"product_type":"c1","uid":1564605,"ip_address":"","ucode":"119A0B00ABDA7B","user_header":"","comment_is_top":false,"comment_ctime":1581471300,"is_pvip":false,"replies":[{"id":"68976","content":"是的：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1581471979,"ip_address":"","comment_id":177670,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5876438596","product_id":100029201,"comment_content":"一个主题可以拆分成若干个分区，一个消费者要记录每个分区当前消费的位置是吧","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483502,"discussion_content":"是的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581471979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174403,"user_name":"Es muss sein","can_delete":false,"product_type":"c1","uid":1142531,"ip_address":"","ucode":"E1D3A4C1BF9EB5","user_header":"https://static001.geekbang.org/account/avatar/00/11/6f/03/b1d8942c.jpg","comment_is_top":false,"comment_ctime":1580194816,"is_pvip":false,"replies":[{"id":"67904","content":"没有上限。也没有放之四海而皆准的标准推荐数量，只能根据自身的硬件条件逐渐测试。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1580368299,"ip_address":"","comment_id":174403,"utype":1}],"discussion_count":1,"race_medal":2,"score":"5875162112","product_id":100029201,"comment_content":"想问一个问题，就是一个topic内所能够承载的分区数目有没有一个上限？如果没有，那么分区的数量在多少是比较合适的，才不会对性能有较大的影响呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482393,"discussion_content":"没有上限。也没有放之四海而皆准的标准推荐数量，只能根据自身的硬件条件逐渐测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580368299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170740,"user_name":"CDz","can_delete":false,"product_type":"c1","uid":1114779,"ip_address":"","ucode":"A23BEE1C4A5922","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/9b/b1a3c60d.jpg","comment_is_top":false,"comment_ctime":1578701797,"is_pvip":false,"replies":[{"id":"66337","content":"目前最新版本支持有限度的follower对外提供读服务","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1578877007,"ip_address":"","comment_id":170740,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5873669093","product_id":100029201,"comment_content":"请思考一下为什么 Kafka 不像 MySQL 那样允许追随者副本对外提供读服务？<br><br>消息系统的设计场景，很少有重复读的情况（生产——&gt;消费）<br>加上kafka已经对topic做了分区，分布在不同的broker上，如果分布的均匀，已经是做到了均衡负载的情况","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481092,"discussion_content":"目前最新版本支持有限度的follower对外提供读服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578877007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1617421,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ae/0d/3e89877b.jpg","nickname":"Phil","note":"","ucode":"CBD45271013B2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170966,"discussion_content":"均衡负载只有在topic很多，很平均的情况下吧，如果存在一个热点topic，那么这个topic的分区所在的broker就会承载大部分的负载，造成负载不均，follower提供读服务可以最大限度的均衡负载吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581689804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169281,"user_name":"SAM(陈嘉奇)","can_delete":false,"product_type":"c1","uid":1430905,"ip_address":"","ucode":"7A7B2767DE22E0","user_header":"https://static001.geekbang.org/account/avatar/00/15/d5/79/3d711fed.jpg","comment_is_top":false,"comment_ctime":1578304520,"is_pvip":false,"replies":[{"id":"65686","content":"首先创建一个类实现org.apache.kafka.clients.producer.Partitioner接口，然后指定producer的partitioner.class属性为该类的地址即可实现你自己的分区逻辑。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1578358874,"ip_address":"","comment_id":169281,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5873271816","product_id":100029201,"comment_content":"老师你好，<br>我想问下,如果producer指定了要发送的目标分区，消息自然是去到那个分区.这里的producer是怎么指定的?因为我这边有三个分区,只用到了第一个分区.谢谢.","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480491,"discussion_content":"首先创建一个类实现org.apache.kafka.clients.producer.Partitioner接口，然后指定producer的partitioner.class属性为该类的地址即可实现你自己的分区逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578358874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160414,"user_name":"man1s","can_delete":false,"product_type":"c1","uid":1466953,"ip_address":"","ucode":"FFDB6B52F65A1B","user_header":"https://static001.geekbang.org/account/avatar/00/16/62/49/6332c99b.jpg","comment_is_top":false,"comment_ctime":1575947265,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870914561","product_id":100029201,"comment_content":"1、mysql每次查询时独立的，kafka的每次消费是依据上一次的消费位移的<br>2、mysql每个从库持有所有的数据，从库查询可以很好的降低主库的负载，kafka数据分布在不同的broken上，天然的负载均衡<br>3、由于天然的负载均衡，每个broken都不会闲着，不会像mysql那样性能瓶颈在主节点上，follow读反而会导致延时，得不偿失","like_count":1},{"had_liked":false,"id":151409,"user_name":"redis","can_delete":false,"product_type":"c1","uid":1066278,"ip_address":"","ucode":"91C54605384F51","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/26/f54c9888.jpg","comment_is_top":false,"comment_ctime":1573714836,"is_pvip":false,"replies":[{"id":"58593","content":"同一个分区的多个副本一定分布在不同的Broker上","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1574039352,"ip_address":"","comment_id":151409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868682132","product_id":100029201,"comment_content":"副本分区不同的broke上面吗？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474465,"discussion_content":"同一个分区的多个副本一定分布在不同的Broker上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574039352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149742,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1324863,"ip_address":"","ucode":"FFC31A3FE3A285","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","comment_is_top":false,"comment_ctime":1573361971,"is_pvip":false,"replies":[{"id":"57662","content":"hmmm..... 我们姑且认为Replica是广义的概念吧：） 不用纠结于这么的严格概念定义","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1573432792,"ip_address":"","comment_id":149742,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5868329267","product_id":100029201,"comment_content":"有一个概念容易被混淆：实现高可用的另一个手段就是备份机制（Replication），既然是备份，应该就是备用的意思，不对外提供服务。但分区中却存在两个概念，Leader副本和Follower副本，Leader副本对外提供服务，Follower副本不对外提供服务，都是副本，都是备份，为什么还都提供服务呢？与“备用”这个概念容易理解混淆","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473962,"discussion_content":"hmmm..... 我们姑且认为Replica是广义的概念吧：） 不用纠结于这么的严格概念定义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573432792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144033,"user_name":"Geek_9577e8","can_delete":false,"product_type":"c1","uid":1643916,"ip_address":"","ucode":"6888DAD84BA992","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqHftpcZg7icWktaUiaCXSc0e8OwcjPqiatIhxJ77JclUH22qrjxYqZcJ46f7wtoqEIYSx3UJ26OZ4g/132","comment_is_top":false,"comment_ctime":1571828902,"is_pvip":false,"replies":[{"id":"55620","content":"&quot;是否一个consumer可以消费多个partition的数据&quot; --- 可以的<br>“是否一个partition可以被同一个group中的多个consumer消费” --- 不可以的，只能被组内的一个consumer实例消费","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1571877744,"ip_address":"","comment_id":144033,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5866796198","product_id":100029201,"comment_content":"老师我想问下<br>若干个partition 被同一个group中若干个consumer 同时消费，达到消费者高吞吐量。<br>是否一个consumer可以消费多个partition的数据(我觉得这样是没问题的)？那是否一个partition可以被同一个group中的多个consumer消费(我觉得如果是这样是有问题的，因为每个Consumer都有自己的Consumer Offset，就会出现同一条数据被多个consumer消费)？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471787,"discussion_content":"&amp;quot;是否一个consumer可以消费多个partition的数据&amp;quot; --- 可以的\n“是否一个partition可以被同一个group中的多个consumer消费” --- 不可以的，只能被组内的一个consumer实例消费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571877744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1643916,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqHftpcZg7icWktaUiaCXSc0e8OwcjPqiatIhxJ77JclUH22qrjxYqZcJ46f7wtoqEIYSx3UJ26OZ4g/132","nickname":"Geek_9577e8","note":"","ucode":"6888DAD84BA992","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39008,"discussion_content":"感谢回复。也可以说，partition数量要大于等于一个group内consumer数量？那如果小于的话会发生什么现象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571877991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1643916,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqHftpcZg7icWktaUiaCXSc0e8OwcjPqiatIhxJ77JclUH22qrjxYqZcJ46f7wtoqEIYSx3UJ26OZ4g/132","nickname":"Geek_9577e8","note":"","ucode":"6888DAD84BA992","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294347,"discussion_content":"富余的Consumer就不干活了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595858849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39008,"ip_address":""},"score":294347,"extra":""}]}]},{"had_liked":false,"id":141497,"user_name":"未未的未来","can_delete":false,"product_type":"c1","uid":1117268,"ip_address":"","ucode":"7E271691F5BF65","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/54/b829b6cc.jpg","comment_is_top":false,"comment_ctime":1571185742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5866153038","product_id":100029201,"comment_content":"术语还是挺多的，感觉得用白板画一下，加深下印象和理解。感谢老师。","like_count":1},{"had_liked":false,"id":138788,"user_name":"橡皮泥boy","can_delete":false,"product_type":"c1","uid":1011863,"ip_address":"","ucode":"478F5417EDD249","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/97/e5bf9ddb.jpg","comment_is_top":false,"comment_ctime":1570450588,"is_pvip":true,"replies":[{"id":"53464","content":"follower副本会不停地同步leader副本的消息，当leader副本挂掉后，follower副本就派上用场了，Kafka从ISR的follower副本中选择一个出来当新的leader","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1570495310,"ip_address":"","comment_id":138788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865417884","product_id":100029201,"comment_content":"老师，从这一讲里，没法看出follower副本的实际作用，如果说能提高数据可靠性的话，具体体现在哪些地方呢？kafka会在什么时候使用这些follower副本？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469644,"discussion_content":"follower副本会不停地同步leader副本的消息，当leader副本挂掉后，follower副本就派上用场了，Kafka从ISR的follower副本中选择一个出来当新的leader","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570495310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135573,"user_name":"肥low","can_delete":false,"product_type":"c1","uid":1043480,"ip_address":"","ucode":"A158AFAAB8C742","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","comment_is_top":false,"comment_ctime":1569217987,"is_pvip":false,"replies":[{"id":"51989","content":"不用太客气。<br>1、感觉没什么问题<br>2、消费者是广义的，因为还存在standalone consumer","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1569230165,"ip_address":"","comment_id":135573,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5864185283","product_id":100029201,"comment_content":"纠正两个地方,不知道我说的准不准确:<br><br>1、为什么要引入消费者组呢？主要是为了提升消费者端的吞吐量<br>\t这个吞吐量应该是由分区(队列)和消费者的数量决定的,理论上应该保持分区数量和消费者数量一致,而不是说多个消费者争夺一个队列的情况,这种在消费组内是允许的但是并不能解决性能的问题,因为队列角度讲,消息还是一个一个的严格按照队列顺序来消费的<br><br>2、每个消费者在消费消息的过程中必然需要有个字段记录它当前消费到了分区的哪个位置上，这个字段就是消费者位移（Consumer Offset)<br>\t应该是每个消费组对应到每个分区上有个最新的消费位置,而不是消费者<br><br>如果我理解的有误,请及时纠正我,谢谢<br>","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468253,"discussion_content":"不用太客气。\n1、感觉没什么问题\n2、消费者是广义的，因为还存在standalone consumer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569230165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043480,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","nickname":"肥low","note":"","ucode":"A158AFAAB8C742","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19858,"discussion_content":"我理解的是 我们有些业务场景是需要重复消费同一天消息的 比如订单主题 消费组可以有财务、运营、大数据等 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569231276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043480,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","nickname":"肥low","note":"","ucode":"A158AFAAB8C742","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19854,"discussion_content":"1我还是有点不理解 怎么会是提高吞吐量呢😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569230989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1348830,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/SM4fwn9uFicXU8cQ1rNF2LQdKNbZI1FX1jmdwaE2MTrBawbugj4TQKjMKWG0sGbmqQickyARXZFS8NZtobvoWTHA/132","nickname":"td901105","note":"","ucode":"32D42A4F36FA02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1043480,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","nickname":"肥low","note":"","ucode":"A158AFAAB8C742","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":120741,"discussion_content":"消费者组可以包含多个消费者,消费者可以消费同一个topic下的不同队列,所以可以看成是并行的,提高性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578292531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":19854,"ip_address":""},"score":120741,"extra":""}]}]},{"had_liked":false,"id":134695,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1568896666,"is_pvip":false,"replies":[{"id":"51716","content":"1. 类似于Hadoop中的rack。一旦配置了rack，Kafka会尽力保证把副本分配在多个rack上<br>2. 启动broker进程就是启动一个Kafka服务器<br>3. 个人觉得这是两个概念。我倾向于认为rebalance是重平衡，reassignment是再分配。这两个在Kafka中是不同的操作","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568940024,"ip_address":"","comment_id":134695,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863863962","product_id":100029201,"comment_content":"回答问题：mysql的从库提供读机制，主要是因为mysql上存储的数据可以重复读，并且没有所谓的位移值offset的概念，所以能够保证数据一致性，而kafka的中消费过的数据需要通过offset来做标记，如果follower提供读，那必须然需要同步offset的变更，有可能就会导致数据不一致的问题，同时也会造成性能损耗。<br><br>看了这篇文章有几个疑惑的点，希望能得到老师的回复：<br>1.之前在网上看到过kafka中有机架的这个概念，机架的这个概念应该如何理解？<br>2.broker就是一个kafka实例，还是说broker就是一台kafka服务？<br>3.文中提到的“重平衡”，是不是就是再分配，kakfa中应该有再分配的这个概念，这两个是不是同一个？<br>","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467865,"discussion_content":"1. 类似于Hadoop中的rack。一旦配置了rack，Kafka会尽力保证把副本分配在多个rack上\n2. 启动broker进程就是启动一个Kafka服务器\n3. 个人觉得这是两个概念。我倾向于认为rebalance是重平衡，reassignment是再分配。这两个在Kafka中是不同的操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568940024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133826,"user_name":"clz1341521","can_delete":false,"product_type":"c1","uid":1179557,"ip_address":"","ucode":"3BDB4AB454C918","user_header":"https://static001.geekbang.org/account/avatar/00/11/ff/a5/eccc7653.jpg","comment_is_top":false,"comment_ctime":1568680754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5863648050","product_id":100029201,"comment_content":"kfk领导者副本分布在多台机器上已实现负载均衡，另外leader ，follower之间数据需要同步可能会造成数据不一致问题。","like_count":1},{"had_liked":false,"id":132498,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1568150420,"is_pvip":false,"replies":[{"id":"50677","content":"可以删除topic中的记录，不过是以offset的维度。所以你要先定义哪些offset之前的消息是旧消息","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568162117,"ip_address":"","comment_id":132498,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5863117716","product_id":100029201,"comment_content":"如何可以清空一個已有的topic中的所有舊的record，除了刪除topic重新創建之外有沒有其他方式？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466972,"discussion_content":"可以删除topic中的记录，不过是以offset的维度。所以你要先定义哪些offset之前的消息是旧消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568162117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46322,"discussion_content":"马克","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573140386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127126,"user_name":"JasonZhi","can_delete":false,"product_type":"c1","uid":1282818,"ip_address":"","ucode":"6C23DCD592636D","user_header":"https://static001.geekbang.org/account/avatar/00/13/93/02/fcab58d1.jpg","comment_is_top":false,"comment_ctime":1566563224,"is_pvip":true,"replies":[{"id":"47058","content":"设计一套概念能支持两种模型岂不是很好的做法?","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1566603127,"ip_address":"","comment_id":127126,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861530520","product_id":100029201,"comment_content":"老师，为什么P2P模型还会有topic，按道理只有发布订阅模式才会有topic 的概念吧？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464331,"discussion_content":"设计一套概念能支持两种模型岂不是很好的做法?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566603127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125288,"user_name":"citysun2009","can_delete":false,"product_type":"c1","uid":1090468,"ip_address":"","ucode":"285AB0E13C5927","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/a4/fc9cf791.jpg","comment_is_top":false,"comment_ctime":1566138581,"is_pvip":false,"replies":[{"id":"46038","content":"1. 消息一旦被写入到分区日志中位移就不会变化了<br>2. 消费者位移是表示消费者进度的。每个消费者都有自己的进度，因此引入了消费者位移","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1566181400,"ip_address":"","comment_id":125288,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861105877","product_id":100029201,"comment_content":"老师，你好。<br>1.假如我向分区中发了2条消息，如果第一条消息确认被消费掉了，那么第二条消息的offset还是1吗，会变成0吗？<br>2.如果问题1里的offset不变，那么消费者位移直接用offset就可以了吧，反正该消息在分区内唯一又不会变，为什么要多整出个消费者位移的概念？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463513,"discussion_content":"1. 消息一旦被写入到分区日志中位移就不会变化了\n2. 消费者位移是表示消费者进度的。每个消费者都有自己的进度，因此引入了消费者位移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566181400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119378,"user_name":"sun留白","can_delete":false,"product_type":"c1","uid":1531348,"ip_address":"","ucode":"53FEEA5E244C9A","user_header":"https://static001.geekbang.org/account/avatar/00/17/5d/d4/e5ea1c25.jpg","comment_is_top":false,"comment_ctime":1564575075,"is_pvip":false,"replies":[{"id":"43875","content":"内部位移topic的写入都是acks=all的，所以follower副本与leader副本实时同步","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1564628079,"ip_address":"","comment_id":119378,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5859542371","product_id":100029201,"comment_content":"有一个问题，如果一个broker主挂了，那么他的消费者位移，如何传递给从？胡大大","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460875,"discussion_content":"内部位移topic的写入都是acks=all的，所以follower副本与leader副本实时同步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564628079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1531348,"avatar":"https://static001.geekbang.org/account/avatar/00/17/5d/d4/e5ea1c25.jpg","nickname":"sun留白","note":"","ucode":"53FEEA5E244C9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3556,"discussion_content":"懂了，主的所有记录都备份给从了。只是没有在从上消费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564577432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104649,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1560813893,"is_pvip":false,"replies":[{"id":"37861","content":"针对第二点，我倒觉得Kafka和MySQL都是采用基于日志（log-based）的结构来做的同步，本质上都属于CDC(capture data change)。MySQL也有主从不一致的问题。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560820016,"ip_address":"","comment_id":104649,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5855781189","product_id":100029201,"comment_content":"我认为kafka不采用follower副本读数据功能，有两点原因<br>1.mysql的主写从读的目的是为了负载均衡，分担主节点的压力<br>而kafka通过分区解决了这个问题<br>2.如果kafka的follower副本提供读功能，会出现数据不一致的情况，毕竟kafka的副本同步采用的是poll，mysql的复制通过binlog会实现最终的一致性<br>还望老师指点","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454361,"discussion_content":"针对第二点，我倒觉得Kafka和MySQL都是采用基于日志（log-based）的结构来做的同步，本质上都属于CDC(capture data change)。MySQL也有主从不一致的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560820016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104479,"user_name":"。","can_delete":false,"product_type":"c1","uid":1582656,"ip_address":"","ucode":"33B5E0E1B44A8E","user_header":"https://static001.geekbang.org/account/avatar/00/18/26/40/73f15afd.jpg","comment_is_top":false,"comment_ctime":1560763241,"is_pvip":false,"replies":[{"id":"37840","content":"嗯嗯，其实我也是觉得业界的Hadoop三副本是很保守的方案。我们一般公司里面的业务消息也没那么值钱，那必要存两份。通常情况下冗余一份足够了：）<br><br>如果你觉得你的业务消息很值钱的话，那么保存多份是有意义的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560818461,"ip_address":"","comment_id":104479,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5855730537","product_id":100029201,"comment_content":"老师想问下  这个副本既然是做数据冗余之用，那是不是一个leader只需要有一个副本就好了？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454287,"discussion_content":"嗯嗯，其实我也是觉得业界的Hadoop三副本是很保守的方案。我们一般公司里面的业务消息也没那么值钱，那必要存两份。通常情况下冗余一份足够了：）\n\n如果你觉得你的业务消息很值钱的话，那么保存多份是有意义的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560818461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102138,"user_name":"Garfield","can_delete":false,"product_type":"c1","uid":1130646,"ip_address":"","ucode":"2865B698A88421","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/96/1e8697ec.jpg","comment_is_top":false,"comment_ctime":1560149433,"is_pvip":false,"replies":[{"id":"36835","content":"所谓的重复消费一般只是同一条消息被一个消费者处理了多次。多个消费者消费同一条消息没问题的。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560156173,"ip_address":"","comment_id":102138,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5855116729","product_id":100029201,"comment_content":"老师，Consumer Group 是多个实例组成的一个组，同时消费多个分区，Brokers会将同一个消息往多个group推送吧，这样有重复消费问题，不太理解怎么做高吞吐。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453278,"discussion_content":"所谓的重复消费一般只是同一条消息被一个消费者处理了多次。多个消费者消费同一条消息没问题的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560156173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101952,"user_name":"小飞","can_delete":false,"product_type":"c1","uid":1000347,"ip_address":"","ucode":"4C126548FBA94C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/9b/50927dfc.jpg","comment_is_top":false,"comment_ctime":1560070745,"is_pvip":false,"replies":[{"id":"36816","content":"“使用ack=-1 , min-replica=1 （replica=2) 应该就可以。<br>对生产来说，可以兼顾生产不丢消息，又不需要所有的follower全部完成复制”<br><br>acks=-1了leader会等所有follower都同步了该消息后才会返回给client","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560136389,"ip_address":"","comment_id":101952,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5855038041","product_id":100029201,"comment_content":"老师评论中提到的生产“折中”方案，兼顾可靠性和效率的方法，其实是有的！<br>使用ack=-1 , min-replica=1 （replica=2) 应该就可以。<br>对生产来说，可以兼顾生产不丢消息，又不需要所有的follower全部完成复制。消息会被发送成功。<br>对消费来说，可能消息还是无法第一时间被消费到，需要所有isr 完成消息得同步，完成commit. 更新high water. 才能被消费。<br>老师说这样对吗？<br>","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453187,"discussion_content":"“使用ack=-1 , min-replica=1 （replica=2) 应该就可以。\n对生产来说，可以兼顾生产不丢消息，又不需要所有的follower全部完成复制”\n\nacks=-1了leader会等所有follower都同步了该消息后才会返回给client","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560136389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101799,"user_name":"Icedmaze","can_delete":false,"product_type":"c1","uid":1104245,"ip_address":"","ucode":"DC05117685CAB5","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/75/3598e0de.jpg","comment_is_top":false,"comment_ctime":1559976594,"is_pvip":false,"replies":[{"id":"36812","content":"后面会有Rebalance的详细介绍~~","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560135964,"ip_address":"","comment_id":101799,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854943890","product_id":100029201,"comment_content":"老师，之后的课程是否会讲到关于Kafka的Rebalance导致的一些业务上的问题（如数据重复消费问题，消费顺序问题）的解决方案和实例么，还是说往往该类问题都是通过业务的层面钱解决该问题。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453120,"discussion_content":"后面会有Rebalance的详细介绍~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560135964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101653,"user_name":"77","can_delete":false,"product_type":"c1","uid":1113292,"ip_address":"","ucode":"4D497A36896766","user_header":"https://static001.geekbang.org/account/avatar/00/10/fc/cc/9f90b797.jpg","comment_is_top":false,"comment_ctime":1559901568,"is_pvip":true,"replies":[{"id":"36806","content":"在我看来，这两者的区别主要是通过消费者组体现的。同一组内，每个分区只能被一个消费者消费；但还是可以被组外的其他消费者消费。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560135482,"ip_address":"","comment_id":101653,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854868864","product_id":100029201,"comment_content":"老师，p2p和topic的区别是不是就是同一个分区是否允许多个消费者消费的区别","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453056,"discussion_content":"在我看来，这两者的区别主要是通过消费者组体现的。同一组内，每个分区只能被一个消费者消费；但还是可以被组外的其他消费者消费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560135482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101560,"user_name":"老邢","can_delete":false,"product_type":"c1","uid":1433138,"ip_address":"","ucode":"28944333440C0D","user_header":"https://static001.geekbang.org/account/avatar/00/15/de/32/509d6b10.jpg","comment_is_top":false,"comment_ctime":1559871773,"is_pvip":false,"replies":[{"id":"36803","content":"感觉还是有很多“僵尸”连接导致的，建议复现后能提供更为详细的数据或是直接到社区提交一个jira看一下。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560134761,"ip_address":"","comment_id":101560,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854839069","product_id":100029201,"comment_content":"老师您好，我在用kafka的时候发现zk如果异常后会偶现kafka连接数暴增的情况，最终超过操作系统的最大连接数后服务就挂掉了，并且重启服务后连接数还会立马涨上来，请问下这个问题有什么好的处理方式，感谢。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453013,"discussion_content":"感觉还是有很多“僵尸”连接导致的，建议复现后能提供更为详细的数据或是直接到社区提交一个jira看一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560134761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101493,"user_name":"双叶","can_delete":false,"product_type":"c1","uid":1009260,"ip_address":"","ucode":"6DA1D477F9D580","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/6c/4a68a916.jpg","comment_is_top":false,"comment_ctime":1559825478,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5854792774","product_id":100029201,"comment_content":"Follower 不提供服务我认为是必要性不大吧，性能已经满足要求的情况下，follower 提供服务只会提高复杂度。为什么 kafka 性能满足高而 mysql 不行，除了做了分区以外，还有 kafka 读写都基本上是顺序的，I&#47;O 压力小，计算相比数据库感觉也不复杂，所以就性能高呗。","like_count":1},{"had_liked":false,"id":101402,"user_name":"Mr.Panda","can_delete":false,"product_type":"c1","uid":1238864,"ip_address":"","ucode":"655A3013B5E849","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/50/d476ed6c.jpg","comment_is_top":false,"comment_ctime":1559802056,"is_pvip":false,"replies":[{"id":"36567","content":"同一分区下的所有副本一定分散在不同的broker上（是broker，不是机器，因为可能一个机器上有多个broker）。<br><br>其实，每个broker也可以配置多块物理磁盘，而且自Kafka 1.0开始支持JBOD（Just a Bunch Of Disks）了，单块磁盘的损坏不会令broker宕机了。总之这一切都是为了提升高可用。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559814522,"ip_address":"","comment_id":101402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854769352","product_id":100029201,"comment_content":"问题：为什么 Kafka 不像 MySQL 那样允许追随者副本对外提供读服务？<br>答：<br>1.保证消息的新鲜。只读leader副本，保证数据的最新。追随副本同步最新数据存在延迟。<br>2.已设计了分区机制和消费者组机制，解决了吞吐量问题，无需追随副本再去分担。<br>老师请解惑： 每个分区下的多个副本，是和对应分区在同个服务器下的吗？还是说可以分散在多个服务器中，可以避免一个服务器硬盘损坏了，也能发挥副本的作用，即高可用。","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452948,"discussion_content":"同一分区下的所有副本一定分散在不同的broker上（是broker，不是机器，因为可能一个机器上有多个broker）。\n\n其实，每个broker也可以配置多块物理磁盘，而且自Kafka 1.0开始支持JBOD（Just a Bunch Of Disks）了，单块磁盘的损坏不会令broker宕机了。总之这一切都是为了提升高可用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559814522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101360,"user_name":"你看起来很好吃","can_delete":false,"product_type":"c1","uid":1188854,"ip_address":"","ucode":"F9079138EC3D7C","user_header":"https://static001.geekbang.org/account/avatar/00/12/23/f6/1ef70cab.jpg","comment_is_top":false,"comment_ctime":1559788675,"is_pvip":false,"replies":[{"id":"36561","content":"阅读Kafka源码是一件需要长期坚持的事情，如果你真的决定了就去直接看源码，不需要什么书籍。只要坚持下来一定会有收获！如果你想学分布式系统，我推荐《Designing Data-Intensive Applications》，多看几遍~~","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559813683,"ip_address":"","comment_id":101360,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854755971","product_id":100029201,"comment_content":"胡老师您好，讲得真好，通俗易懂，感觉很值。<br>不过我有一点困惑，想咨询一下您，我是一名刚从android转到后端的开发，现在工作里大部分工作都是做一些业务逻辑和使用一些常用的中间件，公司的业务也很难遇到真正的解决高并发，也很难遇到那种需要设计很好的分布式，高可用的系统。但是我想了解这些，想知道如果要做，要怎么来实现。<br>然后我看这讲中有讲kafka有这种高可用，分布式的设计，所以我想我是否可以通过阅读kafka这相关的源码和设计，学习这样的系统如何设计。那如果可以的话，有没有好的相关的书可以推荐一下呢？感觉胡老师","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452927,"discussion_content":"阅读Kafka源码是一件需要长期坚持的事情，如果你真的决定了就去直接看源码，不需要什么书籍。只要坚持下来一定会有收获！如果你想学分布式系统，我推荐《Designing Data-Intensive Applications》，多看几遍~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559813683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101355,"user_name":"口天小山己","can_delete":false,"product_type":"c1","uid":1565576,"ip_address":"","ucode":"C879842E0DE4EA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELffsjdm51ZDoupOugHCiaJt4jXoPaFmTtqqU3stIhJmN0VLpFr9Hib2ial7p5yxwsKzChniaxYvM458w/132","comment_is_top":false,"comment_ctime":1559787413,"is_pvip":false,"replies":[{"id":"36535","content":"producer是否等待follower拉取成功取决于producer端参数acks的设置。至于follower异步同步的完整机制在专栏的后面有详细的介绍~~","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559788926,"ip_address":"","comment_id":101355,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854754709","product_id":100029201,"comment_content":"follower副本向leader副本pull数据，是要等pull成功了才返回给生产者这条信息发送成功了吗，还是生产者数据发送到leader副本就算这条数据发送成功了，后面follower副本自己向生产者pull数据，保证最终一致性？如果是要等follower副本pull成功了才返回给生产者这条数据发送成功的话，这个pull不是异步的吗，是怎么通知生产者这次follower副本pull成功呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452926,"discussion_content":"producer是否等待follower拉取成功取决于producer端参数acks的设置。至于follower异步同步的完整机制在专栏的后面有详细的介绍~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559788926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101286,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1559778449,"is_pvip":true,"replies":[{"id":"36500","content":"如果是在Kafka中，消息删除与否与消费者没有关系，受Kafka自己的留存策略控制，也就是你说的定时任务检查","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559780987,"ip_address":"","comment_id":101286,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5854745745","product_id":100029201,"comment_content":"在 P2P 模型中，当某个消费者消费一条数据成功ack后，数据不会在对应的Partiton删除吗？ 还是等待定时任务检查是否删除呢？","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452890,"discussion_content":"如果是在Kafka中，消息删除与否与消费者没有关系，受Kafka自己的留存策略控制，也就是你说的定时任务检查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559780987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101261,"user_name":"innocent","can_delete":false,"product_type":"c1","uid":1197455,"ip_address":"","ucode":"368659A0DDE7E4","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/8f/a56b2214.jpg","comment_is_top":false,"comment_ctime":1559755499,"is_pvip":false,"replies":[{"id":"36489","content":"能否具体说说消息一致性的含义？在分布式系统中一致性这个概念太大了，可能有很多意思。在Kafka中多指的是leader和follower之间的一致性。不知道你是否指这个？如果是，那么Kafka通过很多机制来确保两者的最终一致性。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559780118,"ip_address":"","comment_id":101261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854722795","product_id":100029201,"comment_content":"是否是为了保证消息的一致性","like_count":1,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452877,"discussion_content":"能否具体说说消息一致性的含义？在分布式系统中一致性这个概念太大了，可能有很多意思。在Kafka中多指的是leader和follower之间的一致性。不知道你是否指这个？如果是，那么Kafka通过很多机制来确保两者的最终一致性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559780118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359005,"user_name":"BLESSLH","can_delete":false,"product_type":"c1","uid":2460454,"ip_address":"湖北","ucode":"2AA0862116ACDF","user_header":"https://static001.geekbang.org/account/avatar/00/25/8b/26/d5c68a81.jpg","comment_is_top":false,"comment_ctime":1665139249,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665139249","product_id":100029201,"comment_content":"ES里面的shard也有副本的概念，同样是分布在不同broker上，主分片可读可写，副本可以读，为什么kafka不采用这种机制呢？只是说副本只是做高可用不能完全说服啊，是说kafka集群不存在读IO的瓶颈问题吗？","like_count":0},{"had_liked":false,"id":348714,"user_name":"nicklos","can_delete":false,"product_type":"c1","uid":1198461,"ip_address":"","ucode":"2673D71077B946","user_header":"https://static001.geekbang.org/account/avatar/00/12/49/7d/6d9675da.jpg","comment_is_top":false,"comment_ctime":1655343341,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655343341","product_id":100029201,"comment_content":"请恕冒昧，请问一个主题的分区不是都分散在不同的broker中吗，结尾的配图是不是有点瑕疵呢？","like_count":0},{"had_liked":false,"id":348413,"user_name":"尼古拉斯","can_delete":false,"product_type":"c1","uid":1333065,"ip_address":"","ucode":"90291703BBF77C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLEhQyF89BRuFNHQEP6kPv1wKD56cC6dWhbooSFcdwA5B1Sg8EhWmzew0I6S0GqngOIGSvJ6MT5eQ/132","comment_is_top":false,"comment_ctime":1655089400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655089400","product_id":100029201,"comment_content":"老师您好，一条消息发送到一个leader分区，分区内消息只能被一个消费者消费，那发布&#47;订阅模式下，一条消息是如何一对多的呢？","like_count":0},{"had_liked":false,"id":341431,"user_name":"ZHANGPING","can_delete":false,"product_type":"c1","uid":1918112,"ip_address":"","ucode":"7108812981C996","user_header":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","comment_is_top":false,"comment_ctime":1649601983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649601983","product_id":100029201,"comment_content":"Kafka数据流是有状态，1.如果从不同的副本消费，获取的数据状态有问题。2.增加Kafka数据归档的复杂度","like_count":0},{"had_liked":false,"id":337629,"user_name":"码哥字节","can_delete":false,"product_type":"c1","uid":1572356,"ip_address":"","ucode":"362103AD52C8E0","user_header":"https://static001.geekbang.org/account/avatar/00/17/fe/04/bb427e47.jpg","comment_is_top":false,"comment_ctime":1646922706,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646922706","product_id":100029201,"comment_content":"每个消费者在消费消息的过程中必然需要有个字段记录它当前消费到了分区的哪个位置上，这个字段就是消费者位移（Consumer Offset）。<br><br>这个字段应该是记录在 Broker 吧？","like_count":0},{"had_liked":false,"id":335080,"user_name":"易飞","can_delete":false,"product_type":"c1","uid":2630424,"ip_address":"","ucode":"32AC28754237F7","user_header":"https://static001.geekbang.org/account/avatar/00/28/23/18/4284361f.jpg","comment_is_top":false,"comment_ctime":1645317657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1645317657","product_id":100029201,"comment_content":"1、增加了同步消费者偏移量的过程；2、多个borker已经实现了负载均衡，不存在单台机器的性能问题","like_count":0},{"had_liked":false,"id":334031,"user_name":"Geek__ILoveStudyAndWork","can_delete":false,"product_type":"c1","uid":1453131,"ip_address":"","ucode":"47FFA5F59019CA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/4wiaKDwz4YI8B68hLd7qSa6SrIOqkBo67Y7gcIFevGHgaAKzbK5PoXcIJJhrmkzKyWvWOkYcMs66iav5EVbHZ9ag/132","comment_is_top":false,"comment_ctime":1644680336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644680336","product_id":100029201,"comment_content":"老师您好，请问一下Kafka connect这个概念应该怎么解释","like_count":0},{"had_liked":false,"id":331880,"user_name":"Geek_604077","can_delete":false,"product_type":"c1","uid":1969081,"ip_address":"","ucode":"3BDCDCA9187514","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ib3Rzem884S5MOS96THy0gQXcF26PNsnRBpyr3pM5rVibZdYvAibpVvAGfibF1ddpgrteg9fQUsq4vce9EM95Jj97Q/132","comment_is_top":false,"comment_ctime":1642848021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642848021","product_id":100029201,"comment_content":"kafka的追随者副本没有对外提供读服务的原因个人理解<br>mysql的读写分离，在主库写入从库追加的数据存在一个时间差，对于时效要求不高的业务可以选择读写分离，从而减少主库的压力。<br><br>1、延迟问题<br>kafka最随者副本也存在同样的延迟问题，假如不同的副本因为追加延迟，导致了不同的结果，如下，0-4副本中只有追随者副本4与领导者副本数据一致，当Consumer以副本0-3去做读取消费提交位移时，会始终都有消息无法被消费（比如：msg_5），导致跟随者副本的数据追齐领导者副本存在过度依赖。<br>2、重复消费问题<br>如果 consumer_1根据副本0消费msg_1，提交位移给领导者副本变更位移（初学者不知道该表述是否正确），因为存在延迟问题<br>副本0-4的位移变更会存在时间延迟，导致下个consumer消费读取是仍能读到msg_1，从而重复去消费。<br>领副 msg_1，msg_2，msg_3，msg_4，msg_5<br>追副0 msg_1<br>追副1 msg_1，msg_2<br>追副2 msg_1，msg_2，msg_3<br>追副3 msg_1，msg_2，msg_3，msg_4<br>追副4 msg_1，msg_2，msg_3，msg_4，msg_5<br>（初学kafka，不知表述是否正确）","like_count":0},{"had_liked":false,"id":324481,"user_name":"Geek_9150ca","can_delete":false,"product_type":"c1","uid":2858605,"ip_address":"","ucode":"0E63818EACA52F","user_header":"","comment_is_top":false,"comment_ctime":1638453247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638453247","product_id":100029201,"comment_content":"老师您好，请教个问题，一个集群下topic的分区数量怎么来确定？有经验值吗？还是说需要通过kafka的性能测试脚本来确定？","like_count":0},{"had_liked":false,"id":315010,"user_name":"Geek_2487e4","can_delete":false,"product_type":"c1","uid":1607150,"ip_address":"","ucode":"E89D6C5DD362A2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/XSnxM4uP67mVu7ZtPxWqUPdk8SlBG4I3rRZWjeBWOiauNh6X4Cgl07bIzkY4CbHNm3Zj0O9aguEg68uA1GED8Qw/132","comment_is_top":false,"comment_ctime":1633657556,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1633657556","product_id":100029201,"comment_content":"总结一下高可用与结尾的那张图：<br>1.一个topic拆分成多个partition,多个partition分布在不同的broker上，避免请求只打到一台机器上，类似负载均衡。<br>2.一个topic有一个leader和多个follower副本，leader和follower的分区交错分布在不同的broker上。","like_count":0,"discussions":[{"author":{"id":2643242,"avatar":"https://static001.geekbang.org/account/avatar/00/28/55/2a/50aff9d5.jpg","nickname":"YXL","note":"","ucode":"C9F1DEF423C8C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533394,"discussion_content":"每个分区可配置多个副本，有1个leader副本和 N-1个follower副本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637850712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314509,"user_name":"Sundnd","can_delete":false,"product_type":"c1","uid":1131316,"ip_address":"","ucode":"BA60F74AD42F9A","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/34/5684e180.jpg","comment_is_top":false,"comment_ctime":1633162555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633162555","product_id":100029201,"comment_content":"和 redis cluster的分片思想一样，数据是分片存储在不同的服务器上，已经做到的负载均衡了。<br><br>kafka 是的负载均衡也是在 写入存储时就做好了，确保了服务端存储&#47;进程的负载均衡。<br><br><br>","like_count":0},{"had_liked":false,"id":311430,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1631235364,"is_pvip":false,"replies":[{"id":"114441","content":"broker类似于服务器，topic是要发送消息所属于的『大楼』，partition是这个『大楼』中的不同『楼层』","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1634004702,"ip_address":"","comment_id":311430,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631235364","product_id":100029201,"comment_content":"想请教下老师Broker和Partition, Topic之间的关系？ ","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526599,"discussion_content":"broker类似于服务器，topic是要发送消息所属于的『大楼』，partition是这个『大楼』中的不同『楼层』","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634004702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310547,"user_name":"物易学习室","can_delete":false,"product_type":"c1","uid":2723815,"ip_address":"","ucode":"39DA9063E2F5BA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/UWpN1EIAJib8k5iaGISZD1PqUYsJA02rjzxhEpZEZarLg4oLcNVXOKVSVmY3SEctTVOvEgtsVwxN6OX7NaUe3BcQ/132","comment_is_top":false,"comment_ctime":1630734265,"is_pvip":false,"replies":[{"id":"112523","content":"没有太好的办法。出了问题依赖consumer自行恢复的做法在实际中大多行不通","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1630809974,"ip_address":"","comment_id":310547,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630734265","product_id":100029201,"comment_content":"老师您好，请问某个消费者消息超时，被踢出消费者组，在不通过重启此消费者实例所在的服务情况下，有什么好的方式，让这个消费者重新恢复消费。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526270,"discussion_content":"没有太好的办法。出了问题依赖consumer自行恢复的做法在实际中大多行不通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630809974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310296,"user_name":"四楼","can_delete":false,"product_type":"c1","uid":1426241,"ip_address":"","ucode":"599ACF75053C9F","user_header":"https://static001.geekbang.org/account/avatar/00/15/c3/41/9206507d.jpg","comment_is_top":false,"comment_ctime":1630579383,"is_pvip":true,"replies":[{"id":"112522","content":"是的，存在__consumer_offsets topic中","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1630809923,"ip_address":"","comment_id":310296,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630579383","product_id":100029201,"comment_content":"请问消费者位移是存放在哪里呢，也在服务端的一个broker上吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526189,"discussion_content":"是的，存在__consumer_offsets topic中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630809923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310292,"user_name":"四楼","can_delete":false,"product_type":"c1","uid":1426241,"ip_address":"","ucode":"599ACF75053C9F","user_header":"https://static001.geekbang.org/account/avatar/00/15/c3/41/9206507d.jpg","comment_is_top":false,"comment_ctime":1630579213,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1630579213","product_id":100029201,"comment_content":"副本对外提供，消息会重复，且无法保证顺序性","like_count":0},{"had_liked":false,"id":307220,"user_name":"Allen","can_delete":false,"product_type":"c1","uid":1100387,"ip_address":"","ucode":"5B168A03809557","user_header":"https://static001.geekbang.org/account/avatar/00/10/ca/63/9be9ac89.jpg","comment_is_top":false,"comment_ctime":1628944536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628944536","product_id":100029201,"comment_content":"对于文末问题我的理解是:<br>主要还是Kafka的使用场景是需要支持单调读的, 否则客户端的处理逻辑将会异常复杂. 而MySQL大多数场景下却是不需要的, 是否需要提供更高一致性应交由应用来决定.","like_count":0},{"had_liked":false,"id":307088,"user_name":"姚银锋","can_delete":false,"product_type":"c1","uid":1076276,"ip_address":"","ucode":"B7F196188A0028","user_header":"https://static001.geekbang.org/account/avatar/00/10/6c/34/05f61068.jpg","comment_is_top":false,"comment_ctime":1628854842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628854842","product_id":100029201,"comment_content":"我觉得思考两个问题：<br>1、mysql主写从读要解决什么问题？<br>2、mysql主写从读又带来了什么问题？<br><br>问题1：写少读多场景下，读写分离，缓解主库压力<br>  kafka解决方案：多分区的设计，已经分担了流量压力，只是思想不一样而已<br><br>问题2：主从同步带来的数据不一致问题<br>  kafka解决方案：因为都是领导者提供读写，数据不一致问题天然就不存在<br><br>所以说，kafka的思想maybe更优","like_count":0},{"had_liked":false,"id":304633,"user_name":"阿文","can_delete":false,"product_type":"c1","uid":1467219,"ip_address":"","ucode":"B53454CA52BD7E","user_header":"https://static001.geekbang.org/account/avatar/00/16/63/53/b4590ccc.jpg","comment_is_top":false,"comment_ctime":1627527214,"is_pvip":false,"replies":[{"id":"110339","content":"同时实现负载均衡和故障转移","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1627784675,"ip_address":"","comment_id":304633,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1627527214","product_id":100029201,"comment_content":"感觉这消费者组，并不是为了实现高吞吐的。因为多个消费者就是分布式消费的，一样是高吞吐啊。不过分组可以更方便将消费者归类，例如配置该组针对的主题、分区等，主题消费可以更好的分配消费者，后边如果组内某个消费者出问题可以更方便的限定在组内解决。<br>不知道我的理解有没有问题，刚学","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524107,"discussion_content":"同时实现负载均衡和故障转移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627784675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302258,"user_name":"和风同尘","can_delete":false,"product_type":"c1","uid":2661804,"ip_address":"","ucode":"904785C0A4B7FB","user_header":"https://static001.geekbang.org/account/avatar/00/28/9d/ac/81c0b9d0.jpg","comment_is_top":false,"comment_ctime":1626148032,"is_pvip":false,"replies":[{"id":"109452","content":"抛弃zk主要还是想让Kafka不依赖于任何外部框架","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1626241912,"ip_address":"","comment_id":302258,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626148032","product_id":100029201,"comment_content":"老师好，我想问一下，新版本的kafka抛弃了zookeeper,会不会目的也是想扔掉主从的层级关系，避免主节点down掉之后选举的时间；从而变成平级操作呢","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523244,"discussion_content":"抛弃zk主要还是想让Kafka不依赖于任何外部框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626241912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":301550,"user_name":"monsterhxw","can_delete":false,"product_type":"c1","uid":1216801,"ip_address":"","ucode":"D04AD6301AE7AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/91/21/d16b884e.jpg","comment_is_top":false,"comment_ctime":1625734961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625734961","product_id":100029201,"comment_content":"配多点图会好理解一点","like_count":0},{"had_liked":false,"id":295822,"user_name":"Geek_fcd2cf","can_delete":false,"product_type":"c1","uid":1778060,"ip_address":"","ucode":"171F238259D7FF","user_header":"https://static001.geekbang.org/account/avatar/00/1b/21/8c/1387a96f.jpg","comment_is_top":false,"comment_ctime":1622612508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622612508","product_id":100029201,"comment_content":"kafka中某个topic的leader分区挂掉了，重新选举新的leader之后，这个挂掉的leader分区又活过来了，它这个数据是怎么同步的。 从哪里开始同步，如何同步的","like_count":0},{"had_liked":false,"id":294790,"user_name":"春哥","can_delete":false,"product_type":"c1","uid":1103105,"ip_address":"","ucode":"C20FED6AE27B76","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/01/befc9f3e.jpg","comment_is_top":false,"comment_ctime":1622091059,"is_pvip":false,"replies":[{"id":"107169","content":"通常不会。只有consumer成员数量、订阅topic分区数发生增减时才会触发","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1622353468,"ip_address":"","comment_id":294790,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1622091059","product_id":100029201,"comment_content":"如果一个borker挂掉了，会导致Rebalance吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520810,"discussion_content":"通常不会。只有consumer成员数量、订阅topic分区数发生增减时才会触发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622353468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294197,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1621826747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621826747","product_id":100029201,"comment_content":"开放讨论：数据库读写分离的原因在于写少读多，且随机读写磁盘I&#47;O的瓶颈，造成单实例服务的效率（QPS和吞吐量）不高。Kafka是log-based records，顺序写入和读出，对于单机来说效率已经足够高，所以才有消费者组的概念，通过多个消费者实例来应对单partition的写入。<br>更重要的是Kafka为了增加性能已经提供了单topic多partitions并拆分到多个brokers，没有必要再通过多副本提供读服务来缓解单节点的读写压力。<br>另外，因为Kafka的每个Partition中的records，follower是异步方式从leader拉取的，如果消费者从副本获取数据，为保证数据一致性，必须等待follower数据同步完成后才可以。在单点效率已经很高的情况下，这种做法只是单纯增加了每笔请求的耗时（增加了消息在leader和follower之间同步的时间）反而降低了效率。<br>实际上，KIP-392提出Allow consumers to fetch from closest replica，并在2019年10月的Kafka 2.4.0中发布，其实现动机：<br>1.\tIt is common to have a Kafka cluster spanning multiple datacenters.<br>2.\tHowever, currently consumers are limited to fetching only from the leader, so there is no easy way to leverage locality in order to reduce expensive cross-dc traffic. To address this gap, we propose here to allow consumers to fetch from the closest replica.<br>为了实现这个想法，需要解决两个问题：<br>1.\tadd support in the Fetch protocol for follower fetching<br>2.\ta mechanism to find the &quot;closest&quot; replica to a given consumer.<br>具体细节参考：https:&#47;&#47;cwiki.apache.org&#47;confluence&#47;display&#47;KAFKA&#47;KIP-392%3A+Allow+consumers+to+fetch+from+closest+replica<br>","like_count":0},{"had_liked":false,"id":293588,"user_name":"上miss","can_delete":false,"product_type":"c1","uid":2613679,"ip_address":"","ucode":"DCDC9D8214B07D","user_header":"https://static001.geekbang.org/account/avatar/00/27/e1/af/10e30196.jpg","comment_is_top":false,"comment_ctime":1621438012,"is_pvip":false,"replies":[{"id":"106416","content":"就是搞个组织让大家协同消费","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1621509464,"ip_address":"","comment_id":293588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621438012","product_id":100029201,"comment_content":"为啥需要消费组这个东西😓","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520282,"discussion_content":"就是搞个组织让大家协同消费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621509464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291512,"user_name":"墨白","can_delete":false,"product_type":"c1","uid":2259490,"ip_address":"","ucode":"D884B9C0056C80","user_header":"https://static001.geekbang.org/account/avatar/00/22/7a/22/45307c91.jpg","comment_is_top":false,"comment_ctime":1620315229,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620315229","product_id":100029201,"comment_content":"至于kafka为什么不读从，其实说到底还是根据使用场景采用合适的技术实现。<br>关键点无论是mysql还是kafka只要是读从库，都会有延迟，关键是看延迟的发生概率，以及用户的容忍度<br>1、mysql一般是面向TP使用，满足ACID的特性，需要考虑隔离、原子、一致性、可重复读，所以注定了它吞吐量是不可能和kafka相提并论的，也就意味着主从的延迟一般不会太离谱，正常应该控制在秒级内<br>2、kafka，消峰作用非常适用，尤其是海量消息的情况下，这时候如果为了让追随者副本对外提供副本势必会造成比较大的延迟，因为主分区处理速度非常快（一般为了追求高吞吐量会平衡leader与follow的同步成本,不会把所有的从写入后在进行返回确认）<br>3、另外补充下：如果把topic根据消息量设置合适的partion数量，分散在不同的节点达到负载均衡的效果，直接读主，对主的压力也是可以接受的，同时有兼顾了kafka的高吞吐率能力","like_count":0},{"had_liked":false,"id":291292,"user_name":"Geek_20210430","can_delete":false,"product_type":"c1","uid":2601446,"ip_address":"","ucode":"32728E28984463","user_header":"https://static001.geekbang.org/account/avatar/00/27/b1/e6/6560d20a.jpg","comment_is_top":false,"comment_ctime":1620190372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620190372","product_id":100029201,"comment_content":"如果follower副本也能对外提供服务，即分区中的消息也能被消费者消费的话，那么一个最大的问题就是会导致follower副本与leader副本消息状态的不一致，而这个修复一致的过程成本过高，得不偿失。","like_count":0},{"had_liked":false,"id":289595,"user_name":"Vndi","can_delete":false,"product_type":"c1","uid":2114744,"ip_address":"","ucode":"23DA6A7BE63E9F","user_header":"https://static001.geekbang.org/account/avatar/00/20/44/b8/d5fe40fb.jpg","comment_is_top":false,"comment_ctime":1619093861,"is_pvip":false,"replies":[{"id":"105284","content":"这两个consumer的group id是相同的吗？","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1619599859,"ip_address":"","comment_id":289595,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619093861","product_id":100029201,"comment_content":"如果同一个topic被两个consumer订阅，其中一个consumer消费速度特别慢，会影响kafka定期清理topic数据吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518963,"discussion_content":"这两个consumer的group id是相同的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619599859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289168,"user_name":"黄福超","can_delete":false,"product_type":"c1","uid":2277769,"ip_address":"","ucode":"BAADC19A45FE05","user_header":"","comment_is_top":false,"comment_ctime":1618901112,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618901112","product_id":100029201,"comment_content":"个人感觉不做读写分离的话，搞两个副本的收益不是很大。读写分离肯定是趋势","like_count":0},{"had_liked":false,"id":281332,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1244248,"ip_address":"","ucode":"86A78303C9AB9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/58/90b7b363.jpg","comment_is_top":false,"comment_ctime":1614694028,"is_pvip":false,"replies":[{"id":"102228","content":"根据你的业务而定，没有一定之规","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1614821735,"ip_address":"","comment_id":281332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614694028","product_id":100029201,"comment_content":"起多少个消费组是怎么决定的","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516365,"discussion_content":"根据你的业务而定，没有一定之规","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614821735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277494,"user_name":"liian2019","can_delete":false,"product_type":"c1","uid":1503741,"ip_address":"","ucode":"22F639944F0EA0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epvjpicXzEv02d9ztRzIWIicbejyFTTtRA5K6oYmdicq9HQgGfRn3DLytTHQ6CHspb0TibqFkMibhBXj2g/132","comment_is_top":false,"comment_ctime":1612431349,"is_pvip":true,"replies":[{"id":"100695","content":"不会。分区下面有日志段，理论上可以无限扩展","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612496419,"ip_address":"","comment_id":277494,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1612431349","product_id":100029201,"comment_content":"请问一下有没有可能数据太大，一个分区放不下，导致跨分区的情况呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515071,"discussion_content":"不会。分区下面有日志段，理论上可以无限扩展","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612496419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276537,"user_name":"郑文祥","can_delete":false,"product_type":"c1","uid":1233073,"ip_address":"","ucode":"730452A9B3376A","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/b1/87853049.jpg","comment_is_top":false,"comment_ctime":1611994121,"is_pvip":false,"replies":[{"id":"100446","content":"找不到这个帖子了。。。。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612141836,"ip_address":"","comment_id":276537,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611994121","product_id":100029201,"comment_content":"老师，在https:&#47;&#47;www.zhihu.com&#47;question&#47;327925275&#47;answer&#47;705690755z中你提到了kafka的全局消息顺序颠倒的问题，这个具体现象是怎么样的？不是很清楚场景","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514745,"discussion_content":"找不到这个帖子了。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612141836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275537,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","comment_is_top":false,"comment_ctime":1611575950,"is_pvip":false,"replies":[{"id":"100455","content":"1、可以的呢。订阅了该topic的所有消费者都能收到<br>2、可以独自消费。Kafka有standalone consumer，它不是消费者组的概念，就是单独的消费者","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612143337,"ip_address":"","comment_id":275537,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611575950","product_id":100029201,"comment_content":"胡老师你好，看了本文收益良多，在这里我想问下几个问题，希望可以得到解答，谢谢：<br>1、kafka 如何实现像 rocketmq 那样的“广播”消息消费，即生产者生产一个消息，所有订阅了的消费者都可以收到此消息？<br>2、1 中的问题引申出一个问题，消费者是否一定得属于某个消费者组？可以独自地消费消息吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514385,"discussion_content":"1、可以的呢。订阅了该topic的所有消费者都能收到\n2、可以独自消费。Kafka有standalone consumer，它不是消费者组的概念，就是单独的消费者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612143337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275471,"user_name":"Shujiang.li","can_delete":false,"product_type":"c1","uid":2033254,"ip_address":"","ucode":"E01999B4961367","user_header":"https://static001.geekbang.org/account/avatar/00/1f/06/66/91b7b451.jpg","comment_is_top":false,"comment_ctime":1611556197,"is_pvip":false,"replies":[{"id":"100457","content":"可以有的。事实上，这是普遍存在的现象。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1612143411,"ip_address":"","comment_id":275471,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611556197","product_id":100029201,"comment_content":"kafka一个broker上可以有同一个topic的多个分区吗？文章最下面的配图可以解释一下吗","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514362,"discussion_content":"可以有的。事实上，这是普遍存在的现象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612143411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274292,"user_name":"william","can_delete":false,"product_type":"c1","uid":1523230,"ip_address":"","ucode":"6C2307472FA41B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIeNIlPiaxsicB9icTlcsfYMOibnf800aBYvia4pI44L0QRXevEaKbJtcGBLWerRJic66HtHVSdFbFSfU0g/132","comment_is_top":false,"comment_ctime":1610956768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610956768","product_id":100029201,"comment_content":"1、MySQL的读写分离是为避免大量的读来降低写的效率，将读分离出来可以做横向的扩展，但kafka不适合这种场景<br>2、kafka的Leader 和Follower之间采用的是异步拉取机制，从在时间差，或出现数据不一致的问题","like_count":0},{"had_liked":false,"id":258280,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1604367186,"is_pvip":false,"replies":[{"id":"94412","content":"������","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1604887198,"ip_address":"","comment_id":258280,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604367186","product_id":100029201,"comment_content":"总结:kafka为什么不允许follower副本对外提供服务。1)如果要从副本可以对外读，那么首先要保证主从数据的一致性，还要解决消费进度同步的问题。解决一个问题也会引入其他问题需要解决。2)kafka与rocketmq副本机制不同，kafka的副本基于分区，这个分区的主副本与其他分区的从副本在同一实例上。rocketmq的副本是基于broker，一个broker会有很多queue(分区)。从副本对外读写会增加磁盘的io.影响到写。  3)从副本能够读主要是为了解决读的压力，多个分区已经做了负载均衡。4)从设计角度，业务场景出发，做的一些取舍。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508604,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604887198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255276,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1603292997,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603292997","product_id":100029201,"comment_content":"mysql的主从是基于整个数据库的，kafka的主从是基于topic的分片的，负载均衡本身可以通过topic和分片来缓解了。","like_count":0},{"had_liked":false,"id":252990,"user_name":"爱码士","can_delete":false,"product_type":"c1","uid":1516495,"ip_address":"","ucode":"8E31D7E69F2C26","user_header":"https://static001.geekbang.org/account/avatar/00/17/23/cf/7429d6e8.jpg","comment_is_top":false,"comment_ctime":1602555274,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602555274","product_id":100029201,"comment_content":"为什么Kafka不像mysql一样，让从库提供读服务？<br>答案：Kafka的消息读取其实是消费过程，需要更新分区位移，代表要跟主库做数据同步，可能有并发问题，还会造成网络符合，造成不必要的消耗。另外，Kafka作为内存存储系统，和redis类似，内存读写不会造成太大的阻塞。<br>一言以蔽之：没必要","like_count":0},{"had_liked":false,"id":252510,"user_name":"yic","can_delete":false,"product_type":"c1","uid":1201577,"ip_address":"","ucode":"C8DC471B7C28B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/a9/5282a560.jpg","comment_is_top":false,"comment_ctime":1602323764,"is_pvip":false,"replies":[{"id":"92492","content":"不会触发rebalance","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1602637389,"ip_address":"","comment_id":252510,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602323764","product_id":100029201,"comment_content":"胡老师，我有个问题求解答。<br>背景信息：<br>1. 我的kafka集群有3个broker，<br>2. 创建了一个topic，有3个partition，每个partition有2个副本，3个partition的副本均分在broker上。<br>3. 消费者组有3个消费者<br>正常情况下，消费者组内的每个消费者对应消费一个partition中的消息。在某一个时刻，一个partition所在的broker宕机了。这时候消费者会触发重平衡吗？如果会，是什么机制触发的呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506792,"discussion_content":"不会触发rebalance","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602637389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246755,"user_name":"是KK呀","can_delete":false,"product_type":"c1","uid":1064894,"ip_address":"","ucode":"5DCEB53A13D049","user_header":"https://static001.geekbang.org/account/avatar/00/10/3f/be/c7141382.jpg","comment_is_top":false,"comment_ctime":1599470245,"is_pvip":false,"replies":[{"id":"90935","content":"额外引入了一次ZooKeeper的访问过程，感觉性价比不是很高：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1599789632,"ip_address":"","comment_id":246755,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599470245","product_id":100029201,"comment_content":"我觉得broker端可以不变，但是客户端在与Broker进行交互消费的时候如果与该broker不能连通，可以从zookeeper获取该broker上leader副本对应的follower副本在其他哪个节点上，然后由其他节点上的从副本提供读服务，这样可以避免因为网络原因导致的消费数据丢失。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505219,"discussion_content":"额外引入了一次ZooKeeper的访问过程，感觉性价比不是很高：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599789632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246750,"user_name":"是KK呀","can_delete":false,"product_type":"c1","uid":1064894,"ip_address":"","ucode":"5DCEB53A13D049","user_header":"https://static001.geekbang.org/account/avatar/00/10/3f/be/c7141382.jpg","comment_is_top":false,"comment_ctime":1599469846,"is_pvip":false,"replies":[{"id":"90934","content":"嗯，也不能说是丢失了，毕竟数据还在Kafka中。只是Kafka在一致性和可用性方面优先保证一致性<br>","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1599789538,"ip_address":"","comment_id":246750,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599469846","product_id":100029201,"comment_content":"只由领导者副本提供服务也是有弊端的，比如消费者如果与集群中某个节点网络连通性出问题，那么消费过程中在该broker上所有的kafka分区领导者副本都不能被消费了，数据就会丢失了。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505216,"discussion_content":"嗯，也不能说是丢失了，毕竟数据还在Kafka中。只是Kafka在一致性和可用性方面优先保证一致性\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599789538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246351,"user_name":"Geek_riki","can_delete":false,"product_type":"c1","uid":2165795,"ip_address":"","ucode":"1D2C280C6DEBBF","user_header":"","comment_is_top":false,"comment_ctime":1599292057,"is_pvip":false,"replies":[{"id":"90627","content":"消费者组机制保证的是同一个组下的消费者“分摊”它们订阅的分区。不同组的消费者则彼此毫无关联，没有这个限制","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1599443522,"ip_address":"","comment_id":246351,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1599292057","product_id":100029201,"comment_content":"为什么一个消费组中的某个消费之只能消费一个分区？其他消费组中的消费者也可以同一个分区呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505121,"discussion_content":"消费者组机制保证的是同一个组下的消费者“分摊”它们订阅的分区。不同组的消费者则彼此毫无关联，没有这个限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599443522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244993,"user_name":"沙石","can_delete":false,"product_type":"c1","uid":1949831,"ip_address":"","ucode":"9307074CC75607","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/890Q99X0LkAMj4VPpiaicSSEciaBXsZ0kx9xvgMibibttFMGsUkrDx8EU4hdibmkAwjiaDGWia9UjDtiakzOzrgKNDqHZMQ/132","comment_is_top":false,"comment_ctime":1598776344,"is_pvip":false,"replies":[{"id":"90151","content":"你的所有话都是正确的：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1598836869,"ip_address":"","comment_id":244993,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598776344","product_id":100029201,"comment_content":"一个kafka实例是不是一个Broker，多个kafka实例就是多个broker，然后组成集群，一个topic有多个分区组成，多个分区可以分布在不同的broker，也就是创建一个topic，在所有的kafka实例都可以查询的到","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504762,"discussion_content":"你的所有话都是正确的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598836869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243013,"user_name":"lcf枫","can_delete":false,"product_type":"c1","uid":1144171,"ip_address":"","ucode":"D51E8F68BD41CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/75/6b/fd685164.jpg","comment_is_top":false,"comment_ctime":1597919228,"is_pvip":false,"replies":[{"id":"89602","content":"如果这4个消费者订阅了这5个topic，那么所有的topic都会被消费。主要看订阅与否。只要订阅了，哪怕只是一个消费者订阅了100个topic，那么这100个都会被消费","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1597971181,"ip_address":"","comment_id":243013,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597919228","product_id":100029201,"comment_content":"老师，如果我有<br>5个 topic， 每个topic 下只有一个partition。<br>然后有4个消费者。这个时候会有一个topic 无法消费吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504156,"discussion_content":"如果这4个消费者订阅了这5个topic，那么所有的topic都会被消费。主要看订阅与否。只要订阅了，哪怕只是一个消费者订阅了100个topic，那么这100个都会被消费","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597971181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242398,"user_name":"88591","can_delete":false,"product_type":"c1","uid":1254656,"ip_address":"","ucode":"04CE3E46455185","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","comment_is_top":false,"comment_ctime":1597712575,"is_pvip":false,"replies":[{"id":"89551","content":"hmmm..... 感觉应该还好。。。。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1597885856,"ip_address":"","comment_id":242398,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597712575","product_id":100029201,"comment_content":"如果支持副本读，同步消费者的offset，应该非常麻烦。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504000,"discussion_content":"hmmm..... 感觉应该还好。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597885856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242123,"user_name":"陈凡及格","can_delete":false,"product_type":"c1","uid":1226851,"ip_address":"","ucode":"C9EA565DC02BF4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJsLmETyjgibSegibNpyibia4elbVBBEgQRKibsIqXfVgSUu6Ztc4hI3j8sXibnX895eL85V6y5vk13r7EA/132","comment_is_top":false,"comment_ctime":1597595419,"is_pvip":false,"replies":[{"id":"89373","content":"图中只有两个broker，所以只能这么画了。实际上，分区可以分布在多个broker上的","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1597628180,"ip_address":"","comment_id":242123,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597595419","product_id":100029201,"comment_content":"一个主题的多个分区分布在不同broke上？图中好像看一主题多个分区都在一个broke上？难道是因为每个broke都保留所有分区副本原因？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503934,"discussion_content":"图中只有两个broker，所以只能这么画了。实际上，分区可以分布在多个broker上的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597628180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239726,"user_name":"Gavin","can_delete":false,"product_type":"c1","uid":1616970,"ip_address":"","ucode":"A5735665E303FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2UXuSevhia94o9Eky4OfMuSictaldxcqpjGuvRCOcvjIIoVBAENLEZbv2lgwmwC8icK1ZrUcneNtiaeFBV8MT3uzNg/132","comment_is_top":false,"comment_ctime":1596625543,"is_pvip":false,"replies":[{"id":"88658","content":"嗯呢，这是一个很重要的原因呢：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1596771911,"ip_address":"","comment_id":239726,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596625543","product_id":100029201,"comment_content":"请思考一下为什么 Kafka 不像 MySQL 那样允许追随者副本对外提供读服务？<br><br>主从同步有延迟，会导致数据不一致吗？consistency","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503195,"discussion_content":"嗯呢，这是一个很重要的原因呢：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596771911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235615,"user_name":"","can_delete":false,"product_type":"c1","uid":1057718,"ip_address":"","ucode":"","user_header":"","comment_is_top":false,"comment_ctime":1595126708,"is_pvip":false,"replies":[{"id":"87075","content":"通过多个副本的方式提供高持久性","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1595212180,"ip_address":"","comment_id":235615,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595126708","product_id":100029201,"comment_content":"分区的副本是怎样起到容灾的作用的？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501790,"discussion_content":"通过多个副本的方式提供高持久性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595212180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235601,"user_name":"","can_delete":false,"product_type":"c1","uid":1057718,"ip_address":"","ucode":"","user_header":"","comment_is_top":false,"comment_ctime":1595122715,"is_pvip":false,"replies":[{"id":"87076","content":"如果你的消费者组成员数量不是很多的话，其实并不会感受到这个问题。可以放心使用。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1595212216,"ip_address":"","comment_id":235601,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595122715","product_id":100029201,"comment_content":"消费者组里面的所有消费者实例不仅“瓜分”订阅主题的数据，而且更酷的是它们还能彼此协助。假设组内某个实例挂掉了，Kafka 能够自动检测到，然后把这个 Failed 实例之前负责的分区转移给其他活着的消费者。这个过程就是 Kafka 中大名鼎鼎的“重平衡”（Rebalance）。嗯，其实既是大名鼎鼎，也是臭名昭著，因为由重平衡引发的消费者问题比比皆是。事实上，目前很多重平衡的 Bug 社区都无力解决----------- 那么生产中还可以大胆使用吗？ ","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501783,"discussion_content":"如果你的消费者组成员数量不是很多的话，其实并不会感受到这个问题。可以放心使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595212216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235458,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1783638,"ip_address":"","ucode":"37CE8FC549732B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/37/56/7f98bf2c.jpg","comment_is_top":false,"comment_ctime":1595044530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595044530","product_id":100029201,"comment_content":"副本的领导这是分区级别，通过划分多个分区，每个分区的N个副本的领导者，可以分布在不同的brokers上，从而实现了负载均衡，就不需follower副本提供读服务了。","like_count":0},{"had_liked":false,"id":235279,"user_name":"tongmin_tsai","can_delete":false,"product_type":"c1","uid":1045090,"ip_address":"","ucode":"D9423E770D5846","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/62/f873cd8f.jpg","comment_is_top":false,"comment_ctime":1594958789,"is_pvip":false,"replies":[{"id":"87081","content":"一个分区至少要有一个replica。如果只有1个，那么那个replica就是leader","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1595213146,"ip_address":"","comment_id":235279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594958789","product_id":100029201,"comment_content":"也就是说，实际上，最小的操作单位是一个Replica吗？按照上面的理解，一个Partition下至少得有一个Replica吗？是作为Leader吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501673,"discussion_content":"一个分区至少要有一个replica。如果只有1个，那么那个replica就是leader","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595213146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233707,"user_name":"松鼠鱼","can_delete":false,"product_type":"c1","uid":1815185,"ip_address":"","ucode":"C0E87CCF71DB44","user_header":"","comment_is_top":false,"comment_ctime":1594397591,"is_pvip":true,"replies":[{"id":"86292","content":"broker的总数量一定会大于N的，因为你压根都无法创建大于Broker数的topic：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1594448243,"ip_address":"","comment_id":233707,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594397591","product_id":100029201,"comment_content":"老师，关于这段话 “倘若领导者副本积累了太多的数据以至于单台 Broker 机器都无法容纳了，就把数据分割成多份保存在不同的 Broker 上，这种机制就是所谓的分区（Partitioning）”，我理解的意思是，每个分区的消息是不同的，并且同一个分区不会重复存储在不同broker上，因为那样就达不到分散数据的效果了。或者说，如果每一个分区的数据在不同broker上都有空间进行备份，那就不存在 “数据太多以至于单台 Broker 无法容纳” 的问题了呀？<br>但是实际上，您在评论的回复里也说了，一个分区的N个副本一定是存放在N个不同的broker上。那么是不是可以理解为，broker的总数量一定远大于N？不然空间会不够吧？尤其在多个topic存在于一个kafka集群的情况下？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501139,"discussion_content":"broker的总数量一定会大于N的，因为你压根都无法创建大于Broker数的topic：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594448243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233706,"user_name":"松鼠鱼","can_delete":false,"product_type":"c1","uid":1815185,"ip_address":"","ucode":"C0E87CCF71DB44","user_header":"","comment_is_top":false,"comment_ctime":1594396658,"is_pvip":true,"replies":[{"id":"86293","content":"完全正确。每个broker都可能是某些分区的leader，其他分区的follower","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1594448269,"ip_address":"","comment_id":233706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594396658","product_id":100029201,"comment_content":"胡老师，对于一个多分区的topic来说，各个分区的leader replica并不一定都在同一个broker（server）上对吗？那么当我用一个consumer线程同时消费多分区的时候，其实我是在同时和多个服务器进行通信？这个理解正确吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501138,"discussion_content":"完全正确。每个broker都可能是某些分区的leader，其他分区的follower","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594448269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231274,"user_name":"小阳","can_delete":false,"product_type":"c1","uid":1296135,"ip_address":"","ucode":"97A162992E6A81","user_header":"https://static001.geekbang.org/account/avatar/00/13/c7/07/5798c17e.jpg","comment_is_top":false,"comment_ctime":1593620402,"is_pvip":false,"replies":[{"id":"85436","content":"👍","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593658008,"ip_address":"","comment_id":231274,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1593620402","product_id":100029201,"comment_content":"思考题：<br>  首先kafka的业务逻辑简单，只有顺序读，不像mysql复杂的sql查询操作。允许所有副本向外提供读的服务，并不多带来多大的提升。同时，因为可以随便读了，磁盘加载log到内存的缓存信息就更难命中，每个borker都需要经常将磁盘里log信息反复加载进内存，大大增加了磁盘的io。反而会导致性能的下降","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500230,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593658008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300559,"discussion_content":"不明白为什么是随便读了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598170553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229563,"user_name":"Geek4329","can_delete":false,"product_type":"c1","uid":2028951,"ip_address":"","ucode":"D6FB8D1B2D5DAC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/97/9a7ee7b3.jpg","comment_is_top":false,"comment_ctime":1593058566,"is_pvip":false,"replies":[{"id":"84793","content":"一个broker上可以有多个topic的分区。事实上，这是经常出现的情况","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593163456,"ip_address":"","comment_id":229563,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593058566","product_id":100029201,"comment_content":"老师好，topic是不是类似于es中索引的概念呢？<br>还是说一个Broker可以有多个topic?","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499535,"discussion_content":"一个broker上可以有多个topic的分区。事实上，这是经常出现的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593163456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229420,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1592989914,"is_pvip":true,"replies":[{"id":"84691","content":"follower对外提供服务的弊端在于有lag的情况。不过你说的绝大时间内都是成立的：）","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1593002605,"ip_address":"","comment_id":229420,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592989914","product_id":100029201,"comment_content":"一个分区有多个副本，但只有leader对外提供服务。其实follower对外提供服务是没必要的。因为一个分区注定只能被一个消费者消费。而且我觉得follower就是leader的备胎，等leader挂掉，然后被选举成新的leader。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499475,"discussion_content":"follower对外提供服务的弊端在于有lag的情况。不过你说的绝大时间内都是成立的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593002605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227111,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1592289855,"is_pvip":false,"replies":[{"id":"83658","content":"嗯嗯，详细的解释~<br>","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592296205,"ip_address":"","comment_id":227111,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592289855","product_id":100029201,"comment_content":"-------分区与副本的概念与原理<br>把数据（比如主题）分割成多份（多个分区）保存在不同的 Broker 上。<br>将每个Topic主题划分成多个分区（Partition），每个分区是一组有序的消息日志。<br>生产者生产的每条消息只会被发送到一个分区中。<br>副本是在分区这个层级定义的，每个分区有了副本，每条消息就有了副本。<br>每个分区下可以配置若干个副本比如N个副本，其中只能有 1 个领导者副本和 N-1 个追随者副本。<br><br>-------副本的工作机制：<br>生产者总是向领导者副本写消息；而消费者总是从领导者副本读消息。<br>至于追随者副本，它只做一件事：向领导者副本发送请求，请求领导者把最新生产的消息发给它，这样它能保持与领导者的同步。<br><br>分区位移：每条消息在分区中的位置信息由一个叫位移（Offset）的数据来表征<br><br>-------文末图的再解释：<br>Broker0上的分区0、1、2都在Broker1上有对应副本。绿色为Leader副本，蓝色为Follower副本。Follower副本从Leader副本上同步分区消息。同一个分区的所有副本中只能有一个Leader副本，N-1个Follower副本。<br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498499,"discussion_content":"嗯嗯，详细的解释~\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592296205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226836,"user_name":"李东明","can_delete":false,"product_type":"c1","uid":2024087,"ip_address":"","ucode":"DBB80A1FF260C5","user_header":"https://static001.geekbang.org/account/avatar/00/1e/e2/97/c56fad85.jpg","comment_is_top":false,"comment_ctime":1592213340,"is_pvip":false,"replies":[{"id":"83663","content":"一个分区的Leader副本接收生产者写入的消息，同时被其它消费者（包括Follower副本）读取消息。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592296650,"ip_address":"","comment_id":226836,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592213340","product_id":100029201,"comment_content":"生产者总是向领导者副本写消息；而消费者总是从领导者副本读消息  意思一个分区 同时被生产者写入数据 还要同时被一个消费者 消费？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498386,"discussion_content":"一个分区的Leader副本接收生产者写入的消息，同时被其它消费者（包括Follower副本）读取消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592296650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226199,"user_name":"Evan","can_delete":false,"product_type":"c1","uid":1344281,"ip_address":"","ucode":"B877ABD0CF4661","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/19/0a3fe8c1.jpg","comment_is_top":false,"comment_ctime":1591977896,"is_pvip":false,"replies":[{"id":"83441","content":"随着Kafka跨IDC的场景越来越多，这种照顾本地局部性的需求也是越来越多了","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1592183671,"ip_address":"","comment_id":226199,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1591977896","product_id":100029201,"comment_content":"Kafka 不像 MySQL 那样允许追随者副本对外提供读服务。<br>首先，读写分离，其实主要解决多读业务场景，同时也是为了减轻的主库压力。另外MySQL数据库不具备分布式提供能力，如果有这个能力，相信大多数的开发人员是会选择从主库读取数据，此时备库仅仅用于备库。另外可参考一下TiDB 分布式数据库。<br>从kafka设计上来看上，首Leader+Follower 之间存在一定时间内数据一致性问题，其实MySQL或Redis数也存在一定时间内的数据一致性问题，但业务上或读的使用方是能接爱的一定时间内数据不一致。<br>kafka 主要是提供消息引擎服务，需要数据有一定精准消费能力，便于后续业务处理。<br><br>另外Kafka已提供分布式服务（Partition+Broker）已解决常见业务场景横向扩展的问题，个人没有必要提供类似MySQL或Redis读写分离。<br>其次消费者是从offset控制消息的，如Follower宕机，再另外Follower或Leader消费数据时，应该怎样确实offset的数据，有可能已重复消息或丢失数据，有点类似Rebalance过程。<br>再次Kafka为了提供读写分离能力，可能引发潜在其它问题，然后再消费端变得异常复杂，有点得不偿失，即“丢了西瓜捡芝麻”的意思。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498145,"discussion_content":"随着Kafka跨IDC的场景越来越多，这种照顾本地局部性的需求也是越来越多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592183671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224627,"user_name":"盛情的jack","can_delete":false,"product_type":"c1","uid":1123566,"ip_address":"","ucode":"E4EDA00FDE07E4","user_header":"https://static001.geekbang.org/account/avatar/00/11/24/ee/12068a33.jpg","comment_is_top":false,"comment_ctime":1591489073,"is_pvip":false,"replies":[{"id":"82741","content":"你是想说消息过期吗？的确有个定时任务去比较当前时间与消息时间戳的差值","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1591540522,"ip_address":"","comment_id":224627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591489073","product_id":100029201,"comment_content":"老师，问下,这个broke怎么判断log过期的，是有定时的任务去轮询所有的数据有没有过期？具体底层是一个怎样实现。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497546,"discussion_content":"你是想说消息过期吗？的确有个定时任务去比较当前时间与消息时间戳的差值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591540522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221574,"user_name":"红豆成香","can_delete":false,"product_type":"c1","uid":1488601,"ip_address":"","ucode":"FB8FBB639B4BA6","user_header":"https://static001.geekbang.org/account/avatar/00/16/b6/d9/4d8a4d4c.jpg","comment_is_top":false,"comment_ctime":1590543264,"is_pvip":false,"replies":[{"id":"81699","content":"1. 对的。leader对外提供读写服务。follower只是被动追随leader副本<br>2. 分区可能散落在不同的broker上。每个broker上可能有多个分区的副本，有些副本是leader副本，有些是follower副本。同一个分区的多个副本一定分布在不同的broker上。这样一个broker挂了其他broker还保存有数据","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1590546780,"ip_address":"","comment_id":221574,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590543264","product_id":100029201,"comment_content":"老师，您好，从头开始学，有两个问题思考了好久，需要确认一下：<br>1. leader副本的含义是不是副本，就是leader服务提供读写分区，如果它出故障了，就新选举一个follower副本做leader服务；<br>2. 一个broker包含所有的分区吗，只不过这些分区不都是leader服务，不然broker挂了，它之上的分区在其他broker没有保存，就会丢失；","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496500,"discussion_content":"1. 对的。leader对外提供读写服务。follower只是被动追随leader副本\n2. 分区可能散落在不同的broker上。每个broker上可能有多个分区的副本，有些副本是leader副本，有些是follower副本。同一个分区的多个副本一定分布在不同的broker上。这样一个broker挂了其他broker还保存有数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590546780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206127,"user_name":"星之所在","can_delete":false,"product_type":"c1","uid":1247574,"ip_address":"","ucode":"03ADB0ADD5FC27","user_header":"https://static001.geekbang.org/account/avatar/00/13/09/56/2628852c.jpg","comment_is_top":false,"comment_ctime":1586790542,"is_pvip":false,"replies":[{"id":"76999","content":"是这样的。","user_name":"作者回复","user_name_real":"胡夕","uid":"1288090","ctime":1586828792,"ip_address":"","comment_id":206127,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586790542","product_id":100029201,"comment_content":"主从模式消息的一致性也会带来很大的问题","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491684,"discussion_content":"是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586828792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185968,"user_name":"一十六夜","can_delete":false,"product_type":"c1","uid":1606581,"ip_address":"","ucode":"41D4A6695B2A7B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIIibocUHNRgafeNUvibW0YI2v1qDaiaZCVQ37FcrMs0ettIDD0snhsy4Ac2ADnLmjM7KGNeznj2hrg/132","comment_is_top":false,"comment_ctime":1583733635,"is_pvip":false,"replies":[{"id":"71936","content":"leader replica和follower replica是在分区层次下定义的，即每个分区都有一个leader replica和若干个follower<br>","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1583810244,"ip_address":"","comment_id":185968,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583733635","product_id":100029201,"comment_content":"老师，最后一个图的Broker0中按照图例分区0 和分区2都是leader replica吧，但是前文中提到只能有1个leader replica，N-1个follower replica，这是为什么呢？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486564,"discussion_content":"leader replica和follower replica是在分区层次下定义的，即每个分区都有一个leader replica和若干个follower\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583810244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176702,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1581144389,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581144389","product_id":100029201,"comment_content":"为什么说Kafka是分布式高可用的，第一，Kafka集群避免了单点故障，第二，消息分片副本冗余机制保证数据不会丢。","like_count":0},{"had_liked":false,"id":149090,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1573139775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573139775","product_id":100029201,"comment_content":"留言中的高手真多且问题问得特别棒","like_count":0},{"had_liked":false,"id":136095,"user_name":"飞天大白菜","can_delete":false,"product_type":"c1","uid":1676519,"ip_address":"","ucode":"77344998A30D6E","user_header":"https://static001.geekbang.org/account/avatar/00/19/94/e7/bfef4648.jpg","comment_is_top":false,"comment_ctime":1569344213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569344213","product_id":100029201,"comment_content":"主从模式follower注定是有延迟的。如果跑一个完美的consensus算法可以保证同步，但是对于kafka这样一个低延迟的服务来说可能是太过奢侈了（？）时间上来看同一个dc中的raft不慢，但是每条log也要数毫秒的时间来进行共识确认。<br><br>从follower读本质上也是一个共识问题，master和follower都要就同一个consumer的offset达成共识，是否能既保证正确性又保证低延迟大概是需要工程实践来验证的。","like_count":0},{"had_liked":false,"id":135695,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1569242451,"is_pvip":false,"replies":[{"id":"52069","content":"消息是保存在副本中的。每条消息可以保存在多个副本中实现冗余。消费者只能读取领导者副本中的消息，其他副本只是充当leader的备选而已","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1569294061,"ip_address":"","comment_id":135695,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569242451","product_id":100029201,"comment_content":"副本和消息是什么关系？<br>是一个消息有多个备份？<br>消费者只消费其中一个消息，其余的都是备份？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468307,"discussion_content":"消息是保存在副本中的。每条消息可以保存在多个副本中实现冗余。消费者只能读取领导者副本中的消息，其他副本只是充当leader的备选而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569294061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135562,"user_name":"肥low","can_delete":false,"product_type":"c1","uid":1043480,"ip_address":"","ucode":"A158AFAAB8C742","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","comment_is_top":false,"comment_ctime":1569213443,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569213443","product_id":100029201,"comment_content":"因为分区(队列)是传统的队列模式,是保证消息严格顺序的保障,分区副本主要是为了保障高可用,跟MySQL的Slave场景不一样?","like_count":0},{"had_liked":false,"id":133040,"user_name":"LJK","can_delete":false,"product_type":"c1","uid":1199213,"ip_address":"","ucode":"12B2441099FF1D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/6d/c20f2d5a.jpg","comment_is_top":false,"comment_ctime":1568334243,"is_pvip":false,"replies":[{"id":"51250","content":"默认情况下，所有分区的所有副本排序之后按照round robin策略依次放入不同broker上","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1568594010,"ip_address":"","comment_id":133040,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1568334243","product_id":100029201,"comment_content":"老师好，请问leader partition是随机分给不同broker的吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467233,"discussion_content":"默认情况下，所有分区的所有副本排序之后按照round robin策略依次放入不同broker上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568594010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54851,"discussion_content":"应该是 leader 副本把","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574319565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132725,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1568204218,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568204218","product_id":100029201,"comment_content":"读取从库是希望可以平衡负载，kafka通过了分区和消费组已经实现了。而且副本涉及到分布式一致性问题，kafka的isr机制会存在部分临时不一致情况，不适合客户端在多个副本之间切换读取","like_count":0},{"had_liked":false,"id":129793,"user_name":"兔2🐰🍃","can_delete":false,"product_type":"c1","uid":1096984,"ip_address":"","ucode":"1FEDA044BB6CBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/18/2af6bf4b.jpg","comment_is_top":false,"comment_ctime":1567253548,"is_pvip":false,"replies":[{"id":"48512","content":"是这样的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1567386075,"ip_address":"","comment_id":129793,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567253548","product_id":100029201,"comment_content":"老师您好，结合结尾的图来理解副本，是不是针对集群而言的，比如10个Broker, 每个分区都有10个副本，包含1个Leader副本，9个Follower副本，Leader按照某策略分布在不同的broker上？ 是这样理解吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465653,"discussion_content":"是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567386075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125824,"user_name":"欧文","can_delete":false,"product_type":"c1","uid":1042023,"ip_address":"","ucode":"C6C6F7262F6108","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/67/a5154e36.jpg","comment_is_top":false,"comment_ctime":1566262713,"is_pvip":false,"replies":[{"id":"46209","content":"PPT","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1566263987,"ip_address":"","comment_id":125824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566262713","product_id":100029201,"comment_content":"请问最后那个图用什么工具画的","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463705,"discussion_content":"PPT","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566263987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124398,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1565876895,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1565876895","product_id":100029201,"comment_content":"有并发问题吧","like_count":0},{"had_liked":false,"id":122722,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1565504899,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565504899","product_id":100029201,"comment_content":"课前思考<br>1：目前所知的消息引擎系统中的术语<br>1-1：生产者——生产消息的应用<br>1-2：消费者——消费消息的应用<br>1-3：主题——连接生产者和消费者，让消息可以流转的东西，对于主题这个东西理解的就不太好，他的本质是啥呢？只知道他是一个具有唯一性的字符串。另外，这里的生产者和消费者，可以没有任何关系，并且可以时是M：N的关系。<br>1-4：broker——消息引擎系统的服务端，是生产者和消费者的消息传输的链接器，这也理解的不太好，不知道他究竟是个什么东西，也是一个应用，只是功能的特点像一个连接器嘛？<br>1-5：消息——消息引擎系统处理的对象，消息引擎系统是咋处理的呢？就倒一道手，传输一下嘛？<br>为了高可用性会多弄一些副本？为了数据分析，持久化一下？为了传输编码解码？为了安全加密解密？为了性能压缩解压缩？<br>课后思考<br>1：看完这篇文章，又丰富了一些术语，比如：<br>1-1：分区——一个有序不变的消息序列，一个主题可以有多个分区。<br>1-2：消息位移——表示分区中每条消息的信息，是一个单调自增且不变的值。我的理解，就是消息在分区中的位置。<br>1-3：消费者位移——表示消费者消费的进度，每个消费者都有自己的消费者位移。我的理解是，消费者消费到那条消息了。<br>1-4：消费者组——多个消费者实例共同组成的一个组，同时消费多个分区以实现高吞出量。我的理解，就是多个消费者实例在一块，一起消费一种消息。<br>1-5：副本——分区层级下的概念，指一条消息可以有多个完全一样的存在，存储在不同的地方以实现数据的高可用。<br>1-6：领导者副本——与客户端程序进行交互<br>1-7：追随者副本——与领导者副本保持同步<br>1-8：重平衡——消费者组内某个消费者实例宕机时，其他消费者实例自动重新分配此主题的分区消费的过程。<br>1-9：点对点模式——A应用的消息只能有B应用来消费<br>1-10：发布&#47;订阅模式——消息的生产和消费者的关系是M：N<br>2：kafka特性的支撑因素<br>高可用——分布式，broker实例部署分布式、数据存储分布式<br>高吞出——消息日志采用顺序IO写、消费者组，多个消费者实例同时消费<br>一图胜千言，老师最后的图非常好，如果能将一个消息的生命周期也画出来就更好了，我觉得从简单到复杂的讲一下会非常有助于理解kafka，比如：只有一个生产者、一个消费者、一个主题、一个broker，一个分区的情况下，一条消息是怎么一步步传输的。然后再复杂一下，再讲解一下消息的流转过程。这样感觉对于kafka是怎么处理消息的会一下子清晰起来，拉一条主线，然后再不断的丰富它。<br>看完所有的评论对于以下概念又多了一些认知，但也有些疑问。<br>1：kafka是使用scala语言编写的，是否也像JAVA一样需要虚拟机的来提供运行环境的支持？<br>2：在一台服务器上运行一次kafka的程序就表示有一个broker的进程了是吗？并且在一台服务器上可以运行n次kafka的程序相当于有n个broker的进程了是吗？<br>3：“虽然多个 Broker 进程能够运行在同一台机器上，但更常见的做法是将不同的 Broker 分散运行在不同的机器上，这样如果集群中某一台机器宕机，即使在它上面运行的所有 Broker 进程都挂掉了，其他机器上的 Broker 也依然能够对外提供服务。这其实就是 Kafka 提供高可用的手段之一。”这段描述，我没明白不同的broker是什么意思？是相对什么来讲的？还是说一个kafka程序跑起来之后，可以创建多个主题，每个主题可以有多个broker，每个broker可以有多个分区，每个分区可有多个副本，这些副本在多个机器上。不知这样理解是否正确？<br>","like_count":0},{"had_liked":false,"id":121095,"user_name":"谢特","can_delete":false,"product_type":"c1","uid":1248684,"ip_address":"","ucode":"9C30DBFECFE649","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/ac/09678490.jpg","comment_is_top":false,"comment_ctime":1565057669,"is_pvip":false,"replies":[{"id":"44525","content":"嗯嗯","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1565070926,"ip_address":"","comment_id":121095,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565057669","product_id":100029201,"comment_content":"Kafka 的leader broker上的副本是领导者副本？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461622,"discussion_content":"嗯嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565070926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117687,"user_name":"知易","can_delete":false,"product_type":"c1","uid":1246882,"ip_address":"","ucode":"BD3E3F0F0A40EF","user_header":"https://static001.geekbang.org/account/avatar/00/13/06/a2/350c4af0.jpg","comment_is_top":false,"comment_ctime":1564111518,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564111518","product_id":100029201,"comment_content":"补充上一条留言。<br>官方：<br>第一层是主题层，每个主题可以配置 M 个分区，而每个分区又可以配置 N 个副本。<br>第二层是分区层，每个分区的 N 个副本中只能有一个充当领导者角色，对外提供服务；其他 N-1 个副本是追随者副本，只是提供数据冗余之用。<br>第三层是消息层，分区中包含若干条消息，每条消息的位移从 0 开始，依次递增。最后，客户端程序只能与分区的领导者副本进行交互<br>我瞎想的：<br>第一层是主题层，每个主题可以配置N个副本，N 个副本中只能有一个充当领导者角色，对外提供服务；其他 N-1 个副本是追随者副本，只是提供数据冗余之用。<br>第二层是消息层，副本中包含若干条消息，每条消息的位移从 0 开始，依次递增。最后，客户端程序只能与主题的领导者副本进行交互<br><br>我瞎想的这个，把主题层的粒度降低到官方的分区粒度一样，，这样应该可以吧，，<br>","like_count":0},{"had_liked":false,"id":117685,"user_name":"知易","can_delete":false,"product_type":"c1","uid":1246882,"ip_address":"","ucode":"BD3E3F0F0A40EF","user_header":"https://static001.geekbang.org/account/avatar/00/13/06/a2/350c4af0.jpg","comment_is_top":false,"comment_ctime":1564111150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564111150","product_id":100029201,"comment_content":"     老师，对于分区概念的来源，“倘若领导者副本积累了太多的数据以至于单台 Broker 机器都无法容纳了，此时应该怎么办呢？一个很自然的想法就是，能否把数据分割成多份保存在不同的 Broker 上”。这里有一个疑惑。<br>     这里的意思是，（先假设这里的broker只有一个opic）分区是为了解决单台broker中topic无法容纳太多数据而引入的，将其分割成多份也可以保存在不同机器上以提高吞吐量。那么如果单个分区积累了太多数据又该如何？单个分区积累数据太多又是如何解决得，如果有某种解决方式，为何当时不直接运用到topic上呢？可能描述的不太清楚，请老师指点。<br><br>","like_count":0},{"had_liked":false,"id":114872,"user_name":"Wenthkim","can_delete":false,"product_type":"c1","uid":1111515,"ip_address":"","ucode":"24F387DA17D7DA","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/db/93d89a14.jpg","comment_is_top":false,"comment_ctime":1563420645,"is_pvip":false,"replies":[{"id":"41996","content":"powerpoint","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1563458819,"ip_address":"","comment_id":114872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563420645","product_id":100029201,"comment_content":"请问老师，文章中的图是用什么工具画的","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458856,"discussion_content":"powerpoint","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563458819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112219,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1562686213,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562686213","product_id":100029201,"comment_content":"我觉得在kafka中读数据=消费数据，如果flower可以读。就和MySQL的从库可以写一样了。。。所以MySQL从库不能写kafka的flower不能读很在理啊。MySQL的读是幂等操作kafka的读不是幂等操作。","like_count":0},{"had_liked":false,"id":111786,"user_name":"skying","can_delete":false,"product_type":"c1","uid":1041865,"ip_address":"","ucode":"E7CFF50AB64BB1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/c9/1061582b.jpg","comment_is_top":false,"comment_ctime":1562599264,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1562599264","product_id":100029201,"comment_content":"你好，请教个问题，kafka在你实际工作中用在了什么业务场景，会涉及到钱吗，怎么保证算的正确。","like_count":0},{"had_liked":false,"id":110533,"user_name":"forever","can_delete":false,"product_type":"c1","uid":1142325,"ip_address":"","ucode":"AAA930B496D5A0","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/35/11008e02.jpg","comment_is_top":false,"comment_ctime":1562291157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562291157","product_id":100029201,"comment_content":"谢谢老师讲解，有一个疑问就是，图上只有3个分区，画了4个消费者，是不是有一个会闲置，真实中我们是不是设置消费者数不超过partition数，这样不浪费资源","like_count":0},{"had_liked":false,"id":107166,"user_name":"beiliu","can_delete":false,"product_type":"c1","uid":1292128,"ip_address":"","ucode":"06E1EC1244A52B","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLmBgic9UlGySyG377pCVzNnbgsGttrKTCFztunJlBTDS32oTyHsJjAFJJsYJyhk9cNE5OZeGKWJ6Q/132","comment_is_top":false,"comment_ctime":1561471738,"is_pvip":false,"replies":[{"id":"38822","content":"Kafka自带脚本无法实现这个功能。。。。只能自己编写程序实现","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1561514209,"ip_address":"","comment_id":107166,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1561471738","product_id":100029201,"comment_content":"您好，老师，请问怎么使用kafka自带的shell脚本完成基于某个时间戳开始的10条消息的消费，打印出消息本身的time stamp,partition,offset和消息本身的内容","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455394,"discussion_content":"Kafka自带脚本无法实现这个功能。。。。只能自己编写程序实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561514209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105935,"user_name":"韩大","can_delete":false,"product_type":"c1","uid":1198440,"ip_address":"","ucode":"998B64DD552C8D","user_header":"https://static001.geekbang.org/account/avatar/00/12/49/68/a05fb728.jpg","comment_is_top":false,"comment_ctime":1561107307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561107307","product_id":100029201,"comment_content":"太棒了，我之前花了很长时间才理解的几个元素，让老师这么轻松的，非常完美的描述下来了，太👍！","like_count":0},{"had_liked":false,"id":104759,"user_name":"王大伟","can_delete":false,"product_type":"c1","uid":1180955,"ip_address":"","ucode":"A3BDC4D7B94B0F","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/1b/fc1aa0ac.jpg","comment_is_top":false,"comment_ctime":1560828557,"is_pvip":true,"replies":[{"id":"38021","content":"嗯嗯，正常情况下每个分区都应该有一个leader和若干个（也可能是0个）follower。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560904492,"ip_address":"","comment_id":104759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560828557","product_id":100029201,"comment_content":"Follower和leader是针对副本而言的吗？是否意味着，假设一个Topic有5个分区，每个分区有2个replica，那么系统中可能会有5个leader？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454412,"discussion_content":"嗯嗯，正常情况下每个分区都应该有一个leader和若干个（也可能是0个）follower。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560904492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103841,"user_name":"青莲","can_delete":false,"product_type":"c1","uid":1181787,"ip_address":"","ucode":"6BA5D5D47DE38E","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/5b/2a342424.jpg","comment_is_top":false,"comment_ctime":1560527423,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1560527423","product_id":100029201,"comment_content":"1、同一消费者实例在正常运行时只能消费同一分区，如果追随者副本提供读服务，意味着每个消费者需同时维护多个副本之间offset<br>2、最最重要的是 同时读取副本会造成消息的重复消费，乱序问题，会引发一系统分布式问题<br>3、从效率上来讲副本提供读取服务带不了一丁点收益","like_count":0},{"had_liked":false,"id":103587,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1143372,"ip_address":"","ucode":"335960F683C23C","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/4c/4d636a23.jpg","comment_is_top":false,"comment_ctime":1560475050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560475050","product_id":100029201,"comment_content":"追随者副本拉取领导者副本不是实时的，允许读取追随者副本会导致读取数据不一致","like_count":0},{"had_liked":false,"id":103034,"user_name":"风起青萍","can_delete":false,"product_type":"c1","uid":1442944,"ip_address":"","ucode":"68F2517E080FDE","user_header":"https://static001.geekbang.org/account/avatar/00/16/04/80/37b74ffc.jpg","comment_is_top":false,"comment_ctime":1560352455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560352455","product_id":100029201,"comment_content":"胡先生，讲的很棒。","like_count":0},{"had_liked":false,"id":102988,"user_name":"阳仔","can_delete":false,"product_type":"c1","uid":1318915,"ip_address":"","ucode":"4907A3750CEAD6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo2SjCeylLv0P3Glle5277kA4b8cAuxr1NrC0njPKEqzSpB8IEicHB29GicFFwG1qiaxs4hxRiaBmoibVw/132","comment_is_top":false,"comment_ctime":1560343085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560343085","product_id":100029201,"comment_content":"如果消费者都读follower就没有办法保证有序了","like_count":0},{"had_liked":false,"id":102969,"user_name":"小飞","can_delete":false,"product_type":"c1","uid":1000347,"ip_address":"","ucode":"4C126548FBA94C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/9b/50927dfc.jpg","comment_is_top":false,"comment_ctime":1560340091,"is_pvip":false,"replies":[{"id":"37296","content":"没有冒犯的意思，不过你的理解是错误的。minIsr是为了确保因ISR shrink而导致hw过早移动而带来的“假”同步。如果ISR没有发生意外shrink，acks=-1的含义就是只有当所有副本都同步了消息broker才返回response。<br><br>还是那句话，minIsr是为了确保ISR意外shrink而依然保持持久化的手段","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560385548,"ip_address":"","comment_id":102969,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560340091","product_id":100029201,"comment_content":"“使用ack=-1 , min-replica=1 （replica=2) 应该就可以。<br>对生产来说，可以兼顾生产不丢消息，又不需要所有的follower全部完成复制”<br><br>acks=-1了leader会等所有follower都同步了该消息后才会返回给client“<br><br>胡老师， 这回复可能不太准确。 <br>按照Kafka 官方文档的解释， <br>“When a producer sets acks to &quot;all&quot; (or &quot;-1&quot;), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception (either NotEnoughReplicas or NotEnoughReplicasAfterAppend).<br>When used together, min.insync.replicas and acks allow you to enforce greater durability guarantees. A typical scenario would be to create a topic with a replication factor of 3, set min.insync.replicas to 2, and produce with acks of &quot;all&quot;. This will ensure that the producer raises an exception if a majority of replicas do not receive a write.&quot;<br>min.insync.replicas =1 , replica =2 , ACK  = -1 ， 只需要leader 和之外的一个replica 返回即可。 不需要所有的follower 返回。 <br>请胡老师再帮确认下。 哈哈","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453671,"discussion_content":"没有冒犯的意思，不过你的理解是错误的。minIsr是为了确保因ISR shrink而导致hw过早移动而带来的“假”同步。如果ISR没有发生意外shrink，acks=-1的含义就是只有当所有副本都同步了消息broker才返回response。\n\n还是那句话，minIsr是为了确保ISR意外shrink而依然保持持久化的手段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560385548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102875,"user_name":"开水","can_delete":false,"product_type":"c1","uid":1528555,"ip_address":"","ucode":"651491C38B925B","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/eb/eec719f3.jpg","comment_is_top":false,"comment_ctime":1560318964,"is_pvip":false,"replies":[{"id":"37214","content":"是的","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560330065,"ip_address":"","comment_id":102875,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560318964","product_id":100029201,"comment_content":"一个partition的一个副本会全部存储在一台broker上么？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453627,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560330065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102712,"user_name":"开水","can_delete":false,"product_type":"c1","uid":1528555,"ip_address":"","ucode":"651491C38B925B","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/eb/eec719f3.jpg","comment_is_top":false,"comment_ctime":1560298918,"is_pvip":false,"replies":[{"id":"37168","content":"schema registry主要是用于管理topic消息格式的前后向兼容的。比如公司里面两个部门A和B，A向Kafka写消息，B从Kafka读消息。A和B要约定好消息格式。选择一个对兼容性支持比较好的schema自然是皆大欢喜。其实这也是PB、Thrift和Avro这类编码格式发展的初衷。<br><br>至于分布式存储，我专栏里面也写了Kafka第一作者Jay Kreps写过一篇文章讨论过Kafka当data store的可能性。我的观点是：姑且一听即可，实际使用过程中我没有见过把Kafka真当做持久化存储来使用的场景 。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560306943,"ip_address":"","comment_id":102712,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560298918","product_id":100029201,"comment_content":"Confluent里面的一个组件Avro schema registry server 就是用Kafka中的一个topic来当schema内容和版本存储用的。目前还没弄懂原理，但是已经单独把这个功能拆出来当系统内部消息统一化管理的组件来用了。求大神讲讲Kafka具体是怎么当分布式存储来使用的😁","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453540,"discussion_content":"schema registry主要是用于管理topic消息格式的前后向兼容的。比如公司里面两个部门A和B，A向Kafka写消息，B从Kafka读消息。A和B要约定好消息格式。选择一个对兼容性支持比较好的schema自然是皆大欢喜。其实这也是PB、Thrift和Avro这类编码格式发展的初衷。\n\n至于分布式存储，我专栏里面也写了Kafka第一作者Jay Kreps写过一篇文章讨论过Kafka当data store的可能性。我的观点是：姑且一听即可，实际使用过程中我没有见过把Kafka真当做持久化存储来使用的场景 。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560306943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102496,"user_name":"风中花","can_delete":false,"product_type":"c1","uid":1085237,"ip_address":"","ucode":"067E0A1E116844","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/35/f1839bb2.jpg","comment_is_top":false,"comment_ctime":1560237802,"is_pvip":false,"replies":[{"id":"37021","content":"同一个分区下的所有副本必然在不同的broker上，因此不会存在同一个分区下follower副本和leader副本在同一台broker上的情况","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560252844,"ip_address":"","comment_id":102496,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560237802","product_id":100029201,"comment_content":"老师，我想问一个问题，我也是在画图过程发现 ，Follower副本 只能向别的broker leader 发送请求拉取信息吗，它不向自己所在得broker（leader) 发送请求吗，还是说他们是交互得，这个请求拉取得过程是怎么样得了？ 多谢指导！","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453452,"discussion_content":"同一个分区下的所有副本必然在不同的broker上，因此不会存在同一个分区下follower副本和leader副本在同一台broker上的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560252844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102491,"user_name":"霄嵩","can_delete":false,"product_type":"c1","uid":1241047,"ip_address":"","ucode":"13F41F87B812C4","user_header":"https://static001.geekbang.org/account/avatar/00/12/ef/d7/049cc631.jpg","comment_is_top":false,"comment_ctime":1560234847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560234847","product_id":100029201,"comment_content":"老师写的很棒，最后一张图一目了然。","like_count":0},{"had_liked":false,"id":102468,"user_name":"歪曲丶","can_delete":false,"product_type":"c1","uid":1182880,"ip_address":"","ucode":"5D3DDAAFFE2C7D","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/a0/a7a87f96.jpg","comment_is_top":false,"comment_ctime":1560228524,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1560228524","product_id":100029201,"comment_content":"kafka写副本很耗时 ack 如果为all 严重影响消费 mysql通过binlog 因为主已经落盘 从可以提供读 但也会存在一致性问题 但是不影响并发 不存在丢数据 ","like_count":0},{"had_liked":false,"id":102153,"user_name":"demmm","can_delete":false,"product_type":"c1","uid":1564662,"ip_address":"","ucode":"59AFF2F0AE8975","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Dj5vm74aAUm94vSrpRlCx2YOHhcufubUA6yJHzcdNw3X7TYwKjpl0kAxfTs9Xcmt0YuIHZu7fHI4mt1mzKs4sw/132","comment_is_top":false,"comment_ctime":1560152263,"is_pvip":false,"replies":[{"id":"36833","content":"应该这么说：Kafka通过消费者组机制同时实现了对p2p和发布&#47;订阅模型的支持。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560156086,"ip_address":"","comment_id":102153,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560152263","product_id":100029201,"comment_content":"这里面的点对点指的是同一条消息只能被下游的一个消费者消费，其他消费者则不能染指。在 Kafka 中实现这种 P2P 模型的方法就是引入了消费者组（Consumer Group）。<br><br>所以说kafka是采用的p2p还是发布 &#47; 订阅模型啊？<br><br><br><br>","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453284,"discussion_content":"应该这么说：Kafka通过消费者组机制同时实现了对p2p和发布/订阅模型的支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560156086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102143,"user_name":"可以","can_delete":false,"product_type":"c1","uid":1564517,"ip_address":"","ucode":"3FEE197722C406","user_header":"https://static001.geekbang.org/account/avatar/00/17/df/65/c9dace3e.jpg","comment_is_top":false,"comment_ctime":1560150463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560150463","product_id":100029201,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":101934,"user_name":"莫问流年","can_delete":false,"product_type":"c1","uid":1249663,"ip_address":"","ucode":"23140E031AED4B","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/7f/80d56c1c.jpg","comment_is_top":false,"comment_ctime":1560061029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560061029","product_id":100029201,"comment_content":"我觉得Kafka之所以不像Mysql那样对外提供服务：一方面因为Kafka的Topic分区已经提供了集群读写能力；另一方面kafka的读写都属于顺序I&#47;O，相对于Mysql的随机I&#47;O效率已经很高。","like_count":0},{"had_liked":false,"id":101903,"user_name":"南辕北辙","can_delete":false,"product_type":"c1","uid":1214502,"ip_address":"","ucode":"03EC406AE0D591","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/26/b8c53cee.jpg","comment_is_top":false,"comment_ctime":1560046791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560046791","product_id":100029201,"comment_content":"与rabbitmq的镜像队列一样，因为这里负载层面是在分区上，而不像mysql上负载在机器上了。不然反而容易造成单节点负载过高。","like_count":0},{"had_liked":false,"id":101792,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1559973710,"is_pvip":false,"replies":[{"id":"36811","content":"从目前的设计来看，从follower读取数据的确是弊端大于收益。当然这不代表未来不会变更。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560135930,"ip_address":"","comment_id":101792,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559973710","product_id":100029201,"comment_content":"也就是说 从kafka的follower replica中读取数据 是没有必要的 而且维护起来很麻烦 是吗？😂😂😂<br><br>ps:我是kafka小白😂😂😂","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453117,"discussion_content":"从目前的设计来看，从follower读取数据的确是弊端大于收益。当然这不代表未来不会变更。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560135930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101790,"user_name":"giantbroom","can_delete":false,"product_type":"c1","uid":1059516,"ip_address":"","ucode":"7258784193C302","user_header":"","comment_is_top":false,"comment_ctime":1559973056,"is_pvip":true,"replies":[{"id":"36810","content":"嗯，Kafka对于不丢消息是有条件的，不可能保证任何条件下都不丢失消息。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560135886,"ip_address":"","comment_id":101790,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1559973056","product_id":100029201,"comment_content":"请教一个问题，一个分区包含leader和follower副本，这些副本的持久化是否可以夸broker，就是说分散存储在不同的虚拟机上？如果不能的话，如果分区所在的机器挂了，所有数据岂不是都丢了？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453116,"discussion_content":"嗯，Kafka对于不丢消息是有条件的，不可能保证任何条件下都不丢失消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560135886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064894,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3f/be/c7141382.jpg","nickname":"是KK呀","note":"","ucode":"5DCEB53A13D049","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72669,"discussion_content":"副本本来就是分散在不同的broker上的吧？如果分区所在机器挂了，但是该分区follower副本所在机器没有挂啊，一样可以提供服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575513839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101711,"user_name":"天下行走","can_delete":false,"product_type":"c1","uid":1462449,"ip_address":"","ucode":"73A4CD8BB91235","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLfrbMvhKQYhxP6ziaHaj4KUNRzst8u7BZsWUsazK8oTLXcNH6sDGITl6icy3IiaGFe9Iiae12LuTrF1g/132","comment_is_top":false,"comment_ctime":1559921829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559921829","product_id":100029201,"comment_content":"我感觉应该是：如果可从追随者broker都，那么一致性要求就要很高，所有的消息必须全部同步完毕才能开放给消费者都；而目前这种模式追随者只需保证最终一致性立刻。后者对消息的可见延迟很低","like_count":0},{"had_liked":false,"id":101677,"user_name":"不了峰","can_delete":false,"product_type":"c1","uid":1013424,"ip_address":"","ucode":"E23B96D6A3D4EC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/b0/14fec62f.jpg","comment_is_top":false,"comment_ctime":1559911711,"is_pvip":false,"replies":[{"id":"36807","content":"取决于很多因素。首先你的主题有几个分区？另外你的生产者是否指定了消息要被发送的分区？正常情况下，如果你有多个分区且没有指定特定的目标分区，那么producer的确会把消息发送到多个分区。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1560135555,"ip_address":"","comment_id":101677,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1559911711","product_id":100029201,"comment_content":"请教一下，如果一个生产者，向一个主题一次写100万条消息，那他是会写到这个主题的一个分区还是写到多个分区里面？<br>谢谢。","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453066,"discussion_content":"取决于很多因素。首先你的主题有几个分区？另外你的生产者是否指定了消息要被发送的分区？正常情况下，如果你有多个分区且没有指定特定的目标分区，那么producer的确会把消息发送到多个分区。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560135555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1161209,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/f9/a8f26b10.jpg","nickname":"jacke","note":"","ucode":"05F355E1FF88C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":92,"discussion_content":"胡老师，producer会把同一个主题的消息分到不同的分区，那消费者如何读取消息不同分区上的同一个主题的消息？offset如何变化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561090517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101509,"user_name":"蒙开强","can_delete":false,"product_type":"c1","uid":1317706,"ip_address":"","ucode":"61B3183781B9F7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1b/4a/f9df2d06.jpg","comment_is_top":false,"comment_ctime":1559832465,"is_pvip":false,"replies":[{"id":"36592","content":"配置了相同group. id的消费者自动成为一个组。分区分配有消费者指定的分配策略来决定，有个专门的参数来控制此事，而不是在api中体现的。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559862837,"ip_address":"","comment_id":101509,"utype":1}],"discussion_count":0,"race_medal":0,"score":"1559832465","product_id":100029201,"comment_content":"老师，你好，我读了这篇专栏后有个问题咨询一下你，消费客户端消费topic的时候只指定了一个消费组，没有指定消费组里具体多少实例，是内部有什么策略或者机制进行分配么，怎么体现出这个消费组里有多少消费实例呢，理想情况消费实例与topic分区数相等是最好的，但消费端程序里API没有这设置项。","like_count":0},{"had_liked":false,"id":101476,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1559815965,"is_pvip":false,"replies":[{"id":"36591","content":"我觉的可行","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559862524,"ip_address":"","comment_id":101476,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559815965","product_id":100029201,"comment_content":"感谢回答。其实我们公司是.net，我们的消息队列是自研的，我自己的思路是，利用socket，当有消息过来时，封装路由信息，利用socket去转发消息，当然里面还涉及一个单位时间上游过来大量消息的情况的处理，比如利用线程池去做消息的路由等。不知道这种思路可行吗？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452980,"discussion_content":"我觉的可行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559862524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101445,"user_name":"liurh","can_delete":false,"product_type":"c1","uid":1468570,"ip_address":"","ucode":"9EFF41023D60D1","user_header":"","comment_is_top":false,"comment_ctime":1559810536,"is_pvip":false,"replies":[{"id":"36565","content":"嗯嗯，严格说这属于创建topic时的分区分配策略。实话说是有点复杂的。。。。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559814257,"ip_address":"","comment_id":101445,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559810536","product_id":100029201,"comment_content":"没有提到broker，分区是怎么分布在broker上的","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452965,"discussion_content":"嗯嗯，严格说这属于创建topic时的分区分配策略。实话说是有点复杂的。。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559814257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101441,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1559809505,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559809505","product_id":100029201,"comment_content":"我记得在配置时 Replication 的个数小于等于 Broker 个数^_^","like_count":0},{"had_liked":false,"id":101439,"user_name":"且听风吟","can_delete":false,"product_type":"c1","uid":1001951,"ip_address":"","ucode":"673F179AAEDBC4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/df/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1559809041,"is_pvip":false,"replies":[{"id":"36571","content":"Kafka毕竟是起家于大数据领域，如果碰到producer TPS超低以至于我们都要思考consumer PULL模型是否合理的场景，那么也可以思考一下是否真需要使用Kafka：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559815339,"ip_address":"","comment_id":101439,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559809041","product_id":100029201,"comment_content":"是否可以在消费端内部暴露一个rpc接口，这样实现消息的push操作时，实际上是通过服务端调用rpc接口实现的，而不是通过消费端的轮询。(不知道kafka怎么做的push方式，qmq好像是消费端有个dubbo接口接收消息)","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452963,"discussion_content":"Kafka毕竟是起家于大数据领域，如果碰到producer TPS超低以至于我们都要思考consumer PULL模型是否合理的场景，那么也可以思考一下是否真需要使用Kafka：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559815339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101394,"user_name":"柠檬C","can_delete":false,"product_type":"c1","uid":1181505,"ip_address":"","ucode":"BC0EE704D952A4","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/41/2d477385.jpg","comment_is_top":false,"comment_ctime":1559799134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559799134","product_id":100029201,"comment_content":"不提供主写从读，第一是要保证一致性，逻辑就更复杂；第二是kafka相比redis还需要刷盘，流程更长；第三本身kafka通过partition已经实现了良好的负载均衡了","like_count":0},{"had_liked":false,"id":101344,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1559785440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559785440","product_id":100029201,"comment_content":"副本提供对外读要解决的问题：<br>1 可读的消息通过高水位隔离，HWM meta data需要保证一致性<br>2 rebalance 和 lead replica failover需要保consumer offset一致性<br>","like_count":0},{"had_liked":false,"id":101334,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1559783525,"is_pvip":false,"replies":[{"id":"36516","content":"理想情况下消费者数量=消费者组订阅主题的总分区数，当然也不是绝对的。不过能肯定的是，如果消费者数&gt;总分区数，那么就会有消费者闲置","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559784091,"ip_address":"","comment_id":101334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559783525","product_id":100029201,"comment_content":"老师，如果消费者组里面的消费者数量比分区数多，会有部分消费者闲置吗，还是多个消费者一直竞争。应该怎么选择分区与消费者的数量呢","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452918,"discussion_content":"理想情况下消费者数量=消费者组订阅主题的总分区数，当然也不是绝对的。不过能肯定的是，如果消费者数&amp;gt;总分区数，那么就会有消费者闲置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559784091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101319,"user_name":"Summer","can_delete":false,"product_type":"c1","uid":1213499,"ip_address":"","ucode":"FBFB6962ED84F7","user_header":"https://static001.geekbang.org/account/avatar/00/12/84/3b/ba1b626e.jpg","comment_is_top":false,"comment_ctime":1559781471,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559781471","product_id":100029201,"comment_content":"mysql读写分离是为了把大的“读”流量落到读库上，避免高并发下去锁表。<br><br>而kafka是以 “追加”形式写，所以不存在随机io问题","like_count":0},{"had_liked":false,"id":101313,"user_name":"cricket1981","can_delete":false,"product_type":"c1","uid":1001715,"ip_address":"","ucode":"758262F5958DA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/f3/f1034ffd.jpg","comment_is_top":false,"comment_ctime":1559781197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559781197","product_id":100029201,"comment_content":"因为ISR机制，follower不一定具备leader一样全量最新消息集，为防止读不一致，所以不支持。","like_count":0},{"had_liked":false,"id":101312,"user_name":"Mong狗","can_delete":false,"product_type":"c1","uid":1048525,"ip_address":"","ucode":"9DF0D65D75984E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/cd/9c44f2d5.jpg","comment_is_top":false,"comment_ctime":1559781192,"is_pvip":false,"replies":[{"id":"36504","content":"消费者数&lt;=分区数","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559781444,"ip_address":"","comment_id":101312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559781192","product_id":100029201,"comment_content":"那就是消费者数一般小于分区数，不然会有消费者处于空闲状态","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452906,"discussion_content":"消费者数&amp;lt;=分区数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559781444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101308,"user_name":"Johnson","can_delete":false,"product_type":"c1","uid":1060473,"ip_address":"","ucode":"FF29D9659284FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/79/05261bd7.jpg","comment_is_top":false,"comment_ctime":1559780914,"is_pvip":false,"replies":[{"id":"36505","content":"社区最近正在讨论是否开放某些follower，允许其提供读服务。如果你有兴趣的话可以参与讨论：https:&#47;&#47;cwiki.apache.org&#47;confluence&#47;display&#47;KAFKA&#47;KIP-392%3A+Allow+consumers+to+fetch+from+closest+replica<br>就我个人而言，感觉难度也没有想象的那么大：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559781525,"ip_address":"","comment_id":101308,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559780914","product_id":100029201,"comment_content":"个人觉得主要是实现读写分离的性价比不高，技术难度太大","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452903,"discussion_content":"社区最近正在讨论是否开放某些follower，允许其提供读服务。如果你有兴趣的话可以参与讨论：https://cwiki.apache.org/confluence/display/KAFKA/KIP-392%3A+Allow+consumers+to+fetch+from+closest+replica\n就我个人而言，感觉难度也没有想象的那么大：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559781525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101301,"user_name":"伟子","can_delete":false,"product_type":"c1","uid":1565519,"ip_address":"","ucode":"D3202DB5D23E6D","user_header":"https://static001.geekbang.org/account/avatar/00/17/e3/4f/0e31c2ac.jpg","comment_is_top":false,"comment_ctime":1559780338,"is_pvip":false,"replies":[{"id":"36503","content":"实话实说我们毕竟不是Kafka的作者，也许只能根据我们自己的理解来揣测Kafka的设计。我不能说你的这个观点是错误的，只是就我个人而言，为了避免处理一致性问题是这么设计的主要原因：）","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559781371,"ip_address":"","comment_id":101301,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559780338","product_id":100029201,"comment_content":"我记得kafka中是有保证领导者和追随者的数据一致性的机制的，即生产者要收到领导者反馈的和追随者同步消息成功的消息后才发送下一条消息。我想，这样理论上追随者是可以提供对外服务的。但是这样会导致消息发布的速度变慢，相当于是用牺牲吞吐量来换取的。而kafka是有分区机制和消费者组的机制来确保吞吐量的。所以，追随者不提供对外服务是不是为了不影响吞吐量？","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452899,"discussion_content":"实话实说我们毕竟不是Kafka的作者，也许只能根据我们自己的理解来揣测Kafka的设计。我不能说你的这个观点是错误的，只是就我个人而言，为了避免处理一致性问题是这么设计的主要原因：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559781371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101296,"user_name":"mini希","can_delete":false,"product_type":"c1","uid":1043539,"ip_address":"","ucode":"54DFFE0CE0C7EF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/53/dcec6fdc.jpg","comment_is_top":false,"comment_ctime":1559779568,"is_pvip":true,"replies":[{"id":"36499","content":"follower不对外提供服务，所以不会出现这种情况。但可能的情形是因为客户端要等follower副本同步而出现的延时","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559780931,"ip_address":"","comment_id":101296,"utype":1}],"discussion_count":1,"race_medal":4,"score":"1559779568","product_id":100029201,"comment_content":"追随者副本同步数据有一定延迟吧，可能造成多个客户端读取到的数据不一致或者同一个客户端访问不同追随者副本不一致吧，","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452896,"discussion_content":"follower不对外提供服务，所以不会出现这种情况。但可能的情形是因为客户端要等follower副本同步而出现的延时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559780931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101293,"user_name":"kxct","can_delete":false,"product_type":"c1","uid":1036199,"ip_address":"","ucode":"70D33A6C95F37C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/a7/56fbdb3b.jpg","comment_is_top":false,"comment_ctime":1559779260,"is_pvip":false,"replies":[{"id":"36498","content":"不对外提供服务的确可以避免很多因异步副本拉取出现lag导致的一致性问题。","user_name":"作者回复","user_name_real":"huxi_2b","uid":"1288090","ctime":1559780884,"ip_address":"","comment_id":101293,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559779260","product_id":100029201,"comment_content":"副本不对外提供服务是为了强一致性吧","like_count":0,"discussions":[{"author":{"id":1288090,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a7/9a/495cb99a.jpg","nickname":"胡夕","note":"","ucode":"5709A689B6683B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452894,"discussion_content":"不对外提供服务的确可以避免很多因异步副本拉取出现lag导致的一致性问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559780884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}