{"id":267317,"title":"结束语 | 把学习当成一种习惯","content":"<p>你好，我是王新栋。</p><p>当你来到这节课的时候，我们的课程已经接近尾声，相信你在课程的学习中都有所收获。在最后的这节课，我想跟你谈一谈如何学习OAuth 2.0 这门技术。</p><p>在谈起如何学习这个话题的时候，我很愿意跟你分享我的一些经历和经验。我个人认为，<strong>学习从来都不是一件容易的事情，夸张一点讲有点“反人性”</strong>。你想啊，谁不愿意，在工作忙碌了一天后，晚上回家多陪陪家人；又有谁不愿意，到了周末去找几个朋友打打篮球或者陪女朋友看看电影呢。但是，学习一定要养成一种习惯。我在《程序员思维修炼》这本书中读到这么一段话，分享给你：</p><blockquote>\n<p>知识投资也是一样。你需要定期投资最低限度的时间量。养成一种习惯，如果需要的话。躲到你的家庭办公室里去或者走进有无线网络的咖啡厅。并非每期学习都同样富有成效，但是只要定期安排学习，长期来看一定会成功。如果你一直在等待空闲时间或者等待灵感的突现，那么它永远都不会发生。</p>\n</blockquote><p>在具备了上面所述的“定力”以后，我再和你谈一谈具体的学习方法。</p><p>我按照层次由低到高把学习分为<strong>基础学习、分析学习和主题学习</strong>：</p><ul>\n<li>基础学习，就是从知识点最基本的理论开始学习；</li>\n<li>分析学习，就是对知识的结构脉络做梳理，并带着问题去学习；</li>\n<li>主题学习，就是对同一个知识点，分别找到不同的资料来学习。</li>\n</ul><!-- [[[read_end]]] --><p>这样看，基础学习和分析学习属于“点”的学习，而主题学习就属于“面”的学习，整体下来就是从点到面构建知识网络的过程。接下来，我就和你说说OAuth 2.0的学习，是怎么对应到这三个层次的。</p><p>在基础学习的过程中，我们要学习OAuth 2.0的四种基本角色，包括资源拥有者（也就是用户）、客户端（也就是第三方软件）、授权服务、受保护资源服务；还要学OAuth 2.0的四种基本授权许可类型，包括授权码许可类型、隐式许可类型、客户端凭据许可类型、资源拥有者凭据许可类型。</p><p>当确定了基础学习阶段的学习范围之后，我们就要将这些角色带入到每个许可类型中，让这些角色“转起来”，这时你就可以像我一样用小明使用小兔打单软件的例子串起整个OAuth 2.0的工作流程。</p><p>在分析学习的过程中，我们就需要将OAuth 2.0 的知识体系结构进行一个梳理，同时把学习时遇到的问题都列出来，然后逐一分析。这些问题可能是：为什么授权码许可流程一定要有授权码，为什么授权码许可一定要有两次重定向，如何管理JWT格式的令牌的生命周期，当访问令牌失效了一定要让用户重新授权吗，刷新令牌会一直有效吗，ID令牌和访问令牌之间有联系吗，等等。</p><p>在主题学习的过程中，我们可以把要重点理解的内容当成一个主题，去“横向”地学习。怎么才能叫做横向呢？比如，要知道PKCE到底解决了什么问题，那么你就可以把PKCE当成一个主题来学习，你要去查阅跟它相关的任何资料，可以找OAuth 2.0 的官方文档，可以看咱们的专栏，也可以看其它与之相关的书籍等等。总之，这是你的一个“研究方向”。</p><p>在掌握了基础学习、分析学习和主题学习这三个层次的学习方法之后，我还有一招儿，就是配合 <strong>“输出倒逼输入”</strong>来加强学习效果。</p><p>有一天我在图书馆看书时，回想起自己这些年在公司内外做分享和写书的经历，猛然间脑子里面蹦出了“输出倒逼输入”这个词儿，一下子想通了输出对于技术学习的重要性。再后来，我刷朋友圈里别人分享的文章时，也看到了这个词。再到后来，我在读《如何阅读一本书》时，看到了其中有这样一句话“阅读与写作的互惠”，又再次印证了这一点。</p><p>那我再分享自己的一个小故事吧。有一年618刚结束，京东大学的同事就来找我，问我愿不愿意做一次618大促备战的复盘分享，而且要在一周内准备好要分享的内容。虽然时间很紧张，我也不知道自己要分享什么内容，甚至连思路都还不清晰，但我还是毫不犹豫地答应了下来。输出倒逼输入嘛。</p><p>在接下来的准备时间里，我从要备战内容的点点滴滴，到系统黄金流程的识别过程，再到人员的培训，分别进行了梳理，逐渐形成了自己的一套备战方法论，完成了那次的大促复盘分享，也获得了同事们的很多正反馈。</p><p>你看，要不是因为有“输出”的逼迫感，我可能就不会去做这个复盘，也不会沉淀自己的方法论。正所谓备战在平时，后来我和团队就把这套备战方法论落到了日常工作中，时刻保证着系统的稳定运行。</p><p>这就让我无比坚信，“输出倒逼输入”是一个绝好的学习方式。</p><p>那具体到我们的课程中，该怎么运用这个方法呢？</p><p>最简单的，自然就是留言了。永远不要觉得看完文章就是学会了，要知道，任何一种思想都不可避免地带有局限性，想要拥有更高维度的见解，前提是你见识过足够多、足够好的东西。</p><p>因此，你要多输出自己的想法，抛出引子，比如你对某些内容的深入思考、你在工作中积累的独特经验，甚至是你对我的一些观点的质疑，等等。我和其他同学看到了你的留言，也会和你讨论，我们的思想交叠碰撞，你的知识厚度必定会有所增加。</p><p>除了零碎的留言，你还可以进行系统的梳理，制作一些思维导图、PPT，或者是写成文章，在公司内部做一场分享。最后，你得到的是一套知识体系，同时也可以增加你在公司里的“出镜率”，这是不是一举多得呢？</p><p>当然，这种方式绝不仅限于咱们课程的学习，希望你总能积极地向外传达你的想法。带着惊喜的输出亮相，理所当然地会得到未知的惊喜。</p><p>到这里，我们相伴而行的时光也就接近尾声了，接下来，我们要回归各自的赛道了。在此之前，我很想很想跟你说一句“敬佩”。</p><p>你不知道的是，在你坚持学习的时候，有很多人都掉了队，站在终点回头去看，不知不觉中你就成为了极少数人。放大到整个人生去看，只要持续走极少数人走的路，你就能成为极少数人。</p><p><strong>“将每一个忙碌、充实的日子，累积成酣畅淋漓的生命”</strong>，希望我们都能活到淋漓，与你共勉。</p><p>我在这里为你准备了一份<a href=\"https://jinshuju.net/f/YJJsnf\">毕业问卷</a>，题目不多，希望你能花两分钟填一下。我非常期待能听你和我说一说，你对这个课程的想法和建议。今天虽然是结课，但我还会继续关注你的留言，也希望你能继续学习这个课程的内容，并会通过留言区和你互动。最后，再次和你一声“感谢”。</p>","comments":[{"had_liked":false,"id":239306,"user_name":"而立斋","can_delete":false,"product_type":"c1","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1596501273,"is_pvip":false,"replies":[{"id":"88387","content":"哈哈 一起变得更加优秀","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596501829,"ip_address":"","comment_id":239306,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31661272345","product_id":100053901,"comment_content":"马上买了一本《程序员思维修炼》，哈哈","like_count":7,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503055,"discussion_content":"哈哈 一起变得更加优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596501829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175495,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/c7/07bffbf3.jpg","nickname":"小土豆爸爸","note":"","ucode":"E3FED198AB803A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296819,"discussion_content":"马上去买","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596674974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239462,"user_name":"Geek_883762","can_delete":false,"product_type":"c1","uid":2083045,"ip_address":"","ucode":"783D500741F2DA","user_header":"","comment_is_top":false,"comment_ctime":1596539982,"is_pvip":false,"replies":[{"id":"89116","content":"我被感动到了，我会尽最大努力回复好每一位同学的留言。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597214414,"ip_address":"","comment_id":239462,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27366343758","product_id":100053901,"comment_content":"当老师说再见的时候，我哭了。","like_count":6,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503107,"discussion_content":"我被感动到了，我会尽最大努力回复好每一位同学的留言。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597214414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295990,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1622695227,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18802564411","product_id":100053901,"comment_content":"知止而后有定，定而后能静，静而后能安，安而后能虑，虑而后能得。物有本末，事有终始，知所先后，则近道矣。（By《大学》）","like_count":4},{"had_liked":false,"id":239490,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1215139,"ip_address":"","ucode":"258880ACE79448","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/a3/aee7ded7.jpg","comment_is_top":false,"comment_ctime":1596547744,"is_pvip":false,"replies":[{"id":"89096","content":"多谢 ^_^","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597195011,"ip_address":"","comment_id":239490,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18776416928","product_id":100053901,"comment_content":"感谢老师的精彩讲解，现在每次授权登录时，都想到老师讲些的后台流程。","like_count":4,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503116,"discussion_content":"多谢 ^_^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597195011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1162562,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bd/42/c7120b7f.jpg","nickname":"人不学习是🐷","note":"","ucode":"6B8979F46706FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589699,"discussion_content":"俺也一样，每次企业内部的各种认证跳转，都是同一套东西","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665244642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240250,"user_name":"zeroki","can_delete":false,"product_type":"c1","uid":1076775,"ip_address":"","ucode":"BC09D9BBC8EA5F","user_header":"https://static001.geekbang.org/account/avatar/00/10/6e/27/430ea477.jpg","comment_is_top":false,"comment_ctime":1596810452,"is_pvip":false,"replies":[{"id":"89077","content":"放在网关来做，读取授权服务的接口或者是直接操作授权服务的数据存储。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597149600,"ip_address":"","comment_id":240250,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10186745044","product_id":100053901,"comment_content":"“鉴权”是建议在开放平台的网关做呢，还是授权服务做呢？","like_count":2,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503389,"discussion_content":"放在网关来做，读取授权服务的接口或者是直接操作授权服务的数据存储。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597149600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239288,"user_name":"inrtyx","can_delete":false,"product_type":"c1","uid":1246178,"ip_address":"","ucode":"81CD18FF34ABAB","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","comment_is_top":false,"comment_ctime":1596496421,"is_pvip":true,"replies":[{"id":"88388","content":"我会一直在的 ^_^","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596501867,"ip_address":"","comment_id":239288,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10186431013","product_id":100053901,"comment_content":"难说再见，谢谢老师","like_count":2,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503047,"discussion_content":"我会一直在的 ^_^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596501867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318838,"user_name":"动物不困","can_delete":false,"product_type":"c1","uid":1272259,"ip_address":"","ucode":"E0E4A31757936A","user_header":"https://static001.geekbang.org/account/avatar/00/13/69/c3/9bf5016f.jpg","comment_is_top":false,"comment_ctime":1635466206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5930433502","product_id":100053901,"comment_content":"日拱一卒，功不唐捐。加油！","like_count":1},{"had_liked":false,"id":360330,"user_name":"武将。。。","can_delete":false,"product_type":"c1","uid":1166975,"ip_address":"广东","ucode":"1D7CE0B0782B71","user_header":"https://static001.geekbang.org/account/avatar/00/11/ce/7f/26c4d186.jpg","comment_is_top":false,"comment_ctime":1666432846,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666432846","product_id":100053901,"comment_content":"感谢王老师的带领学习，以前知识了解，并没有这么系统深入地学习，这次听了王老师的课程，对其有了更加深入地了解，感谢！","like_count":0},{"had_liked":false,"id":359797,"user_name":"码小呆","can_delete":false,"product_type":"c1","uid":2055809,"ip_address":"广东","ucode":"44532D6ABF9340","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","comment_is_top":false,"comment_ctime":1665907118,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665907118","product_id":100053901,"comment_content":"没有女朋友,😭😭😭😭😭","like_count":0},{"had_liked":false,"id":342011,"user_name":"陶乐乐","can_delete":false,"product_type":"c1","uid":1943501,"ip_address":"","ucode":"2D4355A7498948","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epb9WYgYQJCMF3XrBbYxnzoXchW2DHfrXHeI2iasiasFdHzJ1XEMjKIN1WdqCgqIQqWU2ibQmYbCic6Gg/132","comment_is_top":false,"comment_ctime":1649952470,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649952470","product_id":100053901,"comment_content":"很认同老师的观点，一个就是学习的三个阶段：由基础的理论学习--》针对问题的思考学习---》全面系统的认知的过程。另外一个重点便是：一定得想办法输出，很多学习如果仅仅是看，因为没有自己的思考加工，很容易就会忘记。总结并形成图形，文字是很重要的过程学习","like_count":0},{"had_liked":false,"id":333881,"user_name":"jiangb","can_delete":false,"product_type":"c1","uid":1030861,"ip_address":"","ucode":"A09415749CA88D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrqLEic7DVicYY1s9ldH0vGBialDoplVGpicZUJ0Fdaklw27Frv8Ac67eicb5LibhL74SUxAzlick2nfltA/132","comment_is_top":false,"comment_ctime":1644569759,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644569759","product_id":100053901,"comment_content":"感谢老师，对OAuth2.0的知识体系有了深入的了解，下一步要实践SpringSecurity OAuth2，应用在公司产品上。","like_count":0},{"had_liked":false,"id":319285,"user_name":"Krystal","can_delete":false,"product_type":"c1","uid":1441810,"ip_address":"","ucode":"A8986403DE927C","user_header":"https://static001.geekbang.org/account/avatar/00/16/00/12/7048984b.jpg","comment_is_top":false,"comment_ctime":1635733046,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1635733046","product_id":100053901,"comment_content":"老师，关于输出倒逼输入这个学习方法，我非常认同，学习后做技术分享，但是作为一个管理者，可能在团队中执行的时候，不会宣导这个目的，最终在团队中执行的时候搞得队员不认可，没几周就停止了，后面他们都说学习是自己的事情，这个分享让他们不舒服，他们不乐意做，不知道老师有没有遇到过这种情况，或者能否给下指导意见？谢谢","like_count":0},{"had_liked":false,"id":285705,"user_name":"良胜","can_delete":false,"product_type":"c1","uid":1764364,"ip_address":"","ucode":"9EBE2491291BE4","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ec/0c/f20586b1.jpg","comment_is_top":false,"comment_ctime":1616984864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616984864","product_id":100053901,"comment_content":"老师，我现在要做一个需求，app侧打开H5页面，这个要用授权码登录，但是spring oauth2获取授权需要处于登录态,这个怎么处理；另外默认的授权码是报存在数据库里的，怎么扩展成jwt存储的格式","like_count":0},{"had_liked":false,"id":259968,"user_name":"王刚","can_delete":false,"product_type":"c1","uid":1103821,"ip_address":"","ucode":"4763CC9A937C38","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/cd/6ebfc468.jpg","comment_is_top":false,"comment_ctime":1604900899,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604900899","product_id":100053901,"comment_content":"才看完，感谢分享！","like_count":0},{"had_liked":false,"id":248810,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1600318919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600318919","product_id":100053901,"comment_content":"谢谢老师的分享，我也是输出倒逼输入，想在工作中使用Oauth2.0，提升安全性，在两周内学完理论。下一步是跑通案例代码，在应用到工作中。谢谢老师","like_count":0},{"had_liked":false,"id":245263,"user_name":"开心哥","can_delete":false,"product_type":"c1","uid":1705468,"ip_address":"","ucode":"D44C1F03B23C5A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/05/fc/bceb3f2b.jpg","comment_is_top":false,"comment_ctime":1598879563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598879563","product_id":100053901,"comment_content":"酣畅淋漓，学的痛快！感谢老师，快上新课😃😃","like_count":0},{"had_liked":false,"id":242988,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1597912298,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597912298","product_id":100053901,"comment_content":"江湖路远，有缘再见（抱拳）","like_count":0},{"had_liked":false,"id":242985,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1597911683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597911683","product_id":100053901,"comment_content":"感觉scope和api的对应关系跟角色和资源url的对应关系很像，但是角色通常分配给用户，scope通常分配给第三方应用。是这样的吗？","like_count":0},{"had_liked":false,"id":242035,"user_name":"哈德韦","can_delete":false,"product_type":"c1","uid":1637085,"ip_address":"","ucode":"E7C9B3D087D2D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","comment_is_top":false,"comment_ctime":1597568182,"is_pvip":false,"replies":[{"id":"89459","content":"我试了下石墨文档，现在也是采用了扫码登陆了，不过你说的这个关注二维码之后再登录，我印象中CSDN这样做过。<br><br>这个我们可以开放性讨论下，我看了下微信官方的文档，微信的带参二维码应该属于渠道码，一般用作对引流数据的统计。原理应该就是使用一个EvenkKey，当有人扫描这个二维码后，微信会推送给开发者这个EventKey，然后开发者在可以对此次事件做一些响应动作。<br><br>我个人认为如果拿这种方式用作登录的话，其背后还是OAuth机制，上面说的那种关注公众号才能登录，是建立在次基础上的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597713369,"ip_address":"","comment_id":242035,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597568182","product_id":100053901,"comment_content":"老师好，微信PC扫码登录就是一个标准的OAuth 2.0流程，用户扫码后，手机微信弹出确认框。用户确认后，微信重定向到开发者回调网址，带上code，之后开发者网站使用code换取accessToken等。但是也有网站（比如石墨文档），PC扫码登录实际上利用了微信的带参二维码，用户扫码后直接跳转到了其公众号，而微信服务器直接将用户信息发送给石墨服务器，石墨利用这些信息直接将用户登录。请问这种利用带参二维码形式的PC扫码登录，其安全性会比标准的OAuth 2.0差吗？由于微信服务器发送用户信息给开服务器时是加密的，是否可以保证其安全性呢？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503908,"discussion_content":"我试了下石墨文档，现在也是采用了扫码登陆了，不过你说的这个关注二维码之后再登录，我印象中CSDN这样做过。\n\n这个我们可以开放性讨论下，我看了下微信官方的文档，微信的带参二维码应该属于渠道码，一般用作对引流数据的统计。原理应该就是使用一个EvenkKey，当有人扫描这个二维码后，微信会推送给开发者这个EventKey，然后开发者在可以对此次事件做一些响应动作。\n\n我个人认为如果拿这种方式用作登录的话，其背后还是OAuth机制，上面说的那种关注公众号才能登录，是建立在次基础上的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597713369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241706,"user_name":"喜欢搬砖的小菜鸟","can_delete":false,"product_type":"c1","uid":1948911,"ip_address":"","ucode":"2FF5556B26C4C6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJM8KGX6C2mga90B9DVJQyxguR6qp8vnqbkESNhia9y1klp6aGPBFBEk9A0EdU5Gt6luLef9tozVyA/132","comment_is_top":false,"comment_ctime":1597395674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597395674","product_id":100053901,"comment_content":"感谢~ 每天地铁通勤看了两周，收获挺多。再去刷一遍~","like_count":0},{"had_liked":false,"id":240238,"user_name":"Tim Zhang","can_delete":false,"product_type":"c1","uid":1214499,"ip_address":"","ucode":"4956AC5FE45EE1","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/23/a0966b4d.jpg","comment_is_top":false,"comment_ctime":1596800805,"is_pvip":false,"replies":[{"id":"89086","content":"刷新逻辑在授权服务，意思是授权服务来接收刷新令牌负责生成新的访问令牌。<br><br>既然有了网关这一层，网关在进行鉴权的时候只会去验证令牌，如果令牌过期肯定会拒绝访问，也不会把token继续往下传的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597191341,"ip_address":"","comment_id":240238,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596800805","product_id":100053901,"comment_content":"老师 不是很理解你回答的刷新逻辑在授权服务。<br>前提 我的oauth服务是我自己写的，并非第三方服务。<br>我一个请求首先访问了网关，网关进行了鉴权，然后请求打到了后面api，但是actoken过期了，需要拿着refreshtoken去刷新actoken，难道不是受保护资源自己去调用我的oauth服务拿actoken么？这个逻辑如果每个受保护资源自己做，那是不是每个受保护资源都需要引入这个sdk呢？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503386,"discussion_content":"刷新逻辑在授权服务，意思是授权服务来接收刷新令牌负责生成新的访问令牌。\n\n既然有了网关这一层，网关在进行鉴权的时候只会去验证令牌，如果令牌过期肯定会拒绝访问，也不会把token继续往下传的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597191341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240203,"user_name":"AgCl","can_delete":false,"product_type":"c1","uid":1408804,"ip_address":"","ucode":"2C7660E3C5565D","user_header":"https://static001.geekbang.org/account/avatar/00/15/7f/24/719ce9d4.jpg","comment_is_top":false,"comment_ctime":1596787121,"is_pvip":false,"replies":[{"id":"89089","content":"如果是网关下面只有一个资源服务系统，这里的网关可能就是为了做非业务相关的比如限流、黑白名单等等，这种情况下可以再资源服务系统来做。但是如果网关下面有很多个资源服务系统，建议还是”切一下“在网关来做。<br><br>更细粒度的权限如果也都是跟access_token相关的，在网关去做验证肯定也没有问题，除非是那些其它维度跟令牌无关的权限控制，那么可以下放到资源服务系统来。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597193632,"ip_address":"","comment_id":240203,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596787121","product_id":100053901,"comment_content":"老师，看到留言，我有点疑惑，我们这边正想用oauth2的实现，如果网关做了验证和粗粒度的授权<br>但是资源服务器可能有更细粒度的权限管理，如果用的是spring security 的框架，资源服务器获取到用户id, 然后我们自己初始化好securitycontextHolder的内容；这样的话是不是我们直接网关就做转发，资源服务器自己去做token的验证以及权限验证，谢谢老师","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503371,"discussion_content":"如果是网关下面只有一个资源服务系统，这里的网关可能就是为了做非业务相关的比如限流、黑白名单等等，这种情况下可以再资源服务系统来做。但是如果网关下面有很多个资源服务系统，建议还是”切一下“在网关来做。\n\n更细粒度的权限如果也都是跟access_token相关的，在网关去做验证肯定也没有问题，除非是那些其它维度跟令牌无关的权限控制，那么可以下放到资源服务系统来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597193632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239916,"user_name":"Tim Zhang","can_delete":false,"product_type":"c1","uid":1214499,"ip_address":"","ucode":"4956AC5FE45EE1","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/23/a0966b4d.jpg","comment_is_top":false,"comment_ctime":1596691467,"is_pvip":false,"replies":[{"id":"89098","content":"a和b相当于两个微服务了吧，a是用户请求流程上首先被访问到的一个服务，在这之上的权限校验已经被网关做了。当a去访问b的时候，一般情况下没有再涉及到用户的权限校验了。越往下越是基础的服务。但这里有可能会存在系统之间的权限访问，也就是说b是否允许a来调用，一般微服务之间都是需要做这样的系统校验的。<br><br>如果","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597195340,"ip_address":"","comment_id":239916,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596691467","product_id":100053901,"comment_content":"请问下假设2个服务 a和b，首先调用a的&#47;a，然后a会调用b的&#47;b，在网关层只能针对&#47;a进行权限校验，&#47;a执行完毕后调用&#47;b，这个时候已经不会访问到网关了，请问权限校验是否只能在&#47;b的应用上通过横切逻辑类似filter进行校验过滤","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503276,"discussion_content":"a和b相当于两个微服务了吧，a是用户请求流程上首先被访问到的一个服务，在这之上的权限校验已经被网关做了。当a去访问b的时候，一般情况下没有再涉及到用户的权限校验了。越往下越是基础的服务。但这里有可能会存在系统之间的权限访问，也就是说b是否允许a来调用，一般微服务之间都是需要做这样的系统校验的。\n\n如果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597195340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239915,"user_name":"Tim Zhang","can_delete":false,"product_type":"c1","uid":1214499,"ip_address":"","ucode":"4956AC5FE45EE1","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/23/a0966b4d.jpg","comment_is_top":false,"comment_ctime":1596691388,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596691388","product_id":100053901,"comment_content":"请问下既然网关层scope与api进行鉴权了，那么访问都后端api的时候，是否还要通过rbac进行hasRole hasAuthority进行每个api验证","like_count":0},{"had_liked":false,"id":239910,"user_name":"Tim Zhang","can_delete":false,"product_type":"c1","uid":1214499,"ip_address":"","ucode":"4956AC5FE45EE1","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/23/a0966b4d.jpg","comment_is_top":false,"comment_ctime":1596690496,"is_pvip":false,"replies":[{"id":"88617","content":"1、这个数量参照要按照accesstoken的角度来讲，每一个accesstoken对应一个scope，如果按照上面所述的，就是一对一对多的关系，这些数据都存储在redis中。<br>2、在网关做了OAuth的鉴权也包括scope的校验，受保护资源不需要在做类似的验证，但是越权访问，也就是之前我们讲到的数据归属判断，是一定要在受保护资源内部逻辑中去做的。<br>3、刷新token的逻辑在授权服务系统中实现，不在网关层。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596725828,"ip_address":"","comment_id":239910,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596690496","product_id":100053901,"comment_content":"老师，还有疑问，求解答<br>1、scope与api的映射表，缓存在网关，网关进行鉴权。那么如果粒度很细，一个api(url路径+ http方法)就需要对应一个scope，那么可能有成千上万个api，都需要在表里面定义么<br>2、网关已经校验过了scope，并且通过，请求调用到了受保护资源的某个api，还需要针对于这个api进行比如 @Precheck(hasRole(&#39;admin&#39;)) 或者 @Precheck(hasAuthority(&#39;xxx&#39;)) 的鉴权么，因为据我了解网关可能针对于粗粒度的api 比如&#47;A&#47;**  实际上访问的&#47;A&#47;aa还有更细粒度的比如rbac中的权限鉴定，所以其实不仅网关一层对于scope进行鉴权，访问到某个特定api还需要通过rbac进行鉴权，是这样么<br>3、如果刷新token，重定向等针对于oauth2的逻辑实现在网关，后续api假设有2个 a和b， 网关首先调用了a，a计算完成还需要调用b，这个时候假设accessToken过期了，但是刷新token逻辑在网关，a调用b不经过网关了，那么这些刷新逻辑是否还需要在b的filter切面层进行拦截处理","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503274,"discussion_content":"1、这个数量参照要按照accesstoken的角度来讲，每一个accesstoken对应一个scope，如果按照上面所述的，就是一对一对多的关系，这些数据都存储在redis中。\n2、在网关做了OAuth的鉴权也包括scope的校验，受保护资源不需要在做类似的验证，但是越权访问，也就是之前我们讲到的数据归属判断，是一定要在受保护资源内部逻辑中去做的。\n3、刷新token的逻辑在授权服务系统中实现，不在网关层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596725828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239580,"user_name":"Tim Zhang","can_delete":false,"product_type":"c1","uid":1214499,"ip_address":"","ucode":"4956AC5FE45EE1","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/23/a0966b4d.jpg","comment_is_top":false,"comment_ctime":1596591368,"is_pvip":false,"replies":[{"id":"88576","content":"如果有多个受保护资源，在做“鉴权”的时候，可以统一放在网关内部实现。<br><br>支持refreshtoken的逻辑是在授权服务上面进行的，如果使用了security，则是在框架内职责模块上实现。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596676702,"ip_address":"","comment_id":239580,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596591368","product_id":100053901,"comment_content":"请教一下 refreshtoke的刷新以及一些重定向可以全部交给spring security，但是这部分逻辑应该实现在网关 还是每个受保护资源都需要实现一下","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503145,"discussion_content":"如果有多个受保护资源，在做“鉴权”的时候，可以统一放在网关内部实现。\n\n支持refreshtoken的逻辑是在授权服务上面进行的，如果使用了security，则是在框架内职责模块上实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596676702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239409,"user_name":"tt","can_delete":false,"product_type":"c1","uid":1489957,"ip_address":"","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1596526197,"is_pvip":false,"replies":[{"id":"88461","content":"感谢支持","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596541120,"ip_address":"","comment_id":239409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596526197","product_id":100053901,"comment_content":"感谢老师，收获满满，对OAuth2.0的理解更扎实了","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503098,"discussion_content":"感谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596541120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239363,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1024763,"ip_address":"","ucode":"F6B5C64BC99FB7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a2/fb/94af9cf1.jpg","comment_is_top":false,"comment_ctime":1596511849,"is_pvip":false,"replies":[{"id":"88462","content":"感谢支持，一起进步","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596541135,"ip_address":"","comment_id":239363,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596511849","product_id":100053901,"comment_content":"感谢老师，跟着重新梳理了一遍OAuth2.0的知识体系。学习要坚持，复利的效果十分惊人。","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503081,"discussion_content":"感谢支持，一起进步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596541135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239332,"user_name":"Adong0678","can_delete":false,"product_type":"c1","uid":1985184,"ip_address":"","ucode":"845EECDFDE6233","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/GjFJHox9V8qh53zIrExw4NK0KG9WBvRH8RJVjm9jp78RSpWfa2xzyq11dTNItpK2icQniaK4bibTv6ksRGiasjTvMg/132","comment_is_top":false,"comment_ctime":1596505233,"is_pvip":true,"replies":[{"id":"88460","content":"感谢支持，抽象是看清了事物的本质，大家一起进步","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596541108,"ip_address":"","comment_id":239332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596505233","product_id":100053901,"comment_content":"当把具象的事物能用自己简短语言总结概括出来，说明真正理解，掌握了。具体的事物会被更迭，但思想永远闪闪发光！传授知识者，都应尊称老师，十分感谢王老师！","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503067,"discussion_content":"感谢支持，抽象是看清了事物的本质，大家一起进步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596541108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}