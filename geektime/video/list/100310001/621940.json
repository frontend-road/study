{"id":621940,"title":"82｜Redis 数据库：怎样使用 NoSQL 数据库？","content":"<p><strong>课后习题</strong><br>\n请将 Redis 作为 Python 的消息队列，实现消息的顺序存储和顺序读取。Python 进程结束再重新启动，保证消息队列中的数据不会丢失。</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":379287,"user_name":"Leaf","can_delete":false,"product_type":"c3","uid":2218754,"ip_address":"浙江","ucode":"51C120227A46CF","user_header":"https://static001.geekbang.org/account/avatar/00/21/db/02/862927f7.jpg","comment_is_top":false,"comment_ctime":1691663422,"is_pvip":false,"replies":[{"id":138349,"content":"我提供一个检查步骤给你，依次检查一下， 如果还不行就提供更详细的报错信息给我哈：\n\n1. **确认Redis正在运行**：\n   使用`redis-cli`或其他Redis客户端测试Redis是否正在运行。如果您可以从命令行访问Redis，那么问题可能与PyCharm或Python代码有关。\n\n2. **检查Redis配置**：\n   - 确保Redis配置文件（通常为`redis.conf`）的`bind`指令是否设置为`127.0.0.1`（或相应的IP）。\n   - 检查`protected-mode`的设置，如果设置为`yes`并且你没有设置密码，你可能需要设置为`no`或设置密码。\n   - 检查`port`指令，确保它与你尝试连接的端口号匹配。\n\n\n3. **PyCharm的Redis插件&#47;工具**：\n   如果您使用PyCharm的Redis插件或工具，确保您的配置是正确的。检查IP、端口、密码和其他配置。\n\n4. **Python代码**：\n   如果您在Python代码中连接Redis，请确保您使用的库（如`redis-py`）是最新的，并且您的连接代码没有错误。再次检查IP、端口和密码设置。\n\n5. **日志和错误消息**：\n   注意任何错误消息或日志输出，这可能为问题的根源提供线索。\n\n6. **Redis版本**：\n   确保您使用的Redis版本与PyCharm或Python库兼容。\n\n7. **网络问题**：\n   如果您的Redis服务器在远程主机上，请确保网络连接正常，并且您可以ping到该主机。\n","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1692537093,"ip_address":"甘肃","comment_id":379287,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"老师，Windows的pycharm和Redis一直连接不了，救命啊，都快崩溃了","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626105,"discussion_content":"我提供一个检查步骤给你，依次检查一下， 如果还不行就提供更详细的报错信息给我哈：\n\n1. **确认Redis正在运行**：\n   使用`redis-cli`或其他Redis客户端测试Redis是否正在运行。如果您可以从命令行访问Redis，那么问题可能与PyCharm或Python代码有关。\n\n2. **检查Redis配置**：\n   - 确保Redis配置文件（通常为`redis.conf`）的`bind`指令是否设置为`127.0.0.1`（或相应的IP）。\n   - 检查`protected-mode`的设置，如果设置为`yes`并且你没有设置密码，你可能需要设置为`no`或设置密码。\n   - 检查`port`指令，确保它与你尝试连接的端口号匹配。\n\n\n3. **PyCharm的Redis插件/工具**：\n   如果您使用PyCharm的Redis插件或工具，确保您的配置是正确的。检查IP、端口、密码和其他配置。\n\n4. **Python代码**：\n   如果您在Python代码中连接Redis，请确保您使用的库（如`redis-py`）是最新的，并且您的连接代码没有错误。再次检查IP、端口和密码设置。\n\n5. **日志和错误消息**：\n   注意任何错误消息或日志输出，这可能为问题的根源提供线索。\n\n6. **Redis版本**：\n   确保您使用的Redis版本与PyCharm或Python库兼容。\n\n7. **网络问题**：\n   如果您的Redis服务器在远程主机上，请确保网络连接正常，并且您可以ping到该主机。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692537094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"甘肃","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367067,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1674890473,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import redis\nclass MsgQueue:\n  def __init__(self):\n    self.__conn = redis.Redis(&quot;127.0.0.1&quot;, 6379)\n    self.__var = &#39;queue1&#39;\n  def set(self, value):\n    self.__conn.rpush(self.__var, value)\n  def get(self):\n    return self.__conn.lpop(self.__var)\n  def display(self):\n    return self.__conn.lrange(self.__var,0, self.__conn.llen(self.__var))\n  \nq1 = MsgQueue()\nq1.set(1)\nq1.set(2)\nq1.set(3)\nq1.set(4)\nq1.set(5)\nprint(q1.display())\nprint(q1.get())\nprint(q1.get())\nprint(q1.get())\nprint(q1.display())","like_count":2},{"had_liked":false,"id":389082,"user_name":"冯丽娟","can_delete":false,"product_type":"c3","uid":2362891,"ip_address":"北京","ucode":"C470B564979A1C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ3ibJunUcvkAibM9tBDyVB9PoiaWgf3dMZgCBbeAZUF1ISr0fiaicjRjNgThebJyHJHgxr0vjh2JeYSlA/132","comment_is_top":false,"comment_ctime":1711528598,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"windows redis 安装不上呢，wsl --install 进度一直0%，可能是网络原因","like_count":0},{"had_liked":false,"id":386238,"user_name":"Guan YD","can_delete":false,"product_type":"c3","uid":2000972,"ip_address":"陕西","ucode":"76540F350800A9","user_header":"https://static001.geekbang.org/account/avatar/00/1e/88/4c/9a732f67.jpg","comment_is_top":false,"comment_ctime":1704365311,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"class Cache:\n\n    def __init__(self):\n        self.redis_cache = redis.Redis(&quot;127.0.1&quot;, 6379)\n\n    def set_string(self, key, value):\n        self.redis_cache.set(str(key), value)\n\n    def get_string(self, key):\n        return self.redis_cache.get(str(key))\n\n    def set_list(self, key, value):\n        self.redis_cache.lpush(str(key), value)\n\n    def get_list(self, key):\n        return self.redis_cache.lpop(str(key))\n\n    def get_lrange_all(self, key):\n        return self.redis_cache.lrange(str(key), 0, -1)\n\n\ncache = Cache()\n# 存入字符串\ncache.set_string(1, 100)\ncache.set_string(2, 200)\na = cache.get_string(2)\nprint(a)\n\ncache.set_list(&quot;queue&quot;, 104)\ncache.set_list(&quot;queue&quot;, 105)\ncache.set_list(&quot;queue&quot;, 106)\nb = cache.get_lrange_all(&quot;queue&quot;)  # [b&#39;106&#39;, b&#39;105&#39;, b&#39;104&#39;, b&#39;106&#39;, b&#39;105&#39;, b&#39;104&#39;, b&#39;103&#39;, b&#39;102&#39;, b&#39;101&#39;]\ncache.get_list(&quot;queue&quot;)\nc = cache.get_lrange_all(&quot;queue&quot;)  # [b&#39;105&#39;, b&#39;104&#39;, b&#39;106&#39;, b&#39;105&#39;, b&#39;104&#39;, b&#39;103&#39;, b&#39;102&#39;, b&#39;101&#39;]\nprint(b)\nprint(c)","like_count":0},{"had_liked":false,"id":385095,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702038106,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import redis\n\nclass RedisQueue:\n\n    conn = redis.Redis()\n    def set(self, key, value):\n        self.conn.set(key, value)\n\n    def get(self, key):\n        return self.conn.get(key)\n    \n\nr = RedisQueue()\nr.set(&#39;11&#39;,&#39;22&#39;)\nprint(r.get(&#39;11&#39;))","like_count":0},{"had_liked":false,"id":384832,"user_name":"依托答辩","can_delete":false,"product_type":"c3","uid":2383299,"ip_address":"上海","ucode":"4BE79E8A030813","user_header":"https://static001.geekbang.org/account/avatar/00/24/5d/c3/b8bb888c.jpg","comment_is_top":false,"comment_ctime":1701661285,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"Python 进程结束再重新启动是啥意思，我们也没学过python的进程的启动与结束啊","like_count":0},{"had_liked":false,"id":383833,"user_name":"William","can_delete":false,"product_type":"c3","uid":1346215,"ip_address":"吉林","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1699774733,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import redis\n\n# 连接redis\n# conn = redis.Redis(host,port,password,db)\n# conn = redis.Redis(&quot;127.0.0.1&quot;, 6379)\n\n# 案例   抄写\n\n# 定义一个类 接收消息类型的数据\nclass MsgQueueConn:\n\n    def __init__(self, ip, port, qname):\n        self.__conn = redis.Redis(ip, port)\n        self.__qname = qname\n\n    def lpush(self, value):\n        self.__conn.lpush(self.__qname, value)\n\n    def rpop(self):\n        return self.__conn.rpop(self.__qname)\n\n    def display(self):\n        return self.__conn.lrange(self.__qname, 0, self.__conn.llen(self.__qname))\n\n    def clear(self):\n        self.__conn.delete(self.__qname)\n\n\nmq_conn = MsgQueueConn(&#39;127.0.0.1&#39;, 6379, &#39;queue&#39;)\n\nmq_conn.clear()\nmq_conn.lpush(1)\nmq_conn.lpush(2)\nprint(mq_conn.rpop())\n\nprint(mq_conn.display())","like_count":0},{"had_liked":false,"id":379891,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1692677765,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import redis\nconn = redis.Redis(&#39;127.0.0.1&#39;, &#39;6379&#39;)\n# print(conn)\nmylist = [&#39;jack&#39;, &#39;jerry&#39;, &#39;lily&#39;]\n\nfor i in mylist:\n    conn.lpush(&#39;mylist&#39;, i)\n\nconn.bgsave()\nprint(conn.rpop(&#39;mylist&#39;))","like_count":0},{"had_liked":false,"id":378390,"user_name":"Greenery","can_delete":false,"product_type":"c3","uid":3566765,"ip_address":"中国香港","ucode":"16111129C9EBA2","user_header":"https://static001.geekbang.org/account/avatar/00/36/6c/ad/0a694b50.jpg","comment_is_top":false,"comment_ctime":1690172806,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"class MsgQueueConn:\n    def __init__(self, ip, port, name):\n        self.__conn = redis.Redis(ip, port)\n        self.__name = name\n\n    def send(self, value):\n        self.__conn.rpush(self.__name, value)\n\n    def recv(self):\n        return self.__conn.lpop(self.__name)\n\n    def display(self):\n        return self.__conn.lrange(self.__name, 0, self.__conn.llen(self.__name))\n\n    def clear(self):\n        self.__conn.delete(self.__name)\n\n\nmq_conn = MsgQueueConn(&#39;127.0.0.1&#39;, 6379, &#39;mq&#39;)\nmq_conn.delete()\nmq_conn.send(1)\nmq_conn.send(2)\nmq_conn.send(3)\nmq_conn.send(4)\nmq_conn.send(5)\nprint(mq_conn.display())\nprint(mq_conn.recv())\nprint(mq_conn.recv())\nprint(mq_conn.recv())\nprint(mq_conn.display())","like_count":0}]}