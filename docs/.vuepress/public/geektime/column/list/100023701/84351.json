{"id":84351,"title":"05 | 敏捷开发到底是想解决什么问题？","content":"<p>你好，我是宝玉，我今天想跟你聊聊“敏捷开发”。</p><p>关于敏捷开发的实际应用，现在无外乎有以下几种常见的情形：</p><ul>\n<li>很多团队想敏捷开发，但不知道该怎么上手；</li>\n<li>有的团队已经应用了一些敏捷开发的实践，然而效果不理想，不知道是敏捷开发的问题，还是自己实践方式不得当；</li>\n<li>有的团队听说了敏捷开发，但是并不知道它是什么。</li>\n</ul><p>为什么会这样呢？今天我们就围绕敏捷开发来谈一谈，看看敏捷开发是什么，能帮助我们解决哪些问题，要不要实施敏捷开发，以及怎么能应用好敏捷开发。</p><h2>什么是敏捷开发？</h2><p>那什么是敏捷开发呢？有人认为：</p><ul>\n<li>敏捷开发就是Scrum、极限编程；</li>\n<li>敏捷开发就是每天站立会议、每两周一个Sprint（字面意思是冲刺，可以理解为迭代）；</li>\n<li>敏捷开发就是把需求变成故事，把故事写在便签上贴到白板，然后根据状态移动到不同的列；</li>\n<li>敏捷开发就是用看板软件来管理项目。</li>\n</ul><p>然而，这些是敏捷开发的真正含义吗？</p><p>要理解敏捷开发，我们先要了解其诞生背景。在2001年那会，瀑布模型还是主流，我们知道，瀑布模型是一种“重型”的开发模式，整个流程走完通常周期很长，少则数月，多则数年。长周期导致风险增加、难以响应变化。</p><p>于是由瀑布模型衍生出很多模型，试图去改善瀑布模型存在的问题，我已经在上一篇文章中给你介绍了一些。不过除了介绍的那些以外，在当时还有一些不怎么有名，而现在却如雷贯耳的轻量级开发方法，例如极限编程（Extreme Programming，XP）、Scrum等。</p><!-- [[[read_end]]] --><p>2001年初，17位代表上述各种轻量级软件开发过程流派的领军人物聚集在一起，讨论替代瀑布模型这种重量级软件开发过程的新方法。</p><p>但是没能达成一致，所以退而求其次，把大家都认同的理念整理出来，也就是后来的敏捷宣言。这些人还一起成立了敏捷联盟。</p><p><a href=\"http://agilemanifesto.org/iso/zhchs/manifesto.html\"><img src=\"https://static001.geekbang.org/resource/image/d5/ea/d5f757c6b60a51dfe3dab3bde8a736ea.png?wh=1920*1391\" alt=\"\" title=\"图片来源：敏捷开发宣言\"></a></p><p>我们再回头来看前面大家对敏捷的定义，其实都是在从方法论、工具等方面解释敏捷开发。而敏捷宣言指出：</p><blockquote>\n<p>敏捷不是一种方法论，也不是一种软件开发的具体方法，更不是一个框架或过程，而是一套价值观和原则。</p>\n</blockquote><p>现实中关于敏捷的讨论，更多的是在讨论各种方法论和工具。不可否认，这些方法论和工具，能帮助团队“敏捷”起来，但它们和敏捷开发之间的关系，更像是“术”和“道”的关系。</p><blockquote>\n<p>各种敏捷框架、方法论和工具，就像是“术”，告诉你敏捷开发的方式，而敏捷则是“道”，是一套价值观和原则，指导你在软件项目开发中做决策。</p>\n</blockquote><p>这么说还是比较抽象，我给你举个例子。</p><p>敏捷开发中流行的站立会议，主要目的是为了保证团队成员充分的沟通，遇到困难可以及时寻求帮助。但是如果每天的站立会议流于形式，并不能起到有效的目的，则应该减少频度，甚至取消换成其他方式。</p><p>要不要在你的项目开发中使用站立会议，判断的依据就在于这样做是不是符合敏捷的价值观和原则。</p><p><strong>也就是说，当你开发做决策的时候，遵守了敏捷开发的价值观和原则，不管你是不是用Scrum或者极限编程，那么都可以算是敏捷开发。</strong></p><h2>敏捷开发想解决什么问题？</h2><p>如果你仔细读了敏捷宣言，你会发现，宣言中右边的内容其实都是瀑布模型核心的内容：流程和工具、详尽的文档、合同谈判、遵循计划。</p><p>虽然敏捷开发并未对瀑布模型的价值进行否定，但也表明了瀑布模型做的还不够好，同时提出了一套自己的价值观。</p><p>比如说，我们开始做一个新项目，需要从客户那里收集整理需求，如果按照传统的软件开发模式，我们需要在开发前获得所有需求，然后和客户签订合同，在发布前都不会轻易修改需求。</p><p>但是如果我们采用敏捷开发模式来开发项目，那这样做显然违背敏捷的价值观：“客户合作高于合同谈判”。</p><p>所以如果是敏捷开发，在每个迭代后，都应该向客户收集反馈，然后在后面的迭代中，酌情加入客户反馈修改的内容。</p><p>结合敏捷开发提出的背景，你其实不难发现，敏捷开发就是想解决瀑布模型这样的重型软件开发方法存在的问题，用一种轻量的、敏捷的方法来改善甚至是替代它。</p><p>这些年敏捷开发也是一直这么做的。<strong>瀑布模型的典型问题就是周期长、发布烦、变更难，敏捷开发就是快速迭代、持续集成、拥抱变化。</strong></p><h2>如果用敏捷的方式盖房子</h2><p>在讲瀑布模型的时候，我拿盖房子举了个例子，如果改成用敏捷开发的模式盖房子，则会是这样子的：</p><ul>\n<li>\n<p>客户想要盖一栋房子（<strong>初步的想法</strong>）。</p>\n</li>\n<li>\n<p>产品经理和客户进行了初步的沟通，把用户的需求写成了一个个用户故事（<strong>用简单的用户故事代替繁重的需求文档</strong>），例如：</p>\n</li>\n</ul><blockquote>\n<p>作为一个上班族，我想要一个卧室，以便于休息；<br>\n作为一个家庭主妇，我想要一个厨房，以便于做饭。</p>\n</blockquote><ul>\n<li>施工人员根据用户故事和客户进一步沟通（<strong>客户合作高于合同谈判</strong>），然后对用户故事进行设计和实现；</li>\n<li>每个用户故事开发时，还要给一个测试机器人编写测试脚本，让机器人可以自动测试（<strong>大量采用自动化测试</strong>），并且做好的用户故事可以随时被测试验收（<strong>随时发布，持续集成</strong>）；</li>\n<li>每个Sprint四个星期时间（<strong>时间盒子，迭代时间固定</strong>）；</li>\n<li>第一个Sprint搭了个草棚，一张床就是卧室，厕所就挖了一个坑，厨房还来不及搭建（<strong>每个Sprint会选择高优先级的用户故事</strong>），屋顶还在漏水（<strong>每个Sprint会定期发布，客户可以随时看到可用版本，即使还不完整</strong>）；</li>\n<li>第二个Sprint有了简易厨房，同时修复了屋顶漏水的毛病（<strong>每个Sprint不仅完成用户故事，还会修复Bug</strong>）；</li>\n<li>第三个Sprint升级成了小木屋，但是忘记加上窗户（<strong>敏捷推崇自动化测试，但可能会测试不完备</strong>）；</li>\n<li>第四个Sprint升级成了砖瓦房，窗户也开好了，客户可以入住。但是这时候客户发现一家三口的话，完全不够用，需要扩建到3个卧室。于是决定下个迭代改成3个卧室（<strong>响应变化高于遵循计划</strong>）；</li>\n<li>第五个Sprint，升级成了3个卧室，升级过程中把厨房下水道弄坏了（<strong>迭代过程中可能会导致质量不稳定</strong>）；</li>\n<li>第六个Sprint，修复了下水道的问题，房子也装修好了（<strong>迭代中不断完善</strong>）；</li>\n<li>客户验收使用（<strong>上线</strong>）。</li>\n</ul><p>用敏捷开发的方式，不再像瀑布模型那样有严格的阶段划分，会在迭代中不断完善；不再写很多文档，而是和客户一起紧密合作；不再抵制需求变更，而是即时响应变更；不再等到测试阶段才发布，而是随时发布，客户随时可以看到东西。</p><p>当然，采用敏捷开发的模式也存在一些问题，例如全程需要客户参与，由于测试相对少一些 ，问题也会相应多一些。</p><h2>敏捷开发和瀑布模型的差异</h2><p>由于我大学时学软件工程，那时学的就是瀑布模型，毕业后很多年的项目开发都是以瀑布模型为主的，所以我在刚开始去看敏捷开发，总会以瀑布模型的方式类比敏捷开发，实践的时候也难以摆脱瀑布模型的影响。</p><p>直到近些年，我完整的在日常项目中反复实践敏捷开发，才逐步领会到瀑布模型和敏捷开发的一些差别。</p><p>这些年敏捷开发，已经逐步发展出一套 “Scrum + 极限编程 + 看板” 的最佳实践，Scrum主要用来管理项目过程，极限编程重点在工程实践，而看板将工作流可视化。</p><p>我将基于Scrum和极限编程的实践，来对比一下敏捷开发模型和瀑布模型的差异。</p><p><strong>1.敏捷开发是怎么做需求分析的？</strong></p><p>瀑布模型的一个重要阶段就是需求分析，要有严谨的需求分析，产生详尽的需求分析文档。而敏捷开发的需求，主要是来源于一个个小的用户故事，用户故事通常是写在卡片上的一句话，在Sprint的开发中，再去确认需求的细节。</p><p>比如一个用户登录网站的需求，在用户故事里面就是一句话：</p><blockquote>\n<p>作为用户，我想登录网站，这样可以方便浏览。</p>\n</blockquote><p>好处是减少了大量需求文档的撰写，可以早些进入开发。但这个对开发人员在需求理解和沟通的能力上要求更高了。</p><p><strong>2.敏捷开发是怎么做架构设计的？</strong></p><p>瀑布模型在需求分析完了以后，就需要根据需求做架构设计。而在敏捷开发中，并不是基于完整的用户需求开发，每个Sprint只做一部分需求，所以是一种渐进式的架构设计，当前Sprint只做适合当前需求的架构设计。</p><p>这种渐进式的架构设计，迭代次数一多，就会出现架构满足不了需求的现象，产生不少冗余代码，通常我们叫它技术债务，需要定期对系统架构进行重构。</p><p><strong>3.敏捷开发怎么保证项目质量？</strong></p><p>瀑布模型在编码完成后，会有专门的阶段进行测试，以保证质量。在敏捷开发的Sprint中，并没有专门的测试阶段，这就依赖于开发功能的同时，要编写单元测试和集成测试代码，用自动化的方式辅助完成测试。</p><p>相对来说，这种以自动化测试为主的方式，质量确实是要有些影响的。</p><p>微软的Windows就是个很好的例子，在Windows 10之前，Windows的开发模式是传统的类瀑布模型，有很长一段测试的时间，质量有很好的保障，Windows 10开始，采用的是敏捷开发的模式，每月发布更新，稳定性要稍微差一些。</p><p><strong>4.敏捷开发是怎么发布部署的？</strong></p><p>瀑布模型通常在编码结束后，开始部署测试环境，然后在测试阶段定期部署测试环境。测试验收通过后，发布部署到生产环境。</p><p>在敏捷开发中，这种持续构建、持续发布的概念叫持续集成，因为整个过程都是全自动化的，每次完成一个任务，提交代码后都可以触发一次构建部署操作，脚本会拿最新的代码做一次全新的构建，然后运行所有的单元测试和集成测试代码，测试通过后部署到测试环境。</p><p>持续集成是一个非常好的实践，极大的缩短和简化了部署的流程，而且自动化测试的加入也很好的保证了部署产品的质量。前期搭建整个持续集成环境需要一定技术要求。</p><p><strong>5.敏捷开发的Sprint和迭代模型的迭代有什么区别？</strong></p><p>在上一章我介绍了增量模型和迭代模型，这两种也是一种快速迭代的方式，那么敏捷开发和迭代模型的区别是什么呢？</p><p>我们假设有两个团队，都要实现一个简单的用户系统，一个团队用迭代模型，一个团队用敏捷开发（Scrum），一个迭代/Sprint的时间周期都是2周（10个工作日）。</p><p>迭代模型所在的团队，产品经理会先花2天时间去分析需求，写成需求分析文档，架构师会花3天时间来做设计，程序员会花3天时间编码，测试再花2天时间去测试，最后上线用户系统。</p><p>再看敏捷开发的团队，Product Owner（类似于产品经理）会把需求拆分成了几个简单的用户故事：用户登录、用户注册、找回密码、修改资料，然后放到当前Sprint的Backlog（任务清单），Team（开发团队）成员开始从Backlog选择用户故事。</p><p>程序员A选了“用户登录”这个用户故事，他会去找Product Owner确认需求细节，之后动手实现这个用户故事。</p><p>功能完成后，同时程序员A还写了单元测试代码和集成测试代码，对登录的功能写了自动化测试。完成后，通过持续集成工具测试和部署到测试环境。部署完成后，用户登录功能就可以进行使用了。</p><p>这个过程，程序员A可能花了4天时间，做完“用户登录”这个用户故事之后，他又开始继续选取“找回密码”的用户故事来做，4天时间也完成了。</p><p>其他程序员也和程序员A一样，他们也会从Backlog选择一些用户故事来做。</p><p>当团队中第1个用户故事部署完之后，测试人员就开始帮助测试，发现的Bug都提交到了Backlog，程序员们在完成用户故事后，开始着手修复这些Bug，正好在最后2天都修复完成。</p><p>从上面的例子，你可以看出，迭代模型本质上是一个小瀑布模型，所以在一个迭代里面，需要完整的经历从需求分析，到设计、编码、测试这几个完整的阶段。</p><p>所以像瀑布模型一样，刚开始测试的时候是不稳定的，到测试后期才逐步稳定下来，一般迭代前期也会相对轻松一点，而后期测试阶段可能会时间很紧张。</p><p>敏捷开发的Sprint中，没有像瀑布模型那样严格的开发阶段划分，而是一个个循环迭代的Sprint。举例来说，一个瀑布模型的项目，可能会按照阶段分成：2周需求分析，2周设计，4周编码，2周测试，然后上线发布，一共10周。如果用敏捷开发的方式来进行，那么可能会是每2周一个Sprint，每个Sprint结束后，都会发布上线，每次发布的可能只是完整功能的一部分，但是每次发布的都是一个可用的版本，通过多个Sprint的迭代，最终完成项目开发。</p><p>具体到每一个Sprint的开发周期中，在一个Sprint中会有多个小的开发任务，这些开发任务主要是新功能的开发和Bug的修复。由于每个Sprint周期很短，所以不能像瀑布模型那样有充足的时间去做需求分析、设计和测试，那么敏捷开发中怎么保证质量呢？</p><p>在敏捷开发中，通常用“用户故事”这样的方式来代替传统的需求分析，也就是以用户故事的形式，对一个需求进行简单的描述，配合关键的测试用例，并且和需求方的紧密沟通，让开发人员可以理清楚需求；通过“只做刚刚好的设计”来节约设计上的时间；通过“自动化测试”、“持续集成”来提升测试效率。</p><p>相对来说，敏捷开发中，整个Sprint的节奏是比较恒定，产品也是相对稳定的，即使用户故事没有完成，也不影响版本的发布。</p><p>因此，敏捷开发更注重软件开发中人的作用，需要团队成员以及客户之间的紧密协作。</p><h2>该不该选择敏捷开发？</h2><p>该不该选择敏捷开发，是很多团队纠结的问题。毕竟关于敏捷，有很多在中国落地失败的例子，是不是这种方法在国内水土不服？</p><p>其实，敏捷开发无论国内还是国外，大厂还是小厂，都已经有无数成功案例。这些年，软件工程中一些好的实践，像持续集成、测试驱动开发、结对编程、看板等都来自于敏捷开发。可以肯定，敏捷开发是一种非常好的软件开发模式。</p><p>但在应用上，也确实需要满足一些条件才能用好，例如：</p><ul>\n<li>团队要小，人数超过一定规模就要分拆；</li>\n<li>团队成员之间要紧密协作，客户也要自始至终深度配合；</li>\n<li>领导们的支持。敏捷需要扁平化的组织结构，更少的控制，更多的发挥项目组成员的主动性；</li>\n<li>写代码时要有一定比例的自动化测试代码，要花时间搭建好源码管理和持续集成环境。</li>\n</ul><p>所以在选择敏捷开发这个问题上，你先要参考上面这些条件。</p><p>因为敏捷开发对项目成员综合素质要求更高，做计划要相对难一些。如果团队大、客户不配合、领导不支持，再好的敏捷方法也很难有效实践起来。</p><p>如果你要实践敏捷开发，建议先找个小项目进行试点，能证明可行了，再进一步推广。有条件的话，可以和一些顾问公司合作，请人做专门的培训和指导。</p><p>如果不具备条件，应该考虑先把其中一些好的实践用起来，比如说持续集成、每日站会、自动化测试等。</p><h2>总结</h2><p>我们今天一起学习了什么是敏捷开发，也就是敏捷开发是一套价值观和原则。也对比了瀑布模型和敏捷开发，其中的差异还是很大的。</p><p>瀑布模型面向的是过程，而敏捷开发面向的是人。敏捷开发要解决的，恰恰是瀑布模型中存在的一些问题。</p><p>最后，在要不要用敏捷开发这个问题上，不用过于纠结，看好敏捷开发，那就放心去用，觉得时机还不成熟、还不够了解，就先试点或者只是先借鉴其好的实践。</p><p>软件开发，最核心的是人，而不是用什么方法，以前没有敏捷开发只有瀑布模型的时候，也一样诞生了大量伟大的软件，像Windows、Office。现在有敏捷开发，更多的是让我们多了一些选择。</p><p>在下一篇文章，还会再从大厂如何应用敏捷开发的角度，继续讲一讲敏捷开发的应用。</p><p>另外，敏捷开发涉及内容还是比较多，如果想有更多了解，可以阅读一些书籍作为专栏的补充。</p><p>除了<a href=\"http://time.geekbang.org/column/article/82697\">“学习攻略”</a>中推荐的一些书，还有像《用户故事与敏捷方法》《敏捷武士︰看敏捷高手交付卓越软件》等这些敏捷实践的书籍也可以辅助看看。</p><h2>课后思考</h2><p>实施敏捷开发能给你的项目带来哪些好处？如果要实施，你打算从什么地方入手？如果已经实施了敏捷开发，你觉得用法对吗？有哪些做的好的或者不好的地方？欢迎在留言区与我分享讨论。</p><p>感谢阅读，如果你觉得这篇文章对你有一些启发，也欢迎把它分享给你的朋友。</p>","neighbors":{"left":{"article_title":"04 | 瀑布模型之外，还有哪些开发模型？","id":84054},"right":{"article_title":"06 | 大厂都在用哪些敏捷方法？（上）","id":84652}},"comments":[{"had_liked":false,"id":73442,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1551884412,"is_pvip":true,"replies":[{"id":"26774","content":"又是一篇高质量的分享👍<br><br>我没有什么好补充的，只是代表大家向你表示感谢🙏","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551898648,"ip_address":"","comment_id":73442,"utype":1}],"discussion_count":1,"race_medal":0,"score":"285019725948","product_id":100023701,"comment_content":"流程、工具、文档、合同、计划都是工业化的标志。它们带来了稳定的质量、惊人的效率、超大规模的协作，对于软件工业也是如此。<br><br>然而软件工业具备轻资产、知识密集型、从业人员素质高等特点，充分发挥人的创造力和价值，是其相较传统工业更高阶的要求。加之软件工程面对的不确定性与复杂度更显著。于是“个体和互动高于流程和工具，工作的软件高于详尽的文档，客户合作高于合同谈判，响应变化高于遵循计划”的敏捷思想应运而生。<br><br>通过用户故事，理解用户需求。在迭代中采用渐进的架构设计。定期重构解决技术债务。功能开发的同时编写自动测试代码。自动化持续构建。<br><br>由于淡化了部分工业思维中兼顾稳定、质量、效率、成本的传统手段，敏捷思想的最终落地，需要素质极高的从业人员参与其中，且数量不宜过多，以此来弥补流程上的缺失。同时要团队与客户紧密协作，上级的充分信任，才能够有效发挥其灵活应变，又万变不离其宗的优势。这是大胆的返璞归真，好似回到了瀑布模型前的蛮荒时代，实则是更高级的打法，就像独孤九剑一般。所以，敏捷开发“道”的属性更浓。<br><br>敏捷开发具有快速迭代、持续集成、拥抱变化等诱人的特点，但也有苛刻的条件要求。不过，即使无法推行完整的敏捷开发，依旧可以在传统模式下，有针对性的应用敏捷开发的实践方法。","like_count":67,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442089,"discussion_content":"又是一篇高质量的分享👍\n\n我没有什么好补充的，只是代表大家向你表示感谢🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551898648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72836,"user_name":"黄双鹏","can_delete":false,"product_type":"c1","uid":1354401,"ip_address":"","ucode":"2E1462D891717B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKcn5J2T9AHaA5SZfecM8ibftFmvG8bKQE5ia4L5tcIE0XQLmv02icemYguYbUS6AXgHeAGzdd7SeRVg/132","comment_is_top":false,"comment_ctime":1551746753,"is_pvip":true,"replies":[{"id":"26384","content":"这个问题通常有两种解决方案：<br>1. 你按照瀑布模型的方式去估算工作量，然后签订合同。开发的时候你需求分析和架构设计还是用瀑布模型的方式，但是编码和测试用敏捷开发。这是一种不错的折中方案；<br>2. 你把所有需求拆分成用户故事，对用户故事进行打分（了解下计划扑克之类的打分方案），然后可以算出来一个总分数。另外按照你以前敏捷开发的经验，可以知道每个Sprint大概能完成多少分，这样你就能大致推算出来工期。<br><br>供参考！","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551748753,"ip_address":"","comment_id":72836,"utype":1}],"discussion_count":0,"race_medal":0,"score":"117515863745","product_id":100023701,"comment_content":"如果是外包项目，作为项目的乙方，如果采用敏捷开发，最初的工作量就很难完整估计，不利于双方的合同签订。不知老师是否有好的建议，谢谢！","like_count":27},{"had_liked":false,"id":73021,"user_name":"Y024","can_delete":false,"product_type":"c1","uid":1018056,"ip_address":"","ucode":"397126D2E17997","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/c8/ae476935.jpg","comment_is_top":false,"comment_ctime":1551778231,"is_pvip":true,"replies":[{"id":"26563","content":"感谢推荐，我看了一下，内容质量很高👍<br>大家可以参考看看","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551807893,"ip_address":"","comment_id":73021,"utype":1}],"discussion_count":2,"race_medal":0,"score":"104630993335","product_id":100023701,"comment_content":"附一个补充材料，供参考：<br>天下武功，唯快不破—新时代敏捷项目管理之道<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;puMNz91hiQgio4wSCIrTgQ","like_count":24,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441880,"discussion_content":"感谢推荐，我看了一下，内容质量很高👍\n大家可以参考看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551807893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1670804,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/egApicxPAjbmdviavYc8Tc5HelLicQTicW9KgwRl9U2mCEibLTA3rCZ6PVlxRFZTddY7ZGC2DmRe8DJ8EKCZ6mLhkzg/132","nickname":"谦逊的禾苗","note":"","ucode":"C460BEFE9D6EE5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570161,"discussion_content":"这个推荐好啊敏捷很详细，我们现在的项目就是按照传统的瀑布，中间也有穿插原型确认，但是最后领导就是不满意。中间也没有多次迭代，提一点，改一点，缺少产品的惊艳，现在的结果就是反正做完了，但又感觉没有达到效果，系统就放在那里，然后里面的指标看着完成了，又好像没有，指标也模糊，这门课受教很多。个人已经考下了pmp，但好像只是多过程的控制加深理解，现在正在备考软考，看到这门课，才感觉这才是我大学软件工程专业真正应该懂的内容，可惜上学时候没有一点能够懂的，稀里糊涂背ppt。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651678860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72780,"user_name":"北有池鱼","can_delete":false,"product_type":"c1","uid":1150786,"ip_address":"","ucode":"8E75394DE29E56","user_header":"https://static001.geekbang.org/account/avatar/00/11/8f/42/9421bdcf.jpg","comment_is_top":false,"comment_ctime":1551716003,"is_pvip":true,"replies":[{"id":"26379","content":"其实迭代模型已经是很不错的模型了，如果适合你们组项目需要，那就是很好的，不用纠结。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551744702,"ip_address":"","comment_id":72780,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70271192739","product_id":100023701,"comment_content":"看完以后才发现我们组现在所谓的敏捷开发实际上是迭代开发的伪装！","like_count":16,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441741,"discussion_content":"其实迭代模型已经是很不错的模型了，如果适合你们组项目需要，那就是很好的，不用纠结。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551744702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72975,"user_name":"alva_xu","can_delete":false,"product_type":"c1","uid":1003946,"ip_address":"","ucode":"1D5B592B3A780F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLPxmcBiaXpTjuyicHJJwVECstJPyHJj8ZMOEdjz5N3rQzTkR4vTF3bpNXLm4MftPNFPI6ibsVRN5FbA/132","comment_is_top":false,"comment_ctime":1551769125,"is_pvip":false,"replies":[{"id":"26561","content":"你这对软件工程中各个模型的应用可以说是非常经典的案例了，充分结合了各种模型的优缺点和适用场景，值得大家学习借鉴👍<br><br>软件工程知识点其实不算复杂，难的恰恰是如何灵活运用这些知识！<br><br>还有你说的“仪式感”也是个很好的点，这些会议看起来形式化，但确实能起到仪式感的效果。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551807168,"ip_address":"","comment_id":72975,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53091376677","product_id":100023701,"comment_content":"我们现在着手的一个项目，是一个软件框架建设项目，外包给供应商做的。在签合同时，基本需求已经梳理得差不多了。所以按理是可以采用瀑布式开发来进行的。但由于以下原因，所以我们结合了增量开发和Scrum项目管理的模式进行系统建设。<br>1，基本需求是可以分模块来实现的<br>2，我们这个项目所依赖的其他部门提供的基础平台也不是一次性可以交付我们使用的<br>3，我们的使用方(另外一个应用项目）对我们项目的时间要求很急，但可以接受我们分批次交付的模块。<br>基于以上原因，我们设立了几个大的增量阶段，每个增量阶段我们有分几个sprint来进行开发管理。到目前为止，进展还比较顺利。<br>但由于我们这个框架建设项目的外部干系人比较多，所以在协调上游平台和下游应用系统的时候，确实遇到了许多沟通方面的问题。由于其他项目没有进行看板管理，所以需要进行例会形式的沟通来确保关键节点的功能实现。<br>所以，我认为，开发模式和项目管理模式不可以拘泥于一种形式，关键还是要看是否真正达到了整体的敏捷和精益。对于文中老师提及的scrum管理和极限开发，确实是小团队内部协同作战的比较好的实践。但对于多团队协同作战，就要考虑综合运用各种方法了。<br>另外，对于文中提及的站会形式，从“道”的角度来说，当然是可以视实际需求来确定是否要开，但往往一种文化的培养，需要有仪式感，需要不断锻炼。所以对于我们来说，我们还是坚持开Scrum中要求的四个重要会议的。","like_count":12,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441859,"discussion_content":"你这对软件工程中各个模型的应用可以说是非常经典的案例了，充分结合了各种模型的优缺点和适用场景，值得大家学习借鉴👍\n\n软件工程知识点其实不算复杂，难的恰恰是如何灵活运用这些知识！\n\n还有你说的“仪式感”也是个很好的点，这些会议看起来形式化，但确实能起到仪式感的效果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551807168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73409,"user_name":"D","can_delete":false,"product_type":"c1","uid":1152061,"ip_address":"","ucode":"BD1B5C234F2407","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/3d/8eb51db6.jpg","comment_is_top":false,"comment_ctime":1551880402,"is_pvip":false,"replies":[{"id":"26764","content":"限于篇幅，用户故事确实没讲清楚，在文章中有推荐书籍可以作为参考，或者你也可以网上查询一些资料进一步了解，例如：http:&#47;&#47;www.woshipm.com&#47;user-research&#47;553736.html<br><br>这个是个好问题，也是个大问题！<br><br>新人的传承，通常我的经验是：<br>1. 团队要有自己的知识库或WIKI，常用的知识要花时间整理上去，这样新人来了可以自己查<br>2. 先给他简单的任务，再慢慢稍微复杂一点，给予必要的指导，做中学是最快速有效的<br>3. 遇到一些典型的问题可以通过结对编程的方式带着一起做<br><br>仅供参考","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551892879,"ip_address":"","comment_id":73409,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44501553362","product_id":100023701,"comment_content":"“用户故事”这个词好抽象，没太听明白。<br><br>老师，请教您一个问题，在敏捷开发过程中如何保证业务的传承？当有新同事加进来，如何让他快速的熟悉整个业务。","like_count":10,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442071,"discussion_content":"限于篇幅，用户故事确实没讲清楚，在文章中有推荐书籍可以作为参考，或者你也可以网上查询一些资料进一步了解，例如：http://www.woshipm.com/user-research/553736.html\n\n这个是个好问题，也是个大问题！\n\n新人的传承，通常我的经验是：\n1. 团队要有自己的知识库或WIKI，常用的知识要花时间整理上去，这样新人来了可以自己查\n2. 先给他简单的任务，再慢慢稍微复杂一点，给予必要的指导，做中学是最快速有效的\n3. 遇到一些典型的问题可以通过结对编程的方式带着一起做\n\n仅供参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551892879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257460,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","nickname":"小老鼠","note":"","ucode":"C663A0C863A515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5507,"discussion_content":"1，像老师讲的那个经历了几个sprint的房子能住得舒服吗？2,对于需求非常明确的适合用敏捷吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566310713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73100,"user_name":"不再回头","can_delete":false,"product_type":"c1","uid":1438775,"ip_address":"","ucode":"5B7120FF5B4DA9","user_header":"https://static001.geekbang.org/account/avatar/00/15/f4/37/4774edb0.jpg","comment_is_top":false,"comment_ctime":1551798402,"is_pvip":false,"replies":[{"id":"26567","content":"总结的很好👍<br><br>敏捷开发有很多很好的实践，完全可以借鉴到非敏捷开发的项目中去，先从容易的开始，慢慢增加更多，最终也就“敏捷”起来了。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551810298,"ip_address":"","comment_id":73100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31616569474","product_id":100023701,"comment_content":"敏捷开发，对整个项目的要求都一定的门槛。<br>团队成员：对需求分析的能力，需求到设计的能力，相对独立思考<br>自动化：持续集成的自动化部署，环境的搭建，达到持续交付的能力，自动化测试能力<br>测试验收：功能模块的验收，整体回归<br><br>其中立会、看板都是很好的方式方法，已经在执行中。<br>谢谢老师，请多指导！","like_count":7,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441911,"discussion_content":"总结的很好👍\n\n敏捷开发有很多很好的实践，完全可以借鉴到非敏捷开发的项目中去，先从容易的开始，慢慢增加更多，最终也就“敏捷”起来了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551810298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72942,"user_name":"AICC","can_delete":false,"product_type":"c1","uid":1020746,"ip_address":"","ucode":"C1D18B1E8B2DCE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/4a/de82f373.jpg","comment_is_top":false,"comment_ctime":1551757705,"is_pvip":false,"replies":[{"id":"26425","content":"谢谢支持，说明我努力没白费呀：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551760526,"ip_address":"","comment_id":72942,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27321561481","product_id":100023701,"comment_content":"这是一个自己每期跟进的专栏，第一次接触软件工程，几节内容下来，感觉对软件工程算是有了体感认知，也感觉到了专栏老师的用心，是目前学过的最走心的专栏了，留言的问题都会回复（其它专栏都是放出留言但少见回复，如果说描述性留言简单呈现能理解，但提问性留言还是只放出没回复，多少让人很郁闷，留言积极性也会下降，毕竟问题没搞明白），此外能从回复中看出来老师的鼓励和引导（这个可以看看老师的一些留言回复），同时也推荐老师的知乎专栏，宝玉的专栏，内容也很不错，像“记录下两个孩子在MineCraft里面还原公寓的经历”也能看出老师的鼓励和引导的教育方式，综上得出老师是一个leader，而不是一个管理者，哈哈哈","like_count":6,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441836,"discussion_content":"谢谢支持，说明我努力没白费呀：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551760526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72857,"user_name":"泡泡龙","can_delete":false,"product_type":"c1","uid":1208655,"ip_address":"","ucode":"8D43010FA3DC2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/4f/bce0d5bc.jpg","comment_is_top":false,"comment_ctime":1551748099,"is_pvip":true,"replies":[{"id":"26420","content":"敏捷开发中有一个迭代0，也就是第一个迭代，就是做这些准备工作、基础架构搭建的。<br><br>敏捷团队小，有个好处就在于遇到你说的这种情况，在做之前，大家都在一起开个小会一商量就可以定下来了","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551759244,"ip_address":"","comment_id":72857,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27321551875","product_id":100023701,"comment_content":"像这种情况下，有依赖交叉的用户故事应该怎么做，比如用户系统的数据库该由谁搭建。毕竟注册，登录，修改这些都可能基于一个数据表。表字段这些需要统一，不能一个程序员改一次字段名吧","like_count":6,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441791,"discussion_content":"敏捷开发中有一个迭代0，也就是第一个迭代，就是做这些准备工作、基础架构搭建的。\n\n敏捷团队小，有个好处就在于遇到你说的这种情况，在做之前，大家都在一起开个小会一商量就可以定下来了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551759244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73462,"user_name":"邢爱明","can_delete":false,"product_type":"c1","uid":1205589,"ip_address":"","ucode":"C2FDAF96C1E2D7","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/55/274df2e8.jpg","comment_is_top":false,"comment_ctime":1551888829,"is_pvip":false,"replies":[{"id":"26817","content":"好问题！<br><br>敏捷开发这种方式，需要客户紧密配合，也就是可以方便确认需求，否则还是少不了要写需求文档。<br><br>另外我在文章中描述用户故事，有些描写不清楚或者歧义的地方，其实用户故事还应该包括验收标准，这样可以解决你说的开发和测试没有标准的问题。<br><br>团队成员需要高度的协同和配合那是一定的，尤其是架构和需求两部分。需求简化后，就意味着开发过程中需要反复沟通确认；没有专门的设计阶段，也就意味着每个Sprint开始前，团队要商量有没有要设计或者修改架构的，有就需要有个简单可行的方案对架构进行修改。<br><br>如果各自分工，这样的目标就很难达到。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551930473,"ip_address":"","comment_id":73462,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23026725309","product_id":100023701,"comment_content":"对于企业管理的软件，核心需求涉及多个部门，需要反复沟通确认周期很长，这种情况下是否还适合使用用户故事的方式做需求分析呢？<br>另外，我按照瀑布开发模式的习惯分析，开发人员和po沟通需求后，如果没有文档作为输出物，在开发和测试的时候就没有标准，反而会造成工作返工。这是否意味着，团队成员需要高度的协同和配合?以完成任务为导向，而不是强调各自的分工。","like_count":5,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442099,"discussion_content":"好问题！\n\n敏捷开发这种方式，需要客户紧密配合，也就是可以方便确认需求，否则还是少不了要写需求文档。\n\n另外我在文章中描述用户故事，有些描写不清楚或者歧义的地方，其实用户故事还应该包括验收标准，这样可以解决你说的开发和测试没有标准的问题。\n\n团队成员需要高度的协同和配合那是一定的，尤其是架构和需求两部分。需求简化后，就意味着开发过程中需要反复沟通确认；没有专门的设计阶段，也就意味着每个Sprint开始前，团队要商量有没有要设计或者修改架构的，有就需要有个简单可行的方案对架构进行修改。\n\n如果各自分工，这样的目标就很难达到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551930473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73079,"user_name":"王二宝","can_delete":false,"product_type":"c1","uid":1042241,"ip_address":"","ucode":"E147D6E597EF5B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/41/2ea1f5dc.jpg","comment_is_top":false,"comment_ctime":1551793150,"is_pvip":false,"replies":[{"id":"26565","content":"谢谢支持！<br><br>软件工程是一门相当有用的学科，我主要是领着你去学，学了你就会发现真的有价值👍<br><br>另外我在学习攻略那一篇还提到一个观点就是教中学，就是你可以先“借道”，把别人总结得道先借过来，再结合一些术和器，去尝试总结或者讲给其他人，这过程中你也一样会有很多感悟和不一样的理解。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551808172,"ip_address":"","comment_id":73079,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23026629630","product_id":100023701,"comment_content":"<br>每篇都有很大收获，不得不说这是让我受益最大的一个专栏。谢谢宝玉老师<br>道是价值观，是一种思想，术是一种方法。<br>段永平说：术是可以学习和模仿的，而道却是需要悟的。<br>当你理解了道，术是可以万变的。<br>我订阅了7，8个专栏，老师是第一个把道和术分开讨论的。打心底里佩服老师，谢谢<br>","like_count":5,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441900,"discussion_content":"谢谢支持！\n\n软件工程是一门相当有用的学科，我主要是领着你去学，学了你就会发现真的有价值👍\n\n另外我在学习攻略那一篇还提到一个观点就是教中学，就是你可以先“借道”，把别人总结得道先借过来，再结合一些术和器，去尝试总结或者讲给其他人，这过程中你也一样会有很多感悟和不一样的理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551808172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72819,"user_name":"Felix","can_delete":false,"product_type":"c1","uid":1043717,"ip_address":"","ucode":"DD605AA7D79886","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epYwhroC3gic3JJSUZqMFxL0x7iasNUyjUaB2Gp3f0Eiapegc10p5S6pp4dYibEb07VA1IYWldLK4LJdg/132","comment_is_top":false,"comment_ctime":1551743602,"is_pvip":false,"replies":[{"id":"26381","content":"👍<br>是的，从瀑布到敏捷是个很大的转变，不要急于求成。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551744786,"ip_address":"","comment_id":72819,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23026580082","product_id":100023701,"comment_content":"目前在我们团队完全敏捷开发很难，罗马不是一天建成的，我同意老师所说的话，可以把一些好的敏捷实践先用起来","like_count":5,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441769,"discussion_content":"👍\n是的，从瀑布到敏捷是个很大的转变，不要急于求成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551744786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126089,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1566311051,"is_pvip":false,"replies":[{"id":"46580","content":"1. 如果是按照建筑工程标准验收通过了，当然没问题；<br><br>2. 需求稳定的项目一样适用于敏捷开发。尤其是Scrum这样固定迭代周期的敏捷开放方式，可以倒逼你每次迭代先选择优先级高的需求。从已经确定的项目需求，选择最核心的需求，先进行迭代开发，这样你很快就可以看到一个可以运行的版本，然后每次迭代继续增加新的功能，持续发布。<br><br>3. 磨刀不误砍柴工，前期投入了功夫在自动化测试，后期会有质量上的回报，敏捷开发会优先砍需求，所以产品可以发布，最坏结果是初期发布时，需求是不完整的，一些优先级不高的需求初期并没有加进去。<br><br>4. 项目文档有两个主要目的：1) 帮助写的人理清楚思路; 2) 用来交流沟通。<br><br>所以文档的关键不是细，而是达到文档的写作目的。至于粒度，可以站在文档读者的角度，结合日常开发维护场景，去思考这个文档，对于一个需要查阅文档的人来说：文档能给他什么？上面的信息是否有价值？能否达到交流沟通的目的？<br><br>举例来说对于一个需求文档，主要的用户场景是否覆盖？输入输出条件是否清晰？交互设计是否完整？异常情况如何处理？<br><br>举例来说一个项目交接文档，是否有整体概要的架构图，让人能从整体了解这个项目；是否有各个模块的相关说明，能大致了解各个模块的作用；是否有开发的说明，可以进行开发调试；是否有服务器部署的说明，可以按照文档对服务器进行部署更新……","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1566361364,"ip_address":"","comment_id":126089,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18746180235","product_id":100023701,"comment_content":"1，老师讲的那个房子敢住吗？2、需求十分稳定的项目适合用敏捷吗？3、敏捷中又是单元测试又是自动化测试（功能、性能)，工作量是否加大，令不会影响产品发布。4，现在企业人员流动比较厉害，文档细到什么程度比较合适？","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463824,"discussion_content":"1. 如果是按照建筑工程标准验收通过了，当然没问题；\n\n2. 需求稳定的项目一样适用于敏捷开发。尤其是Scrum这样固定迭代周期的敏捷开放方式，可以倒逼你每次迭代先选择优先级高的需求。从已经确定的项目需求，选择最核心的需求，先进行迭代开发，这样你很快就可以看到一个可以运行的版本，然后每次迭代继续增加新的功能，持续发布。\n\n3. 磨刀不误砍柴工，前期投入了功夫在自动化测试，后期会有质量上的回报，敏捷开发会优先砍需求，所以产品可以发布，最坏结果是初期发布时，需求是不完整的，一些优先级不高的需求初期并没有加进去。\n\n4. 项目文档有两个主要目的：1) 帮助写的人理清楚思路; 2) 用来交流沟通。\n\n所以文档的关键不是细，而是达到文档的写作目的。至于粒度，可以站在文档读者的角度，结合日常开发维护场景，去思考这个文档，对于一个需要查阅文档的人来说：文档能给他什么？上面的信息是否有价值？能否达到交流沟通的目的？\n\n举例来说对于一个需求文档，主要的用户场景是否覆盖？输入输出条件是否清晰？交互设计是否完整？异常情况如何处理？\n\n举例来说一个项目交接文档，是否有整体概要的架构图，让人能从整体了解这个项目；是否有各个模块的相关说明，能大致了解各个模块的作用；是否有开发的说明，可以进行开发调试；是否有服务器部署的说明，可以按照文档对服务器进行部署更新……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566361364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1408755,"avatar":"https://static001.geekbang.org/account/avatar/00/15/7e/f3/fdaa906d.jpg","nickname":"敏捷教练夏勇杰","note":"","ucode":"C10268F7D76588","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5542,"discussion_content":"单元测试和自动化测试前期是增加了工作量，但是，后期又回降低工作量。难度在于对于资源不足或者这两方面能力不足的团队，在短期内，很难快速提升自己的资源和能力水平。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566349209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125380,"user_name":"桃子-夏勇杰","can_delete":false,"product_type":"c1","uid":1158436,"ip_address":"","ucode":"5D5F38AABA980F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/24/c6b763b4.jpg","comment_is_top":false,"comment_ctime":1566176755,"is_pvip":true,"replies":[{"id":"46252","content":"👍敏捷开发这样一个Sprint一个Sprint的迭代，天然的可以将优先级高的需求放在前面。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1566277963,"ip_address":"","comment_id":125380,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18746045939","product_id":100023701,"comment_content":"敏捷与需求分析<br><br>应用敏捷之后，并不是说不用做需求分析了，其实敏捷更加鼓励深度的需求分析。传统软件开发经过需求分析之后，就不在接受新的需求了。而敏捷软件开发对需求变更抱持了一种开放的态度，这样更有利于帮助客户实现真正的价值。但是，这个做法并不是我们拖延需求分析到后面开发过程的借口，在敏捷软件开发的前期，对于客户的核心价值，我们要做可能比传统软件开发还要深入的分析。传统软件开发的需求分析范围太广，花费了很多的时间，但是，并不一定能把核心需求分析做到位。","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463552,"discussion_content":"👍敏捷开发这样一个Sprint一个Sprint的迭代，天然的可以将优先级高的需求放在前面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566277963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73145,"user_name":"阿神","can_delete":false,"product_type":"c1","uid":1014761,"ip_address":"","ucode":"E34BA27C101E9F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/e9/5955aa73.jpg","comment_is_top":false,"comment_ctime":1551831772,"is_pvip":false,"replies":[{"id":"26585","content":"对，开发不仅要写单元测试，还要写集成测试。但开发都是用模拟数据，假的API。而测试的自动化测试会用真实的数据，调用真实的API，而且也要做一部分手动测试。<br><br>至于比例多少，还得看项目特点","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551833669,"ip_address":"","comment_id":73145,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731700956","product_id":100023701,"comment_content":"敏捷开发里开发也要写集成测试用例吗，那么测试人员主要做手工测试？","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441934,"discussion_content":"对，开发不仅要写单元测试，还要写集成测试。但开发都是用模拟数据，假的API。而测试的自动化测试会用真实的数据，调用真实的API，而且也要做一部分手动测试。\n\n至于比例多少，还得看项目特点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551833669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73092,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1551795781,"is_pvip":false,"replies":[{"id":"26566","content":"👍总结的很好。没有完美的方案，只有适合的方案。<br><br>很多时候，及时看到阶段性成果，有成就感还是很重要的，经历过那种很长时间都看不到结果的项目，都不知道什么时候能看到头，每个人压力都很大的，相对来说要做点重构和数据迁移真不算什么了😄","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551809899,"ip_address":"","comment_id":73092,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731664965","product_id":100023701,"comment_content":"能够很快有实现的的功能，及时看到效果，给人成就感，小步慢走，一步一步重构优化，直至完成目标。坏处是走着走着，发现当前的架构不适合待开发的需求，这就需要重构，可能还要数据迁移，增加额外的工作量","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441908,"discussion_content":"👍总结的很好。没有完美的方案，只有适合的方案。\n\n很多时候，及时看到阶段性成果，有成就感还是很重要的，经历过那种很长时间都看不到结果的项目，都不知道什么时候能看到头，每个人压力都很大的，相对来说要做点重构和数据迁移真不算什么了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551809899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72991,"user_name":"hello zero","can_delete":false,"product_type":"c1","uid":1028052,"ip_address":"","ucode":"D1F4B2A7D4635B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/d4/59e2bfd4.jpg","comment_is_top":false,"comment_ctime":1551772199,"is_pvip":true,"replies":[{"id":"26562","content":"这是个好问题，我对这个问题上没有什么经验，但我可以试着帮你分析一下。<br><br>你的合同是按照当时的需求签订的，如果后期客户变更需求或者增加新需求，那相当于需要重新签订变更这部分的补充合同。<br><br>应用敏捷开发的时候，你也可以让产品经理或者项目经理充当客户的角色，这样他们会更偏重产品需求的解读，而不是重新提出新的需求：）<br><br>还有一点，合同执行的时候，这时候你不需要太过于纠结是不是用敏捷还是迭代还是瀑布，而是哪一种开发模式，可以让你高质量高效率的完成，那就是最好的最适合你的开发模式。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551807741,"ip_address":"","comment_id":72991,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731641383","product_id":100023701,"comment_content":"老师请教下，如果合同金额一开始就是根据商务阶段了解的情况评估的工作量而确定的，那么在合同执行过程中，如果按敏捷开发的思路，客户不断改需求我们不断地响应，然后工作量甚至已经超过了原先合同的金额，这个时候要如何处理？ ","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441865,"discussion_content":"这是个好问题，我对这个问题上没有什么经验，但我可以试着帮你分析一下。\n\n你的合同是按照当时的需求签订的，如果后期客户变更需求或者增加新需求，那相当于需要重新签订变更这部分的补充合同。\n\n应用敏捷开发的时候，你也可以让产品经理或者项目经理充当客户的角色，这样他们会更偏重产品需求的解读，而不是重新提出新的需求：）\n\n还有一点，合同执行的时候，这时候你不需要太过于纠结是不是用敏捷还是迭代还是瀑布，而是哪一种开发模式，可以让你高质量高效率的完成，那就是最好的最适合你的开发模式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551807741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103248,"user_name":"乐爽","can_delete":false,"product_type":"c1","uid":1547817,"ip_address":"","ucode":"2888B4CD19DA9C","user_header":"https://static001.geekbang.org/account/avatar/00/17/9e/29/b1535719.jpg","comment_is_top":false,"comment_ctime":1560403562,"is_pvip":false,"replies":[{"id":"37440","content":"是的，因为一个迭代内的需求不多，所以需求分析相对时间较短。<br><br>如果一个需求在一个迭代内做不完，可以延到下一个迭代。<br><br>如果一个需求不合理，那么需要重新讨论，讨论清楚了再决定是放当前迭代还是后续迭代。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1560440561,"ip_address":"","comment_id":103248,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14445305450","product_id":100023701,"comment_content":"详细的需求分析是放在迭代内进行的，但此时的需求是一个很小的点，所以不会占据整个迭代太多的时间，是吗？如果在迭代内发现需求方案不合理，放入到下一个迭代，这是否合理呢？","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453804,"discussion_content":"是的，因为一个迭代内的需求不多，所以需求分析相对时间较短。\n\n如果一个需求在一个迭代内做不完，可以延到下一个迭代。\n\n如果一个需求不合理，那么需要重新讨论，讨论清楚了再决定是放当前迭代还是后续迭代。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560440561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77972,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1553047450,"is_pvip":true,"replies":[{"id":"28460","content":"谢谢补充，架构设计这块文章中确实没细讲。<br><br>也认同你的观点，架构设计是很重要的事。<br><br>后面也会有章节继续介绍架构设计。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553048586,"ip_address":"","comment_id":77972,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14437949338","product_id":100023701,"comment_content":"我看你在比较传统瀑布式和敏捷开发的时候，对于架构设计这块基本省略了，现在互联网开发，很多项目都面临大并发，大吞吐量的要求，如果省略了这个步骤，一般开发人员估摸着就开始开发了，这块的技术债会越来越多，甚至一上线就要重构。我感觉2001年的时候，大部分还都是桌面类的软件，互联网项目的并发量也还没这么大，或者在非功能性需求方面要求并不高，文中敏捷开发适用于大部分日常项目。但是上一定规模的项目，设计评审，特别是关键设计的评审这个步骤不能弱化，而是要强化。 ","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443918,"discussion_content":"谢谢补充，架构设计这块文章中确实没细讲。\n\n也认同你的观点，架构设计是很重要的事。\n\n后面也会有章节继续介绍架构设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553048586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73923,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1552034706,"is_pvip":false,"replies":[{"id":"26983","content":"前期实施确实是有难度，但慢慢运转顺利了就好多了。<br><br>很多问题也可以寻找一些折中方案的，例如客户如果不能深度参与，那么你可以考虑由产品经理代替客户的角色。能力的话，依赖于招聘和培训；责任心这些，可以靠流程制服辅助。<br><br>如果认定大方向没有做，剩下的就是坚持和不断改进了。⛽️","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552053230,"ip_address":"","comment_id":73923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436936594","product_id":100023701,"comment_content":"我们是瀑布+敏捷，整个项目过程采用瀑布管理，中间各环节具体实施采用敏捷。<br>如果要实施敏捷，首先得统一认识，达成一致；其次是对敏捷有基本的认识；其次是团队人员能力要上去，特别是责任心，其次是客户的深度参与。实施起来好难呢，心累！！！","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442339,"discussion_content":"前期实施确实是有难度，但慢慢运转顺利了就好多了。\n\n很多问题也可以寻找一些折中方案的，例如客户如果不能深度参与，那么你可以考虑由产品经理代替客户的角色。能力的话，依赖于招聘和培训；责任心这些，可以靠流程制服辅助。\n\n如果认定大方向没有做，剩下的就是坚持和不断改进了。⛽️","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552053230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73784,"user_name":"长眉_张永","can_delete":false,"product_type":"c1","uid":1442279,"ip_address":"","ucode":"B3DCA68BDD473E","user_header":"https://static001.geekbang.org/account/avatar/00/16/01/e7/091804b7.jpg","comment_is_top":false,"comment_ctime":1551999804,"is_pvip":false,"replies":[{"id":"26945","content":"好问题👍<br><br>敏捷还是要写必要的文档，只是会简化。尤其是这种涉及交接的、维护的，文档不能省。<br><br>技术债务应该团队成员集体负责，大家在迭代计划会上应该将技术重构列入后续的Sprint<br><br>","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552001275,"ip_address":"","comment_id":73784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436901692","product_id":100023701,"comment_content":"作为一个电商ERP服务商，既要关注产品的研发进度，又要对产品做维护。人员一旦离职，发现没有较为详细的文档，就需要去猜测，之前的业务了。<br>qux所以想请教老师，敏捷后上线，留下的技术债务应该归谁负责呢？","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442276,"discussion_content":"好问题👍\n\n敏捷还是要写必要的文档，只是会简化。尤其是这种涉及交接的、维护的，文档不能省。\n\n技术债务应该团队成员集体负责，大家在迭代计划会上应该将技术重构列入后续的Sprint\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552001275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72964,"user_name":"Lrwin","can_delete":false,"product_type":"c1","uid":1180503,"ip_address":"","ucode":"5E394E36419C56","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/57/31595f22.jpg","comment_is_top":false,"comment_ctime":1551764286,"is_pvip":false,"replies":[{"id":"26437","content":"用户故事其实还可以进一步拆分成任务。<br><br>举例来说一个提交留言的用户故事，可以基于这个用户故事再创建三个任务：UI设计、前端页面、后端API。<br><br>复杂的任务还可以进一步细分。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551769324,"ip_address":"","comment_id":72964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436666174","product_id":100023701,"comment_content":"‘开发人员来领用户故事’这个会有问题吧，用户故事一般要由前端、后端、UI协同开发，这个怎么办？","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441850,"discussion_content":"用户故事其实还可以进一步拆分成任务。\n\n举例来说一个提交留言的用户故事，可以基于这个用户故事再创建三个任务：UI设计、前端页面、后端API。\n\n复杂的任务还可以进一步细分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551769324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72956,"user_name":"Dora","can_delete":false,"product_type":"c1","uid":1391049,"ip_address":"","ucode":"CB742E6312FB16","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/c9/0785ffe5.jpg","comment_is_top":false,"comment_ctime":1551761903,"is_pvip":false,"replies":[{"id":"26430","content":"瀑布对人员也不说要求不高，但分工确实更细一点，比如像你说的，需求只管需求；开发一般就不操心怎么测试，写完等着测试报bug；敏捷开发里面，分工没那么细，需求不仅要写需求文档或者用户故事，还要和团队成员紧密合作，及时讲解需求；开发也要自己写很多自动化测试代码；敏捷团队也不是没有测试，但是会用自动化测试分担一部分测试任务。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551764064,"ip_address":"","comment_id":72956,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14436663791","product_id":100023701,"comment_content":"为什么我看完的感觉是，瀑布对人员要求不高(各自负责各自的工作，比如需求只管需求)，而敏捷流程，一个人什么都要过一遍。这样理解，对吗？","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441845,"discussion_content":"瀑布对人员也不说要求不高，但分工确实更细一点，比如像你说的，需求只管需求；开发一般就不操心怎么测试，写完等着测试报bug；敏捷开发里面，分工没那么细，需求不仅要写需求文档或者用户故事，还要和团队成员紧密合作，及时讲解需求；开发也要自己写很多自动化测试代码；敏捷团队也不是没有测试，但是会用自动化测试分担一部分测试任务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551764064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1408755,"avatar":"https://static001.geekbang.org/account/avatar/00/15/7e/f3/fdaa906d.jpg","nickname":"敏捷教练夏勇杰","note":"","ucode":"C10268F7D76588","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5544,"discussion_content":"其实不是瀑布或者敏捷对于人员的要求怎么样，而是成功交付对于人员的要求都很高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566349439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72901,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1551752783,"is_pvip":true,"replies":[{"id":"26426","content":"👍赞<br><br>首先，可以看得出你已经开始有对敏捷开发和其中一些实践有了很多自己的思考，对不足的地方有反省，这都是非常好的现象，相信你慢慢可以有更多感悟。<br><br>另外，我倒是建议你不要着急先不做什么，不如先都按照它的做，实施一段时间后，由团队来决定哪些该继续做，哪些可以不需要继续做，而不是你一个人（Scrum Master）来决定这些事情。<br><br>因为Scrum Master本身不是一个控制型的角色，而是一种服务型的角色。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551760817,"ip_address":"","comment_id":72901,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14436654671","product_id":100023701,"comment_content":"敏捷开发是一种价值观，可以给项目带来一些好处：及时（尽早）响应需求的变化；团队成员之间的关系和沟通比较紧密；团队成员的横向能力能得到发展；节奏比较快，客户可以不断看到改进。<br><br>在上一家公司中，我们有专门的敏捷教练跟着每个项目团队进行落地，同时相关的基础设施比较完善：我们用JIRA去管理项目的过程、为了增加趣味性，有时候还会用实物看板、站会是根据需求调整，测试同学也提供了完整的测试用例和压测工具，不足之处是持续集成和自动化测试做得一般。<br><br>如果现在加入一个新的团队，要实施敏捷开发，我准备从团队成员的培训和沟通上入手，一定要配专业的敏捷教练，让项目组的成员都理解敏捷的内在思路，我不会一上来就去推什么看板、站会。","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441816,"discussion_content":"👍赞\n\n首先，可以看得出你已经开始有对敏捷开发和其中一些实践有了很多自己的思考，对不足的地方有反省，这都是非常好的现象，相信你慢慢可以有更多感悟。\n\n另外，我倒是建议你不要着急先不做什么，不如先都按照它的做，实施一段时间后，由团队来决定哪些该继续做，哪些可以不需要继续做，而不是你一个人（Scrum Master）来决定这些事情。\n\n因为Scrum Master本身不是一个控制型的角色，而是一种服务型的角色。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551760817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253391,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/0f/36b94af5.jpg","nickname":"我的偶像是木子","note":"","ucode":"114179C4DF588E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6659,"discussion_content":"入职两个月 老大安排我做scrum master 然而对此没有什么经验 只当做是一个类似小组长的角色来做 团队成员6人 希望老师给点建议让我更好服务我的团队 本人5年Java开发经验 目前在某成熟外企","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567039569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72852,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1551747772,"is_pvip":true,"replies":[{"id":"26419","content":"这周的《06 | 大厂都在用哪些敏捷方法？》（下）会有提到这个现象，其实没必要都开，可以酌情合并，或者有些会议隔一个Sprint开一个，另外和站会一起开可以节约时间提升效率。<br><br>得谨记敏捷开发核心是遵循其价值观和原则，而不是这些形式 。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551758671,"ip_address":"","comment_id":72852,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436649660","product_id":100023701,"comment_content":"scrum的四个会议感觉浪费好多时间，我们一个sprint周期才一周，四个会议加起来都要1天的时间了","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441788,"discussion_content":"这周的《06 | 大厂都在用哪些敏捷方法？》（下）会有提到这个现象，其实没必要都开，可以酌情合并，或者有些会议隔一个Sprint开一个，另外和站会一起开可以节约时间提升效率。\n\n得谨记敏捷开发核心是遵循其价值观和原则，而不是这些形式 。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551758671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227921,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1592526852,"is_pvip":false,"replies":[{"id":"86046","content":"敏捷开发不会没有测试，如果是哪里有描写请指出我会修正。<br><br>无论是采用哪一种开发模式，需求分析、系统设计、编码和测试都必不可少，只是形式略有区别。<br><br>敏捷开发的测试，有很大一部分的测试会由自动化测试代替，比如单元测试、集成测试等手段。<br><br>除了自动化测试代码，还有持续集成，也就是在每次集成、每次提交代码的时候都会运行所有的自动化测试代码，这样在代码修改后，可以对原有代码进行频繁的自动化测试，出现问题能及时发现，以保证产品质量。<br><br>人工测试也必不可少，差别是有些团队有专职测试，有些团队可能没有专职测试，由开发人员或者公司其他人或者部分用户帮助测试。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1594272055,"ip_address":"","comment_id":227921,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10182461444","product_id":100023701,"comment_content":"“当团队中第 1 个用户故事部署完之后，测试人员就开始帮助测试，发现的 Bug 都提交到了 Backlog，程序员们在完成用户故事后，开始着手修复这些 Bug，正好在最后 2 天都修复完成。”前面不是说敏捷开发没有测试吗？为什么这里又出来测试了呢？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498837,"discussion_content":"敏捷开发不会没有测试，如果是哪里有描写请指出我会修正。\n\n无论是采用哪一种开发模式，需求分析、系统设计、编码和测试都必不可少，只是形式略有区别。\n\n敏捷开发的测试，有很大一部分的测试会由自动化测试代替，比如单元测试、集成测试等手段。\n\n除了自动化测试代码，还有持续集成，也就是在每次集成、每次提交代码的时候都会运行所有的自动化测试代码，这样在代码修改后，可以对原有代码进行频繁的自动化测试，出现问题能及时发现，以保证产品质量。\n\n人工测试也必不可少，差别是有些团队有专职测试，有些团队可能没有专职测试，由开发人员或者公司其他人或者部分用户帮助测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594272055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122608,"user_name":"学乐","can_delete":false,"product_type":"c1","uid":1048077,"ip_address":"","ucode":"43BC75229416E0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIC3JYTd17QmLItROaSktJDzTQKQeoicP3WnS4wEjYoU5JMnXM8eJHVygsDL3Kl0FgMX4sfUaRsZ9A/132","comment_is_top":false,"comment_ctime":1565436092,"is_pvip":false,"replies":[{"id":"45002","content":"在敏捷开发的过程中，标准做法是基于用户故事，用简短的用户故事提供基本的需求说明，在Sprint计划会时和开发过程中的时候通过和客户紧密沟通中不断沟通确认。<br><br>在实际操作时，并不必拘泥于这种标准做法，如果产品有有时间先行设计，那么最好是在Sprint开始前提供详细的原型和设计稿，这样可以大大提升沟通效率。<br><br>易用性方面并没有特别之处，要通过不断的迭代，根据反馈不断完善。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1565458318,"ip_address":"","comment_id":122608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10155370684","product_id":100023701,"comment_content":"在敏捷开发的过程中，还需要提供原型图，设计稿吗？在易用性方面怎么做呢","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462329,"discussion_content":"在敏捷开发的过程中，标准做法是基于用户故事，用简短的用户故事提供基本的需求说明，在Sprint计划会时和开发过程中的时候通过和客户紧密沟通中不断沟通确认。\n\n在实际操作时，并不必拘泥于这种标准做法，如果产品有有时间先行设计，那么最好是在Sprint开始前提供详细的原型和设计稿，这样可以大大提升沟通效率。\n\n易用性方面并没有特别之处，要通过不断的迭代，根据反馈不断完善。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565458318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98621,"user_name":"谢禾急文","can_delete":false,"product_type":"c1","uid":1508059,"ip_address":"","ucode":"40170B0A3A7F20","user_header":"https://static001.geekbang.org/account/avatar/00/17/02/db/e86294b7.jpg","comment_is_top":false,"comment_ctime":1559043517,"is_pvip":false,"replies":[{"id":"35311","content":"👍站立会议是蛮好的一个沟通交流的实践，可以尝试更多的敏捷实践，比如说缩短项目周期、迭代开发，搭建持续集成环境，用看板跟踪任务进展等等：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1559057248,"ip_address":"","comment_id":98621,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10148978109","product_id":100023701,"comment_content":"我没有经历过完整的敏捷开发，但是体验过站立会议。我感觉站立会议有以下好处：1. 明确当天目标；2. 了解团队成员的工作进展和困难：3.有困难可以及时得到同事的帮助。","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451758,"discussion_content":"👍站立会议是蛮好的一个沟通交流的实践，可以尝试更多的敏捷实践，比如说缩短项目周期、迭代开发，搭建持续集成环境，用看板跟踪任务进展等等：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559057248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88974,"user_name":"宝宝太喜欢极客时间了","can_delete":false,"product_type":"c1","uid":1215152,"ip_address":"","ucode":"9CDB679C257612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOGZ6lbHiboIZMN9USbeutnmCWBahVLtSlKlIENKvrZQCUQzpzeZQOxTntIkBUeDk6qZUPdqmfKrQ/132","comment_is_top":false,"comment_ctime":1556036792,"is_pvip":false,"replies":[{"id":"31981","content":"敏捷宣言说的：“工作的软件 高于 详尽的文档。尽管右项有其价值，我们更重视左项的价值。”没有否认文档的价值，也不代表实施敏捷软件架构设计可以省略文档，只是没有必要写过多繁重的、没有价值的文档。<br><br>另一个角度来说，也不要过分夸大文档的作用，离职交接，光文档还不够，还离不开人和人之间的互动，交流；公司的知识积累更多靠的是人、代码、文档、流程规范、文化等多方面因素综合的结果，而不是光是文档。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1556142095,"ip_address":"","comment_id":88974,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10145971384","product_id":100023701,"comment_content":"方法论、方法、模型这些名词具体怎么理解？敏捷开发属于哪一种？实施敏捷软件架构设计等文档都可以省略吗？如果文档都省略了那如果开发的人员离职后新接手人员怎么快速的熟悉项目呢？公司的知识积累怎么体现？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447966,"discussion_content":"敏捷宣言说的：“工作的软件 高于 详尽的文档。尽管右项有其价值，我们更重视左项的价值。”没有否认文档的价值，也不代表实施敏捷软件架构设计可以省略文档，只是没有必要写过多繁重的、没有价值的文档。\n\n另一个角度来说，也不要过分夸大文档的作用，离职交接，光文档还不够，还离不开人和人之间的互动，交流；公司的知识积累更多靠的是人、代码、文档、流程规范、文化等多方面因素综合的结果，而不是光是文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556142095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78319,"user_name":"Kerry","can_delete":false,"product_type":"c1","uid":1095371,"ip_address":"","ucode":"C86DF25C7ECD93","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/cb/6e41d01f.jpg","comment_is_top":false,"comment_ctime":1553130312,"is_pvip":false,"replies":[{"id":"28513","content":"只是举个例子帮助理解，说明下迭代的过程 ：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553130730,"ip_address":"","comment_id":78319,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10143064904","product_id":100023701,"comment_content":"敏捷开发，举盖房子就不合适了，如果这样盖房子，估计没有业主同意这样做","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444047,"discussion_content":"只是举个例子帮助理解，说明下迭代的过程 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553130730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1408755,"avatar":"https://static001.geekbang.org/account/avatar/00/15/7e/f3/fdaa906d.jpg","nickname":"敏捷教练夏勇杰","note":"","ucode":"C10268F7D76588","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5538,"discussion_content":"我也觉得这个例子不合适，很容易让人错误理解敏捷。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566348615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73924,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1552034971,"is_pvip":false,"replies":[{"id":"26984","content":"后面会有讲一些具体方法，不一定会面面俱到。但是你也可以留言把你具体想要什么问题的方案说一下，这样有些问题可以后面补充，有些问题可以直接回复，有些问题也许可以给你推荐书籍文章。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552053334,"ip_address":"","comment_id":73924,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141969563","product_id":100023701,"comment_content":"老师，后面会具体讲怎么落地吗？文章后面那几本书上的内容要想落地，要求很高，有没有比较接地气的方案？适合小公司的。","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442340,"discussion_content":"后面会有讲一些具体方法，不一定会面面俱到。但是你也可以留言把你具体想要什么问题的方案说一下，这样有些问题可以后面补充，有些问题可以直接回复，有些问题也许可以给你推荐书籍文章。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552053334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73273,"user_name":"koradji","can_delete":false,"product_type":"c1","uid":1440203,"ip_address":"","ucode":"910AC23D9B8FE7","user_header":"https://static001.geekbang.org/account/avatar/00/15/f9/cb/027670c3.jpg","comment_is_top":false,"comment_ctime":1551847567,"is_pvip":false,"replies":[{"id":"26684","content":"如果你要从敏捷开发是怎么实践的角度理解，这样未尝不可。<br><br>对于Sprint里面一个用户故事的开发，确实可以理解成一个功能模块的开发，只是其中没有严格的像瀑布模型那样的划分，另外要增加自动化测试和持续集成的这些实践提升效率。<br><br>最重要一点，敏捷开发只是一套价值观和原则，不是具体的方法论，这些方法如果符合敏捷的价值观和原则，就可以算是敏捷的开发方法。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551858314,"ip_address":"","comment_id":73273,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141782159","product_id":100023701,"comment_content":"老师我听了你得课程，个人理解敏捷开发就是人+并行得增量模型(其中换成自动化测试，持续集成)+简化的协作过程<br><br>目前主要采用瀑布模型，还没有实践过敏捷开发","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441997,"discussion_content":"如果你要从敏捷开发是怎么实践的角度理解，这样未尝不可。\n\n对于Sprint里面一个用户故事的开发，确实可以理解成一个功能模块的开发，只是其中没有严格的像瀑布模型那样的划分，另外要增加自动化测试和持续集成的这些实践提升效率。\n\n最重要一点，敏捷开发只是一套价值观和原则，不是具体的方法论，这些方法如果符合敏捷的价值观和原则，就可以算是敏捷的开发方法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551858314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73196,"user_name":"dancer","can_delete":false,"product_type":"c1","uid":1019036,"ip_address":"","ucode":"B8D5641A3AC490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/9c/d48473ab.jpg","comment_is_top":false,"comment_ctime":1551837524,"is_pvip":false,"replies":[{"id":"26622","content":"是的，要敏捷，少不要很多自动化的帮助。<br><br>需求分析是在Sprint进行中同步进行，也就是开发具体的用户故事之前要和客户或产品经理充分沟通了解需求。如果用户故事不是特别大，并不是很大的问题。另外并非只能用用户故事，也可以用传统的产品设计文档代替用户故事，也一样是很不错的实践。<br><br>对于架构设计，架构只设计当前迭代的，所以迭代到一定阶段，是要考虑重构的。通常重构代码也是Sprint的工作任务的一部分。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551845931,"ip_address":"","comment_id":73196,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141772116","product_id":100023701,"comment_content":"谢谢老师用了很多生动的例子来串联，读下来之后对敏捷开发有了一个大概的认识～感觉采用敏捷开发对于自动化有较高的要求，没有自动化来辅助，可能就没那么敏捷了。还有一个问题想请宝玉老师帮忙解惑，对比瀑布模型来说，敏捷开发在需求分析和软件设计上要薄弱一些，这会导致越向后迭代，软件越难以变更和维护，请问老师有什么好的方法和建议吗？感谢！","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441965,"discussion_content":"是的，要敏捷，少不要很多自动化的帮助。\n\n需求分析是在Sprint进行中同步进行，也就是开发具体的用户故事之前要和客户或产品经理充分沟通了解需求。如果用户故事不是特别大，并不是很大的问题。另外并非只能用用户故事，也可以用传统的产品设计文档代替用户故事，也一样是很不错的实践。\n\n对于架构设计，架构只设计当前迭代的，所以迭代到一定阶段，是要考虑重构的。通常重构代码也是Sprint的工作任务的一部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551845931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73134,"user_name":"一路向北","can_delete":false,"product_type":"c1","uid":1017835,"ip_address":"","ucode":"DB0FF1C153C485","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/eb/20492a37.jpg","comment_is_top":false,"comment_ctime":1551829694,"is_pvip":false,"replies":[{"id":"26586","content":"是的，敏捷开发要用好还是不太容易，不仅仅是形式，还得真的敏捷起来，不然可能就是披着敏捷外衣的瀑布模型：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551833750,"ip_address":"","comment_id":73134,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141764286","product_id":100023701,"comment_content":"确实如老师所言，我们之前尝试过的敏捷开发只关注了形式，而没理解其内涵。比如强调了站立式开会，执行一段时间后没有站立式开会这个形式了，也就宣告敏捷开发结束了。<br>敏捷开发是一种价值观和原则，认清这点，才可能把敏捷开发做好。<br>","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441930,"discussion_content":"是的，敏捷开发要用好还是不太容易，不仅仅是形式，还得真的敏捷起来，不然可能就是披着敏捷外衣的瀑布模型：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551833750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73046,"user_name":"J.M.Liu","can_delete":false,"product_type":"c1","uid":1200037,"ip_address":"","ucode":"B2CB84B8E923A6","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/a5/71358d7b.jpg","comment_is_top":false,"comment_ctime":1551784684,"is_pvip":false,"replies":[{"id":"26564","content":"谢谢支持。<br><br>还有一个原因也是你自己成长了，有了很多实际的项目经验，再回头学这些内容会更有感悟👍","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551808012,"ip_address":"","comment_id":73046,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141719276","product_id":100023701,"comment_content":"这些天学习老师的专栏，最大的感受就是自己大学的软件工程都白上了。那时候的老师都是照本宣科的念课件，我们也是死记硬背，究其原因，还是大学里的课程缺乏与实际项目的结合。老师没经验，学生也没经验，最后搞得是小和尚念经，有口无心啊。老师的专栏对于我来说，叫《重学软件工程》可能会更贴切，感谢老师👍","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441890,"discussion_content":"谢谢支持。\n\n还有一个原因也是你自己成长了，有了很多实际的项目经验，再回头学这些内容会更有感悟👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551808012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72861,"user_name":"L","can_delete":false,"product_type":"c1","uid":1228268,"ip_address":"","ucode":"26BB686671F7D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/ec/cc7abf0b.jpg","comment_is_top":false,"comment_ctime":1551748353,"is_pvip":true,"replies":[{"id":"26421","content":"敏捷的名词基本都是从英语来的，像Backlog、Sprint、Scrum这种词，还不如不翻译更容易理解。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551759306,"ip_address":"","comment_id":72861,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141682945","product_id":100023701,"comment_content":"感觉敏捷开发的一些名词一点都不接地气，可能在最初的时候会给人造成一种理解上的困难","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441794,"discussion_content":"敏捷的名词基本都是从英语来的，像Backlog、Sprint、Scrum这种词，还不如不翻译更容易理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551759306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72827,"user_name":"Dream.","can_delete":false,"product_type":"c1","uid":1187286,"ip_address":"","ucode":"49B94CE5BA0D21","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/d6/76fe5259.jpg","comment_is_top":false,"comment_ctime":1551745933,"is_pvip":false,"replies":[{"id":"26382","content":"对，用户故事是Scrum推荐的一种模式，并不是非这样不可，如果有产品经理能事先写好高质量需求文档，一样是很敏捷的。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551747001,"ip_address":"","comment_id":72827,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141680525","product_id":100023701,"comment_content":"还是纠结于敏捷开发的需求分析。<br><br>从文中看来，用户的需求更多的是像程序员拿到用户故事后，是直接与客户沟通需求确认原型？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441771,"discussion_content":"对，用户故事是Scrum推荐的一种模式，并不是非这样不可，如果有产品经理能事先写好高质量需求文档，一样是很敏捷的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551747001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72804,"user_name":"kingkong","can_delete":false,"product_type":"c1","uid":1082903,"ip_address":"","ucode":"F1D5D79BF128E4","user_header":"https://static001.geekbang.org/account/avatar/00/10/86/17/e1020a44.jpg","comment_is_top":false,"comment_ctime":1551741227,"is_pvip":false,"replies":[{"id":"26380","content":"👍<br>跟找对象一样，适合的就是最好的：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551744755,"ip_address":"","comment_id":72804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141675819","product_id":100023701,"comment_content":"敏捷开发是一套价值观和原则，无论何术何器，敏捷价值观正确，遵循敏捷开发原则，感觉都算敏捷开发。敏捷项目入手，感觉首先要团队理解敏捷宣言，思想上要有敏捷的意识，制定一套适于团队敏捷开发流程模型，感觉最好固化到项目流程工具里，然后过程中优化改进流程模型，目标是软件高质量和快速交付","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441758,"discussion_content":"👍\n跟找对象一样，适合的就是最好的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551744755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196511,"user_name":"bidinggong","can_delete":false,"product_type":"c1","uid":1898806,"ip_address":"","ucode":"789A1FBA8408F3","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f9/36/f44b633e.jpg","comment_is_top":false,"comment_ctime":1585288300,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5880255596","product_id":100023701,"comment_content":"瀑布模型面向的是过程，而敏捷开发面向的是人。不管什么方法，高效解决人的痛点就是好方法。","like_count":1},{"had_liked":false,"id":190217,"user_name":"高小阳","can_delete":false,"product_type":"c1","uid":1904812,"ip_address":"","ucode":"C101838794B7BF","user_header":"","comment_is_top":false,"comment_ctime":1584616930,"is_pvip":false,"replies":[{"id":"75505","content":"快速原型一般是先通过简单原型去快速验证需求，然后基于原型去迭代开发，或者原型仅仅只用于验证需求，在确认原型后，重新搭建开发。<br><br>敏捷开发是一套价值观和原则，在敏捷开发过中，也可以应用快速原型去确认需求或者迭代，关键还是做决策的时候，是否遵守了敏捷开发的价值观和原则。<br><br>具体可以参考“5. 敏捷开发的 Sprint 和迭代模型的迭代有什么区别？”这一节的描述。<br><br>","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1585893286,"ip_address":"","comment_id":190217,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879584226","product_id":100023701,"comment_content":"敏捷开发跟快速原型模型的关系是什么？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487915,"discussion_content":"快速原型一般是先通过简单原型去快速验证需求，然后基于原型去迭代开发，或者原型仅仅只用于验证需求，在确认原型后，重新搭建开发。\n\n敏捷开发是一套价值观和原则，在敏捷开发过中，也可以应用快速原型去确认需求或者迭代，关键还是做决策的时候，是否遵守了敏捷开发的价值观和原则。\n\n具体可以参考“5. 敏捷开发的 Sprint 和迭代模型的迭代有什么区别？”这一节的描述。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585893286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170915,"user_name":"巫山老妖","can_delete":false,"product_type":"c1","uid":1056037,"ip_address":"","ucode":"B35E2CF1B3B04E","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/25/c4cc1e9f.jpg","comment_is_top":false,"comment_ctime":1578756897,"is_pvip":true,"replies":[{"id":"66255","content":"👍<br>文档还是蛮重要的，建议：<br>1. 可以从平时做起，让团队养成用WIKI之类的在线文档工具记录文档的习惯，对文档格式的要求可以低一点，重点是记下来<br>2. 适当做一些新系统设计的评审和对当前系统架构的评审，通过评审这类形式，一方面形成一些设计文档，一方面也增强团队之间的交流<br>3. 可以在有一些Sprint，专门安排写文档的时间，作为Sprint的一个正式任务","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1578809330,"ip_address":"","comment_id":170915,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5873724193","product_id":100023701,"comment_content":"对比与瀑布模型，敏捷开发更强调的是人。这个我非常有感触，我所经历过的几个产品就是采用本节课所说的敏捷开发，因为我们的团队本身比较小，每个迭代的每个需求都需要不同的角色通力配合才能够很好的执行，类似需求管理、看板、每日站会等都是很好的敏捷实践，我们开发引入的持续集成让每一次代码提交都能够构建出可运行的版本。我觉得不好的地方有团队不是很重视文档，互联网团队的一个特点就是人员流动性高，会有一些历史债务，团队的成员离职之后就没有人知道某个模块的背景了，还有一些规范的沉淀也不足，新人加入没有很好的指引，我认为不管是敏捷还是其他的开发方法，文档化都是个很重要的内容，但这是往往被忽略的事情。敏捷开发能解决短周期完成功能迭代的流程，让人员更高效的协作，在强调快的时代，我个人是很推崇敏捷开发的。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481162,"discussion_content":"👍\n文档还是蛮重要的，建议：\n1. 可以从平时做起，让团队养成用WIKI之类的在线文档工具记录文档的习惯，对文档格式的要求可以低一点，重点是记下来\n2. 适当做一些新系统设计的评审和对当前系统架构的评审，通过评审这类形式，一方面形成一些设计文档，一方面也增强团队之间的交流\n3. 可以在有一些Sprint，专门安排写文档的时间，作为Sprint的一个正式任务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578809330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88721,"user_name":"重","can_delete":false,"product_type":"c1","uid":1143731,"ip_address":"","ucode":"819529E001051C","user_header":"https://static001.geekbang.org/account/avatar/00/11/73/b3/d9310de9.jpg","comment_is_top":false,"comment_ctime":1555985911,"is_pvip":true,"replies":[{"id":"31831","content":"敏捷不代表没有文档的。如果你觉得敏捷应该试试，那么其实有很多具体的方法可以尝试：<br>1. 如果文档是问题，那么就保留文档<br>2. 先把其中一些好的实践用起来，比如持续集成、固定时间的Sprint（对应瀑布模型的迭代模型）<br>3. 先小规模试点，在小项目或者新项目试行，总结经验教训。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1556029862,"ip_address":"","comment_id":88721,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5850953207","product_id":100023701,"comment_content":"如果采用敏捷，没有文档，感觉在公司推行会有很大阻力。<br>","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447879,"discussion_content":"敏捷不代表没有文档的。如果你觉得敏捷应该试试，那么其实有很多具体的方法可以尝试：\n1. 如果文档是问题，那么就保留文档\n2. 先把其中一些好的实践用起来，比如持续集成、固定时间的Sprint（对应瀑布模型的迭代模型）\n3. 先小规模试点，在小项目或者新项目试行，总结经验教训。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556029862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76425,"user_name":"阿飞云中漫步","can_delete":false,"product_type":"c1","uid":1095199,"ip_address":"","ucode":"B158B404D330F2","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/1f/740ac1b2.jpg","comment_is_top":false,"comment_ctime":1552610551,"is_pvip":false,"replies":[{"id":"27860","content":"是的，敏捷开发的实践，关键不是学它的形，而是它的神。不然就形似神不似，反而成为一种阻碍。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552614797,"ip_address":"","comment_id":76425,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847577847","product_id":100023701,"comment_content":"不管是瀑布模型还是敏捷开发模型。都要结合公司的实际情况来切实际的应用，我之前所在的公司的话就是强行的使用敏捷开发模型，team leader自己也对敏捷开发不是特别的懂，只是听过你的开发能够提高开发效率，然后就拿来应用，导致后期的团队成员抱怨不断。<br>所以说脱离实际应用场景和实际业务的一些技术方法论都是耍流氓。<br>多向老师学习学习这种好的一种思想和方法。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443301,"discussion_content":"是的，敏捷开发的实践，关键不是学它的形，而是它的神。不然就形似神不似，反而成为一种阻碍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552614797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73077,"user_name":"王二宝","can_delete":false,"product_type":"c1","uid":1042241,"ip_address":"","ucode":"E147D6E597EF5B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/41/2ea1f5dc.jpg","comment_is_top":false,"comment_ctime":1551792588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5846759884","product_id":100023701,"comment_content":"每篇都有很大收获，不得不说这是让我受益最大的一个专栏。谢谢宝玉老师","like_count":1},{"had_liked":false,"id":357088,"user_name":"Nio","can_delete":false,"product_type":"c1","uid":1529642,"ip_address":"广东","ucode":"A1B8D3C01FB937","user_header":"https://static001.geekbang.org/account/avatar/00/17/57/2a/c6c95f37.jpg","comment_is_top":false,"comment_ctime":1662945430,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1662945430","product_id":100023701,"comment_content":"敏捷是一套价值观和原则，目的是为了快速迭代，持续集成，拥抱变化。","like_count":0},{"had_liked":false,"id":344336,"user_name":"神在细节之中","can_delete":false,"product_type":"c1","uid":2739245,"ip_address":"","ucode":"2C3DE0402C9B2E","user_header":"https://static001.geekbang.org/account/avatar/00/29/cc/2d/a4a5b50d.jpg","comment_is_top":false,"comment_ctime":1651478299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651478299","product_id":100023701,"comment_content":"感觉敏捷是迭代的简化版的，简化或者省略了每次迭代的步周","like_count":0},{"had_liked":false,"id":308299,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1629525093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629525093","product_id":100023701,"comment_content":"我们团队就是敏捷开发，拥抱业务，拥抱需求，拥抱变化，两周一个冲刺，业务需求排的满满登登，还有生产个案，运维工作，还有各种会议，占用了很大的开发时间。对业务很友好，功能上去了，但是开发人员开发，个测，联调，测试，周期太长，没时间写文档，总结和梳理，一旦有人离职，新来的很难快速上手。步子太快，扯淡了。","like_count":0},{"had_liked":false,"id":285920,"user_name":"单车","can_delete":false,"product_type":"c1","uid":1444377,"ip_address":"","ucode":"A11ED8570AC0DC","user_header":"https://static001.geekbang.org/account/avatar/00/16/0a/19/9fcde2ed.jpg","comment_is_top":false,"comment_ctime":1617074471,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617074471","product_id":100023701,"comment_content":"敏捷开发，突然需求变更，是在当前Sprint处理还是放到下一个Sprint","like_count":0},{"had_liked":false,"id":238761,"user_name":"hhk","can_delete":false,"product_type":"c1","uid":1138826,"ip_address":"","ucode":"72EC677FBDC79B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gvfibNc3Bol6DzLMG5ia9wSLVYseoq326iae7TczmgmBj9u3Jwt8c0hl9KSzY4GNTFn0ic9m1ibzicqJ3aGzeQemec2Q/132","comment_is_top":false,"comment_ctime":1596286307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596286307","product_id":100023701,"comment_content":"我还是不是很明白 迭代模型 和 敏捷开发 的区别是什么  <br>或者说我觉得两者其实并没有这么大的区别，目的都是持续地快速稳定迭代","like_count":0},{"had_liked":false,"id":194450,"user_name":"Moby","can_delete":false,"product_type":"c1","uid":1122734,"ip_address":"","ucode":"A9CFD37FD8B5C7","user_header":"https://static001.geekbang.org/account/avatar/00/11/21/ae/416a7d6d.jpg","comment_is_top":false,"comment_ctime":1585060324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585060324","product_id":100023701,"comment_content":"1. 什么是敏捷开发？<br><br>敏捷开发不是一种方法论，也不是一种软件开发的具体方法，更不是一个框架或过程，而是一套价值观和原则。<br><br>2. 敏捷开发想解决什么问题？<br><br>解决瀑布模型带来的问题如「周期长、发布烦、更改难」，敏捷开发就是快速迭代、持续集成、拥抱变化。<br><br>3. 敏捷开发和瀑布模型的差异<br><br>需求分析上：敏捷开发根据“用户提的故事”来快速编程；瀑布模型需要严谨的需求分析，从而产生详尽的需求分析文档<br><br>架构设计：瀑布模型根据需求做架构设计；敏捷开发是一种渐进式的架构设计，每一个 sprint只做一部分需求，当前 sprint 只适合当前需求的架构。渐进式的架构设计容易产生技术债务，需定期对系统进行重构。<br><br>项目质量：瀑布模型有专门的阶段进行测试，以保证质量；敏捷开发的 sprint 中，开发功能的同时，要编写单元测试和集成测试代码，用自动化的方式辅助完成测试。<br><br>发布部署：瀑布模型通常在编码结束后，开始部署测试环境；敏捷开发中，每次完成一个任务，提交代码后都可以触发一次构建部署操作。<br><br>敏捷开发的 Sprint 和迭代模型的迭代区别：迭代模型本质上是一个小瀑布模型，所以在一个迭代里面，需要完整的经历从需求分析，到设计、编码、测试这几个完整的阶段；<br>Sprint 周期里面会完成多个用户故事，在用户故事的开发时，会针对用户故事有编码、自动化测试编码。当一个用户故事开发完成，即可通过持续集成自动发布到测试环境。<br><br>4. 该不该选择敏捷开发？<br><br>·团队要小，人数超过一定规模就要分拆；<br>·团队成员之间要紧密协作，客户也要自始至终深度配合；<br>·领导们得支持。敏捷需要扁平化的组织结构，更少的控制，更多的发挥项目组成员的主动性；<br>·写代码时要有一定比例的自动化测试代码，要花时间搭建好源码管理和持续集成环境。","like_count":0},{"had_liked":false,"id":113203,"user_name":"我不是矿长","can_delete":false,"product_type":"c1","uid":1232421,"ip_address":"","ucode":"6E31D775AA8D03","user_header":"https://static001.geekbang.org/account/avatar/00/12/ce/25/14a648ae.jpg","comment_is_top":false,"comment_ctime":1562915049,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1562915049","product_id":100023701,"comment_content":"学习了","like_count":0},{"had_liked":false,"id":85679,"user_name":"庄小P","can_delete":false,"product_type":"c1","uid":1489063,"ip_address":"","ucode":"A71FA01F713790","user_header":"","comment_is_top":false,"comment_ctime":1555171619,"is_pvip":false,"replies":[{"id":"30825","content":"自己做一个业余项目，最好是开源项目，然后就可以实践起来了。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1555219825,"ip_address":"","comment_id":85679,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555171619","product_id":100023701,"comment_content":"不知道有没有简单的能用来实践的例子","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446764,"discussion_content":"自己做一个业余项目，最好是开源项目，然后就可以实践起来了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555219825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80378,"user_name":"YEYI","can_delete":false,"product_type":"c1","uid":1438820,"ip_address":"","ucode":"4F115D5C793C44","user_header":"https://static001.geekbang.org/account/avatar/00/15/f4/64/bf488275.jpg","comment_is_top":false,"comment_ctime":1553653048,"is_pvip":false,"replies":[{"id":"29274","content":"👍赞总结<br>似乎没有写完？","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553662414,"ip_address":"","comment_id":80378,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553653048","product_id":100023701,"comment_content":"敏捷开发的好处：<br>1.能够及时拥抱变化<br>2.让客户有参与感，每一次sprint都能让客户看到产品的蜕变。<br>3.让开发人员没有那么大的开发压力，对于开发人员能够更好的提升和发展。<br>4.","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444840,"discussion_content":"👍赞总结\n似乎没有写完？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553662414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80169,"user_name":"小先生","can_delete":false,"product_type":"c1","uid":1055214,"ip_address":"","ucode":"E5F2052E0323C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ee/e395a35e.jpg","comment_is_top":false,"comment_ctime":1553612625,"is_pvip":false,"replies":[{"id":"29217","content":"赞总结👍<br>一个Sprint可能有多个用户故事。一个Sprint的周期是固定的","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553635907,"ip_address":"","comment_id":80169,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553612625","product_id":100023701,"comment_content":"敏捷就是针对瀑布模型的缺点而生的。<br>敏捷是一种道，而不是术。<br>拥抱变化、积极沟通、持续集成都是敏捷的特点。一个 Sprint 也就是一个故事。","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444770,"discussion_content":"赞总结👍\n一个Sprint可能有多个用户故事。一个Sprint的周期是固定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553635907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77591,"user_name":"titan","can_delete":false,"product_type":"c1","uid":1085683,"ip_address":"","ucode":"A77E51F269EEC3","user_header":"https://static001.geekbang.org/account/avatar/00/10/90/f3/15cf02fa.jpg","comment_is_top":false,"comment_ctime":1552966844,"is_pvip":false,"replies":[{"id":"28332","content":"平等和牛人，这其实不矛盾的。<br><br>就像蜘蛛侠的叔叔说的：能力越大责任越大。牛人担负的责任会更大，贡献多，收入也多。<br><br>一个健康的开发团队，无论大小，都应该是有梯队的，有资深的，有新人，资深的（牛人）负责架构、模块划分、实现核心模块，新手则基于架构实现具体模块。不然单靠个别牛人完成功能也是不现实的。<br><br>敏捷开发在小公司落地，最根本还是真的懂敏捷，能应用好敏捷的原则和实践，不要追求形式化，不要走捷径。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552969271,"ip_address":"","comment_id":77591,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552966844","product_id":100023701,"comment_content":"敏捷开发在一些小公司落地是比较难的，原因我认为主要是人的综合素质达不到，敏捷的一些思想和原则不能落地，比如团队成员人人平等的价值观，在小公司，牛人比较少，大部分都是比较弱的人，你让牛人跟他们强调平等，似乎是不太可能的事情。","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443791,"discussion_content":"平等和牛人，这其实不矛盾的。\n\n就像蜘蛛侠的叔叔说的：能力越大责任越大。牛人担负的责任会更大，贡献多，收入也多。\n\n一个健康的开发团队，无论大小，都应该是有梯队的，有资深的，有新人，资深的（牛人）负责架构、模块划分、实现核心模块，新手则基于架构实现具体模块。不然单靠个别牛人完成功能也是不现实的。\n\n敏捷开发在小公司落地，最根本还是真的懂敏捷，能应用好敏捷的原则和实践，不要追求形式化，不要走捷径。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552969271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73961,"user_name":"hua168","can_delete":false,"product_type":"c1","uid":1065255,"ip_address":"","ucode":"CFF9A7E86EBA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/27/3ff1a1d6.jpg","comment_is_top":false,"comment_ctime":1552046861,"is_pvip":false,"replies":[{"id":"26986","content":"郑老师介绍的很多方法挺好的。<br><br>关于是不是敏捷，建议你再看看这篇文章：敏捷开发并不是因为用了某个具体方法，而看是不是符合敏捷的价值观和原则。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552053742,"ip_address":"","comment_id":73961,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552046861","product_id":100023701,"comment_content":"隔壁郑晔《10x程序员工作发》也提到了用户故事，用用户故事这种方式去确定需求是不是就认为是敏捷开发？","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442361,"discussion_content":"郑老师介绍的很多方法挺好的。\n\n关于是不是敏捷，建议你再看看这篇文章：敏捷开发并不是因为用了某个具体方法，而看是不是符合敏捷的价值观和原则。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552053742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73543,"user_name":"胖虫子","can_delete":false,"product_type":"c1","uid":1100956,"ip_address":"","ucode":"21FC09D0121B4F","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/9c/ec71155f.jpg","comment_is_top":false,"comment_ctime":1551922290,"is_pvip":false,"replies":[{"id":"26798","content":"😂<br>文档是省了，代码质量却不见提升","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551924619,"ip_address":"","comment_id":73543,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551922290","product_id":100023701,"comment_content":"很多敏捷开发是不写任何文档的借口","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442145,"discussion_content":"😂\n文档是省了，代码质量却不见提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551924619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}