{"id":663717,"title":"18｜初识Flask：搭建第一个Flask项目","content":"<p>你好，我是Barry。</p><p>从这节课开始，我们就进入到后端实战篇。这个章节重点培养的是我们从0到1做项目后端开发的能力。我们将经历从代码设计到具体功能的模块接口开发，深度体验独立平台搭建和后端开发的完整链路，学会灵活应用框架技术来应对多种类型的项目需求。</p><p>这节课，我们要拿下的就是后端部分的第一个核心知识点—— Flask 项目搭建。之所以选择基于Python的Flask框架，是因为它更合适用来完成视频直播平台的后端开发。</p><h2>为什么选用Flask</h2><p>为了让你知道选型的来龙去脉。我们先聊聊为什么要选用Flask框架，而不是选择使用Django这个应用也很广泛的框架呢？</p><p>这就要说到Flask和Django的区别了。首先，二者都是企业当中用的很多的Web的后端框架。接下来，我们一起来看一下二者的对比。</p><p>Flask主要有两大优点。第一个优点，它是轻量级Python开发框架。意思就是Flask核心就是几个文件，不用大量的配置文件，很快就能搭建起来一个小型的Web应用并快速启动运行，很适合搞微服务。</p><p>第二个优点就是灵活，其实这不光是Flask的优点，也是Python的优点，因为Flask是基于Python的Web应用框架。灵活的地方就在于这个框架用的人多，整体生态比较好。Flask有很多别人做好的扩展包，并且整体处在一个持续的维护和更新状态，我们可以灵活使用这些包和库做定制和扩展。它的API部分也不需要大量的配置文件和模板，几行代码就可以完成一个实现简单功能的应用。</p><!-- [[[read_end]]] --><p>我们可以结合后面这个例子来看看。通过这个例子，我们不难发现API开发在Flask中不复杂，几行代码就可以实现一个简单的功能。</p><pre><code class=\"language-python\">from flask import Flask, jsonify\napp = Flask(__name__)\ndef get_weather(city):\n&nbsp; # 根据城市名称查询天气\n&nbsp; # 返回查询结果\n&nbsp; return {'city': city, 'weather': 'sunny'}\n@app.route('/weather/&lt;city&gt;')\ndef weather(city):\n&nbsp; # 调用get_weather函数获取天气情况\n&nbsp; result = get_weather(city)\n&nbsp; # 将查询结果以json格式返回\n&nbsp; return jsonify(result)\nif __name__ == '__main__':\n&nbsp; app.run()\n</code></pre><p>上面这段代码里，我们定义了一个get_weather函数，用来根据城市名称查询天气情况。我们使用了@app.route这个装饰器，把get_weather函数绑定到 “/weather/<city>” 的URL路径上。这样当用户去访问这个URL的时候，Flask就会自动调用get_weather函数，并将查询结果以JSON格式返还给用户。</city></p><p>说完了Flask，我们再来聊一聊同样是基于Python的Web框架——Django。那么Django有什么优点呢？</p><p>首先，Django的库非常完整，就像一个工具箱一样，你想要的它都有。</p><p>其次，Django有着比较严密的架构设计，安全性也比较高，可以保护网站抵御像SQL注入这样的恶意操作。</p><p>最后，Django可以直接用Python语言对数据库进行操作，这一点也比较方便。</p><p>Django的库完整、架构设计严密这些优点，注定了它非常适用于大型的应用，比如电子商务网站。不过，Django的优点其实也算是它的缺点，因为Django架构严密，又非常完整的库，这就造成了一个问题——Django的学习成本比较高。</p><p>无论应用大小怎样，Django所需要的大量配置文件都少不了，而且占用的系统资源比较多，比如像机器性能、网路带宽等等这些资源。应用不需要的功能模块，Django也包括在内了，所以它不如Flask轻便。</p><p>我们总结下Django和Flask的区别。Django就像是一个工具箱，你要的它都有；而Flask是一把锤子，非常轻便，只要你善于使用它，就可以做出更多的、自由度更大的东西。</p><p>说到这里，我们已经明白了选用Falsk的原因。考虑到我们平台的特点，还有后端学习路径循序渐进的原则，Flask更合适一些。</p><h2>Flask知识点梳理</h2><p>接下来我们就一起来看看，学习Flask都应该掌握哪些知识点。使用Flask去做项目的话，有几样技术知识需要去掌握：<strong>Python语言、数据库和前端应用。</strong></p><p>想要掌握Flask，就需要我们对Python语言的应用非常熟悉。通过前面先导课的学习，对于Python语言你或多或少已经具备了一些基础。</p><p>其中需要重点掌握的就是 <strong>Python语言应用。</strong>比如变量的应用、Python当中的一些控制结构语言（比如if的while、for循环等等简单的控制语句，还有像函数要怎么构造、类怎么构造，怎样使用类当中的操作等等，这些都是高频用到的知识。</p><p>第二类技术知识就是<strong>数据库</strong>。从字面意思理解，数据库就是存储数据的一个仓库，能对项目中的数据进行管理和操作。因为我们的在线视频项目有很多数据，比如用户上传的视频、用户的个人信息预计日志等等，这些都需要存放的容器。而这个容器就是数据库，因此我们整个项目都不留离不开它。这里我也明确一下，数据库我们使用MySQL来实现。</p><p>第三就是<strong>前端应用</strong>。前面我们刚刚完成前端语言和框架的学习，相信你已经能够使用Vue完成整个前端部分的实现了。等我们学完后端部分，就可以实现整个平台前后端的联动，完成平台整体功能的开发。</p><p>接下来就是实践环节，我们一起来完成整个Flask框架的搭建。</p><h2>框架搭建</h2><p>在开始之前，你需要先准备好项目所使用到的IDE。安装成功之后，我们再来实现Flask框架的搭建。</p><h3>第一步：安装项目所使用的IDE</h3><p>我们在后端开发中使用Pycharm这个工具，你可以直接到 <a href=\"https://www.jetbrains.com/zh-cn/pycharm/\">Pycharm的官网</a>。它的安装比较简单，你根据教程一步步操作就能搞定。这里我们需要选择community，也就是社区版本。</p><p><img src=\"https://static001.geekbang.org/resource/image/f7/fd/f7699c319aaf1f36e63f47e97f7af9fd.png?wh=1920x712\" alt=\"图片\"></p><h2>第二步：配置Pycharm的编译环境</h2><p>下一步我们需要创建一个新的项目。在PyCharm中，一个项目对应一个文件夹。我们需要在PyCharm的欢迎界面，点击 “<strong>Create New Project</strong>” 按钮，然后输入项目的名称和存放路径。</p><p>这里我给项目起的名字是 “First_Flask”，你可以自己创建命名。点击New environment using，选择 “Virtualenv”，然后在Base interpreter中选择Python版本。这里我使用的是软件anaconda自带的Python解释器，你使用先导课中下载过的Python解释器即可。若系统未自动检测到，还需要点击右边省略号图标，找到并选中python.exe文件路径。</p><h3>第三步：安装Flask</h3><p>接下来就是安装环节。在Pycharm下方，有一个Terminal按钮，点击之后，就会弹出后面截图里的对话框。</p><p><img src=\"https://static001.geekbang.org/resource/image/54/58/549b74760c5cd1f1e8e8768649533658.jpg?wh=2000x524\" alt=\"\"></p><p>我们使用pip命令来安装，在下方的终端——Terminal输入命令行即可。</p><pre><code class=\"language-python\">pip install flask\n</code></pre><p>这里的pip其实是一个Python语言的包管理器，用来安装和管理Python包和依赖。</p><h3>第四步：框架文件的搭建</h3><p>由于项目会有许多的程序，我们提前设置好整个项目目录结构。后端开发中，我们需要创建文件夹来存放不同功能的代码块。</p><p>接下来，我们看看这个项目需要的Python Package。我们先把基础的几个文件夹建好。每个文件夹的作用你可以参考后面的表格，之后我们有其他需要再创建即可。我画了一张表，帮你梳理了整个api文件下的项目目录。</p><p><img src=\"https://static001.geekbang.org/resource/image/3f/72/3f58f4678cd2a186f5dc1957fb4a9772.jpg?wh=3030x2030\" alt=\"\"></p><p>后面是对应的项目目录图，你可以对照图片来了解文件之间的层级关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/f5/83/f58737d7d40b99029811fb70d0221183.jpg?wh=2600x509\" alt=\"\"><img src=\"https://static001.geekbang.org/resource/image/43/55/43a12e9e0642f2e4f1dc0f43b18d3255.jpg?wh=2000x487\" alt=\"\"></p><p>对于model文件夹中的内容，主要存放的是admin，video，message等项目文件。</p><p><img src=\"https://static001.geekbang.org/resource/image/f0/6f/f06617057f4de15279f1dbe8f31ca86f.jpg?wh=2463x678\" alt=\"\"></p><p>下面进入实战环节，我们通过简单的案例尝试在浏览器中输出打印hello word，借此感受一下Flask的魅力。</p><p>我们先来新建一个hello_word的Python文件。只需要在项目文件下面直接创建即可，对应的代码参考如下。</p><pre><code class=\"language-python\">from flask import Flask    # 导入Flask模块\napp = Flask(__name__)      # 创建Flask实例，并指定模块名\n@app.route('/')                 # 定义路由，即当访问 根目录 时返回下面的函数结果\ndef hello_world():\n    return 'Hello, World!'   # 返回字符串Hello, World!\nif __name__ == '__main__':\n    app.run()                       # 运行Flask应用程序\n</code></pre><p>请注意，写在最后的if <strong>name</strong> == ‘<strong>main</strong>’ 方法中 <strong>name</strong>  表示当前模块名，如果是直接运行的Python脚本，则为  <strong>main</strong>，所以该判断语句整体的作用是判断当前模块是否为主模块，如果是则执行下面的语句。</p><p>接着，我们一起来看看运行结果，运行完前面那段代码，在Pycharm的终端就会显示后面截图这样的运行结果，生成一个URL。<br>\n<img src=\"https://static001.geekbang.org/resource/image/da/32/da4f8b0a32262d0d15361c26cf956632.jpg?wh=2000x487\" alt=\"\"></p><p>紧接着，你需要在浏览器中输入该地址，然后就可以看到对应的效果了。<br>\n<img src=\"https://static001.geekbang.org/resource/image/70/bb/70c246ea391547380e0418b999db79bb.jpg?wh=1623x554\" alt=\"\"></p><p>到这里，我们就完成了Flask框架的搭建，并且完成了一个简单的案例测试。建议你在课后用配套代码亲自动手练习一下，这样学习效果会更好。</p><h2>总结</h2><p>课程接近尾声了，我来带你对今天学到的内容做一个回顾总结。</p><p>我们先是比较了Flask和Django两种框架的特点。结合我们平台的需要和学习路径的合理性，我们最终选择了更合适做视频直播平台后端开发的Flask框架。</p><p>之后，我带你梳理了掌握Flask必备的技术知识，包括Python基础应用和数据库操作等，虽然这一部分我们已经在先导课学过了，但如果想更熟练地应用框架，还是建议你课后继续强化练习。</p><p>最后，通过Flask框架的搭建实操，我们一起演练了Flask安装到项目搭建的整个过程。至于hello word这个简单案例，其实也是为后续我们使用Flask开发后端做一个预热，后续课程里我们还会让Flask发挥更大的价值。</p><h2>思考题</h2><p>你可以尝试设置两个路由，实现——用户输入不同URL，页面显示不同内容。</p><p>期待你在留言区和我交流互动。如果觉得这节课的内容实用有趣，不妨推荐给你的伙伴，和他一起学习进步。</p>","neighbors":{"left":{"article_title":"04｜Vue概览：Vue哪些内容是你必须要掌握的？","id":653986},"right":{"article_title":"19｜路由定义和视图常用逻辑：路由定义和视图的核心是什么？","id":664701}},"comments":[{"had_liked":false,"id":375608,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1685716427,"is_pvip":false,"replies":[{"id":137105,"content":"1、Flask 可以用于构建微服务。Flask是一个轻量级的Python Web框架，易于扩展，因此非常适合用于开发微服务。\n2、言简意赅了，可能会造成一些误解\n3、Flask可以使用Python语言访问数据库。\n4、每个项目都需要指定python.exe。但是，如果你的PyCharm版本较新，它会自动检测所使用的Python版本，因此你不必手动指定Python解释器，否则都需要进行配置。\n5、你的说法是正确的，我们重点在明确每个文件夹的作用，方便项目管理。\n6、这个我说了，把api放第一个是解释一下它的作用，他们非平级，你看下面的图就知道关系了。\n7、在 Python 中，当一个文件被运行时，它就成为了 main 模块。如果和 hello_world.py 在同一个目录下创建了一个 aaa.py 文件，那么 aaa.py 就不会被当做 main 模块运行，除非在 aaa.py 中包含了上述的代码块并且直接运行该文件。\n整体的回答就是这样的情况，希望你继续努力，继续加油。\n\n\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1685786515,"ip_address":"北京","comment_id":375608,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"请教老师几个问题：\nQ1：微服务需要很多组件，比如springCloud就包括配置中心、服务发现、网关、负载均衡等。Flask做微服务，功能组件齐全吗？\nQ2：get_weather绑定到url上，是个笔误吧。\n文中有“把 get_weather 函数绑定到 “&#47;weather&#47;” 的 URL 路径上”，感觉是weather函数绑定到url的，也许是个笔误。\nQ3：Flask不能用python语言访问数据库吗？\nQ4：用PyCharm，每个项目都需要指定python.exe吗？\nQ5：对于文件夹的解释，“libs”和”thirdparty”的解释不太对吧。 Thirdparty:存放用户上传的头像等。”libs”：包含了管理后台的一些函数或工具等。\nQ6：平级目录怎么变成包含关系了？\n“后面是对应的项目目录图，你可以对照图片来了解文件之间的层级关系”，这句话下面有两个图，上面的图中目录还是平级关系，下面怎么就不是平级了？（紧挨着下面的图同样）\nQ7：怎么判断是main模块？\nHello_world.py为什么是main模块？标志是什么？是放在特定目录下面就是main吗？  如果在hello_world.py同样的目录下面创建一个aaa.py，也是main吗？\n另外，放在哪个目录下面就不会是main了？","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620078,"discussion_content":"1、Flask 可以用于构建微服务。Flask是一个轻量级的Python Web框架，易于扩展，因此非常适合用于开发微服务。\n2、言简意赅了，可能会造成一些误解\n3、Flask可以使用Python语言访问数据库。\n4、每个项目都需要指定python.exe。但是，如果你的PyCharm版本较新，它会自动检测所使用的Python版本，因此你不必手动指定Python解释器，否则都需要进行配置。\n5、你的说法是正确的，我们重点在明确每个文件夹的作用，方便项目管理。\n6、这个我说了，把api放第一个是解释一下它的作用，他们非平级，你看下面的图就知道关系了。\n7、在 Python 中，当一个文件被运行时，它就成为了 main 模块。如果和 hello_world.py 在同一个目录下创建了一个 aaa.py 文件，那么 aaa.py 就不会被当做 main 模块运行，除非在 aaa.py 中包含了上述的代码块并且直接运行该文件。\n整体的回答就是这样的情况，希望你继续努力，继续加油。\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685786515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375570,"user_name":"长林啊","can_delete":false,"product_type":"c1","uid":1707743,"ip_address":"四川","ucode":"B75CB4919FF25A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/0e/df/a64b3146.jpg","comment_is_top":false,"comment_ctime":1685667343,"is_pvip":false,"replies":[{"id":137104,"content":"你可以使用热部署工具，比如 Flask-LiveServer 或 Flask-Wox，这些工具可以在不重启程序的情况下更新代码和路由。同时，Flask 社区开发了许多第三方扩展，可以帮助你解决自动重新加载问题。其中最受欢迎的是 Flask-Script，它提供了一个交互式命令行界面，可用于运行管理和操作 Flask 应用程序，你可以尝试一下，继续加油，希望对你有帮助。\n\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1685785497,"ip_address":"北京","comment_id":375570,"utype":1}],"discussion_count":1,"race_medal":1,"score":2,"product_id":100546501,"comment_content":"老师，每次在新加一个路由后，就需要重新运行程序，否则就访问不到新加的路由，有什么方式可以实现热重载呢？","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620077,"discussion_content":"你可以使用热部署工具，比如 Flask-LiveServer 或 Flask-Wox，这些工具可以在不重启程序的情况下更新代码和路由。同时，Flask 社区开发了许多第三方扩展，可以帮助你解决自动重新加载问题。其中最受欢迎的是 Flask-Script，它提供了一个交互式命令行界面，可用于运行管理和操作 Flask 应用程序，你可以尝试一下，继续加油，希望对你有帮助。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685785498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375569,"user_name":"长林啊","can_delete":false,"product_type":"c1","uid":1707743,"ip_address":"四川","ucode":"B75CB4919FF25A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/0e/df/a64b3146.jpg","comment_is_top":false,"comment_ctime":1685667055,"is_pvip":false,"replies":[{"id":137100,"content":"完成的非常不错，花了心思，希望你继续保持，持续登顶！！","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1685781850,"ip_address":"北京","comment_id":375569,"utype":1}],"discussion_count":1,"race_medal":1,"score":2,"product_id":100546501,"comment_content":"实现——用户输入不同 URL，页面显示不同内容\n——————————————————————\n\nfrom flask import Flask  # 导入Flask模块\n\napp = Flask(__name__)  # 创建Flask实例，并指定模块名\n\n\n@app.route(&#39;&#47;&#39;)  # 定义路由，即当访问 根目录 时返回下面的函数结果\ndef hello_world():\n    return &#39;Hello, World!&#39;  # 返回字符串Hello, World!\n\n\n@app.route(&#39;&#47;any&#47;&lt;content&gt;&#39;)\ndef other(content):\n    return &#39;输入的内容是：{}&#39;.format(content)\n\n\nif __name__ == &#39;__main__&#39;:\n    app.run()  # 运行Flask应用程序\n\n\n————————————————\n浏览器或者postman 中访问：http:&#47;&#47;127.0.0.1:5000&#47;any&#47;flask\n现实结果为：输入的内容是：flask\n","like_count":1,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620067,"discussion_content":"完成的非常不错，花了心思，希望你继续保持，持续登顶！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685781850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392795,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1721804503,"is_pvip":false,"replies":[{"id":143259,"content":"冲冲冲～","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1727424227,"ip_address":"北京","comment_id":392795,"utype":1}],"discussion_count":1,"race_medal":2,"score":2,"product_id":100546501,"comment_content":"第18讲打卡~ 入门Flask","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651784,"discussion_content":"冲冲冲～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727424227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387723,"user_name":"        ","can_delete":false,"product_type":"c1","uid":2580017,"ip_address":"北京","ucode":"66DB32D1C76918","user_header":"https://static001.geekbang.org/account/avatar/00/27/5e/31/a6c2515c.jpg","comment_is_top":false,"comment_ctime":1708484149,"is_pvip":false,"replies":[{"id":142614,"content":"非常的不错，这个解决方法算是一个优质的解决方法，重点做好对应的信息判断。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1720770881,"ip_address":"北京","comment_id":387723,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"思考题如下： 通过判断请求url来触发返回消息 ","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647907,"discussion_content":"非常的不错，这个解决方法算是一个优质的解决方法，重点做好对应的信息判断。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1720770881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382812,"user_name":"Aegean Sea","can_delete":false,"product_type":"c1","uid":3688848,"ip_address":"广西","ucode":"0C6F23AEAC6E07","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELrxUK36wj3AesBNLK4tPibu7URiaI48cMWho2t8bfZOyfYDnQwQu2TTXibIbGVZ8DkPhNXDGr7VTfOJv1R1ccw1KBv5qfbq1bYvDhL1MtAVjISA/132","comment_is_top":false,"comment_ctime":1698066190,"is_pvip":false,"replies":[{"id":139567,"content":"Python是3.8的版本","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1698585692,"ip_address":"北京","comment_id":382812,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"python是哪个版本","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630505,"discussion_content":"Python是3.8的版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698585692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379367,"user_name":"蜡笔小新爱看书","can_delete":false,"product_type":"c1","uid":1224437,"ip_address":"广东","ucode":"3E597682ADB0C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/ae/f5/a17bbcc9.jpg","comment_is_top":false,"comment_ctime":1691823098,"is_pvip":false,"replies":[{"id":138328,"content":"使用的是VSCode，同学，VSCode比较轻量，也有很多的插件，跑代码还是非常不错的，Python部分用的是PyCharm，这两个，同学直接到官网下载对应的版本就可以。有需要欢迎留言！","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1692452255,"ip_address":"北京","comment_id":379367,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"前端的章节里，怎么没介绍用哪个IDE的？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626023,"discussion_content":"使用的是VSCode，同学，VSCode比较轻量，也有很多的插件，跑代码还是非常不错的，Python部分用的是PyCharm，这两个，同学直接到官网下载对应的版本就可以。有需要欢迎留言！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692452255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375588,"user_name":"友","can_delete":false,"product_type":"c1","uid":2536820,"ip_address":"云南","ucode":"972A4333A8B101","user_header":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","comment_is_top":false,"comment_ctime":1685695926,"is_pvip":false,"replies":[{"id":137099,"content":"近期整理就上传，逐一留意git，惊喜马上呈现","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1685781275,"ip_address":"北京","comment_id":375588,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"前端的终于过去了 我亲爱的老师前端完整代码上传了吗 嘻嘻😁","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620066,"discussion_content":"近期整理就上传，逐一留意git，惊喜马上呈现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685781275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2536820,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b5/74/cd80b9f4.jpg","nickname":"友","note":"","ucode":"972A4333A8B101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":620087,"discussion_content":"好滴 期待一下 我要开始一步一步后端了 然后我还会用golang写一套后段","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1685792909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":620066,"ip_address":"云南","group_id":0},"score":620087,"extra":""}]}]},{"had_liked":false,"id":387724,"user_name":"        ","can_delete":false,"product_type":"c1","uid":2580017,"ip_address":"北京","ucode":"66DB32D1C76918","user_header":"https://static001.geekbang.org/account/avatar/00/27/5e/31/a6c2515c.jpg","comment_is_top":false,"comment_ctime":1708484153,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"# -*- coding:utf-8 -*-\n\n&#39;&#39;&#39;你可以尝试设置两个路由，实现——用户输入不同 URL，页面显示不同内容。&#39;&#39;&#39;\n\nfrom flask import Flask, jsonify\nfrom flask import request\nfrom datetime import datetime\n\napp = Flask(__name__)\n\ndef handle_request():\n    # 根据请求的路由判断如何返回消息\n    if request.path == &#39;&#47;date&#39;:\n        current_date = datetime.now().strftime(&#39;%Y-%m-%d&#39;)\n        return f&#39;当前日期为{current_date}&#39;\n    elif request.path == &#39;&#47;url&#39;:\n        data = {\n            &#39;url&#39;: request.url,\n            &#39;addr&#39;: request.remote_addr\n        }\n        return jsonify(data)\n    else:\n        return &#39;404&#39;\n\n\n@app.route(&#39;&#47;date&#39;)\n@app.route(&#39;&#47;url&#39;)\ndef view():\n    return handle_request()\n\nif __name__ == &#39;__main__&#39;:\n    app.run()\n\n","like_count":0}]}