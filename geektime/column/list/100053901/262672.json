{"id":262672,"title":"09 | 实战：利用OAuth 2.0实现一个OpenID Connect用户身份认证协议","content":"<p>你好，我是王新栋。</p><p>如果你是一个第三方软件开发者，在实现用户登录的逻辑时，除了可以让用户新注册一个账号再登录外，还可以接入微信、微博等平台，让用户使用自己的微信、微博账号去登录。同时，如果你的应用下面又有多个子应用，还可以让用户只登录一次就能访问所有的子应用，来提升用户体验。</p><p>这就是联合登录和单点登录了。再继续深究，它们其实都是OpenID Connect（简称OIDC）的应用场景的实现。那OIDC又是什么呢？</p><p>今天，我们就来学习下OIDC和OAuth 2.0的关系，以及如何用OAuth 2.0来实现一个OIDC用户身份认证协议。</p><h2>OIDC是什么？</h2><p>OIDC其实就是一种用户身份认证的开放标准。使用微信账号登录极客时间的场景，就是这种开放标准的实践。</p><p>说到这里，你可能要发问了：“不对呀，使用微信登录第三方App用的不是OAuth 2.0开放协议吗，怎么又扯上OIDC了呢？”</p><p>没错，用微信登录某第三方软件，确实使用的是OAuth 2.0。但OAuth2.0是一种授权协议，而不是身份认证协议。OIDC才是身份认证协议，而且是基于OAuth 2.0来执行用户身份认证的互通协议。更概括地说，OIDC就是直接基于OAuth 2.0 构建的身份认证框架协议。</p><!-- [[[read_end]]] --><p>换种表述方式，<strong>OIDC=授权协议+身份认证</strong>，是OAuth 2.0的超集。为方便理解，我们可以把OAuth 2.0理解为面粉，把OIDC理解为面包。这下，你是不是就理解它们的关系了？因此，我们说“第三方App使用微信登录用到了OAuth 2.0”没有错，说“使用到了OIDC”更没有错。</p><p>考虑到单点登录、联合登录，都遵循的是OIDC的标准流程，因此今天我们就讲讲如何利用OAuth2.0来实现一个OIDC，“高屋建瓴” 地去看问题。掌握了这一点，我们再去做单点登录、联合登录的场景，以及其他更多关于身份认证的场景，就都不再是问题了。</p><h2>OIDC 和 OAuth 2.0 的角色对应关系</h2><p>说到“如何利用 OAuth 2.0 来构建 OIDC 这样的认证协议”，我们可以想到一个切入点，这个切入点就是OAuth 2.0 的四种角色。</p><p>OAuth 2.0的授权码许可流程的运转，需要资源拥有者、第三方软件、授权服务、受保护资源这4个角色间的顺畅通信、配合才能够完成。如果我们要想在OAuth 2.0的授权码许可类型的基础上，来构建 OIDC 的话，这4个角色仍然要继续发挥 “它们的价值”。那么，这4个角色又是怎么对应到OIDC中的参与方的呢？</p><p>那么，我们就先想想一个关于身份认证的协议框架，应该有什么角色。你可能已经想出来了，它需要一个登录第三方软件的最终用户、一个第三方软件，以及一个认证服务来为这个用户提供身份证明的验证判断。</p><p>没错，这就是OIDC的三个主要角色了。在OIDC的官方标准框架中，这三个角色的名字是：</p><ul>\n<li>EU（End User），代表最终用户。</li>\n<li>RP（Relying Party），代表认证服务的依赖方，就是上面我提到的第三方软件。</li>\n<li>OP（OpenID Provider），代表提供身份认证服务方。</li>\n</ul><p>EU、RP和OP这三个角色对于OIDC非常重要，我后面也会时常使用简称来描述，希望你能先记住。</p><p>现在很多App都接入了微信登录，那么微信登录就是一个大的身份认证服务（OP）。一旦我们有了微信账号，就可以登录所有接入了微信登录体系的App（RP），这就是我们常说的联合登录。</p><p>现在，我们就借助极客时间的例子，来看一下OAuth 2.0的4个角色和OIDC的3个角色之间的对应关系：</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/e9/8f794280f949862af3ebdc61d69c5fe9.png?wh=1424*468\" alt=\"\" title=\"图1 OAuth 2.0和OIDC的角色对应关系\"></p><h2>OIDC 和 OAuth 2.0 的关键区别</h2><p>看到这张角色对应关系图，你是不是有点 “恍然大悟” 的感觉：要实现一个OIDC协议，不就是直接实现一个OAuth 2.0协议吗。没错，我在这一讲的开始也说了，OIDC就是基于OAuth 2.0来实现的一个身份认证协议框架。</p><p>我再继续给你画一张OIDC的通信流程图，你就更清楚OIDC和OAuth 2.0的关系了：</p><p><img src=\"https://static001.geekbang.org/resource/image/23/4b/23ce63497f6734dbc6dc9c5b6399c54b.png?wh=1644*1032\" alt=\"\" title=\"图2 基于授权码流程的OIDC通信流程\"></p><p>可以发现，一个基于授权码流程的OIDC协议流程，跟OAuth 2.0中的授权码许可的流程几乎完全一致，唯一的区别就是多返回了一个<strong>ID_TOKEN</strong>，我们称之为<strong>ID令牌</strong>。这个令牌是身份认证的关键。所以，接下来我就着重和你讲一下这个令牌，而不再细讲OIDC的整个流程。</p><h3>OIDC 中的ID令牌生成和解析方法</h3><p>在图2的OIDC通信流程的第6步，我们可以看到ID令牌（ID_TOKEN）和访问令牌（ACCESS_TOKEN）是一起返回的。关于为什么要同时返回两个令牌，我后面再和你分析。我们先把焦点放在ID令牌上。</p><p>我们知道，访问令牌不需要被第三方软件解析，因为它对第三方软件来说是不透明的。但ID令牌需要能够被第三方软件解析出来，因为第三方软件需要获取ID令牌里面的内容，来处理用户的登录态逻辑。</p><p>那<strong>ID令牌的内容是什么呢</strong>？</p><p>首先，ID令牌是一个JWT格式的令牌。你可以到<a href=\"https://time.geekbang.org/column/article/257747\">第4讲</a>中复习下JWT的相关内容。这里需要强调的是，虽然JWT令牌是一种自包含信息体的令牌，为将其作为ID令牌带来了方便性，但是因为ID令牌需要能够标识出用户、失效时间等属性来达到身份认证的目的，所以要将其作为OIDC的ID令牌时，下面这5个JWT声明参数也是必须要有的。</p><ul>\n<li>iss，令牌的颁发者，其值就是身份认证服务（OP）的URL。</li>\n<li>sub，令牌的主题，其值是一个能够代表最终用户（EU）的全局唯一标识符。</li>\n<li>aud，令牌的目标受众，其值是三方软件（RP）的app_id。</li>\n<li>exp，令牌的到期时间戳，所有的ID令牌都会有一个过期时间。</li>\n<li>iat，颁发令牌的时间戳。</li>\n</ul><p>生成ID令牌这部分的示例代码如下：</p><pre><code>//GENATE ID TOKEN\nString id_token=genrateIdToken(appId,user);\n\nprivate String genrateIdToken(String appId,String user){\n    String sharedTokenSecret=&quot;hellooauthhellooauthhellooauthhellooauth&quot;;//秘钥\n    Key key = new SecretKeySpec(sharedTokenSecret.getBytes(),\n            SignatureAlgorithm.HS256.getJcaName());//采用HS256算法\n\n    Map&lt;String, Object&gt; headerMap = new HashMap&lt;&gt;();//ID令牌的头部信息\n    headerMap.put(&quot;typ&quot;, &quot;JWT&quot;);\n    headerMap.put(&quot;alg&quot;, &quot;HS256&quot;);\n\n    Map&lt;String, Object&gt; payloadMap = new HashMap&lt;&gt;();//ID令牌的主体信息\n    payloadMap.put(&quot;iss&quot;, &quot;http://localhost:8081/&quot;);\n    payloadMap.put(&quot;sub&quot;, user);\n    payloadMap.put(&quot;aud&quot;, appId);\n    payloadMap.put(&quot;exp&quot;, 1584105790703L);\n    payloadMap.put(&quot;iat&quot;, 1584105948372L);\n\n    return Jwts.builder().setHeaderParams(headerMap).setClaims(payloadMap).signWith(key,SignatureAlgorithm.HS256).compact();\n}\n</code></pre><p>接下来，我们再看看<strong>处理用户登录状态的逻辑是如何处理的</strong>。</p><p>你可以先试想一下，如果 “不跟OIDC扯上关系”，也就是 “单纯” 构建一个用户身份认证登录系统，我们是不是得保存用户登录的会话关系。一般的做法是，要么放在远程服务器上，要么写进浏览器的cookie中，同时为会话ID设置一个过期时间。</p><p>但是，当我们有了一个JWT这样的结构化信息体的时候，尤其是包含了令牌的主题和过期时间后，不就是有了一个“天然”的会话关系信息么。</p><p>所以，依靠JWT格式的ID令牌，就足以让我们解决身份认证后的登录态问题。这也就是为什么在OIDC协议里面要返回ID令牌的原因，<strong>ID令牌才是OIDC作为身份认证协议的关键所在</strong>。</p><p>那么有了ID令牌后，第三方软件应该如何解析它呢？接下来，我们看一段解析ID令牌的具体代码，如下：</p><pre><code>private Map&lt;String,String&gt; parseJwt(String jwt){\n        String sharedTokenSecret=&quot;hellooauthhellooauthhellooauthhellooauth&quot;;//密钥\n        Key key = new SecretKeySpec(sharedTokenSecret.getBytes(),\n                SignatureAlgorithm.HS256.getJcaName());//HS256算法\n\n        Map&lt;String,String&gt; map = new HashMap&lt;String, String&gt;();\n        Jws&lt;Claims&gt; claimsJws = Jwts.parserBuilder().setSigningKey(key).build().parseClaimsJws(jwt);\n        //解析ID令牌主体信息\n        Claims body = claimsJws.getBody();\n        map.put(&quot;sub&quot;,body.getSubject());\n        map.put(&quot;aud&quot;,body.getAudience());\n        map.put(&quot;iss&quot;,body.getIssuer());\n        map.put(&quot;exp&quot;,String.valueOf(body.getExpiration().getTime()));\n        map.put(&quot;iat&quot;,String.valueOf(body.getIssuedAt().getTime()));\n        \n        return map;\n    }\n</code></pre><p>需要特别指出的是，第三方软件解析并验证ID令牌的合法性之后，不需要将整个JWT信息保存下来，只需保留JWT中的PAYLOAD（数据体）部分就可以了。因为正是这部分内容，包含了身份认证所需要的用户唯一标识等信息。</p><p>另外，在验证JWT合法性的时候，因为ID令牌本身已经被身份认证服务（OP）的密钥签名过，所以关键的一点是合法性校验时需要做签名校验。具体的加密方法和校验方法，你可以回顾下<a href=\"https://time.geekbang.org/column/article/257747\">第4讲</a>。</p><p>这样当第三方软件（RP）拿到ID令牌之后，就已经获得了处理身份认证标识动作的信息，也就是拿到了那个能够唯一标识最终用户（EU）的ID值，比如3521。</p><h3>用访问令牌获取ID令牌之外的信息</h3><p>但是，为了提升第三方软件对用户的友好性，在页面上显示 “您好，3521” 肯定不如显示 “您好，小明同学”的体验好。这里的 “小明同学”，恰恰就是用户的昵称。</p><p>那如何来获取“小明同学”这个昵称呢。这也很简单，就是<strong>通过返回的访问令牌access_token来重新发送一次请求</strong>。当然，这个流程我们现在也已经很熟悉了，它属于OAuth 2.0标准流程中的请求受保护资源服务的流程。</p><p>这也就是为什么在OIDC协议里面，既给我们返回ID令牌又返回访问令牌的原因了。在保证用户身份认证功能的前提下，如果想获取更多的用户信息，就再通过访问令牌获取。在OIDC框架里，这部分内容叫做创建UserInfo端点和获取UserInfo信息。</p><p>这样看下来，细粒度地去看OIDC的流程就是：<strong>生成ID令牌-&gt;创建UserInfo端点-&gt;解析ID令牌-&gt;记录登录状态-&gt;获取UserInfo</strong>。</p><p>好了，利用OAuth 2.0实现一个OIDC框架的工作，我们就做完了。你可以到<a href=\"https://github.com/xindongbook/oauth2-code/tree/master/src/com/oauth/ch09\">GitHub</a>上查看这些流程的完整代码。现在，我再来和你小结下。</p><p>用OAuth 2.0实现OIDC的最关键的方法是：在原有OAuth 2.0流程的基础上增加ID令牌和UserInfo端点，以保障OIDC中的第三方软件能够记录用户状态和获取用户详情的功能。</p><p>因为第三方软件可以通过解析ID令牌的关键用户标识信息来记录用户状态，同时可以通过Userinfo端点来获取更详细的用户信息。有了用户态和用户信息，也就理所当然地实现了一个身份认证。</p><p>接下来，我们就具体看看如何实现单点登录（Single Sign On，SSO）。</p><h2>单点登录</h2><p>一个用户G要登录第三方软件A，A有三个子应用，域名分别是a1.com、a2.com、a3.com。如果A想要为用户提供更流畅的登录体验，让用户G登录了a1.com之后也能顺利登录其他两个域名，就可以创建一个身份认证服务，来支持a1.com、a2.com和a3.com的登录。</p><p>这就是我们说的单点登录，“一次登录，畅通所有”。</p><p>那么，可以使用OIDC协议标准来实现这样的单点登录吗？我只能说 “太可以了”。如下图所示，只需要让第三方软件（RP）重复我们OIDC的通信流程就可以了。</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/48/7bf3cb13a5174f2068c916a4d1ef2748.png?wh=1624*1272\" alt=\"\" title=\"图3 单点登录的通信流程\"></p><p>你看，单点登录就是OIDC的一种具体应用方式，只要掌握了OIDC框架的原理，实现单点登录就不在话下了。关于单点登录的具体实现，在GitHub上搜索“通过OIDC来实现单点登录”，你就可以看到很多相关的开源内容。</p><h2>总结</h2><p>在一些较大的、已经具备身份认证服务的平台上，你可能并没有发现OIDC的描述，但大可不必纠结。有时候，我们可能会困惑于，到底是先有OIDC这样的标准，还是先有类似微信登录这样的身份认证实现方式呢？</p><p>其实，要理解这层先后关系，我们可以拿设计模式来举例。当你想设计一个较为松耦合、可扩展的系统时，即使没有接触过设计模式，通过不断地尝试修改后，也会得出一个逐渐符合了设计模式那样“味道”的代码架构思路。理解OIDC解决身份认证问题的思路，也是同样的道理。</p><p>今天，我们在OAuth2.0的基础上实现了一个OIDC的流程，我希望你能记住以下两点。</p><ol>\n<li><strong>OAuth 2.0 不是一个身份认证协议</strong>，请一定要记住这点。身份认证强调的是“谁的问题”，而OAuth2.0强调的是授权，是“可不可以”的问题。但是，我们可以在OAuth2.0的基础上，通过增加ID令牌来获取用户的唯一标识，从而就能够去实现一个身份认证协议。</li>\n<li>有些App不想非常麻烦地自己设计一套注册和登录认证流程，就会寻求统一的解决方案，然后势必会出现一个平台来收揽所有类似的认证登录场景。我们再反过来理解也是成立的。如果有个拥有海量用户的、大流量的访问平台，来<strong>提供一套统一的登录认证服务</strong>，让其他第三方应用来对接，不就可以解决一个用户使用同一个账号来登录众多第三方App的问题了吗？而OIDC，就是这样的登录认证场景的开放解决方案。</li>\n</ol><p>说到这里，你是不是对OIDC理解得更透彻了呢？好了，让我们看看今天我为了大家留了什么思考题吧。</p><h2>思考题</h2><p>如果你自己通过OAuth 2.0来实现一个类似OIDC的身份认证协议，你觉得需要注意哪些事项呢？</p><p>欢迎你在留言区分享你的观点，也欢迎你把今天的内容分享给其他朋友，我们一起交流。</p>","comments":[{"had_liked":false,"id":235495,"user_name":"哈德韦","can_delete":false,"product_type":"c1","uid":1637085,"ip_address":"","ucode":"E7C9B3D087D2D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","comment_is_top":false,"comment_ctime":1595062005,"is_pvip":false,"replies":[{"id":"87005","content":"id_token是用户身份令牌、access_token是访问令牌，这两个一定要区别开，access_token永远不能被任何第三方软件去解析，就是一个令牌，用来后续请求受保护资源。<br><br>1、id_token是包含代表用户身份信息的声明，access_token是访问受保护资源的凭证，是用来请求平台上资源的，id_token的秘钥可以通过access_token来请求获取，如果access_token也使用JWT格式的数据，两个秘钥肯定不会相同。<br><br>2、ID令牌id_token是在访问令牌access_token基础上的补充，而不是替换访问令牌。“这是因为这两种令牌有不同的目标受众和用途。这种双令牌的方式可以让访问令牌在常规的OAuth 2.0中那样继续保持对第三方软件不透明，而让ID令牌能够被解析。而且，这两种令牌还具有不同的生命周期，ID令牌通常会很快过期。ID令牌代表一个单独的身份认证结果，并且永远不会传递给外部服务，而访问令牌可以在用户离开后的很长时间内用于获取受保护资源。”比如举个例子小明使用了小兔打单软件的批量导出订单功能，如果耗时相对比较长，小明不必一直在场。<br><br>3、id_token和access_token没有关系，access_token过期用refresh_token刷新，只是在第一次登陆的时候将它们两个同时返回给了三方软件，id_token的使命本身就是用来标识用户的，这个标识不是用户名，用户登录的时候用的是用户名而不是这个id_token。<br><br>OIDC是在OAuth 2.0 的基础上产生的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595115284,"ip_address":"","comment_id":235495,"utype":1}],"discussion_count":5,"race_medal":0,"score":"74609506037","product_id":100053901,"comment_content":"还是没有搞懂 id_token 的用处是什么…… <br><br>1. 客户端需要解析 id_token 的话，需要和服务器端共享密钥，这怎么解决？会不会造成密钥泄漏？<br>2. 如果只是解析出一些用户信息，发请求给服务器，服务器用 access_token 拿到用户信息，返回给客户端，不是也行吗？只要 access_token 没过期（即还在登录态），客户端就能拿到用户信息。<br>3. 如果 access_token 过期（即登录已失效），客户端仍然可以用 id_token 解析出用户信息，这岂不是更不合理？","like_count":17,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501747,"discussion_content":"id_token是用户身份令牌、access_token是访问令牌，这两个一定要区别开，access_token永远不能被任何第三方软件去解析，就是一个令牌，用来后续请求受保护资源。\n\n1、id_token是包含代表用户身份信息的声明，access_token是访问受保护资源的凭证，是用来请求平台上资源的，id_token的秘钥可以通过access_token来请求获取，如果access_token也使用JWT格式的数据，两个秘钥肯定不会相同。\n\n2、ID令牌id_token是在访问令牌access_token基础上的补充，而不是替换访问令牌。“这是因为这两种令牌有不同的目标受众和用途。这种双令牌的方式可以让访问令牌在常规的OAuth 2.0中那样继续保持对第三方软件不透明，而让ID令牌能够被解析。而且，这两种令牌还具有不同的生命周期，ID令牌通常会很快过期。ID令牌代表一个单独的身份认证结果，并且永远不会传递给外部服务，而访问令牌可以在用户离开后的很长时间内用于获取受保护资源。”比如举个例子小明使用了小兔打单软件的批量导出订单功能，如果耗时相对比较长，小明不必一直在场。\n\n3、id_token和access_token没有关系，access_token过期用refresh_token刷新，只是在第一次登陆的时候将它们两个同时返回给了三方软件，id_token的使命本身就是用来标识用户的，这个标识不是用户名，用户登录的时候用的是用户名而不是这个id_token。\n\nOIDC是在OAuth 2.0 的基础上产生的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595115284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1815831,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Z4QvXFf42I9Me49H1oqNK9lXT76fU2rRGjPNTtGad8WC9biaiboQBpbHwbPveqU1SpGYGLOcnIm3ncsnuic9C3IMA/132","nickname":"君乐","note":"","ucode":"BC8EC4F8574F71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591625,"discussion_content":"确实没讲清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666713247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1505221,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f7/c5/ffe52e87.jpg","nickname":"阿拉西恩木","note":"","ucode":"A3A62175137D3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540759,"discussion_content":"id token是授权成功后携带的用户信息，一般只会携带openId","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640152815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1159708,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b2/1c/b39d7fe2.jpg","nickname":"꧁平常心꧂","note":"","ucode":"01D04BBEB1C7A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1505221,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f7/c5/ffe52e87.jpg","nickname":"阿拉西恩木","note":"","ucode":"A3A62175137D3D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541033,"discussion_content":"你好，麻烦问一下，这里的openId可以理解为用户id吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640239125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":540759,"ip_address":""},"score":541033,"extra":""}]},{"author":{"id":2232976,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIq15Qq887bH7Z5aQHfXu5vHUj4Iz68RotmUIR12vG5Y3L7icUcYgL4hicwAKYyicAmPTtoZPNPfDPOg/132","nickname":"流云","note":"","ucode":"5C31C34F8B9236","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323478,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604939125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236006,"user_name":"工资不交税","can_delete":false,"product_type":"c1","uid":1110795,"ip_address":"","ucode":"C3ECBCC5622B65","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/0b/0128ae45.jpg","comment_is_top":false,"comment_ctime":1595289484,"is_pvip":false,"replies":[{"id":"88367","content":"要通知","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596464300,"ip_address":"","comment_id":236006,"utype":1}],"discussion_count":7,"race_medal":0,"score":"48839929740","product_id":100053901,"comment_content":"在应用oss中，一端退出是不是还需要通知认证服务？不然认证服务的状态还是登录，那其他端还是能直接登录，甚至自己都没法退出。<br><br>","like_count":11,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501916,"discussion_content":"要通知","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596464300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293353,"discussion_content":"JWT自包含有过期时间。如果是过期了，则所有端都退出了。如果在过期时间内，需要主动退出登录，就需要用户粒度的密钥管理系统（比如把用户和一个UUID关联，这个UUID就是密钥），用户退出时，更新UUID就行了。这样下次校验之前的JWT时会失败，即所有的端都退出了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595507255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1110795,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f3/0b/0128ae45.jpg","nickname":"工资不交税","note":"","ucode":"C3ECBCC5622B65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293432,"discussion_content":"那是不是任意一个端退出还是需要通知认证服务或密钥管理系统？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595545080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293353,"ip_address":""},"score":293432,"extra":""},{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1110795,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f3/0b/0128ae45.jpg","nickname":"工资不交税","note":"","ucode":"C3ECBCC5622B65","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293763,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595661065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293432,"ip_address":""},"score":293763,"extra":""},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313131,"discussion_content":"能具体说一下吗？原来的UUID 改变了为什么就过期了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602949810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293353,"ip_address":""},"score":313131,"extra":""}]},{"author":{"id":1147682,"avatar":"https://static001.geekbang.org/account/avatar/00/11/83/22/c3dae274.jpg","nickname":"阿kai(aeo","note":"","ucode":"6B1D650D9BFA4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592174,"discussion_content":"直接update securitystamp来让所有的登录都退出?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667185542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239984,"user_name":"成立-Charlie","can_delete":false,"product_type":"c1","uid":1091556,"ip_address":"","ucode":"2970BB5446B70A","user_header":"https://static001.geekbang.org/account/avatar/00/10/a7/e4/5a4515e9.jpg","comment_is_top":false,"comment_ctime":1596706110,"is_pvip":false,"replies":[{"id":"88616","content":"Access Token 无论什么格式的都不能被第三方软件解析，永远不透明。<br><br>ID Token是OIDC在OAuth2.0的基础上实现身份认证的产物，从某个意义上讲可以这样理解，但实际上实现一个OIDC还需要实现RP 和 OP。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596724835,"ip_address":"","comment_id":239984,"utype":1}],"discussion_count":4,"race_medal":0,"score":"31661477182","product_id":100053901,"comment_content":"老师，您好！关于ID Token和Access Token，还需要再请教一下。<br>如果Access Token没有使用JWT，第三方应用无法从Access Token中获取用户信息，这样我们就需要ID Token来存放用户信息，这比较容易理解。但是，如果Access Token是JWT格式的，第三方应用是可以从Access Token中解析出用户信息的，再使用ID Token显得不是很有必要。（JWT可以采用非对称证书的方式保证安全）这块老师能帮忙稍微再解释一下吗，谢谢！<br>另外，当我们继承一个认证服务的时候，ID Token是我们评断认证服务是否实现OIDC的标准吗？","like_count":7,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503294,"discussion_content":"Access Token 无论什么格式的都不能被第三方软件解析，永远不透明。\n\nID Token是OIDC在OAuth2.0的基础上实现身份认证的产物，从某个意义上讲可以这样理解，但实际上实现一个OIDC还需要实现RP 和 OP。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596724835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132448,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","nickname":"Sam.张朝","note":"","ucode":"FB20554D94B250","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574690,"discussion_content":"Access Token 无论什么格式的都不能被第三方软件解析，永远不透明。那jwt 生成的access_token 可以解析呀，是否矛盾","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654254563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313132,"discussion_content":"老师，我还是没有理解为什么不可以在access token 里放用户信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602949901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1091556,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a7/e4/5a4515e9.jpg","nickname":"成立-Charlie","note":"","ucode":"2970BB5446B70A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298096,"discussion_content":"谢谢老师。不过，对于企业内部应用来说，可能没有第三方应用的概念，但会存在client角色和resource Server的角色。但如何定位企业的内部应用，如什么时候作为client这个角色，什么时候作为resource Server，如何界定呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597189966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235582,"user_name":"leros","can_delete":false,"product_type":"c1","uid":1021455,"ip_address":"","ucode":"02F018C58337E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/0f/d9d878f8.jpg","comment_is_top":false,"comment_ctime":1595107655,"is_pvip":false,"replies":[{"id":"87236","content":"像Kerberos、SAML这些的特点就是复杂，至少相对于OAuth 2.0 要复杂的多，现在基于OAuth 2.0的OIDC是趋势。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595337618,"ip_address":"","comment_id":235582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23069944135","product_id":100053901,"comment_content":"能不能比较下基于SAML和基于OIDC的SSO？一些大的授权服务平台可能二者都提供，不太清楚具体实践中如何选择","like_count":5,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501773,"discussion_content":"像Kerberos、SAML这些的特点就是复杂，至少相对于OAuth 2.0 要复杂的多，现在基于OAuth 2.0的OIDC是趋势。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595337618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235440,"user_name":"DB聪","can_delete":false,"product_type":"c1","uid":2051350,"ip_address":"","ucode":"F48257394F7054","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4d/16/848d2722.jpg","comment_is_top":false,"comment_ctime":1595037093,"is_pvip":false,"replies":[{"id":"86993","content":"重复1-6的本意是要表达都需要进行1-6步骤，在图中我们分了已登录和未登录两种情况，那个步骤3是在未登录的情况下发生的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595073405,"ip_address":"","comment_id":235440,"utype":1}],"discussion_count":9,"race_medal":0,"score":"23069873573","product_id":100053901,"comment_content":"图3中”重复上述1-6”陈述单点登录的描述感觉有点难理解，原因在第3步，如果分别登陆a1.com、a2.com、a3.com的时候，都有第3步的参与，那是否意味着End User每次都需要输入用户名和密码呢？","like_count":5,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501721,"discussion_content":"重复1-6的本意是要表达都需要进行1-6步骤，在图中我们分了已登录和未登录两种情况，那个步骤3是在未登录的情况下发生的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595073405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/63/61/d259f7a9.jpg","nickname":"OTM","note":"","ucode":"D96E9A661F122B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327577,"discussion_content":"每次跳转到登录页面，不需要每次输入用户名、密码；因为授权服务 也有自己得会话信息，会自动判断","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605865378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132448,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","nickname":"Sam.张朝","note":"","ucode":"FB20554D94B250","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574691,"discussion_content":"重复过程，单点登录还要进入微信进行授权一次吗？或者说，第一次的时候微信那边已经登陆，那是不是三个过程的交互是一摸一样，还是后两个会少一些步骤呢？老师讲的希望能更加清晰一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654254718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074569,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/89/e2ceca70.jpg","nickname":"方块睡衣","note":"","ucode":"1D355D7FEE5F8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298548,"discussion_content":"或者说是其实身份认证服务都是同一个域，所有可以拿到cookies的，不好意思理解错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597323421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1074569,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/89/e2ceca70.jpg","nickname":"方块睡衣","note":"","ucode":"1D355D7FEE5F8C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313135,"discussion_content":"你这个cookie 是放在哪个domain 下呢，我觉得a,b,c 是分别三个domain 的cookie.  是三个不同的ID Token. ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602950227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298548,"ip_address":""},"score":313135,"extra":""},{"author":{"id":1310930,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/d2/c03f80b4.jpg","nickname":"Charles Wei","note":"","ucode":"E03E9231D2BE8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350677,"discussion_content":"登陆状态cookie应该是属于OP认证服务器。比如第二次跳转认证服务器的时候通过cookie发现用户已经登陆就直接跳转回到a2.com了。不用输入密码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613976854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":313135,"ip_address":""},"score":350677,"extra":""}]},{"author":{"id":1074569,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/89/e2ceca70.jpg","nickname":"方块睡衣","note":"","ucode":"1D355D7FEE5F8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298547,"discussion_content":"老师，如果a1登录了服务器记录登录状态,服务器可以返回cookies,如果后续登录不跨域可以知道登录不需要做身份认证，但是a2,a3跨域没有使用cookies来确认是否已登录过，不知道我理解是否正确？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597322722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046893,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f9/6d/b623562a.jpg","nickname":"霹雳大仙pp","note":"","ucode":"F654FD9AEC1D56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292015,"discussion_content":"a1登录后有登录状态了，a2、a3就不需要登录了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595052655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1046893,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f9/6d/b623562a.jpg","nickname":"霹雳大仙pp","note":"","ucode":"F654FD9AEC1D56","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292036,"discussion_content":"单点登陆是这的，但是老师那个流程图 画的 是重复 1-6的流程，没有明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595059050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292015,"ip_address":""},"score":292036,"extra":""}]}]},{"had_liked":false,"id":302037,"user_name":"KeepGoing","can_delete":false,"product_type":"c1","uid":1184637,"ip_address":"","ucode":"B872F794265709","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/7d/1454db9c.jpg","comment_is_top":false,"comment_ctime":1626051677,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"18805920861","product_id":100053901,"comment_content":"感觉每节课都有一些细节没讲到，让很多人有同样的疑惑。","like_count":4,"discussions":[{"author":{"id":1815831,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Z4QvXFf42I9Me49H1oqNK9lXT76fU2rRGjPNTtGad8WC9biaiboQBpbHwbPveqU1SpGYGLOcnIm3ncsnuic9C3IMA/132","nickname":"君乐","note":"","ucode":"BC8EC4F8574F71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591628,"discussion_content":"是的 他的表达能力有问题 自己知道讲不清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666714013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282549,"user_name":"Jason180915","can_delete":false,"product_type":"c1","uid":2425528,"ip_address":"","ucode":"44FC6729FBDDCA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK40RCxCdCaKfDiaz9Ia8g4nNyUM8wJxAGfm9ZmG5wSMQeuhgqjibGzaibBkYcGxDV8vpxhvoFcF1vyw/132","comment_is_top":false,"comment_ctime":1615298237,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"18795167421","product_id":100053901,"comment_content":"a2. com是靠什么让认证服务器知道它和a1.com是一组单点登录应用，而且怎么在a1登录后让a2知道的？没弄明白。","like_count":4,"discussions":[{"author":{"id":1511787,"avatar":"https://static001.geekbang.org/account/avatar/00/17/11/6b/8034959a.jpg","nickname":"迎风劲草","note":"","ucode":"66EDA6C0B12A44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579604,"discussion_content":"a1.com 在OP完成登录以后，OP可以通过cookie方式记录用户登录状态(不是a1.com下)，a2.com被访问的时候，在进入OP登录页的准备阶段，会验证用户已经有cookies，就直接下发code了吧。后边逻辑还是要基于code,获取access_token,Id_token,refresh_token.我是这样理解，不知道对不对","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1657554311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3024820,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/27/b4/df65c0f7.jpg","nickname":"| ~浑蛋~","note":"","ucode":"B6904B44DFA805","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1511787,"avatar":"https://static001.geekbang.org/account/avatar/00/17/11/6b/8034959a.jpg","nickname":"迎风劲草","note":"","ucode":"66EDA6C0B12A44","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584877,"discussion_content":"CAS协议就是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661177325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":579604,"ip_address":"广东"},"score":584877,"extra":""}]},{"author":{"id":1003452,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4f/bc/501ce428.jpg","nickname":"年轮","note":"","ucode":"C70B8CD2FA0F54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573012,"discussion_content":"关键问题，老师不回答啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653131003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1610208,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2xoGmvlQ9qfSibVpPJyyaEiaibtVdbp1ibiboW174W4kHXLatN5E22s5cialsdc7xPTf4ZC03icFGVlfAV3MmicPt4ybkg/132","nickname":"lis","note":"","ucode":"B7FBED7F2555DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579163,"discussion_content":"最要命的就是这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657211367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242064,"user_name":"stubborn","can_delete":false,"product_type":"c1","uid":1206335,"ip_address":"","ucode":"49D7CE5F015345","user_header":"https://static001.geekbang.org/account/avatar/00/12/68/3f/40d1cd7f.jpg","comment_is_top":false,"comment_ctime":1597580943,"is_pvip":false,"replies":[{"id":"89372","content":"id_token是想客户端证明用户是谁，已通过身份认证。这个问题有一个假设就是”ID令牌和访问令牌应同时使用“，这是不对的。<br><br>关于access_token和id_token的区别：<br>第一，ID 令牌是对访问令牌的补充，而不是要替换访问令牌。之所以采用这样双令牌的方式，就是想让早先存在的访问令牌，可以在 OAuth 2.0 中继续保持对第三方软件的不透明性，而让后来新增的 ID 令牌要能够被解析，目的就是方便应用到身份认证协议中。<br><br>第二，ID 令牌和访问令牌有不同的生命周期，ID 令牌的生命周期相对来说更短些。因为 ID 令牌的作用就是代表一个单独的身份认证结果，它的使命就是用来标识用户的。而这个标识并不是用户名，用户登录的时候用的是用户名而不是这个 ID 令牌，所以如果用户注销或者退出了登录，ID 令牌的生命周期就随之结束了。<br><br>访问令牌可以在用户离开后的很长时间内，继续被第三方软件用来请求受保护资源服务。比如，小明使用了小兔打单软件的批量导出订单功能，如果耗时相对比较长，小明不必一直在场。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1597627487,"ip_address":"","comment_id":242064,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18777450127","product_id":100053901,"comment_content":"老师您好，两个问题请教下。<br>1. access_token失效了可以用refresh_token重新获取。id_token失效了怎么办，这块有没有规范？ keycloak的实现中使用refresh_token可以重新生成id_token。 <br>2. Oauth2其实也可以实现认证的功能，只要把access_token定义包含认证信息就可以了，这样使用access-token就类似id_token了。不太明白为何OIDC需要突出这部分的定义？","like_count":4,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503911,"discussion_content":"id_token是想客户端证明用户是谁，已通过身份认证。这个问题有一个假设就是”ID令牌和访问令牌应同时使用“，这是不对的。\n\n关于access_token和id_token的区别：\n第一，ID 令牌是对访问令牌的补充，而不是要替换访问令牌。之所以采用这样双令牌的方式，就是想让早先存在的访问令牌，可以在 OAuth 2.0 中继续保持对第三方软件的不透明性，而让后来新增的 ID 令牌要能够被解析，目的就是方便应用到身份认证协议中。\n\n第二，ID 令牌和访问令牌有不同的生命周期，ID 令牌的生命周期相对来说更短些。因为 ID 令牌的作用就是代表一个单独的身份认证结果，它的使命就是用来标识用户的。而这个标识并不是用户名，用户登录的时候用的是用户名而不是这个 ID 令牌，所以如果用户注销或者退出了登录，ID 令牌的生命周期就随之结束了。\n\n访问令牌可以在用户离开后的很长时间内，继续被第三方软件用来请求受保护资源服务。比如，小明使用了小兔打单软件的批量导出订单功能，如果耗时相对比较长，小明不必一直在场。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597627487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235692,"user_name":"哈德韦","can_delete":false,"product_type":"c1","uid":1637085,"ip_address":"","ucode":"E7C9B3D087D2D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","comment_is_top":false,"comment_ctime":1595152126,"is_pvip":false,"replies":[{"id":"88112","content":"是的","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596199684,"ip_address":"","comment_id":235692,"utype":1}],"discussion_count":4,"race_medal":0,"score":"18775021310","product_id":100053901,"comment_content":"传统的登录基于Session，是不是使用JWT Token方案，就不需要Session了（也不需要Cookie参与了）？","like_count":4,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501804,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596199684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147682,"avatar":"https://static001.geekbang.org/account/avatar/00/11/83/22/c3dae274.jpg","nickname":"阿kai(aeo","note":"","ucode":"6B1D650D9BFA4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592373,"discussion_content":"“只要另一处能拿到 jwt” - 这个jwt access token通常是不是存在session里？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667362143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117023,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0b/5f/2cc4060c.jpg","nickname":"子豪sirius","note":"","ucode":"E8D08D2D33E785","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337483,"discussion_content":"但是要做sso还是要session吧？不然一处登录后，服务端没有保存登录状态，就实现不了sso","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608944896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1117023,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0b/5f/2cc4060c.jpg","nickname":"子豪sirius","note":"","ucode":"E8D08D2D33E785","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":340734,"discussion_content":"只要另一处能拿到 jwt ，就可以登录。服务端不存储 session ，但是会校验客户端的 jwt 。即使使用 session，也要另一处有 cookie 才行。如果用 cookie 可以实现 sso，那么用 jwt 也可以，区别是不需要服务器端保存 session","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610112519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337483,"ip_address":""},"score":340734,"extra":""}]}]},{"had_liked":false,"id":235421,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1595027145,"is_pvip":false,"replies":[{"id":"86976","content":"无论普通的access_token还是JWT格式的access_token，归根结底还是【访问令牌】，访问令牌永远对第三方软件不透明，JWT格式的access_token包含用户信息，也是在当第三方软件请求到受保护资源的时候，受保护资源去解析识别。<br><br>id_token是我们说的OIDC这样的协议在OAuth 2.0的基础上增加的一个可以包含用户ID属性的事物。<br>","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595049628,"ip_address":"","comment_id":235421,"utype":1}],"discussion_count":5,"race_medal":0,"score":"14479929033","product_id":100053901,"comment_content":"代码中access_token中就包含用户信息，获取accesstoken 时候需要带上id_token中的用户唯一标识？","like_count":3,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501712,"discussion_content":"无论普通的access_token还是JWT格式的access_token，归根结底还是【访问令牌】，访问令牌永远对第三方软件不透明，JWT格式的access_token包含用户信息，也是在当第三方软件请求到受保护资源的时候，受保护资源去解析识别。\n\nid_token是我们说的OIDC这样的协议在OAuth 2.0的基础上增加的一个可以包含用户ID属性的事物。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595049628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2069957,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/95/c5/3307c1ca.jpg","nickname":"else","note":"","ucode":"201824A7615D6B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"discussion":{"id":573517,"discussion_content":"这个不透明应该换成透明才对吧 透明的意思才是不需要知道内容和意义 就像空气一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653471466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":501712,"ip_address":""},"score":573517,"extra":""}]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292037,"discussion_content":"access_token 是授权服务给第三方平台的，对第三方是不透明了， 解析不出来具体的信息， 所以才需要 id_token","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595059133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1046893,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f9/6d/b623562a.jpg","nickname":"霹雳大仙pp","note":"","ucode":"F654FD9AEC1D56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292016,"discussion_content":"我感觉不需要，access_token是和用户绑定的；id_token可以让第三方app知道当前授权的用户是谁，即解决“你就是你”这个认证问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595052844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","nickname":"饭粒","note":"","ucode":"4C3220B0D43997","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298484,"discussion_content":"所以这里是说，即使系统使用了 JWT 格式的 access_token 并且包含用户信息，但是 access_token  对第三方软件不透明，第三方软件不能解析其中的用户信息，而设计出 id_token 中带的用户信息是给到第三方软件的。不知道理解对不对？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597309481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235653,"user_name":"哈德韦","can_delete":false,"product_type":"c1","uid":1637085,"ip_address":"","ucode":"E7C9B3D087D2D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","comment_is_top":false,"comment_ctime":1595138774,"is_pvip":false,"replies":[{"id":"87038","content":"是的，在04中我们指的是access_token，那个时候还没有接触和提到ID_TOKEN。<br><br>id_token 的密钥的粒度，这个要结合我们自己对安全要求的级别来对待，粒度一般是有这样几种，到第三方软件应用级别粒度，到第三方软件应用的用户级别粒度。实际上id_token的安全要求是要比access_token的低。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595149907,"ip_address":"","comment_id":235653,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10185073366","product_id":100053901,"comment_content":"前面的课程里讲到，一般来说 JWT 有个缺陷，为了克服“覆水难收”，需要一个额外的用户粒度的密钥管理。那么，这个用户粒度的密钥管理是针对 access_token 的吗？id_token 的密钥，也需要到用户粒度吗？","like_count":2,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501796,"discussion_content":"是的，在04中我们指的是access_token，那个时候还没有接触和提到ID_TOKEN。\n\nid_token 的密钥的粒度，这个要结合我们自己对安全要求的级别来对待，粒度一般是有这样几种，到第三方软件应用级别粒度，到第三方软件应用的用户级别粒度。实际上id_token的安全要求是要比access_token的低。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595149907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265703,"user_name":"人生如戏","can_delete":false,"product_type":"c1","uid":1194366,"ip_address":"","ucode":"109B370DF350AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/39/7e/382e7f46.jpg","comment_is_top":false,"comment_ctime":1606987376,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5901954672","product_id":100053901,"comment_content":"老师：问个问题，前后端分离的SSO中，主域名相同可以使用cookie，但是跨域名的sso怎么实现呢？，还有就是SSO是否需要session？还是纯前端cookie保存","like_count":1},{"had_liked":false,"id":250531,"user_name":"胖大蟲","can_delete":false,"product_type":"c1","uid":1300072,"ip_address":"","ucode":"04FDFFD273A695","user_header":"https://static001.geekbang.org/account/avatar/00/13/d6/68/3855df56.jpg","comment_is_top":false,"comment_ctime":1601118574,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5896085870","product_id":100053901,"comment_content":"不太理解id_token的必要性，既然已经有了access_token，那我拿access_token向服务请求用户信息不就可以了？","like_count":1},{"had_liked":false,"id":241503,"user_name":"饭粒","can_delete":false,"product_type":"c1","uid":1153455,"ip_address":"","ucode":"4C3220B0D43997","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","comment_is_top":false,"comment_ctime":1597312651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5892279947","product_id":100053901,"comment_content":"老师，您好，有点疑问：<br>1.单点登录流程那里，用户从 a1 登录后，第三方软件访问 a2, a3 时需要携带什么信息供客户端进行登录状态的判断？id_token 吗？<br>2.如果不是第三方软件访问 a2, a3，而是浏览器访问，比如登录淘宝后，访问天猫，这样的单点登录的过程？<br>","like_count":1},{"had_liked":false,"id":236177,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1215139,"ip_address":"","ucode":"258880ACE79448","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/a3/aee7ded7.jpg","comment_is_top":false,"comment_ctime":1595338558,"is_pvip":false,"replies":[{"id":"87290","content":"需要的，a2.com要识别用户标识，需要解析id_token的值。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595378662,"ip_address":"","comment_id":236177,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5890305854","product_id":100053901,"comment_content":"王老师，单点登录的步骤中，a2.com需要去解析，id_token的 ID值么？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501971,"discussion_content":"需要的，a2.com要识别用户标识，需要解析id_token的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595378662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235947,"user_name":"冷锋","can_delete":false,"product_type":"c1","uid":1246986,"ip_address":"","ucode":"737D586A76DF96","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/0a/df537a6f.jpg","comment_is_top":false,"comment_ctime":1595254245,"is_pvip":false,"replies":[{"id":"87234","content":"CAS是实现SSO的一种方式，如果是保护的服务端资源，当然OAuth是最好的选择。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595337094,"ip_address":"","comment_id":235947,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5890221541","product_id":100053901,"comment_content":"CAS和SSO有什么区别？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501891,"discussion_content":"CAS是实现SSO的一种方式，如果是保护的服务端资源，当然OAuth是最好的选择。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595337094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1537865,"avatar":"https://static001.geekbang.org/account/avatar/00/17/77/49/445eea2d.jpg","nickname":"SochiLee","note":"","ucode":"47596594EDF4D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352512,"discussion_content":"CAS和OIDC有什么关系？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614759574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235944,"user_name":"许灵","can_delete":false,"product_type":"c1","uid":1059926,"ip_address":"","ucode":"0296EC9929B570","user_header":"https://static001.geekbang.org/account/avatar/00/10/2c/56/ff7a9730.jpg","comment_is_top":false,"comment_ctime":1595253867,"is_pvip":true,"replies":[{"id":"88366","content":"access_token与id_token不会合并，它们分别代表了两个用途的事物，id_token表示身份认证，是一个用户标识，用户退出登录id_token随机失效，但是access_token只要不过期还是会被第三方软件用来请求访问受保护资源的。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596464278,"ip_address":"","comment_id":235944,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5890221163","product_id":100053901,"comment_content":"好像现在的第三方登录都是通过access_token来获取用户信息的，这是不是表示access_token与id_token合并了？","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501889,"discussion_content":"access_token与id_token不会合并，它们分别代表了两个用途的事物，id_token表示身份认证，是一个用户标识，用户退出登录id_token随机失效，但是access_token只要不过期还是会被第三方软件用来请求访问受保护资源的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596464278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1080706,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7d/82/5ed8a955.jpg","nickname":"晒太阳","note":"","ucode":"99CFF3D5A4FE72","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302532,"discussion_content":"老师，把id_token的相关信息，放在JWT token的payload中，是不是就相当于id_token和access_token合并了？这样通过一个access_token就可以获得所有信息，是不是会更方便？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598946678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169313,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkeOAC8k7aPMfQZ4ickiavpfR9mTQs1wGhGtIicotzAoszE5qkLfFTabkDU2E39ovSgoibJ1IiaLXtGicg/132","nickname":"bigben","note":"","ucode":"DBD15A6C8E2590","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294535,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595920241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235483,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1595059305,"is_pvip":true,"replies":[{"id":"86991","content":"重复1-6是从整个流程上来说的，当然有了第一次登录，服务端有了登录状态，会做相应的判断，就不会让用户再次输入用户名和密码了。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595072678,"ip_address":"","comment_id":235483,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5890026601","product_id":100053901,"comment_content":"单点登陆的那个流程图没有看懂， 为什么 a1.com 输完用户名密码授权登陆后， 在访问 a2.com, a3.com 还有走 1-6的步骤呢？ 这就不符合一次输入授权 多处登陆了啊","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501741,"discussion_content":"重复1-6是从整个流程上来说的，当然有了第一次登录，服务端有了登录状态，会做相应的判断，就不会让用户再次输入用户名和密码了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595072678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","nickname":"饭粒","note":"","ucode":"4C3220B0D43997","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298488,"discussion_content":"服务端判断登录状态逻辑中，访问 a2.com, a3.com 时需要携带什么信息给服务端，服务端据此判断登录状态？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597309795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1188753,"avatar":"https://static001.geekbang.org/account/avatar/00/12/23/91/bd5bc39e.jpg","nickname":"高杰陈","note":"","ucode":"A3F43F00B8B82B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1153455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","nickname":"饭粒","note":"","ucode":"4C3220B0D43997","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303130,"discussion_content":"应该是要携带id_token过去（获取解析id_token后携带用户ID过去），老师这里的步骤写的不够详情，应该是第2步重定向时，有id_token则携带无则不携带才对","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599146768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298488,"ip_address":""},"score":303130,"extra":""},{"author":{"id":1275424,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/aiaO77mTsCalcia49ElevPn988pgwcL3rD5ic1DTD6E8rbAwfmguiaPsibHicsYGQID7VbmD21GUAV9bbuNMfDhDGGyg/132","nickname":"穿针土豆丝","note":"","ucode":"5DA3BDDE5162E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1153455,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/af/d29273e2.jpg","nickname":"饭粒","note":"","ucode":"4C3220B0D43997","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375350,"discussion_content":"这里应该分两部分理解：\n1. 访问 a2.com 时，会携带 id_token，如果没有，或者过期，就会走一遍OIDC认证流程。\n2. 当重定向至 OP 时，如果OP能拿到用户登录状态，直接返回 code，a2.com 完成认证流程。如果没有拿到用户登录状态，跳转OP的登录页面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621586839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":298488,"ip_address":""},"score":375350,"extra":""}]},{"author":{"id":1705468,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/05/fc/bceb3f2b.jpg","nickname":"开心哥","note":"","ucode":"D44C1F03B23C5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302115,"discussion_content":"那是重复步骤5和6吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598793881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235419,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1595026385,"is_pvip":false,"replies":[{"id":"86975","content":"userinfo 端点，授权端点、令牌端点都是OAuth 2.0协议里面的惯用叫法，这里的userinfo 端点表示的是平台一方支持获取详细用户信息的地方。<br><br>app_id是第三方软件的标识。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595049371,"ip_address":"","comment_id":235419,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5889993681","product_id":100053901,"comment_content":"userinfo 端点是啥意思，就是请求时候，access _token会带上用户唯一标识？app_id算不算唯一标识，和用户绑定关系","like_count":1,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501710,"discussion_content":"userinfo 端点，授权端点、令牌端点都是OAuth 2.0协议里面的惯用叫法，这里的userinfo 端点表示的是平台一方支持获取详细用户信息的地方。\n\napp_id是第三方软件的标识。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595049371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1637085,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fa/dd/f640711f.jpg","nickname":"哈德韦","note":"","ucode":"E7C9B3D087D2D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292045,"discussion_content":"端点，应该是 endpoint 的翻译，它是一个可通过网络访问的地址，通常由可访问服务的URL来描述。\n\n具体例子如：\n- 用户信息端点：https://xxx.com/oauth2/userinfo\n- 授权端点：https://xxx.com/oauth2/authorize\n- 令牌端点：https://xxx.com/oauth2/token","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595061627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356604,"user_name":"泥鳅儿","can_delete":false,"product_type":"c1","uid":1323000,"ip_address":"辽宁","ucode":"26B47C8FC67615","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ojfRyNRvy1x3Mia0nssz6CNPHrHXwPPmibvds1URgoHQuKXrGiaxrEbsT6sAvuK4N4AOicySh8S9iaWcOLjteOl6Kgg/132","comment_is_top":false,"comment_ctime":1662446968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662446968","product_id":100053901,"comment_content":"你好，老师，我想问一下，我有三个不同域名的系统（但是用户名和密码都是一样的），不是A系统的子系统，想通过统一认证中心能做到实现单点登录吗","like_count":0},{"had_liked":false,"id":345805,"user_name":"紫日","can_delete":false,"product_type":"c1","uid":1207410,"ip_address":"","ucode":"73A8DEE323AC19","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXSb2jAzlMM0JdTjWrNiaq2uR9eeloBYp906POddb9evmuj5f4CUoO6ge8TibibwtZicnl1sRHic9rW7g/132","comment_is_top":false,"comment_ctime":1652605602,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1652605602","product_id":100053901,"comment_content":"OAuth 2.0 不是一个身份认证协议，身份认证强调的是“谁的问题”，而 OAuth2.0 强调的是授权，是“可不可以”的问题。 OAuth2.0 是授权协议，OIDC是登录认证场景的开放解决方案。单点登录明白，多个三方系统用户与统一登录认证服务用户怎么同步？","like_count":0},{"had_liked":false,"id":342522,"user_name":"卡爸","can_delete":false,"product_type":"c1","uid":1015479,"ip_address":"","ucode":"C1FCE28615586C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/b7/7c48e00c.jpg","comment_is_top":false,"comment_ctime":1650326734,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650326734","product_id":100053901,"comment_content":"请问老师:服务器对于a1,a2,a3这三个网站如何整合如何管理才能让这三个网站实战sso。","like_count":0},{"had_liked":false,"id":316912,"user_name":"天择","can_delete":false,"product_type":"c1","uid":2166878,"ip_address":"","ucode":"ED2B08DB2F2B38","user_header":"https://static001.geekbang.org/account/avatar/00/21/10/5e/42f4faf7.jpg","comment_is_top":false,"comment_ctime":1634609643,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1634609643","product_id":100053901,"comment_content":"1. 一般OAuth只解决授权问题，比如小兔软件获取京东的订单，用户已经登录小兔软件，是小兔本身完成的认证，剩下的只是京东给小兔授权的问题。而OIDC要在此基础上解决认证的问题，就是我需要京东的账号登录小兔软件，然后再获取授权拿到订单数据。因此，小兔软件的用户头像那里其实是京东的用户信息，这是哪里来的？就是得需要access token发起一次请求，而参数一般就是id token里用户的ID。<br>2. 第三方软件解析ID token需要验证签名，这就需要key，这个key也得需要access token来获取。","like_count":1},{"had_liked":false,"id":279829,"user_name":"Charles Wei","can_delete":false,"product_type":"c1","uid":1310930,"ip_address":"","ucode":"E03E9231D2BE8D","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/d2/c03f80b4.jpg","comment_is_top":false,"comment_ctime":1613977423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613977423","product_id":100053901,"comment_content":"单点登录以后怎么主动退出下线啊？","like_count":0},{"had_liked":false,"id":274530,"user_name":"Geek_aa9a37","can_delete":false,"product_type":"c1","uid":2414301,"ip_address":"","ucode":"07FD0EF3DDCBB4","user_header":"","comment_is_top":false,"comment_ctime":1611047975,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611047975","product_id":100053901,"comment_content":"假如有a1.com域名通过了验证并且拿到了id_token ，这时去访问a2.com域名，发现无法携带id_token ，这种情况该怎么解决，希望老师能解答下，感谢。","like_count":0},{"had_liked":false,"id":263632,"user_name":"如果是你","can_delete":false,"product_type":"c1","uid":2333213,"ip_address":"","ucode":"C3DD7DC54EFF82","user_header":"https://static001.geekbang.org/account/avatar/00/23/9a/1d/be65c247.jpg","comment_is_top":false,"comment_ctime":1606202394,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1606202394","product_id":100053901,"comment_content":"id_token过期了整么办，是不是用户要重新登录？有什么办法让id_token的有效期自动延后，这样用户就不要隔一段时间久登录一下来。","like_count":0},{"had_liked":false,"id":260539,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1605058427,"is_pvip":false,"replies":[{"id":"94700","content":"仅仅一个servlet而已，不用非得用spring，maven更是管理多个依赖。如果咱们真用上这些，你会发现脚手架比代码累多了哈。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1605108607,"ip_address":"","comment_id":260539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1605058427","product_id":100053901,"comment_content":"提个建议.  用例代码就算不用spring , 也得用maven啊, 这种纯web还得陪容器,只是增加了复杂而已. ","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509225,"discussion_content":"仅仅一个servlet而已，不用非得用spring，maven更是管理多个依赖。如果咱们真用上这些，你会发现脚手架比代码累多了哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605108607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259100,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1604631140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604631140","product_id":100053901,"comment_content":"之前一直不太清楚oauth和单点登录有啥不一样. <br>现在突然恍然大悟的感觉 ~~ ","like_count":0},{"had_liked":false,"id":258735,"user_name":"王刚","can_delete":false,"product_type":"c1","uid":1103821,"ip_address":"","ucode":"4763CC9A937C38","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/cd/6ebfc468.jpg","comment_is_top":false,"comment_ctime":1604547290,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604547290","product_id":100053901,"comment_content":"看了所有得评论，大家都对ID_TOKEN,ACCESS_TOKEN 不太理解，老师一直强调ACCESS_TOKEN  对第三方软件是不透明得，那是不是可以理解为，即使ACCESS_TOKEN  是JWT 格式，第三方软件也无法解析，只有颁发ACCESS_TOKEN  授权服务可以解析？换句话说第三方无法拿到用户相关得ID，所以使用ID_TOKEN来进行传递？","like_count":0},{"had_liked":false,"id":256710,"user_name":"流云","can_delete":false,"product_type":"c1","uid":2232976,"ip_address":"","ucode":"5C31C34F8B9236","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIq15Qq887bH7Z5aQHfXu5vHUj4Iz68RotmUIR12vG5Y3L7icUcYgL4hicwAKYyicAmPTtoZPNPfDPOg/132","comment_is_top":false,"comment_ctime":1603713346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603713346","product_id":100053901,"comment_content":"普通的内部系统通过用户名密码登陆怎么实现呢？","like_count":0},{"had_liked":false,"id":254928,"user_name":"陈威somebody","can_delete":false,"product_type":"c1","uid":1086696,"ip_address":"","ucode":"7390D687AAC135","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/e8/8582a747.jpg","comment_is_top":false,"comment_ctime":1603221897,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603221897","product_id":100053901,"comment_content":"因为老师的图中，我没区分开浏览器和服务器端，所以有下面三点疑惑。<br>1. 按照老师说的，浏览器端如果不用session了，那么浏览器就需要利用访问令牌（比如JWT格式的）来去请求访问受保护资源，那这么说不就违反了之前说的访问令牌不能暴露给浏览器端了嘛？何况JWT格式的也是可以解析的。<br>2. 如果是浏览器端利用session，而访问令牌（比如非JWT格式）只存在于服务器端，那么暴露session和暴露访问令牌给浏览器不是一样的嘛？你通过sessionId 可以做的和拿到访问令牌可以做的是一样的，何苦不直接暴露访问令牌给浏览器呢？没有安全提升呀？<br>3. 如果浏览器和服务器端都用的是访问令牌，且没有用session，那么刷新令牌是不应该暴露给浏览器的，而只存在于服务器端的。如此说来，如果刷新的时候，岂不是要把新的访问令牌想办法返回给浏览器？这个流程看起来很蹩脚哎。<br>","like_count":0},{"had_liked":false,"id":249024,"user_name":"赵嘚住","can_delete":false,"product_type":"c1","uid":1688244,"ip_address":"","ucode":"CA579FA99D68A1","user_header":"","comment_is_top":false,"comment_ctime":1600404606,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600404606","product_id":100053901,"comment_content":"老师你好，想问一下，如果此时a1已经登录了，现在进入a2系统，重定向到授权页面，发现授权页面已经记录了登录状态了，那么是要直接回到a2系统吗，回到a2系统是不是还需要带回登录状态的token，如果要带回，那怎么带回呢","like_count":0},{"had_liked":false,"id":248801,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1600314391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600314391","product_id":100053901,"comment_content":"思考题，单点登陆时，OIDC认证服务可以返回不同第三方应用的权限列表，例如用户A，可以访问a(菜单123),b(菜单13),c(菜单23)的应用，用户B，可以访问a(菜单3)和b(菜单1)的应用。当然，可以通过access_token访问权限管理服务，获取对应a,b,c应用的权限。","like_count":0},{"had_liked":false,"id":248736,"user_name":"微思","can_delete":false,"product_type":"c1","uid":1004349,"ip_address":"","ucode":"853C48AA183A7B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/3d/1189e48a.jpg","comment_is_top":false,"comment_ctime":1600274519,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1600274519","product_id":100053901,"comment_content":"场景：某政府部门有自己的统一认证、统一登录平台，要求所有第三方公司开发的软件都对接，实现单点登录。<br>方案：假如统一登录平台（某家软件公司）基于OIDC实现，那么这里的id_token是要给到第三方（外部服务）的。文中说id_token永远不给外部服务，套在这个场景里面似乎不成立了？","like_count":0},{"had_liked":false,"id":246594,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1599432471,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599432471","product_id":100053901,"comment_content":"老师，在a.com, b.com,c.com 的例子中，是不是返回的id token 是一模一样的，因为是同一个人；而三者的access token 却不一样，因为是授权不同的第三方应用？ 还有就是关于授权，不是授权都需要用户确认的吗？比如标准OAuth 里需要用户确认授权a.com 访问resource server 的资源，那为什么SSO 里在授权b.com 和 c.com 的时候不需要用户手动确认呢？","like_count":0},{"had_liked":false,"id":246211,"user_name":"湮汐","can_delete":false,"product_type":"c1","uid":1106268,"ip_address":"","ucode":"FB6185621891E5","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/5c/86606d9c.jpg","comment_is_top":false,"comment_ctime":1599209304,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599209304","product_id":100053901,"comment_content":"老师，单点登录的时候，访问a2.com，前端是不是要把cookie或者token带到a2.com？否则怎么判断是不是同一个用户呢？","like_count":0},{"had_liked":false,"id":243871,"user_name":"Geek_6a58c7","can_delete":false,"product_type":"c1","uid":1815374,"ip_address":"","ucode":"37900229ED9B3C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4ibibOsboHycltqqicSIkm9eibSBu86BRNc0LQnTRTMEPGDvJXYpBicWOW4srMt7c9iaUT7b5mTmicgkjw/132","comment_is_top":false,"comment_ctime":1598317248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598317248","product_id":100053901,"comment_content":"老师你好，请问一下，为什么不直接用code请求id_token和userinfo，而是通过code转换成id_token和access_token呢","like_count":0},{"had_liked":false,"id":243607,"user_name":"Beyoung","can_delete":false,"product_type":"c1","uid":1250012,"ip_address":"","ucode":"63E8171C46E575","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/dc/b48a8b4b.jpg","comment_is_top":false,"comment_ctime":1598229056,"is_pvip":false,"replies":[{"id":"89869","content":"2、ID令牌id_token是在访问令牌access_token基础上的补充，而不是替换访问令牌。“这是因为这两种令牌有不同的目标受众和用途。这种双令牌的方式可以让访问令牌在常规的OAuth 2.0中那样继续保持对第三方软件不透明，而让ID令牌能够被解析。而且，这两种令牌还具有不同的生命周期，ID令牌通常会很快过期。ID令牌代表一个单独的身份认证结果，并且永远不会传递给外部服务，而访问令牌可以在用户离开后的很长时间内用于获取受保护资源。”比如举个例子小明使用了小兔打单软件的批量导出订单功能，如果耗时相对比较长，小明不必一直在场。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1598404355,"ip_address":"","comment_id":243607,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1598229056","product_id":100053901,"comment_content":"不能用jwttoken一次到位么，为什么还要两个","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504334,"discussion_content":"2、ID令牌id_token是在访问令牌access_token基础上的补充，而不是替换访问令牌。“这是因为这两种令牌有不同的目标受众和用途。这种双令牌的方式可以让访问令牌在常规的OAuth 2.0中那样继续保持对第三方软件不透明，而让ID令牌能够被解析。而且，这两种令牌还具有不同的生命周期，ID令牌通常会很快过期。ID令牌代表一个单独的身份认证结果，并且永远不会传递给外部服务，而访问令牌可以在用户离开后的很长时间内用于获取受保护资源。”比如举个例子小明使用了小兔打单软件的批量导出订单功能，如果耗时相对比较长，小明不必一直在场。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598404355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242549,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1597757320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597757320","product_id":100053901,"comment_content":"第四节讲JWT令牌的时候有这么一句话：“授权服务“扔出”一个令牌，受保护资源服务“接住”这个令牌，然后自己开始解析令牌本身所包含的信息就可以了，而不需要再去查询数据库或者请求 RPC 服务。”其中提到了解析令牌本身的概念，授权服务和受保护资源服务之间传递的令牌不就是访问令牌吗？但是本节课说访问令牌是不需要解析的，可能因为这个导致评论中好多人包括我感到困惑吧","like_count":0},{"had_liked":false,"id":242544,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1597755310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597755310","product_id":100053901,"comment_content":"“我们知道，访问令牌不需要被第三方软件解析，因为它对第三方软件来说是不透明的。但 ID 令牌需要能够被第三方软件解析出来，因为第三方软件需要获取 ID 令牌里面的内容，来处理用户的登录态逻辑。”文中这句话里面的“对第三方软件来说是不透明的”是不是应该是透明的，也就是看不见的。请老师指教。","like_count":0},{"had_liked":false,"id":239688,"user_name":"我行我素","can_delete":false,"product_type":"c1","uid":1224678,"ip_address":"","ucode":"4C69542FAB0671","user_header":"https://static001.geekbang.org/account/avatar/00/12/af/e6/9c77acff.jpg","comment_is_top":false,"comment_ctime":1596616629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596616629","product_id":100053901,"comment_content":"OIDC的单点登陆，如果重复1-6的步骤那么虽然不用重新点击登陆，但是页面会来回转换，这样是有感的，怎么样才能无感呢","like_count":0},{"had_liked":false,"id":239461,"user_name":"lign","can_delete":false,"product_type":"c1","uid":1184192,"ip_address":"","ucode":"5DDDA4680B437D","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/c0/1c0f00ca.jpg","comment_is_top":false,"comment_ctime":1596539716,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596539716","product_id":100053901,"comment_content":"老师，您好！ <br>文中使用code去拿令牌时，只返回了ID_TOKEN、ACCESS_TOKEN，没有REFRUSH_TOKEN。当第三方软件session过期后，用什么令牌去交换新ID_TOKEN、ACCESS_TOKEN？还是第三方软件重定向到认证服务后，要求用户必须重新登陆？实际上，此时，服务可能并没有退出，还处于登陆状态。重新登陆的话，可能会造成用户有多个登陆数据","like_count":0},{"had_liked":false,"id":239460,"user_name":"lign","can_delete":false,"product_type":"c1","uid":1184192,"ip_address":"","ucode":"5DDDA4680B437D","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/c0/1c0f00ca.jpg","comment_is_top":false,"comment_ctime":1596538999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596538999","product_id":100053901,"comment_content":"老师，您好！<br>文中提到a1.com a2.com等第三方软件都需要处理各自的登陆状态。如果第三方软件采用微服务架构，后面有多个实例，是不是第三方软件需要登陆状态共享？保证登陆用户的请求分配任意一个实例上时，都是登陆的状态？有没有什么好的解决方案？","like_count":0},{"had_liked":false,"id":238517,"user_name":"贺宇","can_delete":false,"product_type":"c1","uid":1445040,"ip_address":"","ucode":"55854825CC4AD2","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/b0/26c0e53f.jpg","comment_is_top":false,"comment_ctime":1596187081,"is_pvip":true,"replies":[{"id":"88110","content":"session是什么？会话，而JWT本身就包含了”会话信息“，相当于一个session，但这个session并不是传统意义上所指的session存储。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596199310,"ip_address":"","comment_id":238517,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596187081","product_id":100053901,"comment_content":"这么说想要做单点登录还是要基于session，就很烦","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502772,"discussion_content":"session是什么？会话，而JWT本身就包含了”会话信息“，相当于一个session，但这个session并不是传统意义上所指的session存储。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596199310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237121,"user_name":"ray","can_delete":false,"product_type":"c1","uid":1717235,"ip_address":"","ucode":"10962C711CBC11","user_header":"","comment_is_top":false,"comment_ctime":1595683105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595683105","product_id":100053901,"comment_content":"老师您好，<br>请问使用openid connect登入之后，我们是不是都会将代表user的唯一值，也就是user id存到我们的数据库。<br>这样之后同样的user登入时，我们就可以从认证服务器返回的user id比对出到底是哪个user登入，并返回相对应的用户信息？<br><br>谢谢老师的解答^^","like_count":0},{"had_liked":false,"id":235860,"user_name":"xuyd","can_delete":false,"product_type":"c1","uid":1050847,"ip_address":"","ucode":"62E1E7D5201E89","user_header":"https://static001.geekbang.org/account/avatar/00/10/08/df/866ed645.jpg","comment_is_top":false,"comment_ctime":1595226415,"is_pvip":false,"replies":[{"id":"87120","content":"像Kerberos、SAML这些的特点就是复杂，至少相对于OAuth 2.0 要复杂的多，现在基于OAuth 2.0的OIDC是趋势。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595243403,"ip_address":"","comment_id":235860,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595226415","product_id":100053901,"comment_content":"能不能比较下基于SAML和基于OIDC的SSO？一些大的授权服务平台可能二者都提供，不太清楚具体实践中如何选择","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501853,"discussion_content":"像Kerberos、SAML这些的特点就是复杂，至少相对于OAuth 2.0 要复杂的多，现在基于OAuth 2.0的OIDC是趋势。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595243403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235726,"user_name":"Free","can_delete":false,"product_type":"c1","uid":2016097,"ip_address":"","ucode":"70AB76F1E1BD66","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c3/61/6de4f2ce.jpg","comment_is_top":false,"comment_ctime":1595164299,"is_pvip":false,"replies":[{"id":"87121","content":"是的，签发id_token和签发access_token是在一起返回给第三方软件的，在相同的服务器比较方便，如果再涉及到秘钥的管理就需要额外的服务来支持了。","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1595243824,"ip_address":"","comment_id":235726,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595164299","product_id":100053901,"comment_content":"想问一下老师，签发id_token和签发access_token一般是同一台服务器签发的吗？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501811,"discussion_content":"是的，签发id_token和签发access_token是在一起返回给第三方软件的，在相同的服务器比较方便，如果再涉及到秘钥的管理就需要额外的服务来支持了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595243824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235583,"user_name":"leros","can_delete":false,"product_type":"c1","uid":1021455,"ip_address":"","ucode":"02F018C58337E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/0f/d9d878f8.jpg","comment_is_top":false,"comment_ctime":1595108405,"is_pvip":false,"replies":[{"id":"88115","content":"公司内部系统可以","user_name":"作者回复","user_name_real":"王新栋","uid":"1352303","ctime":1596200297,"ip_address":"","comment_id":235583,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595108405","product_id":100053901,"comment_content":"这篇文章描述了基于授权码许可类型来构建 OIDC ，有没有可能通过其他类型（比如隐式许可）来构建OIDC呢？","like_count":0,"discussions":[{"author":{"id":1352303,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a2/6f/d239ed80.jpg","nickname":"王新栋","note":"","ucode":"0A5D089B8E1E9D","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501774,"discussion_content":"公司内部系统可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596200297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}