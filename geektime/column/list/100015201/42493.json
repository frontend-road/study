{"id":42493,"title":"27 | 聪明的微创新：Operator工作原理解读","content":"<p>你好，我是张磊。今天我和你分享的主题是：聪明的微创新之Operator工作原理解读。</p>\n<p>在前面的几篇文章中，我已经和你分享了Kubernetes项目中的大部分编排对象（比如Deployment、StatefulSet、DaemonSet，以及Job），也介绍了“有状态应用”的管理方法，还阐述了为Kubernetes添加自定义API对象和编写自定义控制器的原理和流程。</p>\n<p>可能你已经感觉到，在Kubernetes中，管理“有状态应用”是一个比较复杂的过程，尤其是编写Pod模板的时候，总有一种“在YAML文件里编程序”的感觉，让人很不舒服。</p>\n<p>而在Kubernetes生态中，还有一个相对更加灵活和编程友好的管理“有状态应用”的解决方案，它就是：Operator。</p>\n<p>接下来，我就以Etcd Operator为例，来为你讲解一下Operator的工作原理和编写方法。</p>\n<p><span class=\"orange\">Etcd Operator的使用方法非常简单，只需要两步即可完成：</span></p>\n<p><strong>第一步，将这个Operator的代码Clone到本地：</strong></p>\n<pre><code>$ git clone https://github.com/coreos/etcd-operator\n</code></pre>\n<p><strong>第二步，将这个Etcd Operator部署在Kubernetes集群里。</strong></p>\n<p>不过，在部署Etcd Operator的Pod之前，你需要先执行这样一个脚本：</p><!-- [[[read_end]]] -->\n<pre><code>$ example/rbac/create_role.sh\n</code></pre>\n<p>不用我多说你也能够明白：这个脚本的作用，就是为Etcd Operator创建RBAC规则。这是因为，Etcd Operator需要访问Kubernetes的APIServer来创建对象。</p>\n<p>更具体地说，上述脚本为Etcd Operator定义了如下所示的权限：</p>\n<ol>\n<li>\n<p>对Pod、Service、PVC、Deployment、Secret等API对象，有所有权限；</p>\n</li>\n<li>\n<p>对CRD对象，有所有权限；</p>\n</li>\n<li>\n<p>对属于etcd.database.coreos.com这个API Group的CR（Custom Resource）对象，有所有权限。</p>\n</li>\n</ol>\n<p>而Etcd Operator本身，其实就是一个Deployment，它的YAML文件如下所示：</p>\n<pre><code>apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: etcd-operator\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        name: etcd-operator\n    spec:\n      containers:\n      - name: etcd-operator\n        image: quay.io/coreos/etcd-operator:v0.9.2\n        command:\n        - etcd-operator\n        env:\n        - name: MY_POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: MY_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n...\n</code></pre>\n<p>所以，我们就可以使用上述的YAML文件来创建Etcd Operator，如下所示：</p>\n<pre><code>$ kubectl create -f example/deployment.yaml\n</code></pre>\n<p>而一旦Etcd Operator的Pod进入了Running状态，你就会发现，有一个CRD被自动创建了出来，如下所示：</p>\n<pre><code>$ kubectl get pods\nNAME                              READY     STATUS      RESTARTS   AGE\netcd-operator-649dbdb5cb-bzfzp    1/1       Running     0          20s\n\n$ kubectl get crd\nNAME                                    CREATED AT\netcdclusters.etcd.database.coreos.com   2018-09-18T11:42:55Z\n</code></pre>\n<p>这个CRD名叫<code>etcdclusters.etcd.database.coreos.com</code> 。你可以通过kubectl describe命令看到它的细节，如下所示：</p>\n<pre><code>$ kubectl describe crd  etcdclusters.etcd.database.coreos.com\n...\nGroup:   etcd.database.coreos.com\n  Names:\n    Kind:       EtcdCluster\n    List Kind:  EtcdClusterList\n    Plural:     etcdclusters\n    Short Names:\n      etcd\n    Singular:  etcdcluster\n  Scope:       Namespaced\n  Version:     v1beta2\n  \n...\n</code></pre>\n<p>可以看到，这个CRD相当于告诉了Kubernetes：接下来，如果有API组（Group）是<code>etcd.database.coreos.com</code>、API资源类型（Kind）是“EtcdCluster”的YAML文件被提交上来，你可一定要认识啊。</p>\n<p>所以说，通过上述两步操作，你实际上是在Kubernetes里添加了一个名叫EtcdCluster的自定义资源类型。而Etcd Operator本身，就是这个自定义资源类型对应的自定义控制器。</p>\n<p>而当Etcd Operator部署好之后，接下来在这个Kubernetes里创建一个Etcd集群的工作就非常简单了。你只需要编写一个EtcdCluster的YAML文件，然后把它提交给Kubernetes即可，如下所示：</p>\n<pre><code>$ kubectl apply -f example/example-etcd-cluster.yaml\n</code></pre>\n<p>这个example-etcd-cluster.yaml文件里描述的，是一个3个节点的Etcd集群。我们可以看到它被提交给Kubernetes之后，就会有三个Etcd的Pod运行起来，如下所示：</p>\n<pre><code>$ kubectl get pods\nNAME                            READY     STATUS    RESTARTS   AGE\nexample-etcd-cluster-dp8nqtjznc   1/1       Running     0          1m\nexample-etcd-cluster-mbzlg6sd56   1/1       Running     0          2m\nexample-etcd-cluster-v6v6s6stxd   1/1       Running     0          2m\n</code></pre>\n<p>那么，<span class=\"orange\">究竟发生了什么，让创建一个Etcd集群的工作如此简单呢？</span></p>\n<p>我们当然还是得从这个example-etcd-cluster.yaml文件开始说起。</p>\n<p>不难想到，这个文件里定义的，正是EtcdCluster这个CRD的一个具体实例，也就是一个Custom Resource（CR）。而它的内容非常简单，如下所示：</p>\n<pre><code>apiVersion: &quot;etcd.database.coreos.com/v1beta2&quot;\nkind: &quot;EtcdCluster&quot;\nmetadata:\n  name: &quot;example-etcd-cluster&quot;\nspec:\n  size: 3\n  version: &quot;3.2.13&quot;\n</code></pre>\n<p>可以看到，EtcdCluster的spec字段非常简单。其中，size=3指定了它所描述的Etcd集群的节点个数。而version=“3.2.13”，则指定了Etcd的版本，仅此而已。</p>\n<p>而真正把这样一个Etcd集群创建出来的逻辑，就是Etcd Operator要实现的主要工作了。</p>\n<p>看到这里，相信你应该已经对Operator有了一个初步的认知：</p>\n<p><strong>Operator的工作原理，实际上是利用了Kubernetes的自定义API资源（CRD），来描述我们想要部署的“有状态应用”；然后在自定义控制器里，根据自定义API对象的变化，来完成具体的部署和运维工作。</strong></p>\n<p>所以，编写一个Etcd Operator，与我们前面编写一个自定义控制器的过程，没什么不同。</p>\n<p>不过，考虑到你可能还不太清楚<span class=\"orange\">Etcd集群的组建方式</span>，我在这里先简单介绍一下这部分知识。</p>\n<p><strong>Etcd Operator部署Etcd集群，采用的是静态集群（Static）的方式</strong>。</p>\n<p>静态集群的好处是，它不必依赖于一个额外的服务发现机制来组建集群，非常适合本地容器化部署。而它的难点，则在于你必须在部署的时候，就规划好这个集群的拓扑结构，并且能够知道这些节点固定的IP地址。比如下面这个例子：</p>\n<pre><code>$ etcd --name infra0 --initial-advertise-peer-urls http://10.0.1.10:2380 \\\n  --listen-peer-urls http://10.0.1.10:2380 \\\n...\n  --initial-cluster-token etcd-cluster-1 \\\n  --initial-cluster infra0=http://10.0.1.10:2380,infra1=http://10.0.1.11:2380,infra2=http://10.0.1.12:2380 \\\n  --initial-cluster-state new\n  \n$ etcd --name infra1 --initial-advertise-peer-urls http://10.0.1.11:2380 \\\n  --listen-peer-urls http://10.0.1.11:2380 \\\n...\n  --initial-cluster-token etcd-cluster-1 \\\n  --initial-cluster infra0=http://10.0.1.10:2380,infra1=http://10.0.1.11:2380,infra2=http://10.0.1.12:2380 \\\n  --initial-cluster-state new\n  \n$ etcd --name infra2 --initial-advertise-peer-urls http://10.0.1.12:2380 \\\n  --listen-peer-urls http://10.0.1.12:2380 \\\n...\n  --initial-cluster-token etcd-cluster-1 \\\n  --initial-cluster infra0=http://10.0.1.10:2380,infra1=http://10.0.1.11:2380,infra2=http://10.0.1.12:2380 \\\n  --initial-cluster-state new\n</code></pre>\n<p>在这个例子中，我启动了三个Etcd进程，组成了一个三节点的Etcd集群。</p>\n<p>其中，这些节点启动参数里的–initial-cluster参数，非常值得你关注。它的含义，正是<strong>当前节点启动时集群的拓扑结构。<strong>说得更详细一点，就是</strong>当前这个节点启动时，需要跟哪些节点通信来组成集群</strong>。</p>\n<p>举个例子，我们可以看一下上述infra2节点的–initial-cluster的值，如下所示：</p>\n<pre><code>...\n--initial-cluster infra0=http://10.0.1.10:2380,infra1=http://10.0.1.11:2380,infra2=http://10.0.1.12:2380 \\\n</code></pre>\n<p>可以看到，–initial-cluster参数是由“&lt;节点名字&gt;=&lt;节点地址&gt;”格式组成的一个数组。而上面这个配置的意思就是，当infra2节点启动之后，这个Etcd集群里就会有infra0、infra1和infra2三个节点。</p>\n<p>同时，这些Etcd节点，需要通过2380端口进行通信以便组成集群，这也正是上述配置中–listen-peer-urls字段的含义。</p>\n<p>此外，一个Etcd集群还需要用–initial-cluster-token字段，来声明一个该集群独一无二的Token名字。</p>\n<p>像上述这样为每一个Ectd节点配置好它对应的启动参数之后把它们启动起来，一个Etcd集群就可以自动组建起来了。</p>\n<p>而我们要编写的Etcd Operator，就是要把上述过程自动化。这其实等同于：用代码来生成每个Etcd节点Pod的启动命令，然后把它们启动起来。</p>\n<p>接下来，我们一起来实践一下这个流程。</p>\n<p>当然，在编写自定义控制器之前，我们首先需要完成EtcdCluster这个CRD的定义，它对应的types.go文件的主要内容，如下所示：</p>\n<pre><code>// +genclient\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n\ntype EtcdCluster struct {\n  metav1.TypeMeta   `json:&quot;,inline&quot;`\n  metav1.ObjectMeta `json:&quot;metadata,omitempty&quot;`\n  Spec              ClusterSpec   `json:&quot;spec&quot;`\n  Status            ClusterStatus `json:&quot;status&quot;`\n}\n\ntype ClusterSpec struct {\n // Size is the expected size of the etcd cluster.\n // The etcd-operator will eventually make the size of the running\n // cluster equal to the expected size.\n // The vaild range of the size is from 1 to 7.\n Size int `json:&quot;size&quot;`\n ... \n}\n</code></pre>\n<p>可以看到，EtcdCluster是一个有Status字段的CRD。在这里，我们可以不必关心ClusterSpec里的其他字段，只关注Size（即：Etcd集群的大小）字段即可。</p>\n<p>Size字段的存在，就意味着将来如果我们想要调整集群大小的话，应该直接修改YAML文件里size的值，并执行kubectl apply -f。</p>\n<p>这样，Operator就会帮我们完成Etcd节点的增删操作。这种“scale”能力，也是Etcd Operator自动化运维Etcd集群需要实现的主要功能。</p>\n<p>而为了能够支持这个功能，我们就不再像前面那样在–initial-cluster参数里把拓扑结构固定死。</p>\n<p>所以，Etcd Operator的实现，虽然选择的也是静态集群，但这个集群具体的组建过程，是逐个节点动态添加的方式，即：</p>\n<p><strong>首先，Etcd Operator会创建一个“种子节点”；</strong><br />\n<strong>然后，Etcd Operator会不断创建新的Etcd节点，然后将它们逐一加入到这个集群当中，直到集群的节点数等于size。</strong></p>\n<p>这就意味着，在生成不同角色的Etcd Pod时，Operator需要能够区分种子节点与普通节点。</p>\n<p>而这两种节点的不同之处，就在于一个名叫–initial-cluster-state的启动参数：</p>\n<ul>\n<li>当这个参数值设为new时，就代表了该节点是种子节点。而我们前面提到过，种子节点还必须通过–initial-cluster-token声明一个独一无二的Token。</li>\n<li>而如果这个参数值设为existing，那就是说明这个节点是一个普通节点，Etcd Operator需要把它加入到已有集群里。</li>\n</ul>\n<p>那么接下来的问题就是，每个Etcd节点的–initial-cluster字段的值又是怎么生成的呢？</p>\n<p>由于这个方案要求种子节点先启动，所以对于种子节点infra0来说，它启动后的集群只有它自己，即：–initial-cluster=infra0=http://10.0.1.10:2380。</p>\n<p>而对于接下来要加入的节点，比如infra1来说，它启动后的集群就有两个节点了，所以它的–initial-cluster参数的值应该是：infra0=http://10.0.1.10:2380,infra1=http://10.0.1.11:2380。</p>\n<p>其他节点，都以此类推。</p>\n<p>现在，你就应该能在脑海中构思出上述三节点Etcd集群的部署过程了。</p>\n<p>首先，只要用户提交YAML文件时声明创建一个EtcdCluster对象（一个Etcd集群），那么Etcd Operator都应该先创建一个单节点的种子集群（Seed Member），并启动这个种子节点。</p>\n<p>以infra0节点为例，它的IP地址是10.0.1.10，那么Etcd Operator生成的种子节点的启动命令，如下所示：</p>\n<pre><code>$ etcd\n  --data-dir=/var/etcd/data\n  --name=infra0\n  --initial-advertise-peer-urls=http://10.0.1.10:2380\n  --listen-peer-urls=http://0.0.0.0:2380\n  --listen-client-urls=http://0.0.0.0:2379\n  --advertise-client-urls=http://10.0.1.10:2379\n  --initial-cluster=infra0=http://10.0.1.10:2380\n  --initial-cluster-state=new\n  --initial-cluster-token=4b5215fa-5401-4a95-a8c6-892317c9bef8\n</code></pre>\n<p>可以看到，这个种子节点的initial-cluster-state是new，并且指定了唯一的initial-cluster-token参数。</p>\n<p>我们可以把这个创建种子节点（集群）的阶段称为：<strong>Bootstrap</strong>。</p>\n<p>接下来，<strong>对于其他每一个节点，Operator只需要执行如下两个操作即可</strong>，以infra1为例。</p>\n<p>第一步：通过Etcd命令行添加一个新成员：</p>\n<pre><code>$ etcdctl member add infra1 http://10.0.1.11:2380\n</code></pre>\n<p>第二步：为这个成员节点生成对应的启动参数，并启动它：</p>\n<pre><code>$ etcd\n    --data-dir=/var/etcd/data\n    --name=infra1\n    --initial-advertise-peer-urls=http://10.0.1.11:2380\n    --listen-peer-urls=http://0.0.0.0:2380\n    --listen-client-urls=http://0.0.0.0:2379\n    --advertise-client-urls=http://10.0.1.11:2379\n    --initial-cluster=infra0=http://10.0.1.10:2380,infra1=http://10.0.1.11:2380\n    --initial-cluster-state=existing\n</code></pre>\n<p>可以看到，对于这个infra1成员节点来说，它的initial-cluster-state是existing，也就是要加入已有集群。而它的initial-cluster的值，则变成了infra0和infra1两个节点的IP地址。</p>\n<p>所以，以此类推，不断地将infra2等后续成员添加到集群中，直到整个集群的节点数目等于用户指定的size之后，部署就完成了。</p>\n<p>在熟悉了这个部署思路之后，我再为你讲解<span class=\"orange\">Etcd Operator的工作原理</span>，就非常简单了。</p>\n<p>跟所有的自定义控制器一样，Etcd Operator的启动流程也是围绕着Informer展开的，如下所示：</p>\n<pre><code>func (c *Controller) Start() error {\n for {\n  err := c.initResource()\n  ...\n  time.Sleep(initRetryWaitTime)\n }\n c.run()\n}\n\nfunc (c *Controller) run() {\n ...\n \n _, informer := cache.NewIndexerInformer(source, &amp;api.EtcdCluster{}, 0, cache.ResourceEventHandlerFuncs{\n  AddFunc:    c.onAddEtcdClus,\n  UpdateFunc: c.onUpdateEtcdClus,\n  DeleteFunc: c.onDeleteEtcdClus,\n }, cache.Indexers{})\n \n ctx := context.TODO()\n // TODO: use workqueue to avoid blocking\n informer.Run(ctx.Done())\n}\n</code></pre>\n<p>可以看到，<strong>Etcd Operator启动要做的第一件事</strong>（ c.initResource），是创建EtcdCluster对象所需要的CRD，即：前面提到的<code>etcdclusters.etcd.database.coreos.com</code>。这样Kubernetes就能够“认识”EtcdCluster这个自定义API资源了。</p>\n<p>而<strong>接下来，Etcd Operator会定义一个EtcdCluster对象的Informer</strong>。</p>\n<p>不过，需要注意的是，由于Etcd Operator的完成时间相对较早，所以它里面有些代码的编写方式会跟我们之前讲解的最新的编写方式不太一样。在具体实践的时候，你还是应该以我讲解的模板为主。</p>\n<p>比如，在上面的代码最后，你会看到有这样一句注释：</p>\n<pre><code>// TODO: use workqueue to avoid blocking\n...\n</code></pre>\n<p>也就是说，Etcd Operator并没有用工作队列来协调Informer和控制循环。这其实正是我在第25篇文章<a href=\"https://time.geekbang.org/column/article/42076\">《深入解析声明式API（二）：编写自定义控制器》</a>中，给你留的关于工作队列的思考题的答案。</p>\n<p>具体来讲，我们在控制循环里执行的业务逻辑，往往是比较耗时间的。比如，创建一个真实的Etcd集群。而Informer的WATCH机制对API对象变化的响应，则非常迅速。所以，控制器里的业务逻辑就很可能会拖慢Informer的执行周期，甚至可能Block它。而要协调这样两个快、慢任务的一个典型解决方法，就是引入一个工作队列。</p>\n<blockquote>\n<p>备注：如果你感兴趣的话，可以给Etcd Operator提一个patch来修复这个问题。提PR修TODO，是给一个开源项目做有意义的贡献的一个重要方式。</p>\n</blockquote>\n<p>由于Etcd Operator里没有工作队列，那么在它的EventHandler部分，就不会有什么入队操作，而直接就是每种事件对应的具体的业务逻辑了。</p>\n<p>不过，Etcd Operator在业务逻辑的实现方式上，与常规的自定义控制器略有不同。我把在这一部分的工作原理，提炼成了一个详细的流程图，如下所示：</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/e7/36/e7f2905ae46e0ccd24db47c915382536.jpg?wh=1920*1080\" alt=\"\" /></p>\n<p>可以看到，Etcd Operator的特殊之处在于，它为每一个EtcdCluster对象，都启动了一个控制循环，“并发”地响应这些对象的变化。显然，这种做法不仅可以简化Etcd Operator的代码实现，还有助于提高它的响应速度。</p>\n<p>以文章一开始的example-etcd-cluster的YAML文件为例。</p>\n<p>当这个YAML文件第一次被提交到Kubernetes之后，Etcd Operator的Informer，就会立刻“感知”到一个新的EtcdCluster对象被创建了出来。所以，EventHandler里的“添加”事件会被触发。</p>\n<p>而这个Handler要做的操作也很简单，即：在Etcd Operator内部创建一个对应的Cluster对象（cluster.New），比如流程图里的Cluster1。</p>\n<p>这个Cluster对象，就是一个Etcd集群在Operator内部的描述，所以它与真实的Etcd集群的生命周期是一致的。</p>\n<p>而一个Cluster对象需要具体负责的，其实有两个工作。</p>\n<p><strong>其中，第一个工作只在该Cluster对象第一次被创建的时候才会执行。这个工作，就是我们前面提到过的Bootstrap，即：创建一个单节点的种子集群。</strong></p>\n<p>由于种子集群只有一个节点，所以这一步直接就会生成一个Etcd的Pod对象。这个Pod里有一个InitContainer，负责检查Pod的DNS记录是否正常。如果检查通过，用户容器也就是Etcd容器就会启动起来。</p>\n<p>而这个Etcd容器最重要的部分，当然就是它的启动命令了。</p>\n<p>以我们在文章一开始部署的集群为例，它的种子节点的容器启动命令如下所示：</p>\n<pre><code>/usr/local/bin/etcd\n  --data-dir=/var/etcd/data\n  --name=example-etcd-cluster-mbzlg6sd56\n  --initial-advertise-peer-urls=http://example-etcd-cluster-mbzlg6sd56.example-etcd-cluster.default.svc:2380\n  --listen-peer-urls=http://0.0.0.0:2380\n  --listen-client-urls=http://0.0.0.0:2379\n  --advertise-client-urls=http://example-etcd-cluster-mbzlg6sd56.example-etcd-cluster.default.svc:2379\n  --initial-cluster=example-etcd-cluster-mbzlg6sd56=http://example-etcd-cluster-mbzlg6sd56.example-etcd-cluster.default.svc:2380\n  --initial-cluster-state=new\n  --initial-cluster-token=4b5215fa-5401-4a95-a8c6-892317c9bef8\n</code></pre>\n<p>上述启动命令里的各个参数的含义，我已经在前面介绍过。</p>\n<p>可以看到，在这些启动参数（比如：initial-cluster）里，Etcd Operator只会使用Pod的DNS记录，而不是它的IP地址。</p>\n<p>这当然是因为，在Operator生成上述启动命令的时候，Etcd的Pod还没有被创建出来，它的IP地址自然也无从谈起。</p>\n<p>这也就意味着，每个Cluster对象，都会事先创建一个与该EtcdCluster同名的Headless Service。这样，Etcd Operator在接下来的所有创建Pod的步骤里，就都可以使用Pod的DNS记录来代替它的IP地址了。</p>\n<blockquote>\n<p>备注：Headless Service的DNS记录格式是：<pod-name>.<svc-name>.<namespace>.svc.cluster.local。如果你记不太清楚了，可以借此再回顾一下第18篇文章<a href=\"https://time.geekbang.org/column/article/41017\">《深入理解StatefulSet（一）：拓扑状态》</a>中的相关内容。</p>\n</blockquote>\n<p><strong>Cluster对象的第二个工作，则是启动该集群所对应的控制循环。</strong></p>\n<p>这个控制循环每隔一定时间，就会执行一次下面的Diff流程。</p>\n<p>首先，控制循环要获取到所有正在运行的、属于这个Cluster的Pod数量，也就是该Etcd集群的“实际状态”。</p>\n<p>而这个Etcd集群的“期望状态”，正是用户在EtcdCluster对象里定义的size。</p>\n<p>所以接下来，控制循环会对比这两个状态的差异。</p>\n<p>如果实际的Pod数量不够，那么控制循环就会执行一个添加成员节点的操作（即：上述流程图中的addOneMember方法）；反之，就执行删除成员节点的操作（即：上述流程图中的removeOneMember方法）。</p>\n<p>以addOneMember方法为例，它执行的流程如下所示：</p>\n<ol>\n<li>\n<p>生成一个新节点的Pod的名字，比如：example-etcd-cluster-v6v6s6stxd；</p>\n</li>\n<li>\n<p>调用Etcd Client，执行前面提到过的etcdctl member add example-etcd-cluster-v6v6s6stxd命令；</p>\n</li>\n<li>\n<p>使用这个Pod名字，和已经存在的所有节点列表，组合成一个新的initial-cluster字段的值；</p>\n</li>\n<li>\n<p>使用这个initial-cluster的值，生成这个Pod里Etcd容器的启动命令。如下所示：</p>\n</li>\n</ol>\n<pre><code>/usr/local/bin/etcd\n  --data-dir=/var/etcd/data\n  --name=example-etcd-cluster-v6v6s6stxd\n  --initial-advertise-peer-urls=http://example-etcd-cluster-v6v6s6stxd.example-etcd-cluster.default.svc:2380\n  --listen-peer-urls=http://0.0.0.0:2380\n  --listen-client-urls=http://0.0.0.0:2379\n  --advertise-client-urls=http://example-etcd-cluster-v6v6s6stxd.example-etcd-cluster.default.svc:2379\n  --initial-cluster=example-etcd-cluster-mbzlg6sd56=http://example-etcd-cluster-mbzlg6sd56.example-etcd-cluster.default.svc:2380,example-etcd-cluster-v6v6s6stxd=http://example-etcd-cluster-v6v6s6stxd.example-etcd-cluster.default.svc:2380\n  --initial-cluster-state=existing\n</code></pre>\n<p>这样，当这个容器启动之后，一个新的Etcd成员节点就被加入到了集群当中。控制循环会重复这个过程，直到正在运行的Pod数量与EtcdCluster指定的size一致。</p>\n<p>在有了这样一个与EtcdCluster对象一一对应的控制循环之后，你后续对这个EtcdCluster的任何修改，比如：修改size或者Etcd的version，它们对应的更新事件都会由这个Cluster对象的控制循环进行处理。</p>\n<p>以上，就是一个Etcd Operator的工作原理了。</p>\n<p>如果对比一下Etcd Operator与我在第20篇文章<a href=\"https://time.geekbang.org/column/article/41217\">《深入理解StatefulSet（三）：有状态应用实践》</a>中讲解过的MySQL StatefulSet的话，你可能会有两个问题。</p>\n<p><strong>第一个问题是</strong>，在StatefulSet里，它为Pod创建的名字是带编号的，这样就把整个集群的拓扑状态固定了下来（比如：一个三节点的集群一定是由名叫web-0、web-1和web-2的三个Pod组成）。可是，<strong>在Etcd Operator里，为什么我们使用随机名字就可以了呢？</strong></p>\n<p>这是因为，Etcd Operator在每次添加Etcd节点的时候，都会先执行etcdctl member add &lt;Pod名字&gt;；每次删除节点的时候，则会执行etcdctl member remove &lt;Pod名字&gt;。这些操作，其实就会更新Etcd内部维护的拓扑信息，所以Etcd Operator无需在集群外部通过编号来固定这个拓扑关系。</p>\n<p><strong>第二个问题是，为什么我没有在EtcdCluster对象里声明Persistent Volume？</strong></p>\n<p>难道，我们不担心节点宕机之后Etcd的数据会丢失吗？</p>\n<p>我们知道，Etcd是一个基于Raft协议实现的高可用Key-Value存储。根据Raft协议的设计原则，当Etcd集群里只有半数以下（在我们的例子里，小于等于一个）的节点失效时，当前集群依然可以正常工作。此时，Etcd Operator只需要通过控制循环创建出新的Pod，然后将它们加入到现有集群里，就完成了“期望状态”与“实际状态”的调谐工作。这个集群，是一直可用的 。</p>\n<blockquote>\n<p>备注：关于Etcd的工作原理和Raft协议的设计思想，你可以阅读<a href=\"http://www.infoq.com/cn/articles/etcd-interpretation-application-scenario-implement-principle\">这篇文章</a>来进行学习。</p>\n</blockquote>\n<p>但是，当这个Etcd集群里有半数以上（在我们的例子里，大于等于两个）的节点失效的时候，这个集群就会丧失数据写入的能力，从而进入“不可用”状态。此时，即使Etcd Operator创建出新的Pod出来，Etcd集群本身也无法自动恢复起来。</p>\n<p>这个时候，我们就必须使用Etcd本身的备份数据来对集群进行恢复操作。</p>\n<p>在有了Operator机制之后，上述Etcd的备份操作，是由一个单独的Etcd Backup Operator负责完成的。</p>\n<p>创建和使用这个Operator的流程，如下所示：</p>\n<pre><code># 首先，创建etcd-backup-operator\n$ kubectl create -f example/etcd-backup-operator/deployment.yaml\n\n# 确认etcd-backup-operator已经在正常运行\n$ kubectl get pod\nNAME                                    READY     STATUS    RESTARTS   AGE\netcd-backup-operator-1102130733-hhgt7   1/1       Running   0          3s\n\n# 可以看到，Backup Operator会创建一个叫etcdbackups的CRD\n$ kubectl get crd\nNAME                                    KIND\netcdbackups.etcd.database.coreos.com    CustomResourceDefinition.v1beta1.apiextensions.k8s.io\n\n# 我们这里要使用AWS S3来存储备份，需要将S3的授权信息配置在文件里\n$ cat $AWS_DIR/credentials\n[default]\naws_access_key_id = XXX\naws_secret_access_key = XXX\n\n$ cat $AWS_DIR/config\n[default]\nregion = &lt;region&gt;\n\n# 然后，将上述授权信息制作成一个Secret\n$ kubectl create secret generic aws --from-file=$AWS_DIR/credentials --from-file=$AWS_DIR/config\n\n# 使用上述S3的访问信息，创建一个EtcdBackup对象\n$ sed -e 's|&lt;full-s3-path&gt;|mybucket/etcd.backup|g' \\\n    -e 's|&lt;aws-secret&gt;|aws|g' \\\n    -e 's|&lt;etcd-cluster-endpoints&gt;|&quot;http://example-etcd-cluster-client:2379&quot;|g' \\\n    example/etcd-backup-operator/backup_cr.yaml \\\n    | kubectl create -f -\n</code></pre>\n<p>需要注意的是，每当你创建一个EtcdBackup对象（<a href=\"https://github.com/coreos/etcd-operator/blob/master/example/etcd-backup-operator/backup_cr.yaml\">backup_cr.yaml</a>），就相当于为它所指定的Etcd集群做了一次备份。EtcdBackup对象的etcdEndpoints字段，会指定它要备份的Etcd集群的访问地址。</p>\n<p>所以，在实际的环境里，我建议你把最后这个备份操作，编写成一个Kubernetes的CronJob以便定时运行。</p>\n<p>而当Etcd集群发生了故障之后，你就可以通过创建一个EtcdRestore对象来完成恢复操作。当然，这就意味着你也需要事先启动Etcd Restore Operator。</p>\n<p>这个流程的完整过程，如下所示：</p>\n<pre><code># 创建etcd-restore-operator\n$ kubectl create -f example/etcd-restore-operator/deployment.yaml\n\n# 确认它已经正常运行\n$ kubectl get pods\nNAME                                     READY     STATUS    RESTARTS   AGE\netcd-restore-operator-4203122180-npn3g   1/1       Running   0          7s\n\n# 创建一个EtcdRestore对象，来帮助Etcd Operator恢复数据，记得替换模板里的S3的访问信息\n$ sed -e 's|&lt;full-s3-path&gt;|mybucket/etcd.backup|g' \\\n    -e 's|&lt;aws-secret&gt;|aws|g' \\\n    example/etcd-restore-operator/restore_cr.yaml \\\n    | kubectl create -f -\n</code></pre>\n<p>上面例子里的EtcdRestore对象（<a href=\"https://github.com/coreos/etcd-operator/blob/master/example/etcd-restore-operator/restore_cr.yaml\">restore_cr.yaml</a>），会指定它要恢复的Etcd集群的名字和备份数据所在的S3存储的访问信息。</p>\n<p>而当一个EtcdRestore对象成功创建后，Etcd Restore Operator就会通过上述信息，恢复出一个全新的Etcd集群。然后，Etcd Operator会把这个新集群直接接管过来，从而重新进入可用的状态。</p>\n<p>EtcdBackup和EtcdRestore这两个Operator的工作原理，与Etcd Operator的实现方式非常类似。所以，这一部分就交给你课后去探索了。</p>\n<h2>总结</h2>\n<p>在今天这篇文章中，我以Etcd Operator为例，详细介绍了一个Operator的工作原理和编写过程。</p>\n<p>可以看到，Etcd集群本身就拥有良好的分布式设计和一定的高可用能力。在这种情况下，StatefulSet“为Pod编号”和“将Pod同PV绑定”这两个主要的特性，就不太有用武之地了。</p>\n<p>而相比之下，Etcd Operator把一个Etcd集群，抽象成了一个具有一定“自治能力”的整体。而当这个“自治能力”本身不足以解决问题的时候，我们可以通过两个专门负责备份和恢复的Operator进行修正。这种实现方式，不仅更加贴近Etcd的设计思想，也更加编程友好。</p>\n<p>不过，如果我现在要部署的应用，既需要用StatefulSet的方式维持拓扑状态和存储状态，又有大量的编程工作要做，那我到底该如何选择呢？</p>\n<p>其实，Operator和StatefulSet并不是竞争关系。你完全可以编写一个Operator，然后在Operator的控制循环里创建和控制StatefulSet而不是Pod。比如，业界知名的<a href=\"https://github.com/coreos/prometheus-operator\">Prometheus项目的Operator</a>，正是这么实现的。</p>\n<p>此外，CoreOS公司在被RedHat公司收购之后，已经把Operator的编写过程封装成了一个叫作<a href=\"https://github.com/operator-framework/operator-sdk\">Operator SDK</a>的工具（整个项目叫作Operator Framework），它可以帮助你生成Operator的框架代码。感兴趣的话，你可以试用一下。</p>\n<h2>思考题</h2>\n<p>在Operator的实现过程中，我们再一次用到了CRD。可是，你一定要明白，CRD并不是万能的，它有很多场景不适用，还有性能瓶颈。你能列举出一些不适用CRD的场景么？你知道造成CRD性能瓶颈的原因主要在哪里么？</p>\n<p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":40154,"user_name":"小熹","can_delete":false,"product_type":"c1","uid":1218284,"ip_address":"","ucode":"05B12C9FAC2DD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/ec/5c53f9e5.jpg","comment_is_top":false,"comment_ctime":1542528908,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"306485206924","product_id":100015201,"comment_content":"CRD在ETCD里面是以JSON格式来存储的，而K8S的API对象是以protobuf格式存储，在资源对象数量多的时候JSON的序列化和反序列化性能会成为瓶颈。","like_count":72,"discussions":[{"author":{"id":1356083,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/33/8993eae0.jpg","nickname":"黄展志","note":"","ucode":"EBA342CD89072D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206998,"discussion_content":"Thrift 是 Facebook 开源的高性能的序列化协议，也是一个轻量级的 RPC 框架；Protobuf 是谷歌开源的序列化协议。它们的共同特点是无论在空间上还是时间上都有着很高的性能，缺点就是由于 IDL 存在带来一些使用上的不方便.序列化协议依据具体业务来选择。如果对性能要求不高可以选择 JSON，否则可以从 Thrift 和 Protobuf 中选择其一","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1584456712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1209721,"avatar":"https://static001.geekbang.org/account/avatar/00/12/75/79/b14fc914.jpg","nickname":"潇洒洒","note":"","ucode":"D24838A0A1D6B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5036,"discussion_content":"这得是有多少资源啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565884157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52088,"user_name":"程序修行","can_delete":false,"product_type":"c1","uid":1257409,"ip_address":"","ucode":"2CCD5ACAFF0E8D","user_header":"","comment_is_top":false,"comment_ctime":1545307572,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"263538312628","product_id":100015201,"comment_content":" 已经到了看不懂的时候了～。丧心","like_count":62,"discussions":[{"author":{"id":1259323,"avatar":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","nickname":"陈斯佳","note":"","ucode":"C236F874FC767A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159821,"discussion_content":"我也是……不过我现在的策略是先看一遍，混个脸熟，然后再反复看，反复练。前期越看不懂就说明这个越有可能成为我们以后的护城河。一起加油 :）","likes_number":26,"is_delete":false,"is_hidden":false,"ctime":1580735766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1751859,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/bb/33/5545b42e.jpg","nickname":"Bobo","note":"","ucode":"23102FBE943515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1259323,"avatar":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","nickname":"陈斯佳","note":"","ucode":"C236F874FC767A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355649,"discussion_content":"最开始的时候，看的可爽了，越看感觉越难。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1615466543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":159821,"ip_address":""},"score":355649,"extra":""},{"author":{"id":1259323,"avatar":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","nickname":"陈斯佳","note":"","ucode":"C236F874FC767A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1751859,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/bb/33/5545b42e.jpg","nickname":"Bobo","note":"","ucode":"23102FBE943515","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404545,"discussion_content":"看了第三遍，还在挣扎着 期待第四遍能顿悟 😂 继续混脸熟中…","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634344930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":355649,"ip_address":""},"score":404545,"extra":""}]},{"author":{"id":1928682,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/6d/ea/2c5fcdb1.jpg","nickname":"睡觉也在笑","note":"","ucode":"62381E78061843","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303163,"discussion_content":"不用怕，先看完。先理解，不会操作没关系云平台上都是现成的，不需要你真的都自己设置。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599172847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004953,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/99/4bdadfd3.jpg","nickname":"Chloe","note":"","ucode":"C4848ED5B35752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33190,"discussion_content":"木事，很早我就开始了要好几遍才能领会的阶段。温故而知新！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1571106824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970516,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLK4NPyaFDl4rzrd4A9z42tQDibFLdCicbrAdyUa5P2B5u8UCUBenpHX7VgUCibvHvhpza4icMBKVnhmA/132","nickname":"学无止境","note":"","ucode":"2C28E8E54DAB4E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390140,"discussion_content":"你不是一个人 ，我也看不太明白了。得多看几遍 ，实际动手操作才能慢慢领悟","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629686867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014873,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/59/dc9bbb21.jpg","nickname":"Join","note":"","ucode":"20F51EFFD8FEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380671,"discussion_content":"operator挺火","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624622807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34886,"user_name":"Vincen","can_delete":false,"product_type":"c1","uid":1218185,"ip_address":"","ucode":"1029A901EC7BA0","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/89/9312b3a2.jpg","comment_is_top":false,"comment_ctime":1540345444,"is_pvip":false,"replies":[{"id":"12540","content":"原理上是一个东西","user_name":"作者回复","comment_id":34886,"uid":"1218095","ip_address":"","utype":1,"ctime":1540440086,"user_name_real":"Geek_6ef93d"}],"discussion_count":5,"race_medal":0,"score":"113209495140","product_id":100015201,"comment_content":"是否可以将operator和自定义控制器划等号","like_count":27,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427375,"discussion_content":"原理上是一个东西","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540440086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114356,"avatar":"https://static001.geekbang.org/account/avatar/00/11/00/f4/cc5f0896.jpg","nickname":"Jowin","note":"","ucode":"19017F7D06C22A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311137,"discussion_content":"operator和自定义控制器原理上是一个东西，可以参考：https://stackoverflow.com/questions/47848258/what-is-the-difference-between-a-kubernetes-controller-and-a-kubernetes-operator","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1602233772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2663721,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er8sYHCPqtn0TRP72qup5YicYAvTDNP7b8cuykCR0o5Yb6ViaQJFKShJbMsWahVk4sQdwDU2UQf6NiaA/132","nickname":"akai","note":"","ucode":"8D4AA48A86B71C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577049,"discussion_content":"operator是容器中运行，课程中自定义控制器是在宿主机上运行的进程","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655901765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1099720,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/c8/b1ea77fa.jpg","nickname":"次次","note":"","ucode":"8D48FA8C71693F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2663721,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er8sYHCPqtn0TRP72qup5YicYAvTDNP7b8cuykCR0o5Yb6ViaQJFKShJbMsWahVk4sQdwDU2UQf6NiaA/132","nickname":"akai","note":"","ucode":"8D4AA48A86B71C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583951,"discussion_content":"可别误导了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1660525384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":577049,"ip_address":"北京"},"score":583951,"extra":""}]},{"author":{"id":2139471,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a5/4f/772dd0f3.jpg","nickname":"zlel","note":"","ucode":"D98D44B933D6D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580778,"discussion_content":"operator就是InCluster方式运行的自定义控制器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658371443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34867,"user_name":"小小笑儿","can_delete":false,"product_type":"c1","uid":1040354,"ip_address":"","ucode":"CA63CC50DC2091","user_header":"https://static001.geekbang.org/account/avatar/00/0f/df/e2/823a04b4.jpg","comment_is_top":false,"comment_ctime":1540343137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"74554787169","product_id":100015201,"comment_content":"感觉operator就是一个自定义的controller，需要有一定的开发能力来实现。","like_count":17},{"had_liked":false,"id":34846,"user_name":"ethfoo","can_delete":false,"product_type":"c1","uid":1230991,"ip_address":"","ucode":"89437AB68AF4C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/c8/8f/759b7761.jpg","comment_is_top":false,"comment_ctime":1540340090,"is_pvip":false,"replies":[{"id":"12542","content":"要是大部分数据丢失备份又不实时的时候，用pv把数据找回来就能完美work，那还要raft干啥。","user_name":"作者回复","comment_id":34846,"uid":"1218095","ip_address":"","utype":1,"ctime":1540440393,"user_name_real":"Geek_6ef93d"}],"discussion_count":10,"race_medal":0,"score":"48784980346","product_id":100015201,"comment_content":"etcd operator现在使用empty dir存储etcd数据，万一真的出现大部分节点挂掉，但是数据备份又不是实时的，会存在部分数据丢失的情况吧？那为什么etcd operator不使用pv呢？","like_count":12,"discussions":[{"author":{"id":1399098,"avatar":"https://static001.geekbang.org/account/avatar/00/15/59/3a/c3991054.jpg","nickname":"Will","note":"","ucode":"DD6A753E170FE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286145,"discussion_content":"我觉得作者的意思主要是说：通过raft协议保证了数据的一致性，所以哪怕是大部分的节点挂了，也是可以从少数的好的节点来恢复数据的，没有必要非得从PV中恢复。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1593072880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1411566,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRicibrZZK2F5zgOzTeGQHBKXELdqhiaabAPJMRVsfHHRmmu1W69Cqo6P9At3DvWdBoznfYIuXA1tFw/132","nickname":"kong62","note":"","ucode":"1C9F749CB379E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":156508,"discussion_content":"这个作者说的有点牵强的：\n第一：集群的 pod 同时重启的话，数据丢失了，而备份肯定不会那么及时，肯定的有数据丢失了，甚至如果没有备份就完全丢失。\n第二：有持久化的情况，如果遇到集群都重启这样的问题，那就等重启完就结束了，但是如果依赖备份和恢复，那么恢复也是个瓶颈或者延长了集群启动的时间","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1580372833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228136,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","nickname":"Cutler","note":"","ucode":"2EDECFE039845B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339522,"discussion_content":"如果kv的数量很多的话，没有pv会导致很长的数据同步时间，raft只是保证了数据的强一致性，不能解决同步时间长的问题。但是如果有大量的kv要存储，etcd是不是一个很好的方案值得思考。在数据量小的情况下，老师说的不需要pv的方案是没有问题的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609719805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1222003,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a5/73/3ddc7c77.jpg","nickname":"Brave Shine","note":"","ucode":"CBB1BAF89DB936","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228136,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","nickname":"Cutler","note":"","ucode":"2EDECFE039845B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557678,"discussion_content":"raft实现上都会有InstallSnapshotRPC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647929835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339522,"ip_address":""},"score":557678,"extra":""}]},{"author":{"id":1094470,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b3/46/ec914238.jpg","nickname":"espzest","note":"","ucode":"64B1A7DEA19348","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1845,"discussion_content":"我也很想知道为啥？ raft的每个节点，是需要写磁盘。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1562985873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131852,"avatar":"https://static001.geekbang.org/account/avatar/00/11/45/4c/99bf58d2.jpg","nickname":"柳城","note":"","ucode":"59DDC003FDA6F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1193,"discussion_content":"能正面解释一下lz的问题么。不完美在哪里，raft如何能解决","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1562387613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1222003,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a5/73/3ddc7c77.jpg","nickname":"Brave Shine","note":"","ucode":"CBB1BAF89DB936","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557681,"discussion_content":"因为没有必要，etcd提供的备份恢复机制就是snapshot，你用pv最终恢复也是用snapshot，只不过如果说没有按时备份snapshot那么在恢复的时候可能恢复出来的数据没有pv上的数据新（但是pv可能也会损坏不可用，所以归根到底还是备份snapshot去减少集群级别的故障恢复时间）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647930649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427359,"discussion_content":"要是大部分数据丢失备份又不实时的时候，用pv把数据找回来就能完美work，那还要raft干啥。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1540440393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2309567,"avatar":"","nickname":"Geek_08abcc","note":"","ucode":"7F8D05D5993DEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332953,"discussion_content":"确实作者有点避重就轻了，可以说清楚？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607401475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048441,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/79/f400c4d1.jpg","nickname":"douge","note":"","ucode":"A6EB1AA3D53516","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293573,"discussion_content":"需不需要 pvc 还是看业务，一般 raft 实现都有 snapshot 机制，如果业务对数据要求高，持久化 snapshot 即可。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595584847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143570,"user_name":"Simon Wu","can_delete":false,"product_type":"c1","uid":1310029,"ip_address":"","ucode":"6B5FC98B1D57FB","user_header":"https://static001.geekbang.org/account/avatar/00/13/fd/4d/41875340.jpg","comment_is_top":false,"comment_ctime":1571734895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44521407855","product_id":100015201,"comment_content":"Etcd operator已经支持pvc了，依靠备份机制还是有一段时间的数据丢失，就看你的业务允不允许。","like_count":11},{"had_liked":false,"id":48045,"user_name":"johnson.skiii","can_delete":false,"product_type":"c1","uid":1316924,"ip_address":"","ucode":"F1B6E71B54046C","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/3c/b5a00c1a.jpg","comment_is_top":false,"comment_ctime":1544329526,"is_pvip":true,"replies":[{"id":"17504","content":"恢复数据这个操作还是要的","user_name":"作者回复","comment_id":48045,"uid":"1218095","ip_address":"","utype":1,"ctime":1544533451,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"40199035190","product_id":100015201,"comment_content":"张大，请教个问题。<br><br>如果ETCD每个pod不绑定pv的话，那么当其中一个挂掉的话，etcd operator会再启动一个pod，但是启动到那一台worker未知；那么，由于raft机制，leader会同步数据给这个新的pod，这个过程可能会很耗时；<br><br>与其这样，能否限定运行etcd的pod使用特定的pv，这样当出现pod挂掉的情况，leader同步数据也会更快。","like_count":9,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432003,"discussion_content":"恢复数据这个操作还是要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544533451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57943,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1546947914,"is_pvip":false,"replies":[{"id":"22070","content":"kubebuilder operatorsdk都是帮你简化操作的工具","user_name":"作者回复","comment_id":57943,"uid":"1218095","ip_address":"","utype":1,"ctime":1548053926,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"27316751690","product_id":100015201,"comment_content":"我问一个问题，平时开发人员需要用到的 CRD 的地方多吗，如果要自定义的话还是挺麻烦的呢","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435838,"discussion_content":"kubebuilder operatorsdk都是帮你简化操作的工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548053926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278888,"user_name":"？","can_delete":false,"product_type":"c1","uid":2030035,"ip_address":"","ucode":"3043E00A056081","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f9/d3/2cb7516e.jpg","comment_is_top":false,"comment_ctime":1613443938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18793313122","product_id":100015201,"comment_content":"我觉得这一章应该算扩展，需要有一定基础，并且编写过crd的朋友来学习的，普通的使用还用不上crd，毕竟很多开源项目都自定义了crd，我们只需要查看他们的文档配置即可。","like_count":4},{"had_liked":false,"id":176562,"user_name":"化石","can_delete":false,"product_type":"c1","uid":1153885,"ip_address":"","ucode":"AF088A9FB76D8B","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/5d/f99d0ce6.jpg","comment_is_top":false,"comment_ctime":1581087464,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18760956648","product_id":100015201,"comment_content":"最前面的例子 etcd 创建 infra0-infra2 3 个节点的时候，--initial-cluster-state 都是 new，是否和后面的内容不一致?","like_count":4,"discussions":[{"author":{"id":1527466,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4e/aa/42e238ea.jpg","nickname":"让他亦可","note":"","ucode":"944C065BE7AA43","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581351,"discussion_content":"第二个和第三个已经不是new了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658736544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35007,"user_name":"DJH","can_delete":false,"product_type":"c1","uid":1256740,"ip_address":"","ucode":"2BDEF123B3DB6A","user_header":"https://static001.geekbang.org/account/avatar/00/13/2d/24/28acca15.jpg","comment_is_top":false,"comment_ctime":1540380405,"is_pvip":false,"replies":[{"id":"12534","content":"需要自己清理","user_name":"作者回复","comment_id":35007,"uid":"1218095","ip_address":"","utype":1,"ctime":1540439809,"user_name_real":"Geek_6ef93d"}],"discussion_count":1,"race_medal":0,"score":"18720249589","product_id":100015201,"comment_content":"请教老师，EtcdBackup和EtcdRestore资源创建（并运行）后会自动删除吗？是否需要手工删除？","like_count":4,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427413,"discussion_content":"需要自己清理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540439809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34872,"user_name":"Vincen","can_delete":false,"product_type":"c1","uid":1218185,"ip_address":"","ucode":"1029A901EC7BA0","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/89/9312b3a2.jpg","comment_is_top":false,"comment_ctime":1540343478,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18720212662","product_id":100015201,"comment_content":"厉害了，全是干货！","like_count":4},{"had_liked":false,"id":337802,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1647070404,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14531972292","product_id":100015201,"comment_content":"该文章中的例子其实是创建不成功的，因为我的k8s版本是1.23.0，最新的api已经从原来的extensions&#47;v1beta1变为了apps&#47;v1,所以这里在创建example&#47;deployment.yaml时虽然能够成功，但是创建CRD的时候是失败的，我们通过log也可以看出来：<br>Could not construct reference to: &#39;&amp;v1.Endpoints{TypeMeta:v1.TypeMeta{Kind:&quot;&quot;, APIVersion:&quot;&quot;}, ObjectMeta:v1.ObjectMeta{Name:&quot;etcd-operator&quot;, GenerateName:&quot;&quot;, Namespace:&quot;default.......<br><br>time=&quot;2022-03-12T06:46:45Z&quot; level=error msg=&quot;initialization failed: fail to init CRD: failed to create CRD: the server could not find the requested resource&quot; pkg=controller<br><br>我想解决办法只能是修改源码吧，但是我不会go，很难受😣","like_count":3,"discussions":[{"author":{"id":1033169,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/d1/bdf895bf.jpg","nickname":"penng","note":"","ucode":"6087CFCB0AC434","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585805,"discussion_content":"我1.24.0版本也是这个问题，无法实践了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661833461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229889,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1119133,"ip_address":"","ucode":"4BCA899B8E4E85","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/9d/0ff43179.jpg","comment_is_top":false,"comment_ctime":1593178174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14478080062","product_id":100015201,"comment_content":"有点难了，得多看几遍，留个爪","like_count":3},{"had_liked":false,"id":324993,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1638774363,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10228708955","product_id":100015201,"comment_content":"已经到了看不懂的时候了   这是个悲伤的故事","like_count":2,"discussions":[{"author":{"id":1837179,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/08/7b/7f086546.jpg","nickname":"Alex","note":"","ucode":"70806CEA9AB15E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580381,"discussion_content":"多看几遍就明白了，我也是看了三四遍才明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658135145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258644,"user_name":"致良知","can_delete":false,"product_type":"c1","uid":2113915,"ip_address":"","ucode":"73C722E31B726A","user_header":"https://static001.geekbang.org/account/avatar/00/20/41/7b/cda2e622.jpg","comment_is_top":false,"comment_ctime":1604533109,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10194467701","product_id":100015201,"comment_content":"学到了 真心不错","like_count":2},{"had_liked":false,"id":229184,"user_name":"Spring.Fred","can_delete":false,"product_type":"c1","uid":1055148,"ip_address":"","ucode":"66C84150ACC304","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ac/32da70c9.jpg","comment_is_top":false,"comment_ctime":1592918832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10182853424","product_id":100015201,"comment_content":"之前用StatefulSet实现的mysql主从读写分离的例子， 能给个Operator的示例代码吗？","like_count":2},{"had_liked":false,"id":149584,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1573283020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10163217612","product_id":100015201,"comment_content":"应该是client端与apiserver交互存在性能瓶颈","like_count":2},{"had_liked":false,"id":93970,"user_name":"po","can_delete":false,"product_type":"c1","uid":1023905,"ip_address":"","ucode":"7DB36C278F34D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/a1/d75219ee.jpg","comment_is_top":false,"comment_ctime":1557679561,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10147614153","product_id":100015201,"comment_content":"请教一个问题，etcd operator 使用empty dir存储etcd数据，那么在集群突然断电或者关机的情况下，再启动集群，那么所有etcd的pod数据都是为空，那raft算法在这个时候也没法工作了吧？这个问题要怎么解决呢？我看现在openshift集群的etcd就是用operator部署的，请老师解答下，谢谢。","like_count":2},{"had_liked":false,"id":35391,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1540537459,"is_pvip":false,"replies":[{"id":"12621","content":"kube proxy不知道你的改动","user_name":"作者回复","comment_id":35391,"uid":"1218095","ip_address":"","utype":1,"ctime":1540593466,"user_name_real":"Geek_6ef93d"}],"discussion_count":2,"race_medal":0,"score":"10130472051","product_id":100015201,"comment_content":"老师，在测试官方的prometheus-operator。因为我的集群是二进制部署的，我想监控到我的组件，kube-contorller-manager和kube-scheduler组件，我做了一些修改（把这些组件的bind address设定为了0.0.0.0，自己单独创建了他们的ep）。当时是能在prometheus的targets看到，并且也能监控到。但是过了一段时间后，这些svc和ep会自动失效。这个问题怎么来查看呢？<br>","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427525,"discussion_content":"kube proxy不知道你的改动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540593466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028053,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/af/d5/6212800b.jpg","nickname":"feie22","note":"","ucode":"E51CF5576D9231","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41109,"discussion_content":"我也遇到过，当时的情况是自建的ep写的不对，类型写错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572354523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34998,"user_name":"每日都想上班","can_delete":false,"product_type":"c1","uid":1060466,"ip_address":"","ucode":"1DE64120C8B14A","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/72/145c10db.jpg","comment_is_top":false,"comment_ctime":1540378074,"is_pvip":false,"replies":[{"id":"12535","content":"可以","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540439819,"ip_address":"","comment_id":34998,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10130312666","product_id":100015201,"comment_content":"我有4台master，其中一台master我给它系统重装，然后再加入master，是不是可以平滑操作？","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427406,"discussion_content":"可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540439819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34907,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1540350644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10130285236","product_id":100015201,"comment_content":"不错，可以试着添加 workqueue 来练练手。可以多布置些作业，有的时候还真是不擅长给自己找活干。。","like_count":2},{"had_liked":false,"id":319883,"user_name":"yingjie","can_delete":false,"product_type":"c1","uid":1635988,"ip_address":"","ucode":"AC0FAAA1299BCD","user_header":"https://static001.geekbang.org/account/avatar/00/18/f6/94/e244696a.jpg","comment_is_top":false,"comment_ctime":1635997764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5930965060","product_id":100015201,"comment_content":"老师，这里operator执行的命令是在哪个镜像容器里面启动etcd的命令的？","like_count":1},{"had_liked":false,"id":314064,"user_name":"言午木杉","can_delete":false,"product_type":"c1","uid":1201009,"ip_address":"","ucode":"300BEDC1B07DF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/53/71/a4e9f20e.jpg","comment_is_top":false,"comment_ctime":1632822875,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5927790171","product_id":100015201,"comment_content":"我觉得这里的复杂度真的指数级，意思是在k8s上运行一个分布式集群应用，需要向下层的k8s接口进行编程，然后搞一套自适应的控制器来满足k8s的调度。这个太噩梦了对于新手来说","like_count":1,"discussions":[{"author":{"id":1131300,"avatar":"https://static001.geekbang.org/account/avatar/00/11/43/24/3f9f7c70.jpg","nickname":"zixuan","note":"","ucode":"C72920DD05B074","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534628,"discussion_content":"k8s只是把api对象的变更同步一下，相当于给你做好了操作接口. 自己做一套自动化部署和维护脚本没有更简单吧，并且不一定可靠","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638243629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295731,"user_name":"StayLet","can_delete":false,"product_type":"c1","uid":1249652,"ip_address":"","ucode":"6B748CA3AF3C5B","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/74/72ffa6d6.jpg","comment_is_top":false,"comment_ctime":1622562784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5917530080","product_id":100015201,"comment_content":"以前认为能把 Kubernetes 跑起来，能把应用部署进去并维护整个生命周期就是会了。现在发现前面的玩溜了只是开始，会 CRD、Operator 才是真的会。","like_count":1},{"had_liked":false,"id":236610,"user_name":"蹦蹦","can_delete":false,"product_type":"c1","uid":2055624,"ip_address":"","ucode":"D20A4CA503B868","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/c8/7ece6f4b.jpg","comment_is_top":false,"comment_ctime":1595477445,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5890444741","product_id":100015201,"comment_content":"为啥deployment.yaml里面没有selector，创建不了","like_count":1,"discussions":[{"author":{"id":2062232,"avatar":"","nickname":"李轲","note":"","ucode":"73FCE8EFE136C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318548,"discussion_content":"这个因为版本更新的原因, extension已经过期了, 使用apps/v1的话, 那么就要自己添加相关信息, 例如:\nspec:\n  selector:\n    matchLabels:\n      app: etcd-backup-operator\ntemplate里面的name也要改成app才可以匹配:\n...\napp: etcd-backup-operator\n...\nspec:","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1603778653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61133,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1547625026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842592322","product_id":100015201,"comment_content":"能解答下思考题么？  ","like_count":1},{"had_liked":false,"id":35504,"user_name":"hochuenw","can_delete":false,"product_type":"c1","uid":1231781,"ip_address":"","ucode":"303B389F81508A","user_header":"","comment_is_top":false,"comment_ctime":1540629537,"is_pvip":false,"replies":[{"id":"12636","content":"概念很好的，适合云上的用户玩，但是不适合自己定制开发","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1540655750,"ip_address":"","comment_id":35504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5835596833","product_id":100015201,"comment_content":"老师请问怎么看metacontroller这个项目","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427555,"discussion_content":"概念很好的，适合云上的用户玩，但是不适合自己定制开发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540655750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356589,"user_name":"Season Zhang—凯程","can_delete":false,"product_type":"c1","uid":2682306,"ip_address":"广东","ucode":"63DAE127BAE7E4","user_header":"https://static001.geekbang.org/account/avatar/00/28/ed/c2/b043abf5.jpg","comment_is_top":false,"comment_ctime":1662444083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662444083","product_id":100015201,"comment_content":"我以为只是学少林长拳，谁知道教我降龙十八掌。我开心还是伤心？","like_count":0},{"had_liked":false,"id":356354,"user_name":"Geek_c9fb2a","can_delete":false,"product_type":"c1","uid":2805700,"ip_address":"广东","ucode":"79CD49F41FBB8A","user_header":"","comment_is_top":false,"comment_ctime":1662193559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662193559","product_id":100015201,"comment_content":"集群etcd都挂掉了，EtcdRestore 对象也创建不了，怎么恢复呢，EtcdRestore的作用就失效了吧","like_count":0},{"had_liked":false,"id":352867,"user_name":"algebra","can_delete":false,"product_type":"c1","uid":1010953,"ip_address":"陕西","ucode":"89F57E4A50E04A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6d/09/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1658989582,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1658989582","product_id":100015201,"comment_content":"执行create_role.sh 遇到这个问题 unable to recognize &quot;STDIN&quot;: no matches for kind &quot;ClusterRole&quot; in version &quot;rbac.authorization.k8s.io&#47;v1beta1&quot;","like_count":0,"discussions":[{"author":{"id":2709653,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ygRfx93LO1ziazydV4eZRGWfnxc6ZJUo0dUcboASfduibJByytVyhKvLd7suhmPYernHv1C1jy8sOtlRTzuO36iag/132","nickname":"非主流码农","note":"","ucode":"47F137CF78A849","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584751,"discussion_content":"rbac.authorization.k8s.io/v1beta1-&gt;rbac.authorization.k8s.io/v1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661083506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340639,"user_name":"松三爷","can_delete":false,"product_type":"c1","uid":1367465,"ip_address":"","ucode":"4B1F6B81BC28D4","user_header":"https://static001.geekbang.org/account/avatar/00/14/dd/a9/fa4cb455.jpg","comment_is_top":false,"comment_ctime":1648984643,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648984643","product_id":100015201,"comment_content":"老师问个问题, etcd-operator为什么会自动创建CRD呢?  在项目里没有看到etcd-cluster的yaml文件啊, 还是说这个CRD是这个container自带创建的 ? ","like_count":0},{"had_liked":false,"id":336680,"user_name":"窝窝头","can_delete":false,"product_type":"c1","uid":1063866,"ip_address":"","ucode":"5C2635ED6484F8","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/ba/3b30dcde.jpg","comment_is_top":false,"comment_ctime":1646289866,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646289866","product_id":100015201,"comment_content":"性能瓶颈还是在数据的序列化跟反序列化吧","like_count":0},{"had_liked":false,"id":293394,"user_name":"罗峰","can_delete":false,"product_type":"c1","uid":1218501,"ip_address":"","ucode":"5F3D6AF8F28322","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/c5/84491beb.jpg","comment_is_top":false,"comment_ctime":1621382757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621382757","product_id":100015201,"comment_content":"因为结合了crd，operator可以看做是自由度更高的statefulset吗？","like_count":0},{"had_liked":false,"id":290590,"user_name":"Gekko","can_delete":false,"product_type":"c1","uid":1343498,"ip_address":"","ucode":"A3D59E7F3EAE64","user_header":"","comment_is_top":false,"comment_ctime":1619654672,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"1619654672","product_id":100015201,"comment_content":"学到这里，是在忍不住提个建议。基于实际企业运维环境都是成熟的Paas平台，麻烦在对应的地方至少放上界面看一下界面如何操作的吧。通篇到这里的感觉有点感觉都在纸上谈兵，脱离实际企业运维场景了。一开始觉得讲纯理论没问题，命令也没问题，但实际上企业内部运维都是基于可视化界面，少部分是基于宿主机命令的。所以建议作者到实际的企业应用场景看看，才能做到文章学以致用。","like_count":0,"discussions":[{"author":{"id":2086973,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/d8/3d/8a44993f.jpg","nickname":"OldFox","note":"","ucode":"6195262F3A9AA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380413,"discussion_content":"原理会了，啥图形基本都没太大问题","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1624496099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1676074,"avatar":"https://static001.geekbang.org/account/avatar/00/19/93/2a/08675e68.jpg","nickname":"skywalk_jk","note":"","ucode":"329D3E71E613F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386967,"discussion_content":"k8s不是paas，本身也不是为了实现图形界面操作，它是对谷歌在生产环境管理工作负载经验的抽象，文章中讲解的operator本身就是生产环境使用的，是对一款软件运维经验的抽象，你应该关注像kubesphere这样的项目和容器云落地经验","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1627913908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1496889,"avatar":"https://static001.geekbang.org/account/avatar/00/16/d7/39/6698b6a9.jpg","nickname":"Hector","note":"","ucode":"110CAF87ADDC01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412217,"discussion_content":"这是深入剖析啊，初级实战看看k8s in action就够用了。我都不知道看了多少次了，最近要做个分布式多种类任务调度平台，想到k8s operator这套还不错,再来取取经","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636106010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1717785,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/CccT5NgKlZRlTL8f4BsIDqfJ8tRkHPyaR3SXnfgU7acxo2OO7vGzNWjfQBuFnbPPzVYH8Lh49f1jyicuuRSndcA/132","nickname":"Md3zed","note":"","ucode":"83EAD89468ED7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385302,"discussion_content":"看课程标题，是说原理，不是说使用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626975019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226569,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b7/49/fe2da25a.jpg","nickname":"Jingslunt","note":"","ucode":"73178A0A61ECB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371830,"discussion_content":"可视化是做给初级人员和研发人员用的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620011087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289547,"user_name":"切慕溪水Mia","can_delete":false,"product_type":"c1","uid":1096961,"ip_address":"","ucode":"A1887EB4096596","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/01/733150df.jpg","comment_is_top":false,"comment_ctime":1619075117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619075117","product_id":100015201,"comment_content":"CRD是个筐，什么都能往里装","like_count":0},{"had_liked":false,"id":272062,"user_name":"Geek_ce98ba","can_delete":false,"product_type":"c1","uid":2336819,"ip_address":"","ucode":"7E5B850987BDE0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ZqQOhficZLCPs3Ms708L36PRA9V8RXym1yOP7ibtBictewQcUmbNticTlfCfIGxENelfsgsd6jWn0Vu1juKvbXq67g/132","comment_is_top":false,"comment_ctime":1609922998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609922998","product_id":100015201,"comment_content":"性能瓶颈应该是在k8s高可用模式上吧？k8s高可用是多副本单实例运行的","like_count":0},{"had_liked":false,"id":167643,"user_name":"moxi_moxi","can_delete":false,"product_type":"c1","uid":1199799,"ip_address":"","ucode":"76DE4F8AE8F320","user_header":"https://static001.geekbang.org/account/avatar/00/12/4e/b7/e7573f20.jpg","comment_is_top":false,"comment_ctime":1577885763,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577885763","product_id":100015201,"comment_content":"crd还是要走apiserver，并且有可能需要多个资源对象；用聚合功能自定义server, \b比crd性能要好一些吧","like_count":0,"discussions":[{"author":{"id":1433247,"avatar":"https://static001.geekbang.org/account/avatar/00/15/de/9f/b6c59a75.jpg","nickname":"dust！","note":"","ucode":"7ADCCC7985B381","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275071,"discussion_content":"crd使用简单，应用场景也要比自定义api server场景简单些，crd有性能缺陷，只适合简单！自定义api server场景适用广，粒度较细，但是缺陷就是编程实现复杂，容易出错，prometheus-adapter就是自定义api server实现的。看情况，各取所需吧！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590657935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146994,"user_name":"阿硕","can_delete":false,"product_type":"c1","uid":1210978,"ip_address":"","ucode":"39856C29E6614B","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/62/9b248708.jpg","comment_is_top":false,"comment_ctime":1572753320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572753320","product_id":100015201,"comment_content":"Prometheus 项目的 Operator已经在使用了，但想要修改crd的配置，是否要从go源码提交修改呢？","like_count":0},{"had_liked":false,"id":123724,"user_name":"saup007","can_delete":false,"product_type":"c1","uid":1003624,"ip_address":"","ucode":"5BE1CA2E482E96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/68/7a8aa1e1.jpg","comment_is_top":false,"comment_ctime":1565747814,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565747814","product_id":100015201,"comment_content":"operator 不能直接维护存储状态吗？(pod 绑定 pv)，必须要借助StatefulSet吗","like_count":0},{"had_liked":false,"id":87323,"user_name":"qingbo","can_delete":false,"product_type":"c1","uid":1283979,"ip_address":"","ucode":"A4AA89EA310C27","user_header":"https://static001.geekbang.org/account/avatar/00/13/97/8b/bd318156.jpg","comment_is_top":false,"comment_ctime":1555568012,"is_pvip":false,"replies":[{"id":"31586","content":"需要service","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1555698080,"ip_address":"","comment_id":87323,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555568012","product_id":100015201,"comment_content":"我看到这种非StatefulSet的pod有DNS记录的时候好奇了一下，发现是指定了subdomain和service名字一样才可以。不知道是后来加进k8s的还是一开始就有，以前觉得除了StatefulSet的pod都没有DNS的……","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447398,"discussion_content":"需要service","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555698080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62739,"user_name":"lpf32","can_delete":false,"product_type":"c1","uid":1039717,"ip_address":"","ucode":"E1B127FDFF74BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dd/65/3b4a2930.jpg","comment_is_top":false,"comment_ctime":1548146165,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548146165","product_id":100015201,"comment_content":"API Object的event是无状态的，会被广播到每个operator，所以多个operator并没有提高太多性能，所以一般只会有一个operator，这就是性能瓶颈的原因吧。不适合CRD可能是那些更新比较的快的场景吧。望老师指教。","like_count":0},{"had_liked":false,"id":62461,"user_name":"Davy Jones","can_delete":false,"product_type":"c1","uid":1351710,"ip_address":"","ucode":"99036C6DA22CBC","user_header":"https://static001.geekbang.org/account/avatar/00/14/a0/1e/f1fea846.jpg","comment_is_top":false,"comment_ctime":1548062715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548062715","product_id":100015201,"comment_content":"问下，日志在哪里啊，如果，集群出了问题，从哪里排查呢，kubectl apply -f example&#47;example-etcd-cluster.yaml之后，6443就死掉了，systemctl status kubelet.service -l提示<br>kubelet[1604]: E0121 17:14:46.952765    1604 kubelet.go:2236] node &quot;master&quot; not found<br>","like_count":0},{"had_liked":false,"id":62173,"user_name":"jfbai","can_delete":false,"product_type":"c1","uid":1087100,"ip_address":"","ucode":"D1EA101D5CEA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/96/7c/3a7a9ecb.jpg","comment_is_top":false,"comment_ctime":1547968124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547968124","product_id":100015201,"comment_content":"请教一下老师，如果一个被部署了多个实例，那它们之间的本地缓存是怎么保持同步的呢？比如说，我修改了一个 etcd cluster 的属性，那么在有多个 operator 实例存在的情况下哪一个实例会处理这个变化呢？","like_count":0},{"had_liked":false,"id":42224,"user_name":"Johnson","can_delete":false,"product_type":"c1","uid":1225037,"ip_address":"","ucode":"55B582953E49F3","user_header":"https://static001.geekbang.org/account/avatar/00/12/b1/4d/10c75b34.jpg","comment_is_top":false,"comment_ctime":1542934444,"is_pvip":false,"replies":[{"id":"15308","content":"这个参数怎么生成的不是文中已经详细解释了？","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1543042576,"ip_address":"","comment_id":42224,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1542934444","product_id":100015201,"comment_content":"使用这个operator创建的etcd的每个节点–initial-cluster参数并不是都一样的啊，存在拓扑关系，而且最后添加的节点才有所有的列表。那问题来了，前面创建的节点是如何知道所有的节点呢？删除节点的时候是只删除最后添加的节点吗？我感觉要是任意删除的话，会影响其他的节点，老师帮忙解答一下 谢谢","like_count":0,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430011,"discussion_content":"这个参数怎么生成的不是文中已经详细解释了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543042576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408642,"discussion_content":"我觉得：集群内的旧节点可以知道新节点加入，并更新它自身维护的的集群列表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635297680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38106,"user_name":"孙健波","can_delete":false,"product_type":"c1","uid":1024684,"ip_address":"","ucode":"4830CCECBC2394","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo6TmyGF3wMIRLx3lPWOlBWusQCxyianFvZvWeW6hYCABLqEow3p7tGc6XgnqUPVvf6Cbj2KUYQIiag/132","comment_is_top":false,"comment_ctime":1541939134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1541939134","product_id":100015201,"comment_content":"👍 ","like_count":0},{"had_liked":false,"id":35392,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1540537475,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540537475","product_id":100015201,"comment_content":"老师，k8s的版本是1.10.3","like_count":0},{"had_liked":false,"id":34973,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1540373288,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540373288","product_id":100015201,"comment_content":"通过apply的debug模式看到的错误<br>server response object: [{<br>  &quot;metadata&quot;: {},<br>  &quot;status&quot;: &quot;Failure&quot;,<br>  &quot;message&quot;: &quot;error when retrieving current configuration of:\\n\\u0026{0xc4200852c0 0xc42037c9a0 default example-etcd-cluster example-etcd-cluster.yaml 0xc42000db70  false}\\nfrom server for: \\&quot;example-etcd-cluster.yaml\\&quot;: the server was unable to return a response in the time allotted, but may still be processing the request (get etcdclusters.etcd.database.coreos.com example-etcd-cluster)&quot;,<br>  &quot;reason&quot;: &quot;Timeout&quot;,<br>","like_count":0},{"had_liked":false,"id":34967,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1540371851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540371851","product_id":100015201,"comment_content":"老师，我测试创建对应的example-etcd-cluster.yaml，报错出现Error from server (Timeout): error when creating &quot;example-etcd-cluster.yaml&quot;: Timeout: request did not complete within allowed duration，请教下，这个是哪里出现的问题呢？如何来进行设置呢？","like_count":0}]}