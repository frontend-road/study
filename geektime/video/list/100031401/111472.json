{"id":111472,"title":"32 | 主流开源网关概览","content":"<ul>\n<li>\n<p>代码：<a href=\"https://gitee.com/geektime-geekbang/staffjoy\">https://gitee.com/geektime-geekbang/staffjoy</a></p>\n</li>\n<li>\n<p>课件：<a href=\"https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ\">https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ</a> 提取码: 1aeh</p>\n</li>\n</ul>","comments":[{"had_liked":false,"id":152218,"user_name":"Bean.Long","can_delete":false,"product_type":"c3","uid":1144872,"ip_address":"","ucode":"F7C5A139B7B3C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/78/28/65760997.jpg","comment_is_top":false,"comment_ctime":1573918047,"is_pvip":false,"replies":[{"id":58681,"content":"简单看了一下，soul的功能很丰富，治理很全面，有时间要细细研究下，谢谢推荐！\n\n不过关键还是要落地案例，网关产品其实很多，真正接地气在企业大规模落地的并不多，zuul算是一个(在Netflix大规模落地，也被Spring Cloud集成)。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1574079382,"ip_address":"","comment_id":152218,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"https:&#47;&#47;github.com&#47;Dromara&#47;soul，开源时间不长，有一些特点。老师可以帮对比一下。","like_count":6,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474754,"discussion_content":"简单看了一下，soul的功能很丰富，治理很全面，有时间要细细研究下，谢谢推荐！\n\n不过关键还是要落地案例，网关产品其实很多，真正接地气在企业大规模落地的并不多，zuul算是一个(在Netflix大规模落地，也被Spring Cloud集成)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574079382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1144872,"avatar":"https://static001.geekbang.org/account/avatar/00/11/78/28/65760997.jpg","nickname":"Bean.Long","note":"","ucode":"F7C5A139B7B3C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54992,"discussion_content":"收到，继续关注中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574330835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119031,"user_name":"正是那朵玫瑰","can_delete":false,"product_type":"c3","uid":1048261,"ip_address":"","ucode":"73D630B654573F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c5/3467cf94.jpg","comment_is_top":false,"comment_ctime":1564490230,"is_pvip":false,"replies":[{"id":43805,"content":"可编程网关，通常指网关提供可编程的API，比如kong&#47;traefik这些都是可编程网关，可以通过API调用直接操作网关的功能，比如添加路由规则，调整限流阀值，或者高级的流量调度A&#47;B测试等。\n\nFaraday本身就是一个SpringBoot应用，代码不多也很简单，它的可编程主要指，普通开发人员主可以通过代码任意调整网关的功能，这是另外一种意义上的可编程，实际使用也更加灵活，当然如果需要，可以给Faraday添加一层API，支持通过API可编程，这个时候可以考虑像Kong一样引入集中存储(kong使用postgresql)，存储网关的配置，有一定复杂性和开发量。\n\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564580037,"ip_address":"","comment_id":119031,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师，可编程网关这个可编程指的的是什么啊？faraday网关哪里体现了可编程啊？","like_count":6,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460717,"discussion_content":"可编程网关，通常指网关提供可编程的API，比如kong/traefik这些都是可编程网关，可以通过API调用直接操作网关的功能，比如添加路由规则，调整限流阀值，或者高级的流量调度A/B测试等。\n\nFaraday本身就是一个SpringBoot应用，代码不多也很简单，它的可编程主要指，普通开发人员主可以通过代码任意调整网关的功能，这是另外一种意义上的可编程，实际使用也更加灵活，当然如果需要，可以给Faraday添加一层API，支持通过API可编程，这个时候可以考虑像Kong一样引入集中存储(kong使用postgresql)，存储网关的配置，有一定复杂性和开发量。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564580037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1069002,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4f/ca/3ac60658.jpg","nickname":"orange","note":"","ucode":"BD004762AEEB5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3466,"discussion_content":"zuul1不是有grovvy代码，不算可编程性么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564501132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119073,"user_name":"东方奇骥","can_delete":false,"product_type":"c3","uid":1354850,"ip_address":"","ucode":"DEE7085F7E55A4","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/62/37912d51.jpg","comment_is_top":false,"comment_ctime":1564498300,"is_pvip":false,"replies":[{"id":43806,"content":"我个人的意见，没有哪个特别有优势，各有利弊，zuul简单稳定，但是同步模式，而且spring cloud zuul里头引入hystrix&#47;ribbon之后也会变得比较复杂；spring cloud gateway异步模式，兼备网关和反向代理功能，配置灵活，但是比较新，坑还没有踩平，大规模落地案例不多；traefik兼备网关和反向代理功能，golang语言写性能也不错，而且是属于云原生网关，带UI不错的dashboard，但是golang语言对一般程序员来说是门槛，国内大规模落地案例也不多。如果你已经用了zuul，没有问题可以继续使用，同时可以关注和试点spring cloud gateway。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564580448,"ip_address":"","comment_id":119073,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师，这几个开源网关，实际生产环境，你更倾向于使用哪一个呢。现在我们还是用的zul,是不是springcloud gateway和contaknous会更有优势一些？","like_count":5,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460736,"discussion_content":"我个人的意见，没有哪个特别有优势，各有利弊，zuul简单稳定，但是同步模式，而且spring cloud zuul里头引入hystrix/ribbon之后也会变得比较复杂；spring cloud gateway异步模式，兼备网关和反向代理功能，配置灵活，但是比较新，坑还没有踩平，大规模落地案例不多；traefik兼备网关和反向代理功能，golang语言写性能也不错，而且是属于云原生网关，带UI不错的dashboard，但是golang语言对一般程序员来说是门槛，国内大规模落地案例也不多。如果你已经用了zuul，没有问题可以继续使用，同时可以关注和试点spring cloud gateway。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564580448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280542,"user_name":"JRT324","can_delete":false,"product_type":"c3","uid":1502048,"ip_address":"","ucode":"85E94F34813E2E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4qHCR12J6r5iaH5NUlXKib2PQMyDuUpxma47TaGFAY82FqFFu6YictRvK8bBMkEicgMWpTRF6PuLjZw/132","comment_is_top":false,"comment_ctime":1614244973,"is_pvip":false,"replies":[{"id":102207,"content":"在理解了微服务原理和Staffjoy项目的代码以后，其中的Faraday网关完全可以用Spring Cloud Gateway来替代，在生产环境中，也建议用Spring Cloud Gateway。作为一个实践拓展环节，建议你尝试将Staffjoy扩展为支持Spring Cloud Gateway，代码应该并不复杂。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1614786157,"ip_address":"","comment_id":280542,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师你好，在你的这个StaffJoy项目中，能否用spring cloud gateway  替代Faraday网关？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516128,"discussion_content":"在理解了微服务原理和Staffjoy项目的代码以后，其中的Faraday网关完全可以用Spring Cloud Gateway来替代，在生产环境中，也建议用Spring Cloud Gateway。作为一个实践拓展环节，建议你尝试将Staffjoy扩展为支持Spring Cloud Gateway，代码应该并不复杂。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614786157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166190,"user_name":"云淡风清","can_delete":false,"product_type":"c3","uid":1111751,"ip_address":"","ucode":"5CAA72D6A9E89F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/c7/18ddb896.jpg","comment_is_top":false,"comment_ctime":1577413878,"is_pvip":false,"replies":[{"id":64902,"content":"一些公司职责分离比较清楚，网关只做反向路由，安全监控等跨横切面的功能，API聚合逻辑交由后台BFF层做。\n\n也有一些公司的聚合是直接做在网关上的，技术上也可以做到，不过从单一职责&#47;关注分离这些架构原则角度讲，这种做法把网关和业务聚合功能耦合了。当然原则也不是绝对，实际还要看其它因素，比如企业的硬件资源是否富裕，一般企业早期业务简单，资源吃紧，这时候把聚合逻辑直接做在网关上也未尝不可，后续业务变大，需要职责分离的时候，可再拆分解耦。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1577703453,"ip_address":"","comment_id":166190,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"追问一下，波波老师，我看b站的老大提到他们的架构的时候说他们的网关要做聚合，把内部多个微服务的业务在网关聚合成一个api，这似乎跟zuul这样透明转发的网关运行方式不一样，而且他的网关还是按业务分类，比如会员网关，app网关，，，这种网关架构真的好吗，能否简单介绍和评价一下","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479434,"discussion_content":"一些公司职责分离比较清楚，网关只做反向路由，安全监控等跨横切面的功能，API聚合逻辑交由后台BFF层做。\n\n也有一些公司的聚合是直接做在网关上的，技术上也可以做到，不过从单一职责/关注分离这些架构原则角度讲，这种做法把网关和业务聚合功能耦合了。当然原则也不是绝对，实际还要看其它因素，比如企业的硬件资源是否富裕，一般企业早期业务简单，资源吃紧，这时候把聚合逻辑直接做在网关上也未尝不可，后续业务变大，需要职责分离的时候，可再拆分解耦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577703453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263289,"user_name":"龙彦极客","can_delete":false,"product_type":"c3","uid":2272998,"ip_address":"","ucode":"20D380C00D8B05","user_header":"https://static001.geekbang.org/account/avatar/00/22/ae/e6/0c41e48d.jpg","comment_is_top":false,"comment_ctime":1606093042,"is_pvip":false,"replies":[{"id":95660,"content":"关于第1&#47;2个问题，k8s支持liveness和readiness probe，其中readiness probe是就绪探针，如果配置了就绪探针，那么pod启动时候，只要就绪探针测试不通过，k8s就不会给这个pod发送流量，所以你可以给k8s中的服务(包括zuul)都配置http就绪探针，以保证服务完全启动后才接收流量。\n\n问题3，k8s内置支持服务发现和负载均衡，客户端可以不用ribbon&#47;feign组合，可以直接用裸http进行调用，k8s底层会自动做负载均衡。\n\n关于就绪探针配置可以参考k8s官方文档：\nhttps:&#47;&#47;kubernetes.io&#47;docs&#47;tasks&#47;configure-pod-container&#47;configure-liveness-readiness-startup-probes&#47;\n\n另外我的B站空间有k8s微服务实践视频课程：\nhttps:&#47;&#47;space.bilibili.com&#47;518029478&#47;channel&#47;index","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1606230461,"ip_address":"","comment_id":263289,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师，您好！\n问题1:\n我在zuul+k8s整合的时候，弃用了Eureka，使用的k8s的负载均衡；\n遇到一个问题，zuul经常会出现懒加载问题，（即一段时间不访问，第一次查询就会出现慢查询5s，但是第二次以后就是正常几十ms了），尝试想改成饥饿查询，发现饥饿模式只是针对eureka的ribbon\nzuul的配置\nzuul:\n  ribbon:\n    eager-load:\n      enabled: true\n\n微服务也有同样的问题，与k8s整合，如果使用feign的方式调用，如下配置也会有超时直接熔断的情况出现，\n提示com.netflix.hystrix.exception.HystrixTimeoutException: null，进入了feign的错误回退机制。\nribbon:\n  eager-load:\n    enabled: true\n    clients: user-service\n\n\n\nzuul调用微服务、微服务之间的调用，在使用feign的时候，    \n用的k8s的service-name，service-name又没有被注册到zuul的ribbon上下文（微服务之间的调用也是）\n该如何解决这个懒加载问题？\n\n\n问题2:\n如果zuul该问题解决不了，是不是我该考虑使用Spring cloud gateway来做网关，Spring cloud gateway是不是没有该问题？\n\n\n问题3:\n用上k8s来做负载均衡了，是不是微服务之间的调用直接使用oAuth2RestTemplate来远程调用接口，从而弃用基于ribbon的feign调用方式？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510139,"discussion_content":"关于第1/2个问题，k8s支持liveness和readiness probe，其中readiness probe是就绪探针，如果配置了就绪探针，那么pod启动时候，只要就绪探针测试不通过，k8s就不会给这个pod发送流量，所以你可以给k8s中的服务(包括zuul)都配置http就绪探针，以保证服务完全启动后才接收流量。\n\n问题3，k8s内置支持服务发现和负载均衡，客户端可以不用ribbon/feign组合，可以直接用裸http进行调用，k8s底层会自动做负载均衡。\n\n关于就绪探针配置可以参考k8s官方文档：\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\n\n另外我的B站空间有k8s微服务实践视频课程：\nhttps://space.bilibili.com/518029478/channel/index","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606230461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119657,"user_name":"下一道彩虹","can_delete":false,"product_type":"c3","uid":1066644,"ip_address":"","ucode":"6F286504A9BCD8","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/94/ca15724a.jpg","comment_is_top":false,"comment_ctime":1564647636,"is_pvip":false,"replies":[{"id":43923,"content":"对，我的意思是spring cloud gateway属于初期产品，出来没有几年，目前文档案例都不多，我认为其功能代码都还不够稳定，还在不断迭代改进中。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1564673644,"ip_address":"","comment_id":119657,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"杨波老师，你好，看到老师列的几种网关产品中，spring cloud gateway是2016年后期推出来，时间挺靠后的，但老师为什么将其定义为早期产品？根据老师解释是说这里的坑还没有填完。是否可以理解为目前spring cloud gateway 成熟度和稳定性上不够，处于产品初期？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461001,"discussion_content":"对，我的意思是spring cloud gateway属于初期产品，出来没有几年，目前文档案例都不多，我认为其功能代码都还不够稳定，还在不断迭代改进中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564673644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264033,"user_name":"龙彦极客","can_delete":false,"product_type":"c3","uid":2272998,"ip_address":"","ucode":"20D380C00D8B05","user_header":"https://static001.geekbang.org/account/avatar/00/22/ae/e6/0c41e48d.jpg","comment_is_top":false,"comment_ctime":1606315738,"is_pvip":false,"replies":[{"id":96385,"content":"1. 首先定位到底是什么原因造成的延迟加载问题，建议把zuul的各种filter都先去掉，就留一些最简单的能支持zuul正常工作的最简单的filter(包括最简单的http client)，然后用排除法依次排查，定位到具体问题点后再想办法优化解决。\n2. k8s中的就绪探针(readiness proble)解决点火问题，保证pod起来后已经正常工作，k8s可以将流量打到pod上，这个是初次接入流量有效。另外k8s还有liveness proble，用来确保pod是活的，如果死了k8s就会重启新的pod，liveness probe在应用服务期间是一直工作的。如果上面1无法解决你的问题，可以临时考虑用liveness probe定期激活你的zuul（注意合理配置检测间隔和超时时间），实现类似保活keep alive的功能，但这个只能算是一个临时的workaround，最好还是要通过上面的1定位问题才能彻底解决。\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1606835299,"ip_address":"","comment_id":264033,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"我出现了隔一段时间访问zuul就会出现延迟懒加载后面微服务的问题，再继续访问就正常；\n过一段时间又延迟加载。它是一段时间不访问，就出现间隙性的延迟加载。\nk8s的就绪探针是不是只能解决初次流量接入的时候的就绪？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510393,"discussion_content":"1. 首先定位到底是什么原因造成的延迟加载问题，建议把zuul的各种filter都先去掉，就留一些最简单的能支持zuul正常工作的最简单的filter(包括最简单的http client)，然后用排除法依次排查，定位到具体问题点后再想办法优化解决。\n2. k8s中的就绪探针(readiness proble)解决点火问题，保证pod起来后已经正常工作，k8s可以将流量打到pod上，这个是初次接入流量有效。另外k8s还有liveness proble，用来确保pod是活的，如果死了k8s就会重启新的pod，liveness probe在应用服务期间是一直工作的。如果上面1无法解决你的问题，可以临时考虑用liveness probe定期激活你的zuul（注意合理配置检测间隔和超时时间），实现类似保活keep alive的功能，但这个只能算是一个临时的workaround，最好还是要通过上面的1定位问题才能彻底解决。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606835299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}