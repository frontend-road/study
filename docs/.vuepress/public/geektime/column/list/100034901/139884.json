{"id":139884,"title":"13 | HTTP Tunnel：复杂网络下消息通道高可用设计的思考","content":"<p>你好，我是袁武林。</p><p>在<a href=\"https://time.geekbang.org/column/article/127872\">第1讲“架构与特性：一个完整的IM系统是怎样的？”</a>中，我有讲到即时消息系统中非常重要的几个特性：实时性、可靠性、一致性、安全性。实际上，这些特性的实现大部分依赖于通道层的稳定和高可用。</p><p>对于即时消息系统来说，消息的通道主要承载两部分流量：一部分是用户发出的消息或者触发的行为，我们称为<strong>上行消息</strong>；一部分是服务端主动下推的消息和信令，我们称为<strong>下行消息</strong>。</p><p>由此可见，消息通道如果不稳定，一来会影响用户发送消息的成功率和体验，二来也会影响消息的下推，导致用户没法实时收到消息。</p><p>那么，在面对如何保障消息通道的高可用这一问题时，业界有哪些比较常用的优化手段呢？</p><h2>让消息通道能连得上</h2><p>要保障消息通道的高可用，最基本的是要让通道能随时连得上。不过你可能会觉得，这看起来好像挺简单的，不就是申请个外网虚拟IP，把接入层服务器挂上去，然后通过域名暴露出去就行了吗？</p><p>但实际上，这个“连得上”有时真正做起来却不是那么容易的，主要原因在于用户的网络情况复杂性高。比如，有的用户走2G网络来连，有的通过HTTP代理来连，还有的会出现DNS解析服务被封的情况，诸如此类。</p><p>此外，移动运营商各种比较奇怪的限制也会导致连通性不佳的问题。因此，要想你的通道能让用户随时都连得上，还需要做一些额外的优化。</p><!-- [[[read_end]]] --><h3>多端口访问</h3><p>首先就是端口的连通性问题。</p><p>计算机端口范围是0 ~ 65535，主要分成三大类：公认端口（0 ~ 1023）、注册端口（1024 ~ 49151）、动态或私有端口（49152 ~ 65535）。</p><p>虽然理论上大部分公认端口和注册端口都可以在外网暴露，但实际上，由于移动网管代理的端口限制，以及一些网管软件为了控制安全风险，只允许访问某些端口，因此大部分端口都存在连通性的风险。</p><p>目前，业界确认比较安全的端口基本上只有80、8080、443、14000这几个。因此如果开发一个外网服务，我们应当尽量选用这几个端口来对外进行暴露，确保可连通性。</p><p>此外，还可以通过同时暴露这几个端口中的某几个，来进一步提升可连通性。当其中一个端口出现连通性问题时，另外的端口还可以作为Failover端口，当作备用端口来连接。</p><h3>HTTP Tunnel</h3><p>除了端口上的连通性问题，由于防火墙访问规则限制的问题，或者通过某些代理上网的用户，还存在某些协议不支持的问题。</p><p>比如，一些公司或者酒店的网络代理只允许通过HTTP协议访问外网（PS：早期通过CMWAP接入点上网也有这个限制，不过在2011年后，随着CMWAP和CMNET的接入点融合，这个问题得到了解决），这样即时消息系统中，通过TCP或者UDP实现的私有协议，就没法通过网络代理的校验，也会导致连不上的问题。</p><p>这种场景，我们可以通过HTTP Tunnel的方式来对网络代理进行穿透。</p><p>所谓HTTP Tunnel，其实就是通过HTTP协议，来封装其他由于网络原因不兼容的协议（比如TCP私有协议）。</p><p>这样不仅解决了网络协议连通性问题，而且因为HTTP Tunnel也只是在原来的私有协议内容最外层做了最轻量的HTTP封装（HTTP  Body内容就是二进制的私有协议），所以协议解析时也基本没有额外的代价。</p><h3>多接入点IP列表</h3><p>在<a href=\"https://time.geekbang.org/column/article/132434\">第6讲“HttpDNS和TLS：你的消息聊天真的安全吗？”</a>中讲消息通道安全性的时候，我就有提到，通过HttpDNS能解决DNS劫持的问题。</p><p>其实，借助HttpDNS，我们还能通过返回多个接入点IP来解决连通性的问题，后续一个连接失败就尝试下一个，这样就相当于给我们提供了一个接入点的Failover机制。</p><p>同时，为了防止通过HTTP请求DNS时出现失败或者超时的问题，我们还可以在客户端进行接入点的预埋。</p><p>比如，预埋一个域名和几个常用的接入点IP，用这个作为请求接入最后的兜底策略。当然，这些预埋的域名和接入点IP一般需要尽量保证稳定性，如果有变动，需要及时预埋到新版App中。</p><h2>让消息通道连得快</h2><p>解决了通道连得上的问题，接下来我们需要考虑的就是怎么让接入方能连得快。这里有两种实现方式：一个是通过解决跨网延迟来避免通道连接过慢，另一个可以通过跑马竞速来选择速度最快的通道进行接入。</p><h3>解决跨网延迟</h3><p>同样在<a href=\"https://time.geekbang.org/column/article/132434\">第6讲</a>中有提到，由于运营商跨网延迟的问题，我们希望能尽量让某一个运营商的用户，通过托管在接入了这个运营商专线的机房接入点，来接入网络。因此，要让用户连得快，首先要求我们需要有多运营商机房的接入点；其次，要避免运营商DNS解析转发和NAT导致接入IP被解析到其他运营商的问题。</p><p>第一个多运营商机房的要求比较好实现，基本只是成本方面的投入，目前很多IDC机房都支持多线运营商接入。</p><p>第二个问题，我们可以通过之前讲到的HttpDNS来解决。HttpDNS能直接获取到用户的出口网关IP，调度更精准，而且绕过了运营商的LocalDNS，不会出现DNS解析转发导致错误调度的问题。</p><h3>跑马竞速</h3><p>除了避免跨网导致通道连接慢的问题之外，对于返回的多个接入点IP，实际上由于用户上网地点不同和路由规则不同等原因，连接接入点IP时，延迟也是不一样的。</p><p>因此，我们还可以通过跑马竞速的方式，来动态调整每一个用户优先连接的接入点IP。所谓的“跑马竞速”，你可以理解为类似赛马一样，我们一次放出多匹马参与比赛，最终跑得最快的马胜出。</p><p>App终端会对返回的接入点IP列表中的所有IP进行跑马测试，并将测速结果上报给服务端，服务端根据这个测速结果，结合后端接入服务器的负载，来动态调整接入点IP列表的顺序，让用户优先选用速度更快的接入点。</p><p>这里我举一个简单的接入点跑马竞速实现的例子：客户端在启动时，通过HttpDNS服务获取到多个接入点VIP1、VIP2和VIP3，此时客户端针对这3个VIP进行并发测速（一般可以通过访问一个固定大小的静态页面来实现），根据每个VIP的整体响应耗时来决定后续正式的连接使用哪个VIP。这里，由于VIP2响应耗时最少，最后客户端会选择使用VIP2来进行接入。这个过程你可以参考下图。</p><p><img src=\"https://static001.geekbang.org/resource/image/09/8a/0968508d66102a8a495a407ca54a118a.png?wh=1142*880\" alt=\"\"></p><h2>让消息通道保持稳定</h2><p>解决了消息通道连得上和连得快的问题，另一个提高消息通道可用性的重要手段是让通道能尽量保持稳定。那么，都有哪些因素会导致消息通道不稳定呢？</p><h3>通道和业务解耦</h3><p>我们知道，对于通道中收发的消息会进行很多业务逻辑的操作，比如消息存储、加未读、版本兼容逻辑等。随着需求的不断迭代和新功能的增加，可能还会新增业务协议或者修改原有业务协议的字段，这些变更都是紧随业务变化的，相对会比较频繁。</p><p>但是在即时消息系统中，消息的收发是严重依赖长连接通道的，如果我们的通道层需要跟随业务的变化而不断调整，那么就会导致通道服务也需要频繁地上线、重启。这些操作会让已经连到通道机器的用户连接断开，虽然客户端一般都会有断线重连的机制，但是频繁地断连也会降低消息收发的成功率和用户体验。</p><p>因此，要提高消息通道的稳定性，我们要从架构上对通道层进行业务解耦，通道层只负责网络连接管理和通用的逻辑处理。</p><p>比如，用户和连接的映射维护、通信协议的编解码、建连和断连逻辑处理、ACK包和心跳包处理等，将变化较大的业务逻辑下沉到后端的业务处理层。这样不管业务怎么变动，我们的通道网关服务都不需要跟着变更，稳定性也会更好。</p><h3>上下行通道隔离</h3><p>除了让通道层和业务隔离，面对消息下推压力比较大的场景，还可以对上下行通道进行拆分隔离。</p><p>比如对于直播互动的场景，下推消息由于扇出大，因此当遇到大型直播的时候下行通道的压力会加大，虽然可以通过限流、降级、扩容等方式来缓解，但在这时，系统的整体负载和流量都是比较大的。</p><p>这种场景下，我们可以对上下行通道进行拆分隔离，用户上行的消息和行为通过一个短连通道发送到服务端。这样既能避免客户端维护多个长连接的开销，也能解决上行通道被下推消息影响的问题。</p><p>想要做进一步的优化，我们还可以让这个短连接不是每一次发送完就断开，而是支持一定时间的空闲而不断开（比如2分钟），这样对于用户连续发消息的情况，不需要每次再有重新建连的开销，用户体验也会更好一些。</p><p>下面画了一个图来简单描述下如何对上下行通道进行拆分隔离：</p><p><img src=\"https://static001.geekbang.org/resource/image/4c/b4/4c32594630ae9c927adbc9cbb54aa6b4.png?wh=1024*768\" alt=\"\"></p><p>用户A和用户B分别都通过接入查询服务来获取最优接入点，用户A通过上行通道的短连接网关来发送消息，发送的消息在上行业务处理服务进行存储、加未读等业务操作；然后通过消息队列把这条消息给到下行通道，下行分发逻辑服务查询用户B的在线状态等信息，并对消息进行必要的推送准备处理（比如版本兼容处理）；接着把消息给到用户B的长连接所在的长连网关机器，长连网关机器再将消息推送到用户B的设备中。</p><p>这样，我们的上下行通道就通过消息队列的方式进行了隔离和解耦。</p><h3>独立多媒体上传下载</h3><p>对于图片、视频等多媒体消息，由于数据传输量一般都比较大，如果也和普通文本消息收发的通道放在一条连接里，可能会导致消息收发通道出现阻塞，因此我们一般会开辟新的连接通道来传输二进制的文件流。这种优化方式除了能保护消息收发的核心通道，也能缩短上传下载的链路，提高媒体消息收发的性能。针对多媒体消息的整体上传下载的优化，我们在接下来的14和15篇中会详细讲解，这里先不做展开了。</p><h2>小结</h2><p>我们简单回顾一下今天的课程内容。这节课我介绍了一下消息通道在复杂网络情况下，会出现连通性、延迟问题，以及在连接稳定性等方面容易出现连不上、速度慢、连接不稳定的问题，通过分析这些问题出现的具体原因，有针对性地提出了解决这些问题的办法。</p><ul>\n<li><strong>在解决“通道连不上”的问题上，</strong>我们可以通过暴露多个业界验证过比较安全的连接端口，来解决端口连通性问题；通过HTTP Tunnel，来解决某些网络情况下只允许HTTP协议的数据传输的问题；通过HttpDNS和客户端预埋的方式，提供多个可选的通道接入点，让某些接入点在连不上时还能尝试其他接入点。</li>\n<li><strong>在解决“通道连接慢”的问题上，</strong>我们可以通过支持多运营商机房接入点，来避免用户的跨运营商网络访问；此外，对于提供的多接入点，客户端还可以通过“跑马竞速”的方式优先使用连接速度更快的接入点来访问。</li>\n<li><strong>在解决“通道不稳定”的问题上，</strong>我们主要从服务端的架构设计着手，让我们的通道层服务和变化频繁的业务进行解耦，避免业务频繁变动导致通道层服务不稳定；对于消息下行通道压力大的业务场景，还可以隔离消息上下行通道，避免消息的上行被压力大的下行通道所影响；另外，将多媒体的上传下载通道和消息收发的核心通道进行隔离，避免传输量大的多媒体消息造成通道的阻塞，影响消息收发。</li>\n</ul><p>面对复杂的移动网络场景，由于不可控因素实在太多，稍不注意我们就容易踩到这样或者那样的坑。比如，我以前的业务里，曾经就出现过由于对外暴露的接入端口不是常见端口，导致很多用户连接不上的情况。但是，通过逐步的摸索和踩坑，也积累了针对移动网络复杂环境下的诸多经验，希望这些经验能够帮助你以后尽量避免出现同样的问题。</p><p>最后，给你留一道思考题：<strong>上下行通道隔离能够隔离保护我们的消息接收和消息发送，那么通道隔离会不会带来一些负面影响呢？</strong></p><p>以上就是今天课程的内容，欢迎你给我留言，我们可以在留言区一起讨论。感谢你的收听，我们下期再见。</p><p></p>","comments":[{"had_liked":false,"id":136143,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1569373026,"is_pvip":false,"replies":[{"id":"52234","content":"嗯，如果是通道隔离的话，针对上行通道和下行通道都需要进行接入点最优化选择。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569412818,"ip_address":"","comment_id":136143,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48814013282","product_id":100034901,"comment_content":"假如现在有用户A和B，以及三个接入节点S1，S2和S3，A给B发消息。A和B都查询最优接入节点，分别对应S1和S2节点。A–＞S1最优没问题，但S2–＞B一定是最优的吗？不一定，上下行通道隔离后，查询最优节点是客户端给节点发消息，代表的是该节点的上行通道是最优的，并不代表节点到客户端的下行通道是最优的。","like_count":12,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468479,"discussion_content":"嗯，如果是通道隔离的话，针对上行通道和下行通道都需要进行接入点最优化选择。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569412818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136142,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1569372856,"is_pvip":false,"replies":[{"id":"52233","content":"1. 在消息下推数据量持续很高时，tcp链路的稳定性会下降，拥塞机制可能会导致消息的发送也被阻塞，另外就是你提到的高并发推送压力下服务端处理能力也容易出现瓶颈。<br>2. HTTP Tunnel一般用在短连接发消息的场景里。<br>3. 通道和业务隔离可以理解为 维护连接的服务和业务逻辑服务分开，连接映射的维护是在连接层处理的，但不一定就在连接服务里，比如可以维护在中央的资源里，方便其他连接服务集群里的机器来共享使用。<br><br>在同一个通道里也不一定是原子的呀，发送成功了也可能推送失败。通道隔离的一个问题在于如果上行通道通过短连接实现的话，可能会存在发消息时才建立连接的情况（为了简单，没有心跳机制，一段时间不发消息就会强制断开），所以用户体验上会差一些。另外，额外的通道部署上也有额外的维护开销。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569412733,"ip_address":"","comment_id":136142,"utype":1}],"discussion_count":7,"race_medal":0,"score":"23044209336","product_id":100034901,"comment_content":"老师，有3点不明白！<br>1:基于tcp的长链接不是全双工吗？为什么下行会影响上行呢？我的理解是，这里的影响不是通道影响，其实是服务器处理能力的影响，是这样吗？<br>2:HTTP Tunnel这个东西确实没用过！如果他是基于http的短链接，那它也没法实现一个完整的即时消息系统呀！比如他们拿不到服务器的推送消息！<br>3:在老师说的把通道和业务隔离上，我明白确实需要这样优化！有一点不明白的是，这里的通道和服务是不是可以理解为链接服务和业务逻辑服务！比如链接服务只管链接，链接服务和业务逻辑通过消息队列解耦！但是如果是这样的话，用户的链接映射维护是在链接服务中呀！不在业务层！<br>老师的问题，我感觉因为隔离开了，所以就不是“原子”的了，那么就可能存在能发看不到，能看到发不出去的情况","like_count":6,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468478,"discussion_content":"1. 在消息下推数据量持续很高时，tcp链路的稳定性会下降，拥塞机制可能会导致消息的发送也被阻塞，另外就是你提到的高并发推送压力下服务端处理能力也容易出现瓶颈。\n2. HTTP Tunnel一般用在短连接发消息的场景里。\n3. 通道和业务隔离可以理解为 维护连接的服务和业务逻辑服务分开，连接映射的维护是在连接层处理的，但不一定就在连接服务里，比如可以维护在中央的资源里，方便其他连接服务集群里的机器来共享使用。\n\n在同一个通道里也不一定是原子的呀，发送成功了也可能推送失败。通道隔离的一个问题在于如果上行通道通过短连接实现的话，可能会存在发消息时才建立连接的情况（为了简单，没有心跳机制，一段时间不发消息就会强制断开），所以用户体验上会差一些。另外，额外的通道部署上也有额外的维护开销。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569412733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1312485,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DwZUsQhia0wIWNEfeGZ2srQWzVC04JjLFDwgmicpnNF3mUPdRJD6U6vviceJqMxGYUGtxaiaZWltyNtQ5fZhia7YN3w/132","nickname":"榴芒科技","note":"","ucode":"EC297012B1B942","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":62067,"discussion_content":"我也认为，你不保持长连接 客户端怎么断线重连？既然服务端已经保持长连接了，又是全双工的 ，真的想不明白，你客户端为啥就不复用那个连接？还又建立一个连接","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574815882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1093794,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b0/a2/3757fc18.jpg","nickname":"鲁大喵","note":"","ucode":"BC880649611A08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310010,"discussion_content":"我觉得老师在这个地方的理解有待商榷。多一个短链接，相当于是两个链接了，如果服务端维护长链接有压力，为什么不复用同一个而是另开一个？这里无非是增加了个一个短链接服务器，把上行打给短链接服务器了，不相当于扩容吗，那直接扩长链接服务器，而且长链接层一般都是只做寻路和转发上下游数据，除了内存服务器压力应该不大的，上下行一条长链接想不出哪里会有问题。tcp全双工为什么接受缓冲阻塞会影响发送缓冲呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601559138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1158393,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ac/f9/5e11442f.jpg","nickname":"阿怪是个笨小孩","note":"","ucode":"C23C6D41301CCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287552,"discussion_content":"1:基于tcp的长链接不是全双工吗？为什么下行会影响上行呢？我的理解是，这里的影响不是通道影响，其实是服务器处理能力的影响，是这样吗？\n您的这个问题，我是这样理解的，通俗的说就是所有用户在发消息时，都采用例如http来投递消息到服务器，此时是建立的新连接；当服务器收到消息时，下发给接收方使用的是长连接下推消息；如果用户发消息和收消息使用的都是长连接，可能会影响到用户发消息的操作，由于tcp的拥塞控制，在用户收到大量消息时，可能会影响到tcp连接的稳定，导致影响在此链路上发消息的性能；我是这样理解的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593481237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1332557,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","nickname":"饭团","note":"","ucode":"E24F240CC91BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21021,"discussion_content":"哦，明白了老师，之前一直以为阻塞窗口是对于发送方而言的！\n另外突然想到，老师说的链接映射可能和我说的不是一个！老师说的链接映射 应该是说用户1是通过链接服务器1链接的。用户2是通过链接服务器2链接的 这么一个概念是吧！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569413711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376654,"avatar":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","nickname":"一路向北","note":"","ucode":"54D8F1687AE1ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20965,"discussion_content":"我替老师回答一下，不一定对，相互交流。\n1.我的理解和你一样\n2.你说的没办法实现一个完整的即时消息系统，指的是私有协议是全双工通信，而http非全双工，被http包装后怕是无法实现全双工。我想了想，觉得不影响全双工的行为。只是在发送数据时加了一层包装，只要收发双方协商好，就完全不是问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569407305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1332557,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","nickname":"饭团","note":"","ucode":"E24F240CC91BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1376654,"avatar":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","nickname":"一路向北","note":"","ucode":"54D8F1687AE1ED","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20974,"discussion_content":"哦，是说用http保持一个长链接是吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569408364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":20965,"ip_address":""},"score":20974,"extra":""}]}]},{"had_liked":false,"id":147238,"user_name":"唯我天棋","can_delete":false,"product_type":"c1","uid":1015960,"ip_address":"","ucode":"B925246C92727A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/98/5591d99d.jpg","comment_is_top":false,"comment_ctime":1572850665,"is_pvip":true,"replies":[{"id":"57201","content":"如上面回复：上行通道的连接不需要心跳，连接的保持对系统消耗是非常小的，这也是为什么上行通道没有再维护另一个长连的原因，一种折中的方式。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573035196,"ip_address":"","comment_id":147238,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14457752553","product_id":100034901,"comment_content":"还有个问题，为什么上行通道不直接使用长连接，而要使用长连接。","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473214,"discussion_content":"如上面回复：上行通道的连接不需要心跳，连接的保持对系统消耗是非常小的，这也是为什么上行通道没有再维护另一个长连的原因，一种折中的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573035196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138948,"user_name":"时隐时现","can_delete":false,"product_type":"c1","uid":1111899,"ip_address":"","ucode":"DA4D622FF84920","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","comment_is_top":false,"comment_ctime":1570515087,"is_pvip":false,"replies":[{"id":"53827","content":"上下行通道分离还可以避免上行发消息操作被下行push消息所影响，比如直播场景中下行消息下推量巨大。维护长连接的开销除了连接保持，还有一系列的比如心跳发送等必备的行为，对于用户流量，电量不是很友好。这里的短连接也不一定是每次都需要重新建连，比如说可以保持idle几分钟，这样即能解决频繁消息发送复用一个连接的问题，也不需要维护一个真正的长连接。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570678298,"ip_address":"","comment_id":138948,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160449679","product_id":100034901,"comment_content":"上下行通道隔离，消息发送方采用短链接，除了基于http tunnel不适合长连接的考量，还有其他因素吗？<br>作者提到可避免客户端维护多个长连接的开销，可是单纯的tcp连接应该不会耗费多少资源，和每次都采用短连接相比，还能接受连接不断的创建和关闭的代价。","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469712,"discussion_content":"上下行通道分离还可以避免上行发消息操作被下行push消息所影响，比如直播场景中下行消息下推量巨大。维护长连接的开销除了连接保持，还有一系列的比如心跳发送等必备的行为，对于用户流量，电量不是很友好。这里的短连接也不一定是每次都需要重新建连，比如说可以保持idle几分钟，这样即能解决频繁消息发送复用一个连接的问题，也不需要维护一个真正的长连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570678298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136264,"user_name":"Z邦","can_delete":false,"product_type":"c1","uid":1207317,"ip_address":"","ucode":"7699ADF5DB4CE4","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/15/070d83ae.jpg","comment_is_top":false,"comment_ctime":1569399760,"is_pvip":false,"replies":[{"id":"52237","content":"在后面的课程中会专门降到监控这一块的内容，敬请期待。。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569413037,"ip_address":"","comment_id":136264,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159334352","product_id":100034901,"comment_content":"希望老师可以出一篇监控的文章。。感谢感谢","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468532,"discussion_content":"在后面的课程中会专门降到监控这一块的内容，敬请期待。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569413037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136110,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1569369129,"is_pvip":false,"replies":[{"id":"52232","content":"通道隔离为什么要做跟踪记录呀？实际上通道隔离的一个问题在于如果上行通道通过短连接实现的话，可能会存在发消息时才建立连接的情况（为了简单，没有心跳机制，一段时间不发消息就会强制断开），所以用户体验上会差一些。另外，额外的通道部署上也有额外的维护开销。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569412050,"ip_address":"","comment_id":136110,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10159303721","product_id":100034901,"comment_content":"通道隔离的最大问题个人觉得连接断开时机问题，比如A断开，B什么时候断开，要做跟踪记录","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468465,"discussion_content":"通道隔离为什么要做跟踪记录呀？实际上通道隔离的一个问题在于如果上行通道通过短连接实现的话，可能会存在发消息时才建立连接的情况（为了简单，没有心跳机制，一段时间不发消息就会强制断开），所以用户体验上会差一些。另外，额外的通道部署上也有额外的维护开销。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569412050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1106184,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","nickname":"钢","note":"","ucode":"A49848BF63A579","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21037,"discussion_content":"B超时断开就不需要跟踪纪录了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569414953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158391,"user_name":"Sun Fei","can_delete":false,"product_type":"c1","uid":1032631,"ip_address":"","ucode":"092EC0992050BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/b7/57f153f6.jpg","comment_is_top":false,"comment_ctime":1575363050,"is_pvip":false,"replies":[{"id":"60941","content":"消息的实时性和是否拆分成两个通道关系不是很大，即使是在同一个长连通道里，服务端如果不能及时处理收到的消息，也会消息在服务端堆积，没办法快速投递。所以要解决的还是要提升服务端消息路由分发的能力。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1575626683,"ip_address":"","comment_id":158391,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870330346","product_id":100034901,"comment_content":"两个通道隔离之后，如果消息队列里消息比较多，会不会影响消息的实时性？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476703,"discussion_content":"消息的实时性和是否拆分成两个通道关系不是很大，即使是在同一个长连通道里，服务端如果不能及时处理收到的消息，也会消息在服务端堆积，没办法快速投递。所以要解决的还是要提升服务端消息路由分发的能力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575626683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150033,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1573450711,"is_pvip":false,"replies":[{"id":"57786","content":"1.短连接可以是tcp协议的呀，idle几分钟的主要目的是为了避免发消息这些行为需要每次建连影响体验同时也降低长连维护的开销。<br>2.一般连接层尽量隔开，因为分成两个连接的目的就是避免互相影响。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573478067,"ip_address":"","comment_id":150033,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868418007","product_id":100034901,"comment_content":"问题1：短链接怎么idle几分钟呢？http不是无状态的吗？<br>问题2：如果上行通道和下行通道隔离，是不是2者对应两个不同的集群呢？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474043,"discussion_content":"1.短连接可以是tcp协议的呀，idle几分钟的主要目的是为了避免发消息这些行为需要每次建连影响体验同时也降低长连维护的开销。\n2.一般连接层尽量隔开，因为分成两个连接的目的就是避免互相影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573478067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136183,"user_name":"那时刻","can_delete":false,"product_type":"c1","uid":1150927,"ip_address":"","ucode":"B0D150856C3A4A","user_header":"https://static001.geekbang.org/account/avatar/00/11/8f/cf/890f82d6.jpg","comment_is_top":false,"comment_ctime":1569379048,"is_pvip":false,"replies":[{"id":"52236","content":"实际上不冲突，服务器可以结合自身的压力按不同等级来返回排序的IP列表。客户端优先选择压力等级最小的多个IP进行竞速。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569413001,"ip_address":"","comment_id":136183,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5864346344","product_id":100034901,"comment_content":"既然客户端可以通过跑马竞速，选出一个最快ip链接。为什么服务器要返回一个排序IP列表？客户端还依据这个列表顺序进行判断么？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468497,"discussion_content":"实际上不冲突，服务器可以结合自身的压力按不同等级来返回排序的IP列表。客户端优先选择压力等级最小的多个IP进行竞速。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569413001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1376654,"avatar":"https://static001.geekbang.org/account/avatar/00/15/01/8e/48e7c474.jpg","nickname":"一路向北","note":"","ucode":"54D8F1687AE1ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20955,"discussion_content":"原文中说，还要结合服务端的负载，是站在服务端的角度综合考虑，给客户端的建议，这样整体最合理。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569405413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295239,"user_name":"极客雷","can_delete":false,"product_type":"c1","uid":1041465,"ip_address":"","ucode":"0DBAC4CB9C7BCD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e4/39/a06ade33.jpg","comment_is_top":false,"comment_ctime":1622315203,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1622315203","product_id":100034901,"comment_content":"考一下讲师：知道为啥14000是安全的吗","like_count":0,"discussions":[{"author":{"id":2310150,"avatar":"https://static001.geekbang.org/account/avatar/00/23/40/06/1fe81d81.jpg","nickname":"一只特立独行的猪","note":"","ucode":"C2D33B29A405D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578674,"discussion_content":"请教一下为什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656937826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1252940,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1e/4c/10174727.jpg","nickname":"xinHAOr","note":"","ucode":"C37EC11770EF24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378107,"discussion_content":"你说说，求教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623056922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285100,"user_name":"xie","can_delete":false,"product_type":"c1","uid":1016828,"ip_address":"","ucode":"48B356C3F7D99E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/icniaGmw8xiboyC25ic8l7Vf67Czx5s3XiaezApmK13hcia9U33YibpcKHq2iaJwIIoToLwZcoKQoR5dnvTILibMs4ZZ3qQ/132","comment_is_top":false,"comment_ctime":1616621119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616621119","product_id":100034901,"comment_content":"老师  可以连上的常见的端口除了你说的那几个还有吗？能否完整列一下","like_count":0},{"had_liked":false,"id":230736,"user_name":"阿怪是个笨小孩","can_delete":false,"product_type":"c1","uid":1158393,"ip_address":"","ucode":"C23C6D41301CCF","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/f9/5e11442f.jpg","comment_is_top":false,"comment_ctime":1593480372,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593480372","product_id":100034901,"comment_content":"老师您好，关于上下行通道隔离这里我没太懂，请教一下；<br>在直播互动中下推消息由于扇出大，比如按照1:9999投递，那投递消息的用户A使用短连和长连有啥区别吗？最后一张图看的有点蒙","like_count":0},{"had_liked":false,"id":228961,"user_name":"阳阳","can_delete":false,"product_type":"c1","uid":1605341,"ip_address":"","ucode":"078DD80E0ADD38","user_header":"https://static001.geekbang.org/account/avatar/00/18/7e/dd/8098a7e0.jpg","comment_is_top":false,"comment_ctime":1592871010,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592871010","product_id":100034901,"comment_content":"“我们可以通过暴露多个业界验证过比较安全的连接端口”这个比较安全是从什么方面考虑的？既然端口大家都知道这些比较安全，恶意攻击的人不是更加方便去攻击了吗？还是说安全是指这几个端口比较稳定？","like_count":0},{"had_liked":false,"id":158842,"user_name":"分清云淡","can_delete":false,"product_type":"c1","uid":1269873,"ip_address":"","ucode":"7045AE6BF72D31","user_header":"https://static001.geekbang.org/account/avatar/00/13/60/71/895ee6cf.jpg","comment_is_top":false,"comment_ctime":1575463467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575463467","product_id":100034901,"comment_content":"主要应该是 上行下行 也就是输入输出之间的同步问题 同时如果按照文中的设计 单个 长链接 上行 如何做到上行之间的有序 去重 重发 就会很复杂 这样 输入之间 输入输出之间 就需要考虑更多的问题","like_count":0},{"had_liked":false,"id":147237,"user_name":"唯我天棋","can_delete":false,"product_type":"c1","uid":1015960,"ip_address":"","ucode":"B925246C92727A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/98/5591d99d.jpg","comment_is_top":false,"comment_ctime":1572850575,"is_pvip":true,"replies":[{"id":"57200","content":"上行通道的连接不需要心跳，连接的保持对系统消耗是非常小的，这也是为什么上行通道没有再维护另一个长连的原因，一种折中的方式。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573035139,"ip_address":"","comment_id":147237,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572850575","product_id":100034901,"comment_content":"上下行通道隔离能够隔离保护我们的消息接收和消息发送，那么通道隔离会不会带来一些负面影响呢？<br><br>1.需要维护两个连接，消耗一定客户端性能。<br>","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473213,"discussion_content":"上行通道的连接不需要心跳，连接的保持对系统消耗是非常小的，这也是为什么上行通道没有再维护另一个长连的原因，一种折中的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573035139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136632,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1569485740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569485740","product_id":100034901,"comment_content":"老师在第十课的&lt;自动智能扩缩容：直播互动场景中峰值流量的应对&gt;中提到关于上下隔离的优点&quot;能够隔离各自上行操作，避免下行推送通道产生影响，轻量、独立的长连接服务容易扩容。&quot;;坑没踩过，准备等十一长假开始自己写一个IM并在特定范围内试用-到时候就知道有哪些坑了。<br>      进阶篇已经用到了不少基础篇和场景篇的知识：属于一边学习一边复习过程吧；期待老师的后续分享。","like_count":0},{"had_liked":false,"id":136497,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1569460583,"is_pvip":false,"replies":[{"id":"52528","content":"我们自己的业务中目前只用于上行短连通道中。理论上也是可以用在下行通道的，因为底层也都是基于TCP的，但是走http代理的问题在于连接一般很难保证不被代理断开，所以维护住一个真正的长连接比较困难。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569572992,"ip_address":"","comment_id":136497,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569460583","product_id":100034901,"comment_content":"HTTP Tunnel在下行通道也会使用吗，如果存在代理的情况，下行通道发送给代理的数据如何再转发给客户端","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468668,"discussion_content":"我们自己的业务中目前只用于上行短连通道中。理论上也是可以用在下行通道的，因为底层也都是基于TCP的，但是走http代理的问题在于连接一般很难保证不被代理断开，所以维护住一个真正的长连接比较困难。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569572992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}