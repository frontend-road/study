{"id":86799,"title":"23 | 协程机制","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":101211,"user_name":"Eden","can_delete":false,"product_type":"c3","uid":1197733,"ip_address":"","ucode":"BE0AD731E5EF5E","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/a5/51449de6.jpg","comment_is_top":false,"comment_ctime":1559742325,"is_pvip":false,"replies":[{"id":36525,"content":"非常感谢！","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1559785350,"ip_address":"","comment_id":101211,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"初学语言，使用中文解释，方便理解\n```\n&#47;&#47; M -- System Thread 「系统线程」\n&#47;&#47; P --  Processor 「Go 语言的协程处理器」\n&#47;&#47; G --  Goroutine 「协程」\nfunc TestGroutine(t *testing.T) {\n\tfor i := 0; i &lt; 10; i++ {\n\t\t&#47;&#47; fmt.Println(i)\n\t\tgo func(par int) { &#47;&#47; 使用go创建协程,但是需要注意的是：协程函数的par作为参数是外部i的数据拷贝\n\t\t\tfmt.Println(par)\n\t\t}(i)\n\t}\n\ttime.Sleep(time.Millisecond * 50)\n}\n```","like_count":11,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452853,"discussion_content":"非常感谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559785350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47252,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573303663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78487,"user_name":"序灬曲","can_delete":false,"product_type":"c3","uid":1464105,"ip_address":"","ucode":"8F8CD265A18843","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJLtaicxTJS52cX1VAP34ibp5XcEZEiaa1aWEMfhj8b20lgTBsjngKwsxxISDBN0gaicnfXW5LSjrCBw/132","comment_is_top":false,"comment_ctime":1553157928,"is_pvip":false,"replies":[{"id":28584,"content":"这个是因为counter不是线程安全的，要用sync.Mutex的lock来同步，参考视频","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1553179955,"ip_address":"","comment_id":78487,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，我的代码如下，但是每次运行结果都不准确\nvar wg sync.WaitGroup\nfunc TestIncreaseCounter(t *testing.T){\n\tcounter := 0\n\tfor i:=0;i&lt;1000 ;i++  {\n\t\twg.Add(1)\n\t\tgo func() {\n\t\t\tcounter++\n\t\t\twg.Done()\n\t\t}()\n\t}\n\twg.Wait()\n\tt.Log(&quot;Counter = &quot; + strconv.Itoa(counter))\n}\n找了半天错误，我还是找不到为什么错误，请老师指导","like_count":7,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444116,"discussion_content":"这个是因为counter不是线程安全的，要用sync.Mutex的lock来同步，参考视频","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553179955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218937,"avatar":"https://static001.geekbang.org/account/avatar/00/12/99/79/74d4f24f.jpg","nickname":"anker","note":"","ucode":"6EDF1FB9D45238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310219,"discussion_content":"用sync.Mutex 或者 atomic.Add...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601694285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96950,"user_name":"小楠zz","can_delete":false,"product_type":"c3","uid":1524793,"ip_address":"","ucode":"4FC3DB836CB31C","user_header":"https://static001.geekbang.org/account/avatar/00/17/44/39/bc5c8317.jpg","comment_is_top":false,"comment_ctime":1558546310,"is_pvip":false,"replies":[{"id":35031,"content":"go的协程本质是系统的线程调用，而Python中的协程是eventloop模型实现，所以虽然都叫协程，但并不是一个东西","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1558866806,"ip_address":"","comment_id":96950,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师你好，我想问下go的协程跟python的协程一样吗，不一样的话哪里不一样？","like_count":6,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451077,"discussion_content":"go的协程本质是系统的线程调用，而Python中的协程是eventloop模型实现，所以虽然都叫协程，但并不是一个东西","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1558866806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134694,"avatar":"https://static001.geekbang.org/account/avatar/00/11/50/66/047ee060.jpg","nickname":"Return12321","note":"","ucode":"F7A3C5ED02E1D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554046,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646196320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47250,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573303609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94063,"user_name":"静远投基","can_delete":false,"product_type":"c3","uid":1192774,"ip_address":"","ucode":"7FE6419F0CFEAD","user_header":"https://static001.geekbang.org/account/avatar/00/12/33/46/256e5728.jpg","comment_is_top":false,"comment_ctime":1557712384,"is_pvip":false,"replies":[{"id":33680,"content":"Goroutine的调度是这样的\n启动的时候，会专门创建一个线程sysmon，用来监控和管理，在内部是一个循环：\n\n1.     记录所有P的G任务计数schedtick，（schedtick会在每执行一个G任务后递增）\n\n2.     如果检查到 schedtick一直没有递增，说明这个P一直在执行同一个G任务，如果超过一定的时间，就在这个G任务的栈信息里面加一个标记\n\n3.     然后这个G任务在执行的时候，如果遇到非内联函数调用，就会检查一次这个标记，然后中断自己，把自己加到队列末尾，执行下一个G\r\n\n\n你可以试试下面这个程序，多运行一会，你就会看到切换\n\nfunc doSomething(i int) {\n\tfmt.Print(i)\n}\n\nfunc main() {\n\truntime.GOMAXPROCS(1)\n\tgo func() {\n\t\tfor {\n\t\t\tdoSomething(0)\n\n\t\t}\n\t}()\n\tfor {\n\t\tdoSomething(1)\n\n\t}\n\n}","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1557758867,"ip_address":"","comment_id":94063,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师！请教问题：我一直以为go调度不会中断持续运行中的gorouting,可下面两个例子的结果让我凌乱了\n\npackage main\n\nimport (\n\t&quot;log&quot;\n\t&quot;runtime&quot;\n)\n\nfunc main(){\n\truntime.GOMAXPROCS(1)\n\t\n\tfor{\n\t\tgo func() {\n\t\t\tlog.Println(&quot;0&quot;)\n\t\t}()\n\t\tlog.Println(&quot;1&quot;)\n\t}\n}\n这样会0，1交替输出，而\n\npackage main\n\nimport (\n\t&quot;log&quot;\n\t&quot;runtime&quot;\n)\n\nfunc main(){\n\truntime.GOMAXPROCS(1)\n\tgo func() {\n\t\tlog.Println(&quot;0&quot;)\n\t}()\n\tfor{\n\n\t\tlog.Println(&quot;1&quot;)\n\t}\n}\n只会输出1，请问gorouting 是怎样调度的？","like_count":3,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449899,"discussion_content":"Goroutine的调度是这样的\n启动的时候，会专门创建一个线程sysmon，用来监控和管理，在内部是一个循环：\n\n1.     记录所有P的G任务计数schedtick，（schedtick会在每执行一个G任务后递增）\n\n2.     如果检查到 schedtick一直没有递增，说明这个P一直在执行同一个G任务，如果超过一定的时间，就在这个G任务的栈信息里面加一个标记\n\n3.     然后这个G任务在执行的时候，如果遇到非内联函数调用，就会检查一次这个标记，然后中断自己，把自己加到队列末尾，执行下一个G\r\n\n\n你可以试试下面这个程序，多运行一会，你就会看到切换\n\nfunc doSomething(i int) {\n\tfmt.Print(i)\n}\n\nfunc main() {\n\truntime.GOMAXPROCS(1)\n\tgo func() {\n\t\tfor {\n\t\t\tdoSomething(0)\n\n\t\t}\n\t}()\n\tfor {\n\t\tdoSomething(1)\n\n\t}\n\n}","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1557758867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022129,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/b1/f89a84d0.jpg","nickname":"wu526","note":"","ucode":"69282EB175B48E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1888,"discussion_content":"输出1一次是因为，输出1的goroutine只执行了一次该goroutine就执行完成了，即该goroutine就退出了，所以就不会再输出1了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563035856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622022,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia6zEsh2u119zJicmq7wApvnricZEKiawaZicice1cOzujWdFicFwPtavlHiaVpCNgCpxBtdl7ynd3y0wkQ/132","nickname":"james_xu","note":"","ucode":"12E50291F5BA89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391925,"discussion_content":"第二个只输出是因为输出0的协程还没来得及执行程序就退出了，你可以加一个sleep就可以看到输出0了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630716226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272477,"user_name":"Geek_d586af","can_delete":false,"product_type":"c3","uid":2161180,"ip_address":"","ucode":"2966DBC6BD9B20","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jtNYcW0hUoI1RzVic1tpJ7mkh4nccicC3aaC4aicYQCy9R1RZBMSWn8qDxjvVKqca9LnWxCfsicEqeW0bUkX6Bogyg/132","comment_is_top":false,"comment_ctime":1610097059,"is_pvip":false,"replies":[{"id":99523,"content":"代码需要改成下面这样，原因我在讲座中有介绍\nfunc TestConoutines(t *testing.T)  {\n    for i:=1;i&lt;10;i++ {\n        go func(j int) {\n            fmt.Println(j)\n        }(i)\n    }\n}","user_name":"作者回复","user_name_real":"蔡超","uid":1008262,"ctime":1610891520,"ip_address":"","comment_id":272477,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"package coroutines\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;testing&quot;\n)\n\nfunc TestConoutines(t *testing.T)  {\n\tfor i:=1;i&lt;10;i++ {\n\t\tgo func() {\n\t\t\tfmt.Println(i)\n\t\t}()\n\t}\n}\n运行后有时候并不都是10\n=== RUN   TestConoutines\n8\n10\n10\n10\n10\n10\n10\n10\n--- PASS: TestConoutines (0.00s)\n10\nPASS\n\n这是什么情况呢？老师在不？能解答一下不","like_count":1,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513292,"discussion_content":"代码需要改成下面这样，原因我在讲座中有介绍\nfunc TestConoutines(t *testing.T)  {\n    for i:=1;i&amp;lt;10;i++ {\n        go func(j int) {\n            fmt.Println(j)\n        }(i)\n    }\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610891520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207160,"user_name":"贾敏","can_delete":false,"product_type":"c3","uid":1946456,"ip_address":"","ucode":"6C5B5EABA4C811","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b3/58/14e407e8.jpg","comment_is_top":false,"comment_ctime":1587018450,"is_pvip":false,"replies":[{"id":78407,"content":"对的是逻辑上，可以通过GOMAXPROCS定义","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1587777984,"ip_address":"","comment_id":207160,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"这里的 `Processor` 是指 逻辑处理器么？每个进程是不是只有一个逻辑处理器","like_count":1,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492030,"discussion_content":"对的是逻辑上，可以通过GOMAXPROCS定义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587777984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87598,"user_name":"Jason","can_delete":false,"product_type":"c3","uid":1217554,"ip_address":"","ucode":"C5A540BC5A60B9","user_header":"https://static001.geekbang.org/account/avatar/00/12/94/12/15558f28.jpg","comment_is_top":false,"comment_ctime":1555639714,"is_pvip":false,"replies":[{"id":31658,"content":"这里不是很方便输入很多文字。推荐可以看看这两篇\n\nhttps:&#47;&#47;m.imooc.com&#47;mip&#47;article&#47;42071\nhttps:&#47;&#47;studygolang.com&#47;articles&#47;11862?open_source=weibo_search","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1555813802,"ip_address":"","comment_id":87598,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，我有个疑问，既然协程的执行器会去切出阻塞的协程，为什么还需要调度器去把阻塞执行器中的任务均衡到空闲的执行器上呢？","like_count":1,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447525,"discussion_content":"这里不是很方便输入很多文字。推荐可以看看这两篇\n\nhttps://m.imooc.com/mip/article/42071\nhttps://studygolang.com/articles/11862?open_source=weibo_search","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555813802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385794,"user_name":"王云峰","can_delete":false,"product_type":"c3","uid":1421980,"ip_address":"浙江","ucode":"699E46BE31495B","user_header":"https://static001.geekbang.org/account/avatar/00/15/b2/9c/b7b9896c.jpg","comment_is_top":false,"comment_ctime":1703400235,"is_pvip":false,"replies":[{"id":140713,"content":"哈哈，技术人通病","user_name":"作者回复","user_name_real":"编辑","uid":1008262,"ctime":1704072407,"ip_address":"新加坡","comment_id":385794,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师跟我很像啊 都不善于沟通一心搞技术","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634839,"discussion_content":"哈哈，技术人通病","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704072407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299570,"user_name":"Calvin","can_delete":false,"product_type":"c3","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1624715715,"is_pvip":false,"replies":[{"id":108927,"content":"你可以调整一下sleep的时间试试","user_name":"作者回复","user_name_real":"蔡超","uid":1008262,"ctime":1625276280,"ip_address":"","comment_id":299570,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"for i := 0; i &lt; 10; i++ {\n\tgo func() {\n\t\tfmt.Println(i)\n\t}()\n\n\ttime.Sleep(time.Millisecond * 50)\n}\n\n老师，按你的代码来试，我的这段代码为什么可以正常输出 0-9 啊（不是像视频中那样都是 10）？\n我使用的 Go 版本是 1.16.5。","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522477,"discussion_content":"你可以调整一下sleep的时间试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625276280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2381003,"avatar":"https://static001.geekbang.org/account/avatar/00/24/54/cb/3be06a7d.jpg","nickname":"JooKS","note":"","ucode":"A1A5940F4E9987","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547416,"discussion_content":"time.Sleep(time.Millisecond * 50) 放错位置了啊。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642665596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2381003,"avatar":"https://static001.geekbang.org/account/avatar/00/24/54/cb/3be06a7d.jpg","nickname":"JooKS","note":"","ucode":"A1A5940F4E9987","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547497,"discussion_content":"的确是，你看的好仔细，哈哈，应该放到 for 循环体外面：\nfor i := 0; i &lt; 10; i++ {\n\tgo func() {\n\t\tfmt.Println()\n\t}()\n}\ntime.Sleep(time.Millisecond * 50)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642699217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":547416,"ip_address":"","group_id":0},"score":547497,"extra":""}]}]},{"had_liked":false,"id":103785,"user_name":"Jabir_Zhang","can_delete":false,"product_type":"c3","uid":1461978,"ip_address":"","ucode":"55BCE733F8DD25","user_header":"https://static001.geekbang.org/account/avatar/00/16/4e/da/5b347cb8.jpg","comment_is_top":false,"comment_ctime":1560509907,"is_pvip":false,"replies":[{"id":37614,"content":"是那个par的值，作为参数传人\n","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1560591088,"ip_address":"","comment_id":103785,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，您好，go func(par int) { \n            fmt.Println(par)\n        }(i)\n这最后的括号里面传参是干什么的","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454002,"discussion_content":"是那个par的值，作为参数传人\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560591088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105161,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/09/feca820a.jpg","nickname":"helloworld","note":"","ucode":"1EECCA0F43E278","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":47251,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573303623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286996,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1617719960,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"听写：\n\n协程是更轻量级的线程\n\nThread 和 Kernel Entity  如果是 1:1 的话，Kernel Entity（系统线程）由 CPU 直接调度，调度效率非常高，但是线程之间发生 Context 切换的时候，会牵扯到内核对象切换，消耗比较大。\n\n如果是 M:N 的话，那么切换的时候消耗就会小很多。\n\nProcessor 在不同的系统线程里，每个 Processor 都挂着一个准备运行的协程队列 G-G-G…… 有一个协程正在运行，协程队列依次运行。\n\nGo 启动的时候，会有一个守护线程 G0，计数，会记录每个 Processor 运行完成的协程的数量，如果发现某一个 Processor 在一段时间内没有发生变化（阻塞），就会往这个协程的任务栈里面插入一个特殊的标记，当协程运行遇到非内联函数，就会读到这个标记，将自己中断下来，插到等待协程队列的队尾，切换到其他队列的队尾。\n\n当某一个协程被系统通断了，比如 IO 需要等待的时候，Processor 会把自己加入到其他可使用的系统线程之中，继续执行其他的协程 Goroutine。当被中断的协程被唤醒，完成之后，会把自己加入到其他某一个 Processor 等待队列中，或全局等待队列当中。\n\n当协程被中断的时候，它在寄存器中的运行状态，也会保存在协程对象中；当重新开始运行的时候，就会把运行状态写回寄存器。","like_count":8},{"had_liked":false,"id":285474,"user_name":"继业(Adrian)","can_delete":false,"product_type":"c3","uid":1021147,"ip_address":"","ucode":"D9BAF5F939A2B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/94/db/4e658ce8.jpg","comment_is_top":false,"comment_ctime":1616831347,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":1,"score":3,"product_id":100024001,"comment_content":"为什么协程被中断后，processor要把自己和相应的协程队列移到别的内核去执行，对这里表示怀疑","like_count":1},{"had_liked":false,"id":183270,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c3","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1582984546,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"协程为了解决线程占用资源多、切换耗时等问题，是如何解决的呢？又会引发哪些新问题呢？\n老师讲到了一些，想对这些问题有个完整、清晰的认识，请老师多指教，谢谢！","like_count":1},{"had_liked":false,"id":83627,"user_name":"walf","can_delete":false,"product_type":"c3","uid":1246279,"ip_address":"","ucode":"648C0F941C50A5","user_header":"https://static001.geekbang.org/account/avatar/00/13/04/47/8dcb37b4.jpg","comment_is_top":false,"comment_ctime":1554686490,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"对于图例的协程机制，并不是很清晰运行的机制，能否在讲解的时候加入一些动态图示的部分。","like_count":1},{"had_liked":false,"id":78173,"user_name":"亚东","can_delete":false,"product_type":"c3","uid":1207629,"ip_address":"","ucode":"D76E7F593D6CBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/4d/ada0aa8a.jpg","comment_is_top":false,"comment_ctime":1553085043,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"怎么使用go实现高并发web系统","like_count":1},{"had_liked":false,"id":311706,"user_name":"AlexWillBeGood","can_delete":false,"product_type":"c3","uid":1505492,"ip_address":"","ucode":"6D7BB91781E38C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/exfIUlVdCpicQPc7fOI6XezUuXd7rayRia7sB2GGHGP7IEBibI6TJbQS2R0bMNejzR1odAIDFP05cWjujrmbIzzwg/132","comment_is_top":false,"comment_ctime":1631417867,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"老师，有一点不明白，当有G在IO时候，P会带着队列中所有的G去其他的线程。我之前的理解IO会使用DMA 需要CPU资源应该很少，这种情况也需要转移到其他线程吗","like_count":0},{"had_liked":false,"id":299526,"user_name":"Roy","can_delete":false,"product_type":"c3","uid":2633127,"ip_address":"","ucode":"2B1675B084D3A6","user_header":"https://static001.geekbang.org/account/avatar/00/28/2d/a7/c7b0c34e.jpg","comment_is_top":false,"comment_ctime":1624694914,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"蔡导，内核调度实体，KSE，是不是应该是这三个单词吧，Kernel Scheduling Entity","like_count":0},{"had_liked":false,"id":296446,"user_name":"Trouver âme","can_delete":false,"product_type":"c3","uid":1323966,"ip_address":"","ucode":"F84C69721CDC9C","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/be/be07474f.jpg","comment_is_top":false,"comment_ctime":1622976726,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"在JVM规范里是没有规定具体实现用1:1（内核线程）、N:1（用户态线程）、M:N（混合）那一种模式，对开发者基本是透明的","like_count":0},{"had_liked":false,"id":286997,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1617719987,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"听写：\n\n协程是更轻量级的线程\n\nThread 和 Kernel Entity  如果是 1:1 的话，Kernel Entity（系统线程）由 CPU 直接调度，调度效率非常高，但是线程之间发生 Context 切换的时候，会牵扯到内核对象切换，消耗比较大。\n\n如果是 M:N 的话，那么切换的时候消耗就会小很多。\n\nProcessor 在不同的系统线程里，每个 Processor 都挂着一个准备运行的协程队列 G-G-G…… 有一个协程正在运行，协程队列依次运行。\n\nGo 启动的时候，会有一个守护线程 G0，计数，会记录每个 Processor 运行完成的协程的数量，如果发现某一个 Processor 在一段时间内没有发生变化（阻塞），就会往这个协程的任务栈里面插入一个特殊的标记，当协程运行遇到非内联函数，就会读到这个标记，将自己中断下来，插到等待协程队列的队尾，切换到其他队列的队尾。\n\n当某一个协程被系统通断了，比如 IO 需要等待的时候，Processor 会把自己加入到其他可使用的系统线程之中，继续执行其他的协程 Goroutine。当被中断的协程被唤醒，完成之后，会把自己加入到其他某一个 Processor 等待队列中，或全局等待队列当中。\n\n当协程被中断的时候，它在寄存器中的运行状态，也会保存在协程对象中；当重新开始运行的时候，就会把运行状态写回寄存器。","like_count":0},{"had_liked":false,"id":272479,"user_name":"Geek_d586af","can_delete":false,"product_type":"c3","uid":2161180,"ip_address":"","ucode":"2966DBC6BD9B20","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jtNYcW0hUoI1RzVic1tpJ7mkh4nccicC3aaC4aicYQCy9R1RZBMSWn8qDxjvVKqca9LnWxCfsicEqeW0bUkX6Bogyg/132","comment_is_top":false,"comment_ctime":1610097438,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100024001,"comment_content":"package coroutines\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;testing&quot;\n)\n\nfunc TestConoutines(t *testing.T)  {\n\tfor i:=1;i&lt;10;i++ {\n\t\tgo func() {\n\t\t\tfmt.Println(i)\n\t\t}()\n\t}\n}\n这段代码，由于内存共享，所以i的值应该是最后一个协程执行的值，输出的所有值应该是相同的，但是我出现了俩种情况，1.输出的值为俩个不同值，并不是相同的值，2.有时候一个值也不输出\n=== RUN   TestConoutines\n8\n10\n10\n10\n10\n10\n10\n10\n--- PASS: TestConoutines (0.00s)\n10\nPASS","like_count":0},{"had_liked":false,"id":207099,"user_name":"贾敏","can_delete":false,"product_type":"c3","uid":1946456,"ip_address":"","ucode":"6C5B5EABA4C811","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b3/58/14e407e8.jpg","comment_is_top":false,"comment_ctime":1587006400,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100024001,"comment_content":"想问一下不同语言创建thread时候的栈大小如何获取？比如python","like_count":0},{"had_liked":false,"id":195270,"user_name":"小虎","can_delete":false,"product_type":"c3","uid":1033083,"ip_address":"","ucode":"31438B30CF7910","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GkMk4gBlfZcljsY3Vqu7w8ZkxBfe8WTz1ySnPTJARKXF0FpCr3HqlicIHQlItib9m7iaxLESkmBNpoiaY81EUUzQrA/132","comment_is_top":false,"comment_ctime":1585152113,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100024001,"comment_content":"协程更轻量级开销25k，jdk1.5 1 m，内核是m:n切换效率高，更高效。","like_count":0},{"had_liked":false,"id":119906,"user_name":"老玉米@徐滔","can_delete":false,"product_type":"c3","uid":1590366,"ip_address":"","ucode":"F79AE1168991AD","user_header":"https://static001.geekbang.org/account/avatar/00/18/44/5e/46c08eec.jpg","comment_is_top":false,"comment_ctime":1564724873,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100024001,"comment_content":"老师好，我在做测试的时候  报错 panic: inconsistent poll.fdMutex\n代码：\npackage groutine_my_test\n\nimport (\n    &quot;testing&quot;\n    &quot;fmt&quot;\n    &#47;&#47;&quot;time&quot;\n    &#47;&#47;&quot;sync&quot;\n)\n\nfunc TestGo(t *testing.T) {\n    &#47;&#47;var wt sync.WaitGroup\n    for i := 0; i&lt;=5000001; i++ {\n        &#47;&#47;wt.Add(1)\n        go func (i int) {\n            fmt.Println(i)\n            &#47;&#47;wt.Done()\n        }(i)\n    }   \n    &#47;&#47;wt.Wait()\n    t.Log(&quot;end&quot;);\n}\n网上查找 说golang 起超过100W的goroutine就会crash 是这个原因。我也没太理解，能帮忙解答一下么？","like_count":0},{"had_liked":false,"id":101904,"user_name":"搞起","can_delete":false,"product_type":"c3","uid":1185977,"ip_address":"","ucode":"F6C60B1E3777FC","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/b9/565e0af8.jpg","comment_is_top":false,"comment_ctime":1560047071,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100024001,"comment_content":"你好，检查g的数量一只保持不变，然后在g的栈里打一个标记，然后。。。这里描述不清楚，请耐心讲解下，谢谢！","like_count":0}]}