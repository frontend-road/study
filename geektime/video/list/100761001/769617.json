{"id":769617,"title":"04｜联合和交叉","content":"","comments":[{"had_liked":false,"id":390436,"user_name":"Jack Q","can_delete":false,"product_type":"c3","uid":1160078,"ip_address":"广东","ucode":"A7DBC311884FFA","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/8e/1c564eb2.jpg","comment_is_top":false,"comment_ctime":1715330764,"is_pvip":false,"replies":[{"id":142023,"content":" 👍 +5\n这在自己写VSCode库的时候是很有用的。:)","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1715352789,"ip_address":"河南","comment_id":390436,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"分享一个小技巧:\nlet s: &#39;aa&#39; | &#39;bb&#39; | (string &amp; {}) = &quot;&quot;; 可以让 s 获得 &quot;aa&quot; &quot;bb&quot; 字面量的提示(在 vscode 保持auto complete 的能力)\n来自https:&#47;&#47;github.com&#47;microsoft&#47;TypeScript&#47;issues&#47;29729","like_count":2,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644602,"discussion_content":" 👍 +5\n这在自己写VSCode库的时候是很有用的。:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715352790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"河南","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395922,"user_name":"zgy","can_delete":false,"product_type":"c3","uid":1387798,"ip_address":"上海","ucode":"05EA6845199250","user_header":"https://static001.geekbang.org/account/avatar/00/15/2d/16/b525a71d.jpg","comment_is_top":false,"comment_ctime":1732457780,"is_pvip":false,"replies":[{"id":143763,"content":"是的。就是向子类型收敛，所以在第6讲就专门讲了在接口（对象&#47;类）类型中的联合与交叉。与你的理解是相同的。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1732563689,"ip_address":"江苏","comment_id":395922,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"交叉类型是收敛，我在开发中这样使用：\ntype T2 = { a: number };\ntype T1 = { b: number };\nfunction fn(a: T1 &amp; T2) {\n  console.log(a);\n}\nfn({ a: 1, b: 2 });\n是否可以？","like_count":0,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654381,"discussion_content":"是的。就是向子类型收敛，所以在第6讲就专门讲了在接口（对象/类）类型中的联合与交叉。与你的理解是相同的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732563689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390692,"user_name":"张丹丹","can_delete":false,"product_type":"c3","uid":2648100,"ip_address":"陕西","ucode":"5B917AAA804C66","user_header":"","comment_is_top":false,"comment_ctime":1716016499,"is_pvip":false,"replies":[{"id":142100,"content":"你这里的理解是没有错的，的确可以填成这个TRUE。嗯，但这里写成boolean，是与这个any在做赋值兼容性检查的时候的特殊性有关的，这是第23讲开始会再讲的，并且会再次用到这个表格。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1716059279,"ip_address":"江苏","comment_id":390692,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"any 可以赋值给任何类型，赋值兼容性的表里 boolean 应该是 TRUE 吧？","like_count":0,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645385,"discussion_content":"你这里的理解是没有错的，的确可以填成这个TRUE。嗯，但这里写成boolean，是与这个any在做赋值兼容性检查的时候的特殊性有关的，这是第23讲开始会再讲的，并且会再次用到这个表格。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716059280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390269,"user_name":"westfall","can_delete":false,"product_type":"c3","uid":1632773,"ip_address":"上海","ucode":"F3F5CB7DF695FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/05/9976b871.jpg","comment_is_top":false,"comment_ctime":1714959363,"is_pvip":false,"replies":[{"id":141933,"content":"不是等价的。\n\n从类型含义上来说二者完全相同，但unknow不能赋给any&#47;unknown之外的其它类型，any没有这项限制。\n\n在课件上有专门标注这个。\n\n另外，never&#47;unknown其实在TS内部用处挺多的，后面的内容中会讲到这些细节。但不会单独拿一个章节来讲。","user_name":"作者回复","user_name_real":"编辑","uid":1521669,"ctime":1714976342,"ip_address":"河南","comment_id":390269,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"unknown 与 any 等价吗？","like_count":0,"discussions":[{"author":{"id":1521669,"avatar":"https://static001.geekbang.org/account/avatar/00/17/38/05/7beecd5d.jpg","nickname":"Aiming","note":"","ucode":"66292B32F9960A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644094,"discussion_content":"不是等价的。\n\n从类型含义上来说二者完全相同，但unknow不能赋给any/unknown之外的其它类型，any没有这项限制。\n\n在课件上有专门标注这个。\n\n另外，never/unknown其实在TS内部用处挺多的，后面的内容中会讲到这些细节。但不会单独拿一个章节来讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714976342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"河南","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1358174,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b9/5e/a8f6f7db.jpg","nickname":"Ming","note":"","ucode":"A94E8D8433E54F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647234,"discussion_content":"补充下：any 不可以赋值给 never","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719722033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390171,"user_name":"Neu","can_delete":false,"product_type":"c3","uid":1901854,"ip_address":"北京","ucode":"48F8C312B94999","user_header":"https://static001.geekbang.org/account/avatar/00/1d/05/1e/02245834.jpg","comment_is_top":false,"comment_ctime":1714550862,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":2,"score":2,"product_id":100761001,"comment_content":"自选重点：\n联合和交叉是类型运算。联合的作用是类型合并，交叉的作用是类型收敛。\n联合会尽力的合并类型。\n交叉类型并不常用于基础类型。交叉收敛到子类型，如果没有父子类型关系，收敛到never。","like_count":1},{"had_liked":false,"id":390301,"user_name":"halo","can_delete":false,"product_type":"c3","uid":2866983,"ip_address":"广东","ucode":"574BDA398A81C6","user_header":"https://static001.geekbang.org/account/avatar/00/2b/bf/27/7f7acf6c.jpg","comment_is_top":false,"comment_ctime":1715050989,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100761001,"comment_content":"打卡！~ 见过最好的TS教程","like_count":0}]}