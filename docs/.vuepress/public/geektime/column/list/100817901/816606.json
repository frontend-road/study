{"id":816606,"title":"19｜动手实战 - 实现实战案例3","content":"<p>你好，我是叶伟民。</p><p>上一节课我们使用模糊检索知识最基本的概念改造了实战案例1。这节课我们趁热打铁，继续动手实战，使用模糊检索知识最基本的概念实现实战案例3。</p><p>在动手操作之前，我们先梳理一下整体的流程。实现实战案例3主要包括五个步骤：</p><ol>\n<li>搭建向量编码服务（复用实战案例1已经搭建好的服务）</li>\n<li>设计数据库（可参考实战案例1）</li>\n<li>知识入库（可参考实战案例2）</li>\n<li>检索知识（可参考实战案例1和2）</li>\n<li>显示相关链接</li>\n</ol><p>考虑到我们已经进入第四章，所以从这节课开始，前面讲过的基础（例如激活虚拟环境）将不再重复了，更具体的步骤会列在这节课配套代码的<code>如何运行本节课程序.md</code> 文件里面，配套代码你可以从<a href=\"https://github.com/weiminye/time-geekbang-org-rag/tree/main/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B3/%E7%AC%AC19%E8%8A%82\">这里</a>获取。</p><p><img src=\"https://static001.geekbang.org/resource/image/e2/de/e251bd16f5df3ff843b6c8ced9abdcde.jpg?wh=2536x1955\" alt=\"\"></p><p>好，我们正式开始今天的学习吧。</p><h2>设计数据库</h2><p>第1步搭建向量编码服务完全复用实战案例1已经搭建好的服务，所以我们就不重复讲解了，如果不熟悉的话，你可以回顾第一章的内容。我们从第2步设计数据库开始讲起。</p><h3>表结构设计</h3><p>我们先来思考这样一个问题，纯知识类RAG应用的数据库结构与基于MIS系统的RAG应用（也就是实战案例1）有什么区别呢？</p><p>答案是纯知识类RAG应用的数据库至少要有两个表。<strong>第一个表是主表</strong>，由元数据组成，这个表我们直接参考实战案例2，也就是<a href=\"https://time.geekbang.org/column/article/809371\">第9节课</a>的内容。于是我们得出了后面这个表。</p><!-- [[[read_end]]] --><pre><code class=\"language-python\">class 知识主表(models.Model):\n&nbsp; &nbsp; id = models.IntegerField(\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;primary_key = True,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;editable = False)\n\n&nbsp; &nbsp; 模块 = models.TextField(null=True,blank=True)\n&nbsp; &nbsp; 标题 = models.TextField(null=True,blank=True)\n&nbsp; &nbsp; url = models.TextField(null=True,blank=True)\n&nbsp; &nbsp; 向量编码 = VectorField(dimensions=1024,null=True,blank=True)\n&nbsp; &nbsp; 向量编码模型 = models.TextField(default=\"bge-large-zh-v1.5\")\n</code></pre><p><strong>第二个表是详细表</strong>，由文本和对应的向量编码组成，这个表我们直接参考实战案例1，也就是第18节课的内容。于是我们得出了后面这个知识详细表。</p><pre><code class=\"language-python\">class 知识详细表(models.Model):\n&nbsp; &nbsp; id = models.IntegerField(\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;primary_key = True,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;editable = False)&nbsp;&nbsp;\n\n&nbsp; &nbsp; 文本内容 = models.TextField()\n&nbsp; &nbsp; 内容在分段中的顺序 = models.IntegerField(null=True,blank=True)\n&nbsp; &nbsp; 向量编码 = VectorField(dimensions=1024,null=True,blank=True)\n&nbsp; &nbsp; 向量编码模型 = models.TextField(default=\"bge-large-zh-v1.5\")\n&nbsp; &nbsp; 知识主表 = models.ForeignKey(知识主表, on_delete=models.CASCADE)\n</code></pre><h3>执行命令更新数据库</h3><p>然后我们切换到 <code>Anaconda Powershell Prompt</code>，输入以下命令更新数据库。</p><pre><code class=\"language-powershell\">python manage.py makemigrations\npython manage.py migrate\n</code></pre><p>这时候应该提示数据库更新成功。然后我们需要打开数据库确认操作无误。</p><h3>打开数据库确认操作无误</h3><p>我们使用第16节课讲过的 <code>pgadmin</code>，打开<code>知识主表</code>表。这时我们应该看到已经成功添加了所有元数据列。</p><p>我们再打开<code>知识详细表</code>表做个检查。这时我们应该看到已经成功添加了<code>向量编码</code>和<code>向量编码模型</code>这两列。其中<code>向量编码</code>的数据类型为我们在第16节课讲过的 <code>vector</code> 类型。</p><h2>知识入库</h2><p>设计完数据库之后，我们可以知识入库了。</p><p>实战案例1的数据早就在数据库里面了，所以不需要这一步。实战案例2包含了知识入库步骤，于是我们可以参考实战案例2，也就是第11节课的内容来完成知识入库。</p><h3>导入原始内容</h3><p>这里我们重申第11节课的精神，也就是<strong>尽量选择最容易的知识入库方法。</strong></p><p>然后结合第14节课“选择合适自己的RAG应用立项”一节的精神，建议同学们在项目立项阶段尽量不考虑必须从PDF和Word导入知识的项目，这些项目所耗费的时间精力会远比你想象中的高，会是个大坑。</p><p>回到我们今天节课，这里我们直接通过Excel导入，我们运行 <code>import_data_from_excel.py</code> 文件即可，它会把 <code>data.xlsx</code> 的数据导入到数据库。</p><h2>对知识批量编码并存进数据库</h2><p>现在原始内容已经入库，我们还需要对知识进行编码。</p><p>我们继续在 <code>api.py</code> 文件尾部添加后面的代码。</p><pre><code class=\"language-python\">def 对知识批量进行向量编码(request):\n&nbsp; &nbsp; 未编码的知识list = 销售入账记录.objects.filter(客户向量编码__isnull=True)\n&nbsp; &nbsp; for current in 未编码的知识list:\n&nbsp; &nbsp; &nbsp; &nbsp; current.客户向量编码= 调用向量编码服务(current.客户)\n&nbsp; &nbsp; &nbsp; &nbsp; current.save()\n&nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; result = {'code':200}\n&nbsp; &nbsp; return JsonResponse(result)\n</code></pre><p>这段代码与第18节课相关代码类似，同学们可以直接参考，我们就不浪费时间重复了。</p><p>然后我们在 postman 调用http://127.0.0.1:8000/api/knowledge-embedding-batch 即可批量编码并将其保存进数据库。</p><p>除此之外，我们还可以在数据入库的时候就调用以上函数进行向量编码。</p><h2>检索知识</h2><p>现在知识已经入库，我们可以检索知识了。检索知识由两部分组成，其中根据元数据检索部分可以参考实战案例1，其他部分可以参考实战案例2。</p><p>我们打开 <code>search.py</code> 文件，往<code>查询</code>函数里添加后面这段代码。</p><pre><code class=\"language-python\">&nbsp; &nbsp; else:\n&nbsp; &nbsp; &nbsp; &nbsp; 查询字符串 = 查询参数.strip()\n&nbsp; &nbsp; &nbsp; &nbsp; 查询字符串向量编码 = 调用向量编码服务(查询字符串)\n&nbsp; &nbsp; &nbsp; &nbsp; 模糊搜索结果RawQuerySet = 知识详细表.objects.raw('SELECT *, 1 - (向量编码 &lt;=&gt; %s) AS 余弦相似度,文本内容 FROM public.\"home_知识详细表\" order by 余弦相似度 desc;',[str(查询字符串向量编码),])\n\n&nbsp; &nbsp; &nbsp; &nbsp; 选取的结果 = 模糊搜索结果RawQuerySet[0]\n&nbsp; &nbsp; &nbsp; &nbsp; 模糊搜索结果 = {\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '知识内容': 选取的结果.文本内容,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'url': 选取的结果.知识主表.url,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '标题': 选取的结果.知识主表.标题\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\n&nbsp; &nbsp; &nbsp; &nbsp; return 模糊搜索结果\n</code></pre><p>这段代码与第18节课相关代码类似，相信结合注释你很容易就能理解。</p><h2>显示相关链接</h2><p>我们打开 <code>index.html</code> 文件，在底部添加以下代码。</p><pre><code class=\"language-xml\">{% if link_text is not None %}\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;\n&nbsp; &nbsp; &nbsp; 参考链接：&lt;a href=\"{{link_url}}\" target=\"_blank\"&gt;{{link_text}}&lt;/a&gt; &amp;nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;\n</code></pre><p>然后我们打开 <a href=\"http://localhost:8000\">http://localhost:8000</a>, 我们将看到如下界面。</p><p><img src=\"https://static001.geekbang.org/resource/image/8d/c4/8d28a9899a16d122a0667acd4b3bb0c4.jpg?wh=2970x2115\" alt=\"\"></p><p>与实战案例1（也就是第18节课）所讲的类似，我们修改了很多代码文件，就是没有修改<code> rag.py</code> 文件。因为我们只是增强了检索知识的部分，至于整个RAG流程，其实没做任何改变。这是本节课甚至这门专栏的重点，RAG只有一个核心，提升检索知识的质量，更通俗地说，就是保证检索到的第一条知识是最匹配用户提问的，然后喂给大模型。如果能够做到这点，根本就不需要重排了（rerank）。</p><h2>小结</h2><p>好了，今天这一讲到这里就结束了，最后我们来回顾一下。这一讲我们学会了四件事情。</p><p>第一件事情是设计纯知识类RAG应用的数据库结构。纯知识类RAG应用的数据库结构至少由两个表组成。<strong>第一个表称为主表，由元数据组成。第二个表是详细表，由具体文本和向量编码组成。</strong></p><p>第二件事情是知识入库。我们直接从excel表导入。需要提醒的是，在项目立项阶段尽量不考虑必须从PDF和Word导入知识的项目，这些项目所耗费的时间精力会远比你想象中的高，会是个大坑。</p><p>第三件事情是检索知识。与实战案例1相比，实战案例3基本靠模糊检索，所以严重依赖于前面所讲的基础概念。你也可以借机复习巩固一下之前所学。</p><p>第四件事情是显示相关链接。RAG本质上是搜索应用，只不过因为大模型的发展，大幅提升了摘要和检索的质量，从而提升了用户体验。<strong>显示相关链接其实就是传统搜索应用所具备的功能。</strong></p><p>下一节课开始，我们将学习如何评估和改进RAG应用的检索质量。</p><h2>思考题</h2><p>发挥你的想象力，想象一下自己企业有哪些RAG应用是不需要从PDF和Word导入知识的。请认真想想，根据我的经验，实际上这些RAG应用还是有的，甚至不少。</p><p>欢迎你在留言区和我交流互动，如果这节课对你有启发，也推荐分享给身边更多朋友。</p>","neighbors":{"left":{"article_title":"18｜动手实战：改造实战案例1","id":815860},"right":{"article_title":"20｜找准方向：如何有效评估与改进RAG应用","id":817424}},"comments":[{"had_liked":false,"id":395418,"user_name":"悟远","can_delete":false,"product_type":"c1","uid":1912923,"ip_address":"北京","ucode":"3BD9C748698888","user_header":"https://static001.geekbang.org/account/avatar/00/1d/30/5b/4f4b0a40.jpg","comment_is_top":false,"comment_ctime":1730709767,"is_pvip":false,"replies":[{"id":143602,"content":"Good catch ! 这里的端口确实是错了，谢谢","user_name":"作者回复","user_name_real":"编辑","uid":1337319,"ctime":1731378993,"ip_address":"江苏","comment_id":395418,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"&quot;然后我们在 postman 调用 http:&#47;&#47;127.0.0.1:8902&#47;api&#47;knowledge-embedding-batch 即可批量编码并将其保存进数据库。&quot; —— 这里端口错了，应用是 Django 的服务端口 8000","like_count":0,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653647,"discussion_content":"Good catch ! 这里的端口确实是错了，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731378993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395208,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":3920101,"ip_address":"广东","ucode":"19E83C631DF25E","user_header":"https://static001.geekbang.org/account/avatar/00/3b/d0/e5/0a3ee17c.jpg","comment_is_top":false,"comment_ctime":1729749812,"is_pvip":false,"replies":[{"id":143606,"content":"https:&#47;&#47;github.com&#47;weiminye&#47;time-geekbang-org-rag&#47;tree&#47;main&#47;%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B3&#47;%E7%AC%AC19%E8%8A%82","user_name":"作者回复","user_name_real":"编辑","uid":1337319,"ctime":1731379182,"ip_address":"江苏","comment_id":395208,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"import_data_from_excel.py,data.xlsx这两个文件在github是没有下载，请问在哪里下载。","like_count":0,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653651,"discussion_content":"https://github.com/weiminye/time-geekbang-org-rag/tree/main/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B3/%E7%AC%AC19%E8%8A%82","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731379182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395015,"user_name":"Geek_0a887e","can_delete":false,"product_type":"c1","uid":3690020,"ip_address":"浙江","ucode":"17EBC4E533B600","user_header":"","comment_is_top":false,"comment_ctime":1729089256,"is_pvip":false,"replies":[{"id":143611,"content":"代码在这里：https:&#47;&#47;github.com&#47;weiminye&#47;time-geekbang-org-rag&#47;tree&#47;main&#47;%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B3&#47;%E7%AC%AC19%E8%8A%82","user_name":"作者回复","user_name_real":"编辑","uid":1337319,"ctime":1731379604,"ip_address":"江苏","comment_id":395015,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"这个章节是啥？文章的代码是不是漏了什么东西，确定是这么写的吗？没头没尾的","like_count":0,"discussions":[{"author":{"id":1337319,"avatar":"https://static001.geekbang.org/account/avatar/00/14/67/e7/0d92745d.jpg","nickname":"Billy火炎焱燚(不羁的风)","note":"","ucode":"63DED1EB2CF6AE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653657,"discussion_content":"代码在这里：https://github.com/weiminye/time-geekbang-org-rag/tree/main/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B3/%E7%AC%AC19%E8%8A%82","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731379604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3920101,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/d0/e5/0a3ee17c.jpg","nickname":"kevin","note":"","ucode":"19E83C631DF25E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653793,"discussion_content":"运行代码报错如下：\nGot an error checking a consistent migration history performed for database connection &#39;default&#39;: connection to server at &#34;localhost&#34; (::1), port 5432 failed: Connection refused (0x0000274D/10061)\n        Is the server running on that host and accepting TCP/IP connections?\nconnection to server at &#34;localhost&#34; (127.0.0.1), port 5432 failed: Connection refused (0x0000274D/10061)\n        Is the server running on that host and accepting TCP/IP connections?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731461994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":396222,"user_name":"narsil的梦","can_delete":false,"product_type":"c1","uid":1185187,"ip_address":"北京","ucode":"67110C673BD951","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/a3/e67d6039.jpg","comment_is_top":false,"comment_ctime":1733656324,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"中级篇看完了，没看到讲解工单辅助系统的地方😭","like_count":0},{"had_liked":false,"id":395628,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":3920101,"ip_address":"广东","ucode":"19E83C631DF25E","user_header":"https://static001.geekbang.org/account/avatar/00/3b/d0/e5/0a3ee17c.jpg","comment_is_top":false,"comment_ctime":1731484151,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100817901,"comment_content":"class 知识主表(models.Model):中的这段代码和19节课中的代码并不一致，如果把这段代码拷贝到程序中去执行，会出错，大家要注意了。","like_count":0}]}