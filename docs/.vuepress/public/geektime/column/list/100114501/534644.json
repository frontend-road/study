{"id":534644,"title":"15｜实战演练：玩转Kubernetes（1）","content":"<p>你好，我是Chrono。</p><p>经过两个星期的学习，到今天我们的“初级篇”也快要结束了。</p><p>和之前的“入门篇”一样，在这次课里，我也会对前面学过的知识做一个比较全面的回顾，毕竟Kubernetes领域里有很多新名词、新术语、新架构，知识点多且杂，这样的总结复习就更有必要。</p><p>接下来我还是先简要列举一下“初级篇”里讲到的Kubernetes要点，然后再综合运用这些知识，演示一个实战项目——还是搭建WordPress网站，不过这次不是在Docker里，而是在Kubernetes集群里。</p><h2>Kubernetes技术要点回顾</h2><p>容器技术开启了云原生的大潮，但成熟的容器技术，到生产环境的应用部署的时候，却显得“步履维艰”。因为容器只是针对单个进程的隔离和封装，而实际的应用场景却是要求许多的应用进程互相协同工作，其中的各种关系和需求非常复杂，在容器这个技术层次很难掌控。</p><p>为了解决这个问题，<strong>容器编排</strong>（Container Orchestration）就出现了，它可以说是以前的运维工作在云原生世界的落地实践，本质上还是在集群里调度管理应用程序，只不过管理的主体由人变成了计算机，管理的目标由原生进程变成了容器和镜像。</p><p>而现在，容器编排领域的王者就是——Kubernetes。</p><!-- [[[read_end]]] --><p>Kubernetes源自Borg系统，它凝聚了Google的内部经验和CNCF的社区智慧，所以战胜了竞争对手Apache Mesos和Docker Swarm，成为了容器编排领域的事实标准，也成为了云原生时代的基础操作系统，学习云原生就必须要掌握Kubernetes。</p><p>（<a href=\"https://time.geekbang.org/column/article/529800\">10讲</a>）Kubernetes的<strong>Master/Node架构</strong>是它具有自动化运维能力的关键，也对我们的学习至关重要，这里我再用另一张参考架构图来简略说明一下它的运行机制（<a href=\"https://kubernetes.io/blog/2018/07/18/11-ways-not-to-get-hacked\">图片来源</a>）：</p><p><img src=\"https://static001.geekbang.org/resource/image/f4/05/f429ca7114eebf140632409f3fbcbb05.png?wh=1475x852\" alt=\"图片\"></p><p>Kubernetes把集群里的计算资源定义为节点（Node），其中又划分成控制面和数据面两类。</p><ul>\n<li>控制面是Master节点，负责管理集群和运维监控应用，里面的核心组件是<strong>apiserver、etcd、scheduler、controller-manager</strong>。</li>\n<li>数据面是Worker节点，受Master节点的管控，里面的核心组件是<strong>kubelet、kube-proxy、container-runtime</strong>。</li>\n</ul><p>此外，Kubernetes还支持插件机制，能够灵活扩展各项功能，常用的插件有DNS和Dashboard。</p><p>为了更好地管理集群和业务应用，Kubernetes从现实世界中抽象出了许多概念，称为“<strong>API对象</strong>”，描述这些对象就需要使用<strong>YAML</strong>语言。</p><p>YAML是JSON的超集，但语法更简洁，表现能力更强，更重要的是它以“<strong>声明式</strong>”来表述对象的状态，不涉及具体的操作细节，这样Kubernetes就能够依靠存储在etcd里集群的状态信息，不断地“调控”对象，直至实际状态与期望状态相同，这个过程就是Kubernetes的自动化运维管理（<a href=\"https://time.geekbang.org/column/article/529813\">11讲</a>）。</p><p>Kubernetes里有很多的API对象，其中最核心的对象是“<strong>Pod</strong>”，它捆绑了一组存在密切协作关系的容器，容器之间共享网络和存储，在集群里必须一起调度一起运行。通过Pod这个概念，Kubernetes就简化了对容器的管理工作，其他的所有任务都是通过对Pod这个最小单位的再包装来实现的（<a href=\"https://time.geekbang.org/column/article/531551\">12讲</a>）。</p><p>除了核心的Pod对象，基于“单一职责”和“对象组合”这两个基本原则，我们又学习了4个比较简单的API对象，分别是<strong>Job/CronJob</strong>和<strong>ConfigMap</strong>/<strong>Secret</strong>。</p><ul>\n<li>Job/CronJob对应的是离线作业，它们逐层包装了Pod，添加了作业控制和定时规则（<a href=\"https://time.geekbang.org/column/article/531566\">13讲</a>）。</li>\n<li>ConfigMap/Secret对应的是配置信息，需要以环境变量或者存储卷的形式注入进Pod，然后进程才能在运行时使用（<a href=\"https://time.geekbang.org/column/article/533395\">14讲</a>）。</li>\n</ul><p>和Docker类似，Kubernetes也提供一个客户端工具，名字叫“<strong>kubectl</strong>”，它直接与Master节点的apiserver通信，把YAML文件发送给RESTful接口，从而触发Kubernetes的对象管理工作流程。</p><p>kubectl的命令很多，查看自带文档可以用 <code>api-resources</code>、<code>explain</code> ，查看对象状态可以用 <code>get</code>、<code>describe</code>、<code>logs</code> ，操作对象可以用 <code>run</code>、<code>apply</code>、<code>exec</code>、<code>delete</code> 等等（<a href=\"https://time.geekbang.org/column/article/529780\">09讲</a>）。</p><p>使用YAML描述API对象也有固定的格式，必须写的“头字段”是“<strong>apiVersion</strong>”“<strong>kind</strong>”“<strong>metadata</strong>”，它们表示对象的版本、种类和名字等元信息。实体对象如Pod、Job、CronJob会再有“<strong>spec</strong>”字段描述对象的期望状态，最基本的就是容器信息，非实体对象如ConfigMap、Secret使用的是“<strong>data</strong>”字段，记录一些静态的字符串信息。</p><p>好了，“初级篇”里的Kubernetes知识要点我们就基本总结完了，如果你发现哪部分不太清楚，可以课后再多复习一下前面的课程加以巩固。</p><h2>WordPress网站基本架构</h2><p>下面我们就在Kubernetes集群里再搭建出一个WordPress网站，用的镜像还是“入门篇”里的那三个应用：WordPress、MariaDB、Nginx，不过当时我们是直接以容器的形式来使用它们，现在要改成Pod的形式，让它们运行在Kubernetes里。</p><p>我还是画了一张简单的架构图，来说明这个系统的内部逻辑关系：</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/cc/3d9d09078f1200a84c63a7cea2f40bcc.jpg?wh=1920x865\" alt=\"图片\"></p><p>从这张图中你可以看到，网站的大体架构是没有变化的，毕竟应用还是那三个，它们的调用依赖关系也必然没有变化。</p><p>那么Kubernetes系统和Docker系统的区别又在哪里呢？</p><p>关键就在<strong>对应用的封装</strong>和<strong>网络环境</strong>这两点上。</p><p>现在WordPress、MariaDB这两个应用被封装成了Pod（由于它们都是在线业务，所以Job/CronJob在这里派不上用场），运行所需的环境变量也都被改写成ConfigMap，统一用“声明式”来管理，比起Shell脚本更容易阅读和版本化管理。</p><p>另外，Kubernetes集群在内部维护了一个自己的专用网络，这个网络和外界隔离，要用特殊的“端口转发”方式来传递数据，还需要在集群之外用Nginx反向代理这个地址，这样才能实现内外沟通，对比Docker的直接端口映射，这里略微麻烦了一些。</p><h2>WordPress网站搭建步骤</h2><p>了解基本架构之后，接下来我们就逐步搭建这个网站系统，总共需要4步。</p><p><strong>第一步</strong>当然是要编排MariaDB对象，它的具体运行需求可以参考“入门篇”的实战演练课，这里我就不再重复了。</p><p>MariaDB需要4个环境变量，比如数据库名、用户名、密码等，在Docker里我们是在命令行里使用参数 <code>--env</code>，而在Kubernetes里我们就应该使用ConfigMap，为此需要定义一个 <code>maria-cm</code> 对象：</p><pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n&nbsp; name: maria-cm\n\ndata:\n&nbsp; DATABASE: 'db'\n&nbsp; USER: 'wp'\n&nbsp; PASSWORD: '123'\n&nbsp; ROOT_PASSWORD: '123'\n</code></pre><p>然后我们定义Pod对象 <code>maria-pod</code>，把配置信息注入Pod，让MariaDB运行时从环境变量读取这些信息：</p><pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n&nbsp; name: maria-pod\n&nbsp; labels:\n&nbsp; &nbsp; app: wordpress\n&nbsp; &nbsp; role: database\n\nspec:\n&nbsp; containers:\n&nbsp; - image: mariadb:10\n&nbsp; &nbsp; name: maria\n&nbsp; &nbsp; imagePullPolicy: IfNotPresent\n&nbsp; &nbsp; ports:\n&nbsp; &nbsp; - containerPort: 3306\n\n&nbsp; &nbsp; envFrom:\n&nbsp; &nbsp; - prefix: 'MARIADB_'\n&nbsp; &nbsp; &nbsp; configMapRef:\n&nbsp; &nbsp; &nbsp; &nbsp; name: maria-cm\n</code></pre><p>注意这里我们使用了一个新的字段“<strong>envFrom</strong>”，这是因为ConfigMap里的信息比较多，如果用 <code>env.valueFrom</code> 一个个地写会非常麻烦，容易出错，而 <code>envFrom</code> 可以一次性地把ConfigMap里的字段全导入进Pod，并且能够指定变量名的前缀（即这里的 <code>MARIADB_</code>），非常方便。</p><p>使用 <code>kubectl apply</code> 创建这个对象之后，可以用 <code>kubectl get pod</code> 查看它的状态，如果想要获取IP地址需要加上参数 <code>-o wide</code> ：</p><pre><code class=\"language-plain\">kubectl apply -f mariadb-pod.yml\nkubectl get pod -o wide\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/3f/98/3fb0242f97c782f79ecf8ba845c81798.png?wh=1788x362\" alt=\"图片\"></p><p>现在数据库就成功地在Kubernetes集群里跑起来了，IP地址是“172.17.0.2”，注意这个地址和Docker的不同，是Kubernetes里的私有网段。</p><p>接着是<strong>第二步</strong>，编排WordPress对象，还是先用ConfigMap定义它的环境变量：</p><pre><code class=\"language-yaml\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n&nbsp; name: wp-cm\n\ndata:\n&nbsp; HOST: '172.17.0.2'\n&nbsp; USER: 'wp'\n&nbsp; PASSWORD: '123'\n&nbsp; NAME: 'db'\n</code></pre><p>在这个ConfigMap里要注意的是“HOST”字段，它必须是MariaDB Pod的IP地址，如果不写正确WordPress会无法正常连接数据库。</p><p>然后我们再编写WordPress的YAML文件，为了简化环境变量的设置同样使用了 <code>envFrom</code>：</p><pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n&nbsp; name: wp-pod\n&nbsp; labels:\n&nbsp; &nbsp; app: wordpress\n&nbsp; &nbsp; role: website\n\nspec:\n&nbsp; containers:\n&nbsp; - image: wordpress:5\n&nbsp; &nbsp; name: wp-pod\n&nbsp; &nbsp; imagePullPolicy: IfNotPresent\n&nbsp; &nbsp; ports:\n&nbsp; &nbsp; - containerPort: 80\n\n&nbsp; &nbsp; envFrom:\n&nbsp; &nbsp; - prefix: 'WORDPRESS_DB_'\n&nbsp; &nbsp; &nbsp; configMapRef:\n&nbsp; &nbsp; &nbsp; &nbsp; name: wp-cm\n</code></pre><p>接着还是用 <code>kubectl apply</code> 创建对象，<code>kubectl get pod</code> 查看它的状态：</p><pre><code class=\"language-plain\">kubectl apply -f wp-pod.yml\nkubectl get pod -o wide\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/d5/de/d5e8c09e70e90179d651bf3c28abc0de.png?wh=1562x426\" alt=\"图片\"></p><p><strong>第三步</strong>是为WordPress Pod映射端口号，让它在集群外可见。</p><p>因为Pod都是运行在Kubernetes内部的私有网段里的，外界无法直接访问，想要对外暴露服务，需要使用一个专门的 <code>kubectl port-forward</code> 命令，它专门负责把本机的端口映射到在目标对象的端口号，有点类似Docker的参数 <code>-p</code>，经常用于Kubernetes的临时调试和测试。</p><p>下面我就把本地的“8080”映射到WordPress Pod的“80”，kubectl会把这个端口的所有数据都转发给集群内部的Pod：</p><pre><code class=\"language-plain\">kubectl port-forward wp-pod 8080:80 &amp;\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/d4/be/d445d205ae6f8c966200ffa9ba7f29be.png?wh=1366x240\" alt=\"图片\"></p><p>注意在命令的末尾我使用了一个 <code>&amp;</code> 符号，让端口转发工作在后台进行，这样就不会阻碍我们后续的操作。</p><p>如果想关闭端口转发，需要敲命令 <code>fg</code> ，它会把后台的任务带回到前台，然后就可以简单地用“Ctrl + C”来停止转发了。</p><p><strong>第四步</strong>是创建反向代理的Nginx，让我们的网站对外提供服务。</p><p>这是因为WordPress网站使用了URL重定向，直接使用“8080”会导致跳转故障，所以为了让网站正常工作，我们还应该在Kubernetes之外启动Nginx反向代理，保证外界看到的仍然是“80”端口号。（这里的细节和我们的课程关系不大，感兴趣的同学可以留言提问讨论）</p><p>Nginx的配置文件和<a href=\"https://time.geekbang.org/column/article/528740\">第7讲</a>基本一样，只是目标地址变成了“127.0.0.1:8080”，它就是我们在第三步里用 <code>kubectl port-forward</code> 命令创建的本地地址：</p><pre><code class=\"language-plain\">server {\n&nbsp; listen 80;\n&nbsp; default_type text/html;\n\n&nbsp; location / {\n&nbsp; &nbsp; &nbsp; proxy_http_version 1.1;\n&nbsp; &nbsp; &nbsp; proxy_set_header Host $host;\n&nbsp; &nbsp; &nbsp; proxy_pass http://127.0.0.1:8080;\n&nbsp; }\n}\n</code></pre><p>然后我们用 <code>docker run -v</code> 命令加载这个配置文件，以容器的方式启动这个Nginx代理：</p><pre><code class=\"language-plain\">docker run -d --rm \\\n&nbsp; &nbsp; --net=host \\\n&nbsp; &nbsp; -v /tmp/proxy.conf:/etc/nginx/conf.d/default.conf \\\n&nbsp; &nbsp; nginx:alpine\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/9f/51/9f2b16fb58dbe0a358e26042565f9851.png?wh=1920x238\" alt=\"图片\"></p><p>有了Nginx的反向代理之后，我们就可以打开浏览器，输入本机的“127.0.0.1”或者是虚拟机的IP地址（我这里仍然是“<a href=\"http://192.168.10.208\">http://192.168.10.208</a>”），看到WordPress的界面：</p><p><img src=\"https://static001.geekbang.org/resource/image/73/f4/735552be9cf6d45ac41a001252ayyef4.png?wh=1524x1858\" alt=\"图片\"></p><p>你也可以在Kubernetes里使用命令 <code>kubectl logs</code> 查看WordPress、MariaDB等Pod的运行日志，来验证它们是否已经正确地响应了请求：</p><p><img src=\"https://static001.geekbang.org/resource/image/84/62/8498c598e6f3142d490218601acdbc62.png?wh=1920x809\" alt=\"图片\"></p><h2>使用Dashboard管理Kubernetes</h2><p>到这里WordPress网站就搭建成功了，我们的主要任务也算是完成了，不过我还想再带你看看Kubernetes的图形管理界面，也就是Dashboard，看看不用命令行该怎么管理Kubernetes。</p><p>启动Dashboard的命令你还记得吗，在第10节课里讲插件的时候曾经说过，需要用minikube，命令是：</p><pre><code class=\"language-plain\">minikube dashboard\n</code></pre><p>它会自动打开浏览器界面，显示出当前Kubernetes集群里的工作负载：</p><p><img src=\"https://static001.geekbang.org/resource/image/53/59/536eeb176a7737c9ed815c10af0fcf59.png?wh=1920x1022\" alt=\"图片\"></p><p>点击任意一个Pod的名字，就会进入管理界面，可以看到Pod的详细信息，而右上角有4个很重要的功能，分别可以查看日志、进入Pod内部、编辑Pod和删除Pod，相当于执行 <code>logs</code>、<code>exec</code>、<code>edit</code>、<code>delete</code> 命令，但要比命令行要直观友好的多：</p><p><img src=\"https://static001.geekbang.org/resource/image/d5/28/d5e5131bfb1d6aae2f026177bf283628.png?wh=1920x781\" alt=\"图片\"></p><p>比如说，我点击了第二个按钮，就会在浏览器里开启一个Shell窗口，直接就是Pod的内部Linux环境，在里面可以输入任意的命令，无论是查看状态还是调试都很方便：</p><p><img src=\"https://static001.geekbang.org/resource/image/46/4c/466c67a48616c946505242d0796ed74c.png?wh=1820x1240\" alt=\"图片\"></p><p>ConfigMap/Secret等对象也可以在这里任意查看或编辑：</p><p><img src=\"https://static001.geekbang.org/resource/image/de/22/defyybc05ed793b7966e1f6b68018022.png?wh=1312x976\" alt=\"图片\"></p><p>Dashboard里的可操作的地方还有很多，这里我只是一个非常简单的介绍。虽然你也许已经习惯了使用键盘和命令行，但偶尔换一换口味，改用鼠标和图形界面来管理Kubernetes也是件挺有意思的事情，有机会不妨尝试一下。</p><h2>小结</h2><p>好了，作为“初级篇”的最后一节课，今天我们回顾了一下Kubernetes的知识要点，我还是画一份详细的思维导图，帮助你课后随时复习总结。</p><p><img src=\"https://static001.geekbang.org/resource/image/87/1f/87a1d338340c8ca771a97d0fyy4b611f.jpg?wh=1920x1877\" alt=\"图片\"></p><p>这节课里我们使用Kubernetes搭建了WordPress网站，和第7讲里的Docker比较起来，我们应用了容器编排技术，以“声明式”的YAML来描述应用的状态和它们之间的关系，而不会列出详细的操作步骤，这就降低了我们的心智负担——调度、创建、监控等杂事都交给Kubernetes处理，我们只需“坐享其成”。</p><p>虽然我们朝着云原生的方向迈出了一大步，不过现在我们的容器编排还不够完善，Pod的IP地址还必须手工查找填写，缺少自动的服务发现机制，另外对外暴露服务的方式还很原始，必须要依赖集群外部力量的帮助。</p><p>所以，我们的学习之旅还将继续，在接下来的“中级篇”里，会开始研究更多的API对象，来解决这里遇到的问题。</p><h2>课下作业</h2><p>最后是课下作业时间，给你留两个动手题：</p><ol>\n<li>MariaDB、WordPress现在用的是ConfigMap，能否改用Secret来实现呢？</li>\n<li>你能否把Nginx代理转换成Pod的形式，让它在Kubernetes里运行呢？</li>\n</ol><p>期待能看到你动手体验后的想法，如果觉得有帮助，欢迎分享给自己身边的朋友一起学习。</p><p>下节课就是视频演示的操作课了，我们下节课再见。</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/ea/3c3036bc56bb9ec14598342e56c11bea.jpg?wh=1920x1544\" alt=\"图片\"></p>","neighbors":{"left":{"article_title":"14｜ConfigMap/Secret：怎样配置、定制我的应用","id":533395},"right":{"article_title":"16｜视频：初级篇实操总结","id":534688}},"comments":[{"had_liked":false,"id":353574,"user_name":"YueShi","can_delete":false,"product_type":"c1","uid":1625530,"ip_address":"上海","ucode":"8F7AFAE4641A7D","user_header":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","comment_is_top":false,"comment_ctime":1659577594,"is_pvip":true,"replies":[{"id":"128556","content":"great","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1659579186,"ip_address":"上海","comment_id":353574,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23134414074","product_id":100114501,"comment_content":"Mac上或者Window上，可能出现访问不到问题，这里写了一篇排查问题的思路，期望能帮到各位老板<br><br>https:&#47;&#47;juejin.cn&#47;post&#47;7127679053242302477","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582653,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659579186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582689,"discussion_content":"兄弟，太赞了，这个有用，解决了我的问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659597855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352502,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1658734051,"is_pvip":false,"replies":[{"id":"128222","content":"YAML写的非常好，不过Nginx配置文件里的proxy_pass，地址不能是127.0.0.1，必须是WordPress Pod的地址。<br><br>还有因为Nginx pod运行在Kubernetes里，是与外界隔离的，必须要用port-forward外界才能看到，可以参考WordPress的做法。<br><br>但这方法比较麻烦，到中级篇我们学习了Service、Ingress就能够轻松解决了。","user_name":"作者回复","user_name_real":"作者","uid":"1181974","ctime":1658789352,"ip_address":"","comment_id":352502,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23133570531","product_id":100114501,"comment_content":"思考题 2，<br><br>试着写出了 Pod 的 YAML 文件<br><br>apiVersion: v1<br>kind: ConfigMap<br>metadata:<br>  name: ngx-cm<br><br>data:<br>  default.conf: |-<br>    server {<br>      listen 80;<br>      default_type text&#47;html;<br><br>      location &#47; {<br>        proxy_http_version 1.1;<br>        proxy_set_header Host $host;<br>        proxy_pass http:&#47;&#47;127.0.0.1:8080;<br>      }<br>    }<br><br>---<br><br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: ngx-pod<br>  labels:<br>    app: nginx-alpine<br>    role: website<br><br>spec:<br>  volumes:<br>    - name: conf<br>      configMap:<br>        name: ngx-cm<br><br>  containers:<br>  - volumeMounts:<br>    - mountPath: &#47;etc&#47;nginx&#47;conf.d&#47;<br>      name: conf<br><br>    image: nginx:alpine<br>    name: ngx-pod<br>    imagePullPolicy: IfNotPresent<br>    ports:<br>    - containerPort: 80<br><br>可以成功创建 Pod，nginx 的配置文件也被挂载到指定的位置，但是浏览器还是无法访问 wordpress，不知道是不是我的 YAML 文件中少了什么🤔，还望老师指点","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581427,"discussion_content":"YAML写的非常好，不过Nginx配置文件里的proxy_pass，地址不能是127.0.0.1，必须是WordPress Pod的地址。\n\n还有因为Nginx pod运行在Kubernetes里，是与外界隔离的，必须要用port-forward外界才能看到，可以参考WordPress的做法。\n\n但这方法比较麻烦，到中级篇我们学习了Service、Ingress就能够轻松解决了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658789353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":581735,"discussion_content":"老师能讲一讲这里如果对 Nginx Pod 用 port-forward，该怎么定义端口和 Nginx 配置吗？\n\n这里我保持其他 Pod 以及 default.conf 不变，然后使用\n\nkubectl port-forward ngx-pod 8081:80 &amp;\n\n在 Mac 浏览器端用虚拟机地址加端口号 http://172.16.35.128:8081，但是还是显示 “This site can’t be reached”，无法访问\n\n不知道是不是哪一步做错了，谢谢老师 🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658962234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":581427,"ip_address":""},"score":581735,"extra":""},{"author":{"id":1800818,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/7a/72/a86c521e.jpg","nickname":"六月","note":"","ucode":"D94CD05F648A7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583377,"discussion_content":"理论上可以用容器名代替ip，docker就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660060806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":581735,"ip_address":"广东"},"score":583377,"extra":""}]}]},{"had_liked":false,"id":352463,"user_name":"椰子","can_delete":false,"product_type":"c1","uid":2278399,"ip_address":"","ucode":"CD9A5C5496AD62","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKQuaDVYz2jWN9vrmgbB785SNkmYmxf1xzEG8m8ku3ZvzYSkiaanTjqt7O47ficOQUpGmEy7eImplDw/132","comment_is_top":false,"comment_ctime":1658712107,"is_pvip":false,"replies":[{"id":"128200","content":"是的，会变化，到后面的中级篇会用Service对象来解决，这里是从docker到Kubernetes的一个过渡阶段。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1658716349,"ip_address":"","comment_id":352463,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14543613995","product_id":100114501,"comment_content":"老师，目前Pod配置中使用了固定IP。如果pod被重启了，ip 是否会变化？如果有变化，这样配置是否有点不合理？","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581298,"discussion_content":"是的，会变化，到后面的中级篇会用Service对象来解决，这里是从docker到Kubernetes的一个过渡阶段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658716349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352455,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1658691713,"is_pvip":false,"replies":[{"id":"128198","content":"<br>1. ConfigMap已经含在pod yaml里了，是用“---”分隔的多个对象，所以一个文件就可以创建ConfigMap和pod。<br><br>2.反向代理就是在真正网站（WordPress）前的一个代理软件，提供安全防护等功能，可参考《透视HTTP协议》。不加这个其实也可以，主要的目的是模拟真实环境，增加一点部署难度。<br><br>3. minikube dashboard会自动启动浏览器，可以加-h看它的详细用法，也可以粘贴url。<br><br>4.要把配置文件用ConfigMap的形式加载，拷贝不行。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1658712453,"ip_address":"","comment_id":352455,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14543593601","product_id":100114501,"comment_content":"有在操作过程中遇到几个问题，还烦请老师指点<br><br>1、前面 2 个步骤中，在 kubectl apply -f *-pod.yml 之前是不是也得 apply 一下之前定义的 configMap 对象？<br><br>2、对于反向代理，不是特别的理解，老师能简单解释一下反向代理，并附带说明这里 Nginx 这里作为反向代理的目的是什么吗？<br><br>3、`minikube dashboard` 无法在命令行显示界面，我将 URL 复制粘贴到 Ubuntu 虚拟机图形界面上的浏览器中，但回复的 JSON 中显示 404？不太清楚有没有更好的方法<br>Opening http:&#47;&#47;127.0.0.1:38539&#47;api&#47;v1&#47;namespaces&#47;kubernetes-dashboard&#47;services&#47;http:kubernetes-dashboard:&#47;proxy&#47; in your default browser...<br>Error: no DISPLAY environment variable specified<br><br>4、对于思考题的 2，我创建一个了 nginx Pod，然后将其配置文件通过 kubectl cp 拷贝到 Pod 容器中的对应位置，但是发现并不起作用，本来想着重启 Pod 让配置生效，但是并没有找到对应的指令。这里是不是需要其他的 K8S API 对象的帮助？","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581291,"discussion_content":"\n1. ConfigMap已经含在pod yaml里了，是用“---”分隔的多个对象，所以一个文件就可以创建ConfigMap和pod。\n\n2.反向代理就是在真正网站（WordPress）前的一个代理软件，提供安全防护等功能，可参考《透视HTTP协议》。不加这个其实也可以，主要的目的是模拟真实环境，增加一点部署难度。\n\n3. minikube dashboard会自动启动浏览器，可以加-h看它的详细用法，也可以粘贴url。\n\n4.要把配置文件用ConfigMap的形式加载，拷贝不行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658712453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":581354,"discussion_content":"第4点，你可以自己做一个nginx的image, 包括修改之后的配置文件，放置在正确的位置。这样也可以的。只是不够弹性，如果配置要改，又得重新做image","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658736901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":581291,"ip_address":""},"score":581354,"extra":""}]},{"author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581342,"discussion_content":"3. 因为我是在 Mac 上的 Terminal SSH 到虚拟机上去，所以自动启动浏览器失败。只有在虚拟机图形界面中运行 minikube dashboard 才能正常自动启动浏览器。但是在图形界面的终端中跑 minikube dashboard 会报如下错误：\n\nExiting due to GUEST_STATUS: state: unknown state &#34;minikube&#34;: docker container inspect minikube --format=: exit status 1\nstdout:\n\nstderr:\nGot permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get &#34;http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/minikube/json&#34;: dial unix /var/run/docker.sock: connect: permission denied\n\n感觉挺奇怪的，同样在虚拟机上，为什么 SSH 登陆的可以正常运行 minikube dashboard, 但是图形界面登陆的就不行。最后查了下，更改了 docker 文件权限后就可以正常运行了，具体也不清楚为什么\nsudo chmod 666 /var/run/docker.sock\nsudo usermod -aG docker ${USER}","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1658731649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353592,"user_name":"wcy","can_delete":false,"product_type":"c1","uid":1316071,"ip_address":"北京","ucode":"E401E6C6D24032","user_header":"https://static001.geekbang.org/account/avatar/00/14/14/e7/c534fab3.jpg","comment_is_top":false,"comment_ctime":1659584555,"is_pvip":false,"replies":[{"id":"128558","content":"great","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1659589146,"ip_address":"北京","comment_id":353592,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10249519147","product_id":100114501,"comment_content":"作业1：改用secret可以，这个简单，把data里对应的值用base64编码就行，对应pod的yml改下<br>作业2：nginx改成pod 运行是成功的， 但是port-forward出来，linux虚机上用firefox打开页面是ok的。但在shell终端本地浏览器访问不了，看了下应该是port-forward的问题，映射的端口绑定在Linux虚机127.0.0.1上，所以virtualbox转发不出来。<br>nginx cm:<br>apiVersion: v1<br>kind: ConfigMap<br>metadata:<br>  name: ngx-cm<br>data:<br>  nginx.conf: |<br>    server {<br>    #  listen 80;<br>       listen 8080;<br>    #   default_type text&#47;html;<br><br>       location &#47; {<br>           proxy_http_version 1.1;<br>           proxy_set_header Host $host;<br>           proxy_pass http:&#47;&#47;172.17.0.10:80;<br>       }<br>     }<br><br>nginx pod配置：<br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: wp-ngx-pod<br>  labels:<br>    env: test<br><br>spec:<br>  containers:<br>  - image: nginx:alpine<br>    name: wp-ngx<br>    ports:<br>    - containerPort: 8080<br>    volumeMounts:<br>    - mountPath: &#47;etc&#47;nginx&#47;conf.d&#47;<br>      name: myngxconf<br><br>  volumes:<br>  - name: myngxconf<br>    configMap:<br>      name: ngx-cm<br>      items:<br>      - key: nginx.conf<br>        path: default.conf<br>","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582675,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659589146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352931,"user_name":"朱雯","can_delete":false,"product_type":"c1","uid":1035744,"ip_address":"陕西","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1659021891,"is_pvip":true,"replies":[{"id":"128328","content":"Kubernetes面对的是大规模集群，其实这些都是可以用ci&#47;cd自动化的，我们现在的学习是从底层做起全手动操作，当然会麻烦一些，到后面会有更高级的对象，比如Deployment。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1659062313,"ip_address":"陕西","comment_id":352931,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10248956483","product_id":100114501,"comment_content":"学了这一节，没感觉到容器编排的好用，反而遇到了一个问题，在配置中，我把wordpress链接数据库的host给小写了，结果一直告诉我链接数据库失败，我也没有排查手段，一直失败，我想的是，这个k8s的部署步骤实在是太复杂了，复杂到配置需要一个yaml，容器需要一个yaml，port-forward也需要一个yaml，我想如果是docker直接部署，其实就需要两条命令，所有参数都放到env中，或者放到配置文件中，也比检查yaml文件强，在入门篇中没感受到k8s的好用，只感觉到琐碎，是因为服务太小，还是因为没用好的原因呢<br>","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581894,"discussion_content":"Kubernetes面对的是大规模集群，其实这些都是可以用ci/cd自动化的，我们现在的学习是从底层做起全手动操作，当然会麻烦一些，到后面会有更高级的对象，比如Deployment。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659062313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352557,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1658760889,"is_pvip":true,"replies":[{"id":"128228","content":"<br>1.当然可以，Pod里的多容器可以任意组合，但一般做法都是一个应用一个Pod<br><br>2.是的，参考入门篇，MariaDB要求环境变量必须这么命名。<br><br>3.是的，这样外界用的就是80端口，转发的地址端口就不会乱。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1658789642,"ip_address":"","comment_id":352557,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10248695481","product_id":100114501,"comment_content":"请教老师几个问题：<br>Q1：MariaDB和WP可以跑在一个POD里面吗？<br><br>Q2：文中的prefix是什么意思？<br>文中定义mariadb-pod.yml的时候，有一个prefix: &#39;MARIADB_&#39;， 这是什么意思？<br>是把configMap中的变量名字前面加上这个前缀作为pod中的变量名称吗？<br>即：pod中的变量名称 = MARIADB_&#39; + configMap中的变量名称。<br>Q3：关于转发的疑问<br>文中有一句：“因为 WordPress 网站使用了 URL 重定向，直接使用“8080”会导致跳转故障”。 如果没有nginx，宿主机上用浏览器直接访问WP的8080端口，则会因为WP内部实现机制而产生错误； 如果加上nginx，nginx去访问WP的8080端口，就没事。 是这样吗？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581433,"discussion_content":"\n1.当然可以，Pod里的多容器可以任意组合，但一般做法都是一个应用一个Pod\n\n2.是的，参考入门篇，MariaDB要求环境变量必须这么命名。\n\n3.是的，这样外界用的就是80端口，转发的地址端口就不会乱。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658789642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2917100,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/82/ec/99b480e8.jpg","nickname":"hiDaLao","note":"","ucode":"3C2DC2A3A377E4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581419,"discussion_content":"1：可以但最好不要，不利于业务的拓展\n2：是的，老师文中有解答，“指定变量名的前缀（即这里的 MARIADB_）”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658765874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354353,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"北京","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1660295236,"is_pvip":false,"replies":[{"id":"128888","content":"awesome！","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660306997,"ip_address":"北京","comment_id":354353,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5955262532","product_id":100114501,"comment_content":"写一下第2题吧解题步骤：<br>首先如果我们把docker 形式改成pod形式这里存在两个问题（1）网络问题，（2）nginx配置文件加载问题，<br>第一个问题k8s的插件会处理节点内以及节点间网络通信问题，这个我们这里暂时不需要考虑，<br>那么需要我们处理的就是配置文件问题：这里我们可以用多个方法处理<br>   a: pod挂载宿主机目录，把配置文件放到宿主机目录下，容器启动挂载<br>   b: 使用我们学过的configMap<br>   c：使用pv、pvc 这个后面老师应该会讲到<br>这里我门就使用第二种方法，也是评论里使用最多的方法：<br>yml文件如下：<br>    ngx-cm.yml<br><br>apiVersion: v1<br>kind: ConfigMap<br>metadata:<br>  name: ngx-cm<br>data:<br>  nginx.conf: |<br>    server {<br>      listen 8080;<br>      #default_type text&#47;html;<br><br>      location &#47; {<br>        proxy_http_version 1.1;<br>        proxy_set_header Host $host;<br>        proxy_pass http:&#47;&#47;172.17.0.9:80;<br>      }<br>    }<br><br>nginx.yml:<br><br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: ngx-pod<br>  labels:<br>    env: demo<br>    owner: ant<br><br>spec:<br>  volumes:<br>    - name: nginx-conf<br>      configMap:<br>        name: ngx-cm<br>        items:<br>        - key: nginx.conf<br>          path: default.conf<br>  containers:<br>  - image: nginx:alpine<br>    name: ngx<br>    volumeMounts:<br>      - name: nginx-conf<br>        mountPath: &#47;etc&#47;nginx&#47;conf.d<br>    ports:<br>    - containerPort: 8080<br><br>然后使用 kubectl apply -f nginx.yml 创建pod，但是这个时候由于k8s节点还是一个隔离环境，所以我们还是无法访问，<br>所以我们要在网页观察到具体的网页内容，还是要再用docker创建一层nginx代理，server 内容如下：<br>server {<br>  listen 80;<br>  default_type text&#47;html;<br><br>  location &#47; {<br>      proxy_http_version 1.1;<br>      proxy_set_header Host $host;<br>      proxy_pass http:&#47;&#47;127.0.0.1:8888;<br>  }<br>}<br><br>使用 docker run -d --rm --net=host -v &#47;home&#47;ant&#47;kubernetes&#47;pod&#47;nginx-conf&#47;nginx.conf:&#47;etc&#47;nginx&#47;conf.d&#47;default.conf nginx:alpine<br>启动，<br>然后使用 kubectl port-forward ngx-pod 8888:8080 &amp; 做转发<br><br>访问 http:&#47;&#47;192.168.56.208&#47; 正常访问","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583714,"discussion_content":"awesome！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660306997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354127,"user_name":"Geek_39bdd5","can_delete":false,"product_type":"c1","uid":2781060,"ip_address":"北京","ucode":"CEC28F9978165F","user_header":"","comment_is_top":false,"comment_ctime":1660117378,"is_pvip":false,"replies":[{"id":"128804","content":"也许是网络插件没有正常工作？","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660122618,"ip_address":"北京","comment_id":354127,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5955084674","product_id":100114501,"comment_content":"kubectl get pod -o wide查看的时候ip显示是none是怎么回事<br>","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583448,"discussion_content":"也许是网络插件没有正常工作？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660122618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2203253,"avatar":"https://static001.geekbang.org/account/avatar/00/21/9e/75/3ff9e7aa.jpg","nickname":"Java-刘新漳","note":"","ucode":"28F0BAA103CE6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588241,"discussion_content":"我的也是这样的，用describe查看event，发现卡在拉取镜像那边了，过了好一会才拉完启动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663605021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1401511,"avatar":"https://static001.geekbang.org/account/avatar/00/15/62/a7/595b36f8.jpg","nickname":"chuanshen","note":"","ucode":"02B565DFA534A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588001,"discussion_content":"有可能是还没启动完成，等议会，到runing的状态\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663429560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1193366,"avatar":"https://static001.geekbang.org/account/avatar/00/12/35/96/6abd636f.jpg","nickname":"null","note":"","ucode":"709A3D55AB8961","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583610,"discussion_content":"我也产生了这个问题，我是等了5分钟左右自动分配了IP地址了，你多等一下试试看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660233012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353418,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"上海","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1659425916,"is_pvip":false,"replies":[{"id":"128482","content":"--net=host是让docker用本机的网络，不是bridge端口映射，前面应该讲过了。<br><br>如果是拒绝访问，应该找其他的原因。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1659430874,"ip_address":"上海","comment_id":353418,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5954393212","product_id":100114501,"comment_content":"老师，docker run -d --rm \\ --net=host ，这里的--net=host 起什么作用啊？加了以后，直接拒绝访问了，之前不都是会端口映射用来访问的吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582423,"discussion_content":"--net=host是让docker用本机的网络，不是bridge端口映射，前面应该讲过了。\n\n如果是拒绝访问，应该找其他的原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659430874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352939,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"北京","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1659025067,"is_pvip":false,"replies":[{"id":"128329","content":"port-forward 应该只能本机访问，可以用curl验证一下。它的功能很弱，只能用来测试，要被外界访问还是得用docker启一个Nginx反向代理才行。<br><br>这道题只要动手操作过就行了，没必要一定要出结果，因为后面会有更好的Kubernetes处理方式。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1659062470,"ip_address":"北京","comment_id":352939,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5953992363","product_id":100114501,"comment_content":"第二题根据老师的回复修改了下，但是还是连不上<br><br>virtual-machine:~&#47;k8s-testing&#47;wordpress$ cat ngx-pod.yml<br>apiVersion: v1<br>kind: ConfigMap<br>metadata:<br>  name: ngx-cm<br><br>data:<br>  default.conf: |-<br>    server {<br>      listen 80;<br>      default_type text&#47;html;<br><br>      location &#47; {<br>        proxy_http_version 1.1;<br>        proxy_set_header Host $host;<br>        proxy_pass http:&#47;&#47;172.17.0.6:80;<br>      }<br>    }<br><br>---<br><br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: ngx-pod<br>  labels:<br>    app: nginx-alpine<br>    role: website<br><br>spec:<br>  volumes:<br>    - name: conf<br>      configMap:<br>        name: ngx-cm<br><br>  containers:<br>  - volumeMounts:<br>    - mountPath: &#47;etc&#47;nginx&#47;conf.d&#47;<br>      name: conf<br><br>    image: nginx:alpine<br>    name: ngx-pod<br>    imagePullPolicy: IfNotPresent<br>    ports:<br>    - containerPort: 80<br><br>port-forward 那里我取消了 wp-pod 的 port-forward, 原因是这里是直接从 ngx-pod bypass 到 wp-pod，所以不需要 forward 外界的端口。但是 ngx-pod 在容器中，还是需要的，指令如下<br><br>kubectl port-forward ngx-pod 8080:80 &amp;<br><br>不知道为什么，从 Mac 浏览器就是连不上。我也进到 ngx-pod 上检查了，配置文件什么的都和上面定义的一样。还烦请老师在帮忙看看 😂<br><br>","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581896,"discussion_content":"port-forward 应该只能本机访问，可以用curl验证一下。它的功能很弱，只能用来测试，要被外界访问还是得用docker启一个Nginx反向代理才行。\n\n这道题只要动手操作过就行了，没必要一定要出结果，因为后面会有更好的Kubernetes处理方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659062470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625530,"avatar":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","nickname":"YueShi","note":"","ucode":"8F7AFAE4641A7D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582648,"discussion_content":"Mac无法访问的原因在于Mac上的软件架构问题，写了一篇文章，期待能给你带来帮助\n\nhttps://juejin.cn/post/7127679053242302477","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659577508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185500,"avatar":"https://static001.geekbang.org/account/avatar/00/12/16/dc/e860a835.jpg","nickname":"肖二郎","note":"","ucode":"BD1216F1DF0DA6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582183,"discussion_content":"port-foward 后面加上 --address试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659285129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352816,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1658967342,"is_pvip":true,"replies":[{"id":"128295","content":"Nginx配置文件里除了要用WordPress的IP地址，端口号也要是WordPress的端口，也就是80。<br><br>之前在docker用的8080，是因为port-forward映射的是本地端口号8080。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1658970986,"ip_address":"","comment_id":352816,"utype":1}],"discussion_count":2,"race_medal":5,"score":"5953934638","product_id":100114501,"comment_content":"第二题：改是能改，但是就是连不上<br>已经参考了老师给phyhou的回复中的对Nginx配置修改，接着是kubectl port-forward &lt;nginx&gt; 8080:80 &amp;，结果还是连不上<br><br>完整代码：<br>#Nginx.yaml<br>apiVersion: v1<br><br>kind: ConfigMap<br><br>metadata:<br><br>  name: wpma-ngx-cm<br><br><br><br>data:<br><br>  default.conf: |-<br><br>    server {<br><br>      listen 80;<br><br>      default_type text&#47;html;<br><br><br><br>      location &#47; {<br><br>          proxy_http_version 1.1;<br><br>          proxy_set_header Host $host;<br><br>          proxy_pass http:&#47;&#47;172.17.0.6:8080; &#47;&#47;wordpress ip<br><br>      }<br><br>    }<br><br><br><br>---<br><br><br><br>apiVersion: v1<br><br>kind: Pod<br><br>metadata:<br><br>  labels:<br><br>    run: wpma-ngx<br><br>  name: wpma-ngx<br><br><br><br>spec:<br><br>  containers:<br><br>  - image: nginx:alpine<br><br>    name: wpma-ngx<br><br>    imagePullPolicy: IfNotPresent<br><br>    ports:<br><br>    - containerPort: 80<br><br><br><br>    volumeMounts:<br><br>      - name: wpma-ngx-cm<br><br>        mountPath: &quot;etc&#47;nginx&#47;conf.d&quot;<br><br>  volumes:<br><br>    - name: wpma-ngx-cm<br><br>      configMap:<br><br>        name: wpma-ngx-cm","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581749,"discussion_content":"Nginx配置文件里除了要用WordPress的IP地址，端口号也要是WordPress的端口，也就是80。\n\n之前在docker用的8080，是因为port-forward映射的是本地端口号8080。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658970986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009622,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/d6/2f5cb85c.jpg","nickname":"xmr","note":"","ucode":"1BBF165F91F10B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586889,"discussion_content":"mountPath: &#34;etc/nginx/conf.d&#34;写错了，应该是mountPath: &#34;/etc/nginx/conf.d&#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662571850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352814,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1658962233,"is_pvip":true,"replies":[{"id":"128294","content":"good","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1658970908,"ip_address":"","comment_id":352814,"utype":1}],"discussion_count":1,"race_medal":5,"score":"5953929529","product_id":100114501,"comment_content":"终于能把网站给弄起来了，开心。<br><br>第一题：改成用secret，很简单，就是把老师的示例里的configMapRef改成secretRef<br>完整代码：<br>#maria secret<br><br>apiVersion: v1<br><br>data:<br><br>  DATABASE: ZGI=<br><br>  PASSWORD: MTIz<br><br>  ROOT_PASSWORD: MTIz<br><br>  USER: d3A=<br><br>kind: Secret<br><br>metadata:<br><br>  creationTimestamp: null<br><br>  name: maria-sc<br><br><br><br>---<br><br><br><br>apiVersion: v1<br><br>kind: Pod<br><br>metadata:<br><br>  labels:<br><br>    app: wordpress<br><br>    role: database<br><br>  name: mariasc-pod<br><br><br><br>spec:<br><br>  containers:<br><br>  - image: mariadb:10<br><br>    name: maria<br><br>    imagePullPolicy: IfNotPresent<br><br>    ports:<br><br>    - containerPort: 3306<br><br>  <br><br>    envFrom:<br><br>    - prefix: &#39;MARIADB_&#39;<br><br>      secretRef:<br><br>        name: maria-sc<br><br><br>#WordPress secret<br>apiVersion: v1<br><br>data:<br><br>  HOST: MTcyLjE3LjAuNw==<br><br>  NAME: ZGI=<br><br>  PASSWORD: MTIz<br><br>  USER: d3A=<br><br>kind: Secret<br><br>metadata:<br><br>  creationTimestamp: null<br><br>  name: wp-sc<br><br><br><br>---<br><br><br><br>apiVersion: v1<br><br>kind: Pod<br><br>metadata:<br><br>  labels:<br><br>    app: wordpress<br><br>    role: website<br><br>  name: wpsc-pod<br><br><br><br>spec:<br><br>  containers:<br><br>  - image: wordpress:5<br><br>    name: wordpress<br><br>    imagePullPolicy: IfNotPresent<br><br>    ports:<br><br>    - containerPort: 80<br><br><br><br>    envFrom:<br><br>    - prefix: &#39;WORDPRESS_DB_&#39;<br><br>      secretRef:<br><br>        name: wp-sc<br><br>","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581748,"discussion_content":"good","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658970908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352812,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1658949182,"is_pvip":true,"replies":[{"id":"128293","content":"great","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1658970892,"ip_address":"","comment_id":352812,"utype":1}],"discussion_count":1,"race_medal":5,"score":"5953916478","product_id":100114501,"comment_content":"终于跑通了，感动","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581747,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658970892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352747,"user_name":"RRR","can_delete":false,"product_type":"c1","uid":1014991,"ip_address":"","ucode":"F32A579D201EC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/cf/d5382404.jpg","comment_is_top":false,"comment_ctime":1658908491,"is_pvip":false,"replies":[{"id":"128280","content":"<br>1. port-forward只能用于测试，生产环境当然要用Ingress<br><br>2.helm可以理解成是Kubernetes的安装包，istio是运行在Kubernetes上的服务网格。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1658915040,"ip_address":"","comment_id":352747,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5953875787","product_id":100114501,"comment_content":"两个问题<br><br>1. port-forward 实际在生产用的多么？应该都是 ingress 吧<br>2. 老师后面能讲讲 helm 和 Istio 吗，他们和 k8s 关系是什么，我看不明白","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581681,"discussion_content":"\n1. port-forward只能用于测试，生产环境当然要用Ingress\n\n2.helm可以理解成是Kubernetes的安装包，istio是运行在Kubernetes上的服务网格。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658915040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014991,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/cf/d5382404.jpg","nickname":"RRR","note":"","ucode":"F32A579D201EC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581684,"discussion_content":"对 其实就是不理解什么是服务网格","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658916733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352569,"user_name":"Matthew","can_delete":false,"product_type":"c1","uid":2843865,"ip_address":"","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1658765309,"is_pvip":true,"replies":[{"id":"128261","content":"用kubectl describe 检查一下pod，可能是镜像没拉取下来。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1658813833,"ip_address":"","comment_id":352569,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5953732605","product_id":100114501,"comment_content":"执行 kubectl apply  -f mariadb-pod.yml 以后，POD的状态一直是 ContainerCreating，是什么原因？应该怎么处理呢？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581494,"discussion_content":"用kubectl describe 检查一下pod，可能是镜像没拉取下来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658813834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581568,"discussion_content":"也可能是报错了，使用 kubectl logs pod [pod name]","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1658842817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1640477,"avatar":"https://static001.geekbang.org/account/avatar/00/19/08/1d/30b32c93.jpg","nickname":"路人丁","note":"","ucode":"078F0235DAFCA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582374,"discussion_content":"pull image 很费时间。耐心等待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659411875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360334,"user_name":"可可","can_delete":false,"product_type":"c1","uid":1053294,"ip_address":"上海","ucode":"297A5D32949128","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ1VPGSQg7SqrN1Gutx31Kicks2icZjTCg1gZoDLfEcSSricYD6l5qQgE3MkMpqlhkM4gMicymOYzaudg/132","comment_is_top":false,"comment_ctime":1666438474,"is_pvip":true,"replies":[{"id":"131151","content":"是的，这个一定要注意。<br><br>minikube在它的虚拟节点里又运行了一个docker daemon，外界是看不到的，可以想象成是一个独立的虚拟机。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1666588678,"ip_address":"上海","comment_id":360334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1666438474","product_id":100114501,"comment_content":"kubectl apply -f wp-pod.yml执行后每次都失败，看了一下kubectl describe pod wp-pod，发现是拉去镜像超时。我就纳闷为啥我本地存在wordpress:5的docker镜像，为啥这里找不到呢。后来在网上看到minikube使用独立的docker daemon，不同于本地的docker守护进程。所以需要先把本地的docker镜像导入到minikube之中才能使用。<br>docker save wordpress:5 | (eval $(minikube docker-env) &amp;&amp; docker load)<br>此命令将镜像保存为tar存档,然后将镜像加载到minikube中。这时候删除掉之前apply失败的pod，重新apply就成功了。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591455,"discussion_content":"是的，这个一定要注意。\n\nminikube在它的虚拟节点里又运行了一个docker daemon，外界是看不到的，可以想象成是一个独立的虚拟机。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666588678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359961,"user_name":"rubys_","can_delete":false,"product_type":"c1","uid":1394115,"ip_address":"北京","ucode":"931AD02864126A","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/c3/051ffe83.jpg","comment_is_top":false,"comment_ctime":1666090886,"is_pvip":true,"replies":[{"id":"130932","content":"当然了，都是一个应用一个pod，这样方便独立部署、管理、扩容，多个容器在一个pod里的情况也有，但比较少。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1666096023,"ip_address":"北京","comment_id":359961,"utype":1}],"discussion_count":1,"race_medal":5,"score":"1666090886","product_id":100114501,"comment_content":"我一开始以为会将 db 跟 wp 放在同一个 pod 的两个 container 里面的，没想到是两个 pod。在生产环境里面，这种场景也会是不同的 pod 吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590833,"discussion_content":"当然了，都是一个应用一个pod，这样方便独立部署、管理、扩容，多个容器在一个pod里的情况也有，但比较少。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1666096023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357463,"user_name":"Geek_fc4e0b","can_delete":false,"product_type":"c1","uid":2894152,"ip_address":"北京","ucode":"67A7F1D7A896FF","user_header":"","comment_is_top":false,"comment_ctime":1663290540,"is_pvip":false,"replies":[{"id":"130097","content":"标签随便写的，没什么特殊含义，真正运行的时候要和实际环境结合。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1663299895,"ip_address":"北京","comment_id":357463,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1663290540","product_id":100114501,"comment_content":"老师好：能解释一下标签为什么是wordpress和website吗，有什么特殊含义吗，两个yaml文件得标签有啥关系，不写这个标签有啥影响","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587801,"discussion_content":"标签随便写的，没什么特殊含义，真正运行的时候要和实际环境结合。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663299895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355725,"user_name":"Aioria","can_delete":false,"product_type":"c1","uid":1161407,"ip_address":"上海","ucode":"E7158D2E1C1B72","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/bf/3a6e8773.jpg","comment_is_top":false,"comment_ctime":1661695893,"is_pvip":false,"replies":[{"id":"129470","content":"kubectl port-forward只能用来测试，不能用于生产，所以不能在ci&#47;cd里用，应该改成service的方式。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1661743665,"ip_address":"上海","comment_id":355725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1661695893","product_id":100114501,"comment_content":"老师，有个疑问，` kubectl port-forward`这条命令是否也能在.yml文件中描述呢？运行Pod后再以命令方式映射端口，似乎不利于CI&#47;CD。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585640,"discussion_content":"kubectl port-forward只能用来测试，不能用于生产，所以不能在ci/cd里用，应该改成service的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661743665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354041,"user_name":"rongyefeng","can_delete":false,"product_type":"c1","uid":1959482,"ip_address":"北京","ucode":"9A15D947E9D645","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e6/3a/382cf024.jpg","comment_is_top":false,"comment_ctime":1660038407,"is_pvip":false,"replies":[{"id":"128779","content":"是的，可以让我们省些力气，少写点字。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1660041070,"ip_address":"北京","comment_id":354041,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660038407","product_id":100114501,"comment_content":"并且能够指定变量名的前缀（即这里的 MARIADB_） ：这里可以理解为在data中各个字段的基础上加上这个前缀吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583337,"discussion_content":"是的，可以让我们省些力气，少写点字。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660041070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353664,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"北京","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1659666201,"is_pvip":false,"replies":[{"id":"128585","content":"这个不是Kubernetes的官方概念，是我自己的理解，你可以参考来方便学习。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1659667812,"ip_address":"北京","comment_id":353664,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659666201","product_id":100114501,"comment_content":"老师，实体对象和非实体对象是怎么区分的？ 带有容器的就是实体对象吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582775,"discussion_content":"这个不是Kubernetes的官方概念，是我自己的理解，你可以参考来方便学习。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659667812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352943,"user_name":"朱雯","can_delete":false,"product_type":"c1","uid":1035744,"ip_address":"北京","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1659025647,"is_pvip":true,"replies":[{"id":"128323","content":"是的，port-forward只是用来测试的，所以要求也不必太高。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1659060688,"ip_address":"北京","comment_id":352943,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659025647","product_id":100114501,"comment_content":"8080:80 wp-pod应该是将宿主机的8080转向到容器的80，但只要容器重启，这条规则就没了，需要重新加入。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581885,"discussion_content":"是的，port-forward只是用来测试的，所以要求也不必太高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659060688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352942,"user_name":"朱雯","can_delete":false,"product_type":"c1","uid":1035744,"ip_address":"陕西","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1659025596,"is_pvip":true,"replies":[{"id":"128320","content":"great","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1659057328,"ip_address":"陕西","comment_id":352942,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659025596","product_id":100114501,"comment_content":"1. 第一题<br>重点修改，所有内容都用base64加密后存储，类型为Secret，S为大写,configMapRef改为secretRef,首字母注意小写。<br>实际测试过程中发现echo -n &quot;172.17.0.5&quot;|base64 和echo &quot;172.17.0.5&quot; |base64是有差别的，但是环境变量里面看不出来，所以一直配置失败。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581875,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659057328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}