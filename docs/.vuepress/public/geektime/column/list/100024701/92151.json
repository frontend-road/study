{"id":92151,"title":"13 | 进程数据结构（中）：项目多了就需要项目管理系统","content":"<p>上一节我们讲了，task_struct这个结构非常长。由此我们可以看出，Linux内核的任务管理是非常复杂的。上一节，我们只是讲了一部分，今天我们接着来解析剩下的部分。</p><h2>运行统计信息</h2><p>作为项目经理，你肯定需要了解项目的运行情况。例如，有的员工很长时间都在做一个任务，这个时候你就需要特别关注一下；再如，有的员工的琐碎任务太多，这会大大影响他的工作效率。</p><p>那如何才能知道这些员工的工作情况呢？在进程的运行过程中，会有一些统计量，具体你可以看下面的列表。这里面有进程在用户态和内核态消耗的时间、上下文切换的次数等等。</p><pre><code>u64\t\t\t\tutime;//用户态消耗的CPU时间\nu64\t\t\t\tstime;//内核态消耗的CPU时间\nunsigned long\t\t\tnvcsw;//自愿(voluntary)上下文切换计数\nunsigned long\t\t\tnivcsw;//非自愿(involuntary)上下文切换计数\nu64\t\t\t\tstart_time;//进程启动时间，不包含睡眠时间\nu64\t\t\t\treal_start_time;//进程启动时间，包含睡眠时间\n</code></pre><h2>进程亲缘关系</h2><p>从我们之前讲的创建进程的过程，可以看出，任何一个进程都有父进程。所以，整个进程其实就是一棵进程树。而拥有同一父进程的所有进程都具有兄弟关系。</p><pre><code>struct task_struct __rcu *real_parent; /* real parent process */\nstruct task_struct __rcu *parent; /* recipient of SIGCHLD, wait4() reports */\nstruct list_head children;      /* list of my children */\nstruct list_head sibling;       /* linkage in my parent's children list */\n</code></pre><ul>\n<li>\n<p>parent指向其父进程。当它终止时，必须向它的父进程发送信号。</p>\n</li>\n<li>\n<p>children表示链表的头部。链表中的所有元素都是它的子进程。</p>\n</li>\n<li>\n<p>sibling用于把当前进程插入到兄弟链表中。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/92/04/92711107d8dcdf2c19e8fe4ee3965304.jpeg?wh=1808*1961\" alt=\"\"></p><p>通常情况下，real_parent和parent是一样的，但是也会有另外的情况存在。例如，bash创建一个进程，那进程的parent和real_parent就都是bash。如果在bash上使用GDB来debug一个进程，这个时候GDB是parent，bash是这个进程的real_parent。</p><!-- [[[read_end]]] --><h2>进程权限</h2><p>了解了运行统计信息，接下来，我们需要关注一下项目组权限的控制。什么是项目组权限控制呢？这么说吧，我这个项目组能否访问某个文件，能否访问其他的项目组，以及我这个项目组能否被其他项目组访问等等，这都是项目组权限的控制范畴。</p><p>在Linux里面，对于进程权限的定义如下：</p><pre><code>/* Objective and real subjective task credentials (COW): */\nconst struct cred __rcu         *real_cred;\n/* Effective (overridable) subjective task credentials (COW): */\nconst struct cred __rcu         *cred;\n</code></pre><p>这个结构的注释里，有两个名词比较拗口，Objective和Subjective。事实上，所谓的权限，就是我能操纵谁，谁能操纵我。</p><p>“谁能操作我”，很显然，这个时候我就是被操作的对象，就是Objective，那个想操作我的就是Subjective。“我能操作谁”，这个时候我就是Subjective，那个要被我操作的就是Objectvie。</p><p>“操作”，就是一个对象对另一个对象进行某些动作。当动作要实施的时候，就要审核权限，当两边的权限匹配上了，就可以实施操作。其中，real_cred就是说明谁能操作我这个进程，而cred就是说明我这个进程能够操作谁。</p><p>这里cred的定义如下：</p><pre><code>struct cred {\n......\n        kuid_t          uid;            /* real UID of the task */\n        kgid_t          gid;            /* real GID of the task */\n        kuid_t          suid;           /* saved UID of the task */\n        kgid_t          sgid;           /* saved GID of the task */\n        kuid_t          euid;           /* effective UID of the task */\n        kgid_t          egid;           /* effective GID of the task */\n        kuid_t          fsuid;          /* UID for VFS ops */\n        kgid_t          fsgid;          /* GID for VFS ops */\n......\n        kernel_cap_t    cap_inheritable; /* caps our children can inherit */\n        kernel_cap_t    cap_permitted;  /* caps we're permitted */\n        kernel_cap_t    cap_effective;  /* caps we can actually use */\n        kernel_cap_t    cap_bset;       /* capability bounding set */\n        kernel_cap_t    cap_ambient;    /* Ambient capability set */\n......\n} __randomize_layout;\n</code></pre><p>从这里的定义可以看出，大部分是关于<strong>用户和用户所属的用户组信息</strong>。</p><p>第一个是uid和gid，注释是real user/group id。一般情况下，谁启动的进程，就是谁的ID。但是权限审核的时候，往往不比较这两个，也就是说不大起作用。</p><p>第二个是euid和egid，注释是effective user/group id。一看这个名字，就知道这个是起“作用”的。当这个进程要操作消息队列、共享内存、信号量等对象的时候，其实就是在比较这个用户和组是否有权限。</p><p>第三个是fsuid和fsgid，也就是filesystem user/group id。这个是对文件操作会审核的权限。</p><p>一般说来，fsuid、euid，和uid是一样的，fsgid、egid，和gid也是一样的。因为谁启动的进程，就应该审核启动的用户到底有没有这个权限。</p><p>但是也有特殊的情况。</p><p><img src=\"https://static001.geekbang.org/resource/image/c4/f7/c4688c36afd90f933727483c56500ff7.jpeg?wh=2238*2115\" alt=\"\"></p><p>例如，用户A想玩一个游戏，这个游戏的程序是用户B安装的。游戏这个程序文件的权限为rwxr–r--。A是没有权限运行这个程序的，所以用户B要给用户A权限才行。用户B说没问题，都是朋友嘛，于是用户B就给这个程序设定了所有的用户都能执行的权限rwxr-xr-x，说兄弟你玩吧。</p><p>于是，用户A就获得了运行这个游戏的权限。当游戏运行起来之后，游戏进程的uid、euid、fsuid都是用户A。看起来没有问题，玩得很开心。</p><p>用户A好不容易通过一关，想保留通关数据的时候，发现坏了，这个游戏的玩家数据是保存在另一个文件里面的。这个文件权限rw-------，只给用户B开了写入权限，而游戏进程的euid和fsuid都是用户A，当然写不进去了。完了，这一局白玩儿了。</p><p>那怎么解决这个问题呢？我们可以通过chmod u+s program命令，给这个游戏程序设置set-user-ID的标识位，把游戏的权限变成rwsr-xr-x。这个时候，用户A再启动这个游戏的时候，创建的进程uid当然还是用户A，但是euid和fsuid就不是用户A了，因为看到了set-user-id标识，就改为文件的所有者的ID，也就是说，euid和fsuid都改成用户B了，这样就能够将通关结果保存下来。</p><p>在Linux里面，一个进程可以随时通过setuid设置用户ID，所以，游戏程序的用户B的ID还会保存在一个地方，这就是suid和sgid，也就是saved uid和save gid。这样就可以很方便地使用setuid，通过设置uid或者suid来改变权限。</p><p>除了以用户和用户组控制权限，Linux还有另一个机制就是<strong>capabilities</strong>。</p><p>原来控制进程的权限，要么是高权限的root用户，要么是一般权限的普通用户，这时候的问题是，root用户权限太大，而普通用户权限太小。有时候一个普通用户想做一点高权限的事情，必须给他整个root的权限。这个太不安全了。</p><p>于是，我们引入新的机制capabilities，用位图表示权限，在capability.h可以找到定义的权限。我这里列举几个。</p><pre><code>#define CAP_CHOWN            0\n#define CAP_KILL             5\n#define CAP_NET_BIND_SERVICE 10\n#define CAP_NET_RAW          13\n#define CAP_SYS_MODULE       16\n#define CAP_SYS_RAWIO        17\n#define CAP_SYS_BOOT         22\n#define CAP_SYS_TIME         25\n#define CAP_AUDIT_READ          37\n#define CAP_LAST_CAP         CAP_AUDIT_READ\n</code></pre><p>对于普通用户运行的进程，当有这个权限的时候，就能做这些操作；没有的时候，就不能做，这样粒度要小很多。</p><p>cap_permitted表示进程能够使用的权限。但是真正起作用的是cap_effective。cap_permitted中可以包含cap_effective中没有的权限。一个进程可以在必要的时候，放弃自己的某些权限，这样更加安全。假设自己因为代码漏洞被攻破了，但是如果啥也干不了，就没办法进一步突破。</p><p>cap_inheritable表示当可执行文件的扩展属性设置了inheritable位时，调用exec执行该程序会继承调用者的inheritable集合，并将其加入到permitted集合。但在非root用户下执行exec时，通常不会保留inheritable集合，但是往往又是非root用户，才想保留权限，所以非常鸡肋。</p><p>cap_bset，也就是capability bounding set，是系统中所有进程允许保留的权限。如果这个集合中不存在某个权限，那么系统中的所有进程都没有这个权限。即使以超级用户权限执行的进程，也是一样的。</p><p>这样有很多好处。例如，系统启动以后，将加载内核模块的权限去掉，那所有进程都不能加载内核模块。这样，即便这台机器被攻破，也做不了太多有害的事情。</p><p>cap_ambient是比较新加入内核的，就是为了解决cap_inheritable鸡肋的状况，也就是，非root用户进程使用exec执行一个程序的时候，如何保留权限的问题。当执行exec的时候，cap_ambient会被添加到cap_permitted中，同时设置到cap_effective中。</p><h2>内存管理</h2><p>每个进程都有自己独立的虚拟内存空间，这需要有一个数据结构来表示，就是mm_struct。这个我们在内存管理那一节详细讲述。这里你先有个印象。</p><pre><code>struct mm_struct                *mm;\nstruct mm_struct                *active_mm;\n</code></pre><h2>文件与文件系统</h2><p>每个进程有一个文件系统的数据结构，还有一个打开文件的数据结构。这个我们放到文件系统那一节详细讲述。</p><pre><code>/* Filesystem information: */\nstruct fs_struct                *fs;\n/* Open file information: */\nstruct files_struct             *files;\n</code></pre><h2>总结时刻</h2><p>这一节，我们终于把进程管理复杂的数据结构基本讲完了，请你重点记住以下两点：</p><ul>\n<li>\n<p>进程亲缘关系维护的数据结构，是一种很有参考价值的实现方式，在内核中会多个地方出现类似的结构；</p>\n</li>\n<li>\n<p>进程权限中setuid的原理，这一点比较难理解，但是很重要，面试经常会考。</p>\n</li>\n</ul><p>你可以对着下面这张图，看看自己是否真的理解了，进程树是如何组织的，以及如何控制进程的权限的。</p><p><img src=\"https://static001.geekbang.org/resource/image/1c/bc/1c91956b52574b62a4418a7c6993d8bc.jpeg?wh=2098*2332\" alt=\"\"></p><h2>课堂练习</h2><p>通过这一节的学习，你会发现，一个进程的运行竟然要保存这么多信息，这些信息都可以通过命令行取出来，所以今天的练习题就是，对于一个正在运行的进程，通过命令行找到上述进程运行的所有信息。</p><p>欢迎留言和我分享你的疑惑和见解，也欢迎你收藏本节内容，反复研读。你也可以把今天的内容分享给你的朋友，和他一起学习、进步。</p><p><img src=\"https://static001.geekbang.org/resource/image/8c/37/8c0a95fa07a8b9a1abfd394479bdd637.jpg?wh=1110*659\" alt=\"\"></p>","comments":[{"had_liked":false,"id":89083,"user_name":"石维康","can_delete":false,"product_type":"c1","uid":1067564,"ip_address":"","ucode":"E39ED8416B2C01","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/2c/f8451d77.jpg","comment_is_top":false,"comment_ctime":1556073731,"is_pvip":false,"replies":[{"id":"32025","content":"谢谢，果真弄反了","user_name":"作者回复","comment_id":89083,"uid":"1001590","ip_address":"","utype":1,"ctime":1556195015,"user_name_real":"刘超@网易云"}],"discussion_count":4,"race_medal":0,"score":"254959144195","product_id":100024701,"comment_content":"文中说“如果在 bash 上使用 GDB 来 debug 一个进程，这个时候 GDB 是 real_parent，bash 是这个进程的 parent。”<br>根据copy_process里对PT_PTRACED标志位处理的流程来看，应该是 bash 是 real_parent，GDB 是这个进程的 parent 吧？","like_count":60,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448009,"discussion_content":"谢谢，果真弄反了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556195015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1058895,"avatar":"https://static001.geekbang.org/account/avatar/00/10/28/4f/48e48553.jpg","nickname":"@阿锦啊","note":"","ucode":"3C5F00333D7174","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39185,"discussion_content":"文中已经修改了，感谢反馈~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571901448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1588770,"avatar":"https://static001.geekbang.org/account/avatar/00/18/3e/22/f91219a8.jpg","nickname":"wanlinwang","note":"","ucode":"C74C3CF0B5BF64","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289709,"discussion_content":"好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594186264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1798979,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/73/43/ae139b1f.jpg","nickname":"博","note":"","ucode":"F7CA69FF5D09BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218570,"discussion_content":"完全蒙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585665889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89176,"user_name":"why","can_delete":false,"product_type":"c1","uid":1012937,"ip_address":"","ucode":"C9E796E53F6F5E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/c9/d3439ca4.jpg","comment_is_top":false,"comment_ctime":1556098573,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"181944725005","product_id":100024701,"comment_content":"- 运行统计信息, 包含用户&#47;内核态运行时间; 上&#47;下文切换次数; 启动时间等;<br>- 进程亲缘关系<br>    - 拥有同一父进程的所有进程具有兄弟关系<br>    - 包含: 指向 parent; 指向 real_parent; 子进程双向链表头结点; 兄弟进程双向链表头结点<br>    - parent 指向的父进程接收进程结束信号<br>    - real_parent 和 parent 通常一样; 但在 bash 中用 GDB 调试程序时, GDB 是 real_parent, bash 是 parent<br>- 进程权限, 包含 real_cred 指针(谁能操作我); cred 指针(我能操作谁)<br>    - cred 结构体中标明多组用户和用户组 id<br>    - uid&#47;gid(哪个用户的进程启动我)<br>    - euid&#47;egid(按照哪个用户审核权限, 操作消息队列, 共享内存等)<br>    - fsuid&#47;fsgid(文件操作时审核)<br>    - 这三组 id 一般一样<br>    - 通过 chmod u+s program, 给程序设置 set-user-id 标识位, 运行时程序将进程 euid&#47;fsuid 改为程序文件所有者 id<br>    - suid&#47;sgid 可以用来保存 id, 进程可以通过 setuid 更改 uid<br>    - capability 机制, 以细粒度赋予普通用户部分高权限 (capability.h 列出了权限)<br>        - cap_permitted 表示进程的权限<br>        - cap_effective 实际起作用的权限, cap_permitted 范围可大于 cap_effective<br>        - cap_inheritable 若权限可被继承, 在 exec 执行时继承的权限集合, 并加入 cap_permitted 中(但非 root 用户不会保留 cap_inheritable 集合)<br>        - cap_bset 所有进程保留的权限(限制只用一次的功能)<br>        - cap_ambient exec 时, 并入 cap_permitted 和 cap_effective 中<br>- 内存管理: mm_struct<br>- 文件与文件系统: 打开的文件, 文件系统相关数据结构","like_count":43,"discussions":[{"author":{"id":1652366,"avatar":"https://static001.geekbang.org/account/avatar/00/19/36/8e/22c236d6.jpg","nickname":"wardseptember","note":"","ucode":"872320C858B2C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310942,"discussion_content":"课代表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602147623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339820,"avatar":"https://static001.geekbang.org/account/avatar/00/14/71/ac/8295e3e7.jpg","nickname":"书忆江南","note":"","ucode":"90776A7CE06D66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159668,"discussion_content":"这里GDB是parent，bash是real_parent","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580722802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168855,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d5/d7/cb1ea1b8.jpg","nickname":"小组长","note":"","ucode":"43DF0A444DC2B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368615,"discussion_content":"每学习一篇都要看一下课代表的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618759465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90595,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1556585718,"is_pvip":false,"replies":[{"id":"49504","content":"RCU(Read-Copy Update)，是 Linux 中比较重要的一种同步机制。顾名思义就是“读，拷贝更新”，再直白点是“随意读，但更新数据的时候，需要先复制一份副本，在副本上完成修改，再一次性地替换旧数据”。这是 Linux 内核实现的一种针对“读多写少”的共享数据的同步机制。","user_name":"作者回复","comment_id":90595,"uid":"1001590","ip_address":"","utype":1,"ctime":1567676885,"user_name_real":"刘超@网易云"}],"discussion_count":5,"race_medal":0,"score":"177650244854","product_id":100024701,"comment_content":"请问一下老师这句代码中的, __rcu是什么意思? 起到的作用是啥? 在网上好像没搜到.<br>const struct cred __rcu         *real_cred;<br><br>","like_count":42,"discussions":[{"author":{"id":1466447,"avatar":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","nickname":"Daiver","note":"","ucode":"9B1A03AFBC79BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271931,"discussion_content":"java中有名的cow（写时复制）","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590221307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1235320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d9/78/8a328299.jpg","nickname":"佳佳大魔王","note":"","ucode":"D5214903D85A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1466447,"avatar":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","nickname":"Daiver","note":"","ucode":"9B1A03AFBC79BC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293873,"discussion_content":"我最近在看java并发部分看到的，刚想说呢（Copy-on-Write)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595693153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":271931,"ip_address":""},"score":293873,"extra":""},{"author":{"id":1805809,"avatar":"","nickname":"ccz 开发(谢不邀)","note":"","ucode":"B8803B050AAC68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1235320,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d9/78/8a328299.jpg","nickname":"佳佳大魔王","note":"","ucode":"D5214903D85A0F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342082,"discussion_content":"juc中的CopyOnWriteArrayList类，面试的时候说不知道会很掉价的一个类，2333~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610591913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293873,"ip_address":""},"score":342082,"extra":""}]},{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448587,"discussion_content":"RCU(Read-Copy Update)，是 Linux 中比较重要的一种同步机制。顾名思义就是“读，拷贝更新”，再直白点是“随意读，但更新数据的时候，需要先复制一份副本，在副本上完成修改，再一次性地替换旧数据”。这是 Linux 内核实现的一种针对“读多写少”的共享数据的同步机制。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567676885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1798979,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/73/43/ae139b1f.jpg","nickname":"博","note":"","ucode":"F7CA69FF5D09BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218576,"discussion_content":"有点redis write copy的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585666215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110001,"user_name":"garlic","can_delete":false,"product_type":"c1","uid":1019579,"ip_address":"","ucode":"FEB147EDB5774E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/bb/c039dc11.jpg","comment_is_top":false,"comment_ctime":1562147940,"is_pvip":true,"replies":[{"id":"48804","content":"赞","user_name":"作者回复","comment_id":110001,"uid":"1001590","ip_address":"","utype":1,"ctime":1567497880,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":1,"score":"160475937892","product_id":100024701,"comment_content":"进程的相关信息可以通过ps 获取， 依赖关系通过pstree获取，文件相关通过lsof， fuser，capabilities相关通过capsh，getcap获取， 学习笔记https:&#47;&#47;garlicspace.com&#47;2019&#47;07&#47;03&#47;获取进程信息相关命令&#47;","like_count":38,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456676,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567497880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89120,"user_name":"逍觉迷遥","can_delete":false,"product_type":"c1","uid":1070782,"ip_address":"","ucode":"4287B0B6A23A25","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/be/d68998fa.jpg","comment_is_top":false,"comment_ctime":1556083317,"is_pvip":false,"replies":[{"id":"32037","content":"capabilities在容器那一节会用到","user_name":"作者回复","comment_id":89120,"uid":"1001590","ip_address":"","utype":1,"ctime":1556195853,"user_name_real":"刘超@网易云"}],"discussion_count":3,"race_medal":0,"score":"130405102197","product_id":100024701,"comment_content":"①这节内容解决了关于上节task_struct为什么要用链表结构，是为了维护多个task之间的关系。一个task节点的parent指针指向其父进程task，children指针指向子进程所有task的头部，然后又靠 sibling指针来维护统一级兄弟task！<br> <br>②setUid是一个权限的特殊标志位，带有这个标志位可以对文件执行等同root的权限！比如，Linux下修改密码的指令passwd，我们ls去查看时发现其权限就有s标志，这个就是之所以能修改密码的原因。如果去掉这个权限，再以普通用户身份去修改密码则会提示没有权限！这个例子和老师的玩游戏可以说是异曲同工，但它更具有普遍性，大家也更熟悉！<br><br>③capabilities听了感觉云里雾里还是一知半解，老师着重讲了概念，但还是不知道怎么用？？？希望老师结合实际使用例子讲一下就更好了！！！","like_count":30,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448023,"discussion_content":"capabilities在容器那一节会用到","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1556195853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2309990,"avatar":"","nickname":"Geek_93217e","note":"","ucode":"DC70FDB8AD83EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":535922,"discussion_content":"感觉这部分内容是因为之前设计考虑不周，或者说如果不是docker，也不会发现，后面为了兼容不得不搞的复杂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638607744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":448023,"ip_address":""},"score":535922,"extra":""}]},{"author":{"id":1184505,"avatar":"https://static001.geekbang.org/account/avatar/00/12/12/f9/7e6e3ac6.jpg","nickname":"Geek_04e22a","note":"","ucode":"B64FF12EA28BA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267117,"discussion_content":"setUid是一个权限的特殊标志位，带有这个标志位可以对文件执行等同root的权限！---setUid是一个权限的特殊标志位，带有这个标志位可以对文件执行等同属主的权限！---这样描述更好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589603710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89057,"user_name":"manatee","can_delete":false,"product_type":"c1","uid":1041112,"ip_address":"","ucode":"708D90E7A265BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/d8/f0562ede.jpg","comment_is_top":false,"comment_ctime":1556070012,"is_pvip":false,"replies":[{"id":"32034","content":"建议大家多看&#47;proc&#47;pid下的相关信息","user_name":"作者回复","comment_id":89057,"uid":"1001590","ip_address":"","utype":1,"ctime":1556195738,"user_name_real":"刘超@网易云"}],"discussion_count":2,"race_medal":0,"score":"65980579452","product_id":100024701,"comment_content":"通过&#47;proc&#47;pid&#47;status可以看到进程的所属的各种id","like_count":15,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447999,"discussion_content":"建议大家多看/proc/pid下的相关信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556195738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1798979,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/73/43/ae139b1f.jpg","nickname":"博","note":"","ucode":"F7CA69FF5D09BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218577,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585666238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96301,"user_name":"wumin","can_delete":false,"product_type":"c1","uid":1297749,"ip_address":"","ucode":"419A9FDDC9636D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJSYNNABBxXCme5FMGUYTPbvnT6IvpzPP3qiaSibZficAfabydnwWOV6LlQ4lAtF0aeN3ficv0S3iavmxQ/132","comment_is_top":false,"comment_ctime":1558396986,"is_pvip":false,"replies":[{"id":"49291","content":"其实一搜就能搜索到的","user_name":"作者回复","comment_id":96301,"uid":"1001590","ip_address":"","utype":1,"ctime":1567610124,"user_name_real":"刘超@网易云"}],"discussion_count":2,"race_medal":0,"score":"27328200762","product_id":100024701,"comment_content":"作业能给出具体的命令吗？","like_count":6,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450820,"discussion_content":"其实一搜就能搜索到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567610124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1497740,"avatar":"","nickname":"zKerry","note":"","ucode":"9FB006D1A38D3F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38943,"discussion_content":"😄我还回头找了找，以为给了没看到呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571848972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":286039,"user_name":"geek","can_delete":false,"product_type":"c1","uid":2401422,"ip_address":"","ucode":"FF0845140D72A9","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/NyFOEueITjaGLpakMEuWAqVQjo1uDIXlpDdpCxXGfaWiaXzibLQ3WgOFCe8D9FvCmyjsGT7jDsLUbkt8jt2aVs9g/132","comment_is_top":false,"comment_ctime":1617116829,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14502018717","product_id":100024701,"comment_content":"https:&#47;&#47;www.liquidweb.com&#47;kb&#47;how-do-i-set-up-setuid-setgid-and-sticky-bits-on-linux&#47;<br>https:&#47;&#47;linux-audit.com&#47;linux-capabilities-101&#47;","like_count":3},{"had_liked":false,"id":237157,"user_name":"佳佳大魔王","can_delete":false,"product_type":"c1","uid":1235320,"ip_address":"","ucode":"D5214903D85A0F","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/78/8a328299.jpg","comment_is_top":false,"comment_ctime":1595693621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14480595509","product_id":100024701,"comment_content":"各个进程的进程亲缘关系所依赖的数据结构不就是B+树嘛，这样子就一下子把数据结构和操作系统连起来了，果然哪里都离不开数据结构","like_count":3},{"had_liked":false,"id":155300,"user_name":"czh","can_delete":false,"product_type":"c1","uid":1159078,"ip_address":"","ucode":"649FE5C9269D69","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/a6/3f15ba2f.jpg","comment_is_top":false,"comment_ctime":1574676130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14459578018","product_id":100024701,"comment_content":"如果task的数据结构就是为了打印出来看我觉得还是比较容易的，关键还是要站在linux创造的角度，理解为什么要这样设计数据结构，这需要对整个linux系统进行整体的学习和分析，继续加油，多看两遍！","like_count":3},{"had_liked":false,"id":134810,"user_name":"辉煌码农","can_delete":false,"product_type":"c1","uid":1332799,"ip_address":"","ucode":"09779C2E06EA52","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIy5ULaodUwsLoPuk1wd22hqXsaBbibNEqXM0kgrCTYDGKYQkZICYEyH9wMj4hyUicuQwHdDuOKRj0g/132","comment_is_top":false,"comment_ctime":1568939036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5863906332","product_id":100024701,"comment_content":"进程亲缘关系的图超赞","like_count":2},{"had_liked":false,"id":93912,"user_name":"勤劳的小胖子-libo","can_delete":false,"product_type":"c1","uid":1158344,"ip_address":"","ucode":"5BB20CD5A56568","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/c8/4b1c0d40.jpg","comment_is_top":false,"comment_ctime":1557662419,"is_pvip":false,"replies":[{"id":"49388","content":"赞","user_name":"作者回复","comment_id":93912,"uid":"1001590","ip_address":"","utype":1,"ctime":1567654131,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"5852629715","product_id":100024701,"comment_content":"通过passwd来试验setUid很方便，谢谢一起学习的同志","like_count":1,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449827,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567654131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89036,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1556067546,"is_pvip":false,"replies":[{"id":"32033","content":"CLOCK_MONOTONIC是monotonic time,随着进程的运行不断加，而CLOCK_REALTIME是wall time，墙上的时间，实际时间，系统管理员可以调整的时间","user_name":"作者回复","comment_id":89036,"uid":"1001590","ip_address":"","utype":1,"ctime":1556195709,"user_name_real":"刘超@网易云"}],"discussion_count":1,"race_medal":0,"score":"5851034842","product_id":100024701,"comment_content":"u64\t\t\t\treal_start_time;&#47;&#47; 进程启动时间，包含睡眠时间 感觉不好理解是不是启动时长?","like_count":1,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447988,"discussion_content":"CLOCK_MONOTONIC是monotonic time,随着进程的运行不断加，而CLOCK_REALTIME是wall time，墙上的时间，实际时间，系统管理员可以调整的时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556195709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352988,"user_name":"涛子","can_delete":false,"product_type":"c1","uid":2647122,"ip_address":"陕西","ucode":"8B9830B2B3C6FD","user_header":"https://static001.geekbang.org/account/avatar/00/28/64/52/e4536e9c.jpg","comment_is_top":false,"comment_ctime":1659065748,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659065748","product_id":100024701,"comment_content":"这节开始全是定义啊，人开始晕了","like_count":0},{"had_liked":false,"id":338130,"user_name":"cv0cv0","can_delete":false,"product_type":"c1","uid":1360093,"ip_address":"","ucode":"93FF9277F03FD0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLEIsgI4ub1VOKWtVOfouAzSqx8Yt8ibQEsAnwNJsJHmuJzzpQqG79HullvYwpic8hgiclgON2GwXSjw/132","comment_is_top":false,"comment_ctime":1647314520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647314520","product_id":100024701,"comment_content":"Windows的权限完全搞不明白。","like_count":0},{"had_liked":false,"id":326425,"user_name":"Ken","can_delete":false,"product_type":"c1","uid":1988131,"ip_address":"","ucode":"DB59170F4FC74E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/56/23/848ac9f4.jpg","comment_is_top":false,"comment_ctime":1639527786,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639527786","product_id":100024701,"comment_content":"刘老师，您好。进程的树状图是用什么工具画的？其他的图也画得非常棒，想学一下。谢谢老师。","like_count":0},{"had_liked":false,"id":315381,"user_name":"夏晨","can_delete":false,"product_type":"c1","uid":2759881,"ip_address":"","ucode":"835AB8ED39D048","user_header":"https://static001.geekbang.org/account/avatar/00/2a/1c/c9/8f571382.jpg","comment_is_top":false,"comment_ctime":1633871458,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1633871458","product_id":100024701,"comment_content":"每个进程都有parent sibling这些字段么","like_count":0,"discussions":[{"author":{"id":2309990,"avatar":"","nickname":"Geek_93217e","note":"","ucode":"DC70FDB8AD83EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535923,"discussion_content":"肯定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638607853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300166,"user_name":"忘忧草的约定","can_delete":false,"product_type":"c1","uid":1114753,"ip_address":"","ucode":"F99D2F5D179B2A","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/81/489e1cd4.jpg","comment_is_top":false,"comment_ctime":1625030898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625030898","product_id":100024701,"comment_content":"老师请问suid和uid是什么关系？uid的文件存储叫做suid？","like_count":0},{"had_liked":false,"id":193151,"user_name":"Geek_b8928e","can_delete":false,"product_type":"c1","uid":1926597,"ip_address":"","ucode":"96E4ABE3F2F145","user_header":"","comment_is_top":false,"comment_ctime":1584884915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584884915","product_id":100024701,"comment_content":"task成员包括<br>1 任务标识<br>2 任务状态<br>3 运行统计<br>4 调度信息<br><br>5 亲缘关系<br>6 权限信息<br><br>7 信号处理<br>8 内存管理<br>9 文件相关<br>10 内核栈","like_count":0},{"had_liked":false,"id":177820,"user_name":"起而行","can_delete":false,"product_type":"c1","uid":1131399,"ip_address":"","ucode":"4F116B0B740776","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/87/7604d7a4.jpg","comment_is_top":false,"comment_ctime":1581509085,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1581509085","product_id":100024701,"comment_content":"day13,<br>进程的亲缘关系很有趣，也突然想了解pstree的实现原理。<br>权限管理的确需要理解原理才能够操作，我在linux中有时会用chomd 777，现在看起来是个不太安全的操作。<br>学习linux最好的地方在于，通过命令行阅读内核，是非常好的反馈","like_count":0},{"had_liked":false,"id":165480,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1577242751,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577242751","product_id":100024701,"comment_content":"ps -o pid,euid,ruid,suid,egid,rgid,sgid,cmd 可以查看到不少进程数据","like_count":0},{"had_liked":false,"id":160133,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1575876795,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575876795","product_id":100024701,"comment_content":"请问下老师，调度相关信息和信号处理相关信息如何用命令行来查看","like_count":0},{"had_liked":false,"id":146162,"user_name":"柳长青","can_delete":false,"product_type":"c1","uid":1716747,"ip_address":"","ucode":"3EA2B7BD5DBCAF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1pMbwZrAl5gVy4FictX9HiaDicYOjRI2E6flxrXLhLTcneF74TowWK6rJW6oKs9iakPl0dqHsWjav0TjK6vyEZTlJA/132","comment_is_top":false,"comment_ctime":1572443803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572443803","product_id":100024701,"comment_content":"老师，我的系统RHEL7，进入&#47;proc&#47;$pid里头，有很多文件包括：status,stat,attr....，但是具体是跟你表格中的内容怎么对映呢？你表格中的信息只在这个文件里面吗？<br>","like_count":0},{"had_liked":false,"id":124125,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1565829158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565829158","product_id":100024701,"comment_content":"进程的数据结构2，1 运行统计信息 task_struct里面有utime用户态消耗时间，stime内核态消耗时间，nvcsw自愿的上下文切换计数，nivcsw，非自愿的上下文切换计数，start_time进程启动时间，real_start_time真实的进程启动时间。2 进程的亲戚关系 real_parent和parent指向父进程，list_head children指向子进程，list_head sibling 指向兄弟进程 3 进程权限信息 3.1 用户和用户组权限 项目组权限，是指能访问哪些文件，访问文件夹，操作文件，被其他项目组访问，进程权限定义，struct cred _rcu *real_cred 谁能操作我，*cred 我能操作谁，cred 定义 大部分是用户和用户组所属的 第一个是uid和gid，real user&#47;group id，谁启动的进程，就是谁的id，第二个是ueid和egid，effective有效的，这个进程操作消息队列，共享内存，信号量这些对象的时候是否有权限。第三个是fsuid和fsgid filesystem user&#47;group id，对文件系统操作是否有权限，linux进程可以随时通过setuid设置用户id，改成创建进程的uid，就能操作了。创建进程的uid和gid会保存在一个地方，允许修改，那就是suid和sgid。3.2 capabilities 机制控制权限 用位图控制权限，3.21 cap_permitted，表示进程能使用的权限，cap_effective，是真正控制的权限，一个进程可以放弃一些权限 3.22 cap_inheritable 表示执行文件的可扩展属性设置了inheritable标志位时，调用exec执行该程序会继承调用者的inheritable集合，并将其加入permitted集合。只针对root用户 3.23 cap_bset capability bounding set ，系统中所有进程保留的权限，如果这个几个没有这个权限，所有进程都没有这个权限 3.24 cap_ambient非root用户使用exec执行程序的时候，cap_ambient会调价到cap_permitted和effective中，进程就有了这个程序的权限。4 内存管理数据结构mm_struct 5 文件系统数据结构 fs_struct和files_struct","like_count":0},{"had_liked":false,"id":92161,"user_name":"LS","can_delete":false,"product_type":"c1","uid":1086139,"ip_address":"","ucode":"3F054F6E5360CB","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/bb/ed57d6b8.jpg","comment_is_top":false,"comment_ctime":1557193564,"is_pvip":false,"replies":[{"id":"49460","content":"指向task_struct，不过不用纠结呀，指向slibing也可以找到指向task_struct的指针，指向task_struct也可以找到指向sibling的指针","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567670809,"ip_address":"","comment_id":92161,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557193564","product_id":100024701,"comment_content":"由于 list_add(&amp;subtask-&gt;sibling, &amp;current-&gt;children); 文中的进程链表图是不是应该是 父进程的 children 指向的是 子进程的 sibling 而不是 子进程 task 结构体本身？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449164,"discussion_content":"指向task_struct，不过不用纠结呀，指向slibing也可以找到指向task_struct的指针，指向task_struct也可以找到指向sibling的指针","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567670809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89554,"user_name":"青石","can_delete":false,"product_type":"c1","uid":1215531,"ip_address":"","ucode":"B0056AD6453322","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/2b/3ab96998.jpg","comment_is_top":false,"comment_ctime":1556203619,"is_pvip":false,"replies":[{"id":"49567","content":"不是啊，在一串链表上","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567688566,"ip_address":"","comment_id":89554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556203619","product_id":100024701,"comment_content":"请问老师，同一级的所有进程的sibling是指向同一块内存地址吗？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448170,"discussion_content":"不是啊，在一串链表上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567688566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89549,"user_name":"tux","can_delete":false,"product_type":"c1","uid":1477811,"ip_address":"","ucode":"BB7202009FC885","user_header":"https://static001.geekbang.org/account/avatar/00/16/8c/b3/a74a7125.jpg","comment_is_top":false,"comment_ctime":1556202751,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556202751","product_id":100024701,"comment_content":"时不时会用 htop和pidstat，进行辅助查看进程信息","like_count":0},{"had_liked":false,"id":89264,"user_name":"kdb_reboot","can_delete":false,"product_type":"c1","uid":1003594,"ip_address":"","ucode":"4C56FCA563FCA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/4a/04fef27f.jpg","comment_is_top":false,"comment_ctime":1556121798,"is_pvip":false,"replies":[{"id":"32022","content":"一般前面是通过代码或者命令行进行实际操作，后面主要解析内核","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1556194418,"ip_address":"","comment_id":89264,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556121798","product_id":100024701,"comment_content":"一个建议：最近几篇都在介绍概念，可否增加实际操作的案例","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448076,"discussion_content":"一般前面是通过代码或者命令行进行实际操作，后面主要解析内核","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556194418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89168,"user_name":"平少","can_delete":false,"product_type":"c1","uid":1218742,"ip_address":"","ucode":"EC76D35D0C2CBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/b6/0c0ed771.jpg","comment_is_top":false,"comment_ctime":1556096384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556096384","product_id":100024701,"comment_content":"是使用strace -p 进程号 来获取进程的信息么","like_count":0},{"had_liked":false,"id":89116,"user_name":"tiankonghewo","can_delete":false,"product_type":"c1","uid":1476427,"ip_address":"","ucode":"7A55A9C17DD9DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/4b/16ea3997.jpg","comment_is_top":false,"comment_ctime":1556082310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556082310","product_id":100024701,"comment_content":"学习了","like_count":0},{"had_liked":false,"id":89048,"user_name":"sunsweet","can_delete":false,"product_type":"c1","uid":1027879,"ip_address":"","ucode":"787F9E1EC6A67E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/27/76489618.jpg","comment_is_top":false,"comment_ctime":1556068977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556068977","product_id":100024701,"comment_content":"这么多双向循环链表","like_count":0},{"had_liked":false,"id":89035,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1556067531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556067531","product_id":100024701,"comment_content":"打卡，讲的太好了😄","like_count":0},{"had_liked":false,"id":89034,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1556067466,"is_pvip":false,"replies":[{"id":"32032","content":"&#47;proc下的信息比较全","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1556195500,"ip_address":"","comment_id":89034,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556067466","product_id":100024701,"comment_content":"命令行是指cat  &#47;proc&#47;pid<br>&#47;*","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447987,"discussion_content":"/proc下的信息比较全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556195500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89008,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1556064489,"is_pvip":false,"replies":[{"id":"32031","content":"就是指针指来指去","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1556195479,"ip_address":"","comment_id":89008,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556064489","product_id":100024701,"comment_content":"setuid倒是好理解，进程树相关的程序结构不好消化","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447980,"discussion_content":"就是指针指来指去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556195479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89005,"user_name":"菲菲","can_delete":false,"product_type":"c1","uid":1477524,"ip_address":"","ucode":"605B14C95A0E82","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/94/dfa767c9.jpg","comment_is_top":false,"comment_ctime":1556064054,"is_pvip":false,"replies":[{"id":"32030","content":"https:&#47;&#47;elixir.bootlin.com&#47;linux&#47;v4.14.13","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1556195450,"ip_address":"","comment_id":89005,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1556064054","product_id":100024701,"comment_content":"老师可以提供一下课程内容讲解的内核代码，直接链接么？看网页kernel.org还有GitHub，没有找到课程讲述的。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447979,"discussion_content":"https://elixir.bootlin.com/linux/v4.14.13","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556195450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476675,"avatar":"https://static001.geekbang.org/account/avatar/00/16/88/43/31641bf0.jpg","nickname":"布朗老熊","note":"","ucode":"A8AF82550AFF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51448,"discussion_content":"https://elixir.bootlin.com/linux/v4.14.13/source/kernel","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573875143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1375617,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fd/81/1864f266.jpg","nickname":"石将从","note":"","ucode":"12F43E643D1D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":16814,"discussion_content":"地址显示404","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568908238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}