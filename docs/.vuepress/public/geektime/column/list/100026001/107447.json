{"id":107447,"title":"36 | 局部性原理：数据库性能跟不上，加个缓存就好了？","content":"<p>平时进行服务端软件开发的时候，我们通常会把数据存储在数据库里。而服务端系统遇到的第一个性能瓶颈，往往就发生在访问数据库的时候。这个时候，大部分工程师和架构师会拿出一种叫作“缓存”的武器，通过使用Redis或者Memcache这样的开源软件，在数据库前面提供一层缓存的数据，来缓解数据库面临的压力，提升服务端的程序性能。</p><p><img src=\"https://static001.geekbang.org/resource/image/67/89/675341b47057e483713395b55eef7089.png?wh=1142*529\" alt=\"\"></p><center><span class=\"reference\">在数据库前添加数据缓存是常见的性能优化方式</span></center><p>那么，不知道你有没有想过，这种添加缓存的策略一定是有效的吗？或者说，这种策略在什么情况下是有效的呢？如果从理论角度去分析，添加缓存一定是我们的最佳策略么？进一步地，如果我们对于访问性能的要求非常高，希望数据在1毫秒，乃至100微秒内完成处理，我们还能用这个添加缓存的策略么？</p><h2>理解局部性原理</h2><p>我们先来回顾一下，上一讲的这张不同存储器的性能和价目表。可以看到，不同的存储器设备之间，访问速度、价格和容量都有几十乃至上千倍的差异。</p><p><img src=\"https://static001.geekbang.org/resource/image/d3/a6/d39b0f2b3962d646133d450541fb75a6.png?wh=1142*588\" alt=\"\"></p><p>以上一讲的Intel 8265U的CPU为例，它的L1 Cache只有256K，L2 Cache有个1MB，L3 Cache有12MB。一共13MB的存储空间，如果按照7美元/1MB的价格计算，就要91美元。</p><p>我们的内存有8GB，容量是CPU Cache的600多倍，按照表上的价格差不多就是120美元。如果按照今天京东上的价格，恐怕不到40美元。128G的SSD和1T的HDD，现在的价格加起来也不会超过100美元。虽然容量是内存的16倍乃至128倍，但是它们的访问速度却不到内存的1/1000。</p><!-- [[[read_end]]] --><p>性能和价格的巨大差异，给我们工程师带来了一个挑战：<strong>我们能不能既享受CPU Cache的速度，又享受内存、硬盘巨大的容量和低廉的价格呢？</strong>你可以停下来自己思考一下，或者点击文章右上方的“请朋友读”，邀请你的朋友一起来思考这个问题。然后，再一起听我的讲解。</p><p>好了，现在我公布答案。想要同时享受到这三点，前辈们已经探索出了答案，那就是，存储器中数据的<strong>局部性原理</strong>（Principle of Locality）。我们可以利用这个局部性原理，来制定管理和访问数据的策略。这个局部性原理包括<strong>时间局部性</strong>（temporal locality）和<strong>空间局部性</strong>（spatial locality）这两种策略。</p><p>我们先来看<strong>时间局部性</strong>。这个策略是说，如果一个数据被访问了，那么它在短时间内还会被再次访问。这么看这个策略有点奇怪是吧？我用一个简单的例子给你解释下，你一下就能明白了。</p><p>比如说，《哈利波特与魔法石》这本小说，我今天读了一会儿，没读完，明天还会继续读。同理，在一个电子商务型系统中，如果一个用户打开了App，看到了首屏。我们推断他应该很快还会再次访问网站的其他内容或者页面，我们就将这个用户的个人信息，从存储在硬盘的数据库读取到内存的缓存中来。这利用的就是时间局部性。</p><p><img src=\"https://static001.geekbang.org/resource/image/53/d3/53cb2d05d9bc8e3131466e9802d2c6d3.png?wh=1142*622\" alt=\"\"></p><center><span class=\"reference\">同一份数据在短时间内会反复多次被访问</span></center><p>我们再来看<strong>空间局部性</strong>。这个策略是说，如果一个数据被访问了，那么和它相邻的数据也很快会被访问。</p><p>我们还拿刚才读《哈利波特与魔法石》的例子来说。我读完了这本书之后，感觉这书不错，所以就会借阅整套“哈利波特”。这就好比我们的程序，在访问了数组的首项之后，多半会循环访问它的下一项。因为，在存储数据的时候，数组内的多项数据会存储在相邻的位置。这就好比图书馆会把“哈利波特”系列放在一个书架上，摆放在一起，加载的时候，也会一并加载。我们去图书馆借书，往往会一次性把7本都借回来。</p><p><img src=\"https://static001.geekbang.org/resource/image/1e/67/1ecca5bc07486a4d829263c8d78df667.png?wh=1142*602\" alt=\"\"></p><center><span class=\"reference\">相邻的数据会被连续访问</span></center><p>有了时间局部性和空间局部性，我们不用再把所有数据都放在内存里，也不用都放在HDD硬盘上，而是把访问次数多的数据，放在贵但是快一点的存储器里，把访问次数少的数据，放在慢但是大一点的存储器里。这样组合使用内存、SSD硬盘以及HDD硬盘，使得我们可以用最低的成本提供实际所需要的数据存储、管理和访问的需求。</p><h2>如何花最少的钱，装下亚马逊的所有商品？</h2><p>了解了局部性原理，下面我用一些真实世界中的数据举个例子，带你做个小小的思维体操，来看一看通过局部性原理，利用不同层次存储器的组合，究竟会有什么样的好处。</p><p>我们现在要提供一个亚马逊这样的电商网站。我们假设里面有6亿件商品，如果每件商品需要4MB的存储空间（考虑到商品图片的话，4MB已经是一个相对较小的估计了），那么一共需要2400TB（  =  6亿  × 4MB）的数据存储。</p><p>如果我们把数据都放在内存里面，那就需要3600万美元（  =  2400TB/1MB  × 0.015美元  =  3600万美元）。但是，这6亿件商品中，不是每一件商品都会被经常访问。比如说，有Kindle电子书这样的热销商品，也一定有基本无人问津的商品，比如偏门的缅甸语词典。</p><p>如果我们只在内存里放前1%的热门商品，也就是600万件热门商品，而把剩下的商品，放在机械式的HDD硬盘上，那么，我们需要的存储成本就下降到45.6万美元（  =  3600 万美元 × 1% + 2400TB / 1MB × 0.00004 美元），是原来成本的1.3%左右。</p><p>这里我们用的就是时间局部性。我们把有用户访问过的数据，加载到内存中，一旦内存里面放不下了，我们就把最长时间没有在内存中被访问过的数据，从内存中移走，这个其实就是我们常用的<strong>LRU</strong>（Least Recently Used）<strong>缓存算法</strong>。热门商品被访问得多，就会始终被保留在内存里，而冷门商品被访问得少，就只存放在HDD硬盘上，数据的读取也都是直接访问硬盘。即使加载到内存中，也会很快被移除。越是热门的商品，越容易在内存中找到，也就更好地利用了内存的随机访问性能。</p><p>那么，只放600万件商品真的可以满足我们实际的线上服务请求吗？这个就要看LRU缓存策略的<strong>缓存命中率</strong>（Hit Rate/Hit Ratio）了，也就是访问的数据中，可以在我们设置的内存缓存中找到的，占有多大比例。</p><p>内存的随机访问请求需要100ns。这也就意味着，在极限情况下，内存可以支持1000万次随机访问。我们用了24TB内存，如果8G一条的话，意味着有3000条内存，可以支持每秒300亿次（  =  24TB/8GB  ×  1s/100ns）访问。以亚马逊2017年3亿的用户数来看，我们估算每天的活跃用户为1亿，这1亿用户每人平均会访问100个商品，那么平均每秒访问的商品数量，就是12万次。</p><p>但是如果数据没有命中内存，那么对应的数据请求就要访问到HDD磁盘了。刚才的图表中，我写了，一块HDD硬盘只能支撑每秒100次的随机访问，2400TB的数据，以4TB一块磁盘来计算，有600块磁盘，也就是能支撑每秒 6万次（  =  2400TB/4TB  × 1s/10ms  ）的随机访问。</p><p>这就意味着，所有的商品访问请求，都直接到了HDD磁盘，HDD磁盘支撑不了这样的压力。我们至少要50%的缓存命中率，HDD磁盘才能支撑对应的访问次数。不然的话，我们要么选择添加更多数量的HDD硬盘，做到每秒12万次的随机访问，或者将HDD替换成SSD硬盘，让单个硬盘可以支持更多的随机访问请求。</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/58/fb32dd8a5847745d07a1b17254c75158.png?wh=1142*747\" alt=\"\"></p><p>当然，这里我们只是一个简单的估算。在实际的应用程序中，查看一个商品的数据可能意味着不止一次的随机内存或者随机磁盘的访问。对应的数据存储空间也不止要考虑数据，还需要考虑维护数据结构的空间，而缓存的命中率和访问请求也要考虑均值和峰值的问题。</p><p>通过这个估算过程，你需要理解，如何进行存储器的硬件规划。你需要考虑硬件的成本、访问的数据量以及访问的数据分布，然后根据这些数据的估算，来组合不同的存储器，能用尽可能低的成本支撑所需要的服务器压力。而当你用上了数据访问的局部性原理，组合起了多种存储器，你也就理解了怎么基于存储器层次结构，来进行硬件规划了。</p><h2>总结延伸</h2><p>这一讲，我们讲解了计算机存储器层次结构中最重要的一个优化思路，就是局部性原理。</p><p>在实际的计算机日常的开发和应用中，我们对于数据的访问总是会存在一定的局部性。有时候，这个局部性是时间局部性，就是我们最近访问过的数据还会被反复访问。有时候，这个局部性是空间局部性，就是我们最近访问过数据附近的数据很快会被访问到。</p><p>而局部性的存在，使得我们可以在应用开发中使用缓存这个有利的武器。比如，通过将热点数据加载并保留在速度更快的存储设备里面，我们可以用更低的成本来支撑服务器。</p><p>通过亚马逊这个例子，我们可以看到，我们可以通过快速估算的方式，来判断这个添加缓存的策略是否能够满足我们的需求，以及在估算的服务器负载的情况下，需要规划多少硬件设备。这个“估算+规划”的能力，是每一个期望成长为架构师的工程师，必须掌握的能力。</p><p>最后，回到这一讲的开头，我问了你这样一个问题，在遇到性能问题，特别是访问存储器的性能问题的时候，是否可以简单地添加一层数据缓存就能让问题迎刃而解呢？今天这个亚马逊网站商品数据的例子，似乎给了我们一个“Yes”的答案。那么，这个答案是否放之四海皆准呢？后面的几讲，我们会深入各种应用场景，进一步来回答这个问题。</p><h2>推荐阅读</h2><p>想要仔细了解各种存储器和局部性原理，你还是可以去读一读教科书。《计算机组成与设计：硬件/软件接口》的5.1～5.2小节，是一个很好的阅读材料。</p><h2>课后思考</h2><p>我们今天拿了亚马逊的商品和用户访问数据做了例子。请你想一下，如果是拿商品数量更多的淘宝网来看，你可以估算一下，至少需要使用多少DRAM的内存，或者其他存储设备呢？</p><p>欢迎留言和我分享你的思考过程和最终答案。如果自己的力量无法解决，你也可以拉上你的朋友一起讨论。</p>","comments":[{"had_liked":false,"id":114488,"user_name":"xindoo","can_delete":false,"product_type":"c1","uid":1101718,"ip_address":"","ucode":"AEAF3208E644BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/96/251c0cee.jpg","comment_is_top":false,"comment_ctime":1563324316,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"474009726876","product_id":100026001,"comment_content":"局部性原理真是计算机各类优化的基石，小到cpu cache，大到cdn。而且不仅仅是存储，java的jit也是利于局部性优化性能。任何东西只要不是均匀分布的，就有优化空间。","like_count":111,"discussions":[{"author":{"id":1108225,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e9/01/6e6d80d1.jpg","nickname":"Loy","note":"","ucode":"CD437EDA754EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347001,"discussion_content":"加速大概率事件","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1612139639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334754,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5d/e2/3331ad9e.jpg","nickname":"Shine Sunner","note":"","ucode":"8CCECE7F64C06B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392416,"discussion_content":"当问题解决不了的时候，往往引入一个中间层，问题就能迎刃而解了。和局部性原理有异曲同工之处。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631000056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3014444,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM74658w9PQeTM4TcM14BzfpJnVLrsciaS26ibRwRbCE09ydI6UlZhFrJh7iaVLp2xxhBppVDKLyRRg9Q/132","nickname":"Geek_21a73c","note":"","ucode":"104A4AD89DA6BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574467,"discussion_content":"事缓则圆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654072362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114580,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1563344388,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"121822428676","product_id":100026001,"comment_content":"假设淘宝网有12亿商品数量，每件商品需要 4MB 的存储空间，那么一共需要 4800TB（ = 12 亿 × 4MB）的数据存储<br>如果1%的热点数据做为缓存则需要48TB的内存 72 万美元（ = 48TB&#47;1MB × 0.015 美元 = 72 万美元）<br>另外还需要99%的硬盘 19 万美元（ = 4752TB&#47;1MB × 0.00004 美元 = 19 万美元）","like_count":29,"discussions":[{"author":{"id":1080466,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7c/92/63ae5917.jpg","nickname":"小东","note":"","ucode":"1F8300E21A5157","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552981,"discussion_content":"内存只是硬盘的缓存，所有硬盘应该包含所有数据，应该按100%来计算","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1645677877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1415305,"avatar":"https://static001.geekbang.org/account/avatar/00/15/98/89/ca8fa978.jpg","nickname":"GkTian","note":"","ucode":"05B11A512A8892","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542332,"discussion_content":"硬盘应该是4800TB。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640727964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167891,"user_name":"阿斯蒂芬","can_delete":false,"product_type":"c1","uid":1024164,"ip_address":"","ucode":"61D5E3BDA4EBC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","comment_is_top":false,"comment_ctime":1577958722,"is_pvip":false,"replies":[{"id":"68126","content":"👍","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1580649888,"ip_address":"","comment_id":167891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"91772271938","product_id":100026001,"comment_content":"老师举的这个亚马逊商品缓存的例子，我理解就是利用了时间局部性的特征，一个商品如果被访问了，那么猜测很快会被第二次访问。我再尝试理解空间局部性，也拿老师说的《哈利波特》全集的例子，如果《哈1》被访问了，那么《哈2-7》被访问的可能性也很高，因此这也可以作为缓存预热的一种策略，类似地我还想到了电商经常用的“看相似”和“看过这个的同时也喜欢...”这一类推荐，细想一下背后也是一种“空间局部性”的应用，在后台基于大数据做离线分析，生成内容相关推荐，可以在适当时候优先加载到更快速的存储上以达到更快的响应。当然，可能实际上是否会优先加载不一定，但是透过老师的讲解，把这块联系上了计算机组成原理的理论，还是觉得嗨森，哈哈哈。","like_count":22,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480046,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580649888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216492,"user_name":"恺撒之剑","can_delete":false,"product_type":"c1","uid":1145624,"ip_address":"","ucode":"18F55D253647E6","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/18/6e44e6e0.jpg","comment_is_top":false,"comment_ctime":1589271056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31654042128","product_id":100026001,"comment_content":"亚马逊的例子估算问题<br>现在普通硬盘的吞吐量在100MB&#47;s左右，按4MB每个商品计算，硬盘每秒的访问次数为100 &#47; 4 = 25次 ,而不是按照IOPS的角度 1s&#47;10ms = 100次<br>硬盘不但受IOPS的限制，也受吞吐量的限制，文中的估算没有考虑吞吐量，只考虑的IOPS<br>","like_count":8},{"had_liked":false,"id":143596,"user_name":"随心而至","can_delete":false,"product_type":"c1","uid":1097836,"ip_address":"","ucode":"31866865255101","user_header":"https://static001.geekbang.org/account/avatar/00/10/c0/6c/29be1864.jpg","comment_is_top":false,"comment_ctime":1571740891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31636511963","product_id":100026001,"comment_content":"我记得编程珠玑有一章中，专门考察了估算能力，老师关于亚马逊的估算真的是很赞。","like_count":8},{"had_liked":false,"id":141575,"user_name":"拓山","can_delete":false,"product_type":"c1","uid":1545647,"ip_address":"","ucode":"11FE9CF3821898","user_header":"https://static001.geekbang.org/account/avatar/00/17/95/af/b7f8dc43.jpg","comment_is_top":false,"comment_ctime":1571193168,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"27340996944","product_id":100026001,"comment_content":"局部性原理放之四海而皆准<br>现实生活中的人际关系也是如此啊","like_count":7,"discussions":[{"author":{"id":2332551,"avatar":"https://static001.geekbang.org/account/avatar/00/23/97/87/e0a840ac.jpg","nickname":"午饭 、","note":"","ucode":"F6E5E6F6F97664","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561524,"discussion_content":"都联想到人际关系了，你也是厉害了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649661729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1514292,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1b/34/4d8c5694.jpg","nickname":"Movan","note":"","ucode":"D5A2E9E2E7A439","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270622,"discussion_content":"害，怎么跟我老师讲得一样一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590030846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1514292,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1b/34/4d8c5694.jpg","nickname":"Movan","note":"","ucode":"D5A2E9E2E7A439","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540397,"discussion_content":"你大几了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640052915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":270622,"ip_address":""},"score":540397,"extra":""}]}]},{"had_liked":false,"id":117796,"user_name":"Sch0ng","can_delete":false,"product_type":"c1","uid":1145554,"ip_address":"","ucode":"73F6113931B1AC","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/d2/4ba67c0c.jpg","comment_is_top":false,"comment_ctime":1564132549,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"27333936325","product_id":100026001,"comment_content":"非计科的程序员看到局部性原理这个词有中热泪盈眶的感觉。","like_count":7,"discussions":[{"author":{"id":2837328,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/4b/50/fae00aff.jpg","nickname":"HollyWong","note":"","ucode":"03A66A2BCC0A58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412732,"discussion_content":"干嘛这么激动","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636272815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1724769,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLICDTy3Aglb3VvyYjSiaR0tkh6jjojiaa8qiccpRHjXGmnJD72iccU36ic29piaenZrREkR1GoPJK1zU9g/132","nickname":"hdongdong123","note":"","ucode":"D74589952987D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363379,"discussion_content":"为啥啊？在其他专业上也有说局部性原理么？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617184077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1145554,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7a/d2/4ba67c0c.jpg","nickname":"Sch0ng","note":"","ucode":"73F6113931B1AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1724769,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLICDTy3Aglb3VvyYjSiaR0tkh6jjojiaa8qiccpRHjXGmnJD72iccU36ic29piaenZrREkR1GoPJK1zU9g/132","nickname":"hdongdong123","note":"","ucode":"D74589952987D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369652,"discussion_content":"就是隔行如隔山，对内行来讲众人皆知的概念，对于外行来说就是一座大山，死活理解不了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619103920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":363379,"ip_address":""},"score":369652,"extra":""},{"author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1145554,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7a/d2/4ba67c0c.jpg","nickname":"Sch0ng","note":"","ucode":"73F6113931B1AC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540398,"discussion_content":"应该是经常听别人说， 然后自己不懂， 今天终于懂了， 哈哈哈\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640053018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369652,"ip_address":""},"score":540398,"extra":""},{"author":{"id":1623117,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c4/4d/85014aab.jpg","nickname":"一叉树","note":"","ucode":"BFC984403ACD1F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1145554,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7a/d2/4ba67c0c.jpg","nickname":"Sch0ng","note":"","ucode":"73F6113931B1AC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580182,"discussion_content":"第一次出现时，就是隔行如隔山。当你第二次看到时，自己就是本专业的人了。转行虽不易，但是过了几年，就不会有这种感觉了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657959253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369652,"ip_address":""},"score":580182,"extra":""}]},{"author":{"id":1246451,"avatar":"https://static001.geekbang.org/account/avatar/00/13/04/f3/a3ff8a58.jpg","nickname":"roseduan","note":"","ucode":"5BB69BB9D329EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292171,"discussion_content":"是真的热泪盈眶😂😂😂😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595129198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126643,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1566440351,"is_pvip":false,"replies":[{"id":"52643","content":"leslie同学，<br><br>你好，这是一个trade-off的问题，是一个选择、平衡、妥协的问题，但是不是一个负载均衡的问题哦","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569660013,"ip_address":"","comment_id":126643,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23041276831","product_id":100026001,"comment_content":"       其实这还是一个负载均衡的问题：如何合理的使用内存库；就如同现在某些行业的数据库其实是定时入数据库的，效率的平衡性确实；物理设备代价的平衡性，程序、数据库、中间件的使用平衡性，需要整体考虑。","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464100,"discussion_content":"leslie同学，\n\n你好，这是一个trade-off的问题，是一个选择、平衡、妥协的问题，但是不是一个负载均衡的问题哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569660013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":291163,"user_name":"Sunny","can_delete":false,"product_type":"c1","uid":1305257,"ip_address":"","ucode":"BB7B274CE0672E","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/a9/0a917f2c.jpg","comment_is_top":false,"comment_ctime":1620074501,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10210009093","product_id":100026001,"comment_content":"个人认为，时间局部性的解释和例子很糟糕！","like_count":3,"discussions":[{"author":{"id":3014444,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM74658w9PQeTM4TcM14BzfpJnVLrsciaS26ibRwRbCE09ydI6UlZhFrJh7iaVLp2xxhBppVDKLyRRg9Q/132","nickname":"Geek_21a73c","note":"","ucode":"104A4AD89DA6BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574469,"discussion_content":"你可以在这展示更好的例子，供大家学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654072461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1939316,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/97/74/a933d664.jpg","nickname":"莜戏","note":"","ucode":"C3488A2BB44359","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376048,"discussion_content":"你可以在这展示更好的例子，供大家学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621940750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196790,"user_name":"o_O","can_delete":false,"product_type":"c1","uid":1257283,"ip_address":"","ucode":"7C469AE3DA323B","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/43/e24212bb.jpg","comment_is_top":false,"comment_ctime":1585313729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10175248321","product_id":100026001,"comment_content":"mysql查询的时候也会用到空间局性原理","like_count":3},{"had_liked":false,"id":137791,"user_name":"........","can_delete":false,"product_type":"c1","uid":1236198,"ip_address":"","ucode":"D54E7F428E7F49","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/e6/ea4b2c10.jpg","comment_is_top":false,"comment_ctime":1569851855,"is_pvip":false,"replies":[{"id":"53164","content":"是这样的。但是一般我们可以做缓存预热，也就是warm-up，预先把我们认为可能会高频访问的数据先加载到缓存里面来。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1570085107,"ip_address":"","comment_id":137791,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159786447","product_id":100026001,"comment_content":"老师, 感觉硬盘应该还是需要能够完全支撑用户访问, 因为一开始数据应该都是存放在硬盘中, 然后通过用户的不断点击来更新缓存? 不知道是不是这样","like_count":3,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469264,"discussion_content":"是这样的。但是一般我们可以做缓存预热，也就是warm-up，预先把我们认为可能会高频访问的数据先加载到缓存里面来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570085107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255029,"user_name":"残天噬魂","can_delete":false,"product_type":"c1","uid":1506609,"ip_address":"","ucode":"A2AD8303A4518D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/q2HwchogzNiavKhIB4GfAxH6B88NhSoC7B7keVEUqiaP6JPokDUNJLYehocOyqYqrhA3iaxywyRXLYkYJjDUQESZw/132","comment_is_top":false,"comment_ctime":1603253600,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898220896","product_id":100026001,"comment_content":"老师好，请问磁盘预读会触发io吗？比如mysql一个内存页是16k.而一个磁盘页大小是4k，如果根据预读原理，mysql一次读取了16k的数据，所以是一次io，但如果在预读的时候也出发了io，那应该还是触发了4次io吧？","like_count":1},{"had_liked":false,"id":244078,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1598395850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893363146","product_id":100026001,"comment_content":"请问老师，存储的访问延时，例如(内存100 ns)是不是指1M的访问延时，在亚马逊这个例子的时候换成商品数据是不是还要再换算一次（商品数据是4M，内存的延时是否为400ns）。","like_count":1},{"had_liked":false,"id":197191,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1585362647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880329943","product_id":100026001,"comment_content":"赞一个，以前从来没有跳出开发的角度想如何选择IO设备","like_count":1},{"had_liked":false,"id":172806,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1579318165,"is_pvip":false,"replies":[{"id":"68073","content":"-_-_aaa同学，<br><br>你好，并不一定是一个集群，通常很多服务器，一个主板上可以有8块乃至12块硬盘的接口用50台服务器提供服务就可以了。<br>","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1580631010,"ip_address":"","comment_id":172806,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5874285461","product_id":100026001,"comment_content":"文中“一块 HDD 硬盘只能支撑每秒 100 次的随机访问，2400TB 的数据，以 4TB 一块磁盘来计算，有 600 块磁盘，也就是能支撑每秒 6 万次（ = 2400TB&#47;4TB × 1s&#47;10ms ）的随机访问”，600 块磁盘构成了一个集群吗","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481858,"discussion_content":"-_-_aaa同学，\n\n你好，并不一定是一个集群，通常很多服务器，一个主板上可以有8块乃至12块硬盘的接口用50台服务器提供服务就可以了。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580631010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146181,"user_name":"Zhangxuesong","can_delete":false,"product_type":"c1","uid":1396503,"ip_address":"","ucode":"F5C4C3AC9429AD","user_header":"https://static001.geekbang.org/account/avatar/00/15/4f/17/2185685f.jpg","comment_is_top":false,"comment_ctime":1572448459,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5867415755","product_id":100026001,"comment_content":"请问  估算每天的活跃用户为 1 亿，这 1 亿用户每人平均会访问 100 个商品，那么平均每秒访问的商品数量，就是 12 万次  这 12万次是如何计算出来的？","like_count":1,"discussions":[{"author":{"id":1048896,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/40/ab312f06.jpg","nickname":"刘晖","note":"","ucode":"3BE8ACA7E0D846","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46981,"discussion_content":"100亿除以每天的秒数86400","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573232562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1396503,"avatar":"https://static001.geekbang.org/account/avatar/00/15/4f/17/2185685f.jpg","nickname":"Zhangxuesong","note":"","ucode":"F5C4C3AC9429AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1048896,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/40/ab312f06.jpg","nickname":"刘晖","note":"","ucode":"3BE8ACA7E0D846","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":164627,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581208152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":46981,"ip_address":""},"score":164627,"extra":""}]}]},{"had_liked":false,"id":128697,"user_name":"吴宇晨","can_delete":false,"product_type":"c1","uid":1199968,"ip_address":"","ucode":"F8F45B7067DF6D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/60/049a20e9.jpg","comment_is_top":false,"comment_ctime":1566952532,"is_pvip":false,"replies":[{"id":"51184","content":"吴宇晨同学，<br><br>你好，是的，SSD在今天是一个更好的选择。而且因为SSD不是易失性存储设备，而且价格也大幅度下降了。现在大家都直接用作存储了，而不是用来作为缓存设备了。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1568552963,"ip_address":"","comment_id":128697,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861919828","product_id":100026001,"comment_content":"感觉还能加一层ssd缓存，内存和ssd差价太大速度也差很多，可以内存存千分一，ssd存百分一","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465062,"discussion_content":"吴宇晨同学，\n\n你好，是的，SSD在今天是一个更好的选择。而且因为SSD不是易失性存储设备，而且价格也大幅度下降了。现在大家都直接用作存储了，而不是用来作为缓存设备了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568552963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126427,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1566385800,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861353096","product_id":100026001,"comment_content":"我工作经常和缓存打交道、也知道缓存的应用场景、知道怎么用，但是就是不知道底层的实现原理<br><br>day36 笔记：https:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;11328360.html<br>","like_count":1},{"had_liked":false,"id":114645,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1563355841,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5858323137","product_id":100026001,"comment_content":"时间局部性，从时间维度上将东西关联起来，一部电视剧电视剧第一集第二集这种，有时间轴的那种。<br>空间复杂度，从类似于空间的概念关联起来，比如说同类商品，竞品或者同一品牌的不同系列。<br>实际中，感觉还是把访问次数最多的放进去，或者干脆就是交给Redis来管设个时间就完了。那实际中我们怎么更好贯彻这两个局部性？","like_count":1,"discussions":[{"author":{"id":1683063,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/QYKSUV20DMgBHAPLfgngdw4N8FHRCSBLCJueVRu9Ya1Ba2x4icx70zoVVFOZtG1K6TkHj5CFbuztQhRFyCjWXHQ/132","nickname":"zaab","note":"","ucode":"EE846895FF0C85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29738,"discussion_content":"一部电视剧电视剧第一集第二集这种,这个我感觉更像是空间局部性，相邻的数据很快会被访问。时间局部性是第一集我没看完， 后面我接着看才是时间局部性--访问过的数据，短期内会被再次访问。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1570781411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1795371,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/2b/446ef7b6.jpg","nickname":"许先森","note":"","ucode":"1F42D4A6B5C6AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1683063,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/QYKSUV20DMgBHAPLfgngdw4N8FHRCSBLCJueVRu9Ya1Ba2x4icx70zoVVFOZtG1K6TkHj5CFbuztQhRFyCjWXHQ/132","nickname":"zaab","note":"","ucode":"EE846895FF0C85","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136740,"discussion_content":"同意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579160482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":29738,"ip_address":""},"score":136740,"extra":""}]},{"author":{"id":1243901,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fa/fd/ec24cba7.jpg","nickname":"fcb的鱼","note":"","ucode":"88667EBF09CEC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161533,"discussion_content":"实际中确实可以考虑将数据全部放到缓存中，但是要写好你的淘汰算法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580908132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347018,"user_name":"saber","can_delete":false,"product_type":"c1","uid":1193468,"ip_address":"","ucode":"D02F8D129DB41C","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/fc/6d3e0035.jpg","comment_is_top":false,"comment_ctime":1653619483,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653619483","product_id":100026001,"comment_content":"估算的时候，可以把4TB磁盘缩小成2TB 这样硬盘就满足12万次&#47;s的访问了，当然硬盘多了，机房机柜空间就会变大","like_count":0},{"had_liked":false,"id":340435,"user_name":"小灰","can_delete":false,"product_type":"c1","uid":1130729,"ip_address":"","ucode":"1AB4E3AEDEE7FC","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/e9/29dfa621.jpg","comment_is_top":false,"comment_ctime":1648811113,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648811113","product_id":100026001,"comment_content":"说明延时时间好像不对吧！","like_count":0},{"had_liked":false,"id":280792,"user_name":"Black🐯","can_delete":false,"product_type":"c1","uid":1593345,"ip_address":"","ucode":"9AD756BD5D1C4D","user_header":"https://static001.geekbang.org/account/avatar/00/18/50/01/128bdef2.jpg","comment_is_top":false,"comment_ctime":1614393189,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1614393189","product_id":100026001,"comment_content":"实际工程中，QPS预估又是一个头疼的问题。","like_count":0,"discussions":[{"author":{"id":1334754,"avatar":"https://static001.geekbang.org/account/avatar/00/14/5d/e2/3331ad9e.jpg","nickname":"Shine Sunner","note":"","ucode":"8CCECE7F64C06B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392418,"discussion_content":"实际中要考虑的指标可太多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631000241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280230,"user_name":"红薯板栗","can_delete":false,"product_type":"c1","uid":2413071,"ip_address":"","ucode":"236BE91291A575","user_header":"https://static001.geekbang.org/account/avatar/00/24/d2/0f/8f14c85b.jpg","comment_is_top":false,"comment_ctime":1614138267,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614138267","product_id":100026001,"comment_content":"提升性能：优化大概率事件，流水线，预测","like_count":0},{"had_liked":false,"id":245720,"user_name":" 尿布","can_delete":false,"product_type":"c1","uid":1476323,"ip_address":"","ucode":"D1C8BDA7540962","user_header":"https://static001.geekbang.org/account/avatar/00/16/86/e3/a31f6869.jpg","comment_is_top":false,"comment_ctime":1599034772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599034772","product_id":100026001,"comment_content":"想要仔细了解各种存储器和局部性原理，你还是可以去读一读教科书。《计算机组成与设计：硬件 &#47; 软件接口》的 5.1～5.2 小节，是一个很好的阅读材料。","like_count":0},{"had_liked":false,"id":227130,"user_name":"🤪HappyJoo","can_delete":false,"product_type":"c1","uid":1234591,"ip_address":"","ucode":"96E1858F06BABA","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/9f/0213e8a0.jpg","comment_is_top":false,"comment_ctime":1592294752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592294752","product_id":100026001,"comment_content":"是不是和 RISC 差不多的道理呢？把最常用的拿出来，不常用的放在一边，总的来说还是会快很多。","like_count":0},{"had_liked":false,"id":158132,"user_name":"Goal","can_delete":false,"product_type":"c1","uid":1307012,"ip_address":"","ucode":"C337CD4C7E07B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/84/7d21bd9e.jpg","comment_is_top":false,"comment_ctime":1575336695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575336695","product_id":100026001,"comment_content":"太赞了，这种结合实际场景说明计算机原理理论的方式方法让人受益匪浅。","like_count":0},{"had_liked":false,"id":141765,"user_name":"亡翎","can_delete":false,"product_type":"c1","uid":1591529,"ip_address":"","ucode":"827613EBCB24E9","user_header":"https://static001.geekbang.org/account/avatar/00/18/48/e9/f42f0f49.jpg","comment_is_top":false,"comment_ctime":1571220398,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1571220398","product_id":100026001,"comment_content":"利用缓存+内存+硬盘+磁盘的访问速度和容量大小，根据局部性原理 ，来设计存储器的层次结构","like_count":0},{"had_liked":false,"id":138245,"user_name":"coldpark","can_delete":false,"product_type":"c1","uid":1058331,"ip_address":"","ucode":"D1B0F343B384F8","user_header":"https://static001.geekbang.org/account/avatar/00/10/26/1b/4caf36bd.jpg","comment_is_top":false,"comment_ctime":1570112821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570112821","product_id":100026001,"comment_content":"感觉老师在冒险与预测的专题之后看材料的时间就比原来少了，内容也没那么干活满满了，希望之后几章能恢复过来。","like_count":0},{"had_liked":false,"id":126622,"user_name":"Jag","can_delete":false,"product_type":"c1","uid":1513762,"ip_address":"","ucode":"AA6D753EBE5422","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/22/2355a0dd.jpg","comment_is_top":false,"comment_ctime":1566437540,"is_pvip":false,"replies":[{"id":"51194","content":"Jag同学，<br><br>你好，在这一讲里，我们已经用上了本地缓存。你可以尝试估算一下淘宝的数据量，看看到底要用多少机器才能装得下这么多数据呢？","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1568557092,"ip_address":"","comment_id":126622,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566437540","product_id":100026001,"comment_content":"现在通常加一个redis ，在加一个本地缓存，来帮数据库分担压力","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464088,"discussion_content":"Jag同学，\n\n你好，在这一讲里，我们已经用上了本地缓存。你可以尝试估算一下淘宝的数据量，看看到底要用多少机器才能装得下这么多数据呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568557092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}