{"id":129807,"title":"14丨UDP也可以是“已连接”？","content":"<p>你好，我是盛延敏，这里是网络编程实战的第14讲，欢迎回来。</p><p>在前面的基础篇中，我们已经接触到了UDP数据报协议相关的知识，在我们的脑海里，已经深深印上了“<strong>UDP 等于无连接协议</strong>”的特性。那么看到这一讲的题目，你是不是觉得有点困惑？没关系，和我一起进入“已连接”的UDP的世界，回头再看这个标题，相信你就会恍然大悟。</p><h2>从一个例子开始</h2><p>我们先从一个客户端例子开始，在这个例子中，客户端在UDP套接字上调用connect函数，之后将标准输入的字符串发送到服务器端，并从服务器端接收处理后的报文。当然，向服务器端发送和接收报文是通过调用函数sendto和recvfrom来完成的。</p><pre><code>#include &quot;lib/common.h&quot;\n# define    MAXLINE     4096\n\nint main(int argc, char **argv) {\n    if (argc != 2) {\n        error(1, 0, &quot;usage: udpclient1 &lt;IPaddress&gt;&quot;);\n    }\n\n    int socket_fd;\n    socket_fd = socket(AF_INET, SOCK_DGRAM, 0);\n\n    struct sockaddr_in server_addr;\n    bzero(&amp;server_addr, sizeof(server_addr));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_port = htons(SERV_PORT);\n    inet_pton(AF_INET, argv[1], &amp;server_addr.sin_addr);\n\n    socklen_t server_len = sizeof(server_addr);\n\n    if (connect(socket_fd, (struct sockaddr *) &amp;server_addr, server_len)) {\n        error(1, errno, &quot;connect failed&quot;);\n    }\n\n    struct sockaddr *reply_addr;\n    reply_addr = malloc(server_len);\n\n    char send_line[MAXLINE], recv_line[MAXLINE + 1];\n    socklen_t len;\n    int n;\n\n    while (fgets(send_line, MAXLINE, stdin) != NULL) {\n        int i = strlen(send_line);\n        if (send_line[i - 1] == '\\n') {\n            send_line[i - 1] = 0;\n        }\n\n        printf(&quot;now sending %s\\n&quot;, send_line);\n        size_t rt = sendto(socket_fd, send_line, strlen(send_line), 0, (struct sockaddr *) &amp;server_addr, server_len);\n        if (rt &lt; 0) {\n            error(1, errno, &quot;sendto failed&quot;);\n        }\n        printf(&quot;send bytes: %zu \\n&quot;, rt);\n        \n        len = 0;\n        recv_line[0] = 0;\n        n = recvfrom(socket_fd, recv_line, MAXLINE, 0, reply_addr, &amp;len);\n        if (n &lt; 0)\n            error(1, errno, &quot;recvfrom failed&quot;);\n        recv_line[n] = 0;\n        fputs(recv_line, stdout);\n        fputs(&quot;\\n&quot;, stdout);\n    }\n\n    exit(0);\n}\n</code></pre><p>我对这个程序做一个简单的解释：</p><ul>\n<li>9-10行创建了一个UDP套接字；</li>\n<li>12-16行创建了一个IPv4地址，绑定到指定端口和IP；</li>\n<li><strong>20-22行调用connect将UDP套接字和IPv4地址进行了“绑定”，这里connect函数的名称有点让人误解，其实可能更好的选择是叫做setpeername</strong>；</li>\n<li>31-55行是程序的主体，读取标准输入字符串后，调用sendto发送给对端；之后调用recvfrom等待对端的响应，并把对端响应信息打印到标准输出。</li>\n</ul><!-- [[[read_end]]] --><p>在没有开启服务端的情况下，我们运行一下这个程序：</p><pre><code>$ ./udpconnectclient 127.0.0.1\ng1\nnow sending g1\nsend bytes: 2\nrecvfrom failed: Connection refused (111)\n</code></pre><p>看到这里你会不会觉得很奇怪？不是说好UDP是“无连接”的协议吗？不是说好UDP客户端只会阻塞在recvfrom这样的调用上吗？怎么这里冒出一个“Connection refused”的错误呢？</p><p>别着急，下面就跟着我的思路慢慢去解开这个谜团。</p><h2>UDP connect的作用</h2><p>从前面的例子中，你会发现，我们可以对UDP套接字调用connect函数，但是和TCP connect调用引起TCP三次握手，建立TCP有效连接不同，UDP connect函数的调用，并不会引起和服务器目标端的网络交互，也就是说，并不会触发所谓的“握手”报文发送和应答。</p><p>那么对UDP套接字进行connect操作到底有什么意义呢？</p><p>其实上面的例子已经给出了答案，这主要是为了让应用程序能够接收“异步错误”的信息。</p><p>如果我们回想一下第6篇不调用connect操作的客户端程序，在服务器端不开启的情况下，客户端程序是不会报错的，程序只会阻塞在recvfrom上，等待返回（或者超时）。</p><p>在这里，我们通过对UDP套接字进行connect操作，将UDP套接字建立了“上下文”，该套接字和服务器端的地址和端口产生了联系，正是这种绑定关系给了操作系统内核必要的信息，能够将操作系统内核收到的信息和对应的套接字进行关联。</p><p>我们可以展开讨论一下。</p><p>事实上，当我们调用sendto或者send操作函数时，应用程序报文被发送，我们的应用程序返回，操作系统内核接管了该报文，之后操作系统开始尝试往对应的地址和端口发送，因为对应的地址和端口不可达，一个ICMP报文会返回给操作系统内核，该ICMP报文含有目的地址和端口等信息。</p><p>如果我们不进行connect操作，建立（UDP套接字——目的地址+端口）之间的映射关系，操作系统内核就没有办法把ICMP不可达的信息和UDP套接字进行关联，也就没有办法将ICMP信息通知给应用程序。</p><p>如果我们进行了connect操作，帮助操作系统内核从容建立了（UDP套接字——目的地址+端口）之间的映射关系，当收到一个ICMP不可达报文时，操作系统内核可以从映射表中找出是哪个UDP套接字拥有该目的地址和端口，别忘了套接字在操作系统内部是全局唯一的，当我们在该套接字上再次调用recvfrom或recv方法时，就可以收到操作系统内核返回的“Connection Refused”的信息。</p><h2>收发函数</h2><p>在对UDP进行connect之后，关于收发函数的使用，很多书籍是这样推荐的：</p><ul>\n<li>使用send或write函数来发送，如果使用sendto需要把相关的to地址信息置零；</li>\n<li>使用recv或read函数来接收，如果使用recvfrom需要把对应的from地址信息置零。</li>\n</ul><p>其实不同的UNIX实现对此表现出来的行为不尽相同。</p><p>在我的Linux 4.4.0环境中，使用sendto和recvfrom，系统会自动忽略to和from信息。在我的macOS 10.13中，确实需要遵守这样的规定，使用sendto或recvfrom会得到一些奇怪的结果，切回send和recv后正常。</p><p>考虑到兼容性，我们也推荐这些常规做法。所以在接下来的程序中，我会使用这样的做法来实现。</p><h2>服务器端connect的例子</h2><p>一般来说，服务器端不会主动发起connect操作，因为一旦如此，服务器端就只能响应一个客户端了。不过，有时候也不排除这样的情形，一旦一个客户端和服务器端发送UDP报文之后，该服务器端就要服务于这个唯一的客户端。</p><p>一个类似的服务器端程序如下：</p><pre><code>#include &quot;lib/common.h&quot;\n\nstatic int count;\n\nstatic void recvfrom_int(int signo) {\n    printf(&quot;\\nreceived %d datagrams\\n&quot;, count);\n    exit(0);\n}\n\nint main(int argc, char **argv) {\n    int socket_fd;\n    socket_fd = socket(AF_INET, SOCK_DGRAM, 0);\n\n    struct sockaddr_in server_addr;\n    bzero(&amp;server_addr, sizeof(server_addr));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);\n    server_addr.sin_port = htons(SERV_PORT);\n\n    bind(socket_fd, (struct sockaddr *) &amp;server_addr, sizeof(server_addr));\n\n    socklen_t client_len;\n    char message[MAXLINE];\n    message[0] = 0;\n    count = 0;\n\n    signal(SIGINT, recvfrom_int);\n\n    struct sockaddr_in client_addr;\n    client_len = sizeof(client_addr);\n\n    int n = recvfrom(socket_fd, message, MAXLINE, 0, (struct sockaddr *) &amp;client_addr, &amp;client_len);\n    if (n &lt; 0) {\n        error(1, errno, &quot;recvfrom failed&quot;);\n    }\n    message[n] = 0;\n    printf(&quot;received %d bytes: %s\\n&quot;, n, message);\n\n    if (connect(socket_fd, (struct sockaddr *) &amp;client_addr, client_len)) {\n        error(1, errno, &quot;connect failed&quot;);\n    }\n\n    while (strncmp(message, &quot;goodbye&quot;, 7) != 0) {\n        char send_line[MAXLINE];\n        sprintf(send_line, &quot;Hi, %s&quot;, message);\n\n        size_t rt = send(socket_fd, send_line, strlen(send_line), 0);\n        if (rt &lt; 0) {\n            error(1, errno, &quot;send failed &quot;);\n        }\n        printf(&quot;send bytes: %zu \\n&quot;, rt);\n\n        size_t rc = recv(socket_fd, message, MAXLINE, 0);\n        if (rc &lt; 0) {\n            error(1, errno, &quot;recv failed&quot;);\n        }\n        \n        count++;\n    }\n\n    exit(0);\n}\n</code></pre><p>我对这个程序做下解释：</p><ul>\n<li>11-12行创建UDP套接字；</li>\n<li>14-18行创建IPv4地址，绑定到ANY和对应端口；</li>\n<li>20行绑定UDP套接字和IPv4地址；</li>\n<li>27行为该程序注册一个信号处理函数，以响应Ctrl+C信号量操作；</li>\n<li>32-37行调用recvfrom等待客户端报文到达，并将客户端信息保持到client_addr中；</li>\n<li><strong>39-41行调用connect操作，将UDP套接字和客户端client_addr进行绑定</strong>；</li>\n<li>43-59行是程序的主体，对接收的信息进行重新处理，加上”Hi“前缀后发送给客户端，并持续不断地从客户端接收报文，该过程一直持续，直到客户端发送“goodbye”报文为止。</li>\n</ul><p>注意这里所有收发函数都使用了send和recv。</p><p>接下来我们实现一个connect的客户端程序：</p><pre><code>#include &quot;lib/common.h&quot;\n# define    MAXLINE     4096\n\nint main(int argc, char **argv) {\n    if (argc != 2) {\n        error(1, 0, &quot;usage: udpclient3 &lt;IPaddress&gt;&quot;);\n    }\n\n    int socket_fd;\n    socket_fd = socket(AF_INET, SOCK_DGRAM, 0);\n\n    struct sockaddr_in server_addr;\n    bzero(&amp;server_addr, sizeof(server_addr));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_port = htons(SERV_PORT);\n    inet_pton(AF_INET, argv[1], &amp;server_addr.sin_addr);\n\n    socklen_t server_len = sizeof(server_addr);\n\n    if (connect(socket_fd, (struct sockaddr *) &amp;server_addr, server_len)) {\n        error(1, errno, &quot;connect failed&quot;);\n    }\n\n    char send_line[MAXLINE], recv_line[MAXLINE + 1];\n    int n;\n\n    while (fgets(send_line, MAXLINE, stdin) != NULL) {\n        int i = strlen(send_line);\n        if (send_line[i - 1] == '\\n') {\n            send_line[i - 1] = 0;\n        }\n\n        printf(&quot;now sending %s\\n&quot;, send_line);\n        size_t rt = send(socket_fd, send_line, strlen(send_line), 0);\n        if (rt &lt; 0) {\n            error(1, errno, &quot;send failed &quot;);\n        }\n        printf(&quot;send bytes: %zu \\n&quot;, rt);\n\n        recv_line[0] = 0;\n        n = recv(socket_fd, recv_line, MAXLINE, 0);\n        if (n &lt; 0)\n            error(1, errno, &quot;recv failed&quot;);\n        recv_line[n] = 0;\n        fputs(recv_line, stdout);\n        fputs(&quot;\\n&quot;, stdout);\n    }\n\n    exit(0);\n}\n</code></pre><p>我对这个客户端程序做一下解读：</p><ul>\n<li>9-10行创建了一个UDP套接字；</li>\n<li>12-16行创建了一个IPv4地址，绑定到指定端口和IP；</li>\n<li><strong>20-22行调用connect将UDP套接字和IPv4地址进行了“绑定”</strong>；</li>\n<li>27-46行是程序的主体，读取标准输入字符串后，调用send发送给对端；之后调用recv等待对端的响应，并把对端响应信息打印到标准输出。</li>\n</ul><p>注意这里所有收发函数也都使用了send和recv。</p><p>接下来，我们先启动服务器端程序，然后依次开启两个客户端，分别是客户端1、客户端2，并且让客户端1先发送UDP报文。</p><p>服务器端：</p><pre><code>$ ./udpconnectserver\nreceived 2 bytes: g1\nsend bytes: 6\n</code></pre><p>客户端1：</p><pre><code> ./udpconnectclient2 127.0.0.1\ng1\nnow sending g1\nsend bytes: 2\nHi, g1\n</code></pre><p>客户端2：</p><pre><code>./udpconnectclient2 127.0.0.1\ng2\nnow sending g2\nsend bytes: 2\nrecv failed: Connection refused (111)\n</code></pre><p>我们看到，客户端1先发送报文，服务端随之通过connect和客户端1进行了“绑定”，这样，客户端2从操作系统内核得到了ICMP的错误，该错误在recv函数中返回，显示了“Connection refused”的错误信息。</p><h2>性能考虑</h2><p>一般来说，客户端通过connect绑定服务端的地址和端口，对UDP而言，可以有一定程度的性能提升。</p><p>这是为什么呢？</p><p>因为如果不使用connect方式，每次发送报文都会需要这样的过程：</p><p>连接套接字→发送报文→断开套接字→连接套接字→发送报文→断开套接字 →………</p><p>而如果使用connect方式，就会变成下面这样：</p><p>连接套接字→发送报文→发送报文→……→最后断开套接字</p><p>我们知道，连接套接字是需要一定开销的，比如需要查找路由表信息。所以，UDP客户端程序通过connect可以获得一定的性能提升。</p><h2>总结</h2><p>在今天的内容里，我对UDP套接字调用connect方法进行了深入的分析。之所以对UDP使用connect，绑定本地地址和端口，是为了让我们的程序可以快速获取异步错误信息的通知，同时也可以获得一定性能上的提升。</p><h2>思考题</h2><p>在本讲的最后，按照惯例，给你留两个思考题：</p><ol>\n<li>可以对一个UDP 套接字进行多次connect操作吗? 你不妨动手试试，看看结果。</li>\n<li>如果想使用多播或广播，我们应该怎么去使用connect呢？</li>\n</ol><p>欢迎你在评论区写下你的思考，也欢迎把这篇文章分享给你的朋友或者同事，一起交流一下。</p>","neighbors":{"left":{"article_title":"13 | 小数据包应对之策：理解TCP协议中的动态数据传输","id":128609},"right":{"article_title":"15 | 怎么老是出现“地址已经被使用”？","id":131670}},"comments":[{"had_liked":false,"id":130372,"user_name":"程序水果宝","can_delete":false,"product_type":"c1","uid":1371633,"ip_address":"","ucode":"1700DDFE073A56","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","comment_is_top":false,"comment_ctime":1567436170,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"169071160714","product_id":100032701,"comment_content":"对于recvfrom函数，我们可以看成是TCP中accept函数和read函数的结合，前三个参数是read的参数，后两个参数是accept的参数。对于sendto函数，则可以看成是TCP中connect函数和send函数的结合，前三个参数是send的参数，后两个参数则是connect的参数。所以udp在发送和接收数据的过程中都会建立套接字连接，只不过每次调用sendto发送完数据后，内核都会将临时保存的对端地址数据删除掉，也就是断开套接字，从而就会出现老师所说的那个循环","like_count":39},{"had_liked":false,"id":243127,"user_name":"Geek_63bb29","can_delete":false,"product_type":"c1","uid":2017041,"ip_address":"","ucode":"65C27FA7531722","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/5kv7IqibneNnMLqtWZQR5f1et8lJmoxiaU43Ttzz3zqW7QzBqMkib8GCtImKsms7PPbWmTB51xRnZQAnRPfA1wVaw/132","comment_is_top":false,"comment_ctime":1597973214,"is_pvip":false,"replies":[{"id":"90115","content":"我能想到的：<br>1.udp可以增加消息编号；<br>2.对每个消息编号提供ACK，在udp应用层增加应答机制；<br>3.没有应答的增加重传机制<br>4.增加缓存，ACK完的才从缓存中清除","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1598795164,"ip_address":"","comment_id":243127,"utype":1}],"discussion_count":2,"race_medal":0,"score":"66022482654","product_id":100032701,"comment_content":"老师，面试过程中问道udp如何实现可靠性，这个怎么答呀。要求具体每部实现","like_count":16,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504189,"discussion_content":"我能想到的：\n1.udp可以增加消息编号；\n2.对每个消息编号提供ACK，在udp应用层增加应答机制；\n3.没有应答的增加重传机制\n4.增加缓存，ACK完的才从缓存中清除","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598795164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2184325,"avatar":"https://static001.geekbang.org/account/avatar/00/21/54/85/ab5148ce.jpg","nickname":"duckman","note":"","ucode":"0184C26C4B6C1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332743,"discussion_content":"如果要TCP这种服务质量的话，还是要把TCP\n中的那些概念在UDP中重新实现一遍吧，类似于QUIC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607329606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233153,"user_name":"Sancho","can_delete":false,"product_type":"c1","uid":1436391,"ip_address":"","ucode":"78849913082622","user_header":"https://static001.geekbang.org/account/avatar/00/15/ea/e7/9ce305ec.jpg","comment_is_top":false,"comment_ctime":1594253324,"is_pvip":false,"replies":[{"id":"86807","content":"1.是通过sendto函数来绑定服务端地址的，之后再通过recvfrom引用到之前的socket，这样收到的报文就是指定的服务地址和端口了；<br>2.不是connect导致ICMP报文，而是对应的地址和端口不可达时，一个 ICMP 报文会返回。connect只是将这个信息传递变得可能了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1594907338,"ip_address":"","comment_id":233153,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35953991692","product_id":100032701,"comment_content":"老师，你好。我有两个疑问：<br>1.不进行connect操作，UDP套接字与服务端的地址和端口就没有产生关系，那recvfrom是怎么收到对应的报文呢？<br>2.UDP的connect操作，会引发内核的ICMP报文发送？如果不是，ICMP是在什么时机下发送的？","like_count":8,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500917,"discussion_content":"1.是通过sendto函数来绑定服务端地址的，之后再通过recvfrom引用到之前的socket，这样收到的报文就是指定的服务地址和端口了；\n2.不是connect导致ICMP报文，而是对应的地址和端口不可达时，一个 ICMP 报文会返回。connect只是将这个信息传递变得可能了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594907338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143550,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1571729774,"is_pvip":false,"replies":[{"id":"55825","content":"👍","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1572058384,"ip_address":"","comment_id":143550,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35931468142","product_id":100032701,"comment_content":"问题1：亲测可以；<br>问题2：可以参考https:&#47;&#47;yq.aliyun.com&#47;articles&#47;523036。","like_count":9,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471589,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572058384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2184325,"avatar":"https://static001.geekbang.org/account/avatar/00/21/54/85/ab5148ce.jpg","nickname":"duckman","note":"","ucode":"0184C26C4B6C1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332757,"discussion_content":"阿里云的排版好丑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607333084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268903,"user_name":"🐗Jinx","can_delete":false,"product_type":"c1","uid":1711790,"ip_address":"","ucode":"B5C084F54BF66A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1e/ae/a6d5e24a.jpg","comment_is_top":false,"comment_ctime":1608424839,"is_pvip":false,"replies":[{"id":"98871","content":"是的。UDP的广播地址是固定的为255.255.255.255。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1610285795,"ip_address":"","comment_id":268903,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27378228615","product_id":100032701,"comment_content":"对于广播的话，先把广播的option打开。然后再 connect 255.255.255.255 对吗？","like_count":5,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512074,"discussion_content":"是的。UDP的广播地址是固定的为255.255.255.255。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610285795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130087,"user_name":"Liam","can_delete":false,"product_type":"c1","uid":1094597,"ip_address":"","ucode":"1D15D3B64F2606","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/c5/7fc124e2.jpg","comment_is_top":false,"comment_ctime":1567385220,"is_pvip":false,"replies":[{"id":"51758","content":"在答疑篇里统一回复了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568960675,"ip_address":"","comment_id":130087,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23042221700","product_id":100032701,"comment_content":"按照老师的说法，只有connect才建立socket和ip地址的映射；那么，如果不进行connect，收到信息后内核又是如何把数据交给对应的socket呢","like_count":5,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465796,"discussion_content":"在答疑篇里统一回复了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568960675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170784,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/60/eae432c6.jpg","nickname":"yusuf","note":"","ucode":"9F32149B2ADDA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7169,"discussion_content":"UDP报文格式中保存了源IP、源端口、目标IP、目标端口","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567413900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56585,"discussion_content":"好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574500157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236766,"avatar":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","nickname":"传说中的成大大","note":"","ucode":"103543D6E706BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7158,"discussion_content":"其实你想 就算是tcp 客户端去连接的时候也没有绑定地址和端口所以应该是内核处理的,在程序启动时内核已经为程序分配了端口，所以收到消息内核就知道怎么处理了,至于服务器端 是进行了地址和端口的手动绑定的, connct是对端的Ip地址和端口,个人理解哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567408106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131008,"user_name":"沉淀的梦想","can_delete":false,"product_type":"c1","uid":1177315,"ip_address":"","ucode":"BCB7C26F9D214B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","comment_is_top":false,"comment_ctime":1567597115,"is_pvip":false,"replies":[{"id":"50829","content":"我不觉得会发ICMP来探一谈。ICMP是用的时候才触发的。<br><br>这里我想表达的是操作系统协议栈在每次sendto的时候都会需要一个地址初始化的过程，如果这个过程省略掉了，是可以得到一点点性能的提升的。当然，其实这个是没有那么大的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568195559,"ip_address":"","comment_id":131008,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18747466299","product_id":100032701,"comment_content":"还是不太理解为什么UDP的sendto方法会有一个&quot;连接&quot;过程的性能损耗，直接按照目标地址发过去不就可以了吗？我的理解是操作系统会先用ICMP协议探一探目标地址是否存在，然后再用UDP协议发送具体的数据，不知道理解的对不？","like_count":4,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466242,"discussion_content":"我不觉得会发ICMP来探一谈。ICMP是用的时候才触发的。\n\n这里我想表达的是操作系统协议栈在每次sendto的时候都会需要一个地址初始化的过程，如果这个过程省略掉了，是可以得到一点点性能的提升的。当然，其实这个是没有那么大的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568195559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130224,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1567407614,"is_pvip":false,"replies":[{"id":"51759","content":"没有断开，这里都是一个系统调用，告诉了一些系统内核信息而已。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568960721,"ip_address":"","comment_id":130224,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10157342206","product_id":100032701,"comment_content":"udp 连接套接字 这个是什么过程？ 断开套接字这又是什么过程呢？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465865,"discussion_content":"没有断开，这里都是一个系统调用，告诉了一些系统内核信息而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568960721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326629,"user_name":"Mandone","can_delete":false,"product_type":"c1","uid":1116017,"ip_address":"","ucode":"FE236389CEF200","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/71/d3049207.jpg","comment_is_top":false,"comment_ctime":1639613495,"is_pvip":true,"replies":[{"id":"118845","content":"是因为之前发送成功了，所以没有ICMP不可达的报文收到，因而进入了阻塞状态。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1639829342,"ip_address":"","comment_id":326629,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5934580791","product_id":100032701,"comment_content":"发现在输入完goodbye之后，服务端执行exit,后面client再去请求的时候又会被阻塞而不是返回错误，是因connect是单次操作吗？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539749,"discussion_content":"是因为之前发送成功了，所以没有ICMP不可达的报文收到，因而进入了阻塞状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639829342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266427,"user_name":"duckman","can_delete":false,"product_type":"c1","uid":2184325,"ip_address":"","ucode":"0184C26C4B6C1B","user_header":"https://static001.geekbang.org/account/avatar/00/21/54/85/ab5148ce.jpg","comment_is_top":false,"comment_ctime":1607333428,"is_pvip":false,"replies":[{"id":"98879","content":"也可以这么说。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1610286167,"ip_address":"","comment_id":266427,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5902300724","product_id":100032701,"comment_content":"connect 将一个socket绑定到一个udp的客户端进程，其他的udp客户端进程想要再次绑定该socket(4元组)发送数据的时候就会报错。所以connect起到了 &quot;声明式&quot;独占的作用?","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511261,"discussion_content":"也可以这么说。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610286167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264723,"user_name":"一个戒","can_delete":false,"product_type":"c1","uid":2331572,"ip_address":"","ucode":"2FD9289C547785","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep1aHicNquR3ETTicbInlCpfawcDMB8ILYyzegVTubTgQ0w6icarsK7fglpZVr7VfiaJaQ0eokNAHVYLA/132","comment_is_top":false,"comment_ctime":1606616684,"is_pvip":false,"replies":[{"id":"98881","content":"这个是UDP哦，不是TCP。 通常在服务器端不开启的情况下，UDP客户端程序是不会报错的，程序只会阻塞在 recvfrom 上，等待返回（或者超时）。UDP的connect并不是真正的conncect操作，它只是给UDP 套接字建立了“上下文”。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1610286449,"ip_address":"","comment_id":264723,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5901583980","product_id":100032701,"comment_content":"老师，请问第一个程序中，在没有开启服务端的情况下开启客户端，不会在第20行connect的时候就error报错了吗？为什么还能接收标准输入并send出去？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510663,"discussion_content":"这个是UDP哦，不是TCP。 通常在服务器端不开启的情况下，UDP客户端程序是不会报错的，程序只会阻塞在 recvfrom 上，等待返回（或者超时）。UDP的connect并不是真正的conncect操作，它只是给UDP 套接字建立了“上下文”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610286449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215778,"user_name":"fhs","can_delete":false,"product_type":"c1","uid":1640934,"ip_address":"","ucode":"941734CC64A296","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJWFdKjyLOXtCzowmdCUFHezNlnux4NPWmYsqETjiaHNbnmb7xdzibDncZqP06nNbpN4AhmD76cpicfw/132","comment_is_top":false,"comment_ctime":1589101668,"is_pvip":false,"replies":[{"id":"80640","content":"这个要从函数设计的角度来说，在UDP通信中, sendto的目的是将报文通过网络传送给对端，并不考虑是否能发送成功，仅仅考虑的是把报文通过缓冲区发送出去；而recvfrom则是一个阻塞调用，它是需要知道是否成功的，包括超时，包括ICMP报文返回错误。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1589706495,"ip_address":"","comment_id":215778,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884068964","product_id":100032701,"comment_content":"请问一下，在客户端的代码中，在send之前进行了connect。测试发现，不启动服务端的情况下，使用使用客户端send的函数的返回值是输入的字节数，既然文章说到&quot;因为对应的地址和端口不可达，一个ICMP报文会返回给操作系统内核，该ICMP报文含有目的地址和端口等信息&quot;，那为什么send函数返回是成功，而recv就返回失败呢？send的时候不应该也能知道icmp报文返回错误而返回错误么？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494554,"discussion_content":"这个要从函数设计的角度来说，在UDP通信中, sendto的目的是将报文通过网络传送给对端，并不考虑是否能发送成功，仅仅考虑的是把报文通过缓冲区发送出去；而recvfrom则是一个阻塞调用，它是需要知道是否成功的，包括超时，包括ICMP报文返回错误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589706495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343204,"user_name":"Frankey","can_delete":false,"product_type":"c1","uid":2776006,"ip_address":"","ucode":"2F09BC2500C9E7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er5SNsSoiaZw4Qzd2ctH4vtibHQordcLrYsX43oFZFloRTId0op617mcGlrvGx33U8ic2LTgdicoEFPvQ/132","comment_is_top":false,"comment_ctime":1650706452,"is_pvip":false,"replies":[{"id":"125678","content":"网络层 A-&gt;B B-&gt;C，这些是需要路由信息的。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1651405863,"ip_address":"","comment_id":343204,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650706452","product_id":100032701,"comment_content":"连接套接字是需要一定开销的，比如需要查找路由表信息。<br>这个路由表信息是什么？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569320,"discussion_content":"网络层 A-&gt;B B-&gt;C，这些是需要路由信息的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651405864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324908,"user_name":"kylexy_0817","can_delete":false,"product_type":"c1","uid":1068372,"ip_address":"","ucode":"392DD9DD5E4B6E","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/54/9c214885.jpg","comment_is_top":false,"comment_ctime":1638711988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638711988","product_id":100032701,"comment_content":"1、因为UDP调用connect并不会真正创建链接，所以多次调用都不会有问题。<br>2、connect到路由器中的广播地址","like_count":1},{"had_liked":false,"id":322884,"user_name":"MuteX","can_delete":false,"product_type":"c1","uid":1089297,"ip_address":"","ucode":"554C538B6397E4","user_header":"https://static001.geekbang.org/account/avatar/00/10/9f/11/9c55033e.jpg","comment_is_top":false,"comment_ctime":1637645015,"is_pvip":false,"replies":[{"id":"117468","content":"疏漏了。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1638087601,"ip_address":"","comment_id":322884,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637645015","product_id":100032701,"comment_content":"提一个细节，sendto&#47;recvfrom和send&#47;recv的返回值类型是ssize_t，也就是long，而文章例子中很多地方用的是size_t，也就是unsigned long，很显然会导致问题。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534071,"discussion_content":"疏漏了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638087601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294054,"user_name":"DonaldTrumpppppppppp","can_delete":false,"product_type":"c1","uid":2063923,"ip_address":"","ucode":"211B1A25C53172","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4rbCWDxib3FHibYBouTwZqZBH6h5IgvjibEiaBv4Ceekib9SYg0peBBlFGu8hDuGvwjKp6LNznvEAibYw/132","comment_is_top":false,"comment_ctime":1621734305,"is_pvip":true,"replies":[{"id":"106714","content":"这是对UDP而言的，通过sendto函数客户端指定了发送的服务端地址，再通过recvfrom就可以从之前指定的服务端地址来接收数据了。这里，没有说可以任意从某个服务端收数据的，而是从之前指定的服务端收数据的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1621778393,"ip_address":"","comment_id":294054,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1621734305","product_id":100032701,"comment_content":"不调用connect时，有个评论问题老师你是这么答的。1.是通过sendto函数来绑定服务端地址的，之后再通过recvfrom引用到之前的socket，这样收到的报文就是指定的服务地址和端口了。  难道recvfrom不是收到后再填充from的地址的吗，还可以指定从某个服务端收数据？任何一个服务端只要知道了客户端的ip和端口就能发，客户端没有拒绝的权力吧","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520489,"discussion_content":"这是对UDP而言的，通过sendto函数客户端指定了发送的服务端地址，再通过recvfrom就可以从之前指定的服务端地址来接收数据了。这里，没有说可以任意从某个服务端收数据的，而是从之前指定的服务端收数据的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621778393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1326961,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3f/71/bd85a207.jpg","nickname":"三石","note":"","ucode":"04B06F083ADC44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582657,"discussion_content":"感觉recvfrom这里应该是谁给它这个端口发，它都会能接受的，应该不会仅仅是前面sendto的地址发来的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659581112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293663,"user_name":"凌空飞起的剪刀腿","can_delete":false,"product_type":"c1","uid":1243680,"ip_address":"","ucode":"16FBBF4A3B54C6","user_header":"https://static001.geekbang.org/account/avatar/00/12/fa/20/0f06b080.jpg","comment_is_top":false,"comment_ctime":1621481055,"is_pvip":false,"replies":[{"id":"106717","content":"好吧，大家都有这个疑问，我只是在说，每次调用sendto都需要进行地址初始化，其实这个是没有那么大的。我们就把性能损耗这个&quot;圆&quot;过去吧 😢","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1621778728,"ip_address":"","comment_id":293663,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621481055","product_id":100032701,"comment_content":"还是不太理解为什么UDP的sendto方法会有一个&quot;连接&quot;过程的性能损耗，直接按照目标地址发过去不就可以了吗？我的理解是操作系统会先用ICMP协议探一探目标地址是否存在，然后再用UDP协议发送具体的数据，不知道理解的对不？<br>我也同意这个说法，可能客户端提前connect可以解决不用sendto以后，是否可以到达服务器，省的堵塞在recv函数里面了，同时使用connect可以提前判断服务器是否存在，至于是否会节省性能这需要抓包分析","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520310,"discussion_content":"好吧，大家都有这个疑问，我只是在说，每次调用sendto都需要进行地址初始化，其实这个是没有那么大的。我们就把性能损耗这个&amp;quot;圆&amp;quot;过去吧 😢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621778728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271526,"user_name":"Geek_de83f6","can_delete":false,"product_type":"c1","uid":2170148,"ip_address":"","ucode":"3EFB4DC01C222D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKn2fx2UTaWgMl3fSOSicJEDOibbtYicHUVSG8JsA8j6Njibc9j3YVSvHtMZb2Z20l4NmjibiaSv8m7hz9w/132","comment_is_top":false,"comment_ctime":1609680839,"is_pvip":false,"replies":[{"id":"98867","content":"看看你是不是没有权限run这个程序，或者你的本地socket路径不可以创建。总之是哪里出错了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1610285241,"ip_address":"","comment_id":271526,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1609680839","product_id":100032701,"comment_content":"为什么我在第一个实例中，没有打开服务器，然后客户端connect并且send了之后，在recv的地方阻塞了，并没有收到connect失败的消息呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512949,"discussion_content":"看看你是不是没有权限run这个程序，或者你的本地socket路径不可以创建。总之是哪里出错了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610285241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036333,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ZM5RHVBe8pVGoibpPHVM5TZTbqS4u4ckiaHoItk1LIhTfCEYbH7LYiaWJDvTiaga34MQQ3xicIZ0vsAkoSKRvY8F3A/132","nickname":"Geek_b4bb35","note":"","ucode":"257EE15A137445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370543,"discussion_content":"我也遇到这个问题了，可能你也是mac系统吧。它第一个例子调用的sendto和recvfrom函数，你按老师讲的要求，把&#34;to&#34;和&#34;from&#34;都设为NULL。亲测就不会阻塞直接报错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619447061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240303,"user_name":"守望","can_delete":false,"product_type":"c1","uid":1437287,"ip_address":"","ucode":"8EAF6C1921B08D","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/67/03c95ec2.jpg","comment_is_top":false,"comment_ctime":1596856527,"is_pvip":false,"replies":[{"id":"89337","content":"不知道你的性能测试是如何进行的，所以不好对测试结果进行分析。不过，我觉得不能从应用程序进程和线程角度来进行对比，因为这个基线可能是不公平的。我个人觉得单纯讨论tcp、udp谁更快，可能意义也不大，还是看使用的场景。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1597584601,"ip_address":"","comment_id":240303,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1596856527","product_id":100032701,"comment_content":"老师您好，文中提到udp性能问题，connect一定程度上是可以提高性能的，不过在一般机器上测试发现，一个进程收一个进程发的状态下，貌似tcp每秒能收发的包要比tcp多？另外，如果个客户端发送，tcp可以一个线程处理一个连接请求，不断收包，而udp似乎不可以？即便在端口重用的情况下，tcp可以通过多进程接收数据，而udp同端口接收数据是否被限制住了，即和一个进程一个端口的收包能力差不多，因为同用一个udp缓冲区。<br><br>以上，是对udp和tcp性能的疑问，从上面看以及实际测试，tcp的性能似乎好于udp（每秒收包能力），但是理论上来说，udp.发送简单，不需要ack应答之类，不是应该会更快？不知道老师有什么见解？感谢。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503400,"discussion_content":"不知道你的性能测试是如何进行的，所以不好对测试结果进行分析。不过，我觉得不能从应用程序进程和线程角度来进行对比，因为这个基线可能是不公平的。我个人觉得单纯讨论tcp、udp谁更快，可能意义也不大，还是看使用的场景。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597584601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227408,"user_name":"云淡风轻","can_delete":false,"product_type":"c1","uid":1121817,"ip_address":"","ucode":"D6903A0FCEBC58","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/19/a235f31d.jpg","comment_is_top":false,"comment_ctime":1592374658,"is_pvip":false,"replies":[{"id":"84280","content":"有两个客户端程序哦，确定是运行的第二个么？","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1592744269,"ip_address":"","comment_id":227408,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1592374658","product_id":100032701,"comment_content":"老师您好，按照你文章中的代码我运行了一下，client 发送 “goodbay&quot; 后直接阻塞到了recvfrom，没有像未启动服务器下的直接报错，文章中不是说connect 后就可以收到操作系统内核返回的错误信息吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498625,"discussion_content":"有两个客户端程序哦，确定是运行的第二个么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592744269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2776006,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er5SNsSoiaZw4Qzd2ctH4vtibHQordcLrYsX43oFZFloRTId0op617mcGlrvGx33U8ic2LTgdicoEFPvQ/132","nickname":"Frankey","note":"","ucode":"2F09BC2500C9E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566501,"discussion_content":"mac运行是正常的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650707296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222132,"user_name":"n3bul2","can_delete":false,"product_type":"c1","uid":1137426,"ip_address":"","ucode":"11EDFAB2EA2B5E","user_header":"https://static001.geekbang.org/account/avatar/00/11/5b/12/b9ec95e2.jpg","comment_is_top":false,"comment_ctime":1590682909,"is_pvip":false,"replies":[{"id":"82174","content":"就是多次调用connect函数。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1590930831,"ip_address":"","comment_id":222132,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590682909","product_id":100032701,"comment_content":"老师，我想问一下第一个问题，多次绑定connect是怎么弄的呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496678,"discussion_content":"就是多次调用connect函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590930831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187983,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1584287584,"is_pvip":false,"replies":[{"id":"73541","content":"第14章的CMake有点问题，我已经更新，你可以重新编译下。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1584864738,"ip_address":"","comment_id":187983,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1584287584","product_id":100032701,"comment_content":"老师，在我的电脑上，测试例子udpconnectclient2.c（里面使用的是send） 通不过，报没有那个文件，使用udpconnectclient.c(里面调用的是sendto)可以通过，什么情况，","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487309,"discussion_content":"第14章的CMake有点问题，我已经更新，你可以重新编译下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584864738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2776006,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er5SNsSoiaZw4Qzd2ctH4vtibHQordcLrYsX43oFZFloRTId0op617mcGlrvGx33U8ic2LTgdicoEFPvQ/132","nickname":"Frankey","note":"","ucode":"2F09BC2500C9E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566502,"discussion_content":"现在没问题了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650707321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1803259,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","nickname":"linker","note":"","ucode":"6C5799F2FC2C82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211556,"discussion_content":"好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584864852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183186,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1582968545,"is_pvip":false,"replies":[{"id":"71025","content":"python应该是封装了一层底层的套接字，不起作用也很正常，还是直接走C语言尝试吧。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1583051681,"ip_address":"","comment_id":183186,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582968545","product_id":100032701,"comment_content":"老师，在python里UPD加connetion没有作用呢","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485587,"discussion_content":"python应该是封装了一层底层的套接字，不起作用也很正常，还是直接走C语言尝试吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583051681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150585,"user_name":"凤梨酥","can_delete":false,"product_type":"c1","uid":1372744,"ip_address":"","ucode":"1049FF29532AA0","user_header":"https://static001.geekbang.org/account/avatar/00/14/f2/48/d5b30171.jpg","comment_is_top":false,"comment_ctime":1573563060,"is_pvip":false,"replies":[{"id":"58552","content":"如果有重试，当然会有时效性。问题是大多数处理recvfrom的UDP程序不会考虑重试，因为是UDP，所以就会直接失败了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1573991357,"ip_address":"","comment_id":150585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573563060","product_id":100032701,"comment_content":"这个recvfrom得知icmp获取异常有时效性吗？ 如果之前连接失败，下一秒服务端又打开了呢","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474208,"discussion_content":"如果有重试，当然会有时效性。问题是大多数处理recvfrom的UDP程序不会考虑重试，因为是UDP，所以就会直接失败了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573991357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150223,"user_name":"神秘的火柴人","can_delete":false,"product_type":"c1","uid":1574688,"ip_address":"","ucode":"9DD04338833E0D","user_header":"https://static001.geekbang.org/account/avatar/00/18/07/20/8b1291ad.jpg","comment_is_top":false,"comment_ctime":1573480811,"is_pvip":false,"replies":[{"id":"58550","content":"是recv函数返回的，connection refused不只是connect函数会返回的。不信你可以运行一下试试。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1573991171,"ip_address":"","comment_id":150223,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573480811","product_id":100032701,"comment_content":"在 实现一个 connect 的客户端程序 章节中，“客户端 2 从操作系统内核得到了 ICMP 的错误，该错误在 recv 函数中返回，显示了“Connection refused”的错误信息“，这里的错误是在connect函数中返回吧","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474098,"discussion_content":"是recv函数返回的，connection refused不只是connect函数会返回的。不信你可以运行一下试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573991171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135509,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1569201083,"is_pvip":false,"replies":[{"id":"52324","content":"B上的网卡eth0和eth1分别对应了不同的IP吧，两块网卡，A发送报文的时候指定不同的目标地址就可以了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569464105,"ip_address":"","comment_id":135509,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569201083","product_id":100032701,"comment_content":"老师我们遇到一个问题，A--》B发送UDP报文，发现在B上用tcpdump可以抓到udp报文信息，但是，用nc -ul 启动端口的却收不到报文，后面检查了下发现B上对A网段的路由走的是另外一个网卡eth1，而A发送到B的UDP包走的是eth0网卡，我把B上对A网段的路由改成也用eth0网卡，就正常了，请问老师是什么原因那？谢谢","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468219,"discussion_content":"B上的网卡eth0和eth1分别对应了不同的IP吧，两块网卡，A发送报文的时候指定不同的目标地址就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569464105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132806,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1568244196,"is_pvip":false,"replies":[{"id":"51630","content":"在我给的代码lib文件夹下。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568887752,"ip_address":"","comment_id":132806,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568244196","product_id":100032701,"comment_content":"老师 include &quot;lib&#47;common.h&quot; 这个头文件在哪里","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467128,"discussion_content":"在我给的代码lib文件夹下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568887752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131000,"user_name":"沉淀的梦想","can_delete":false,"product_type":"c1","uid":1177315,"ip_address":"","ucode":"BCB7C26F9D214B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","comment_is_top":false,"comment_ctime":1567595123,"is_pvip":false,"replies":[{"id":"50830","content":"那是你没有开启服务器端程序吧，先开启服务器端，在开启客户端。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568195605,"ip_address":"","comment_id":131000,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1567595123","product_id":100032701,"comment_content":"在我电脑上，第一个案例的现象是阻塞在了connect函数上","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466237,"discussion_content":"那是你没有开启服务器端程序吧，先开启服务器端，在开启客户端。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568195605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1798312,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLamEuaeZHo2myxr5wa0LnU2V7CskWMZXGyaH1bZogEiaXMJnj26DJgrxXzBqX4iaGVanyMpdeMbomA/132","nickname":"gavin","note":"","ucode":"EE0C09BFF9DE6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":146176,"discussion_content":"为什么不开服务端会阻塞啊，connect不只是建立一个映射么，跟服务端有什么关系？麻烦老师帮忙解答下，谢谢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579600955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2036333,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/6ZM5RHVBe8pVGoibpPHVM5TZTbqS4u4ckiaHoItk1LIhTfCEYbH7LYiaWJDvTiaga34MQQ3xicIZ0vsAkoSKRvY8F3A/132","nickname":"Geek_b4bb35","note":"","ucode":"257EE15A137445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1798312,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLamEuaeZHo2myxr5wa0LnU2V7CskWMZXGyaH1bZogEiaXMJnj26DJgrxXzBqX4iaGVanyMpdeMbomA/132","nickname":"gavin","note":"","ucode":"EE0C09BFF9DE6F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370537,"discussion_content":"试了下，并不会在connect阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619446139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":146176,"ip_address":""},"score":370537,"extra":""}]}]},{"had_liked":false,"id":130690,"user_name":"W.jyao","can_delete":false,"product_type":"c1","uid":1422582,"ip_address":"","ucode":"C57B3A78B6A795","user_header":"https://static001.geekbang.org/account/avatar/00/15/b4/f6/735673f7.jpg","comment_is_top":false,"comment_ctime":1567511599,"is_pvip":false,"replies":[{"id":"50837","content":"我说的是多次调用connect哦，一次肯定是可以的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568196035,"ip_address":"","comment_id":130690,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567511599","product_id":100032701,"comment_content":"第一个留言的问题，程序不调用connect的话是因为recvfrom带有目标地址吧，","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466069,"discussion_content":"我说的是多次调用connect哦，一次肯定是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568196035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130125,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1567387901,"is_pvip":false,"replies":[{"id":"50839","content":"正常情况下应该是本机的网卡地址。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568196210,"ip_address":"","comment_id":130125,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567387901","product_id":100032701,"comment_content":"老师 文中提到的icmp报文 发源地 是本机的网卡吗？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465820,"discussion_content":"正常情况下应该是本机的网卡地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568196210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}