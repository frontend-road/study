{"id":85953,"title":"19 | 编写好的错误处理","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":233838,"user_name":"Aprelude","can_delete":false,"product_type":"c3","uid":1658796,"ip_address":"","ucode":"840D3F7A35AEEF","user_header":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","comment_is_top":false,"comment_ctime":1594469891,"is_pvip":false,"replies":[{"id":86856,"content":"1. error是个接口\n2. 关于结构体比较：\n如果结构体的所有成员变量都是可比较的，那么结构体就可比较\n\n如果结构体中存在不可比较的成员变量，那么结构体就不能比较","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1594948913,"ip_address":"","comment_id":233838,"utype":1}],"discussion_count":6,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"error不是一个结构体吗，结构体可以直接用== 比较吗","like_count":7,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501185,"discussion_content":"1. error是个接口\n2. 关于结构体比较：\n如果结构体的所有成员变量都是可比较的，那么结构体就可比较\n\n如果结构体中存在不可比较的成员变量，那么结构体就不能比较","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594948913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1658796,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","nickname":"Aprelude","note":"","ucode":"840D3F7A35AEEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293635,"discussion_content":"func TestNewEqual(t *testing.T) {\n\t// Different allocations should not be equal.\n\tif errors.New(&#34;abc&#34;) == errors.New(&#34;abc&#34;) {\n\t\tt.Errorf(`New(&#34;abc&#34;) == New(&#34;abc&#34;)`)\n\t}\n\tif errors.New(&#34;abc&#34;) == errors.New(&#34;xyz&#34;) {\n\t\tt.Errorf(`New(&#34;abc&#34;) == New(&#34;xyz&#34;)`)\n\t}\n\n\t// Same allocation should be equal to itself (not crash).\n\terr := errors.New(&#34;jkl&#34;)\n\tif err != err {\n\t\tt.Errorf(`err != err`)\n\t}\n} 在golang源码的例子中 发现了这个 上面两个new的结果比较是false  但是内容是一样的 这个是为什么啊 err比较难道要new一个全局的吗 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595602756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1242498,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/82/75f71508.jpg","nickname":"曾立涵","note":"","ucode":"C8E9019A44FB9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1658796,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","nickname":"Aprelude","note":"","ucode":"840D3F7A35AEEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295933,"discussion_content":"errors.New 返回来的是&amp;errorString{text} ，而errosString是一个结构体， type errorString struct{s string}，我理解的话每次返回来都是不同的指针，比较的是指针，所以不相同","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1596383583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293635,"ip_address":"","group_id":0},"score":295933,"extra":""},{"author":{"id":1242498,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/82/75f71508.jpg","nickname":"曾立涵","note":"","ucode":"C8E9019A44FB9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1658796,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4f/ac/80439ba7.jpg","nickname":"Aprelude","note":"","ucode":"840D3F7A35AEEF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296017,"discussion_content":"假如要比较内容的话，应该是用变量a，b分别去指向errors.New(“abc”),然后用a.Error() == b.Error()来比较字符串，或者直接用errors.New(“abc”).Error() == errors.New(“abc”).Error()   \nError()返回的的是string，New返回 error类型的指向errorString实例的指针（接口是指针，可以指向实现接口的实例）\n这里贴一下 errors源码\n\nfunc New(text string) error {\n\treturn &amp;errorString{text}\n}\n\n// errorString is a trivial implementation of error.\ntype errorString struct {\n\ts string\n}\n\nfunc (e *errorString) Error() string {\n\treturn e.s\n}","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1596428132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293635,"ip_address":"","group_id":0},"score":296017,"extra":""},{"author":{"id":1216486,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8f/e6/932e8a90.jpg","nickname":"Jake","note":"","ucode":"DA16FA2ADA9EAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1242498,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/82/75f71508.jpg","nickname":"曾立涵","note":"","ucode":"C8E9019A44FB9B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342680,"discussion_content":"你说的很有道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610775418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":296017,"ip_address":"","group_id":0},"score":342680,"extra":""}]}]},{"had_liked":false,"id":78645,"user_name":"chengzise","can_delete":false,"product_type":"c3","uid":1006070,"ip_address":"","ucode":"1C27D216359894","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/f6/ed66d1c1.jpg","comment_is_top":false,"comment_ctime":1553209325,"is_pvip":false,"replies":[{"id":28626,"content":"实际上，你可以自己根据你的要求实现一个错误类型。我的生成环境有我们特殊的错误类型，会传递业务的特定上下文","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1553225147,"ip_address":"","comment_id":78645,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师好，Go的erros信息里面没有带其他额外的上下文信息，因此，很多错误处理库尝试增强内置errors包：比如，添加错误发生的文件名，行位置；错误逐级向上传递时，支持嵌套错误，每级处理都添加新的辅助信息之类。老师的推荐是推荐Go原生就够用了。请教：上面我提到的这些情况下，老师在生产环境是如何处理的？","like_count":4,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444175,"discussion_content":"实际上，你可以自己根据你的要求实现一个错误类型。我的生成环境有我们特殊的错误类型，会传递业务的特定上下文","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553225147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1542987,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/4b/15ab499a.jpg","nickname":"风轻扬","note":"","ucode":"DB972F2DF059C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404923,"discussion_content":"这是个好问题。就是没有打印类似java中的错误堆栈。这个我猜，是有特定的错误类型，能带上堆栈，老师课上讲的错误类型，应该是入门级的错误类型。讲太深，容易听不懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634462070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121468,"user_name":"binger233","can_delete":false,"product_type":"c3","uid":1367429,"ip_address":"","ucode":"E3800577541C79","user_header":"https://static001.geekbang.org/account/avatar/00/14/dd/85/fcbb5850.jpg","comment_is_top":false,"comment_ctime":1565143393,"is_pvip":false,"replies":[{"id":44720,"content":"一般放置在最后","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1565190465,"ip_address":"","comment_id":121468,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"问下老师，一般做法：\n存在多个返回值时，错误信息是不是一般也放置在最后一位；还是随便顺序都行。","like_count":3,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461804,"discussion_content":"一般放置在最后","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565190465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618828,"avatar":"","nickname":"面向工资编程","note":"","ucode":"07F797F021BDD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272447,"discussion_content":"nodejs 出错信息也是在最后，随便的位置感觉写程序的人负担太大了。本来生活就够不容易了，还把错误导出放，只能是该行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590309757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243497,"user_name":"欧阳洲","can_delete":false,"product_type":"c3","uid":1986708,"ip_address":"","ucode":"94606A6315F2BA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKT9Tk01eiaQ9aAhszthzGm6lwruRWPXia1YYFozctrdRvKg0Usp8NbwuKBApwD0D6Fty2tib3RdtFJg/132","comment_is_top":false,"comment_ctime":1598155072,"is_pvip":false,"replies":[{"id":90110,"content":"你是执行的这里的代码吗？https:&#47;&#47;github.com&#47;superman-geek-time&#47;go_learning&#47;blob&#47;master&#47;code&#47;ch14&#47;error&#47;err_test.go\n\n应该是没有问题的。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1598784734,"ip_address":"","comment_id":243497,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，\nif err == LessThanTwoError 这个判断的写法有错误哦，实测是false。","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504305,"discussion_content":"你是执行的这里的代码吗？https://github.com/superman-geek-time/go_learning/blob/master/code/ch14/error/err_test.go\n\n应该是没有问题的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598784734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133950,"user_name":"一个学员","can_delete":false,"product_type":"c3","uid":1566227,"ip_address":"","ucode":"427049337F6565","user_header":"https://static001.geekbang.org/account/avatar/00/17/e6/13/d93997aa.jpg","comment_is_top":false,"comment_ctime":1568704351,"is_pvip":false,"replies":[{"id":51906,"content":"[]int是切片类型，切片实际也是一个结构struct","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1569139460,"ip_address":"","comment_id":133950,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师好：GetFibonacci函数定义的返回值是 []int和error。为什么在判断的地方可以返回nil和error。是不是应该是返回一个int类型和error？","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467562,"discussion_content":"[]int是切片类型，切片实际也是一个结构struct","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569139460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190905,"user_name":"xj_zh","can_delete":false,"product_type":"c3","uid":1214755,"ip_address":"","ucode":"190609F7AE67CC","user_header":"https://static001.geekbang.org/account/avatar/00/12/89/23/73569bd7.jpg","comment_is_top":false,"comment_ctime":1584708113,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"蔡老师讲的渊源，受益了。","like_count":1},{"had_liked":false,"id":286739,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1617542107,"is_pvip":true,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"我之前感觉 C# 和 Java 的 try-catch 挺好用的，逻辑上也很通顺。\n\n对于 Go 的这种错误处理方式，虽然不太习惯，但是因为大佬背书，所以我觉的老师讲的 Go 错误处理的机制也都是可以接受的，多写几次就适应了。\n\n“及早失败，避免嵌套”这个原则应该是没有问题的，以前在调试的时候，不知道要倒推多少层嵌套，容易迷路。\n\n希望后面能看到比较典型业务代码中的错误处理机制。","like_count":0,"discussions":[{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600319,"discussion_content":"try catch 这种其实会造成非常大的隐患，我举个例子，如果你用 java JDBC 操作 PostgreSQL 数据库，每个 try 时都会生成一个子事务，如果你循环处理非常多的 try 会产生大量的子事务，PostgreSQL 子事务超过 64 就会落盘，导致大量的 IO 出现，拉跨整个系统的性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674204958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}