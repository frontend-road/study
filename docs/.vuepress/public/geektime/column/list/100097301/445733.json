{"id":445733,"title":"02 | 文字块：怎么编写所见即所得的字符串？","content":"<p>你好，我是范学雷。今天，我们聊一聊Java的文字块（text blocks）。</p><p>文字块这个特性，首先在JDK 13中以预览版的形式发布。在JDK 14中，改进的文字块再次以预览版的形式发布。最后，文字块在JDK 15正式发布。</p><p>文字块的概念很简单，它是一个由多行文字构成的字符串。既然是字符串，为什么还需要文字块这个新概念呢？文字块和字符串又有什么区别呢？我们还是通过案例和代码，来弄清楚这些问题吧。</p><h2>阅读案例</h2><p>我们在编写代码的时候，总是或多或少地要和字符串打交道。有些字符串很简单，比如我们都知道的\"Hello，World！\"字符串。有些字符串很复杂，里面可能有换行、对齐、转义字符、占位符、连接符等。</p><p>比如下面的例子中，我们要构造一个简单的表示\"Hello，World！\"的HTML字符串，就需要处理好文本对齐、换行字符、连接符以及双引号的转义字符。这就使得这段代码既不美观、也不简约，一点都不自然。</p><pre><code class=\"language-java\">String stringBlock =\n        \"&lt;!DOCTYPE html&gt;\\n\" +\n        \"&lt;html&gt;\\n\" +\n        \"    &lt;body&gt;\\n\" +\n        \"        &lt;h1&gt;\\\"Hello World!\\\"&lt;/h1&gt;\\n\" +\n        \"    &lt;/body&gt;\\n\" +\n        \"&lt;/html&gt;\\n\";\n</code></pre><!-- [[[read_end]]] --><p>这样的字符串不好写，不好看，也不好读。更糟糕的是，我们有时候需要从别的地方拷贝一段 HTML 或者 SQL 语句，然后再转换成类似于上面的字符串。是不是出力多，收效少，需要特别的耐心？遗憾的是，这样的工作还特别多，HTML, SQL, XML, JSON, HTTP, 随便就可以列一大堆。</p><p>不论对于写代码的人，还是阅读代码的人来说，处理这样的字符串都不是一件赏心悦目的事情。软件的质量是一个反馈系统，糟糕的事情总是可以让事情变得更糟糕。摊开来说，这样的字符串编写起来不省心，不仅消耗了更多时间，代码质量也没有保障。与此同时，复杂的语句也容易分散评审者的精力，让疏漏和错误不易被发现。</p><p>费时费力、质量还难以控制，这让复杂字符串的处理变成了一个很没有效率的事情。没有效率，也就意味着投入产出比低，所以我们就更不愿意投入精力和时间来做好这件事情。对于用户来说，糟糕的结果也会耗费他们更多的精力和时间。用户有多少，这个糟糕的成本就放大多少倍。</p><p>如果你经常需要阅读调试日志，你可能会有更深刻的体会。难以阅读的调试日志，可能会让你产生短暂的抗拒心理，甚至暂时地放弃调试，直到你的耐心又回来了。遗憾的是，提高调试日志的可读性，似乎永远排不上开发者的日程表。</p><p>这不是一个让人愉快的事情。不过，我们似乎也不曾有过更好的办法。</p><h2>所见即所得的文字块</h2><p>文字块是人们在试图扭转这种糟糕局面的过程中一个最重要的尝试。文字块是一个由多行文字构成的字符串。既然是字符串，文字块能有什么影响呢？其实，文字块是使用一个新的形式，而不是传统的形式，来表达字符串的。通过这个新的形式，文字块尝试消除换行、连接符、转义字符的影响，使得文字对齐和必要的占位符更加清晰，从而简化多行文字字符串的表达。</p><p>下面的这段代码，就是我使用文字块对阅读案例所做的改进。</p><pre><code class=\"language-java\">String textBlock = \"\"\"\n        &lt;!DOCTYPE html&gt;\n        &lt;html&gt;\n            &lt;body&gt;\n                &lt;h1&gt;\"Hello World!\"&lt;/h1&gt;\n            &lt;/body&gt;\n        &lt;/html&gt;\n        \"\"\";\nSystem.out.println(\n        \"Here is the text block:\\n\" + textBlock);\n</code></pre><p>对比一下阅读案例里的代码，我们可以看到，下面的这些特殊的字符从这个表达式里消失了：</p><ol>\n<li>换行字符（\\n）没有出现在文字块里；</li>\n<li>连接字符（+）没有出现在文字块里；</li>\n<li>双引号没有使用转义字符（\\）。</li>\n</ol><p>另外，出现在文字块开始和结束位置的，是三个双引号序列；而不是我们在字符串声明里看到的单个双引号。 <strong>文字块由零个或多个内容字符组成，从开始分隔符开始，到结束分隔符结束。开始分隔符是由三个双引号字符 (“”“) ，后面跟着的零个或多个空格，以及行结束符组成的序列。结束分隔符是一个由三个双引号字符 (”“”)组成的序列。</strong></p><p><strong>需要注意的是，开始分隔符必须单独成行；三个双引号字符后面的空格和换行符都属于开始分隔符。</strong>所以，一个文字块至少有两行代码。即使是一个空字符，结束分隔符也不能和开始分隔符放在同一行代码里。</p><pre><code class=\"language-java\">jshell&gt; String s = \"\"\"\"\"\";\n|&nbsp; Error:\n|&nbsp; illegal text block open delimiter sequence, missing line terminator\n|&nbsp; String s = \"\"\"\"\"\";\n\njshell&gt; String s = \"\"\"\n&nbsp;&nbsp; ...&gt; \"\"\";\ns ==&gt; \"\"\n</code></pre><p>同样需要注意的是，<strong>结束分隔符只有一个由三个双引号字符<strong><strong>组成的</strong></strong>序列。结束分隔符之前的字符，包括换行符，都属于文字块的有效内容。</strong></p><pre><code class=\"language-java\">jshell&gt; String s = \"\"\"\n&nbsp;&nbsp; ...&gt; OneLine\"\"\";\ns ==&gt; \"OneLine\"\n\n\n\njshell&gt; String s = \"\"\"\n&nbsp;&nbsp; ...&gt; TwoLines\n&nbsp;&nbsp; ...&gt; \"\"\";\ns ==&gt; \"TwoLines\\n\"\n</code></pre><p>由于文字块不再需要特殊字符、开始分隔符和结束分隔符这些格式安排，我们几乎就可以直接拷贝、粘贴看到的文字，而不再需要特殊的处理了。同样地，你在代码里看到的文字块是什么样子，它实际要表达的文字就是什么样子的。这也就是说，“所见即所得”。</p><p>很多系统里常见的“所见即所得”的境界，终于也能够在Java语言里呈现出来了。</p><h2>文字块的编译过程</h2><p>那么，我们用文字块改进过的阅读案例，打印结果是什么样子的呢？从下面的打印结果，我们可以看到，为了代码整洁而使用的缩进空格并没有出现在打印的结果里。</p><pre><code class=\"language-java\">Here is the text block:\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&nbsp; &nbsp; &lt;body&gt;\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;h1&gt;\"Hello World!\"&lt;/h1&gt;\n&nbsp; &nbsp; &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>也就是说，文字块的内容并没有计入缩进空格。文字块是怎么处理缩进空格的呢？这是我们学习文字块必须要了解的一个问题。</p><p>像传统的字符串一样，文字块是字符串的一种常量表达式。<strong>不同于传统字符串的是，在编译期，文字块要顺序通过如下三个不同的编译步骤：</strong></p><ol>\n<li><strong>为了降低不同平台间换行符的表达差异，编译器把文字内容里的换行符统一转换成 LF（\\u000A）；</strong></li>\n<li><strong>为了能够处理Java源代码里的缩进空格，要删除所有文字内容行和结束分隔符共享的前导空格，以及所有文字内容行的尾部空格；</strong></li>\n<li><strong>最后处理转义字符，这样开发人员编写的转义序列就不会在第一步和第二步被修改或删除。</strong></li>\n</ol><p>首先，我们从整体上来理解一下文字块的编译期处理这种方式。阅读一下下面的代码，你能不能预测一下下面这两个问题的结果？使用传统方式声明的字符串和使用文字块声明的字符串的内容是一样的吗？这两个字符串变量指向的是同一个对象，还是不同的对象？</p><pre><code class=\"language-java\">package co.ivi.jus.text.modern;\n\npublic class TextBlocks {\n    public static void main(String[] args) {\n        String stringBlock =\n                \"&lt;!DOCTYPE html&gt;\\n\" +\n                \"&lt;html&gt;\\n\" +\n                \"    &lt;body&gt;\\n\" +\n                \"        &lt;h1&gt;\\\"Hello World!\\\"&lt;/h1&gt;\\n\" +\n                \"    &lt;/body&gt;\\n\" +\n                \"&lt;/html&gt;\\n\";\n\n        String textBlock = \"\"\"\n                &lt;!DOCTYPE html&gt;\n                &lt;html&gt;\n                    &lt;body&gt;\n                        &lt;h1&gt;\"Hello World!\"&lt;/h1&gt;\n                    &lt;/body&gt;\n                &lt;/html&gt;\n                \"\"\";\n\n        System.out.println(\n                \"Does the text block equal to the regular string? \" +\n                stringBlock.equals(textBlock));\n        System.out.println(\n                \"Does the text block refer to the regular string? \" +\n                (stringBlock == textBlock));\n    }\n}\n</code></pre><p>第一个问题的答案应该没有意外，第二个问题的答案可能就会有意外出现了。使用传统方式声明的字符串和使用文字块声明的字符串，它们的内容是一样的，而且指向的是同一个对象。</p><p>该怎么理解这样的结果呢？其实，这就说明了，文字块是在编译期处理的，并且在编译期被转换成了常量字符串，然后就被当作常规的字符串了。所以，如果文字块代表的内容，和传统字符串代表的内容一样，那么这两个常量字符串变量就指向同一内存地址，代表同一个对象。</p><p>虽然表达形式不同，但是文字块就是字符串。既然是字符串，就能够使用字符串支持的各种API和操作方法。比如，传统的字符串表现形式和文字块的表现形式可以混合使用：</p><pre><code class=\"language-java\">System.out.println(\"Here is the text block:\\n\" +\n        \"\"\"\n        &lt;!DOCTYPE html&gt;\n        &lt;html&gt;\n            &lt;body&gt;\n                &lt;h1&gt;\"Hello World!\"&lt;/h1&gt;\n            &lt;/body&gt;\n        &lt;/html&gt;\n        \"\"\");\n</code></pre><p>再比如，文字块可以调用字符串String的API:</p><pre><code class=\"language-java\">int stringSize = \"\"\"\n        &lt;!DOCTYPE html&gt;\n        &lt;html&gt;\n            &lt;body&gt;\n                &lt;h1&gt;\"Hello World!\"&lt;/h1&gt;\n            &lt;/body&gt;\n        &lt;/html&gt;\n        \"\"\".length();\n</code></pre><p>或者，使用嵌入式的表达式：</p><pre><code class=\"language-java\">String greetingHtml = \"\"\"\n        &lt;!DOCTYPE html&gt;\n        &lt;html&gt;\n            &lt;body&gt;\n                &lt;h1&gt;%s&lt;/h1&gt;\n            &lt;/body&gt;\n        &lt;/html&gt;\n        \"\"\".formatted(\"Hello World!\");\n</code></pre><h2>巧妙的结束分隔符</h2><p>好的，我们现在看看文字块编译的细分步骤。第一个和第二个步骤都很好理解。不过，第二个步骤里“删除共享的前导空格”，是一个我们可以巧妙使用的规则。通过合理地安排共享的前导空格，我们可以实现文字的编排和缩进。</p><p>为了方便理解，在下面的例子里，我们使用小数点号‘.’表示编译期要删除的前导空格，使用叹号‘!’表示编译期要删除的尾部空格。</p><p>第一个例子，我们把结束分隔符单独放在一行，和文本内容左边对齐。这时候，共享的前导空格就是文本内容本身共享的前导空格；结束分隔符仅仅是用来结束文字块的。这个例子里，我还加入了文字内容行的尾部空格，它们在编译期会被删除掉。</p><pre><code class=\"language-java\">// There are 8 leading white spaces in common\nString textBlock = \"\"\"\n........&lt;!DOCTYPE html&gt;\n........&lt;html&gt;\n........    &lt;body&gt;\n........        &lt;h1&gt;\"Hello World!\"&lt;/h1&gt;!!!!\n........    &lt;/body&gt;\n........&lt;/html&gt;\n........\"\"\";\n</code></pre><p>第二个例子，我们也把结束分隔符单独放在一行，但是放在比文本内容更靠左的位置。这时候，结束分隔符除了用来结束文字块之外，还参与界定共享的前导空格。</p><pre><code class=\"language-java\">// There are 4 leading white spaces in common\nString textBlock = \"\"\"\n....    &lt;!DOCTYPE html&gt;\n....    &lt;html&gt;\n....        &lt;body&gt;\n....            &lt;h1&gt;\"Hello World!\"&lt;/h1&gt;!!!!\n....        &lt;/body&gt;\n....    &lt;/html&gt;\n....\"\"\";\n</code></pre><p>第三个例子，我们也把结束分隔符单独放在了一行，但是放在文本内容左对齐位置的右侧。这时候，结束分隔符的左侧，除了共享的前导空格之外，还有多余的空格。这些多余的空格，就成了文字内容行的尾部空格，它们在编译期会被删除掉。</p><pre><code class=\"language-java\">// There are 8 leading white spaces in common\nString textBlock = \"\"\"\n........&lt;!DOCTYPE html&gt;\n........&lt;html&gt;\n........    &lt;body&gt;\n........        &lt;h1&gt;\"Hello World!\"&lt;/h1&gt;!!!!\n........    &lt;/body&gt;\n........&lt;/html&gt;\n........!!!!\"\"\";\n</code></pre><h2>尾部空格还能回来吗？</h2><p>你可能会问， 一般情况下，尾部空格确实没有什么实质性的作用。但是万一需要尾部空格，它们还能回来吗？</p><p>其实是可以的。为了能够支持尾部附带的空格，文字块还引入了另外一个新的转义字符，‘\\s’，空格转义符。空格转义符表示一个空格。我们前面说过的文字块的编译器处理顺序，空格转义符不会在文字块的编译期被删除，因此空格转义符之前的空格也能被保留。所以，每一行使用一个空格转义符也就足够了。</p><p>下面的代码，就是一个重新带回尾部空格的例子，这个字符串的前两行就包含有尾部空格。</p><pre><code class=\"language-plain\">// There are 8 leading white spaces in common\nString textBlock = \"\"\"\n........&lt;!DOCTYPE html&gt;    \\s!!!!\n........&lt;html&gt;             \\s\n........    &lt;body&gt;!!!!!!!!!!\n........        &lt;h1&gt;\"Hello World!\"&lt;/h1&gt;\n........    &lt;/body&gt;\n........&lt;/html&gt;\n........\"\"\";\n</code></pre><h2>该怎么表达长段落？</h2><p>但是所见即所得的文字块也有一个小烦恼。我们知道，编码规范一般都限定每一行的字节数 ，通常是80个或者120个字节。可是一个文本的长段落通常要超出这个限制。文字块里的换行符通常需要保留，编码规范通常要遵守，那该如何表达长段落或者长行呢？</p><p>针对这种情况，文字块引入了一个新的转义字符，‘&lt;行终止符&gt;’，换行转义符。换行转义符的意思是，如果转移符号出现在一个行的结束位置，这一行的换行符就会被取缔。下面的例子就使用了换行转义符，它就把分散在两行的\"Hello World!\"连接在一行里了。</p><pre><code class=\"language-java\">String textBlock = \"\"\"\n        &lt;!DOCTYPE html&gt;\n        &lt;html&gt;\n            &lt;body&gt;\n                &lt;h1&gt;\"Hello \\\n        World!\"&lt;/h1&gt;\n            &lt;/body&gt;\n        &lt;/html&gt;\n        \"\"\";\n</code></pre><p>需要注意的是，上面的例子里，换行转义符之前，还有一个空格。这个空格会被删除吗？连接后的字符，是没有空格间隔的“HelloWorld!”，还是中间有空格的“Hello World!”？还记得我们前面说过的编译器处理顺序吗？空格处理先于转义字符处理。因此，换行转义符之前的空格不算是文字块的尾部空格，因此会得到保留。</p><h2>总结</h2><p>好，到这里，今天的课程就要结束了，我来做个小结。从前面的讨论中，我们了解了文字块的基本概念，它的表达形式以及编译的过程。</p><p>文字块是 Java 语言中一种新的文字。 字符串能够出现的任何地方，也都可以用文字块表示。但是，文字块提供了更好的表现力和更少的复杂性。 文字块“所见即所得”的表现形式，使得使用复杂字符串的代码更加清晰，便于编辑，也便于阅读。这是一个能够降低代码错误，提高生产效率的改进。</p><p>如果要丰富你的代码评审清单，学习完这一节内容后，你可以加入下面这一条：</p><blockquote>\n<p>复杂的字符串，使用文字块表述是不是更清晰？</p>\n</blockquote><p>另外，通过今天的讨论，我拎出了几个技术要点，这些都可能在你的面试中出现。通过这一次学习，你应该能够：</p><ul>\n<li>知道文字块的基本概念，以及文字块和字符串的关系；\n<ul>\n<li>面试问题：你知道Java的文字块吗？它和字符串有什么区别？</li>\n</ul>\n</li>\n<li>了解文字块要解决的问题，并且能够准确使用文字块；\n<ul>\n<li>面试问题：应当什么时候使用文字块？</li>\n</ul>\n</li>\n<li>了解文字块的表达形式，编译过程以及文字块特有的转义字符。\n<ul>\n<li>面试问题：怎么用文字块实现文本缩进？</li>\n</ul>\n</li>\n</ul><p>如果能够有意识地使用文字块，你应该能够大幅度提高复杂字符串的可读性。从而更快地编写代码，也让潜在的错误更少。毫无疑问，在面试的时候，有意识地在代码里使用文字块，除了节省时间之外，还能够让你的代码更容易阅读和接受，给面试官带来新鲜的感受。</p><h2>思考题</h2><p>在前面的讨论里，我们说过文字块是一个“所见即所得”的字符串表现形式。我们可以直接拷贝、粘贴文字段落到代码里，而不需要大量的调整。可是，在有些场景里，要想完全地实现“所见即所得”，仅仅使用文字块，可能还是要费一点周折的。</p><p>比如说吧，我们看到的诗，有的时候是页面居中对齐的。比如下面的这首小诗，采用的格式就是居中对齐。</p><p><img src=\"https://static001.geekbang.org/resource/image/d6/29/d6f2ddf7210a0e1e6f921496d6620c29.jpg?wh=1315x402\" alt=\"\"></p><p>居中对齐这种形式，在HTML或者文档的世界里，很容易处理，设置一下格式就可以了。如果是用Java语言，该怎么处理好这首小诗的居中对齐问题？这就是今天我们的思考题。</p><p>稍微提示一个，你可以使用添加缩进空格的方式对齐，也可以不局限于简单的、单纯的Java语言，比如添加进来HTML的文本。</p><p>欢迎你在留言区留言、讨论，分享你的阅读体验以及你对这个思考题的想法。</p><p>注：本文使用的完整的代码可以从<a href=\"https://github.com/XueleiFan/java-up/tree/main/src/main/java/co/ivi/jus/text\">GitHub</a>下载，你可以通过修改<a href=\"https://github.com/XueleiFan/java-up/tree/main/src/main/java/co/ivi/jus/instance\">GitHub</a>上<a href=\"https://github.com/XueleiFan/java-up/blob/main/src/main/java/co/ivi/jus/text/review/xuelei/Island.java\">review template</a>代码，完成这次的思考题。如果你想要分享你的修改或者想听听评审的意见，请提交一个 GitHub的拉取请求（Pull Request），并把拉取请求的地址贴到留言里。这一小节的拉取请求代码，请放在<a href=\"https://github.com/XueleiFan/java-up/blob/main/src/main/java/co/ivi/jus/text/review\">实例匹配专用的代码评审目录</a>下，建一个以你的名字命名的子目录，代码放到你专有的子目录里。比如，我的代码，就放在text/review/xuelei的目录下面。</p>","comments":[{"had_liked":false,"id":321895,"user_name":"人要活泼些才好","can_delete":false,"product_type":"c1","uid":1813676,"ip_address":"","ucode":"B9378E874E5CFC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ac/ac/54016e7a.jpg","comment_is_top":true,"comment_ctime":1637105285,"is_pvip":false,"replies":[{"id":"116912","content":"建议置顶！<br><br>可惜我不知道有没有置顶的功能。  如果点赞可以帮助置顶的话，小伙伴们都来点赞吧。总结的太好了！","user_name":"作者回复","user_name_real":"作者","uid":"1111315","ctime":1637112257,"ip_address":"","comment_id":321895,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.2233721673409004e+18","product_id":100097301,"comment_content":"本篇主要讲了几点：<br>1. 认识 textarea 是什么？基本语法是什么？<br>2. textarea 和 原始的长字符串处理方式产生的对象指向同一内存地址。<br>3.文字块可以调用字符串 String 的 API 。<br>4.可以使用嵌入式的表达式 。<br>5. textarea 是如何处理共享的前导空格的。<br>6. 需要保留 textarea 怎么办？添加一个 \\s 即可保留 此行 &#39;\\s&#39; 及之前的空格。<br>7.如何在遵守编码规范的前提下处理长段落：在需要断行的地方 添加 \\ 即可。 <br>","like_count":31,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530609,"discussion_content":"建议置顶！\n\n可惜我不知道有没有置顶的功能。  如果点赞可以帮助置顶的话，小伙伴们都来点赞吧。总结的太好了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637112257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169313,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkeOAC8k7aPMfQZ4ickiavpfR9mTQs1wGhGtIicotzAoszE5qkLfFTabkDU2E39ovSgoibJ1IiaLXtGicg/132","nickname":"bigben","note":"","ucode":"DBD15A6C8E2590","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530655,"discussion_content":"是text blocks，不是textarea ，textarea 属于GUI的组件","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1637118952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322050,"user_name":"森林","can_delete":false,"product_type":"c1","uid":1121185,"ip_address":"","ucode":"087EBD3FA738A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/a1/efcf7306.jpg","comment_is_top":false,"comment_ctime":1637148689,"is_pvip":false,"replies":[{"id":"116963","content":"这个特性，我还不知道是不是有计划。 现在有替换的方案，虽然没有字符串差值简单，所以可能不是很紧急。 如果觉得这个好，可以去OpenJDK提议，推动它的早日支持。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637173990,"ip_address":"","comment_id":322050,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10227083281","product_id":100097301,"comment_content":"老师，java啥时候支持字符串插值。","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530936,"discussion_content":"这个特性，我还不知道是不是有计划。 现在有替换的方案，虽然没有字符串差值简单，所以可能不是很紧急。 如果觉得这个好，可以去OpenJDK提议，推动它的早日支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637173990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322048,"user_name":"getouo","can_delete":false,"product_type":"c1","uid":2847288,"ip_address":"","ucode":"1B4CA48C1432B4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKyOGT44viavqB48XoUhZibK46v6NvOkhKea0rdky3OicOum8OalMOgTfUibIbKL0ukJicaVkJWiaYA2bg/132","comment_is_top":false,"comment_ctime":1637148532,"is_pvip":false,"replies":[{"id":"116962","content":"出现了两次，看来这个需求很旺盛啊。你想去OpenJDK提交一个新特性的申请吗？","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637173650,"ip_address":"","comment_id":322048,"utype":1}],"discussion_count":5,"race_medal":0,"score":"10227083124","product_id":100097301,"comment_content":"什么时候能支持字符串插值啊","like_count":2,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530935,"discussion_content":"出现了两次，看来这个需求很旺盛啊。你想去OpenJDK提交一个新特性的申请吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637173650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":3,"child_discussions":[{"author":{"id":2847288,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKyOGT44viavqB48XoUhZibK46v6NvOkhKea0rdky3OicOum8OalMOgTfUibIbKL0ukJicaVkJWiaYA2bg/132","nickname":"getouo","note":"","ucode":"1B4CA48C1432B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":531543,"discussion_content":"嗯，听起来不错，但是我不知道应该怎么去提交","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637332351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":530935,"ip_address":""},"score":531543,"extra":"{\"user_type\":1}"},{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":2847288,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKyOGT44viavqB48XoUhZibK46v6NvOkhKea0rdky3OicOum8OalMOgTfUibIbKL0ukJicaVkJWiaYA2bg/132","nickname":"getouo","note":"","ucode":"1B4CA48C1432B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531938,"discussion_content":"给jdk-dev@openjdk.java.net写信，询问能不能支持这个功能。 写信的时候，附上一个例子，并且说明它的好处，比如简化代码等。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637474469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531543,"ip_address":""},"score":531938,"extra":"{\"user_type\":2}"},{"author":{"id":2847288,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKyOGT44viavqB48XoUhZibK46v6NvOkhKea0rdky3OicOum8OalMOgTfUibIbKL0ukJicaVkJWiaYA2bg/132","nickname":"getouo","note":"","ucode":"1B4CA48C1432B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":532353,"discussion_content":"好的，感谢指引，我去试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637585268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531938,"ip_address":""},"score":532353,"extra":"{\"user_type\":1}"}]},{"author":{"id":1114772,"avatar":"https://static001.geekbang.org/account/avatar/00/11/02/94/2bf394f3.jpg","nickname":"Numbpad1","note":"","ucode":"2F075AC7E3847D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531410,"discussion_content":"用过javascript，Template strings确实比较爽，可惜java还不能支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637305827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322105,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","comment_is_top":false,"comment_ctime":1637170529,"is_pvip":false,"replies":[{"id":"116978","content":"1). 通常状况下，行末的空格都是不必要，毕竟看不到。这样设计，省去了肉眼判断行末是否有空格的麻烦。 毕竟，有空格肉眼不好看，而转义字符就清晰很多了。 多数情况下，行末的转义字符应该用不上。<br><br>2），3），5）的答案，建议你试一试。<br><br>4）使用转义字符，\\&amp;quot;&amp;quot;&amp;quot;。6）继续使用转义字符。这和普通的字符串的转义字符的用法是一致的。<br><br>PS：有可能是词语选择的偏好导致的。“不换行转义符”和“换行转义符”似乎都有可能导致理解偏差。 小伙伴们，也帮我想一想有没有更好的表达方式。<br>","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637212919,"ip_address":"","comment_id":322105,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5932137825","product_id":100097301,"comment_content":"老师，看完这节，我有点疑问，想请教一下：<br><br>1：编译过程去除共享的前导空格，这个可以理解是为了处理代码缩进，但是为什么文本行后面的空格也要设计为去除呢？这样设计的初衷是什么呀？（这样设计，为了保留后面的空格还要使用\\s转义，感觉反而更麻烦了！）<br>2：这里说的是去除空格，万一是tab缩进的呢？前后的tab也能去除吗？<br>3：后置结束符是“&quot;&quot;&quot;”，如果我文本块内容最后一个字符也是“&quot;”而且是不换行的，那么最终就是4个“&quot;”结尾，这样也是没问题的对吗？<br>4：如果我文本块内容中间就有“&quot;&quot;&quot;”，这跟后置结束符一样，编译器是否能识别它并非真正的结束符？如果不能，有没有什么办法转义呢？<br>5：对于长文本不换行转义符“\\”，文中只说了前面有空格的情况，如果它后面也还有空格或者tab，是否能达到不换行的效果呢？<br>6：对于文中说到的转义符“\\s”和“\\”，如果我不想让它们作为转义符（当普通文本输出），需要怎么再转义？<br><br><br>PS：文中说到“\\”不换行转义符时，是有笔误吗？刚看一头雾水，看例子才知道应该是“\\”，原文针对这种情况，<br><br>文字块引入了一个新的转义字符，‘&lt; 行终止符 &gt;’，换行转义符。<br>","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531051,"discussion_content":"1). 通常状况下，行末的空格都是不必要，毕竟看不到。这样设计，省去了肉眼判断行末是否有空格的麻烦。 毕竟，有空格肉眼不好看，而转义字符就清晰很多了。 多数情况下，行末的转义字符应该用不上。\n\n2），3），5）的答案，建议你试一试。\n\n4）使用转义字符，\\&amp;quot;&amp;quot;&amp;quot;。6）继续使用转义字符。这和普通的字符串的转义字符的用法是一致的。\n\nPS：有可能是词语选择的偏好导致的。“不换行转义符”和“换行转义符”似乎都有可能导致理解偏差。 小伙伴们，也帮我想一想有没有更好的表达方式。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637212919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1169313,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkeOAC8k7aPMfQZ4ickiavpfR9mTQs1wGhGtIicotzAoszE5qkLfFTabkDU2E39ovSgoibJ1IiaLXtGicg/132","nickname":"bigben","note":"","ucode":"DBD15A6C8E2590","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":531098,"discussion_content":"“不换行转义符”在python中叫续行符吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637228721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531051,"ip_address":""},"score":531098,"extra":"{\"user_type\":1}"}]},{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531486,"discussion_content":"说下 2) 3) 5) 的测试结果：\n2) 可以；\n3) 有问题，可以转义以保留：\\&#34;&#34;&#34;&#34;\n5) 不能，会报“非法转义符”编译错误。\n\nPS：其实除了老师文章中所说的两个转义符，其他转义符也是有的，比如 tab 转义符 \\t。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637323976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114772,"avatar":"https://static001.geekbang.org/account/avatar/00/11/02/94/2bf394f3.jpg","nickname":"Numbpad1","note":"","ucode":"2F075AC7E3847D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531406,"discussion_content":"第三个好问题，不过会出现编译错误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637305217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321977,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1637124773,"is_pvip":false,"replies":[{"id":"116940","content":"嗯，场景不同，使用方式差别很大。 从模版中读取是一个值得小伙伴们学习的好办法。<br><br>我自己的代码很多要记日志，这个特性算是解放了我可怜的眼睛。","user_name":"作者回复","user_name_real":"作者","uid":"1111315","ctime":1637134564,"ip_address":"","comment_id":321977,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5932092069","product_id":100097301,"comment_content":"还是Go中的``用起来方便啊。&quot;&quot;&quot; &quot;&quot;&quot;确实也方便了很多，但是平时用的真不多，复杂的文字一般都会从模板中读取&#47;展示，例如：MyBatis的XML文件、Yaml文件、FreeMarker、Thymeleaf等","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530723,"discussion_content":"嗯，场景不同，使用方式差别很大。 从模版中读取是一个值得小伙伴们学习的好办法。\n\n我自己的代码很多要记日志，这个特性算是解放了我可怜的眼睛。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637134564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530933,"discussion_content":"go中的“`”本身如果也出现在文本块（示例：`...`...`）中也会有问题 的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637170704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":2,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530967,"discussion_content":"go的文本块可以轻松画个娃娃","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637197424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":530933,"ip_address":""},"score":530967,"extra":"{\"user_type\":1}"},{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531480,"discussion_content":"是可以，但是“`”的处理也比较麻烦，不像 java 这里还可以转义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637322530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":530967,"ip_address":""},"score":531480,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":321893,"user_name":"人要活泼些才好","can_delete":false,"product_type":"c1","uid":1813676,"ip_address":"","ucode":"B9378E874E5CFC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ac/ac/54016e7a.jpg","comment_is_top":false,"comment_ctime":1637104558,"is_pvip":false,"replies":[{"id":"116913","content":"很遗憾极客时间的评论不能准确地显示源代码。时间允许的话，你可以试一试专栏的GitHub的PR请求。每一讲的末尾，都有一个注解，提醒大家怎么获得源代码，怎么提交PR请求。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637112385,"ip_address":"","comment_id":321893,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5932071854","product_id":100097301,"comment_content":"直接添加缩进空格的实现<br>String poem = &quot;&quot;&quot;<br>\t   No man is an island,<br>\t\t entire of itself,<br>every man is a piece of the continent,<br>\t\ta part of the main.<br>\t\t&quot;&quot;&quot;;","like_count":1,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530611,"discussion_content":"很遗憾极客时间的评论不能准确地显示源代码。时间允许的话，你可以试一试专栏的GitHub的PR请求。每一讲的末尾，都有一个注解，提醒大家怎么获得源代码，怎么提交PR请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637112385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1813676,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ac/ac/54016e7a.jpg","nickname":"人要活泼些才好","note":"","ucode":"B9378E874E5CFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":530626,"discussion_content":"好的，我去试试看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637113199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":530611,"ip_address":""},"score":530626,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":358980,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"浙江","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1665113887,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665113887","product_id":100097301,"comment_content":"学习了，文字块。","like_count":0},{"had_liked":false,"id":350694,"user_name":"码小呆","can_delete":false,"product_type":"c1","uid":2055809,"ip_address":"","ucode":"44532D6ABF9340","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","comment_is_top":false,"comment_ctime":1657099996,"is_pvip":true,"replies":[{"id":"127611","content":"实际使用已经很多了。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1657175756,"ip_address":"","comment_id":350694,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657099996","product_id":100097301,"comment_content":"文字块特性，说实话，在实际工作中，很难遇到使用情况，最多就在学习的过程中已经测试的过程中会使用到，毕竟现在 谁在工作中用servlet 去 做转发或者 重定向这种操作呢","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579100,"discussion_content":"实际使用已经很多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657175756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337535,"user_name":"penbox","can_delete":false,"product_type":"c1","uid":1052938,"ip_address":"","ucode":"59C4F47ACCB7F2","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/0a/59639f1f.jpg","comment_is_top":false,"comment_ctime":1646882359,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646882359","product_id":100097301,"comment_content":"作为一名刚开始学习java的.net程序员，真是有点没想到：<br>c#语法中的@原义标识符能实现的所见即所得的功能，java中要到jdk15才有。<br>@&quot;c:\\Program Files\\Microsoft Visual Studio 9.0&quot;<br>而c# 6.0就开始提供的$字符串内插功能，在java中居然还没有对应的实现。<br>$&quot;Hello, {name}! Today is {date.DayOfWeek}“","like_count":0},{"had_liked":false,"id":323535,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1637978397,"is_pvip":false,"replies":[{"id":"117431","content":"嗯，学到的就赶快用上。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1638053441,"ip_address":"","comment_id":323535,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1637978397","product_id":100097301,"comment_content":"<br>本节理解了文字块的基本概念及其使用方式，<br>会有意识地在代码里使用文字块。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533981,"discussion_content":"嗯，学到的就赶快用上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638053441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323044,"user_name":"李阳","can_delete":false,"product_type":"c1","uid":1092806,"ip_address":"","ucode":"22492F371F4C84","user_header":"https://static001.geekbang.org/account/avatar/00/10/ac/c6/30820fa2.jpg","comment_is_top":false,"comment_ctime":1637715592,"is_pvip":false,"replies":[{"id":"117256","content":"是的。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637724192,"ip_address":"","comment_id":323044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637715592","product_id":100097301,"comment_content":"写scala经常用。是很方便","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532878,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637724192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322509,"user_name":"Jagger Chen","can_delete":false,"product_type":"c1","uid":1993603,"ip_address":"","ucode":"7C6ACBCF32ED12","user_header":"https://static001.geekbang.org/account/avatar/00/1e/6b/83/5fb44cd0.jpg","comment_is_top":false,"comment_ctime":1637435389,"is_pvip":false,"replies":[{"id":"117098","content":"收到，有一个小的注释，已经merge了。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637471727,"ip_address":"","comment_id":322509,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637435389","product_id":100097301,"comment_content":"https:&#47;&#47;github.com&#47;XueleiFan&#47;java-up&#47;pull&#47;6","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531924,"discussion_content":"收到，有一个小的注释，已经merge了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637471727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322226,"user_name":"ABC","can_delete":false,"product_type":"c1","uid":1054958,"ip_address":"","ucode":"7501AD9C0C4A70","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","comment_is_top":false,"comment_ctime":1637246063,"is_pvip":false,"replies":[{"id":"117013","content":"是的，字符串插值看起来很有吸引力。已经有好几个人在留言去提到了。建议写信给jdk-dev@openjdk.java.net，提议这个新特性。有人提要求，优先级才能上得去。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637286104,"ip_address":"","comment_id":322226,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1637246063","product_id":100097301,"comment_content":"感觉Python3里面的文本格式化和js里面的模板字符串更方便一点,用Java的文字块插值的时候要记住顺序,稍微繁琐了一些.希望后续版本文字块能参照Python3或者js改进一下.<br>","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531328,"discussion_content":"是的，字符串插值看起来很有吸引力。已经有好几个人在留言去提到了。建议写信给jdk-dev@openjdk.java.net，提议这个新特性。有人提要求，优先级才能上得去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637286104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054958,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/ee/a1ed60d1.jpg","nickname":"ABC","note":"","ucode":"7501AD9C0C4A70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531548,"discussion_content":"好的，谢谢老师，我试着写一封邮件给OpenJDK试一下.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637332996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322222,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1637242876,"is_pvip":false,"replies":[{"id":"117011","content":"哈哈","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637285790,"ip_address":"","comment_id":322222,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637242876","product_id":100097301,"comment_content":"没有对比就没有伤害。相对于以前，相对于其他语言。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531323,"discussion_content":"哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637285790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322180,"user_name":"will","can_delete":false,"product_type":"c1","uid":1169733,"ip_address":"","ucode":"FC3D07AD9A0B63","user_header":"https://static001.geekbang.org/account/avatar/00/11/d9/45/2dd6f487.jpg","comment_is_top":false,"comment_ctime":1637224638,"is_pvip":true,"replies":[{"id":"117001","content":"问题字面看不出来你会怎么使用formatted。 你使用JShell试一试？","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637256425,"ip_address":"","comment_id":322180,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1637224638","product_id":100097301,"comment_content":"老师formatted是会创建一个新的对象吗？","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531265,"discussion_content":"问题字面看不出来你会怎么使用formatted。 你使用JShell试一试？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637256425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169733,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d9/45/2dd6f487.jpg","nickname":"will","note":"","ucode":"FC3D07AD9A0B63","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531412,"discussion_content":"就是看代码发现用字符串拼接的文字块和文字块.formatted的==结果是false,而equals是true。所以想问formatted是不是创建了新的对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637306832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":1,"child_discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1169733,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d9/45/2dd6f487.jpg","nickname":"will","note":"","ucode":"FC3D07AD9A0B63","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":531934,"discussion_content":"一般来说，编译期确定不了的字符串，都会创建新的对象。我想，你所值的formatted，是属于这一个范畴的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637474153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531412,"ip_address":""},"score":531934,"extra":"{\"user_type\":2}"}]}]},{"had_liked":false,"id":322106,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1637175759,"is_pvip":true,"replies":[{"id":"116979","content":"“文字块这个特性，首先在 JDK 13 中以预览版的形式发布。在 JDK 14 中，改进的文字块再次以预览版的形式发布。最后，文字块在 JDK 15 正式发布。” 所以，JDK 11不支持文字块。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637212972,"ip_address":"","comment_id":322106,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637175759","product_id":100097301,"comment_content":"java11有这个特性嘛","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531052,"discussion_content":"“文字块这个特性，首先在 JDK 13 中以预览版的形式发布。在 JDK 14 中，改进的文字块再次以预览版的形式发布。最后，文字块在 JDK 15 正式发布。” 所以，JDK 11不支持文字块。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637212972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322084,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1637160680,"is_pvip":true,"replies":[{"id":"116976","content":"毕竟Scala也要跑在JVM上，所以关键字（&amp;quot;&amp;quot;&amp;quot;）的选择空间不多；而且，语言的设计都是尽量靠近，降低开发者切换的学习曲线。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637212009,"ip_address":"","comment_id":322084,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1637160680","product_id":100097301,"comment_content":"这个新特性和Scala的文字块好像啊","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531046,"discussion_content":"毕竟Scala也要跑在JVM上，所以关键字（&amp;quot;&amp;quot;&amp;quot;）的选择空间不多；而且，语言的设计都是尽量靠近，降低开发者切换的学习曲线。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637212009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531490,"discussion_content":"跟 kotlin 也差不多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637324437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321956,"user_name":"bigben","can_delete":false,"product_type":"c1","uid":1169313,"ip_address":"","ucode":"DBD15A6C8E2590","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkeOAC8k7aPMfQZ4ickiavpfR9mTQs1wGhGtIicotzAoszE5qkLfFTabkDU2E39ovSgoibJ1IiaLXtGicg/132","comment_is_top":false,"comment_ctime":1637117642,"is_pvip":false,"replies":[{"id":"116923","content":"我想是有问题的， 你有没有试试看？ tab的问题，需要编码规范来约束。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637121564,"ip_address":"","comment_id":321956,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1637117642","product_id":100097301,"comment_content":"有人缩进用tab怎么办？每个人的ide的缩进空格数量设置的也不一样，是不是也会导致问题？","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530670,"discussion_content":"我想是有问题的， 你有没有试试看？ tab的问题，需要编码规范来约束。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637121564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169313,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkeOAC8k7aPMfQZ4ickiavpfR9mTQs1wGhGtIicotzAoszE5qkLfFTabkDU2E39ovSgoibJ1IiaLXtGicg/132","nickname":"bigben","note":"","ucode":"DBD15A6C8E2590","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530695,"discussion_content":"试了下，table缩进也是可以的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637127453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603004,"avatar":"https://static001.geekbang.org/account/avatar/00/18/75/bc/e24e181e.jpg","nickname":"Calvin","note":"","ucode":"0EEF5B207623B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531491,"discussion_content":"tab 制表符缩进也是可以的，另外，如果想表示制表符，也可以使用 \\t 代替（不会被去掉）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637324509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1034451,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c8/d3/3020ae46.jpg","nickname":"fatme","note":"","ucode":"75A805D2BB2AD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531102,"discussion_content":"不同人 ide 的 tab 缩进空格数量不一样，这个影响不大吧。只要各行前导需要忽略的 tab 数量是一样的就好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637230459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321911,"user_name":"3.141516","can_delete":false,"product_type":"c1","uid":1013309,"ip_address":"","ucode":"34AF71B02692F3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/3d/8120438b.jpg","comment_is_top":false,"comment_ctime":1637109658,"is_pvip":true,"replies":[{"id":"116924","content":"嗯， 也许编程语言的终局，就是殊途同归。","user_name":"作者回复","user_name_real":"编辑","uid":"1111315","ctime":1637121681,"ip_address":"","comment_id":321911,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637109658","product_id":100097301,"comment_content":"JShell 算是借鉴脚本语言提供一个 playground，Swift 在诞生初期就具备了这个特性。<br><br>本节的文字块印象中也是 JavaScript 有的特性。","like_count":0,"discussions":[{"author":{"id":1111315,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f5/13/78741b7b.jpg","nickname":"范学雷","note":"","ucode":"D7CBE4A33427BD","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530671,"discussion_content":"嗯， 也许编程语言的终局，就是殊途同归。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637121681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}