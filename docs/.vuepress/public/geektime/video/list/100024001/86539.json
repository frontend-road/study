{"id":86539,"title":"26 | 多路选择和超时","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":187164,"user_name":"Kvicii.Y","can_delete":false,"product_type":"c3","uid":1442588,"ip_address":"","ucode":"446BFA633569EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/1c/c9fe6738.jpg","comment_is_top":false,"comment_ctime":1584029546,"is_pvip":false,"replies":[{"id":75405,"content":"如果结果在超时后才返回，就没有携程从channel中获取数据，这是如果不采用buffer channel，数据产生者携程就会一直阻塞，导致携程泄漏。\n我的例子中给的等待是500ms，而超时时100ms，你可以把等待改成50ms，就不会超时了。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1585831820,"ip_address":"","comment_id":187164,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"例子中的是buffer channel，为什么不能是channel呢？50毫秒内返回了也就不会阻塞了，应该正常输出呀，但是为什么一直输出超时呢？是不是channel会一直阻塞，即使取到了数据也是阻塞？","like_count":4,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487010,"discussion_content":"如果结果在超时后才返回，就没有携程从channel中获取数据，这是如果不采用buffer channel，数据产生者携程就会一直阻塞，导致携程泄漏。\n我的例子中给的等待是500ms，而超时时100ms，你可以把等待改成50ms，就不会超时了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585831820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183227,"user_name":"Van","can_delete":false,"product_type":"c3","uid":1491655,"ip_address":"","ucode":"35E576FD0AD79B","user_header":"https://static001.geekbang.org/account/avatar/00/16/c2/c7/670f8b6c.jpg","comment_is_top":false,"comment_ctime":1582976736,"is_pvip":false,"replies":[{"id":71765,"content":"如果有多个 case 都可以运行，Select 会随机公平地选出一个执行。其他不会执行。 \n否则：\n如果有 default 子句，则执行该语句。\n如果没有 default 子句，select 将阻塞，直到某个通信可以运行；Go 不会重新对 channel 或值进行求值。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1583675141,"ip_address":"","comment_id":183227,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"```\nfunc AsyncServices() chan int {\n\tch := make(chan int, 1)\n\tgo func() {\n\t\ttime.Sleep(time.Millisecond * 200) &#47;&#47; 不管有没有这个走的都是default\n\t\tch &lt;- 1\n\t}()\n\treturn ch\n}\n\nfunc TestSelect(t *testing.T) {\n\tselect {\n\tcase ch := &lt;-AsyncServices():\n\t\tt.Log(ch)\n\tcase &lt;-time.After(time.Millisecond * 100):\n\t\tt.Error(&quot;Time out.&quot;)\n\tdefault:\n\t\tt.Log(&quot;Receive nothing.&quot;)\n\t}\n}\n```\nselect 使用了default 之后为什么超不超时走的都是default 分支呢","like_count":3,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485606,"discussion_content":"如果有多个 case 都可以运行，Select 会随机公平地选出一个执行。其他不会执行。 \n否则：\n如果有 default 子句，则执行该语句。\n如果没有 default 子句，select 将阻塞，直到某个通信可以运行；Go 不会重新对 channel 或值进行求值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583675141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":600865,"discussion_content":"这句话感觉说得不那么准确。看下面这个例子：\n\nfunc g1(ch chan int) {\n\tch &lt;- 42\n}\n\nfunc g2(ch chan int) {\n\tch &lt;- 43\n}\n\nfunc main() {\n\n\tch1 := make(chan int)\n\tch2 := make(chan int)\n\n\tgo g1(ch1)\n\tgo g2(ch2)\n\n\tselect {\n\tcase v1 := &lt;-ch1:\n\t\tfmt.Println(&#34;Got: &#34;, v1)\n\tcase v2 := &lt;-ch2:\n\t\tfmt.Println(&#34;Got: &#34;, v2)\n\tdefault:\n\t\tfmt.Println(&#34;The default case!&#34;)\n\t}\n}\n\n由于 goroutine 的执行顺序不确定，所以这里也不确定到底是该输出 42 43 还是 The default case!，可以用下面的脚本执行 5000 次看看(大家把下面的脚本保存成 for.sh，然后 chmod a+x for.sh,接着 ./for.sh)\n```shell\nrm -f for.txt\ntouch for.txt\nfor i in `seq 5000`\ndo\n  go build -race main.go\n  ./main &gt;&gt; for.txt\n  rm -f main\ndone\n```\n\n然后到 for.txt中看输出，大部分都是 default，很小部分是 42 和 43。所以他还是会优先的选择 case 去执行，只是我们不要写这种 select，一旦写了，我们大抵要为这种不确定性付出代价\n\n那么为什么这位兄台的代码一定是 default呢？\n\n```\nfunc AsyncServices() chan int {\n\tch := make(chan int, 1)\n\tgo func() {\n\t\ttime.Sleep(time.Millisecond * 200) // 不管有没有这个走的都是default\n\t\tch &lt;- 1\n\t}()\n\treturn ch\n}\n\nfunc TestSelect(t *testing.T) {\n\tselect {\n\tcase ch := &lt;-AsyncServices():\n\t\tt.Log(ch)\n\tcase &lt;-time.After(time.Millisecond * 100):\n\t\tt.Error(&#34;Time out.&#34;)\n\tdefault:\n\t\tt.Log(&#34;Receive nothing.&#34;)\n\t}\n}\n```\n这个 select 能够确定每个 case 到底怎么执行，大抵上，AsyncServices() 这个函数调用是耗时的，且一定会比 default 慢，如果我们把上述代码改成下面这样子：\n\nfunc main() {\n\tch := make(chan int, 1)\n\tgo func() {\n\t\tch &lt;- 1\n\t}()\n\tselect {\n\tcase ch := &lt;-ch:\n\t\tfmt.Println(ch)\n\tcase &lt;-time.After(time.Millisecond * 100):\n\t\tfmt.Println(&#34;Time out.&#34;)\n\tdefault:\n\t\tfmt.Println(&#34;Receive nothing.&#34;)\n\t}\n}\n\n如果我们写了一个一定走某个路径的 select ，那么它断然无任何意义。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1674913926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":485606,"ip_address":"山西","group_id":0},"score":600865,"extra":""}]},{"author":{"id":1675966,"avatar":"https://static001.geekbang.org/account/avatar/00/19/92/be/8de4e1fe.jpg","nickname":"kaizen","note":"","ucode":"313EEA97AEC7C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230733,"discussion_content":"如果多个case可以运行时, 随机公平选择时,不会选择default吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586767535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1675966,"avatar":"https://static001.geekbang.org/account/avatar/00/19/92/be/8de4e1fe.jpg","nickname":"kaizen","note":"","ucode":"313EEA97AEC7C3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600909,"discussion_content":"所以现在的问题就是怎么判断有多个可以运行的 case，见我上面的例子 上面的一个例子来自 https://golangdocs.com/select-statement-in-golang 里面得到了错误的结论，所以这一节课还是蛮有争议的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674957799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":230733,"ip_address":"山西","group_id":0},"score":600909,"extra":""}]},{"author":{"id":1491655,"avatar":"https://static001.geekbang.org/account/avatar/00/16/c2/c7/670f8b6c.jpg","nickname":"Van","note":"","ucode":"35E576FD0AD79B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200587,"discussion_content":"感谢老师指点！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583684383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245858,"user_name":"张仁杰","can_delete":false,"product_type":"c3","uid":1128426,"ip_address":"","ucode":"656F88A636A2D4","user_header":"https://static001.geekbang.org/account/avatar/00/11/37/ea/9c1a4aeb.jpg","comment_is_top":false,"comment_ctime":1599095924,"is_pvip":false,"replies":[{"id":90444,"content":"这个并不是从上到下顺序执行的，当所有的case处于阻塞状态，就会走default分支","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1599182658,"ip_address":"","comment_id":245858,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"Select多渠道选择，既然case都处于阻塞等待状态，为什么会走default呢？","like_count":2,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504995,"discussion_content":"这个并不是从上到下顺序执行的，当所有的case处于阻塞状态，就会走default分支","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599182658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133036,"user_name":"hughieyu","can_delete":false,"product_type":"c3","uid":1206690,"ip_address":"","ucode":"FC1A64B2BAB784","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/a2/c30ac459.jpg","comment_is_top":false,"comment_ctime":1568332748,"is_pvip":false,"replies":[{"id":51090,"content":"1. 发送完毕可以通过close来通知接收者。\n2. channel不关闭不会有问题，它不是核心句柄（如：文件，socket）\n3. channel的确用来解偶生产者和消费者。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1568513314,"ip_address":"","comment_id":133036,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师您好，多个生产者的情况下，如何通知生产者消息已经发完了呢？是不是就只能通过计次的形式来处理了？另外channel如果不关闭会有什么问题吗？channel实际上也是共享内存的模型吧，没有buffer的channel应该就是同步队列模型，有buffer的channel应该就是阻塞队列模型，channel解决的问题就是怕让生产者和消费者之间松耦合，这个实际上也对应于java里面的并发队列呗，只是作为语言特征出现，用起来会方便不少，这样理解对吗？","like_count":1,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467229,"discussion_content":"1. 发送完毕可以通过close来通知接收者。\n2. channel不关闭不会有问题，它不是核心句柄（如：文件，socket）\n3. channel的确用来解偶生产者和消费者。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568513314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205981,"user_name":"kaizen","can_delete":false,"product_type":"c3","uid":1675966,"ip_address":"","ucode":"313EEA97AEC7C3","user_header":"https://static001.geekbang.org/account/avatar/00/19/92/be/8de4e1fe.jpg","comment_is_top":false,"comment_ctime":1586767484,"is_pvip":false,"replies":[{"id":78406,"content":"有的。例如，并行执行多个查询，只要其中一个返回即可。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1587777520,"ip_address":"","comment_id":205981,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"加上default，也就意味着，如果在运行selcet时，case中的channel都没有message时，则会直接走default那条路。\n但是如果case中都完成了，随机选择一条路走（老师，感觉没有什么场景需要这种随机性吧，感觉很不幂等耶）","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491635,"discussion_content":"有的。例如，并行执行多个查询，只要其中一个返回即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587777520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218937,"avatar":"https://static001.geekbang.org/account/avatar/00/12/99/79/74d4f24f.jpg","nickname":"anker","note":"","ucode":"6EDF1FB9D45238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310224,"discussion_content":"肯定有的，例如需要检测哪个服务器响应最快，最终决定应该访问哪台服务器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601695046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":171038,"user_name":"海盗船长","can_delete":false,"product_type":"c3","uid":1363634,"ip_address":"","ucode":"ECB28BA21A4113","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/b2/1f914527.jpg","comment_is_top":false,"comment_ctime":1578829777,"is_pvip":false,"replies":[{"id":67817,"content":"常见的用途还包括，多个并行任务的返回等待。可以参见后面的典型并发任务的章节 ","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1580267475,"ip_address":"","comment_id":171038,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"请教老师 多路选择除了设置超时时间 还可以用在哪里典型的场景？","like_count":0,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481213,"discussion_content":"常见的用途还包括，多个并行任务的返回等待。可以参见后面的典型并发任务的章节 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580267475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353851,"user_name":"right-chen","can_delete":false,"product_type":"c3","uid":1435172,"ip_address":"北京","ucode":"E0E940E80E7A2D","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/24/30806a88.jpg","comment_is_top":false,"comment_ctime":1659862254,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"留言区也能学习不少\n\nfunc TestSelect(t *testing.T) {\n\n\t&#47;&#47;设置字符串类型的通道，容量10\n\tchan_msg := make(chan string)\n\tchan_msg2 := make(chan string)\n\n\tgo func() {\n\t\ttime.Sleep(1 * time.Second)\n\t\tchan_msg &lt;- &quot;finish&quot;\n\t}()\n\tgo func() {\n\t\ttime.Sleep(1 * time.Second)\n\t\tchan_msg2 &lt;- &quot;finish&quot;\n\t}()\n\t&#47;**\n\tselect 语句中，case不依赖代码书写顺序。\n\t如果case中有1个有消息时，其他case&#47;default则不会执行。\n\t如果case中有多个消息时，随机任选1个进行执行，其他不会执行\n\t如果所有case都没有消息时，同时含有defalut分之，则会走default分之\n\t如果所有case都没有消息时，没有default分之，则会阻塞等待case中返回消息继续执行。\n\t*&#47;\n\ttime.Sleep(1 * time.Second)\n\tselect {\n\tcase &lt;-chan_msg:\n\t\tt.Log(&quot;work1&quot;)\n\tcase &lt;-chan_msg2:\n\t\tt.Log(&quot;work2&quot;)\n\tcase &lt;-time.After(time.Millisecond * 5000):\n\t\tt.Error(&quot;time out&quot;)\n\tdefault:\n\t\tt.Log(&quot;default&quot;)\n\t}\n}","like_count":0},{"had_liked":false,"id":287527,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1618014251,"is_pvip":true,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"select 多路选择和其他语言中的 switch 比较像（ Go 语言中似乎没有 Switch ？），但是从执行顺序（随机选择）和 default 的用法来说有很大的差别。\n\nselect 很像 switch，每个 Case 后面跟的是阻塞事件，从 channel 上等待消息。\n\n执行到 select 的时候，只要任何 case 后面的任何一个等待渠道，阻塞事件处于非阻塞状态，就是 channel 中有一个消息，那么就会执行后续的代码\n\n但是不能依赖 case 的顺序。\n\n一定要看留言中的回复。\n\n在 @Van 的留言里面，select 会不等到超时就执行 default 子句，very tricky。\n\n如果有多个 case 都可以运行，Select 会随机公平地选出一个执行。其他不会执行。\n否则，如果有 default 子句，则执行该语句；如果没有 default 子句，select 将阻塞，直到某个通信可以运行。","like_count":0,"discussions":[{"author":{"id":2890901,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/1c/95/3d8920c9.jpg","nickname":"abcdabcd999","note":"","ucode":"E1D9902737F544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600854,"discussion_content":"very tricky 在哪里呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674909326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}