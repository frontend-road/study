{"id":315468,"title":"08 | 容器内存：我的容器为什么被杀了？","content":"<p>你好，我是程远。</p><p>从这一讲内容开始，我们进入容器内存这个模块。在使用容器的时候，一定会伴随着Memory Cgroup。而Memory Cgroup给Linux原本就复杂的内存管理带来了新的变化，下面我们就一起来学习这一块内容。</p><p>今天这一讲，我们来解决容器在系统中消失的问题。</p><p>不知道你在使用容器时，有没有过这样的经历？一个容器在系统中运行一段时间后，突然消失了，看看自己程序的log文件，也没发现什么错误，不像是自己程序Crash，但是容器就是消失了。</p><p>那么这是怎么回事呢？接下来我们就一起来“破案”。</p><h2>问题再现</h2><p>容器在系统中被杀掉，其实只有一种情况，那就是容器中的进程使用了太多的内存。具体来说，就是容器里所有进程使用的内存量，超过了容器所在Memory Cgroup里的内存限制。这时Linux系统就会主动杀死容器中的一个进程，往往这会导致整个容器的退出。</p><p>我们可以做个简单的容器，模拟一下这种容器被杀死的场景。做容器的Dockerfile和代码，你可以从<a href=\"https://github.com/chengyli/training/tree/master/memory/oom\">这里</a>获得。</p><p>接下来，我们用下面的这个脚本来启动容器，我们先把这个容器的Cgroup内存上限设置为512MB（536870912 bytes）。</p><pre><code>#!/bin/bash\ndocker stop mem_alloc;docker rm mem_alloc\ndocker run -d --name mem_alloc registry/mem_alloc:v1\n\nsleep 2\nCONTAINER_ID=$(sudo docker ps --format &quot;{{.ID}}\\t{{.Names}}&quot; | grep -i mem_alloc | awk '{print $1}')\necho $CONTAINER_ID\n\nCGROUP_CONTAINER_PATH=$(find /sys/fs/cgroup/memory/ -name &quot;*$CONTAINER_ID*&quot;)\necho $CGROUP_CONTAINER_PATH\n\necho 536870912 &gt; $CGROUP_CONTAINER_PATH/memory.limit_in_bytes\ncat $CGROUP_CONTAINER_PATH/memory.limit_in_bytes\n</code></pre><!-- [[[read_end]]] --><p>好了，容器启动后，里面有一个小程序mem_alloc会不断地申请内存。当它申请的内存超过512MB的时候，你就会发现，我们启动的这个容器消失了。</p><p><img src=\"https://static001.geekbang.org/resource/image/2d/5c/2db8dc6de63ae22c585e64fbf1a0395c.png?wh=1626*480\" alt=\"\"></p><p>这时候，如果我们运行<code>docker inspect</code> 命令查看容器退出的原因，就会看到容器处于\"exited\"状态，并且\"OOMKilled\"是true。</p><p><img src=\"https://static001.geekbang.org/resource/image/da/2a/dafcb895b0c49b9d01b10d0bbac9102a.png?wh=1102*408\" alt=\"\"></p><p>那么问题来了，什么是OOM Killed呢？它和之前我们对容器Memory Cgroup做的设置有什么关系，又是怎么引起容器退出的？想搞清楚这些问题，我们就需要先理清楚基本概念。</p><h3>如何理解OOM Killer？</h3><p>我们先来看一看OOM Killer是什么意思。</p><p>OOM是Out of Memory的缩写，顾名思义就是内存不足的意思，而Killer在这里指需要杀死某个进程。那么OOM Killer就是<strong>在Linux系统里如果内存不足时，就需要杀死一个正在运行的进程来释放一些内存。</strong></p><p>那么讲到这里，你可能会有个问题了，Linux里的程序都是调用malloc()来申请内存，如果内存不足，直接malloc()返回失败就可以，为什么还要去杀死正在运行的进程呢？</p><p>其实，这个和Linux进程的内存申请策略有关，Linux允许进程在申请内存的时候是overcommit的，这是什么意思呢？就是说允许进程申请超过实际物理内存上限的内存。</p><p>为了让你更好地理解，我给你举个例子说明。比如说，节点上的空闲物理内存只有512MB了，但是如果一个进程调用malloc()申请了600MB，那么malloc()的这次申请还是被允许的。</p><p>这是因为malloc()申请的是内存的虚拟地址，系统只是给了程序一个地址范围，由于没有写入数据，所以程序并没有得到真正的物理内存。物理内存只有程序真的往这个地址写入数据的时候，才会分配给程序。</p><p>可以看得出来，这种overcommit的内存申请模式可以带来一个好处，它可以有效提高系统的内存利用率。不过这也带来了一个问题，也许你已经猜到了，就是物理内存真的不够了，又该怎么办呢？</p><p>为了方便你理解，我给你打个比方，这个有点像航空公司在卖飞机票。售卖飞机票的时候往往是超售的。比如说实际上有100个位子，航空公司会卖105张机票，在登机的时候如果实际登机的乘客超过了100个，那么就需要按照一定规则，不允许多出的几位乘客登机了。</p><p>同样的道理，遇到内存不够的这种情况，Linux采取的措施就是杀死某个正在运行的进程。</p><p>那么你一定会问了，在发生OOM的时候，Linux到底是根据什么标准来选择被杀的进程呢？这就要提到一个在Linux内核里有一个 <strong>oom_badness()函数</strong>，就是它定义了选择进程的标准。其实这里的判断标准也很简单，函数中涉及两个条件：</p><p>第一，进程已经使用的物理内存页面数。</p><p>第二，每个进程的OOM校准值oom_score_adj。在/proc文件系统中，每个进程都有一个 /proc/&lt;pid&gt;/oom_score_adj的接口文件。我们可以在这个文件中输入-1000 到1000之间的任意一个数值，调整进程被OOM Kill的几率。</p><pre><code class=\"language-shell\">       adj = (long)p-&gt;signal-&gt;oom_score_adj;\n\n       points = get_mm_rss(p-&gt;mm) + get_mm_counter(p-&gt;mm, MM_SWAPENTS) +mm_pgtables_bytes(p-&gt;mm) / PAGE_SIZE;\n\n       adj *= totalpages / 1000;\n       points += adj;\n</code></pre><p>结合前面说的两个条件，函数oom_badness()里的最终计算方法是这样的：</p><p><strong>用系统总的可用页面数，去乘以OOM校准值oom_score_adj，再加上进程已经使用的物理页面数，计算出来的值越大，那么这个进程被OOM Kill的几率也就越大。</strong></p><h3>如何理解Memory Cgroup？</h3><p>前面我们介绍了OOM Killer，容器发生OOM Kill大多是因为Memory Cgroup的限制所导致的，所以在我们还需要理解Memory Cgroup的运行机制。</p><p>在这个专栏的<a href=\"http://time.geekbang.org/column/article/308108\">第一讲</a>中，我们讲过Cgroups是容器的两大支柱技术之一，在CPU的章节中，我们也讲到了CPU Cgroups。那么按照同样的思路，我们想理解容器Memory，自然要讨论一下Memory Cgroup了。</p><p>Memory Cgroup也是Linux Cgroups子系统之一，它的作用是对一组进程的Memory使用做限制。Memory Cgroup的虚拟文件系统的挂载点一般在\"/sys/fs/cgroup/memory\"这个目录下，这个和CPU Cgroup类似。我们可以在Memory Cgroup的挂载点目录下，创建一个子目录作为控制组。</p><p>每一个控制组下面有不少参数，在这一讲里，这里我们只讲跟OOM最相关的3个参数：<strong>memory.limit_in_bytes，memory.oom_control和memory.usage_in_bytes</strong>。其他参数如果你有兴趣了解，可以参考内核的<a href=\"https://www.kernel.org/doc/Documentation/cgroup-v1/memory.txt\">文档说明</a>。</p><p>首先我们来看第一个参数，叫作memory.limit_in_bytes。请你注意，这个memory.limit_in_bytes是每个控制组里最重要的一个参数了。这是因为一个控制组里所有进程可使用内存的最大值，就是由这个参数的值来直接限制的。</p><p>那么一旦达到了最大值，在这个控制组里的进程会发生什么呢？</p><p>这就涉及到我要给你讲的第二个参数memory.oom_control了。这个memory.oom_control又是干啥的呢？当控制组中的进程内存使用达到上限值时，这个参数能够决定会不会触发OOM Killer。</p><p>如果没有人为设置的话，memory.oom_control的缺省值就会触发OOM Killer。这是一个控制组内的OOM Killer，和整个系统的OOM Killer的功能差不多，差别只是被杀进程的选择范围：控制组内的OOM Killer当然只能杀死控制组内的进程，而不能选节点上的其他进程。</p><p>如果我们要改变缺省值，也就是不希望触发OOM Killer，只要执行 <code>echo 1 &gt; memory.oom_control</code>  就行了，这时候即使控制组里所有进程使用的内存达到memory.limit_in_bytes设置的上限值，控制组也不会杀掉里面的进程。</p><p>但是，我想提醒你，这样操作以后，就会影响到控制组中正在申请物理内存页面的进程。这些进程会处于一个停止状态，不能往下运行了。</p><p>最后，我们再来学习一下第三个参数，也就是memory.usage_in_bytes。这个参数是只读的，它里面的数值是当前控制组里所有进程实际使用的内存总和。</p><p>我们可以查看这个值，然后把它和memory.limit_in_bytes里的值做比较，根据接近程度来可以做个预判。这两个值越接近，OOM的风险越高。通过这个方法，我们就可以得知，当前控制组内使用总的内存量有没有OOM的风险了。</p><p>控制组之间也同样是树状的层级结构，在这个结构中，父节点的控制组里的memory.limit_in_bytes值，就可以限制它的子节点中所有进程的内存使用。</p><p>我用一个具体例子来说明，比如像下面图里展示的那样，group1里的memory.limit_in_bytes设置的值是200MB，它的子控制组group3里memory.limit_in_bytes值是500MB。那么，我们在group3里所有进程使用的内存总值就不能超过200MB，而不是500MB。</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/07/6c65856f5dce81c064a63d6ffe0ca507.jpeg?wh=1920*1080\" alt=\"\"><br>\n好了，我们这里介绍了Memory Cgroup最基本的概念，简单总结一下：</p><p>第一，Memory Cgroup中每一个控制组可以为一组进程限制内存使用量，一旦所有进程使用内存的总量达到限制值，缺省情况下，就会触发OOM Killer。这样一来，控制组里的“某个进程”就会被杀死。</p><p>第二，这里杀死“某个进程”的选择标准是，<strong>控制组中总的可用页面乘以进程的oom_score_adj，加上进程已经使用的物理内存页面，所得值最大的进程，就会被系统选中杀死。</strong></p><h2>解决问题</h2><p>我们解释了Memory Cgroup和OOM Killer后，你应该明白了为什么容器在运行过程中会突然消失了。</p><p>对于每个容器创建后，系统都会为它建立一个Memory Cgroup的控制组，容器的所有进程都在这个控制组里。</p><p>一般的容器云平台，比如Kubernetes都会为容器设置一个内存使用的上限。这个内存的上限值会被写入Cgroup里，具体来说就是容器对应的Memory Cgroup控制组里memory.limit_in_bytes这个参数中。</p><p>所以，一旦容器中进程使用的内存达到了上限值，OOM Killer会杀死进程使容器退出。</p><p><strong>那么我们怎样才能快速确定容器发生了OOM呢？这个可以通过查看内核日志及时地发现。</strong></p><p>还是拿我们这一讲最开始发生OOM的容器作为例子。我们通过查看内核的日志，使用用 <code>journalctl -k</code> 命令，或者直接查看日志文件/var/log/message，我们会发现当容器发生OOM Kill的时候，内核会输出下面的这段信息，大致包含下面这三部分的信息：</p><p>第一个部分就是<strong>容器里每一个进程使用的内存页面数量。</strong>在\"rss\"列里，\"rss'是Resident Set Size的缩写，指的就是进程真正在使用的物理内存页面数量。</p><p>比如下面的日志里，我们看到init进程的\"rss\"是1个页面，mem_alloc进程的\"rss\"是130801个页面，内存页面的大小一般是4KB，我们可以做个估算，130801 * 4KB大致等于512MB。</p><p><img src=\"https://static001.geekbang.org/resource/image/f6/ec/f681cd4d97a34ebb8a9458b7a0d5a9ec.png?wh=3350*454\" alt=\"\"></p><p>第二部分我们来看上面图片的 <strong>\"oom-kill:\"</strong> 这行，这一行里列出了发生OOM的Memroy Cgroup的控制组，我们可以从控制组的信息中知道OOM是在哪个容器发生的。</p><p>第三部分是图中 <strong>\"Killed process 7445 (mem_alloc)\" 这行，它显示了最终被OOM Killer杀死的进程。</strong></p><p>我们通过了解内核日志里的这些信息，可以很快地判断出容器是因为OOM而退出的，并且还可以知道是哪个进程消耗了最多的Memory。</p><p>那么知道了哪个进程消耗了最大内存之后，我们就可以有针对性地对这个进程进行分析了，一般有这两种情况：</p><p>第一种情况是<strong>这个进程本身的确需要很大的内存</strong>，这说明我们给memory.limit_in_bytes里的内存上限值设置小了，那么就需要增大内存的上限值。</p><p>第二种情况是<strong>进程的代码中有Bug，会导致内存泄漏，进程内存使用到达了Memory Cgroup中的上限。</strong>如果是这种情况，就需要我们具体去解决代码里的问题了。</p><h2>重点总结</h2><p>这一讲我们从容器在系统中被杀的问题，学习了OOM Killer和Memory Cgroup这两个概念。</p><p>OOM Killer这个行为在Linux中很早就存在了，它其实是一种内存过载后的保护机制，通过牺牲个别的进程，来保证整个节点的内存不会被全部消耗掉。</p><p>在Cgroup的概念出现后，Memory Cgroup中每一个控制组可以对一组进程限制内存使用量，一旦所有进程使用内存的总量达到限制值，在缺省情况下，就会触发OOM Killer，控制组里的“某个进程”就会被杀死。</p><p>请注意，这里Linux系统肯定不能随心所欲地杀掉进程，那具体要用什么选择标准呢？</p><p>杀掉“某个进程”的选择标准，涉及到内核函数oom_badness()。具体的计算方法是  ：<strong>系统总的可用页面数乘以进程的OOM校准值oom_score_adj，再加上进程已经使用的物理页面数，计算出来的值越大，那么这个进程被OOM Kill的几率也就越大。</strong></p><p>接下来，我给你讲解了Memory Cgroup里最基本的三个参数，分别是<strong>memory.limit_in_bytes， memory.oom_control 和 memory.usage_in_bytes。</strong>我把这三个参数的作用，给你总结成了一张图。第一个和第三个参数，下一讲中我们还会用到，这里你可以先有个印象。</p><p><img src=\"https://static001.geekbang.org/resource/image/2e/81/2e3121a256b34bab80799002b2549881.jpeg?wh=3200*1800\" alt=\"\"></p><p>容器因为OOM被杀，要如何处理呢？我们可以通过内核日志做排查，查看容器里内存使用最多的进程，然后对它进行分析。根据我的经验，解决思路要么是提高容器的最大内存限制，要么需要我们具体去解决进程代码的BUG。</p><h2>思考题</h2><p>在我们的例子<a href=\"https://github.com/chengyli/training/blob/main/memory/oom/start_container.sh\">脚本</a>基础上，你可以修改一下，在容器刚一启动，就在容器对应的Memory Cgroup中禁止OOM，看看接下来会发生什么？</p><p>欢迎留言和我分享你的想法和疑问。如果读完这篇文章有所收获，也欢迎分享给你的朋友。</p>","neighbors":{"left":{"article_title":"07 | Load Average：加了CPU Cgroup限制，为什么我的容器还是很慢？","id":313791},"right":{"article_title":"09 | Page Cache：为什么我的容器内存使用量总是在临界点?","id":316436}},"comments":[{"had_liked":false,"id":265480,"user_name":"谢哈哈","can_delete":false,"product_type":"c1","uid":2326880,"ip_address":"","ucode":"5AADE70B5AFE27","user_header":"https://static001.geekbang.org/account/avatar/00/23/81/60/71ed6ac7.jpg","comment_is_top":false,"comment_ctime":1606909917,"is_pvip":false,"replies":[{"id":"96615","content":"@谢哈好，<br>&gt; 但memalloc进程会被暂停申请内存，状态会变成因等待资源申请而变成task interruptable<br><br>挺好的，能分析最后进程的状态。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1607060803,"ip_address":"","comment_id":265480,"utype":1}],"discussion_count":3,"race_medal":0,"score":"87506255837","product_id":100063801,"comment_content":"如果将memory oom control的参数设置为1，那么容器里的进程在使用内存到达memory limit in bytes之后，不会被oom killer杀死，但memalloc进程会被暂停申请内存，状态会变成因等待资源申请而变成task interruptable","like_count":20,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510948,"discussion_content":"@谢哈好，\n&amp;gt; 但memalloc进程会被暂停申请内存，状态会变成因等待资源申请而变成task interruptable\n\n挺好的，能分析最后进程的状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607060803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2063014,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7a/a6/e37fbbd8.jpg","nickname":"小能","note":"","ucode":"39EAAC8443B83C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373859,"discussion_content":"为什么TASK_UNINTERRUPTIBLE  我居然可以kill -9 杀死 进程 ？？越学越晕？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620895563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2310467,"avatar":"https://static001.geekbang.org/account/avatar/00/23/41/43/dc54967d.jpg","nickname":"Gemini","note":"","ucode":"A68ADD6A447B7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364608,"discussion_content":"老师 我这边模拟出来的进程是Ds状态 应该是TASK_UNINTERRUPTIBLE 是我这边模拟有问题么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617536602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265590,"user_name":"Bill Du","can_delete":false,"product_type":"c1","uid":1252782,"ip_address":"","ucode":"7C2ED26981F01B","user_header":"https://static001.geekbang.org/account/avatar/00/13/1d/ae/345075e4.jpg","comment_is_top":false,"comment_ctime":1606958069,"is_pvip":false,"replies":[{"id":"96612","content":"k8s request不修改Memory Cgroup里的参数。只是在kube scheduler里调度的时候看做个计算，看节点上是否还有内存给这个新的container。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1607057030,"ip_address":"","comment_id":265590,"utype":1}],"discussion_count":3,"race_medal":0,"score":"78916369397","product_id":100063801,"comment_content":"老师请教下 k8s中limit 是 改的 limit in bytes。那k8s request是改的mem cg中哪个指呀？","like_count":18,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510985,"discussion_content":"k8s request不修改Memory Cgroup里的参数。只是在kube scheduler里调度的时候看做个计算，看节点上是否还有内存给这个新的container。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607057030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1194388,"avatar":"","nickname":"垂死挣扎的咸鱼","note":"","ucode":"79143A61A5599E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398075,"discussion_content":"主要是request以及limit值会影响qos，而k8s中的oom_score_adj值是基于不同qos来设置的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632730695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2702218,"avatar":"https://static001.geekbang.org/account/avatar/00/29/3b/8a/467402dc.jpg","nickname":"玉衡","note":"","ucode":"3BBB66F7F4F09D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384631,"discussion_content":"K8S request除了是调度时资源分配的根据，还会影响单机上进程的oom_score_adj值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626682819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275203,"user_name":"垂死挣扎的咸鱼","can_delete":false,"product_type":"c1","uid":1194388,"ip_address":"","ucode":"79143A61A5599E","user_header":"","comment_is_top":false,"comment_ctime":1611387683,"is_pvip":false,"replies":[{"id":"99975","content":"&gt;这边提到的cgroup底下的memory.usage_in_bytes是不是可以理解为通过top看到的usage与buffer&#47;cached内存之和<br><br>是的<br><br>&gt; 同时这边衍生出一个问题假如oom的评判标准是包含buffer&#47;cached的内存使用<br><br>OOM是不包含buf&#47;cache的。总的memory usage如果超过memory limit, 那么应该是先发生memory reclaim去释放cache。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1611561085,"ip_address":"","comment_id":275203,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44561060643","product_id":100063801,"comment_content":"请问老师：这边提到的cgroup底下的memory.usage_in_bytes是不是可以理解为通过top看到的usage与buffer&#47;cached内存之和（这边指在容器中执行top且该容器有绑定lxcfs或者直接是kata容器即理解为top看的就是该容器的），因为我们这边用prometheus采集监控指标的时候发现container_memory_usage_bytes这个指标与cgroup中memory.usage_in_bytes是对应的而container_memory_usage_bytes这个指标实际是算上buffer&#47;cached的内存，同时这边衍生出一个问题假如oom的评判标准是包含buffer&#47;cached的内存使用，那是不是意味着我们在做容器内存监控的时候是应该把这个值也展示在监控中？","like_count":10,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514258,"discussion_content":"&amp;gt;这边提到的cgroup底下的memory.usage_in_bytes是不是可以理解为通过top看到的usage与buffer/cached内存之和\n\n是的\n\n&amp;gt; 同时这边衍生出一个问题假如oom的评判标准是包含buffer/cached的内存使用\n\nOOM是不包含buf/cache的。总的memory usage如果超过memory limit, 那么应该是先发生memory reclaim去释放cache。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611561085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265895,"user_name":"Adam","can_delete":false,"product_type":"c1","uid":1305633,"ip_address":"","ucode":"338BA720880E4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/21/b0fe1bfd.jpg","comment_is_top":false,"comment_ctime":1607063349,"is_pvip":false,"replies":[{"id":"96697","content":"嗯，可以这么理解","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1607242851,"ip_address":"","comment_id":265895,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31671834421","product_id":100063801,"comment_content":"CPU应该是可压缩资源，即便达到设置的资源限额也不会退出，而内存属于不可压缩资源，资源不足时就会发生OOM了。","like_count":7,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511084,"discussion_content":"嗯，可以这么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607242851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265366,"user_name":"wuqilv","can_delete":false,"product_type":"c1","uid":1169314,"ip_address":"","ucode":"B9C4A2C2FF32AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/a2/5f6b90a9.jpg","comment_is_top":false,"comment_ctime":1606878986,"is_pvip":false,"replies":[{"id":"96499","content":"@wuqilv, 你可以用free看一下，是不是swap打开了？","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1606914456,"ip_address":"","comment_id":265366,"utype":1}],"discussion_count":6,"race_medal":0,"score":"23081715466","product_id":100063801,"comment_content":"老师，我在ubuntu上按照文章进行操作，容器没有按照预期那样发生 oom kill，查看 state ，&quot;OOMKilled&quot;: false。","like_count":5,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510903,"discussion_content":"@wuqilv, 你可以用free看一下，是不是swap打开了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606914456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1293368,"avatar":"https://static001.geekbang.org/account/avatar/00/13/bc/38/248c3bdf.jpg","nickname":"陈建-binary","note":"","ucode":"F4D201777FBCD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358938,"discussion_content":"ubuntu20.04，关闭swap分区，解决了案例中不是oomkill的问题，太好了，搞了好久","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1616077045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1670331,"avatar":"https://static001.geekbang.org/account/avatar/00/19/7c/bb/635a2710.jpg","nickname":"徐少文","note":"","ucode":"8E35B10DA44EE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343158,"discussion_content":"同样的问题，解决了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610960195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1276588,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIz9dKN1C8rKQoaVtmEGdzObhlia6zAfTsPYOm4ibz39VjTbu7Aia1LyeedHR26b6nxUtcCufpichcYgw/132","nickname":"上邪忘川","note":"","ucode":"1C4459917B038D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332415,"discussion_content":"老师后期能说一下swap对menory group的影响嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607184055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169314,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d7/a2/5f6b90a9.jpg","nickname":"wuqilv","note":"","ucode":"B9C4A2C2FF32AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331705,"discussion_content":"把swap关掉就好了，可能是swap开着，然后一直没oom吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606957524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339168,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6f/20/53cb569d.jpg","nickname":"daydreamer","note":"","ucode":"375D9D4F9A7AF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331640,"discussion_content":"我在ubuntu18.04上跑了下，容器mem_alloc没有被杀掉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606919767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280559,"user_name":"垂死挣扎的咸鱼","can_delete":false,"product_type":"c1","uid":1194388,"ip_address":"","ucode":"79143A61A5599E","user_header":"","comment_is_top":false,"comment_ctime":1614246859,"is_pvip":false,"replies":[{"id":"101963","content":"@垂死挣扎的咸鱼<br>&gt; (1)<br>新申请的内存还是指物理内存。虚拟内存是不会引起OOM的。<br><br>&gt; 想请问一下是否anon-rss +  file-rss 就等于新申请的内存+ memory.usage_in_bytes - reclaim memory <br><br>其实这里最大的一点就是内核的内存是否被计入到cgroup memory中。缺省情况内核使用的内存会被计入到cgroup里， 不过对于大部分运行应用程序的容器里， anon-rss +  file-rss就是最主要的物理内存开销（这里不包含内核内存）。<br><br>但是如果一个容器中的进程对应的内核内存使用量很大那么我觉得更加准确的就是看 “新申请的内存+ memory.usage_in_bytes - reclaim memory” 了。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1614435607,"ip_address":"","comment_id":280559,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14499148747","product_id":100063801,"comment_content":"老师这边请教一个问题，今天排查oom的日志时发现<br>agent invoked oom-killer: gfp_mask=0x6000c0(GFP_KERNEL), nodemask=(null), order=0, oom_score_adj=-998<br>......<br>Killed process 3267 (agent) total-vm:4912320kB, anon-rss: 2074576kB, file-rss: 23000kB, shmem-rss:0kB<br>这么一段，其中对容器limit限制是2GIB，因此猜测为oom触发条件是<br> anon-rss +  file-rss &gt; limit时触发，然后看到您在评论里有描述过条件是：<br>新申请的内存+ memory.usage_in_bytes - reclaim memory &gt; memory.limit_in_bytes<br>所以这边对这个新申请内存有些疑惑，这边有两种猜测：<br>(1)这边的新申请内存指的是虚拟内存吗，如果是的话是不是意味着oomkill流程触发是在程序申请内存的时候，但是这边看之前oom日志中vm的内存已经远超limit了<br>(2) 这边猜测这边的新申请内存是实际的物理内存这样，按照这种猜测oomkill流程是在程序实际使用时触发该流程，如果这种猜测是准的话，想请问一下是否anon-rss +  file-rss 就等于新申请的内存+ memory.usage_in_bytes - reclaim memory 这样<br>这边确实对oom这一块十分困惑，网上找到的资料也千奇百怪，内核代码不知道该怎么入手看这一块，所以想请教一下老师这些问题，麻烦老师了<br>","like_count":3,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516134,"discussion_content":"@垂死挣扎的咸鱼\n&amp;gt; (1)\n新申请的内存还是指物理内存。虚拟内存是不会引起OOM的。\n\n&amp;gt; 想请问一下是否anon-rss +  file-rss 就等于新申请的内存+ memory.usage_in_bytes - reclaim memory \n\n其实这里最大的一点就是内核的内存是否被计入到cgroup memory中。缺省情况内核使用的内存会被计入到cgroup里， 不过对于大部分运行应用程序的容器里， anon-rss +  file-rss就是最主要的物理内存开销（这里不包含内核内存）。\n\n但是如果一个容器中的进程对应的内核内存使用量很大那么我觉得更加准确的就是看 “新申请的内存+ memory.usage_in_bytes - reclaim memory” 了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614435607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313840,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/30/bb4bfe9d.jpg","nickname":"lyonger","note":"","ucode":"E89A75DADEA2A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387019,"discussion_content":"请问内核的内存具体是指哪个呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627953218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276395,"user_name":"Lemon","can_delete":false,"product_type":"c1","uid":2136414,"ip_address":"","ucode":"E52BB361B69825","user_header":"https://static001.geekbang.org/account/avatar/00/20/99/5e/33481a74.jpg","comment_is_top":false,"comment_ctime":1611909527,"is_pvip":false,"replies":[{"id":"101966","content":"是第一种情况：<br>&gt; 是指 group2 + group3 + group1 的所有进程使用的内存总值就不能超过 200MB？","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1614436078,"ip_address":"","comment_id":276395,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10201844119","product_id":100063801,"comment_content":"老师，请问控制组之间是什么关系呢？<br>按照本章的树状的层级结构图所示，group1 分出 group2 和 group3 。<br>此时 group1 里的 memory.limit_in_bytes 设置的值是 200MB，这里的 200MB 是代表是的什么呢？<br><br>是指 group2 + group3 + group1 的所有进程使用的内存总值就不能超过 200MB？<br>还是单纯的指 group2 与 group3 中各自的所有进程使用的内存总值就不能超过 200MB？","like_count":2,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514688,"discussion_content":"是第一种情况：\n&amp;gt; 是指 group2 + group3 + group1 的所有进程使用的内存总值就不能超过 200MB？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614436078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269463,"user_name":"维c","can_delete":false,"product_type":"c1","uid":2048787,"ip_address":"","ucode":"FAD5EE298D5F2D","user_header":"https://static001.geekbang.org/account/avatar/00/1f/43/13/9b24c185.jpg","comment_is_top":false,"comment_ctime":1608662303,"is_pvip":false,"replies":[{"id":"98025","content":"在memory cgroup中可以通过memory.oom_control来禁止对应cgroup中的oom killer。<br>禁止oom killer不会导致内存管理失控，它也不是内存的回收机制。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1609083279,"ip_address":"","comment_id":269463,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10198596895","product_id":100063801,"comment_content":"参照着网络上的解析和内核的代码看了一下整个oom回收的flow，发现oom_killer_disabled这个标志位在out_of_memory 函数的一开始就做了检测，那么这个标志位由什么决定的呢？如果容器内的进程也可以设置这个标志位，是不是就等于禁止掉了回收机制而导致容器内进程内存管理的失控呢？","like_count":2,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512282,"discussion_content":"在memory cgroup中可以通过memory.oom_control来禁止对应cgroup中的oom killer。\n禁止oom killer不会导致内存管理失控，它也不是内存的回收机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609083279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265562,"user_name":"Geek_ba556d","can_delete":false,"product_type":"c1","uid":2187528,"ip_address":"","ucode":"FF3A00C32D2874","user_header":"","comment_is_top":false,"comment_ctime":1606951869,"is_pvip":false,"replies":[{"id":"96613","content":"limit 对应 Memory Cgroup中的memory.limit_in_bytes<br><br>k8s request不修改Memory Cgroup里的参数。只是在kube scheduler里调度的时候看做个计算，看节点上是否还有内存给这个新的container。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1607057109,"ip_address":"","comment_id":265562,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10196886461","product_id":100063801,"comment_content":"k8s的memory的request，limit限制对应cgroup的参数是什么？","like_count":2,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510978,"discussion_content":"limit 对应 Memory Cgroup中的memory.limit_in_bytes\n\nk8s request不修改Memory Cgroup里的参数。只是在kube scheduler里调度的时候看做个计算，看节点上是否还有内存给这个新的container。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607057109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2187528,"avatar":"","nickname":"Geek_ba556d","note":"","ucode":"FF3A00C32D2874","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332650,"discussion_content":"如果没有cgroup关联，是不是limit和request设置相等比较安全？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607298272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265362,"user_name":"Acter","can_delete":false,"product_type":"c1","uid":1082561,"ip_address":"","ucode":"EF747BEAD2A797","user_header":"https://static001.geekbang.org/account/avatar/00/10/84/c1/dfcad82a.jpg","comment_is_top":false,"comment_ctime":1606877872,"is_pvip":true,"replies":[{"id":"96500","content":"@Acter,好问题，下一课，我会讲这个问题","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1606914487,"ip_address":"","comment_id":265362,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10196812464","product_id":100063801,"comment_content":"请问老师：进程的cache和buffer也会计入进程已使用的物理内存页面数吗？","like_count":2,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510902,"discussion_content":"@Acter,好问题，下一课，我会讲这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606914487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265351,"user_name":"那时刻","can_delete":false,"product_type":"c1","uid":1150927,"ip_address":"","ucode":"B0D150856C3A4A","user_header":"https://static001.geekbang.org/account/avatar/00/11/8f/cf/890f82d6.jpg","comment_is_top":false,"comment_ctime":1606876016,"is_pvip":false,"replies":[{"id":"96502","content":"容器中进程CPU过高是不会被系统杀死的，只是一直限制进程的最高CPU.<br><br>至于第二问题，需要看具体的程序中是如何实现的了。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1606915418,"ip_address":"","comment_id":265351,"utype":1}],"discussion_count":5,"race_medal":0,"score":"10196810608","product_id":100063801,"comment_content":"文中提到，容器在系统中被杀掉，其实只有一种情况，那就是容器中的进程使用了太多的内存。请问老师，如果cpu使用过高超过limit，是否存在被杀掉的情况呢？<br><br>另外一个问题是，我们遇到过，在k8s里pod cpu飙高之后，引起内存升高，然后触发OOM。我的理解是当cpu到达limit之后，被限制住了，进而拖慢程序处理速度，导致内存上升，最后OOM。不知我的理解是否正确？","like_count":2,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510896,"discussion_content":"容器中进程CPU过高是不会被系统杀死的，只是一直限制进程的最高CPU.\n\n至于第二问题，需要看具体的程序中是如何实现的了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606915418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1621432,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WxLKJlXCibwqO92vB8XTicLQiahrhuUEqP7yT9dearZxLzbia7oMdsLmon5J4LJyTfIWchHY3bKfibm1lS1aZarZs4Q/132","nickname":"jie","note":"","ucode":"E93A1818AB2459","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574951,"discussion_content":"应该是没设置好超时 引起线程堆积了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654494375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1150927,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8f/cf/890f82d6.jpg","nickname":"那时刻","note":"","ucode":"B0D150856C3A4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1621432,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WxLKJlXCibwqO92vB8XTicLQiahrhuUEqP7yT9dearZxLzbia7oMdsLmon5J4LJyTfIWchHY3bKfibm1lS1aZarZs4Q/132","nickname":"jie","note":"","ucode":"E93A1818AB2459","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":574954,"discussion_content":"嗯嗯，这是一部分原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654494846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":574951,"ip_address":""},"score":574954,"extra":""}]},{"author":{"id":1500498,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e5/52/35bc9c07.jpg","nickname":"Musisan","note":"","ucode":"A9A9FE56AABEBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343095,"discussion_content":"pu飙高之后，引起内存升高，这种的十有八九是你的程序写的问题，导致内存泄漏一直上涨，检查自己写的程序去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610942342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2328779,"avatar":"https://static001.geekbang.org/account/avatar/00/23/88/cb/f602f92e.jpg","nickname":"雨龙","note":"","ucode":"18EB5F165A7E7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331556,"discussion_content":"内存的回收机制会导致容器被杀掉，cpu过载不会吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606899020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342148,"user_name":"又双叒叕是一年啊","can_delete":false,"product_type":"c1","uid":1000015,"ip_address":"上海","ucode":"E067320E537DEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/4f/ff1ac464.jpg","comment_is_top":false,"comment_ctime":1650039578,"is_pvip":false,"replies":[{"id":"129208","content":"可以看kernel log里的dump出来的OOM进程的内存信息。","user_name":"作者回复","user_name_real":"编辑","uid":"2070138","ctime":1661085816,"ip_address":"上海","comment_id":342148,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5945006874","product_id":100063801,"comment_content":"容器oom问题如何排查？","like_count":1,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584756,"discussion_content":"可以看kernel log里的dump出来的OOM进程的内存信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661085816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271893,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1027123,"ip_address":"","ucode":"D0700609740FB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/33/110437cc.jpg","comment_is_top":false,"comment_ctime":1609854404,"is_pvip":false,"replies":[{"id":"98650","content":"每个进程都有一个 &#47;proc&#47;&lt;pid&gt;&#47;oom_score_adj， 比如对进程1的oom_score_adj 赋值 -100， 可以：<br><br>echo &quot;-100&quot; &gt; &#47;proc&#47;1&#47;oom_score_adj","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1609944439,"ip_address":"","comment_id":271893,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5904821700","product_id":100063801,"comment_content":"请问老师，oom_score_adj的值是如何设置的？","like_count":1,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513084,"discussion_content":"每个进程都有一个 /proc/&amp;lt;pid&amp;gt;/oom_score_adj， 比如对进程1的oom_score_adj 赋值 -100， 可以：\n\necho &amp;quot;-100&amp;quot; &amp;gt; /proc/1/oom_score_adj","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609944439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270948,"user_name":"谦寻","can_delete":false,"product_type":"c1","uid":1033639,"ip_address":"","ucode":"07160FAFAD08F7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/a7/e32dcfe7.jpg","comment_is_top":false,"comment_ctime":1609326578,"is_pvip":false,"replies":[{"id":"98374","content":"@Given, 你说的尖刺会超过limit多少memory? 理论上应该超的不多，也不会等很就才会被kill。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1609593615,"ip_address":"","comment_id":270948,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5904293874","product_id":100063801,"comment_content":"请教老师，基本上看监控内存使用超过limit值都会有一个尖刺，貌似是超过一段时间才会kill掉进程，这个如何解释，是允许有一瞬间超过limit么？","like_count":1,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512799,"discussion_content":"@Given, 你说的尖刺会超过limit多少memory? 理论上应该超的不多，也不会等很就才会被kill。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609593615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265352,"user_name":"here_always","can_delete":false,"product_type":"c1","uid":1647877,"ip_address":"","ucode":"E46E89C160A973","user_header":"","comment_is_top":false,"comment_ctime":1606876665,"is_pvip":false,"replies":[{"id":"96501","content":"在早期内核版本里使用oom_adj, 后来改用oom_socre_adj了。不过为了兼容一些老的应用程序，oom_adj还保留着。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1606915257,"ip_address":"","comment_id":265352,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5901843961","product_id":100063801,"comment_content":"从之前学习的课程中，我记得另外还有一个控制oom的参数叫做oom_adj，它的范围似乎是-17 ~ 15 ，老师可以讲一下oom_adj和oom_socre_adj之间的关系吗？","like_count":1,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510897,"discussion_content":"在早期内核版本里使用oom_adj, 后来改用oom_socre_adj了。不过为了兼容一些老的应用程序，oom_adj还保留着。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606915257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358184,"user_name":"吴志盛","can_delete":false,"product_type":"c1","uid":2437354,"ip_address":"广东","ucode":"FDEF167940D0F9","user_header":"","comment_is_top":false,"comment_ctime":1664009057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664009057","product_id":100063801,"comment_content":"老师请问 pod里top 中%MEM 0.2% 是节点的0.2%吗","like_count":0},{"had_liked":false,"id":347987,"user_name":"ch_ort","can_delete":false,"product_type":"c1","uid":1580926,"ip_address":"","ucode":"B79746E687F29E","user_header":"","comment_is_top":false,"comment_ctime":1654652618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654652618","product_id":100063801,"comment_content":"cgroup通过memory.limit_in_bytes来限制容器的最高内存使用，对应了k8s中的limit，而k8s的request没有对应的cgroups，只是在kube scheduler里调度的时候看做个计算，看节点上是否还有内存给这个新的container。","like_count":0},{"had_liked":false,"id":344164,"user_name":"King-ZJ","can_delete":false,"product_type":"c1","uid":1915385,"ip_address":"","ucode":"7448A4BBB5A118","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/f9/b946719a.jpg","comment_is_top":false,"comment_ctime":1651315396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651315396","product_id":100063801,"comment_content":"请问我在实践的时候，容器退出码是137，但OOMKilled这里显示为false，这是为啥呢？<br>[root@node1 oom]# docker inspect c3de |grep -i Status -A 10<br>            &quot;Status&quot;: &quot;exited&quot;,<br>            &quot;Running&quot;: false,<br>            &quot;Paused&quot;: false,<br>            &quot;Restarting&quot;: false,<br>            &quot;OOMKilled&quot;: false,<br>            &quot;Dead&quot;: false,<br>            &quot;Pid&quot;: 0,<br>            &quot;ExitCode&quot;: 137,<br>            &quot;Error&quot;: &quot;&quot;,","like_count":0},{"had_liked":false,"id":321468,"user_name":"Dexter","can_delete":false,"product_type":"c1","uid":2608728,"ip_address":"","ucode":"909CABC4AC4AC9","user_header":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","comment_is_top":false,"comment_ctime":1636890436,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636890436","product_id":100063801,"comment_content":"dexter@dexter-VirtualBox:~&#47;container&#47;training&#47;memory&#47;oom$ docker ps -a<br>CONTAINER ID   IMAGE                   COMMAND             CREATED          STATUS                      PORTS     NAMES<br>e8d4f73f04c2   registry&#47;mem_alloc:v1   &quot;&#47;mem_alloc 2000&quot;   27 minutes ago   Exited (0) 17 minutes ago             mem_alloc<br>dexter@dexter-VirtualBox:~&#47;container&#47;training&#47;memory&#47;oom$ docker inspect mem_alloc<br>[<br>    {<br>        &quot;Id&quot;: &quot;e8d4f73f04c2efd227b0fde7dae97629207491b15cfe672c75bf6b8d089f0d94&quot;,<br>        &quot;Created&quot;: &quot;2021-11-14T11:15:48.23309116Z&quot;,<br>        &quot;Path&quot;: &quot;&#47;mem_alloc&quot;,<br>        &quot;Args&quot;: [<br>            &quot;2000&quot;<br>        ],<br>        &quot;State&quot;: {<br>            &quot;Status&quot;: &quot;exited&quot;,<br>            &quot;Running&quot;: false,<br>            &quot;Paused&quot;: false,<br>            &quot;Restarting&quot;: false,<br>            &quot;OOMKilled&quot;: false,<br>            &quot;Dead&quot;: false,<br>            &quot;Pid&quot;: 0,<br>            &quot;ExitCode&quot;: 0,<br>            &quot;Error&quot;: &quot;&quot;,<br>            &quot;StartedAt&quot;: &quot;2021-11-14T11:15:48.906831401Z&quot;,<br>            &quot;FinishedAt&quot;: &quot;2021-11-14T11:26:42.608474416Z&quot;<br>        },<br><br><br>----用老师文中的例子，container 挂了之后，查看原因为什么不是OOM？ 有什么别的设置吗？ 使用的是ubuntu 20.10 版本","like_count":0},{"had_liked":false,"id":312715,"user_name":"米 虫","can_delete":false,"product_type":"c1","uid":1073087,"ip_address":"","ucode":"6F35AA8BB8195B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/bf/4bd3eb4b.jpg","comment_is_top":false,"comment_ctime":1631950864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631950864","product_id":100063801,"comment_content":"想问下改参数，不能直接改到镜像文件里面吗  ？还是只能启动容器后 改对应的参数。。","like_count":0},{"had_liked":false,"id":309527,"user_name":"陈开","can_delete":false,"product_type":"c1","uid":2204383,"ip_address":"","ucode":"01E1CEDA88C14B","user_header":"","comment_is_top":false,"comment_ctime":1630213348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630213348","product_id":100063801,"comment_content":"老师给的文件是不是有点问题，docker build的时候回报找不到文件，看了dockerfile发现最后一步执行C程序文件没有带后缀，就是没有编译后的文件。我自己有一个问题就是按照老师的方法也会因为容器总是没有前台进程就死掉","like_count":0},{"had_liked":false,"id":308395,"user_name":"罗峰","can_delete":false,"product_type":"c1","uid":1218501,"ip_address":"","ucode":"5F3D6AF8F28322","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/c5/84491beb.jpg","comment_is_top":false,"comment_ctime":1629598632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629598632","product_id":100063801,"comment_content":"容器占用的cpu资源类似高速公路中容器可以同时走的车道数，遇到车辆多，拥堵状态车辆走的慢，这种状态是饥饿状态，多给几个车道可以缓解。k8s的cpu request","like_count":0},{"had_liked":false,"id":304856,"user_name":"liuying","can_delete":false,"product_type":"c1","uid":1042008,"ip_address":"","ucode":"A9E01EB56BAF90","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/58/eb94bbcc.jpg","comment_is_top":false,"comment_ctime":1627641608,"is_pvip":false,"replies":[{"id":"110973","content":"是的","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1628601487,"ip_address":"","comment_id":304856,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1627641608","product_id":100063801,"comment_content":"嗯，OOM killer，是发送sigkill 吗？不会给graceful shutdown 的机会吧……","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524187,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628601487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304639,"user_name":"首富手记","can_delete":false,"product_type":"c1","uid":1286588,"ip_address":"","ucode":"879DED4078303C","user_header":"https://static001.geekbang.org/account/avatar/00/13/a1/bc/ef0f26fa.jpg","comment_is_top":false,"comment_ctime":1627529347,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627529347","product_id":100063801,"comment_content":"我用老师提供的容器不能实现，但是我换成了 redis 容器成功得到想要的效果","like_count":0},{"had_liked":false,"id":304610,"user_name":"首富手记","can_delete":false,"product_type":"c1","uid":1286588,"ip_address":"","ucode":"879DED4078303C","user_header":"https://static001.geekbang.org/account/avatar/00/13/a1/bc/ef0f26fa.jpg","comment_is_top":false,"comment_ctime":1627521892,"is_pvip":true,"replies":[{"id":"111085","content":"@首富手记, 可以把你的对应的cgroup目录下的 cgroup.procs, memory.limit_in_bytes, memory.stat 打印出来看一下。<br><br>物理机的空闲内存不影响memory cgroup中对应的限制。","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1628690716,"ip_address":"","comment_id":304610,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1627521892","product_id":100063801,"comment_content":"为什么我按照老师的步骤来观察现象，但是复现不出来，我看了下，我的memory.oom_control 为 0，默认值，但是我超过 limit 值之后并不会不 oom 了。这个给我物理机还剩很多内存应该没关系把<br>","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524100,"discussion_content":"@首富手记, 可以把你的对应的cgroup目录下的 cgroup.procs, memory.limit_in_bytes, memory.stat 打印出来看一下。\n\n物理机的空闲内存不影响memory cgroup中对应的限制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628690716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300151,"user_name":"BertGeek","can_delete":false,"product_type":"c1","uid":1452799,"ip_address":"","ucode":"8E1D72C9F9778C","user_header":"https://static001.geekbang.org/account/avatar/00/16/2a/ff/a9d72102.jpg","comment_is_top":false,"comment_ctime":1625022134,"is_pvip":false,"replies":[{"id":"111141","content":"@BertGeek, 请问代码用http浏览是好的吗？","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1628775104,"ip_address":"","comment_id":300151,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625022134","product_id":100063801,"comment_content":"理解了memory cgroup，对容器性能更有助于分析，非常经典<br>请问文中提到的代码总是git 克隆失败，请指导，非常感谢！","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522655,"discussion_content":"@BertGeek, 请问代码用http浏览是好的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628775104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295868,"user_name":"Geek_苏晗2","can_delete":false,"product_type":"c1","uid":2289589,"ip_address":"","ucode":"13B4983CF442AF","user_header":"","comment_is_top":false,"comment_ctime":1622624729,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1622624729","product_id":100063801,"comment_content":"背景：<br>内存(常驻)：指分配给进程使用的实际物理内存，包括所有分配的栈内存和堆内存,以及加载到物理内存中的共享库占用的内存空间，但不包括进入交换分区的内存。Pod内存监控指标为container_memory_rss。<br>内存(工作集)：是容器真实使用的内存量，也是limit限制时的oom判断依据，内存使用率告警采用该指标。内存(工作集)= 内存(常驻) + 内存(高速缓存)+ 内存(内核消耗) - 未激活的匿名缓存页。<br>Pod内存监控指标为container_memory_working_set_bytes。<br><br>---------<br>问题<br>1、上面的描述是对的吗<br>2、container_memory_working_set_bytes  的值超过了 limit限制时 会触发OOM吗","like_count":0,"discussions":[{"author":{"id":1262144,"avatar":"https://static001.geekbang.org/account/avatar/00/13/42/40/c7444091.jpg","nickname":"tofu","note":"","ucode":"93BFF835968A03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381184,"discussion_content":"container_memory_working_set_bytes 包含 buff  cache， 超过上限会进行 内存页回收。\n我们在做内存监控的时候 主要还是根据container_memory_rss， 物理内存使用量来做。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624942272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292608,"user_name":"小能","can_delete":false,"product_type":"c1","uid":2063014,"ip_address":"","ucode":"39EAAC8443B83C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7a/a6/e37fbbd8.jpg","comment_is_top":false,"comment_ctime":1620894609,"is_pvip":false,"replies":[{"id":"111207","content":"一般情况下D state process是不能被kill的。如果可以被kill, 可能有两种情况，1. D process 自己恢复了， 2. process显示为D, 但它是TASK_KILLABLE process","user_name":"作者回复","user_name_real":"CY","uid":"2070138","ctime":1628863022,"ip_address":"","comment_id":292608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1620894609","product_id":100063801,"comment_content":"老师 如果将memory oom control的参数设置为1，容器的状态为Ds。 我记得不可中断的状态是进程是收不到single。但为什么我能kill -9  pid 把进程杀死。？ 莫非我记错？？","like_count":0,"discussions":[{"author":{"id":2070138,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/96/7a/8a14d008.jpg","nickname":"CY","note":"","ucode":"4AF98230985918","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519893,"discussion_content":"一般情况下D state process是不能被kill的。如果可以被kill, 可能有两种情况，1. D process 自己恢复了， 2. process显示为D, 但它是TASK_KILLABLE process","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628863022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}