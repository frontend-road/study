{"id":10669,"title":"07 | DSL的基础 : Lambda闭包的语法","content":"<h1>源代码及 PDF 课件地址：</h1><p><strong><a href=\"https://gitee.com/geektime-geekbang/KotlinPrimer\">https://gitee.com/geektime-geekbang/KotlinPrimer</a></strong></p>","comments":[{"had_liked":false,"id":93881,"user_name":"哒哒LoveYou","can_delete":false,"product_type":"c3","uid":1289047,"ip_address":"","ucode":"3CE148B0064399","user_header":"https://static001.geekbang.org/account/avatar/00/13/ab/57/2ff11243.jpg","comment_is_top":false,"comment_ctime":1557650881,"is_pvip":false,"replies":[{"id":58067,"content":"嗯，是的，新版本没这个限制了。\n毕竟视频录的时候还是1.1时候","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1573637315,"ip_address":"","comment_id":93881,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"Lambda参数限制在Kotlin1.3之后没有限制了吧！\n```java\n&#47;*\n * Copyright 2010-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license\n * that can be found in the license&#47;LICENSE.txt file.\n *&#47;\n\npackage kotlin.jvm.functions\n\nimport kotlin.jvm.internal.FunctionBase\n\n&#47;**\n * A function that takes N &gt;= 23 arguments.\n *\n * This interface must only be used in Java sources to reference a Kotlin function type with more than 22 arguments.\n *&#47;\n@SinceKotlin(&quot;1.3&quot;)\ninterface FunctionN&lt;out R&gt; : Function&lt;R&gt;, FunctionBase&lt;R&gt; {\n    &#47;**\n     * Invokes the function with the specified arguments.\n     *\n     * Must **throw exception** if the length of passed [args] is not equal to the parameter count returned by [arity].\n     *\n     * @param args arguments to the function\n     *&#47;\n    operator fun invoke(vararg args: Any?): R\n\n    &#47;**\n     * Returns the number of arguments that must be passed to this function.\n     *&#47;\n    override val arity: Int\n}\n```","like_count":5,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449807,"discussion_content":"嗯，是的，新版本没这个限制了。\n毕竟视频录的时候还是1.1时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573637315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19762,"user_name":"刘建","can_delete":false,"product_type":"c3","uid":1184348,"ip_address":"","ucode":"8FAA03E146B16F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RRyBNDRiaQ1rfDf2es0Gw8kWMUtFrITmIIfPBjYUtKNcOVBgO85AsdGlibPdoicBibsIoiatOM2QKKzbjD51kLKPObA/132","comment_is_top":false,"comment_ctime":1534045764,"is_pvip":false,"replies":[{"id":10504,"content":"其实你在kotlin中调java的interface也是不能直接传lambda的，你看到的像setonclicklistener这样的方法之所以能够直接传lambda，是因为kotlin单独做了重载，提供了一个可以传lambda的扩展函数","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1538306826,"ip_address":"","comment_id":19762,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"你好，有个问题想咨询下，我在Kotlin中调用Java中的一个参数为一个interface的方法，可以传一个lambda表达式。但是调用Kotlin中参数同样为同一个interface的方法的时候为啥没法传lambda。期待你的回复，困惑了我很长时间","like_count":2,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421971,"discussion_content":"其实你在kotlin中调java的interface也是不能直接传lambda的，你看到的像setonclicklistener这样的方法之所以能够直接传lambda，是因为kotlin单独做了重载，提供了一个可以传lambda的扩展函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538306826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/66bf4bc4.jpg","nickname":"荷兰小猪8813","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":568236,"discussion_content":"这个重载是在哪个文件下呢？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651079304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":421971,"ip_address":"","group_id":0},"score":568236,"extra":""}]},{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/66bf4bc4.jpg","nickname":"荷兰小猪8813","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568240,"discussion_content":"如果是调 java 的，那个匿名内部类实现了 java 方法参数的那个接口的，如果是直接掉 kotlin 的，lambda 对象的类型是函数类型，不用接口指定的类型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651079390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50077,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c3","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544860427,"is_pvip":false,"replies":[{"id":19068,"content":"闭包不能显示使用return，但是闭包的最后一条语句的结果就是闭包的返回值，视频里面有讲的。\n因为闭包在编译以后会变成Function接口对象，这个对象的方法已经固定了返回类型，所以不能再用return。","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1545380259,"ip_address":"","comment_id":50077,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"  var ruunableOrigin = {\n        name:String -&gt; \n        println(&quot;name&quot;)\n        return name\n        \n    }\n\n张涛老师，方便请教下 闭包为什么不能有返回值？ 如果要有返回值可以吗？","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432867,"discussion_content":"闭包不能显示使用return，但是闭包的最后一条语句的结果就是闭包的返回值，视频里面有讲的。\n因为闭包在编译以后会变成Function接口对象，这个对象的方法已经固定了返回类型，所以不能再用return。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545380259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":30420,"user_name":"天空","can_delete":false,"product_type":"c3","uid":1121823,"ip_address":"","ucode":"4760B5C8A34F30","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/1f/e3c13f29.jpg","comment_is_top":false,"comment_ctime":1538835911,"is_pvip":false,"replies":[{"id":11138,"content":"你的代码应该没问题，可以在github参考一下视频中的代码工程，看看是不是包名或者工程有问题。","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1539054441,"ip_address":"","comment_id":30420,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"为什么我现在用Java定义后运行\n仍旧报java.lang.NoClassDefFoundError: kotlin&#47;jvm&#47;functions&#47;FunctionN\n我定义的\npackage kotlin.jvm.functions;\nimport kotlin.Function;\npublic interface Function23&lt;P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22, P23, R&gt; extends Function&lt;R&gt; {\n     R invoke(P1 p1, P2 p2, P3 p3, P4 p4, P5 p5, P6 p6, P7 p7, P8 p8, P9 p9, P10 p10, P11 p11, P12 p12, P13 p13, P14 p14, P15 p15, P16 p16, P17 p17, P18 p18, P19 p19, P20 p20, P21 p21, P22 p22, P23 p23);\n}\n","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425991,"discussion_content":"你的代码应该没问题，可以在github参考一下视频中的代码工程，看看是不是包名或者工程有问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539054441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341252,"user_name":"深水蓝","can_delete":false,"product_type":"c3","uid":1637933,"ip_address":"","ucode":"3E3B195DE54DE1","user_header":"https://static001.geekbang.org/account/avatar/00/18/fe/2d/e23fc6ee.jpg","comment_is_top":false,"comment_ctime":1649481323,"is_pvip":false,"replies":[{"id":135919,"content":"可以这么理解，包括kotlin 中的函数参数也可以这么理解","user_name":"作者回复","user_name_real":"编辑","uid":1009146,"ctime":1681091689,"ip_address":"上海","comment_id":341252,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"lambda 表达式其实是不是可以理解成C语言的函数指针？将函数作为参数传入给被调用的函数，被调用的函数通过这个函数指针执行这个参数所指定的程序。","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613021,"discussion_content":"可以这么理解，包括kotlin 中的函数参数也可以这么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681091689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69035,"user_name":"仗剑江湖","can_delete":false,"product_type":"c3","uid":1249913,"ip_address":"","ucode":"C584C1766C01A3","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/79/84b2f07f.jpg","comment_is_top":false,"comment_ctime":1550649654,"is_pvip":false,"replies":[{"id":58068,"content":"贴一下代码看看","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1573637357,"ip_address":"","comment_id":69035,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"kotlin类中使用main方法报ClassNotFoundException，怎么搞","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439926,"discussion_content":"贴一下代码看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573637357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26442,"user_name":"涛","can_delete":false,"product_type":"c3","uid":1085100,"ip_address":"","ucode":"92263D02C543E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/ac/24fc311b.jpg","comment_is_top":false,"comment_ctime":1537602829,"is_pvip":false,"replies":[{"id":10507,"content":"是的，没错","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1538306920,"ip_address":"","comment_id":26442,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"刘建同学的问题，可以这么解释：\npublic static void show(JavaInterface javaInterface)的入参是个JavaInterface 接口实现类的实例对象\nfun show(javaInterface: JavaInterface)也是如此，所以，这个fun show()可以接收一个JavaInterface类型的实例。但是lambda被翻译成java后对应的接口类型叫FunctionN 在Java里和JavaInterface 当然是不同的接口，所以不能传。\n😀","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424634,"discussion_content":"是的，没错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538306920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19854,"user_name":"刘建","can_delete":false,"product_type":"c3","uid":1184348,"ip_address":"","ucode":"8FAA03E146B16F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RRyBNDRiaQ1rfDf2es0Gw8kWMUtFrITmIIfPBjYUtKNcOVBgO85AsdGlibPdoicBibsIoiatOM2QKKzbjD51kLKPObA/132","comment_is_top":false,"comment_ctime":1534123644,"is_pvip":false,"replies":[{"id":6939,"content":"当然不行，你还得声明fun show(block: (str: String)-&gt; Unit){\n}这样的方法","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1534202226,"ip_address":"","comment_id":19854,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"你好，可能我没有表达的很清楚，是这样的\npublic static void show(JavaInterface javaInterface) {\n         javaInterface.addddd(&quot;sss&quot;);\n}\n\nfun show(javaInterface: JavaInterface) {\n         javaInterface.addddd(&quot;sss&quot;); \n}\n\nfun main(args: Array&lt;String&gt;) {\n    val a = { s: String -&gt;\n        println(s)\n    }\n    JavaMain.show(a)\n    show(a)  &#47;&#47;没办法传入\n}\n\n就是上次两个方法，一个Java方法一个Kotlin方法，参数都为同一个接口。但是Kotlin方法没法传lambda表达式，不知道是什么原因","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422001,"discussion_content":"当然不行，你还得声明fun show(block: (str: String)-&amp;gt; Unit){\n}这样的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534202226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19770,"user_name":"刘建","can_delete":false,"product_type":"c3","uid":1184348,"ip_address":"","ucode":"8FAA03E146B16F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RRyBNDRiaQ1rfDf2es0Gw8kWMUtFrITmIIfPBjYUtKNcOVBgO85AsdGlibPdoicBibsIoiatOM2QKKzbjD51kLKPObA/132","comment_is_top":false,"comment_ctime":1534057232,"is_pvip":false,"replies":[{"id":6898,"content":"是不同类型，不支持继承的，没有继承lambda的语法","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1534121458,"ip_address":"","comment_id":19770,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"还有个问题想要咨询一下，lambda表达式和Function是不是两种不同的类型，Kotlin在编译的时候会将lambda表达式编译成匿名的Function内部对象吗，那么lambda这种类型是否支持继承","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421976,"discussion_content":"是不同类型，不支持继承的，没有继承lambda的语法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534121458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19765,"user_name":"刘建","can_delete":false,"product_type":"c3","uid":1184348,"ip_address":"","ucode":"8FAA03E146B16F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RRyBNDRiaQ1rfDf2es0Gw8kWMUtFrITmIIfPBjYUtKNcOVBgO85AsdGlibPdoicBibsIoiatOM2QKKzbjD51kLKPObA/132","comment_is_top":false,"comment_ctime":1534048222,"is_pvip":false,"replies":[{"id":6901,"content":"function实际上与lambda是两种类型，只是编译后会被映射成同一个类型，你要声明lambda类型应该是()-&gt;Unit这种","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1534121749,"ip_address":"","comment_id":19765,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"接口继承了Function，传入Lambda表达式还是不行，请问有没有其他的方式","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421973,"discussion_content":"function实际上与lambda是两种类型，只是编译后会被映射成同一个类型，你要声明lambda类型应该是()-&amp;gt;Unit这种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534121749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19763,"user_name":"刘建","can_delete":false,"product_type":"c3","uid":1184348,"ip_address":"","ucode":"8FAA03E146B16F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RRyBNDRiaQ1rfDf2es0Gw8kWMUtFrITmIIfPBjYUtKNcOVBgO85AsdGlibPdoicBibsIoiatOM2QKKzbjD51kLKPObA/132","comment_is_top":false,"comment_ctime":1534046187,"is_pvip":false,"replies":[{"id":6899,"content":"lambda可以赋值给方法参数，但是不能继承","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1534121534,"ip_address":"","comment_id":19763,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100009801,"comment_content":"是不是因为Java中lambda表达式就是一个语法糖，而在Kotlin中是一种类型，一个类型不能赋值给另外一个定义方法中参数的类型。那么lambda这种类型怎么样继承，应该可以通过继承来解决这个问题","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421972,"discussion_content":"lambda可以赋值给方法参数，但是不能继承","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534121534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1385074,"avatar":"https://static001.geekbang.org/account/avatar/00/15/22/72/4772031d.jpg","nickname":"Melody","note":"","ucode":"3507E941F22BD3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":23006,"discussion_content":"https://www.jianshu.com/p/6386a36c1728 这篇文章讲解为什么 Kotlin 调用 Java 时可以使用 Lambda，而不支持对 Kotlin 的调用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569739263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":16391,"user_name":"小羊","can_delete":false,"product_type":"c3","uid":1000877,"ip_address":"","ucode":"50239B7052BFD2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epgKOrnIOAjzXJgb0f0ljTZLeqrMXYaHic1MKQnPbAzxSKgYxd7K2DlqRW8SibTkwV2MAUZ4OlgRnNw/132","comment_is_top":false,"comment_ctime":1531920836,"is_pvip":false,"replies":[{"id":5690,"content":"👍","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1531961357,"ip_address":"","comment_id":16391,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100009801,"comment_content":"就是和java一样必须lamada表达式必须寄宿在一个函数式接口身上。kt预先定义了22个函数式接口。如果需要更多。就自定义函数式接口。\n这部分 知道 java 的lamada表达式 以及jdk准备的一堆函数式接口 应该就可以更好理解。\njdk8 准备了泛型 返回参数0-1  x 入参 0-2 个函数式接口。以及一堆封装类的接口\n\nkt的入参 回参 看不懂。但是个数就简单粗暴的直接上到22。足足是jdk的 11(22&#47;2)倍。笑XD","like_count":0,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":420780,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1531961357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":38150,"user_name":"书生依旧","can_delete":false,"product_type":"c3","uid":1069827,"ip_address":"","ucode":"4B2181160AD303","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/03/24a892b7.jpg","comment_is_top":false,"comment_ctime":1541960671,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100009801,"comment_content":"天空同学的问题是以为代码写在了 kotlin.jvm.functions 这个包下面，改成 kotlin 下面就好了。\n至于原因，看那个异常提示是 ClassNotFoundException: kotlin.Function23\n注意这个包名是 kotlin，但是 Functions.kt 这个类确实是在 kotlin.jvm.functions 包下。\n为什么编译后的 Class 文件会跑到 kotlin 下面？是不是因为 Functions 里面的接口都声明为了 public 类型？\n\n\n还有一个问题，把 lambda 编译成的 Java 代码看了一下，完全不知道看不出来 invoke 是怎么编译的。","like_count":0}]}