{"id":118122,"title":"06 | 嗨，别忘了UDP这个小兄弟","content":"<p>你好，我是盛延敏，这里是网络编程实战第6讲，欢迎回来。</p><p>前面几讲我们讲述了TCP方面的编程知识，这一讲我们来讲讲UDP方面的编程知识。</p><p>如果说TCP是网络协议的“大哥”，那么UDP可以说是“小兄弟”。这个小兄弟和大哥比，有什么差异呢？</p><p>首先，UDP是一种“数据报”协议，而TCP是一种面向连接的“数据流”协议。</p><p>TCP可以用日常生活中打电话的场景打比方，前面也多次用到了这样的例子。在这个例子中，拨打号码、接通电话、开始交流，分别对应了TCP的三次握手和报文传送。一旦双方的连接建立，那么双方对话时，一定知道彼此是谁。这个时候我们就说，这种对话是有上下文的。</p><p>同样的，我们也可以给UDP找一个类似的例子，这个例子就是邮寄明信片。在这个例子中，发信方在明信片中填上了接收方的地址和邮编，投递到邮局的邮筒之后，就可以不管了。发信方也可以给这个接收方再邮寄第二张、第三张，甚至是第四张明信片，但是这几张明信片之间是没有任何关系的，他们的到达顺序也是不保证的，有可能最后寄出的第四张明信片最先到达接收者的手中，因为没有序号，接收者也不知道这是第四张寄出的明信片；而且，即使接收方没有收到明信片，也没有办法重新邮寄一遍该明信片。</p><!-- [[[read_end]]] --><p>这两个简单的例子，道出了UDP和TCP之间最大的区别。</p><p>TCP是一个面向连接的协议，TCP在IP报文的基础上，增加了诸如重传、确认、有序传输、拥塞控制等能力，通信的双方是在一个确定的上下文中工作的。</p><p>而UDP则不同，UDP没有这样一个确定的上下文，它是一个不可靠的通信协议，没有重传和确认，没有有序控制，也没有拥塞控制。我们可以简单地理解为，在IP报文的基础上，UDP增加的能力有限。</p><p>UDP不保证报文的有效传递，不保证报文的有序，也就是说使用UDP的时候，我们需要做好丢包、重传、报文组装等工作。</p><p>既然如此，为什么我们还要使用UDP协议呢？</p><p>答案很简单，因为UDP比较简单，适合的场景还是比较多的，我们常见的DNS服务，SNMP服务都是基于UDP协议的，这些场景对时延、丢包都不是特别敏感。另外多人通信的场景，如聊天室、多人游戏等，也都会使用到UDP协议。</p><h2>UDP编程</h2><p>UDP和TCP编程非常不同，下面这张图是UDP程序设计时的主要过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/84/30/8416f0055bedce10a3c7d0416cc1f430.png?wh=4034*2631\" alt=\"\"><br>\n我们看到服务器端创建UDP 套接字之后，绑定到本地端口，调用recvfrom函数等待客户端的报文发送；客户端创建套接字之后，调用sendto函数往目标地址和端口发送UDP报文，然后客户端和服务器端进入互相应答过程。</p><p>recvfrom和sendto是UDP用来接收和发送报文的两个主要函数：</p><pre><code>#include &lt;sys/socket.h&gt;\n\nssize_t recvfrom(int sockfd, void *buff, size_t nbytes, int flags, \n　　　　　　　　　　struct sockaddr *from, socklen_t *addrlen); \n\nssize_t sendto(int sockfd, const void *buff, size_t nbytes, int flags,\n                const struct sockaddr *to, socklen_t addrlen); \n</code></pre><p>我们先来看一下recvfrom函数。</p><p>sockfd、buff和nbytes是前三个参数。sockfd是本地创建的套接字描述符，buff指向本地的缓存，nbytes表示最大接收数据字节。</p><p>第四个参数flags是和I/O相关的参数，这里我们还用不到，设置为0。</p><p>后面两个参数from和addrlen，实际上是返回对端发送方的地址和端口等信息，这和TCP非常不一样，TCP是通过accept函数拿到的描述字信息来决定对端的信息。另外UDP报文每次接收都会获取对端的信息，也就是说报文和报文之间是没有上下文的。</p><p>函数的返回值告诉我们实际接收的字节数。</p><p>接下来看一下sendto函数。</p><p>sendto函数中的前三个参数为sockfd、buff和nbytes。sockfd是本地创建的套接字描述符，buff指向发送的缓存，nbytes表示发送字节数。第四个参数flags依旧设置为0。</p><p>后面两个参数to和addrlen，表示发送的对端地址和端口等信息。</p><p>函数的返回值告诉我们实际发送的字节数。</p><p>我们知道， TCP的发送和接收每次都是在一个上下文中，类似这样的过程：</p><p>A连接上: 接收→发送→接收→发送→…</p><p>B连接上: 接收→发送→接收→发送→ …</p><p>而UDP的每次接收和发送都是一个独立的上下文，类似这样：</p><p>接收A→发送A→接收B→发送B →接收C→发送C→ …</p><h2>UDP服务端例子</h2><p>我们先来看一个UDP服务器端的例子：</p><pre><code>#include &quot;lib/common.h&quot;\n\nstatic int count;\n\nstatic void recvfrom_int(int signo) {\n    printf(&quot;\\nreceived %d datagrams\\n&quot;, count);\n    exit(0);\n}\n\n\nint main(int argc, char **argv) {\n    int socket_fd;\n    socket_fd = socket(AF_INET, SOCK_DGRAM, 0);\n\n    struct sockaddr_in server_addr;\n    bzero(&amp;server_addr, sizeof(server_addr));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);\n    server_addr.sin_port = htons(SERV_PORT);\n\n    bind(socket_fd, (struct sockaddr *) &amp;server_addr, sizeof(server_addr));\n\n    socklen_t client_len;\n    char message[MAXLINE];\n    count = 0;\n\n    signal(SIGINT, recvfrom_int);\n\n    struct sockaddr_in client_addr;\n    client_len = sizeof(client_addr);\n    for (;;) {\n        int n = recvfrom(socket_fd, message, MAXLINE, 0, (struct sockaddr *) &amp;client_addr, &amp;client_len);\n        message[n] = 0;\n        printf(&quot;received %d bytes: %s\\n&quot;, n, message);\n\n        char send_line[MAXLINE];\n        sprintf(send_line, &quot;Hi, %s&quot;, message);\n\n        sendto(socket_fd, send_line, strlen(send_line), 0, (struct sockaddr *) &amp;client_addr, client_len);\n\n        count++;\n    }\n\n}\n</code></pre><p>程序的12～13行，首先创建一个套接字，注意这里的套接字类型是“SOCK_DGRAM”，表示的是UDP数据报。</p><p>15～21行和TCP服务器端类似，绑定数据报套接字到本地的一个端口上。</p><p>27行为该服务器创建了一个信号处理函数，以便在响应“Ctrl+C”退出时，打印出收到的报文总数。</p><p>31～42行是该服务器端的主体，通过调用recvfrom函数获取客户端发送的报文，之后我们对收到的报文进行重新改造，加上“Hi”的前缀，再通过sendto函数发送给客户端对端。</p><h2>UDP客户端例子</h2><p>接下来我们再来构建一个对应的UDP客户端。在这个例子中，从标准输入中读取输入的字符串后，发送给服务端，并且把服务端经过处理的报文打印到标准输出上。</p><pre><code>#include &quot;lib/common.h&quot;\n\n# define    MAXLINE     4096\n\nint main(int argc, char **argv) {\n    if (argc != 2) {\n        error(1, 0, &quot;usage: udpclient &lt;IPaddress&gt;&quot;);\n    }\n    \n    int socket_fd;\n    socket_fd = socket(AF_INET, SOCK_DGRAM, 0);\n\n    struct sockaddr_in server_addr;\n    bzero(&amp;server_addr, sizeof(server_addr));\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_port = htons(SERV_PORT);\n    inet_pton(AF_INET, argv[1], &amp;server_addr.sin_addr);\n\n    socklen_t server_len = sizeof(server_addr);\n\n    struct sockaddr *reply_addr;\n    reply_addr = malloc(server_len);\n\n    char send_line[MAXLINE], recv_line[MAXLINE + 1];\n    socklen_t len;\n    int n;\n\n    while (fgets(send_line, MAXLINE, stdin) != NULL) {\n        int i = strlen(send_line);\n        if (send_line[i - 1] == '\\n') {\n            send_line[i - 1] = 0;\n        }\n\n        printf(&quot;now sending %s\\n&quot;, send_line);\n        size_t rt = sendto(socket_fd, send_line, strlen(send_line), 0, (struct sockaddr *) &amp;server_addr, server_len);\n        if (rt &lt; 0) {\n            error(1, errno, &quot;send failed &quot;);\n        }\n        printf(&quot;send bytes: %zu \\n&quot;, rt);\n\n        len = 0;\n        n = recvfrom(socket_fd, recv_line, MAXLINE, 0, reply_addr, &amp;len);\n        if (n &lt; 0)\n            error(1, errno, &quot;recvfrom failed&quot;);\n        recv_line[n] = 0;\n        fputs(recv_line, stdout);\n        fputs(&quot;\\n&quot;, stdout);\n    }\n\n    exit(0);\n}\n</code></pre><p>10～11行创建一个类型为“SOCK_DGRAM”的套接字。</p><p>13～17行，初始化目标服务器的地址和端口。</p><p>28～51行为程序主体，从标准输入中读取的字符进行处理后，调用sendto函数发送给目标服务器端，然后再次调用recvfrom函数接收目标服务器发送过来的新报文，并将其打印到标准输出上。</p><p>为了让你更好地理解UDP和TCP之间的差别，我们模拟一下UDP的三种运行场景，你不妨思考一下这三种场景的结果和TCP的到底有什么不同？</p><h2>场景一：只运行客户端</h2><p>如果我们只运行客户端，程序会一直阻塞在recvfrom上。</p><pre><code>$ ./udpclient 127.0.0.1\n1\nnow sending g1\nsend bytes: 2\n&lt;阻塞在这里&gt;\n</code></pre><p>还记得TCP程序吗？如果不开启服务端，TCP客户端的connect函数会直接返回“Connection refused”报错信息。而在UDP程序里，则会一直阻塞在这里。</p><h2>场景二：先开启服务端，再开启客户端</h2><p>在这个场景里，我们先开启服务端在端口侦听，然后再开启客户端：</p><pre><code>$./udpserver\nreceived 2 bytes: g1\nreceived 2 bytes: g2\n</code></pre><pre><code>$./udpclient 127.0.0.1\ng1\nnow sending g1\nsend bytes: 2\nHi, g1\ng2\nnow sending g2\nsend bytes: 2\nHi, g2\n</code></pre><p>我们在客户端一次输入g1、g2，服务器端在屏幕上打印出收到的字符，并且可以看到，我们的客户端也收到了服务端的回应：“Hi,g1”和“Hi,g2”。</p><h2>场景三: 开启服务端，再一次开启两个客户端</h2><p>这个实验中，在服务端开启之后，依次开启两个客户端，并发送报文。</p><p>服务端：</p><pre><code>$./udpserver\nreceived 2 bytes: g1\nreceived 2 bytes: g2\nreceived 2 bytes: g3\nreceived 2 bytes: g4\n</code></pre><p>第一个客户端：</p><pre><code>$./udpclient 127.0.0.1\nnow sending g1\nsend bytes: 2\nHi, g1\ng3\nnow sending g3\nsend bytes: 2\nHi, g3\n</code></pre><p>第二个客户端：</p><pre><code>$./udpclient 127.0.0.1\nnow sending g2\nsend bytes: 2\nHi, g2\ng4\nnow sending g4\nsend bytes: 2\nHi, g4\n</code></pre><p>我们看到，两个客户端发送的报文，依次都被服务端收到，并且客户端也可以收到服务端处理之后的报文。</p><p>如果我们此时把服务器端进程杀死，就可以看到信号函数在进程退出之前，打印出服务器端接收到的报文个数。</p><pre><code>$ ./udpserver\nreceived 2 bytes: g1\nreceived 2 bytes: g2\nreceived 2 bytes: g3\nreceived 2 bytes: g4\n^C\nreceived 4 datagrams\n</code></pre><p>之后，我们再重启服务器端进程，并使用客户端1和客户端2继续发送新的报文，我们可以看到和TCP非常不同的结果。</p><p>以下就是服务器端的输出，服务器端重启后可以继续收到客户端的报文，这在TCP里是不可以的，TCP断联之后必须重新连接才可以发送报文信息。但是UDP报文的“无连接”的特点，可以在UDP服务器重启之后，继续进行报文的发送，这就是UDP报文“无上下文”的最好说明。</p><pre><code>$ ./udpserver\nreceived 2 bytes: g1\nreceived 2 bytes: g2\nreceived 2 bytes: g3\nreceived 2 bytes: g4\n^C\nreceived 4 datagrams\n$ ./udpserver\nreceived 2 bytes: g5\nreceived 2 bytes: g6\n</code></pre><p>第一个客户端：</p><pre><code>$./udpclient 127.0.0.1\nnow sending g1\nsend bytes: 2\nHi, g1\ng3\nnow sending g3\nsend bytes: 2\nHi, g3\ng5\nnow sending g5\nsend bytes: 2\nHi, g5\n</code></pre><p>第二个客户端：</p><pre><code>$./udpclient 127.0.0.1\nnow sending g2\nsend bytes: 2\nHi, g2\ng4\nnow sending g4\nsend bytes: 2\nHi, g4\ng6\nnow sending g6\nsend bytes: 2\nHi, g6\n</code></pre><h2>总结</h2><p>在这一讲里，我介绍了UDP程序的例子，我们需要重点关注以下两点：</p><ul>\n<li>UDP是无连接的数据报程序，和TCP不同，不需要三次握手建立一条连接。</li>\n<li>UDP程序通过recvfrom和sendto函数直接收发数据报报文。</li>\n</ul><h2>思考题</h2><p>最后给你留两个思考题吧。在第一个场景中，recvfrom一直处于阻塞状态中，这是非常不合理的，你觉得这种情形应该怎么处理呢？另外，既然UDP是请求-应答模式的，那么请求中的UDP报文最大可以是多大呢？</p><p>欢迎你在评论区写下你的思考，我会和你一起讨论。也欢迎把这篇文章分享给你的朋友或者同事，一起讨论一下UDP这个协议。</p>","comments":[{"had_liked":false,"id":123771,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1565754286,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"370932941742","product_id":100032701,"comment_content":"第一个场景中，可以添加超时时间做处理，当然你也可以自己实现一个复杂的请求-确认模式，那这样就跟TCP类似了，HTTP&#47;3就是这样做的。<br><br>用UDP协议发送时，用sendto函数最大能发送数据的长度为：65535- IP头(20) - UDP头(8)＝65507字节。用sendto函数发送数据时，如果发送数据长度大于该值，则函数会返回错误。  <br>由于IP有最大MTU，因此，<br>UDP 包的大小应该是 1500 - IP头(20) - UDP头(8) = 1472(Bytes)<br>TCP 包的大小应该是 1500 - IP头(20) - TCP头(20) = 1460 (Bytes)","like_count":87,"discussions":[{"author":{"id":1590892,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTImmLJCKerl9CI4sTpPDNCUgswp04ybsJ4J6mpJmMlHh43Iibp1RPOLam5PpOv2ZDGcjvGrY94lNRw/132","nickname":"Varphp","note":"","ucode":"889550391E3F75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":117342,"discussion_content":"大佬 你说的是单次传输数据量吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578109513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182516,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","nickname":"王盛武","note":"","ucode":"DE7EF246D3DCE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44115,"discussion_content":"1500是什么意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572931431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1263797,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIcxz0quUK7Q06aNC3qglvvpTQKOanK3suG0qQkK00Q815zF5oiad1wABibCkm8Lk18LmX8UQoUMS5Q/132","nickname":"panda","note":"","ucode":"1CA1C732020F10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1182516,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","nickname":"王盛武","note":"","ucode":"DE7EF246D3DCE8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83822,"discussion_content":"就是网络层最大传输字节数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576467585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44115,"ip_address":""},"score":83822,"extra":""},{"author":{"id":1702997,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fc/55/e03bb6db.jpg","nickname":"i-neojos","note":"","ucode":"1808C25269948A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1182516,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/34/f41d73a4.jpg","nickname":"王盛武","note":"","ucode":"DE7EF246D3DCE8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388176,"discussion_content":"MTU的值在以太网中是1500字节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628644683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44115,"ip_address":""},"score":388176,"extra":""}]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5198,"discussion_content":"这个 65535 字节是怎么来的，规定的的 ? 我吗知道 2 ** 16 = 65536","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566041615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1101226,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","nickname":"卫江","note":"","ucode":"DE2F7A6916F1A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":7324,"discussion_content":"Udp协议内部有一个代表长度的字段是16位，而16位的二进制可以表示0～65535，总共65536个数字！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567493250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5198,"ip_address":""},"score":7324,"extra":""}]}]},{"had_liked":false,"id":137613,"user_name":"tongmin_tsai","can_delete":false,"product_type":"c1","uid":1045090,"ip_address":"","ucode":"D9423E770D5846","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/62/f873cd8f.jpg","comment_is_top":false,"comment_ctime":1569806032,"is_pvip":false,"replies":[{"id":"53871","content":"很简单，1-1500为一个seq=1的包，1501-3000为seq=2的包，根据sequence组装就可以了。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1570699118,"ip_address":"","comment_id":137613,"utype":1}],"discussion_count":3,"race_medal":0,"score":"83174184656","product_id":100032701,"comment_content":"老师，UDP被IP层分包发送后，对端如何保证UDP包整个组合的？比如用UDP发送3000字节，假设拆分2个MTU发送，后一个先到服务端，前一个后到服务端，那应用层接收的时候，UDP怎么组装的？","like_count":19,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469177,"discussion_content":"很简单，1-1500为一个seq=1的包，1501-3000为seq=2的包，根据sequence组装就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570699118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1547763,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9d/f3/3f6dd32b.jpg","nickname":"叶紫真","note":"","ucode":"9CD7567FDB7F1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347849,"discussion_content":"这个是ip分包相关的,与传输层没得好大的关系,由于udp是不可靠传输,所以udp发送的包最好小一些,以免在传输过程中被分包,部分分包被丢包导致整个数据包失效,从而极大的降低了传输效率","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1612339870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303434,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/eTgpwtmwFa0h8XzHR0a3TqWBpuubBdbQicAGAYm8JTslXKNz9icZt05rI0MibTG6NU7A488rJFuq2SqUDZdCoWicjQ/132","nickname":"dipengbin","note":"","ucode":"2945378EABB901","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381993,"discussion_content":"ip协议有一个片偏移，13bit指示这个mtu包在ip包中的偏移位置，除了最后一个包，前面包数据长度必然是8的倍数","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625365028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186124,"user_name":"何赫赫","can_delete":false,"product_type":"c1","uid":1385332,"ip_address":"","ucode":"AB715356D60068","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/74/b81c9f8c.jpg","comment_is_top":false,"comment_ctime":1583762394,"is_pvip":false,"replies":[{"id":"72375","content":"实际上不存在UDP发送缓冲区，因为发往UDP发送缓冲区的包只要超过一定阈值(值很小)就可以发往对端。所以我们一般认为UDP是没有发送缓冲区的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1584173970,"ip_address":"","comment_id":186124,"utype":1}],"discussion_count":2,"race_medal":0,"score":"70303239130","product_id":100032701,"comment_content":"老师，UDP没有发送缓冲区这个概念吗","like_count":16,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486634,"discussion_content":"实际上不存在UDP发送缓冲区，因为发往UDP发送缓冲区的包只要超过一定阈值(值很小)就可以发往对端。所以我们一般认为UDP是没有发送缓冲区的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584173970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014061,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/79/2d/dbb5570f.jpg","nickname":"huadanian","note":"","ucode":"A986E1DB777428","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414199,"discussion_content":"请问老师，UDP有没有接收缓冲区这个概念呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636688307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123677,"user_name":"刘明","can_delete":false,"product_type":"c1","uid":1109382,"ip_address":"","ucode":"5871C54AAE1A81","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/86/5855aaa4.jpg","comment_is_top":false,"comment_ctime":1565742666,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"48810382922","product_id":100032701,"comment_content":"1、一直阻塞会导致程序无法正常退出，可以使用接收超时、IO多路复用的超时机制。<br><br>2、IP和UDP头中都有16bit的长度字段，最长65535字节，去掉头部长度得到UDP数据净荷长度：65535-20-8=65507字节。","like_count":11,"discussions":[{"author":{"id":1043484,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/1c/d323b066.jpg","nickname":"knull","note":"","ucode":"3BFECF3D29F40C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4865,"discussion_content":"最好不要让ip层分片，所以，包大小用链路层大小来确定，比如以太网协议是1500字节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565780873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145992,"user_name":"你好","can_delete":false,"product_type":"c1","uid":1252980,"ip_address":"","ucode":"0B5E024BA58560","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/74/636ea0f3.jpg","comment_is_top":false,"comment_ctime":1572414079,"is_pvip":false,"replies":[{"id":"56654","content":"第一，丢了就丢了，反正UDP就是不可靠的；<br><br>第二，给每条消息加个sequence，收到后再确认，一段时间内没收到，就重发。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1572575135,"ip_address":"","comment_id":145992,"utype":1}],"discussion_count":4,"race_medal":0,"score":"44522087039","product_id":100032701,"comment_content":"多人聊天室使用UDP，消息发出后怎么保证消息可以被收到呀，UDP不是不可靠传输嘛，中间丢了消息咋办呀","like_count":10,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472658,"discussion_content":"第一，丢了就丢了，反正UDP就是不可靠的；\n\n第二，给每条消息加个sequence，收到后再确认，一段时间内没收到，就重发。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572575135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":573206,"discussion_content":"这里给每条消息加序号，是针对UDP的报文还是上层应用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653269980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":472658,"ip_address":""},"score":573206,"extra":""}]},{"author":{"id":1252980,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1e/74/636ea0f3.jpg","nickname":"你好","note":"","ucode":"0B5E024BA58560","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42064,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572579401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1252980,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1e/74/636ea0f3.jpg","nickname":"你好","note":"","ucode":"0B5E024BA58560","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42063,"discussion_content":"哦豁，明白啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572579393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123679,"user_name":"记事本","can_delete":false,"product_type":"c1","uid":1362659,"ip_address":"","ucode":"76F2CAFA309437","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/e3/447aff89.jpg","comment_is_top":false,"comment_ctime":1565743060,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"27335546836","product_id":100032701,"comment_content":"recv from会导致进程一直阻塞，可以通过setsocketopt接口设置TIMEOUT  超时后退出.","like_count":6,"discussions":[{"author":{"id":2776006,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er5SNsSoiaZw4Qzd2ctH4vtibHQordcLrYsX43oFZFloRTId0op617mcGlrvGx33U8ic2LTgdicoEFPvQ/132","nickname":"Frankey","note":"","ucode":"2F09BC2500C9E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567388,"discussion_content":"    struct timeval tv_out;\n\n    tv_out.tv_sec = 2;//等待10秒\n\n    tv_out.tv_usec = 0;\n\n    setsockopt(socket_fd,SOL_SOCKET,SO_RCVTIMEO,&amp;tv_out, sizeof(tv_out));","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650898666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166719,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1577554082,"is_pvip":false,"replies":[{"id":"63872","content":"我的本意是使用超时或者非阻塞来解","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1577601631,"ip_address":"","comment_id":166719,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23052390562","product_id":100032701,"comment_content":"第一个思考题 另起一个线程进行recvfrom","like_count":6,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479602,"discussion_content":"我的本意是使用超时或者非阻塞来解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577601631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125303,"user_name":"范龙dragon","can_delete":false,"product_type":"c1","uid":1157519,"ip_address":"","ucode":"D9CEADE6B6BED4","user_header":"https://static001.geekbang.org/account/avatar/00/11/a9/8f/a998a456.jpg","comment_is_top":false,"comment_ctime":1566143032,"is_pvip":false,"replies":[{"id":"46105","content":"好问题，fgets函数会&quot;默默&quot;的给我们加上\\0","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566214199,"ip_address":"","comment_id":125303,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18746012216","product_id":100032701,"comment_content":"客户端代码的29行sendline数组之前没有初始化数组元素为0，直接用strlen应该会有问题吧，strlen不是以0作为结束标志吗？","like_count":4,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463520,"discussion_content":"好问题，fgets函数会&amp;quot;默默&amp;quot;的给我们加上\\0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566214199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1252980,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1e/74/636ea0f3.jpg","nickname":"你好","note":"","ucode":"0B5E024BA58560","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224938,"discussion_content":"我觉得在写代码的时候采取&#34;防御姿势&#34;比较稳妥，初始化一下，如果调用某些函数不给做默认处理我们不知道那就出 bug 了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586338037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123681,"user_name":"Godblesser","can_delete":false,"product_type":"c1","uid":1250855,"ip_address":"","ucode":"10C21F330EDA6B","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/27/38a32199.jpg","comment_is_top":false,"comment_ctime":1565743231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18745612415","product_id":100032701,"comment_content":"recvfrom函数可以设置超时，当限定时间内未接收到服务器端回复，打印超时消息并退出","like_count":4},{"had_liked":false,"id":251584,"user_name":"YUAN","can_delete":false,"product_type":"c1","uid":2153838,"ip_address":"","ucode":"98EF68EEE21893","user_header":"https://static001.geekbang.org/account/avatar/00/20/dd/6e/8f6f79d2.jpg","comment_is_top":false,"comment_ctime":1601704305,"is_pvip":false,"replies":[{"id":"92058","content":"基本是这样的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1601871457,"ip_address":"","comment_id":251584,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14486606193","product_id":100032701,"comment_content":"udp之所以sendto要目的地址是因为他是非连接的，否则不知道将数据发给谁，recvfrom要发送方地址也是因为udp是非连接的，有了from内核就可以判定将数据上传给谁（应用进程）。是这样吗？","like_count":4,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506557,"discussion_content":"基本是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601871457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226121,"user_name":"郑祖煌","can_delete":false,"product_type":"c1","uid":1469608,"ip_address":"","ucode":"49A0D2E3279826","user_header":"https://static001.geekbang.org/account/avatar/00/16/6c/a8/1922a0f5.jpg","comment_is_top":false,"comment_ctime":1591954013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14476855901","product_id":100032701,"comment_content":"1.可以用非阻塞状态来做，或者用select 用户复用的弄。就是不阻塞，而是一定的时间内去轮询看有没有包到达。或者说当服务器有包达到事件通知客户端，客户端再去服务器那边读取数据。<br>2. 用UDP协议发送时，用sendto函数最大能发送数据的长度为：如果是本地套接字的话就是655356。如果是非本地套接字而是走网络端的话<br>由于IP有最大MTU，因此，<br>UDP 包的大小应该是 1500 - IP头(20) - UDP头(8) = 1472(Bytes)<br>TCP 包的大小应该是 1500 - IP头(20) - TCP头(20) = 1460 (Bytes)","like_count":3},{"had_liked":false,"id":154081,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1574379935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14459281823","product_id":100032701,"comment_content":"小结<br>1：UDP是一个不可靠的通信协议，没有重传和确认，没有有序控制，也没有拥塞控制。<br>2：UDP 不保证报文的有效传递，不保证报文的有序，也就是说使用 UDP 的时候，我们需要做好丢包、重传、报文组装等工作。<br>3： UDP 相对TCP比较简单，适合的场景还是比较多的，我们常见的 DNS 服务，SNMP 服务都是基于 UDP 协议的，这些场景对时延、丢包都不是特别敏感。另外多人通信的场景，如聊天室、多人游戏等，也都会使用到 UDP 协议。<br>4：把UDP协议比做发生明信片确实生动形象，我告诉邮局送到那些地址，具体送到没有，需要接收端主动的响应（注意：这里的响应者更靠上层）协议本身不会进行重传&#47;确认&#47;时序&#47;拥塞等控制。","like_count":3},{"had_liked":false,"id":131359,"user_name":"kissingers","can_delete":false,"product_type":"c1","uid":1135299,"ip_address":"","ucode":"615151808CF628","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKzqiaZnBw2myRWY802u48Rw3W2zDtKoFQ6vN63m4FdyjibM21FfaOYe8MbMpemUdxXJeQH6fRdVbZA/132","comment_is_top":false,"comment_ctime":1567730257,"is_pvip":false,"replies":[{"id":"50818","content":"流就像水流，一直持续不断的流淌，只不过流淌的是0101这样的比特流。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568195179,"ip_address":"","comment_id":131359,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14452632145","product_id":100032701,"comment_content":"老师，TCP 流，UDP包，流的说法怎么理解？","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466408,"discussion_content":"流就像水流，一直持续不断的流淌，只不过流淌的是0101这样的比特流。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568195179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407644,"discussion_content":"另外ip报文，在广义上也属于data gram","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635079313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407643,"discussion_content":"stream在英文里指不断的并且有上下文的数据，也就是TCP这种；gram是不连续的，无上下文的，也就是udp这种。从中文字面上没有特别是直接的含义，记住就行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635079273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111870,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2Az5uTh9ZGVA7yQCj1BXtXuicPRkvJicA97AoN9xX3bnPcUYglTMXJeZeoVbPQeJA7ICvQhR3KQ0w/132","nickname":"日不落帝国","note":"","ucode":"6A11ABBD8AC438","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24780,"discussion_content":"学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570260219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123747,"user_name":"zhchnchn","can_delete":false,"product_type":"c1","uid":1110218,"ip_address":"","ucode":"2219E40ED134D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/ca/4560f06b.jpg","comment_is_top":false,"comment_ctime":1565750245,"is_pvip":false,"replies":[{"id":"45956","content":"不是RST包，RST的意思是connection reset；这里connection refused是对方的TCP协议栈发送的，工作在操作系统内核中。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566130630,"ip_address":"","comment_id":123747,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14450652133","product_id":100032701,"comment_content":"如果不开启服务端，TCP 客户端的 connect 函数会直接返回“Connection refused”报错信息。而在 UDP 程序里，则会一直阻塞在这里。<br>-------------------------<br>这个地方不太理解。请问老师,对TCP来说，收到“Connection refused”报错信息，表明收到了服务端的RST包，如果服务端不开启，谁负责发送RST包呢?","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462796,"discussion_content":"不是RST包，RST的意思是connection reset；这里connection refused是对方的TCP协议栈发送的，工作在操作系统内核中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566130630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109382,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/86/5855aaa4.jpg","nickname":"刘明","note":"","ucode":"5871C54AAE1A81","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4843,"discussion_content":"是由内核协议栈发送的RST，而不是应用程序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565767105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123690,"user_name":"江永枫","can_delete":false,"product_type":"c1","uid":1015357,"ip_address":"","ucode":"6206B16BB389B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/3d/e97e661c.jpg","comment_is_top":false,"comment_ctime":1565743912,"is_pvip":true,"replies":[{"id":"45958","content":"很快就会讲到了 ：）","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566130667,"ip_address":"","comment_id":123690,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14450645800","product_id":100032701,"comment_content":"关于阻塞io，可以考虑使用多线程模型去提升性能，或者结合io多路复用来处理能力。<br><br><br>https:&#47;&#47;m.php.cn&#47;article&#47;410029.html","like_count":3,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462771,"discussion_content":"很快就会讲到了 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566130667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283745,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1615902170,"is_pvip":false,"replies":[{"id":"103189","content":"1. TCP有序传输的意思是对于传送的字节流，接收端总是保证按照发送的顺序来接收；<br><br>2.TCP是面向连接的，UDP没有连接的概念；<br><br>3.当然可以，但是意义不大。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1616314181,"ip_address":"","comment_id":283745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10205836762","product_id":100032701,"comment_content":"老师好，有 3 个问题请教一下：<br>1. TCP 有序传输的意思是：需要等到当前发送的包 ACK 之后，才发下一个包么？还是说可以一直发消息，收到 ACK 之后再确认对应的包发送成功？<br><br>2. 关于 TCP 和 UDP 连接，我可以这么理解么？<br>TCP 连接之后直到关闭，这期间发的消息，比如 client 发给(send 函数) server，<br>然后 server 回复(不知道用啥函数写回，也是 send 函数么？) client；<br>client 又继续发给 server，继续重复刚才的步骤....，<br>走的都是同一个连接。<br><br>而 UDP，client 发给（sendto 函数） server 是一个连接。而 server 回复（sendto 函数） client，又是另一个连接。<br><br>3. 下面的循环发送，我\b甚至是可以动态更改对端 client_addr 地址和端口信息的吧？<br>for (;;) {<br>  sendto(socket_fd, send_line, strlen(send_line), 0, (struct sockaddr *) &amp;client_addr, client_len);<br>}","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517136,"discussion_content":"1. TCP有序传输的意思是对于传送的字节流，接收端总是保证按照发送的顺序来接收；\n\n2.TCP是面向连接的，UDP没有连接的概念；\n\n3.当然可以，但是意义不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616314181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146382,"user_name":"流浪在寂寞古城","can_delete":false,"product_type":"c1","uid":1105678,"ip_address":"","ucode":"FE90DCD5DC3A20","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/0e/4e2b06d5.jpg","comment_is_top":false,"comment_ctime":1572511018,"is_pvip":false,"replies":[{"id":"56655","content":"👍","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1572575173,"ip_address":"","comment_id":146382,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10162445610","product_id":100032701,"comment_content":"https:&#47;&#47;github.com&#47;worsun&#47;study&#47;tree&#47;master&#47;hack_time&#47;socket_code&#47;6","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472833,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572575173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2184325,"avatar":"https://static001.geekbang.org/account/avatar/00/21/54/85/ab5148ce.jpg","nickname":"duckman","note":"","ucode":"0184C26C4B6C1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332110,"discussion_content":"server端每次接收消息的client端port都是随机的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607067113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2184325,"avatar":"https://static001.geekbang.org/account/avatar/00/21/54/85/ab5148ce.jpg","nickname":"duckman","note":"","ucode":"0184C26C4B6C1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332109,"discussion_content":"发现, 客户端在不绑定端口的情况下, 每次sendto的时候，操作系统都会随机给客户端一个端口使用\n\n\n```c\nprintf(&#34;%u:%d> received %d bytes: %s\\n&#34;, client_addr.sin_addr.s_addr, client_addr.sin_port, n, message);\n````\n\n16777343:7670> received 5 bytes: hello\n16777343:52932> received 6 bytes: worldd\n16777343:52932> received 11 bytes: hoa rea you\n16777343:7670> received 19 bytes: what are you doing?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607067064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129250,"user_name":"马留","can_delete":false,"product_type":"c1","uid":1513768,"ip_address":"","ucode":"B3C0ED5C1F86DE","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/28/f4b4ed22.jpg","comment_is_top":false,"comment_ctime":1567071201,"is_pvip":false,"replies":[{"id":"48196","content":"改下程序，试试就知道了，最好把你的结果贴上来，大家一起研究。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567130894,"ip_address":"","comment_id":129250,"utype":1}],"discussion_count":5,"race_medal":0,"score":"10157005793","product_id":100032701,"comment_content":"如果对udp套接字调用了listen函数，会怎么样呢？","like_count":2,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465358,"discussion_content":"改下程序，试试就知道了，最好把你的结果贴上来，大家一起研究。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567130894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1723983,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/4e/4f/b0b24789.jpg","nickname":"学怪","note":"","ucode":"FE40B40460B0C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74919,"discussion_content":"调用了好像没发现啥区别，我直接就加了个listen函数，测试了两种情况，一个是多个udp发起通信，一个是将udp服务器端关闭，再次重启，发现好像还是可以通信。希望有人可以解答下。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575706042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1727230,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/5a/fe/2543c7be.jpg","nickname":"鲸落南北","note":"","ucode":"A24EFCF256DA10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1723983,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/4e/4f/b0b24789.jpg","nickname":"学怪","note":"","ucode":"FE40B40460B0C7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297578,"discussion_content":"我加上了listen(),效果和没添加一样，个人任务listen()在这里没什么作用，只是起到监听这个fd而\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596976025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74919,"ip_address":""},"score":297578,"extra":""}]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41025,"discussion_content":"老兄试了吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572330623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1683553,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b0/61/353737a6.jpg","nickname":"do more","note":"","ucode":"90303FF14B3A14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385526,"discussion_content":"服务端增加listen，返回错误，提示操作不支持（Listen failed, errno: 95）\n\nret = listen(fd, 1);\n    if (0 > ret) {\n        cout << &#34;Listen failed, errno: &#34; << errno << endl;\n        return -1;\n    }","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627112117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317997,"user_name":"胜辉（大V）","can_delete":false,"product_type":"c1","uid":1662117,"ip_address":"","ucode":"3C13BFCD82D4EC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","comment_is_top":false,"comment_ctime":1635096552,"is_pvip":true,"replies":[{"id":"115265","content":"我觉得不用啊，程序是用了strlen重新计算了新的send_line的长度的。<br><br>sendto(socket_fd, send_line, strlen(send_line), 0, (struct sockaddr *) &amp;client_addr, client_len);<br>","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1635128798,"ip_address":"","comment_id":317997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5930063848","product_id":100032701,"comment_content":"示例程序在我的测试机(ubuntu 20.04）上有几个报错。除了include需要添加多个库，还有就是sprintf不分需要改为如下：<br>        char send_line[MAXLINE+4];<br>        sprintf(send_line, &quot;Hi, %s&quot;, message);<br><br>因为&quot;Hi, &quot;本身占用了额外的4个字节，所以导致send_line跟&quot;Hi, &quot;+message的长度不匹配，需要修改send_line为message长度加4。不知道其他同学的测试环境那里如何？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529064,"discussion_content":"我觉得不用啊，程序是用了strlen重新计算了新的send_line的长度的。\n\nsendto(socket_fd, send_line, strlen(send_line), 0, (struct sockaddr *) &amp;amp;client_addr, client_len);\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635128798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283749,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1615903187,"is_pvip":false,"replies":[{"id":"103190","content":"阻塞是因为服务端没有开启，无法从服务端得到响应，你看一下程序原文，sendto已经执行成功了；<br><br>明信片的比喻对的，这里sendto已经成功执行了，相当于把明信片放到邮筒了，原程序里是希望通过recvfrom来或得服务端的反馈。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1616314475,"ip_address":"","comment_id":283749,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5910870483","product_id":100032701,"comment_content":"如果不开启服务端，而在 UDP 程序里，则会一直阻塞在这里（sendto）。<br><br>阻塞是为了等待消息发出去之后的 ACK 确认么？<br>不是说把明信片放到邮筒就不管了么？<br>邮筒可以认为是 IP 协议栈（即网络接口层？）吧？把 udp 包传递给 IP 层就不管了。<br><br>谢谢老师","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517137,"discussion_content":"阻塞是因为服务端没有开启，无法从服务端得到响应，你看一下程序原文，sendto已经执行成功了；\n\n明信片的比喻对的，这里sendto已经成功执行了，相当于把明信片放到邮筒了，原程序里是希望通过recvfrom来或得服务端的反馈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616314475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228171,"user_name":"Ray","can_delete":false,"product_type":"c1","uid":1253774,"ip_address":"","ucode":"A7059C7D505AA0","user_header":"","comment_is_top":false,"comment_ctime":1592576291,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5887543587","product_id":100032701,"comment_content":"关于TCP 包的大小： 1500 - IP头(20) - TCP头(20) = 1460 (Bytes)，但这里应该还有一个细节，就是通常TCP会开启一个12字节的时间戳，这种情况下，实际的的应用数据只能是1460 - 12=1448字节。","like_count":1},{"had_liked":false,"id":217564,"user_name":"rongyefeng","can_delete":false,"product_type":"c1","uid":1959482,"ip_address":"","ucode":"9A15D947E9D645","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e6/3a/382cf024.jpg","comment_is_top":false,"comment_ctime":1589534280,"is_pvip":false,"replies":[{"id":"80635","content":"这两个基本是等价的: <br><br> &lt;sys&#47;socket.h&gt;<br>#define PF_INET         AF_INET<br>","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1589704692,"ip_address":"","comment_id":217564,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5884501576","product_id":100032701,"comment_content":"老师，你之前说过，创建套接字应该使用PF_INET，初始化套接字结构体地址才使用AF_INET，我看你在创建套接字的时候使用AF_INET。","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495181,"discussion_content":"这两个基本是等价的: \n\n &amp;lt;sys/socket.h&amp;gt;\n#define PF_INET         AF_INET\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589704692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213551,"user_name":"JJj","can_delete":false,"product_type":"c1","uid":1196463,"ip_address":"","ucode":"EA53F2CEAFCFF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/af/4307867a.jpg","comment_is_top":false,"comment_ctime":1588473253,"is_pvip":false,"replies":[{"id":"79176","content":"不需要的，当然你也可以这么做，这么做的结果就是不让内核根据一定的算法选择端口。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1588497013,"ip_address":"","comment_id":213551,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5883440549","product_id":100032701,"comment_content":"服务端要发送数据给客户端，客户端不需要bind吗？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493812,"discussion_content":"不需要的，当然你也可以这么做，这么做的结果就是不让内核根据一定的算法选择端口。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588497013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163538,"user_name":"........","can_delete":false,"product_type":"c1","uid":1236198,"ip_address":"","ucode":"D54E7F428E7F49","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/e6/ea4b2c10.jpg","comment_is_top":false,"comment_ctime":1576738577,"is_pvip":false,"replies":[{"id":"63903","content":"是的，每次能读取多少，取决于对方发送了多少，如果对方发送的没有够1024，或者是1024+256这样的，就必须再重复去读，用readn就是这个目的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1577604200,"ip_address":"","comment_id":163538,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5871705873","product_id":100032701,"comment_content":"老师, 请问一下, 这个read函数, 是不是每次可以不读够1024字节, 所以才需要使用readn取封装一下","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478437,"discussion_content":"是的，每次能读取多少，取决于对方发送了多少，如果对方发送的没有够1024，或者是1024+256这样的，就必须再重复去读，用readn就是这个目的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577604200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154718,"user_name":"奔奔奔跑","can_delete":false,"product_type":"c1","uid":1210265,"ip_address":"","ucode":"F86EC205DCAACE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gswh7ibY4tubXhp0BXOmV2pXZ3XsXic1d942ZMAEgWrRSF99bDskOTsG1g172ibORXxSCWTn9HWUX5vSSUVWU5I4A/132","comment_is_top":false,"comment_ctime":1574519335,"is_pvip":false,"replies":[{"id":"60380","content":"那走的就是两条不同的连接了<br>A--&gt;B<br>B--&gt;A<br>","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1575186704,"ip_address":"","comment_id":154718,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5869486631","product_id":100032701,"comment_content":"老师，学完这章我有个不理解的地方，UDP是客户端向服务端发消息，服务端收到客户端的报文，根据报文的地址在传消息回去，因此服务端不能主动向客户端发消息。那么客户端如果也bind，那么服务端也能向客户端发消息了，老师我这么理解对吗","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475559,"discussion_content":"那走的就是两条不同的连接了\nA--&amp;gt;B\nB--&amp;gt;A\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575186704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210265,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gswh7ibY4tubXhp0BXOmV2pXZ3XsXic1d942ZMAEgWrRSF99bDskOTsG1g172ibORXxSCWTn9HWUX5vSSUVWU5I4A/132","nickname":"奔奔奔跑","note":"","ucode":"F86EC205DCAACE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":67881,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575186765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146383,"user_name":"流浪在寂寞古城","can_delete":false,"product_type":"c1","uid":1105678,"ip_address":"","ucode":"FE90DCD5DC3A20","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/0e/4e2b06d5.jpg","comment_is_top":false,"comment_ctime":1572511061,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5867478357","product_id":100032701,"comment_content":"https:&#47;&#47;github.com&#47;worsun&#47;study&#47;tree&#47;master&#47;hack_time&#47;socket_code&#47;6<br>自己敲了可以运行的代码","like_count":1,"discussions":[{"author":{"id":2157800,"avatar":"https://static001.geekbang.org/account/avatar/00/20/ec/e8/9fe27914.jpg","nickname":"熊。","note":"","ucode":"69D56BD6C72FE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368674,"discussion_content":"client.c需要修改一行代码，inet_pton(AF_INET, argv[1], &amp;server_addr.sin_addr);\n这里的argv[1]改为主机local loopback地址即可&#34;127.0.0.1&#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618799132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135273,"user_name":"云端","can_delete":false,"product_type":"c1","uid":1625449,"ip_address":"","ucode":"B4E1F270C349B3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epUgnMApgafcbOicQJYOlApkHf6AzxF5edzeXAtVNhwOZTh3WB5wtIrbf1Algg6Axy5rEfZjj0B6Ng/132","comment_is_top":false,"comment_ctime":1569115460,"is_pvip":false,"replies":[{"id":"52190","content":"是的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1569406292,"ip_address":"","comment_id":135273,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864082756","product_id":100032701,"comment_content":"老师您好:<br>阻塞=进程或线程挂起？","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468121,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569406292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132467,"user_name":"破晓^_^","can_delete":false,"product_type":"c1","uid":1149592,"ip_address":"","ucode":"3224920095AC9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/8a/98/2be9d17b.jpg","comment_is_top":false,"comment_ctime":1568128826,"is_pvip":false,"replies":[{"id":"50764","content":"笔误，感谢斧正，我来修正。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1568184064,"ip_address":"","comment_id":132467,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863096122","product_id":100032701,"comment_content":"函数sendto原型参数写错了,应该为ssize_t sendto(int sockfd, const void *buff, size_t nbytes, int flags,const struct sockaddr *to, socklen_t addrlen);  最后一个参数与recvfrom不一样.","like_count":1,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466954,"discussion_content":"笔误，感谢斧正，我来修正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568184064,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351515,"user_name":"云会宾","can_delete":false,"product_type":"c1","uid":2696335,"ip_address":"","ucode":"8DFC2DD03D7E51","user_header":"https://static001.geekbang.org/account/avatar/00/29/24/8f/77140e34.jpg","comment_is_top":false,"comment_ctime":1657860746,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657860746","product_id":100032701,"comment_content":"666，这种对比还是比较强烈，感觉把变化讲出来能使人更加掌控！","like_count":0},{"had_liked":false,"id":350758,"user_name":"smiler","can_delete":false,"product_type":"c1","uid":3011086,"ip_address":"","ucode":"D3E73AFB2912FA","user_header":"https://static001.geekbang.org/account/avatar/00/2d/f2/0e/4112b669.jpg","comment_is_top":false,"comment_ctime":1657175468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657175468","product_id":100032701,"comment_content":"问一个小白的问题，为什么服务端代码第33行message最后一位要设为0","like_count":0},{"had_liked":false,"id":343542,"user_name":"Frankey","can_delete":false,"product_type":"c1","uid":2776006,"ip_address":"","ucode":"2F09BC2500C9E7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er5SNsSoiaZw4Qzd2ctH4vtibHQordcLrYsX43oFZFloRTId0op617mcGlrvGx33U8ic2LTgdicoEFPvQ/132","comment_is_top":false,"comment_ctime":1650898691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650898691","product_id":100032701,"comment_content":"针对接收设置超时。<br><br>    struct timeval tv_out;<br><br>    tv_out.tv_sec = 2;&#47;&#47;等待10秒<br><br>    tv_out.tv_usec = 0;<br><br>    setsockopt(socket_fd,SOL_SOCKET,SO_RCVTIMEO,&amp;tv_out, sizeof(tv_out));","like_count":0},{"had_liked":false,"id":335071,"user_name":"风清扬","can_delete":false,"product_type":"c1","uid":1047043,"ip_address":"","ucode":"651F1390B64953","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/03/619e3e48.jpg","comment_is_top":false,"comment_ctime":1645284140,"is_pvip":true,"replies":[{"id":"122808","content":"两个字符哦，g和1。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1645883003,"ip_address":"","comment_id":335071,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645284140","product_id":100032701,"comment_content":"场景一：只运行客户端 这里是不是有点问题<br>now sending g1<br>send bytes: 2<br>看输入那里只有1？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553423,"discussion_content":"两个字符哦，g和1。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645883003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332361,"user_name":"淡C","can_delete":false,"product_type":"c1","uid":2696647,"ip_address":"","ucode":"046DE6F5301044","user_header":"https://static001.geekbang.org/account/avatar/00/29/25/c7/edd74dfb.jpg","comment_is_top":false,"comment_ctime":1643186470,"is_pvip":false,"replies":[{"id":"122023","content":"就是记个数啊(PS.好像也没打印出来 :) )","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1644729741,"ip_address":"","comment_id":332361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643186470","product_id":100032701,"comment_content":"服务端的count++有什么用<br>","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550773,"discussion_content":"就是记个数啊(PS.好像也没打印出来 :) )","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644729741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323468,"user_name":"Geek_88aaae","can_delete":false,"product_type":"c1","uid":2847806,"ip_address":"","ucode":"93C0D74E256C18","user_header":"","comment_is_top":false,"comment_ctime":1637917036,"is_pvip":false,"replies":[{"id":"117467","content":"服务端要重新启动才可以。","user_name":"作者回复","user_name_real":"编辑","uid":"1618647","ctime":1638087396,"ip_address":"","comment_id":323468,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637917036","product_id":100032701,"comment_content":"老师您好，为什么我在进行第三个实验的过程中，在服务端关闭时，客户端发送数据的数据没有在服务端重新打开时收到呢？客户端也一直阻塞在了recv from","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534069,"discussion_content":"服务端要重新启动才可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638087396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318092,"user_name":"王蓬勃","can_delete":false,"product_type":"c1","uid":2450040,"ip_address":"","ucode":"DDF4CCE9728DCF","user_header":"","comment_is_top":false,"comment_ctime":1635147762,"is_pvip":false,"replies":[{"id":"115711","content":"UDP比TCP安全？这个我好像没找到文中的出处哦。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1635669709,"ip_address":"","comment_id":318092,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635147762","product_id":100032701,"comment_content":"为什么说UDP比TCP安全，但不可靠？这个UDP的安全体现在哪里？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529100,"discussion_content":"UDP比TCP安全？这个我好像没找到文中的出处哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635669709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305659,"user_name":"小叶","can_delete":false,"product_type":"c1","uid":1851730,"ip_address":"","ucode":"EFD624AD6B2686","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ooYDTtTQHL9CZQmonDOQSC4Af9S4uqicXzUicOqEJqSOtHyOZ81PTpxcTqK5ibNHsaNWJIuHiaVcxB8gIo9RNXsshA/132","comment_is_top":false,"comment_ctime":1628089343,"is_pvip":false,"replies":[{"id":"111681","content":"后文会讲到，莫心急哈。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1629636983,"ip_address":"","comment_id":305659,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1628089343","product_id":100032701,"comment_content":"能不能讲下阻塞跟非阻塞先呢，一说到阻塞就不知道是什么了","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524470,"discussion_content":"后文会讲到，莫心急哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629636983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294199,"user_name":"--SNIPER","can_delete":false,"product_type":"c1","uid":1389362,"ip_address":"","ucode":"7439EC0458BD7F","user_header":"https://static001.geekbang.org/account/avatar/00/15/33/32/8f304f6c.jpg","comment_is_top":false,"comment_ctime":1621827111,"is_pvip":false,"replies":[{"id":"107193","content":"正常的，UDP的状态我看ss列出来的都是UNCONN状态，应该表示的开启服务的状态。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1622379218,"ip_address":"","comment_id":294199,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621827111","product_id":100032701,"comment_content":"老师 您好<br>ss -anlpx发现存在3w多的udp端口占用，state都是UNCONN，这类是未close套接字吗，正常吗<br>期待您的回复","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520554,"discussion_content":"正常的，UDP的状态我看ss列出来的都是UNCONN状态，应该表示的开启服务的状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622379218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250037,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1600913441,"is_pvip":false,"replies":[{"id":"92053","content":"我就爱听这个哈, 嘿嘿。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1601871000,"ip_address":"","comment_id":250037,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600913441","product_id":100032701,"comment_content":"老师这个讲解还是相当明白的，这个通过举例子来比较“打电话”的TCP，“发邮件”的UDP，来比较。同样通过服务器重启是否能继续接受，来说明为什么UDP是无连接的，TCP是面向连接的。","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506111,"discussion_content":"我就爱听这个哈, 嘿嘿。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601871000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224239,"user_name":"云淡风轻","can_delete":false,"product_type":"c1","uid":1121817,"ip_address":"","ucode":"D6903A0FCEBC58","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/19/a235f31d.jpg","comment_is_top":false,"comment_ctime":1591322056,"is_pvip":false,"replies":[{"id":"84261","content":"你这里有一个理解误区，message是从网络协议栈拷贝到我们应用程序里的，协议栈肯定会保持一个顺序的，这样我们每次&quot;读出数据--处理&quot;，并不会发生覆盖的现象。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1592739710,"ip_address":"","comment_id":224239,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591322056","product_id":100032701,"comment_content":"请教老师：<br>问题：<br>服务器端 recvfrom 读取客户端的信息到message中，如果多个客户端一直发信息，后来的 message 会将前面的 message 覆盖掉吗？<br>测试：<br>服务器端将 message 回传给客户端，发现没有覆盖的现象。<br>疑问：<br>请问老师，这里面是什么原理","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497411,"discussion_content":"你这里有一个理解误区，message是从网络协议栈拷贝到我们应用程序里的，协议栈肯定会保持一个顺序的，这样我们每次&amp;quot;读出数据--处理&amp;quot;，并不会发生覆盖的现象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592739710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222760,"user_name":"Geek_63bb29","can_delete":false,"product_type":"c1","uid":2017041,"ip_address":"","ucode":"65C27FA7531722","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/5kv7IqibneNnMLqtWZQR5f1et8lJmoxiaU43Ttzz3zqW7QzBqMkib8GCtImKsms7PPbWmTB51xRnZQAnRPfA1wVaw/132","comment_is_top":false,"comment_ctime":1590906963,"is_pvip":false,"replies":[{"id":"82176","content":"建议找点资料先自学一下，我文章里的CMake还是比较简单的用法的，有不懂的你可以贴出来大家一起讨论下。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1590931111,"ip_address":"","comment_id":222760,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1590906963","product_id":100032701,"comment_content":"老师，cmake可以讲解或详细注释一下吗？有点弄不清楚这个","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496907,"discussion_content":"建议找点资料先自学一下，我文章里的CMake还是比较简单的用法的，有不懂的你可以贴出来大家一起讨论下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590931111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2017041,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/5kv7IqibneNnMLqtWZQR5f1et8lJmoxiaU43Ttzz3zqW7QzBqMkib8GCtImKsms7PPbWmTB51xRnZQAnRPfA1wVaw/132","nickname":"Geek_63bb29","note":"","ucode":"65C27FA7531722","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276853,"discussion_content":"好的，谢谢老师，今天捣鼓了一天，明白了一些CMake常用的用法啦，感谢😊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590942002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216154,"user_name":"pc","can_delete":false,"product_type":"c1","uid":1652836,"ip_address":"","ucode":"1AD538B9A900B6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","comment_is_top":false,"comment_ctime":1589197567,"is_pvip":false,"replies":[{"id":"80637","content":"是的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1589705109,"ip_address":"","comment_id":216154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589197567","product_id":100032701,"comment_content":"所以服务端的recvfrom(socket_fd, message, MAXLINE, 0, (struct sockaddr *) &amp;client_addr, &amp;client_len)也会阻塞是么？等任意一个客户端发消息过来了，就receive到message而继续执行？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494694,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589705109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204127,"user_name":"你好","can_delete":false,"product_type":"c1","uid":1252980,"ip_address":"","ucode":"0B5E024BA58560","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/74/636ea0f3.jpg","comment_is_top":false,"comment_ctime":1586338170,"is_pvip":false,"replies":[{"id":"76796","content":"流就是0101的序列不断周而复始的意思，包是指协议层次，是0101序列的一次包装，并且有每个包装都会有一些头信息、校验啊什么的。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1586680538,"ip_address":"","comment_id":204127,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586338170","product_id":100032701,"comment_content":"老师，🙋‍♂️！<br>我有个问题：<br>不管是流、包在传输的过程中不都是 0101 的二进制序列嘛？<br>如果是的话那这个 流、包 在哪个层次体现呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491082,"discussion_content":"流就是0101的序列不断周而复始的意思，包是指协议层次，是0101序列的一次包装，并且有每个包装都会有一些头信息、校验啊什么的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586680538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202433,"user_name":"ray","can_delete":false,"product_type":"c1","uid":1717235,"ip_address":"","ucode":"10962C711CBC11","user_header":"","comment_is_top":false,"comment_ctime":1585987904,"is_pvip":false,"replies":[{"id":"75820","content":"你是跑了课程中的udp client的例子么？","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1586084525,"ip_address":"","comment_id":202433,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1585987904","product_id":100032701,"comment_content":"老师您好，<br>我用netstat -unlp，发现udp client也会持续监听在一个port。<br>tcp client用netstat -tnlp却看不到，用netstat -tnp才行，可以理解因为client没有监听在一个port上，因此没有出现。<br><br>这边我搞不明白，为什么udp client会持续监听在一个port上，跟tcp client的行为不同？<br><br>谢谢老师的解答^^","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490582,"discussion_content":"你是跑了课程中的udp client的例子么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586084525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1717235,"avatar":"","nickname":"ray","note":"","ucode":"10962C711CBC11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222767,"discussion_content":"没错，我是跑了ch6的范例，发现这一现象！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586173386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192486,"user_name":"Geek_wannaBgeek","can_delete":false,"product_type":"c1","uid":1643435,"ip_address":"","ucode":"6F42F4181981C3","user_header":"https://static001.geekbang.org/account/avatar/00/19/13/ab/d73e25de.jpg","comment_is_top":false,"comment_ctime":1584854677,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584854677","product_id":100032701,"comment_content":"打卡打卡","like_count":0},{"had_liked":false,"id":185223,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1583536980,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583536980","product_id":100032701,"comment_content":"第一个是使用非阻塞，加上超时的时间。<br>第二个是65535，但是要去掉头。","like_count":0,"discussions":[{"author":{"id":1276613,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gmP4Yh00MZPwNvr4UQdLeXaX3TVyZEEp195S3vD3Sfl1xz5jBr1474Mt6w5OPr0KsrnQObfLRy5PkKNFjSBiasA/132","nickname":"大头爸爸","note":"","ucode":"131E25DB04D222","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205031,"discussion_content":"请问65535是哪儿来的，谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584251275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1147453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","nickname":"忆水寒","note":"","ucode":"E3F86BD8AA8903","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1276613,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gmP4Yh00MZPwNvr4UQdLeXaX3TVyZEEp195S3vD3Sfl1xz5jBr1474Mt6w5OPr0KsrnQObfLRy5PkKNFjSBiasA/132","nickname":"大头爸爸","note":"","ucode":"131E25DB04D222","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205046,"discussion_content":"长度域2个字节，最多65535","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584254481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":205031,"ip_address":""},"score":205046,"extra":""}]}]},{"had_liked":false,"id":145401,"user_name":"LY.","can_delete":false,"product_type":"c1","uid":1143476,"ip_address":"","ucode":"C6A3A7D8BAB618","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/b4/8153fcc2.jpg","comment_is_top":false,"comment_ctime":1572266837,"is_pvip":false,"replies":[{"id":"56612","content":"https:&#47;&#47;github.com&#47;froghui&#47;yolanda&#47;tree&#47;master&#47;lib","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1572573633,"ip_address":"","comment_id":145401,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572266837","product_id":100032701,"comment_content":"lib&#47;common.h里面的内容从哪可以找到啊？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472375,"discussion_content":"https://github.com/froghui/yolanda/tree/master/lib","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572573633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145146,"user_name":"董尚斌","can_delete":false,"product_type":"c1","uid":1195545,"ip_address":"","ucode":"9582217F65C1C7","user_header":"https://static001.geekbang.org/account/avatar/00/12/3e/19/873abe8a.jpg","comment_is_top":false,"comment_ctime":1572224121,"is_pvip":false,"replies":[{"id":"56605","content":"UDP只是说是一个非面向连接的协议，在双方通信过程中，是需要互相发送报文，以便响应的，就像是一个基于UDP的聊天室，你看到别人的消息，也需要回一个消息，不同消息的内容就是响应的内容。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1572573369,"ip_address":"","comment_id":145146,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572224121","product_id":100032701,"comment_content":"第一个案例中，UDP客户端为啥要等响应呢？不是说丢出去就不管了吗。那相应的内容是啥呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472264,"discussion_content":"UDP只是说是一个非面向连接的协议，在双方通信过程中，是需要互相发送报文，以便响应的，就像是一个基于UDP的聊天室，你看到别人的消息，也需要回一个消息，不同消息的内容就是响应的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572573369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142677,"user_name":"haozhang","can_delete":false,"product_type":"c1","uid":1505549,"ip_address":"","ucode":"B4FC40EBFFB10E","user_header":"","comment_is_top":false,"comment_ctime":1571455111,"is_pvip":false,"replies":[{"id":"55594","content":"应该是一个意思。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1571845882,"ip_address":"","comment_id":142677,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571455111","product_id":100032701,"comment_content":"服务器代码中的message[n]=&#39;\\0&#39;吧","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471224,"discussion_content":"应该是一个意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571845882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125617,"user_name":"禾桃","can_delete":false,"product_type":"c1","uid":1477855,"ip_address":"","ucode":"9FE85C34A9E9E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/8c/df/77acb793.jpg","comment_is_top":false,"comment_ctime":1566215094,"is_pvip":false,"replies":[{"id":"47898","content":"嗯，我说的是和MTU有关系的，从应用层来说，报文被分割以后，当然可以认为是大小无限制。","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1567003288,"ip_address":"","comment_id":125617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566215094","product_id":100032701,"comment_content":"“另外，既然 UDP 是请求 - 应答模式的，那么请求中的 UDP 报文最大可以是多大呢？”<br><br>大小感觉没有限制吧，如果用户数据&gt;<br>(链路网络设备最小的IP_MTU - UDPHeaderSize -IPHeaderSize), IP层会把用户数据分割成多个IP Fragments, 通过多个网络包传输出去，接收点的IP层把这些Fragmengs组装好，返还给用户？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463632,"discussion_content":"嗯，我说的是和MTU有关系的，从应用层来说，报文被分割以后，当然可以认为是大小无限制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567003288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124982,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1566033199,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566033199","product_id":100032701,"comment_content":"前些天看完了文章内容 直到今天才把课程上的代码重新实现了一遍并且按照文章的步骤一步一步实现，在重启服务器过后客户端再次发送消息之前客户端其实一直阻塞在等待输入或者recvfrom函数并没有像tcp那样建立连接，这是最好的证据证明udp不需要建立连接","like_count":0,"discussions":[{"author":{"id":1111870,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2Az5uTh9ZGVA7yQCj1BXtXuicPRkvJicA97AoN9xX3bnPcUYglTMXJeZeoVbPQeJA7ICvQhR3KQ0w/132","nickname":"日不落帝国","note":"","ucode":"6A11ABBD8AC438","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24781,"discussion_content":"赞赞赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570260274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124676,"user_name":"Sweety","can_delete":false,"product_type":"c1","uid":1228667,"ip_address":"","ucode":"DC90C959AE147F","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/7b/e9592637.jpg","comment_is_top":false,"comment_ctime":1565942436,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565942436","product_id":100032701,"comment_content":"日常打卡.晚了2天.","like_count":0},{"had_liked":false,"id":124672,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1565940964,"is_pvip":false,"replies":[{"id":"45919","content":"debug或加log","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566128784,"ip_address":"","comment_id":124672,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565940964","product_id":100032701,"comment_content":"对于场景一：只运行客户端<br>调用sendto也是成功的，这样我们怎么查看实际的到达记录呢？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463271,"discussion_content":"debug或加log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566128784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124091,"user_name":"星亦辰","can_delete":false,"product_type":"c1","uid":1284592,"ip_address":"","ucode":"B0388FBFFDEE7E","user_header":"https://static001.geekbang.org/account/avatar/00/13/99/f0/d9343049.jpg","comment_is_top":false,"comment_ctime":1565823719,"is_pvip":true,"replies":[{"id":"45948","content":"你可以查查资料，我猜就一个一个端口试吧","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566130262,"ip_address":"","comment_id":124091,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565823719","product_id":100032701,"comment_content":"udp端口扫描 有没有快速的办法？","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463006,"discussion_content":"你可以查查资料，我猜就一个一个端口试吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566130262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124049,"user_name":"Steiner","can_delete":false,"product_type":"c1","uid":1622329,"ip_address":"","ucode":"232C1C75207A1E","user_header":"https://static001.geekbang.org/account/avatar/00/18/c1/39/11904266.jpg","comment_is_top":false,"comment_ctime":1565796972,"is_pvip":false,"replies":[{"id":"45949","content":"正解","user_name":"作者回复","user_name_real":"froghui","uid":"1618647","ctime":1566130284,"ip_address":"","comment_id":124049,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565796972","product_id":100032701,"comment_content":"这里sendto的第六个参数应该不是对长度的引用，而是对长度的传值","like_count":0,"discussions":[{"author":{"id":1618647,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/d7/df4086cf.jpg","nickname":"froghui","note":"","ucode":"843028B4E07F41","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462983,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566130284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124031,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1565794449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565794449","product_id":100032701,"comment_content":"第一问阻塞的情况下可以采用非阻塞套接字方式<br>第二问应该是65535<br>","like_count":0},{"had_liked":false,"id":123792,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1565761886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565761886","product_id":100032701,"comment_content":"一般udp协议的通信都是用多线程来控制成非阻塞式吧 也就是recieve和send分别放进两个线程里循环调用","like_count":0},{"had_liked":false,"id":123755,"user_name":"haer","can_delete":false,"product_type":"c1","uid":1146728,"ip_address":"","ucode":"0216267E645431","user_header":"","comment_is_top":false,"comment_ctime":1565752358,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565752358","product_id":100032701,"comment_content":"那么请求中的 UDP 报文最大可以是多大呢？<br><br>1500-20-8=1472","like_count":0}]}