{"id":12230,"title":"第32讲 | RPC协议综述：远在天边，近在眼前","content":"<p>前面我们讲了容器网络如何实现跨主机互通，以及微服务之间的相互调用。</p><p><img src=\"https://static001.geekbang.org/resource/image/a0/0d/a0763d50fc4e8dcec37ae25a2f6cc60d.jpeg?wh=1582*1080\" alt=\"\"></p><p>网络是打通了，那服务之间的互相调用，该怎么实现呢？你可能说，咱不是学过Socket吗。服务之间分调用方和被调用方，我们就建立一个TCP或者UDP的连接，不就可以通信了？</p><p><img src=\"https://static001.geekbang.org/resource/image/87/ea/87c8ae36ae1b42653565008fc47aceea.jpg?wh=1626*2172\" alt=\"\"></p><p>你仔细想一下，这事儿没这么简单。我们就拿最简单的场景，客户端调用一个加法函数，将两个整数加起来，返回它们的和。</p><p>如果放在本地调用，那是简单的不能再简单了，只要稍微学过一种编程语言，三下五除二就搞定了。但是一旦变成了远程调用，门槛一下子就上去了。</p><p>首先你要会Socket编程，至少先要把咱们这门网络协议课学一下，然后再看N本砖头厚的Socket程序设计的书，学会咱们学过的几种Socket程序设计的模型。这就使得本来大学毕业就能干的一项工作，变成了一件五年工作经验都不一定干好的工作，而且，搞定了Socket程序设计，才是万里长征的第一步。后面还有很多问题呢！</p><h2>如何解决这五个问题？</h2><h3>问题一：如何规定远程调用的语法？</h3><p>客户端如何告诉服务端，我是一个加法，而另一个是乘法。我是用字符串“add”传给你，还是传给你一个整数，比如1表示加法，2表示乘法？服务端该如何告诉客户端，我的这个加法，目前只能加整数，不能加小数，不能加字符串；而另一个加法“add1”，它能实现小数和整数的混合加法。那返回值是什么？正确的时候返回什么，错误的时候又返回什么？</p><!-- [[[read_end]]] --><h3>问题二：如果传递参数？</h3><p>我是先传两个整数，后传一个操作符“add”，还是先传操作符，再传两个整数？是不是像咱们数据结构里一样，如果都是UDP，想要实现一个逆波兰表达式，放在一个报文里面还好，如果是TCP，是一个流，在这个流里面，如何将两次调用进行分界？什么时候是头，什么时候是尾？把这次的参数和上次的参数混了起来，TCP一端发送出去的数据，另外一端不一定能一下子全部读取出来。所以，怎么才算读完呢？</p><h3>问题三：如何表示数据？</h3><p>在这个简单的例子中，传递的就是一个固定长度的int值，这种情况还好，如果是变长的类型，是一个结构体，甚至是一个类，应该怎么办呢？如果是int，不同的平台上长度也不同，该怎么办呢？</p><p>在网络上传输超过一个Byte的类型，还有大端Big Endian和小端Little Endian的问题。</p><p>假设我们要在32位四个Byte的一个空间存放整数1，很显然只要一个Byte放1，其他三个Byte放0就可以了。那问题是，最后一个Byte放1呢，还是第一个Byte放1呢？或者说1作为最低位，应该是放在32位的最后一个位置呢，还是放在第一个位置呢？</p><p>最低位放在最后一个位置，叫作Little Endian，最低位放在第一个位置，叫作Big Endian。TCP/IP协议栈是按照Big Endian来设计的，而X86机器多按照Little Endian来设计的，因而发出去的时候需要做一个转换。</p><h3>问题四：如何知道一个服务端都实现了哪些远程调用？从哪个端口可以访问这个远程调用？</h3><p>假设服务端实现了多个远程调用，每个可能实现在不同的进程中，监听的端口也不一样，而且由于服务端都是自己实现的，不可能使用一个大家都公认的端口，而且有可能多个进程部署在一台机器上，大家需要抢占端口，为了防止冲突，往往使用随机端口，那客户端如何找到这些监听的端口呢？</p><h3>问题五：发生了错误、重传、丢包、性能等问题怎么办？</h3><p>本地调用没有这个问题，但是一旦到网络上，这些问题都需要处理，因为网络是不可靠的，虽然在同一个连接中，我们还可通过TCP协议保证丢包、重传的问题，但是如果服务器崩溃了又重启，当前连接断开了，TCP就保证不了了，需要应用自己进行重新调用，重新传输会不会同样的操作做两遍，远程调用性能会不会受影响呢？</p><h2>协议约定问题</h2><p>看到这么多问题，你是不是想起了我<a href=\"https://time.geekbang.org/column/article/7581\">第一节</a>讲过的这张图。</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/33/7be56272a7e738b6cfe5bcbf658c3933.jpg?wh=2643*380\" alt=\"\"></p><p>本地调用函数里有很多问题，比如词法分析、语法分析、语义分析等等，这些编译器本来都能帮你做了。但是在远程调用中，这些问题你都需要重新操心。</p><p>很多公司的解决方法是，弄一个核心通信组，里面都是Socket编程的大牛，实现一个统一的库，让其他业务组的人来调用，业务的人不需要知道中间传输的细节。通信双方的语法、语义、格式、端口、错误处理等，都需要调用方和被调用方开会协商，双方达成一致。一旦有一方改变，要及时通知对方，否则通信就会有问题。</p><p>可是不是每一个公司都有这种大牛团队，往往只有大公司才配得起，那有没有已经实现好的框架可以使用呢？</p><p>当然有。一个大牛Bruce Jay Nelson写了一篇论文<a href=\"http://www.cs.cmu.edu/~dga/15-712/F07/papers/birrell842.pdf\">Implementing Remote Procedure Calls</a>，定义了RPC的调用标准。后面所有RPC框架，都是按照这个标准模式来的。</p><p><img src=\"https://static001.geekbang.org/resource/image/29/db/2933bbd1ee6471b6de3824bb86f6d0db.jpg?wh=1999*707\" alt=\"\"></p><p>当客户端的应用想发起一个远程调用时，它实际是通过本地调用本地调用方的Stub。它负责将调用的接口、方法和参数，通过约定的协议规范进行编码，并通过本地的RPCRuntime进行传输，将调用网络包发送到服务器。</p><p>服务器端的RPCRuntime收到请求后，交给提供方Stub进行解码，然后调用服务端的方法，服务端执行方法，返回结果，提供方Stub将返回结果编码后，发送给客户端，客户端的RPCRuntime收到结果，发给调用方Stub解码得到结果，返回给客户端。</p><p>这里面分了三个层次，对于用户层和服务端，都像是本地调用一样，专注于业务逻辑的处理就可以了。对于Stub层，处理双方约定好的语法、语义、封装、解封装。对于RPCRuntime，主要处理高性能的传输，以及网络的错误和异常。</p><p>最早的RPC的一种实现方式称为Sun RPC或ONC RPC。Sun公司是第一个提供商业化RPC库和 RPC编译器的公司。这个RPC框架是在NFS协议中使用的。</p><p>NFS（Network File System）就是网络文件系统。要使NFS成功运行，要启动两个服务端，一个是mountd，用来挂载文件路径；一个是nfsd，用来读写文件。NFS可以在本地mount一个远程的目录到本地的一个目录，从而本地的用户在这个目录里面写入、读出任何文件的时候，其实操作的是远程另一台机器上的文件。</p><p>操作远程和远程调用的思路是一样的，就像操作本地一样。所以NFS协议就是基于RPC实现的。当然无论是什么RPC，底层都是Socket编程。</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/eb/2a0fd84c2d3dced623511e2a5226d0eb.jpg?wh=2366*1704\" alt=\"\"></p><p>XDR（External Data Representation，外部数据表示法）是一个标准的数据压缩格式，可以表示基本的数据类型，也可以表示结构体。</p><p>这里是几种基本的数据类型。</p><p><img src=\"https://static001.geekbang.org/resource/image/4a/af/4a649954fea1cee22fcfa8bdb34c03af.jpg?wh=3514*1668\" alt=\"\"></p><p>在RPC的调用过程中，所有的数据类型都要封装成类似的格式。而且RPC的调用和结果返回，也有严格的格式。</p><ul>\n<li>\n<p>XID唯一标识一对请求和回复。请求为0，回复为1。</p>\n</li>\n<li>\n<p>RPC有版本号，两端要匹配RPC协议的版本号。如果不匹配，就会返回Deny，原因就是RPC_MISMATCH。</p>\n</li>\n<li>\n<p>程序有编号。如果服务端找不到这个程序，就会返回PROG_UNAVAIL。</p>\n</li>\n<li>\n<p>程序有版本号。如果程序的版本号不匹配，就会返回PROG_MISMATCH。</p>\n</li>\n<li>\n<p>一个程序可以有多个方法，方法也有编号，如果找不到方法，就会返回PROC_UNAVAIL。</p>\n</li>\n<li>\n<p>调用需要认证鉴权，如果不通过，则Deny。</p>\n</li>\n<li>\n<p>最后是参数列表，如果参数无法解析，则返回GABAGE_ARGS。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/c7/65/c724675527afdbd43964bdf24684fa65.jpg?wh=3777*1506\" alt=\"\"></p><p>为了可以成功调用RPC，在客户端和服务端实现RPC的时候，首先要定义一个双方都认可的程序、版本、方法、参数等。</p><p><img src=\"https://static001.geekbang.org/resource/image/5c/58/5c3ebb31ac4415d7895247bf8758fa58.jpg?wh=3849*1878\" alt=\"\"></p><p>如果还是上面的加法，则双方约定为一个协议定义文件，同理如果是NFS、mount和读写，也会有类似的定义。</p><p>有了协议定义文件，ONC RPC会提供一个工具，根据这个文件生成客户端和服务器端的Stub程序。</p><p><img src=\"https://static001.geekbang.org/resource/image/27/b9/27dc1ccd0481408055c87e0e5d8b02b9.jpg?wh=4035*2151\" alt=\"\"></p><p>最下层的是XDR文件，用于编码和解码参数。这个文件是客户端和服务端共享的，因为只有双方一致才能成功通信。</p><p>在客户端，会调用clnt_create创建一个连接，然后调用add_1，这是一个Stub函数，感觉是在调用本地一样。其实是这个函数发起了一个RPC调用，通过调用clnt_call来调用ONC RPC的类库，来真正发送请求。调用的过程非常复杂，一会儿我详细说这个。</p><p>当然服务端也有一个Stub程序，监听客户端的请求，当调用到达的时候，判断如果是add，则调用真正的服务端逻辑，也即将两个数加起来。</p><p>服务端将结果返回服务端的Stub，这个Stub程序发送结果给客户端，客户端的Stub程序正在等待结果，当结果到达客户端Stub，就将结果返回给客户端的应用程序，从而完成整个调用过程。</p><p>有了这个RPC的框架，前面五个问题中的前三个“如何规定远程调用的语法？”“如何传递参数？”以及“如何表示数据？”基本解决了，这三个问题我们统称为<strong>协议约定问题</strong>。</p><h2>传输问题</h2><p>但是错误、重传、丢包、性能等问题还没有解决，这些问题我们统称为<strong>传输问题</strong>。这个就不用Stub操心了，而是由ONC RPC的类库来实现。这是大牛们实现的，我们只要调用就可以了。</p><p><img src=\"https://static001.geekbang.org/resource/image/33/e4/33e1afe4a79e81096e09b850424930e4.jpg?wh=3862*1882\" alt=\"\"></p><p>在这个类库中，为了解决传输问题，对于每一个客户端，都会创建一个传输管理层，而每一次RPC调用，都会是一个任务，在传输管理层，你可以看到熟悉的队列机制、拥塞窗口机制等。</p><p>由于在网络传输的时候，经常需要等待，因而同步的方式往往效率比较低，因而也就有Socket的异步模型。为了能够异步处理，对于远程调用的处理，往往是通过状态机来实现的。只有当满足某个状态的时候，才进行下一步，如果不满足状态，不是在那里等，而是将资源留出来，用来处理其他的RPC调用。</p><p><img src=\"https://static001.geekbang.org/resource/image/02/f5/0258775aac1126735504c9a6399745f5.jpg?wh=4045*2276\" alt=\"\"></p><p>从这个图可以看出，这个状态转换图还是很复杂的。</p><p>首先，进入起始状态，查看RPC的传输层队列中有没有空闲的位置，可以处理新的RPC任务。如果没有，说明太忙了，或直接结束或重试。如果申请成功，就可以分配内存，获取服务的端口号，然后连接服务器。</p><p>连接的过程要有一段时间，因而要等待连接的结果，会有连接失败，或直接结束或重试。如果连接成功，则开始发送RPC请求，然后等待获取RPC结果，这个过程也需要一定的时间；如果发送出错，可以重新发送；如果连接断了，可以重新连接；如果超时，可以重新传输；如果获取到结果，就可以解码，正常结束。</p><p>这里处理了连接失败、重试、发送失败、超时、重试等场景。不是大牛真写不出来，因而实现一个RPC的框架，其实很有难度。</p><h2>服务发现问题</h2><p>传输问题解决了，我们还遗留一个问题，就是问题四“如何找到RPC服务端的那个随机端口”。这个问题我们称为服务发现问题。在ONC RPC中，服务发现是通过portmapper实现的。</p><p><img src=\"https://static001.geekbang.org/resource/image/2a/7c/2aff190d1f878749d2a5bd73228ca37c.jpg?wh=2382*2074\" alt=\"\"></p><p>portmapper会启动在一个众所周知的端口上，RPC程序由于是用户自己写的，会监听在一个随机端口上，但是RPC程序启动的时候，会向portmapper注册。客户端要访问RPC服务端这个程序的时候，首先查询portmapper，获取RPC服务端程序的随机端口，然后向这个随机端口建立连接，开始RPC调用。从图中可以看出，mount命令的RPC调用，就是这样实现的。</p><h2>小结</h2><p>好了，这一节就到这里，我们来总结一下。</p><ul>\n<li>\n<p>远程调用看起来用Socket编程就可以了，其实是很复杂的，要解决协议约定问题、传输问题和服务发现问题。</p>\n</li>\n<li>\n<p>大牛Bruce Jay Nelson的论文、早期ONC RPC框架，以及NFS的实现，给出了解决这三大问题的示范性实现，也即协议约定要公用协议描述文件，并通过这个文件生成Stub程序；RPC的传输一般需要一个状态机，需要另外一个进程专门做服务发现。</p>\n</li>\n</ul><p>最后，给你留两个思考题。</p><ol>\n<li>\n<p>在这篇文章中，mount的过程是通过系统调用，最终调用到RPC层。一旦mount完毕之后，客户端就像写入本地文件一样写入NFS了，这个过程是如何触发RPC层的呢？</p>\n</li>\n<li>\n<p>ONC RPC是早期的RPC框架，你觉得它有哪些问题呢？</p>\n</li>\n</ol><p>我们的专栏更新到第32讲，不知你掌握得如何？每节课后我留的思考题，你都有没有认真思考，并在留言区写下答案呢？我会从<strong>已发布的文章中选出一批认真留言的同学</strong>，赠送<strong>学习奖励礼券</strong>和我整理的<strong>独家网络协议知识图谱</strong>。</p><p>欢迎你留言和我讨论。趣谈网络协议，我们下期见！</p>","neighbors":{"left":{"article_title":"第31讲 | 容器网络之Calico：为高效说出善意的谎言","id":11940},"right":{"article_title":"第33讲 | 基于XML的SOAP协议：不要说NBA，请说美国职业篮球联赛","id":12388}},"comments":[{"had_liked":false,"id":17786,"user_name":"空档滑行","can_delete":false,"product_type":"c1","uid":1091611,"ip_address":"","ucode":"06A6A7F503FAA7","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/1b/ced1d171.jpg","comment_is_top":false,"comment_ctime":1532952984,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"156151775640","product_id":100007101,"comment_content":"1.rpc调用是在进行读写操作时，调用的操作系统的读写接口，nfs对接口做了实现，实现的代码里封装了rpc<br>2.需要调用双方有接口描述文件，有文件就需要双方要做信息交换，所以客户端和服务端不是完全透明的","like_count":37,"discussions":[{"author":{"id":1407538,"avatar":"https://static001.geekbang.org/account/avatar/00/15/7a/32/27a8572a.jpg","nickname":"渣渣","note":"","ucode":"659B430BD4C22B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187866,"discussion_content":"这样子呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582774529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112581,"user_name":"吴军旗^_^","can_delete":false,"product_type":"c1","uid":1507640,"ip_address":"","ucode":"5760CE31AE3FA5","user_header":"https://static001.geekbang.org/account/avatar/00/17/01/38/5daf2cfb.jpg","comment_is_top":false,"comment_ctime":1562765038,"is_pvip":false,"replies":[{"id":"46698","content":"坚持到最后，你就是大牛","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1566380964,"ip_address":"","comment_id":112581,"utype":1}],"discussion_count":2,"race_medal":0,"score":"87462110958","product_id":100007101,"comment_content":"越往后人的留言越少， 看来成为大牛的路上会越来越孤单","like_count":21,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457803,"discussion_content":"坚持到最后，你就是大牛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566380964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226862,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/6e/0aae08d6.jpg","nickname":"VincentQ","note":"","ucode":"BDA2CE2453881C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307133,"discussion_content":"码农选择从后往前看，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600506938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17779,"user_name":"叹息无门","can_delete":false,"product_type":"c1","uid":1131362,"ip_address":"","ucode":"3540A66F5F08EA","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/62/cd7d8b3b.jpg","comment_is_top":false,"comment_ctime":1532949404,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"78842360732","product_id":100007101,"comment_content":"1.应用在读写文件时，会创建文件描述符，NFS Client会将文件描述符的操作代理成RPC请求。<br>2.XDR有严格的格式限制，两端必须完全匹配，无法支持灵活数据格式的传递。","like_count":19},{"had_liked":false,"id":17708,"user_name":"mgxian","can_delete":false,"product_type":"c1","uid":1014806,"ip_address":"","ucode":"7B7E77E6A83B87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/16/4d1e5cc1.jpg","comment_is_top":false,"comment_ctime":1532909924,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27302713700","product_id":100007101,"comment_content":"1.nfs挂载的时候指定了文件系统类型 当应用对文件进行read write等操作时 会调用系统底层的vfs文件系统相关函数， nfs 实现了 vfs规定的 接口函数，调用vfs相关函数时 vfs其实会调用nfs的实现 实现访问远程文件系统<br><br>2.不支持多语言 ","like_count":7},{"had_liked":false,"id":18386,"user_name":"何重阳","can_delete":false,"product_type":"c1","uid":1155602,"ip_address":"","ucode":"2F41315CC4C066","user_header":"https://static001.geekbang.org/account/avatar/00/11/a2/12/c429f550.jpg","comment_is_top":false,"comment_ctime":1533283794,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18713152978","product_id":100007101,"comment_content":"能不能收我为徒😂","like_count":5,"discussions":[{"author":{"id":1211178,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7b/2a/7d8b5943.jpg","nickname":"LH","note":"","ucode":"819B9B2409E834","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252651,"discussion_content":"这个实在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588173051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17752,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1532927294,"is_pvip":false,"replies":[{"id":"6219","content":"是的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1533039840,"ip_address":"","comment_id":17752,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18712796478","product_id":100007101,"comment_content":"刘老师，我们目前的分布式系统采用以下方式。我们实现了一种中间件，每个进程（客户端）要与其他进程通信，就要到中间件注册（注册了自己进程的一个ID，任务名称，还有一个消息队列），然后将消息用google的protobuf封装进行传输（因为这种序列化的效率高）。在其他进程中接收到消息，会解析消息id，然后根据定义好的格式去取内容。这样也算RPC调用吧？","like_count":5,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421258,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533039840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17717,"user_name":"朽木自雕","can_delete":false,"product_type":"c1","uid":1137596,"ip_address":"","ucode":"C7EBFD3FD60958","user_header":"https://static001.geekbang.org/account/avatar/00/11/5b/bc/1b6e3848.jpg","comment_is_top":false,"comment_ctime":1532912597,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18712781781","product_id":100007101,"comment_content":"刘老师，我都认真的看了就是有的看不太懂，但是我真的好期待您的那个知识图谱，我觉得这个有助于对知识的加深理解，因为我认为这种图谱被我所喜欢的原因是它属于空间的结构，我自己这么认为的。","like_count":4},{"had_liked":false,"id":17928,"user_name":"小谢同学","can_delete":false,"product_type":"c1","uid":1032544,"ip_address":"","ucode":"E809E6BC470631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/60/fc3689d0.jpg","comment_is_top":false,"comment_ctime":1533031590,"is_pvip":false,"replies":[{"id":"6215","content":"是的，rpc的几个时代，就是这样演进过来的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1533039616,"ip_address":"","comment_id":17928,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14417933478","product_id":100007101,"comment_content":"作为一名不会coding的从业者，想问刘老师几个基础问题，首先是文中提到的onc rpc框架，就是包含了stub（编解码）+传输（类库）+服务发现的一套东西？那么目前主流的rpc框架，比如dubbo也是实现了这些功能的集大成者？另外一个问题就是，thrift 和protobuf 我理解只是实现了rpc编解码环节的工作，也就是所说的序列化与反序列化，对么？","like_count":4,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421333,"discussion_content":"是的，rpc的几个时代，就是这样演进过来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533039616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321070,"discussion_content":"。。。。后来spring-cloud选型的时候说，我选一个效率不是最高但是最普遍的http吧，然后feign就出来了，有些人坚决不认为feign是rpc，有些认为feign也做了rpc同样的功能，为何不算，因为不严格按照定义吗？ 我觉得定义不要区分那么清楚，从功能上讲feign就是一种rpc的子集。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604538994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230059,"user_name":"老兵","can_delete":false,"product_type":"c1","uid":1471109,"ip_address":"","ucode":"F004F8EC90E5B0","user_header":"https://static001.geekbang.org/account/avatar/00/16/72/85/c337e9a1.jpg","comment_is_top":false,"comment_ctime":1593248571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10183183163","product_id":100007101,"comment_content":"1. mounted NFS会创建RPC的client端调用的映射，当NFS有写入时，就根据这个映射将结果发给client的stub。<br>2. 每次添加新的RPC方法，会需要重新部署（启动）client和server。","like_count":2},{"had_liked":false,"id":205010,"user_name":"雷刚","can_delete":false,"product_type":"c1","uid":1655725,"ip_address":"","ucode":"115FE2BE1AAB61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK9Bpd0wFnPWtYLPfBRBhvZ68iaJErMlM2NNSeEibwQfY7GReILSIYZXfT9o8iaicibcyw3g/132","comment_is_top":false,"comment_ctime":1586507257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10176441849","product_id":100007101,"comment_content":"1. nfs 和 hdfs 一样都是分布式文件系统。当往往 nfs 目录中读写时，就会和这个目录对应的远程服务器建立 RPC 通道，我们看这是像往本地文件读写，实际是通过 RPC 往远程服务器读写。<br>2. 现代的 RPC 框架越来越像一个生态（如 Dubbo），不仅仅是一个 RPC 框架，更是一整套微服务的解决方案。如分布式配置（Nacos）、服务注册与发现（Nacos）、服务调用、负载均衡、限流与熔断、网关、分布式消息中间件等。","like_count":3},{"had_liked":false,"id":19354,"user_name":"梦想启动的蜗牛","can_delete":false,"product_type":"c1","uid":1111602,"ip_address":"","ucode":"781F2A6DA6FEB3","user_header":"https://static001.geekbang.org/account/avatar/00/10/f6/32/358f9411.jpg","comment_is_top":false,"comment_ctime":1533780120,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10123714712","product_id":100007101,"comment_content":"最低位放在最后不是大端模式嘛？","like_count":3,"discussions":[{"author":{"id":1694002,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/pQtDPsC0NLsyB5Dmy5dtZpwXxkVNX41XMGGVLxFfVFjDIm75mIt278OpiangbhCs6p2YCSZHpaN04zBpHDmOK2w/132","nickname":"廖东明","note":"","ucode":"707F0C1AF9EAEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369797,"discussion_content":"我也有相同疑问，就是不知道老师说的最后位置指的是左边还是右边~~~~~~~~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619159898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17840,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1053390,"ip_address":"","ucode":"ABB3F1A63E102A","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/ce/a8c8b5e8.jpg","comment_is_top":false,"comment_ctime":1532995389,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10122929981","product_id":100007101,"comment_content":"这篇我看懂了哈哈。工作中一涉及到rpc，我简直是thrift的铁杆粉丝，Google的protobuf也不错，但其中的原理的我并没深究。通过这篇，我学到了rpc的架构原理，赞。至于nfs，其实工作中也有用过，但仅仅是用而已，没有深究其中的奥妙，期待超哥下篇的解答。","like_count":2},{"had_liked":false,"id":258283,"user_name":"LVM_23","can_delete":false,"product_type":"c1","uid":1039544,"ip_address":"","ucode":"5E54F9DB582E9F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/b8/31c7e110.jpg","comment_is_top":false,"comment_ctime":1604367651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5899334947","product_id":100007101,"comment_content":"终于来了些看得懂和日常已经使用的知识了，手动狗头","like_count":1},{"had_liked":false,"id":243946,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1598336034,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893303330","product_id":100007101,"comment_content":"问题2：如果约定的协议内容发生变化，比如，增加参数、增加方法等，都需要重新生成stub程序，并重启rpc的客户端和服务端，比较麻烦","like_count":2},{"had_liked":false,"id":127234,"user_name":"Geek_37984c","can_delete":false,"product_type":"c1","uid":1218347,"ip_address":"","ucode":"7A319AE28599B0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLvdWoCic6ItzibF8ia8vrUTRuyj6AT3tg5f4QicIK0jTIFheJ6274ZkibuRLFP1NXG3jibv5TiaSKNoJpLw/132","comment_is_top":false,"comment_ctime":1566617004,"is_pvip":false,"replies":[{"id":"48779","content":"是的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567495787,"ip_address":"","comment_id":127234,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861584300","product_id":100007101,"comment_content":"老师GABAGE_ARGS 是写错了吗<br>GARBAGE_ARGS?","like_count":1,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464392,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567495787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89413,"user_name":"古夜","can_delete":false,"product_type":"c1","uid":1341612,"ip_address":"","ucode":"0A82D3CFCEDF07","user_header":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","comment_is_top":false,"comment_ctime":1556167150,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5851134446","product_id":100007101,"comment_content":"看完知道一点zookeeper这个注册中心为啥要注册了，懵懵懂懂的也算是知道一点了😂","like_count":1,"discussions":[{"author":{"id":2806043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBFkSq1oiaEMRjtyyv4ZpCI0OuaSsqs04ODm0OkZF6QhsAh3SvqhxibS2n7PLAVZE3QRSn5Hic0DyXg/132","nickname":"ddh","note":"","ucode":"8E852375365F16","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545425,"discussion_content":"走错地方了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641955535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17709,"user_name":"favorlm","can_delete":false,"product_type":"c1","uid":1120997,"ip_address":"","ucode":"CFD52127AA6E1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/e5/6899701e.jpg","comment_is_top":false,"comment_ctime":1532909951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5827877247","product_id":100007101,"comment_content":"rpc，现在用框架已经简单了很多","like_count":1},{"had_liked":false,"id":315526,"user_name":"Join","can_delete":false,"product_type":"c1","uid":1014873,"ip_address":"","ucode":"20F51EFFD8FEDE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/59/dc9bbb21.jpg","comment_is_top":false,"comment_ctime":1633915268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633915268","product_id":100007101,"comment_content":"RPC看得比较爽了，学习了","like_count":0},{"had_liked":false,"id":289036,"user_name":"saltedfish","can_delete":false,"product_type":"c1","uid":1946257,"ip_address":"","ucode":"936571E1AC4139","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b2/91/cf0de36e.jpg","comment_is_top":false,"comment_ctime":1618824240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618824240","product_id":100007101,"comment_content":"问题二：如果传递参数？应该是如何传递参数吧？","like_count":0},{"had_liked":false,"id":264974,"user_name":"🍀柠檬鱼也是鱼","can_delete":false,"product_type":"c1","uid":2178501,"ip_address":"","ucode":"DCF033636465F3","user_header":"https://static001.geekbang.org/account/avatar/00/21/3d/c5/f43fa619.jpg","comment_is_top":false,"comment_ctime":1606725544,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606725544","product_id":100007101,"comment_content":"RPC runtime是指什么呢，网上没有查到诶","like_count":0},{"had_liked":false,"id":243943,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1598335054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598335054","product_id":100007101,"comment_content":"问题1：NFS是一个文件系统，在mount成功之后，对于这个文件系统的读写，都由内核中NFS的读写操作接口实现，在这些接口中封装了对nfsd的rpc调用。","like_count":0},{"had_liked":false,"id":208975,"user_name":"MacBao","can_delete":false,"product_type":"c1","uid":1738119,"ip_address":"","ucode":"8CF51C3688C8F6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/87/727142bc.jpg","comment_is_top":false,"comment_ctime":1587476936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587476936","product_id":100007101,"comment_content":"老师您好，Webservice和 WCF也算是一种RPC吗？","like_count":0},{"had_liked":false,"id":195510,"user_name":"King-ZJ","can_delete":false,"product_type":"c1","uid":1915385,"ip_address":"","ucode":"7448A4BBB5A118","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/f9/b946719a.jpg","comment_is_top":false,"comment_ctime":1585192384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585192384","product_id":100007101,"comment_content":"两个程序的通信需要Socket进程来保证，这个通信过程中又需要协议的达成、服务发现等知识来保证正常运行。","like_count":0},{"had_liked":false,"id":187394,"user_name":"Swing","can_delete":false,"product_type":"c1","uid":1330065,"ip_address":"","ucode":"55FCA9ECEFBBEB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","comment_is_top":false,"comment_ctime":1584099098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584099098","product_id":100007101,"comment_content":"em，安卓的IPC机制。。。Binder机制，里面说道的stub，以及 自动化生成的aidl接口。。<br>还有 里面的ServiceManager。。。<br>看来都是借鉴这里的 实现思路","like_count":0},{"had_liked":false,"id":182367,"user_name":"渣渣","can_delete":false,"product_type":"c1","uid":1407538,"ip_address":"","ucode":"659B430BD4C22B","user_header":"https://static001.geekbang.org/account/avatar/00/15/7a/32/27a8572a.jpg","comment_is_top":false,"comment_ctime":1582774469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582774469","product_id":100007101,"comment_content":"第一个问题：mount完毕后，通过；portmapper发现服务，从而调用。第二个问题：使用较为复杂吧，需要客户端和服务器有较多实现。我理解在分布式系统中，机器和机器之间相互连接，每一台机器既是客户端也是服务器吧，都要实现RPC，老师是这样吗","like_count":0},{"had_liked":false,"id":167874,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1577955951,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1577955951","product_id":100007101,"comment_content":"rpc原来和网络是这样联系在了一起的，虽然没自己研究过rpc框架，但是很多的方法都是通用的，比如服务注册、状态机等，虽然只是入门课程，但是广度和深度依然不小(里面好多的实现细节)，这可比读单纯的理论书有价值多了!","like_count":0},{"had_liked":false,"id":131756,"user_name":"zKerry","can_delete":false,"product_type":"c1","uid":1497740,"ip_address":"","ucode":"9FB006D1A38D3F","user_header":"","comment_is_top":false,"comment_ctime":1567883435,"is_pvip":false,"replies":[{"id":"50577","content":"是的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1568078888,"ip_address":"","comment_id":131756,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567883435","product_id":100007101,"comment_content":"哦...原来是有示范性标准的啊","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466611,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568078888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121542,"user_name":"N_H","can_delete":false,"product_type":"c1","uid":1541386,"ip_address":"","ucode":"109B67557AB3CE","user_header":"https://static001.geekbang.org/account/avatar/00/17/85/0a/e564e572.jpg","comment_is_top":false,"comment_ctime":1565156924,"is_pvip":false,"replies":[{"id":"46348","content":"当然可以指定。我这里的RPC还比较老。","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1566296660,"ip_address":"","comment_id":121542,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565156924","product_id":100007101,"comment_content":"老师，您好，文章里面，“RPC程序是用户自己写的，会监听在一个随机端口上”。我们公司用的grpc服务，都会自己指明一个端口号","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461842,"discussion_content":"当然可以指定。我这里的RPC还比较老。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566296660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112397,"user_name":"java_zhao","can_delete":false,"product_type":"c1","uid":1132859,"ip_address":"","ucode":"9FC2CC8C6B4986","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/3b/d214038f.jpg","comment_is_top":false,"comment_ctime":1562728618,"is_pvip":false,"replies":[{"id":"46719","content":"portmapper作为一个服务发现中心，不同端口的都可以注册到他这里，例如有个8081，再有个8082，都行。","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1566386339,"ip_address":"","comment_id":112397,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562728618","product_id":100007101,"comment_content":"想问一下 我们平时的程序不都是指定端口的吗 为什么还会随机端口 用portmapper呢？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457718,"discussion_content":"portmapper作为一个服务发现中心，不同端口的都可以注册到他这里，例如有个8081，再有个8082，都行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566386339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107851,"user_name":"灯盖","can_delete":false,"product_type":"c1","uid":1482839,"ip_address":"","ucode":"0F8455A593D60C","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/57/3a729755.jpg","comment_is_top":false,"comment_ctime":1561622967,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1561622967","product_id":100007101,"comment_content":"强大","like_count":0},{"had_liked":false,"id":105246,"user_name":"Geek_Huahui","can_delete":false,"product_type":"c1","uid":1497346,"ip_address":"","ucode":"A688B183E5CE5E","user_header":"https://static001.geekbang.org/account/avatar/00/16/d9/02/c4e2d7e8.jpg","comment_is_top":false,"comment_ctime":1560945471,"is_pvip":true,"replies":[{"id":"49012","content":"restful会讲的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567579689,"ip_address":"","comment_id":105246,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560945471","product_id":100007101,"comment_content":"刘老师，能讲解一下现在用的比较多的JSON-RPC吗","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454606,"discussion_content":"restful会讲的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567579689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102713,"user_name":"迭代升级","can_delete":false,"product_type":"c1","uid":1183957,"ip_address":"","ucode":"93FF3F338CD2E3","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/d5/b527fdcb.jpg","comment_is_top":false,"comment_ctime":1560299082,"is_pvip":false,"replies":[{"id":"49092","content":"不矛盾呀，不是一个意思吗","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567590409,"ip_address":"","comment_id":102713,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1560299082","product_id":100007101,"comment_content":"看了这个大端小端有一些疑惑，百度百科https:&#47;&#47;m.baidu.com&#47;sf_bk&#47;item&#47;%E5%A4%A7%E5%B0%8F%E7%AB%AF%E6%A8%A1%E5%BC%8F&#47;6750542?fr=aladdin&amp;ms=1&amp;rid=8203658230675846926 上说:大端模式，是指数据的高字节保存在内存的低地址中，而数据的低字节保存在内存的高地址中，这样的存储模式有点儿类似于把数据当作字符串顺序处理：地址由小向大增加，而数据从高位往低位放；这和我们的阅读习惯一致。<br>小端模式，是指数据的高字节保存在内存的高地址中，而数据的低字节保存在内存的低地址中，这种存储模式将地址的高低和数据位权有效地结合起来，高地址部分权值高，低地址部分权值低。<br>而文章上说:最低位放在最后一个位置，叫做小端<br>最低位放在第一个位置，叫做大端<br>感觉有点矛盾呀，是我的理解出错了吗？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453541,"discussion_content":"不矛盾呀，不是一个意思吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567590409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1407538,"avatar":"https://static001.geekbang.org/account/avatar/00/15/7a/32/27a8572a.jpg","nickname":"渣渣","note":"","ucode":"659B430BD4C22B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187846,"discussion_content":"我也觉得是一个意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582772678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183957,"avatar":"https://static001.geekbang.org/account/avatar/00/12/10/d5/b527fdcb.jpg","nickname":"迭代升级","note":"","ucode":"93FF3F338CD2E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7634,"discussion_content":"哎呀，我现在读起来也是一个意思呀，感谢作者回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567593939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100482,"user_name":"zj","can_delete":false,"product_type":"c1","uid":1100064,"ip_address":"","ucode":"E3329CCF694AC2","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/20/e4f1b17c.jpg","comment_is_top":false,"comment_ctime":1559563779,"is_pvip":false,"replies":[{"id":"49197","content":"header里面可以自己加","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567602850,"ip_address":"","comment_id":100482,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559563779","product_id":100007101,"comment_content":"插问一下，http协议中有类似XID这样的标识别唯一请求id吗","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452567,"discussion_content":"header里面可以自己加","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567602850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97519,"user_name":"起风了001","can_delete":false,"product_type":"c1","uid":1529929,"ip_address":"","ucode":"8DCDBA40B8CC9F","user_header":"","comment_is_top":false,"comment_ctime":1558687744,"is_pvip":false,"replies":[{"id":"35425","content":"json是rpc的一种","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1559110693,"ip_address":"","comment_id":97519,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558687744","product_id":100007101,"comment_content":"我在使用以太坊的geth客户端的时候, 里面和geth通讯用的也叫rpc协议, 但是他其实是一个json格式的数据传输过程, 感觉和本文讲的rpc协议有很大区别.","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451309,"discussion_content":"json是rpc的一种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559110693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84885,"user_name":"超超","can_delete":false,"product_type":"c1","uid":1476077,"ip_address":"","ucode":"D0751F29553481","user_header":"https://static001.geekbang.org/account/avatar/00/16/85/ed/905b052f.jpg","comment_is_top":false,"comment_ctime":1554943219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554943219","product_id":100007101,"comment_content":"答问题一：可以通过类似Linux的inotify机制，监听文件变化，触发回调，把文件的变化通过RPC传输写入服务端。<br>答问题二：服务是固定的，不够灵活，当出现新增加服务时，无法在线升级服务。","like_count":0},{"had_liked":false,"id":50511,"user_name":"Geek_549e33","can_delete":false,"product_type":"c1","uid":1216252,"ip_address":"","ucode":"0E92DED0477925","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epia1tnD3nqibxHxLowyyTjAcRLKb6Z2UDuxaTLTKKm00MMdB5lpXEOicxkBUJMiapEMq4wFEz7rR29vA/132","comment_is_top":false,"comment_ctime":1545004864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545004864","product_id":100007101,"comment_content":"在咋那么像以前的EJB","like_count":0},{"had_liked":false,"id":19461,"user_name":"土豆柠檬","can_delete":false,"product_type":"c1","uid":1154492,"ip_address":"","ucode":"D240FDF9951394","user_header":"https://static001.geekbang.org/account/avatar/00/11/9d/bc/7b2a5339.jpg","comment_is_top":false,"comment_ctime":1533855943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533855943","product_id":100007101,"comment_content":"老师，rpc和rmi有什么区别？","like_count":0},{"had_liked":false,"id":19349,"user_name":"blackpiglet","can_delete":false,"product_type":"c1","uid":1032928,"ip_address":"","ucode":"58AA8329C91767","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/e0/7188aa0a.jpg","comment_is_top":false,"comment_ctime":1533779572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533779572","product_id":100007101,"comment_content":"1 应该是函数指针吧，将 nfs的RPC 函数，作为回调函数，传递给系统调用。<br>2 缺点一是太复杂了，开发和调用都难度很高；二是无法做到语言无关。","like_count":0}]}