{"id":209130,"title":"12 | Quorum NWR算法：想要灵活地自定义一致性，没问题！","content":"<p>你好，我是韩健。</p><p>不知道你在工作中有没有遇到这样的事儿：你开发实现了一套AP型的分布式系统（我在<a href=\"https://time.geekbang.org/column/article/200717\">04讲</a>提到了AP型系统的特点，你可以回顾一下），实现了最终一致性。业务也接入了，运行正常，一起看起来都那么美好。</p><p>可是，突然有同事说，我们要拉这几个业务的数据做实时分析，希望数据写入成功后，就能立即读取到新数据，也就是要实现强一致性（<a href=\"https://www.allthingsdistributed.com/2008/12/eventually_consistent.html\">Werner Vogels提出的客户端侧一致性模型</a>，不是指线性一致性），数据更改后，要保证用户能立即查询到。这时你该怎么办呢？首先你要明确最终一致性和强一致性有什么区别。</p><ul>\n<li>强一致性能保证写操作完成后，任何后续访问都能读到更新后的值；</li>\n<li>最终一致性只能保证如果对某个对象没有新的写操作了，最终所有后续访问都能读到相同的最近更新的值。也就是说，写操作完成后，后续访问可能会读到旧数据。</li>\n</ul><p>其实，在我看来，为了一个临时的需求，我们重新开发一套系统，或者迁移数据到新系统，肯定是不合适的。因为工作量比较大，而且耗时也长，而我建议你通过Quorum NWR解决这个问题。</p><p>也就是说，在原有系统上开发实现一个新功能，就可以满足业务同学的需求了。因为通过Quorum NWR，你可以自定义一致性级别，通过临时调整写入或者查询的方式，当W + R &gt; N时，就可以实现强一致性了。</p><!-- [[[read_end]]] --><p>其实，在AP型分布式系统中（比如Dynamo、Cassandra、InfluxDB企业版的DATA节点集群），Quorum NWR是通常都会实现的一个功能，很常用。对你来说，掌握Quorum NWR，不仅是掌握一种常用的实现一致性的方法，更重要的是，后续用户可以根据业务的特点，灵活地指定一致性级别。</p><p>为了帮你掌握Quorum NWR，除了带你了解它的原理外，我还会以InfluxDB企业版的实现为例，带你看一下它在实际场景中的实现，这样你可以在理解原理的基础上，掌握Quorum NWR的实战技巧。</p><p>首先，你需要了解Quorum NWR中的三个要素，N、W、R。因为它们是Quorum NWR的核心内容，我们就是通过组合这三个要素，实现自定义一致性级别的。</p><h2>Quorum NWR的三要素</h2><p>N表示副本数，又叫做复制因子（Replication Factor）。也就是说，N表示集群中同一份数据有多少个副本，就像下图的样子：</p><p><img src=\"https://static001.geekbang.org/resource/image/8a/bb/8a582c39e4795429a986955a6a1c9ebb.jpg?wh=1142*575\" alt=\"\" title=\"图1\"></p><p>从图中你可以看到，在这个三节点的集群中，DATA-1有2个副本，DATA-2有3个副本，DATA-3有1个副本。也就是说，副本数可以不等于节点数，不同的数据可以有不同的副本数。</p><p>需要你注意的是，在实现Quorum NWR的时候，你需要实现自定义副本的功能。也就是说，用户可以自定义指定数据的副本数，比如，用户可以指定DATA-1具有2个副本，DATA-2具有3个副本，就像图中的样子。</p><p>当我们指定了副本后，就可以对副本数据进行读写操作了。那么这么多副本，你要如何执行读写操作呢？先来看一看写操作，也就是W。</p><p>W，又称写一致性级别（Write Consistency Level），表示成功完成W个副本更新，才完成写操作：<br>\n<img src=\"https://static001.geekbang.org/resource/image/1b/7b/1b175952d815d40de45c0d0aba99ac7b.jpg?wh=1142*548\" alt=\"\" title=\"图2\"></p><p>从图中你可以看到，DATA-2的写副本数为2，也就说，对DATA-2执行写操作时，完成了2个副本的更新（比如节点A、C），才完成写操作。</p><p>那么有的同学会问了，DATA-2有3个数据副本，完成了2副本的更新，就完成了写操作，那么如何实现强一致性呢？如果读到了第三个数据副本（比如节点B），不就可能无法读到更新后的值了吗？别急，我讲完如何执行读操作后，你就明白了。</p><p>R，又称读一致性级别（Read Consistency Level），表示读取一个数据对象时需要读R个副本。你可以这么理解，读取指定数据时，要读R副本，然后返回R个副本中最新的那份数据：</p><p><img src=\"https://static001.geekbang.org/resource/image/5b/5c/5b634d40032cceeffcbc66c3e177735c.jpg?wh=1142*586\" alt=\"\" title=\"图3\"></p><p>从图中你可以看到，DATA-2的读副本数为2。也就是说，客户端读取DATA-2的数据时，需要读取2个副本中的数据，然后返回最新的那份数据。</p><p>这里需要你注意的是，无论客户端如何执行读操作，哪怕它访问的是写操作未强制更新副本数据的节点（比如节点B），但因为W(2) + R(2) &gt; N(3)，也就是说，访问节点B，执行读操作时，因为要读2份数据副本，所以除了节点B上的DATA-2，还会读取节点A或节点C上的DATA-2，就像上图的样子（比如节点C上的DATA-2），而节点A和节点C的DATA-2数据副本是强制更新成功的。这个时候，返回给客户端肯定是最新的那份数据。</p><p>你看，通过设置R为2，即使读到前面问题中的第三份副本数据（比如节点B），也能返回更新后的那份数据，实现强一致性了。</p><p>除此之外，关于NWR需要你注意的是，N、W、R值的不同组合，会产生不同的一致性效果，具体来说，有这么两种效果：</p><ul>\n<li>当W + R &gt; N的时候，对于客户端来讲，整个系统能保证强一致性，一定能返回更新后的那份数据。</li>\n<li>当W + R &lt;= N的时候，对于客户端来讲，整个系统只能保证最终一致性，可能会返回旧数据。</li>\n</ul><p>你可以看到，Quorum NWR的原理并不复杂，也相对比较容易理解，但在这里，我想强调一下，掌握它的关键在于如何根据不同的场景特点灵活地实现Quorum NWR，所以接下来，我带你具体问题具体分析，以InfluxDB企业版为例讲解一下。</p><h2>如何实现Quorum NWR？</h2><p>在InfluxDB企业版中，可以在创建保留策略时，设置指定数据库（Database）对应的副本数，具体的命令，就像下面的样子：</p><ul>\n<li>create retention policy “rp_one_day” on “telegraf” duration 1d replication 3</li>\n</ul><p>通过replication参数，指定了数据库telegraf对应的副本数为3。</p><p>需要你注意的，在InfluxDB企业版中，副本数不能超过节点数据。你可以这么理解，多副本的意义在于冗余备份，如果副本数超过节点数，就意味着在一个节点上会存在多个副本，那么这时冗余备份的意义就不大了。比如机器故障时，节点上的多个副本是同时被影响的。</p><p>InfluxDB企业版，支持“any、one、quorum、all”4种写一致性级别，具体的含义是这样的。</p><ul>\n<li>any：任何一个节点写入成功后，或者接收节点已将数据写入Hinted-handoff缓存（也就是写其他节点失败后，本地节点上缓存写失败数据的队列）后，就会返回成功给客户端。</li>\n<li>one：任何一个节点写入成功后，立即返回成功给客户端，不包括成功写入到Hinted-handoff缓存。</li>\n<li>quorum：当大多数节点写入成功后，就会返回成功给客户端。此选项仅在副本数大于2时才有意义，否则等效于all。</li>\n<li>all：仅在所有节点都写入成功后，返回成功。</li>\n</ul><p>我想强调一下，对时序数据库而言，读操作常会拉取大量数据，查询性能是挑战，是必须要考虑优化的，因此，在InfluxDB企业版中，不支持读一致性级别，只支持写一致性级别。另外，我们可以通过设置写一致性级别为all，来实现强一致性。</p><p>你看，如果我们像InfluxDB企业版这样，实现了Quorum NWR，那么在业务临时需要实现强一致性时，就可以通过设置写一致性级别为all，来实现了。</p><h2>内容小结</h2><p>以上就是本节课的全部内容了，本节课我主要带你了解了Quorum NWR的原理、InfluxDB企业版的Quorum NWR实现。我希望你明确这样几个重点。</p><ol>\n<li>\n<p>一般而言，不推荐副本数超过当前的节点数，因为当副本数据超过节点数时，就会出现同一个节点存在多个副本的情况。当这个节点故障时，上面的多个副本就都受到影响了。</p>\n</li>\n<li>\n<p>当W + R &gt; N时，可以实现强一致性。另外，如何设置N、W、R值，取决于我们想优化哪方面的性能。比如，N决定了副本的冗余备份能力；如果设置W = N，读性能比较好；如果设置R = N，写性能比较好；如果设置W = (N + 1) / 2、R = (N + 1) / 2，容错能力比较好，能容忍少数节点（也就是(N - 1) / 2）的故障。</p>\n</li>\n</ol><p>最后，我想说的是，Quorum NWR是非常实用的一个算法，能有效弥补AP型系统缺乏强一致性的痛点，给业务提供了按需选择一致性级别的灵活度，建议你的开发实现AP型系统时，也实现Quorum NWR。</p><h2>课堂思考</h2><p>我提到实现Quorum NWR时，需要实现自定义副本的能力，那么，一般设置几个副本就可以了，为什么呢？欢迎在留言区分享你的看法，与我一同讨论。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"11 | Gossip协议：流言蜚语，原来也可以实现一致性","id":208182},"right":{"article_title":"13 | PBFT算法：有人作恶，如何达成共识？","id":209450}},"comments":[{"had_liked":false,"id":201900,"user_name":"沈伟敏","can_delete":false,"product_type":"c1","uid":1083877,"ip_address":"","ucode":"329DACB07D91DE","user_header":"https://static001.geekbang.org/account/avatar/00/10/89/e5/a346ba59.jpg","comment_is_top":false,"comment_ctime":1585875294,"is_pvip":false,"replies":[{"id":"77177","content":"加一颗星:)，不违背，这么理解，尽管通过N、W、R组合，可以实现不同的一致性级别，但对于同一份数据而言，CP和AP是不可兼得。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586885584,"ip_address":"","comment_id":201900,"utype":1}],"discussion_count":7,"race_medal":0,"score":"74600319326","product_id":100046101,"comment_content":"AP系统之上通过Quorum NWR实现了强一致性，这个是不是违背了“CAP不可能三角”。这个要怎么理解呢？","like_count":18,"discussions":[{"author":{"id":1475385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/83/39/f9623363.jpg","nickname":"竹马彦四郎的好朋友影法師","note":"","ucode":"A9555AEFF90CDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258357,"discussion_content":"不矛盾的，NWR在P不发生的时候，AP系统实现了客户端侧（注意，仅仅是客户端侧，并不是真实的线性一致性）的C的","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1588681411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490450,"discussion_content":"加一颗星:)，不违背，这么理解，尽管通过N、W、R组合，可以实现不同的一致性级别，但对于同一份数据而言，CP和AP是不可兼得。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586885584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335880,"discussion_content":"我是这么理解的，C是指系统能被外部访问到的节点都表现出一致性，用了NWR后，访问AP系统有些节点返回旧的数据，有些又返回新的数据，这其实不满足C了，只不过NWR多了一层比较操作，使得最终数据对于上层业务来讲是强一致的（也就是文中所讲的“客户端侧的一致性”）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608365479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548587,"discussion_content":"Quorum NWR解决不了A，正常的CP需要所有节点达到C状态，Quorum NWR虽然不需要全部节点达到C状态，但还是要W个节点达到C状态，这W个节点如果发生分区就解决不了A的问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643271017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315176,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKIkpsQkTyLtfxgib35o0ho9nWmCHwJL8BYibJPPT22fkT1aTwHhwQc0krINWjTVRjibF1bMTgia5mflg/132","nickname":"Geek_2a0deb","note":"","ucode":"DBF960FDFB77C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397856,"discussion_content":"我怎么觉得反而是CAP实践的理论之一的支撑呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632673568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067667,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4a/93/8986789d.jpg","nickname":"C生万物","note":"","ucode":"1D6DC5C5055C1C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287045,"discussion_content":"能讲清楚点吗？很容易混淆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593353398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054963,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/f3/cd07e64c.jpg","nickname":"lujg","note":"","ucode":"6CCCD89A29B06D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230075,"discussion_content":"对于这个问题，在nwr为3-2-2时，当发生分区时如果读和写发生在两个分区，会发生读或写失败的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586705615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195389,"user_name":"姜川","can_delete":false,"product_type":"c1","uid":1684311,"ip_address":"","ucode":"0F8A349623EAB5","user_header":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","comment_is_top":false,"comment_ctime":1585185049,"is_pvip":false,"replies":[{"id":"75998","content":"加一颗星:)，理论上是可以的，但在实际中，没必要，因为我们在领导者节点上执行读操作，就能实现强一致性了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586196174,"ip_address":"","comment_id":195389,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57419759897","product_id":100046101,"comment_content":"如果我们用raft协议的最终一致性来做整个系统的核心协议，这时出现了要强一致的需求，我们就可以不改变raft协议的前提下，引入NWR，raft协议已经保证了W是超过半数以上的，那我们就让R也超过半数以上，就能保证基于raft协议还能做出强一致性的需求了，或者改动raft协议，让其可以拥有配置写ALL的能力也可以","like_count":14,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489050,"discussion_content":"加一颗星:)，理论上是可以的，但在实际中，没必要，因为我们在领导者节点上执行读操作，就能实现强一致性了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586196174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548592,"discussion_content":"脱裤子放屁 哈哈","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1643271119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214222,"user_name":"竹马彦四郎的好朋友影法師","can_delete":false,"product_type":"c1","uid":1475385,"ip_address":"","ucode":"A9555AEFF90CDF","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/39/f9623363.jpg","comment_is_top":false,"comment_ctime":1588680442,"is_pvip":false,"replies":[{"id":"79465","content":"加一颗星:)，最最大部分场景，都不需要“eactly once”的线性一致性，只要能保证写操作完成后，就能一直和持续读取到新数据，就可以了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1588783688,"ip_address":"","comment_id":214222,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40243386106","product_id":100046101,"comment_content":"&quot;当 W + R &gt; N 的时候，对于客户端来讲，整个系统能保证强一致性，一定能返回更新后的那份数据。&quot;<br>顿时明白了韩老师在本文开头说的 &quot;Werner Vogels 提出的客户端侧一致性模型，不是指线性一致性&quot;<br>确实，图1中的AP系统其实并没有实现线性一致性，但是该AP系统实现了客户端侧一致性模型。","like_count":9,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493989,"discussion_content":"加一颗星:)，最最大部分场景，都不需要“eactly once”的线性一致性，只要能保证写操作完成后，就能一直和持续读取到新数据，就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588783688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187726,"user_name":"右耳听海","can_delete":false,"product_type":"c1","uid":1022011,"ip_address":"","ucode":"E0B9F1083F4F98","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/3b/5af90c80.jpg","comment_is_top":false,"comment_ctime":1584199581,"is_pvip":false,"replies":[{"id":"72442","content":"本质上是因为这是不管怎么读，都能读取到已更新的那个副本，比如你这么想，三节点集群（n为3），写一致性级别（w）为3，读一致性级别（r）为1，也就是说，只要写成功了，所有的副本都是成功更新过的，这时不管读取哪个节点，都能读取到最新的数据。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1584235949,"ip_address":"","comment_id":187726,"utype":1}],"discussion_count":5,"race_medal":0,"score":"40238905245","product_id":100046101,"comment_content":"老师能讲下为什么w+r&gt;n时是强一致性的吗","like_count":8,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487212,"discussion_content":"本质上是因为这是不管怎么读，都能读取到已更新的那个副本，比如你这么想，三节点集群（n为3），写一致性级别（w）为3，读一致性级别（r）为1，也就是说，只要写成功了，所有的副本都是成功更新过的，这时不管读取哪个节点，都能读取到最新的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584235949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2366090,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/rJ9JYxIde7RCCrgOstQ7UUiaHVFOKzWtSsShXDfOUicmpGzUewvyhEqyoeKP0rdJZ7DRktmQFWyXkKpKhFVAfia8Q/132","nickname":"Geek_63aefe","note":"","ucode":"ACE6EE4BEAA30E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353141,"discussion_content":"换个角度 n-w < r : n-w代表没更新的数量 小于读取数量R 所以就算读取了全部了没更新的副本，也可以读到了更新的副本","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615022936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1217374,"avatar":"https://static001.geekbang.org/account/avatar/00/12/93/5e/28a90f16.jpg","nickname":"大石头","note":"","ucode":"702B4DEA849BE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289598,"discussion_content":"鸽笼原理扩展","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594151283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548593,"discussion_content":"大于n代表w和r有交叉节点，也就代表r肯定能读到w的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643271181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1296635,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c8/fb/1e282c37.jpg","nickname":"Jungggle","note":"","ucode":"CEF098BDED51BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276119,"discussion_content":"写加读大于副本数就是读写副本有重合就是说一定会读到写的那个副本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590820640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1296635,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c8/fb/1e282c37.jpg","nickname":"Jungggle","note":"","ucode":"CEF098BDED51BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276118,"discussion_content":"写加读大于副本数就是读写副本有重合就是说一定会读到写的那个副本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590820627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222788,"user_name":"Michael Tesla","can_delete":false,"product_type":"c1","uid":1033053,"ip_address":"","ucode":"C627F090293608","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c3/5d/ced9b5c2.jpg","comment_is_top":false,"comment_ctime":1590912659,"is_pvip":false,"replies":[{"id":"87270","content":"加一颗星:)，不需要的，实现操作的冥等性和状态机，就可以了，比如，“SET X = 1”，因为重试，最终提交了2次，那么，经过状态机的运算后，最终的X值还是1。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595343996,"ip_address":"","comment_id":222788,"utype":1}],"discussion_count":3,"race_medal":0,"score":"31655683731","product_id":100046101,"comment_content":"老师，写入 W 个节点失败，有可能有脏数据残留，是不是需要使用分布式事务呢？","like_count":8,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496917,"discussion_content":"加一颗星:)，不需要的，实现操作的冥等性和状态机，就可以了，比如，“SET X = 1”，因为重试，最终提交了2次，那么，经过状态机的运算后，最终的X值还是1。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595343996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1817815,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/bc/d7/938c83b8.jpg","nickname":"fy","note":"","ucode":"31C9436E57462E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303061,"discussion_content":"没错，如果第一次失败的数据没有回滚，那后续读会出现一会有一会没有的情况，作者没说这个要怎么解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599125852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1086245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/93/25/8ae7fe6b.jpg","nickname":"梁海龙","note":"","ucode":"7DE7D846E6BC28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281628,"discussion_content":"这里点到死穴了！如果没有事务，必然读到脏数据，导致数据错误。其实我理解的qwr和老师的不一样。我的理解不需要事务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591780516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211184,"user_name":"kylexy_0817","can_delete":false,"product_type":"c1","uid":1068372,"ip_address":"","ucode":"392DD9DD5E4B6E","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/54/9c214885.jpg","comment_is_top":false,"comment_ctime":1587911030,"is_pvip":false,"replies":[{"id":"79458","content":"加一颗星:)，writeConcern&#47;readConcern原理与这个类似。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1588781338,"ip_address":"","comment_id":211184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27357714806","product_id":100046101,"comment_content":"联想起另一门视频课程，MongoDB，好像也是采取Quorum NWR算法实现数据强一致性^_^","like_count":6,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493214,"discussion_content":"加一颗星:)，writeConcern/readConcern原理与这个类似。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588781338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185840,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1583710527,"is_pvip":false,"replies":[{"id":"76182","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586284328,"ip_address":"","comment_id":185840,"utype":1}],"discussion_count":1,"race_medal":1,"score":"23058547007","product_id":100046101,"comment_content":"关于思考题，老师在文中提到的资料有一些参考点：<br>在需要提供高性能和高可用性的分布式存储系统中，副本的数量即 n 通常超过 2 个。<br>只关注容错的系统通常使用 n=3 （W=2和R=2配置）。<br>需要提供非常高读取负载的系统通常会复制超出容错要求的数据","like_count":5,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486522,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586284328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185881,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1583719366,"is_pvip":false,"replies":[{"id":"76180","content":"加一颗星:)，一般2副本或3副本，就可以了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586283917,"ip_address":"","comment_id":185881,"utype":1}],"discussion_count":1,"race_medal":1,"score":"18763588550","product_id":100046101,"comment_content":"我理解课后思考的问题是”为什么只需要备份数据到部分节点，不需要备份到所有节点“，因为是AP系统，所以为了提升效率，备份数据到N个副本就可以认为是数据写入成功了，整个系统因为是最终一致性，系统内部会异步同步节点之间的数据，所以最终所有节点上的数据肯定会一致的，另外工程实践里N&gt;=3, 是因为冗余数据是保证可靠性的手段，如果N=2，那么损失一个节点就退化为单节点了。","like_count":4,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486541,"discussion_content":"加一颗星:)，一般2副本或3副本，就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586283917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245975,"user_name":"fy","can_delete":false,"product_type":"c1","uid":1817815,"ip_address":"","ucode":"31C9436E57462E","user_header":"https://static001.geekbang.org/account/avatar/00/1b/bc/d7/938c83b8.jpg","comment_is_top":false,"comment_ctime":1599123646,"is_pvip":false,"replies":[{"id":"92412","content":"加一颗星:)，是存在这个现象，此时能保证“写成功后，一定能读取到更新后的值”，但不能保证“写失败，只能读取到之前的值”，如果需要实现这一点，咱们需要实现事务，也就是说，当咱们在实现系统时，需要根据场景特点选择适合的技术。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1602521396,"ip_address":"","comment_id":245975,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14484025534","product_id":100046101,"comment_content":"问个问题，假设322配置，第一次写入只成功了一个节点，返回客户端错误，这时候有个读取操作，刚好获取到了上一次写入成功的那一个副本，然后返回了这份数据，那不是和之前的操作结果矛盾了么","like_count":3,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505024,"discussion_content":"加一颗星:)，是存在这个现象，此时能保证“写成功后，一定能读取到更新后的值”，但不能保证“写失败，只能读取到之前的值”，如果需要实现这一点，咱们需要实现事务，也就是说，当咱们在实现系统时，需要根据场景特点选择适合的技术。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602521396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501761,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ea/41/fe40bc72.jpg","nickname":"Vincent","note":"","ucode":"1EEA77E904BFA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311300,"discussion_content":"文中的场景是最终一致性吧，有节点写入成功就返回成功了，写入失败的节点会重试。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602300668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1147682,"avatar":"https://static001.geekbang.org/account/avatar/00/11/83/22/c3dae274.jpg","nickname":"阿kai(aeo","note":"","ucode":"6B1D650D9BFA4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1501761,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ea/41/fe40bc72.jpg","nickname":"Vincent","note":"","ucode":"1EEA77E904BFA3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541838,"discussion_content":"感觉重试的过程中无法保证该新值没有被读取，还是采取事务比较保险.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640578169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311300,"ip_address":""},"score":541838,"extra":""}]}]},{"had_liked":false,"id":186129,"user_name":"longyi","can_delete":false,"product_type":"c1","uid":1318113,"ip_address":"","ucode":"204CC8D3E98AAC","user_header":"https://static001.geekbang.org/account/avatar/00/14/1c/e1/c99d1473.jpg","comment_is_top":false,"comment_ctime":1583762914,"is_pvip":false,"replies":[{"id":"76177","content":"加一颗星:)，比如版本号、时间戳等。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586281957,"ip_address":"","comment_id":186129,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14468664802","product_id":100046101,"comment_content":"老师,你在文中提到”读取指定数据时，要读 R 副本，然后返回 R 个副本中最新的那份数据”<br>，问题是我们怎么去判断那个副本是最新的呢？","like_count":3,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486636,"discussion_content":"加一颗星:)，比如版本号、时间戳等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586281957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205053,"discussion_content":"数据一般都会有写入时间的，或者递增编号之类的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584255836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1318113,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1c/e1/c99d1473.jpg","nickname":"longyi","note":"","ucode":"204CC8D3E98AAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":205776,"discussion_content":"分布式系统里面的时间对齐是个难题，我猜这里用的是版本号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584340909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":205053,"ip_address":""},"score":205776,"extra":""}]}]},{"had_liked":false,"id":185866,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1583716919,"is_pvip":false,"replies":[{"id":"76181","content":"加一颗星:)，取决于场景，比如，KV数据就需要，而时序数据不需要，因为一条时序数据记录是没有“新旧”之说的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586284256,"ip_address":"","comment_id":185866,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14468618807","product_id":100046101,"comment_content":"每次写入数据都要产生对应版本号是吧","like_count":3,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486535,"discussion_content":"加一颗星:)，取决于场景，比如，KV数据就需要，而时序数据不需要，因为一条时序数据记录是没有“新旧”之说的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586284256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206722,"user_name":"侧耳倾听","can_delete":false,"product_type":"c1","uid":1512642,"ip_address":"","ucode":"5BF2A2440B54F0","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","comment_is_top":false,"comment_ctime":1586921390,"is_pvip":true,"replies":[{"id":"77235","content":"加一颗星:)，赞。我再补充下，W也是可以动态调整的，为什么呢？因为W表示的是，完成一个写操作，需要同时成功更新多少个副本，比如N为3，W为1，3副本，肯定是需要更新3个副本的，但W为1，也就是说，只要我们完成了一个副本的更新，就可以返回写成功给客户端。另外，如果此时R为1，则实现的是最终一致性，会读到旧数据，但最终会读到新数据。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586938468,"ip_address":"","comment_id":206722,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10176855982","product_id":100046101,"comment_content":"明白老师的意思了，系统已经在运行，副本数和写入数都是已定的，理论上不能动态调整的，所以我们只能调整R来实现强一致性，实时读取最新数据，所以我们只需要在新的功能里计算好R的数目，然后接入存储系统读取数据，然后在本地通过版本号或者日期取最新数据即可。","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491879,"discussion_content":"加一颗星:)，赞。我再补充下，W也是可以动态调整的，为什么呢？因为W表示的是，完成一个写操作，需要同时成功更新多少个副本，比如N为3，W为1，3副本，肯定是需要更新3个副本的，但W为1，也就是说，只要我们完成了一个副本的更新，就可以返回写成功给客户端。另外，如果此时R为1，则实现的是最终一致性，会读到旧数据，但最终会读到新数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586938468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185827,"user_name":"艾瑞克小霸王","can_delete":false,"product_type":"c1","uid":1674555,"ip_address":"","ucode":"58FCCAC0F675E1","user_header":"https://static001.geekbang.org/account/avatar/00/19/8d/3b/42d9c669.jpg","comment_is_top":false,"comment_ctime":1583686454,"is_pvip":false,"replies":[{"id":"76183","content":"加一颗星:)，节点指的就是服务器节点，这是个新算法，和Raft没有关系呢。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586284411,"ip_address":"","comment_id":185827,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10173621046","product_id":100046101,"comment_content":"这里的一个节点的意思是不是一个raft集群? 采用多个raft集群做数据分片和多副本?","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486517,"discussion_content":"加一颗星:)，节点指的就是服务器节点，这是个新算法，和Raft没有关系呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586284411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246204,"user_name":"Bryant.C","can_delete":false,"product_type":"c1","uid":1172363,"ip_address":"","ucode":"0DF832373CFA97","user_header":"https://static001.geekbang.org/account/avatar/00/11/e3/8b/27f875ba.jpg","comment_is_top":false,"comment_ctime":1599207158,"is_pvip":false,"replies":[{"id":"96380","content":"加一颗星:)，这个机制类似写一致性级别。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1606833912,"ip_address":"","comment_id":246204,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5894174454","product_id":100046101,"comment_content":"我理解Kafka是不是也不支持读一致性级别，通过ack为-1设置强一致","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505089,"discussion_content":"加一颗星:)，这个机制类似写一致性级别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606833912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554252,"discussion_content":"Kafka读写都在主节点上，为什么不是强一致性呢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646287513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193709,"user_name":"月迷津渡","can_delete":false,"product_type":"c1","uid":1264111,"ip_address":"","ucode":"2B18B2FE3DAC3B","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","comment_is_top":false,"comment_ctime":1584951835,"is_pvip":false,"replies":[{"id":"76007","content":"加一颗星:)，一般而言，N不需要动态的，故障只是偶尔发生的，而且能很快修复的，我们需要考虑的是，如果在故障发生时，保证系统的稳定运行，“读大多数、写大多数”是能实现这点的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586200168,"ip_address":"","comment_id":193709,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5879919131","product_id":100046101,"comment_content":"这篇核心写的很清晰，我有个小问题，关于W和R的平衡当中提到要写优化就要R=N，W=1 这样就满足W+R&gt;N，对于这个W=1是会变吗就是不同数据可以写到不同节点 但是还是满足W=1，因为我在考虑当这个持有数据的唯一节点挂了，那节点所持有数据就不可修复了吧。所以后面提到读大多数和写大多数节点是一种满足容错的配置。<br>另外我想到如果集群中某个节点挂了的话N会动态变化吗？因为节点挂了就意味着数据不可用在机器网络或硬件坏掉的情况下数据也无法恢复到其他新启动节点？我记得mongo里就是配置readConcern和WriteConcern就是用的majortiy 这种感觉就是应对节点变化的一种策略(动态大多数而并非指定指定一个固定的值)吧。","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488631,"discussion_content":"加一颗星:)，一般而言，N不需要动态的，故障只是偶尔发生的，而且能很快修复的，我们需要考虑的是，如果在故障发生时，保证系统的稳定运行，“读大多数、写大多数”是能实现这点的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586200168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214346,"discussion_content":"写1这种在实际中应该不会出现这样的使用方式，因为就把数据副本这个重要的容灾手段主动废掉了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585184463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214340,"discussion_content":"你可以观察下老师的具体实现，他是写ALL，读1实现的强一致性，理论上你说的写1，读ALL也可以实现，但实际应用场景中读比较多，且可能会读很多数据，这时采用读ALL，会有性能问题，且多数据在进行最新判断时也会有性能影响，所以我认为老师这篇内容向表达的是，如果我们是最终一致性模型，突然遇到了强一致的需求时，可以考虑写ALL，或者提前设计好NWR模型用于灵活配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585184271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190324,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1584628929,"is_pvip":false,"replies":[{"id":"75708","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586019910,"ip_address":"","comment_id":190324,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879596225","product_id":100046101,"comment_content":"按需求配置，再好不过了","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487951,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586019910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189296,"user_name":"彦","can_delete":false,"product_type":"c1","uid":1125048,"ip_address":"","ucode":"13EE4093C488A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/b8/edbafb82.jpg","comment_is_top":false,"comment_ctime":1584497000,"is_pvip":false,"replies":[{"id":"76020","content":"加一颗星:)，加个时间戳。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586203667,"ip_address":"","comment_id":189296,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5879464296","product_id":100046101,"comment_content":"进行R操作时，R&gt;2，读出的数据怎么知道哪个数据是最新的呢？时序数据库里面本来带了时间戳，可以靠这个判断，但还是需要保障整个系统时序一致，其他非时序系统怎么办？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487665,"discussion_content":"加一颗星:)，加个时间戳。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586203667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1349798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/98/a6/41394d63.jpg","nickname":"W.G.Ma","note":"","ucode":"3518F2058023F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234321,"discussion_content":"分布式环境时间戳并不可靠，新的写入时间有可能早于旧的版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586962634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214350,"discussion_content":"写入数据时，给数据加个时间戳，或者借用redis的原子自增操作增加一个数据序号也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585184722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187831,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1584256151,"is_pvip":true,"replies":[{"id":"72579","content":"美国的，可考虑科学上网，培养阅读英文文档的习惯:)，坚持下来，会收获很大。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1584293849,"ip_address":"","comment_id":187831,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5879223447","product_id":100046101,"comment_content":"influxdb 不是国产的开源时序数据库吗？ 为什么没有找中文文档呢？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487259,"discussion_content":"美国的，可考虑科学上网，培养阅读英文文档的习惯:)，坚持下来，会收获很大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584293849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186268,"user_name":"iron_man","can_delete":false,"product_type":"c1","uid":1099883,"ip_address":"","ucode":"C0053A59442910","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/6b/0f3876ef.jpg","comment_is_top":false,"comment_ctime":1583811895,"is_pvip":false,"replies":[{"id":"76175","content":"加一颗星:)，是的，用于失败重传的缓存备份，也就是，如果写远程节点失败了，将数据缓存下来，然后再重传。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586280881,"ip_address":"","comment_id":186268,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5878779191","product_id":100046101,"comment_content":"any：任何一个节点写入成功后，或者接收节点已将数据写入 Hinted-handoff 缓存（也就是写其他节点失败后，本地节点上缓存写失败数据的队列）后，就会返回成功给客户端。<br>这里“本地节点上缓存写失败数据的队列“是什么意思，不太明白，是指缓存备份吗？本地缓存写失败了再写到这个缓存里面？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486700,"discussion_content":"加一颗星:)，是的，用于失败重传的缓存备份，也就是，如果写远程节点失败了，将数据缓存下来，然后再重传。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586280881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1475385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/83/39/f9623363.jpg","nickname":"竹马彦四郎的好朋友影法師","note":"","ucode":"A9555AEFF90CDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258367,"discussion_content":"类似于gossip中的直接邮寄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588682273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250775,"avatar":"https://static001.geekbang.org/account/avatar/00/13/15/d7/96e77edd.jpg","nickname":"问心","note":"","ucode":"6808568D61CE36","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204446,"discussion_content":"应该是把哪些节点失败、失败的内容记到本地缓存吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584174290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186019,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1583742996,"is_pvip":true,"replies":[{"id":"72418","content":"是的","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1584188558,"ip_address":"","comment_id":186019,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5878710292","product_id":100046101,"comment_content":"W+R=N时应该也是最终一致吧","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486587,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584188558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448893,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKj4w4lW7ibGEVxPv8wS1CrXKDeBz3RAaAdISxQSD23uUpV3wicsIMepaYZE8GzRcWmSpjet5NDN4MA/132","nickname":"Zm","note":"","ucode":"831FF80F07E965","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214633,"discussion_content":"作者回答的是错的，必须大于。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585219906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1667175,"avatar":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","nickname":"qinsi","note":"","ucode":"090D9C4068FF12","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1448893,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKj4w4lW7ibGEVxPv8wS1CrXKDeBz3RAaAdISxQSD23uUpV3wicsIMepaYZE8GzRcWmSpjet5NDN4MA/132","nickname":"Zm","note":"","ucode":"831FF80F07E965","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214662,"discussion_content":"大于时强一致，其他情况最终一致，没毛病阿","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585223676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":214633,"ip_address":""},"score":214662,"extra":""},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1448893,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKj4w4lW7ibGEVxPv8wS1CrXKDeBz3RAaAdISxQSD23uUpV3wicsIMepaYZE8GzRcWmSpjet5NDN4MA/132","nickname":"Zm","note":"","ucode":"831FF80F07E965","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335883,"discussion_content":"错个毛线","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608366070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":214633,"ip_address":""},"score":335883,"extra":""}]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205056,"discussion_content":"W+R>N 可以保证能读到最新写入的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584256197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349348,"user_name":"飞鱼","can_delete":false,"product_type":"c1","uid":1739390,"ip_address":"","ucode":"95109E8F7DBE39","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8a/7e/bfe37c46.jpg","comment_is_top":false,"comment_ctime":1655900854,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655900854","product_id":100046101,"comment_content":"从图中你可以看到，DATA-2 的读副本数为 2。也就是说，客户端读取 DATA-2 的数据时，需要读取 2 个副本中的数据，然后返回最新的那份数据。这里需要你注意的是，无论客户端如何执行读操作，哪怕它访问的是写操作未强制更新副本数据的节点（比如节点 B），但因为 W(2) + R(2) &gt; N(3)，也就是说，访问节点 B，执行读操作时，因为要读 2 份数据副本，所以除了节点 B 上的 DATA-2，还会读取节点 A 或节点 C 上的 DATA-2，就像上图的样子（比如节点 C 上的 DATA-2），而节点 A 和节点 C 的 DATA-2 数据副本是强制更新成功的。这个时候，返回给客户端肯定是最新的那份数据。<br><br>老师，这里B节点是旧数据，C或A是最新的数据。那么，客户端是如何在A\\C 和B中做取舍的，他怎么知道B是旧的，是因为有额外存储的版本信息吗？","like_count":0},{"had_liked":false,"id":349347,"user_name":"飞鱼","can_delete":false,"product_type":"c1","uid":1739390,"ip_address":"","ucode":"95109E8F7DBE39","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8a/7e/bfe37c46.jpg","comment_is_top":false,"comment_ctime":1655899939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655899939","product_id":100046101,"comment_content":"读一致性和写一致性，具体是什么意思？","like_count":0},{"had_liked":false,"id":343239,"user_name":"王应发","can_delete":false,"product_type":"c1","uid":2768731,"ip_address":"","ucode":"EF597BADCC526B","user_header":"","comment_is_top":false,"comment_ctime":1650723494,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650723494","product_id":100046101,"comment_content":"我能在哪找到更多有关于实现思路的细节，比如如何确定数据应该写到哪些副本上。副本和数据关系的维护是怎样的。","like_count":0},{"had_liked":false,"id":336737,"user_name":"张可夫斯基","can_delete":false,"product_type":"c1","uid":1076487,"ip_address":"","ucode":"3B8DF6D98583F2","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKoEicqUZTJly55qoUXRmK4wia7YbnibsMncJaO6tKgKAQNJRfpMsibvfeiaukIibsCsuaic8QjQ3gOoTGA/132","comment_is_top":false,"comment_ctime":1646324868,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646324868","product_id":100046101,"comment_content":"W为all，R为1时，容错能力最好吧？ 可以容忍N-1副本故障。 W为1时，R为ALL，当刚写入数据的那个副本挂掉，那就会产生数据丢失吧？ 所以W至少写入2个以上，才能保证数据不丢失？","like_count":0},{"had_liked":false,"id":330409,"user_name":"Z宇锤锤","can_delete":false,"product_type":"c1","uid":2188142,"ip_address":"","ucode":"7DB36E986A7A51","user_header":"https://static001.geekbang.org/account/avatar/00/21/63/6e/6b971571.jpg","comment_is_top":false,"comment_ctime":1641970698,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641970698","product_id":100046101,"comment_content":"两副本就可以。读一写二，或者读二写一，都可以保证读取到最新数据","like_count":0},{"had_liked":false,"id":326757,"user_name":"核桃","can_delete":false,"product_type":"c1","uid":1385204,"ip_address":"","ucode":"7AB05270CBCCCB","user_header":"https://static001.geekbang.org/account/avatar/00/15/22/f4/9fd6f8f0.jpg","comment_is_top":false,"comment_ctime":1639662363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639662363","product_id":100046101,"comment_content":"在glusterfs里面还有一种叫仲裁节点的出现，可以理解为2+1的副本机制，其中2是两个副本数据节点，1是仲裁节点，该节点只保留分片副本元数据，不实际保存数据，这样做是为了减少副本数据量的，只要写入元数据一致就可以了，但是不需要所有副本数据都必须写入成功。可以借鉴一下。","like_count":0},{"had_liked":false,"id":319395,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1635775658,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1635775658","product_id":100046101,"comment_content":"Quorum NWR真实个巧妙的设计。","like_count":0},{"had_liked":false,"id":313198,"user_name":"yu","can_delete":false,"product_type":"c1","uid":1138645,"ip_address":"","ucode":"56856DCC0C8387","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/d5/2fec2911.jpg","comment_is_top":false,"comment_ctime":1632306818,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632306818","product_id":100046101,"comment_content":"小节里，“N 决定了副本的冗余备份能力；如果设置 W = N，读性能比较好；如果设置 R = N，写性能比较好”是不是写反了","like_count":0},{"had_liked":false,"id":300743,"user_name":"高峰","can_delete":false,"product_type":"c1","uid":1146082,"ip_address":"","ucode":"45C4C494400498","user_header":"https://static001.geekbang.org/account/avatar/00/11/7c/e2/7654211f.jpg","comment_is_top":false,"comment_ctime":1625368621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625368621","product_id":100046101,"comment_content":"请教下老师，一般W是固定的吗？对于写W份以外失败的副本数据是怎么补偿的，确保不丢不重，中断可恢复？谢谢老师","like_count":0},{"had_liked":false,"id":293806,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1621563150,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621563150","product_id":100046101,"comment_content":"感觉Quorum NWR是一种更泛化的分布式一致性模型， raft是Quorum NWR的一个具体实现","like_count":0},{"had_liked":false,"id":287231,"user_name":"充值一万","can_delete":false,"product_type":"c1","uid":1519086,"ip_address":"","ucode":"1B4B3AEFA9C8C2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epRK5v3IkvSfjicKNKlRLE2nTQUowhMvQkwWWWUSESat8EBbcPvMk4aAjZHGcsE5DCibES9WicHcC9Qw/132","comment_is_top":false,"comment_ctime":1617848206,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1617848206","product_id":100046101,"comment_content":"假设共十个节点，w=2，R=2，N=2，W+R&gt;N，强一致；如果写的时候，只写了1、2节点副本（因为W=2，写操作完成），这时候读操作读了8、9节点数据（不是最新的，但R=2，读操作完成），这样读到的数据就不是最新的了。这个如何理解？","like_count":0,"discussions":[{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549933,"discussion_content":"N代表的是副本数，而不是节点数， 他俩不是一个含义。\n我的理解是， N=2 那么就是只有2个副本，这个时候你把它放到1、2节点，那么你读8、9节点的时候，都没有这些数据的。寻址着也得找1、2节点呀。 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1644303042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274430,"user_name":"💢 星星💢","can_delete":false,"product_type":"c1","uid":1254392,"ip_address":"","ucode":"A402B765222C35","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","comment_is_top":false,"comment_ctime":1611020690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611020690","product_id":100046101,"comment_content":"也就是写其他节点失败后，本地节点上缓存写失败数据的队列，还有上节课的直接邮寄，请问老师，一般通过什么方法知道自己写别的节点是失败？","like_count":0},{"had_liked":false,"id":273897,"user_name":"凯瑞杨","can_delete":false,"product_type":"c1","uid":2254016,"ip_address":"","ucode":"199526B3F2DFC6","user_header":"https://static001.geekbang.org/account/avatar/00/22/64/c0/66d8e252.jpg","comment_is_top":false,"comment_ctime":1610711615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610711615","product_id":100046101,"comment_content":"请问最终一致性会丢用户数据么？ 比如配置写一个副本成功就返回，那么如果这个副本还没来得及同步给其它副本，机器挂了。 那么对于其它副本来说，当它接管用户的请求后，实际上是丢失了一条数据的。","like_count":0},{"had_liked":false,"id":269784,"user_name":"mymodian","can_delete":false,"product_type":"c1","uid":1336440,"ip_address":"","ucode":"10F98FCDBFA5A4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/3a2XUcwibflaUKmbrAsKeknOk2HaHzkgzPJDHLMerc1H0mEFlvaibvYzCE4lRfV5yPGFHJhekUgXzxemuaQp7zwg/132","comment_is_top":false,"comment_ctime":1608784656,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1608784656","product_id":100046101,"comment_content":"怎么处理异常呢？比如N=3 W=3 R=1，写入的时候只有两个节点写成功，一个节点写失败，这时写入操作应该按失败处理，但是R=1，可能读到已经写成功的节点，那么读取到的就是一个错误值了。","like_count":0,"discussions":[{"author":{"id":1010914,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIgYQgM25OaLGNWPUg5NSrQuCrPNicHqNgB9lsJGMalNU18sibF4cdYxKPuwgVsIc1m5ha5voHrY9Lg/132","nickname":"jacoffee","note":"","ucode":"B3BFD39138400B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564526,"discussion_content":"这种情况本来就是属于失败的写入，所以不会让客户端读取到。比如说kafka中如果生产者生产消息失败(如未能成功被指定数目的副本分区复制)，Broker会通过LEO和High Watermark等机制保证该条消息客户端是消费不到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650266980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266969,"user_name":"马里奥的马里奥","can_delete":false,"product_type":"c1","uid":1048423,"ip_address":"","ucode":"6848D9E82B58E3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/67/6ffe3a52.jpg","comment_is_top":false,"comment_ctime":1607559368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607559368","product_id":100046101,"comment_content":"“N 决定了副本的冗余备份能力；如果设置 W = N，读性能比较好；如果设置 R = N，写性能比较好”，怎么理解？","like_count":0},{"had_liked":false,"id":234880,"user_name":"Gopher","can_delete":false,"product_type":"c1","uid":1206229,"ip_address":"","ucode":"3C1F9012BB486D","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/d5/1b26b725.jpg","comment_is_top":false,"comment_ctime":1594817253,"is_pvip":false,"replies":[{"id":"86873","content":"加一颗星:)，如果遇到问题，多留言交流，咱们一起讨论。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1594959806,"ip_address":"","comment_id":234880,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594817253","product_id":100046101,"comment_content":"懂了这里的强一致性不是内部实现而是相当于外层实现","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501535,"discussion_content":"加一颗星:)，如果遇到问题，多留言交流，咱们一起讨论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594959806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230342,"user_name":"C生万物","can_delete":false,"product_type":"c1","uid":1067667,"ip_address":"","ucode":"1D6DC5C5055C1C","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/93/8986789d.jpg","comment_is_top":false,"comment_ctime":1593352015,"is_pvip":false,"replies":[{"id":"87386","content":"加一颗星:)，Quorum NWR无法实现线性一致性的，线性一致性，会在集中答疑里做个补充。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595439546,"ip_address":"","comment_id":230342,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1593352015","product_id":100046101,"comment_content":"说了很多常见的东西，但偏偏一些容易搞混的点却没讲清楚，像客户端一致性跟线性一致性，我还以为quorum就能实现跟raft paxos一样的强一致性了。","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499845,"discussion_content":"加一颗星:)，Quorum NWR无法实现线性一致性的，线性一致性，会在集中答疑里做个补充。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595439546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315525,"discussion_content":"大佬…客户端一致性是啥意思…3个节点写成功2个，下次读2个选最新的…不就是强一致性吗？客户端一致性和raft的线性一致性有啥区别吗？还有原子一致性和线性一致性是同一个吗？\n对了还有双写2个节点，怎么保证写入顺序呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603285663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335888,"discussion_content":"看看这个咯https://zhuanlan.zhihu.com/p/42239873，强一致性、线性一致性、原子一致性指的都是同一个东西，都是CAP的C。强一致性说每个能被外部访问到的节点都是一致性的，这里NWR有些返回新，有些返回旧，那明显不符吧，但是对于返回给客户端的数据，NWR多了层筛选，每次都选最新的，这样对上层业务就是一致的了，但系统本身并不满足C","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608367085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315525,"ip_address":""},"score":335888,"extra":""}]}]},{"had_liked":false,"id":194304,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1585047515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585047515","product_id":100046101,"comment_content":"写入是大多数。不要求立刻最新值，那就是one","like_count":0}]}