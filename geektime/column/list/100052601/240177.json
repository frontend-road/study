{"id":240177,"title":"01 | 软件设计到底是什么？","content":"<p>你好！我是郑晔。</p><p>一个软件需要设计，这是你一定认同的。但软件设计到底是什么，不同的人却有着不同的理解：</p><ul>\n<li>有人认为，设计就是讨论要用什么技术实现功能；</li>\n<li>有人认为，设计就是要考虑选择哪些框架和中间件；</li>\n<li>有人认为，设计就是设计模式；</li>\n<li>有人认为，设计就是Controller、Service加Model；</li>\n<li>……</li>\n</ul><p>你会发现，如果我们按照这些方式去了解“软件设计”，不仅软件设计的知识会很零散，而且你会像站在流沙之上一般：</p><ul>\n<li>今天你刚学会用Java，明天JavaScript成了新宠，还没等你下定决心转向，Rust又成了一批大公司吹捧的目标；</li>\n<li>你终于知道了消息队列在解决什么问题，准备学习强大的Kafka，这时候有人告诉你Pulsar在某些地方表现得更好；</li>\n<li>你总算理解了Observer模式，却有人告诉你JDK中早就提供了原生的支持，但更好的做法应该是用Guava的EventBus；</li>\n<li>你好不容易弄清楚MVC是怎样回事，却发现后端开发现在的主要工作是写RESTful服务，Controller还没有用，就应该改名成Resource了；</li>\n<li>……</li>\n</ul><p>我们说，软件设计要关注长期变化，需要应对需求规模的膨胀。这些在不断流变的东西可能还没你的软件生命周期长，又怎能支撑起长期的变化呢！</p><!-- [[[read_end]]] --><p>那么回到一开始的问题，软件设计到底是什么呢？</p><h2>核心的模型</h2><p>在回答这个问题之前，我们先来思考这样一件事：软件的开发目的是什么？</p><p>一个直白的答案就是，软件开发是为了解决由需求带来的各种问题，而解决的结果是一个可以运行的交付物。比如，我们在线购物的需求，是通过电商平台这个方案解决的。</p><p>那软件设计在这个过程中做的事情是什么呢？就是在需求和解决方案之间架设一个桥梁。</p><p><img src=\"https://static001.geekbang.org/resource/image/a6/20/a6920a1e9a4a8af9fe86b88f032cb820.jpg?wh=2248*1201\" alt=\"\"></p><p>区别于解决简单的问题，软件的开发往往是一项长期的工作，会有许多人参与其中。在这种情况下，就需要建立起一个统一的结构，以便于所有人都能有一个共同的理解。这就如同建筑中的图纸，懂建筑的人看了之后，就会产生一个统一的认识。</p><p>而在软件的开发过程中，这种统一的结构就是模型，而<strong>软件设计就是要构建出一套模型</strong>。</p><p>这里所说的模型，不仅包括用来描述业务的各种实体，也包括完成业务功能的各种组件。人们写代码中常常会用到的服务（Service）、调度器（Scheduler）等概念就是一个一个的模型。</p><p><strong>模型，是一个软件的骨架，是一个软件之所以是这个软件的核心</strong>。一个电商平台，它不用关系型数据库，还可以用NoSQL，但如果没有产品信息，没有订单，它就不再是电商平台了。</p><p>可能有不少人一听到模型，就会情不自禁地要打退堂鼓，认为这些内容过于高大上，其实大可不必，<strong>模型的粒度可大可小</strong>。如果把模型理解为一个一个的类，是不是你就会熟悉很多了，这就是小的模型。你也可以把一整个系统当作一个整体来理解，这就是大的模型。</p><p>关于设计，你一定听说过一个说法，“<strong>高内聚、低耦合</strong>”，（模块的内聚程度越高越好，模块间的耦合程度越低越好），<strong>这其实就是对模型的要求。</strong>一个“高内聚、低耦合”的模型能够有效地隐藏细节，让人理解起来也更容易，甚至还可以在上面继续扩展。比如，我们后面课程会讲到的程序设计语言，就是提供了一个又一个的编程模型，让我们今天写程序不用再面对各种硬件的差异，还能够在此基础上继续提供新功能。</p><p>你在日常工作中用到的各种框架和技术，也是提供了一个又一个的模型，它们大幅度降低了我们的开发门槛。所以你看，整个计算机世界就是在这样一个又一个模型的叠加中，一点一点构建出来的。用一个程序员所熟悉的说法就是：模型是分层的。这就像乐高一样，由一个个小块构建出一个个大一些的部件，再用这些部件组成最终的成品。</p><p>这与一些人常规理解的Controller、Service那种分层略有差异。但实际上，这才是在计算机行业中普遍存在的分层。我们熟悉的网络模型就是一个典型的分层模型。按照TCP/IP的分层方法，网络层要构建在网络接口层之上，应用层则要依赖传输层，而我们平时使用的大多数协议则属于应用层。</p><p><img src=\"https://static001.geekbang.org/resource/image/bc/5a/bc7c736084e79d067477c306a9f5bb5a.jpg?wh=2248*1115\" alt=\"\"></p><p>即便是在一个软件内部，模型也可以是分层的。<strong>我们可以先从最核心的模型<strong><strong>开始构建</strong></strong>，有了这个核心模型之后，<strong><strong>可以</strong></strong>通过组合这些基础的模型，构建出上面一层的模型</strong>。</p><p>我曾经做过一个交易系统的设计。在分析了主要的交易动作之后，我提出了一个交易原语的概念，包括资产冻结、解冻、出金、入金等少数几个动作。然后，把原先的交易动作变成了原语的组合。比如，下单是资产冻结，成交是不同账户的出金和入金，撤单则是资产解冻。</p><p><img src=\"https://static001.geekbang.org/resource/image/b6/8d/b6432a9f6de195311674a8c0ac5a9c8d.jpg?wh=2284*1285\" alt=\"\"></p><p>在这个结构下，由交易原语保证每个业务的准确性，由交易动作保证整个操作的事务性。从上面这个图中，你可以看出，这就是一种分层，一种模型上的分层。</p><p>好，到这里我们已经对软件设计中的模型有了一个初步的认识。总结一下就是，模型是一个软件的核心；模型的粒度可大可小；好的模型应该“高内聚、低耦合”；模型可以分层，由底层的模型提供接口，构建出上层的模型。</p><p>后续我们这个课程的大部分内容都会围绕着模型来讲：怎样理解模型、建立模型、评判模型的优劣等等。</p><p>学会这些知识之后，能在多大的粒度上应用它们，你就能掌控多大的模块。不过，仅仅是把软件设计理解成构建模型，这个理解还不够。模型设计也不能任意妄为，需要有一定的约束，而这个约束，就是软件设计要构建的另一个部分：规范。</p><h2>约束的规范</h2><p>如果说，软件设计要构建出一套模型，这还是比较直观好理解的。因为模型通常可以直接体现在代码中。但软件设计的另一部分——规范，就常常会被忽略。</p><p><strong>规范，就是限定了什么样的需求应该以怎样的方式去完成</strong><strong>。</strong>比如：</p><ul>\n<li>与业务处理相关的代码，应该体现在领域模型中；</li>\n<li>与网络连接相关的代码，应该写在网关里；</li>\n<li>与外部系统集成的代码，需要有防腐层；</li>\n<li>……</li>\n</ul><p>其实，每个项目都会有自己的规范。比如，你总会遇到一些项目里的老人，他们会告诉你，这个代码应该写在这，而不应该写在那，这就是某种意义上的规范。虽然规范通常都有，但问题常常也在。</p><p><strong>一种<strong><strong>常见的问题</strong></strong>就是缺乏显式的、统一的规范。</strong></p><p>规范的一个重要作用，就是维系软件长期的演化。如果没有显式的规范，项目的维系只能依靠团队成员个人的发挥，老成员一个没留神，新成员就可能创造出一种诡异的新写法，项目就朝着失控又迈出了一步。</p><p>不知道你是否接触过这样的项目，多种不同的做法并存其中：</p><ul>\n<li>数据库访问，有用MyBatis的，有用JDBC的，也有用Hibernate的；</li>\n<li>外部接口设计，有用REST风格的，有用URL表示各种动作的；</li>\n<li>文件组织，有的按照业务功能划分（比如，产品、订单等），有的按照代码结构划分（比如，\bResource、Service等）；</li>\n<li>……</li>\n</ul><p>没有一个统一的规范，每一个项目上的新成员都会痛斥一番前人的不负责任。然后，新的人准备另起炉灶，增加一些新东西。这种场景你是不是很熟悉呢？混乱通常就是这样开始的。</p><p>如果存在一个显式的、统一的规范，项目会按照一个统一的方向行进。即便未来设计要演化、规范要调整，有一个统一的规范也要比散弹打鸟来得可控得多。</p><p>关于规范，<strong>还有一种常见问题就是，<strong><strong>规范不符合</strong></strong>软件设计原则</strong>。我给你讲一个让我印象深刻的故事。</p><p>我曾经遇到一个网关出现了OOM（Out of Memory，内存溢出）。这个网关日常的内存消耗高达150G，一次流量暴增它就扛不住了。后来经过优化，把内存消耗降到了8G。</p><p>如果单看数字，这是一个接近20倍的优化，大手笔啊，但这里面究竟发生了什么呢？实际上，这次优化最核心的内容就是构建了一个防腐层，将请求过来的JSON转换成了普通的内存对象。而原来的做法是把JSON解析器解析出来的对象到处使用，因为这些对象上附加很多额外的信息，导致占用了大量的内存。</p><p>很遗憾，这不是大牛战天斗地的故事，只是因为旧的规范不符合软件设计原则而导致的错误：外部请求的对象需要在防腐层转换为内部对象。</p><h2>模型与规范</h2><p>有了模型，有了规范，<strong>那模型与规范是什么关系呢？模型与规范，二者相辅相成</strong>。一个项目最初建立起的模型，往往是要符合一定规范的，而规范的制定也有赖于模型。这就像讨论户型设计时，你可以按照各种方式组合不同的空间（模型），却不会把厨房与卫生间放在一起（规范）。</p><p>至此，我们已经知道了，软件设计既包含构建出一套模型，也包括制定出相应的规范。再回过头来看这节课开头的问题，你是不是对软件设计有了重新的认识呢？特定技术、框架和中间件，只是支撑我们模型的实现，而设计模式、Controller、Service、Model这些东西也只是一个特定的实现结果，是某些特定场景下的模型。</p><h2>总结时刻</h2><p>今天，我们学习了软件设计到底是什么，它应该包括“模型”和“规范”两部分：</p><ul>\n<li>\n<p>模型，是一个软件的骨架，是一个软件之所以是这个软件的核心。模型的粒度可大可小。我们所说的“高内聚、低耦合”指的就是对模型的要求，一个好的模型可以有效地隐藏细节，让开发者易于理解。模型是分层的，可以不断地叠加，基于一个基础的模型去构建上一层的模型，计算机世界就是这样一点点构建出来的。</p>\n</li>\n<li>\n<p>规范，就是限定了什么样的需求应该以怎样的方式去完成。它对于维系软件长期演化至关重要。关于规范，常见的两种问题是：一个项目缺乏显式的、统一的规范；规范不符合软件设计原则。</p>\n</li>\n<li>\n<p>模型与规范，二者相辅相成，一个项目最初建立起的模型，往往是要符合一定规范的，而规范的制定也有赖于模型。</p>\n</li>\n</ul><p>有了对软件设计的初步了解，我们就准备开始做设计了，但该从哪入手呢？这就是我们下一讲的内容。</p><p>如果今天的内容你只能记住一件事，那请记住：<strong>软件设计</strong>，<strong>应该包括模型和规范</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/03/58/038f4e3e01a9cdd4d40ccf37e6771558.jpg?wh=1992*844\" alt=\"\"></p><h2>思考题</h2><p>最后，我想请你分享一下，你的项目是如何做设计的。欢迎在留言区写下你的想法。</p><p>感谢阅读，如果你觉得这一讲的内容对你有帮助的话，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":221201,"user_name":"段启超","can_delete":false,"product_type":"c1","uid":1258209,"ip_address":"","ucode":"164CF3018071B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/32/e1/c9aacb37.jpg","comment_is_top":false,"comment_ctime":1590425114,"is_pvip":false,"replies":[{"id":"81652","content":"非常好的补充！","user_name":"作者回复","comment_id":221201,"uid":"1258861","ip_address":"","utype":1,"ctime":1590490937,"user_name_real":"郑晔"}],"discussion_count":4,"race_medal":0,"score":"345187808794","product_id":100052601,"comment_content":"防腐层是模型的一个规范，分享下我对防腐层的认知：<br>我接触防腐层的概念是从DDD的限界上下文开始的。Eric用细胞膜的概念来解释“限界”的概念，细胞膜只让细胞需要的物质进入细胞，同样，我们的代码之间业务也存在这个样一个界限，同一个对象的业务含义在不同的上下文中是不一样的。以在网上买书为例，在购买页面，我们的关注点在于这本书的名称，作者，以及分类，库存等信息；提交订单后，这本书就成为了订单上下文中的一个订单item，我们会关注这个item 的数量以及购买他的人是谁，以及书的配送地址等； 订单提交给仓库后，仓库会关心这本书还有没有库存，以及打包状态，分拣，物流等状态。<br>防腐层是在限界上下文之间映射（说白了就是交互）的方式，体现在代码上就是一个对象的转换，这个转换的意义在于隔离变化，防止因为对象在一个上下文中的变化扩散到其他的上下文中。<br><br>关于规范：<br>规范也是团队文化中很重要的一部分，以持续集成为例子，它的执行严格依赖于团队的开发纪律文化，以为了所谓赶进度而单元测试覆盖很低或者直接不写；采用分支策略方开发，一星期都合并不了主干，类似的人到处倒是，也就因为这一点，很多团队都在持续集成这个环节上掉队了。所以开发规范真的很重要，时刻谨记：混乱始于没有规范。","like_count":81,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496381,"discussion_content":"非常好的补充！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590490937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1168504,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d4/78/66b3f2a2.jpg","nickname":"斯盖丸","note":"","ucode":"B881D14B028F14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348397,"discussion_content":"也就是说防腐层其实是适配器模式吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612534580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202482,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ydFhHonicUQibGlAfsAYBibNOfSxpCG5cJNp9oRibTJm3TrxM7Hj4WPPCRE3vluZJb0TGQqpKCaBWLdmra5Su1KF5Q/132","nickname":"yudidi","note":"","ucode":"70283DE39D86F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317877,"discussion_content":"防腐层-隔离上下文，工作中有体会了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603610126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1059200,"avatar":"https://static001.geekbang.org/account/avatar/00/10/29/80/e3a4962d.jpg","nickname":"雪原与星空之间","note":"","ucode":"6E46FF7CA718B3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572831,"discussion_content":"你们团队中是怎样执行规范的呢？团队中有些成员总有人为规范会影响效率，不重要，不知道你们在执行过程中有没有遇到这种问题，又是怎么解决的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653002791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221118,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1590409150,"is_pvip":true,"replies":[{"id":"81647","content":"你们做得很好","user_name":"作者回复","comment_id":221118,"uid":"1258861","ip_address":"","utype":1,"ctime":1590489595,"user_name_real":"郑晔"}],"discussion_count":5,"race_medal":0,"score":"143324329918","product_id":100052601,"comment_content":"业务讨论之后进行领域设计，画出出静态模型（包括子系统、模块等）和动态结构（交互等），或者先勾勒接口（内内外系统的区隔），再做模型。实际过程有很多反复，并且会进行角色代入，看模型能否支持业务，直到模型比较稳定","like_count":34,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496341,"discussion_content":"你们做得很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590489595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273186,"discussion_content":"大佬，你们这需求节奏令人羡慕啊。我们是产品prd还没出好，上线时间已经定了。代码都是跑在设计前面的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590418694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1001710,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","nickname":"西西弗与卡夫卡","note":"","ucode":"B4C27B8335B76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273232,"discussion_content":"只是理想情况，不是所有产品线都能做到","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590420542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":273186,"ip_address":""},"score":273232,"extra":""}]},{"author":{"id":1256280,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2b/58/11c05ccb.jpg","nickname":"布衣骇客","note":"","ucode":"5226B0F67090D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276987,"discussion_content":"又见老朋友，真好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590978761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1021539,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/96/63/7eb32c9b.jpg","nickname":"捞鱼的搬砖奇","note":"","ucode":"2FD194C4DA26E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274686,"discussion_content":"你也是在10x评论区经常出现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590599471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221167,"user_name":"Ghoul Zhou","can_delete":false,"product_type":"c1","uid":1107457,"ip_address":"","ucode":"07E6FEE43E1D61","user_header":"https://static001.geekbang.org/account/avatar/00/10/e6/01/0ccb7a7c.jpg","comment_is_top":false,"comment_ctime":1590419642,"is_pvip":false,"replies":[{"id":"81653","content":"你把自己当做码农，你就是码农；你把自己当做优秀的程序员，你就是优秀的程序员。心理学上称之为皮格马利翁效应。","user_name":"作者回复","comment_id":221167,"uid":"1258861","ip_address":"","utype":1,"ctime":1590491059,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"130439438522","product_id":100052601,"comment_content":"慢慢的，某个瞬间，突然觉得自己的工作不再是码农，而是软件设计，并且在工作中得到强烈的自我肯定。<br>一个好的软件设计思路，首先是符合大众习惯行为、符合日常常理，其次再是数据模型设计、技术范畴设计。<br>一个好的软件设计实现，往往可以很容易兼容正常合理的需求变更，对开发工作来说，掌握其核心，理论与实践相结合，可以事半功倍！","like_count":31,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496366,"discussion_content":"你把自己当做码农，你就是码农；你把自己当做优秀的程序员，你就是优秀的程序员。心理学上称之为皮格马利翁效应。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590491059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221261,"user_name":"光明","can_delete":false,"product_type":"c1","uid":1002252,"ip_address":"","ucode":"0A5E7CFD91A3CF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/0c/dab49a2b.jpg","comment_is_top":false,"comment_ctime":1590457499,"is_pvip":true,"replies":[{"id":"81804","content":"对，你说的确实符合大部分做设计的方式。这种设计的关注点在于实现功能，而非构建模型。<br><br>这种做法容易让人忽略掉哪个东西是核心的，是模型，还是流程。流程是容易调整的，而模型如果变了，这个软件整个就变了。做设计的关键是，找到不变的东西。","user_name":"作者回复","comment_id":221261,"uid":"1258861","ip_address":"","utype":1,"ctime":1590637222,"user_name_real":"郑晔"}],"discussion_count":3,"race_medal":0,"score":"61719999643","product_id":100052601,"comment_content":"简单一点的项目，成员相互讨论（主要讨论业务场景和流程），内心会意即可。<br><br>复杂一点的项目，设计一般落脚在粒度较粗的文档上，往往也以说明业务流程为主，很少对实现过程中的细节文档化。<br><br>所以，我们的项目设计，模型一般会被业务场景和流程替代。文中的「模型」和「规范」，更多取决于工程师了。。。","like_count":15,"discussions":[{"author":{"id":1731543,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6b/d7/8872624a.jpg","nickname":"xmeng","note":"","ucode":"C0CA2182BA3B4B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407731,"discussion_content":"模型是核心，是不变的，即骨架，模型变了，功能就变了。流程是基于模型的组合调用，是易于调整的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635090261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496407,"discussion_content":"对，你说的确实符合大部分做设计的方式。这种设计的关注点在于实现功能，而非构建模型。\n\n这种做法容易让人忽略掉哪个东西是核心的，是模型，还是流程。流程是容易调整的，而模型如果变了，这个软件整个就变了。做设计的关键是，找到不变的东西。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590637222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501593,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJ5Hnw1tL9EWGdzhibCw89hibKjibwcyUBCSJsQWaxxfGu5AkBibibV0anaKqw3nf3ZP0UWy5BaEYyw2Q/132","nickname":"smilekaka","note":"","ucode":"C01D8020019FDC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571811,"discussion_content":"大部分都是这么干的啊， ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652415683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221108,"user_name":"木云先森","can_delete":false,"product_type":"c1","uid":1450899,"ip_address":"","ucode":"B321F8014CD4DB","user_header":"https://static001.geekbang.org/account/avatar/00/16/23/93/dc0bbf78.jpg","comment_is_top":false,"comment_ctime":1590407123,"is_pvip":false,"replies":[{"id":"81629","content":"《10x 程序员工作法》在先，《软件设计之美》在后。","user_name":"作者回复","comment_id":221108,"uid":"1258861","ip_address":"","utype":1,"ctime":1590475655,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"53130014675","product_id":100052601,"comment_content":"还需要前面有个好的产品经理或是业务专家。以及公司有个好的文化。各种频繁的插队的需求，各种前后都无法闭环的需求。都是，软件产品异常大的阻碍","like_count":13,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496336,"discussion_content":"《10x 程序员工作法》在先，《软件设计之美》在后。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590475655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221101,"user_name":"渔夫","can_delete":false,"product_type":"c1","uid":1019289,"ip_address":"","ucode":"6BF08FD8923E45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/99/f886543d.jpg","comment_is_top":false,"comment_ctime":1590405012,"is_pvip":false,"replies":[{"id":"81624","content":"先去学《10x程序员工作法》，先别让人给自己捣乱，有一个合理的工作计划。如果你没时间学习，没时间做改进，别的东西都不用说了。<br><br>有了一个合理的安排之后，才是说要怎么改进，要怎么做得更好，消除欠下的技术债。","user_name":"作者回复","comment_id":221101,"uid":"1258861","ip_address":"","utype":1,"ctime":1590474555,"user_name_real":"郑晔"}],"discussion_count":2,"race_medal":0,"score":"48835045268","product_id":100052601,"comment_content":"很多软件产品的需求都是一点点冒出来的，甚至中途需求还会去溜出去绕个弯，然后又回归，设计有种被牵着鼻子走的感觉，工期紧迭代快，结果就是设计的模型中有大量名不符实的定义，还有很多定义的补丁，实在很糟心，当然需求发展方向终会明朗，这时候就需要重构整理，包括设计和实现，同时又要应对新的业务开发，于是形成了两线或多线作战，苦啊！这样的情况除了增加团队，不知道老师有什么好的建议？","like_count":12,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496331,"discussion_content":"先去学《10x程序员工作法》，先别让人给自己捣乱，有一个合理的工作计划。如果你没时间学习，没时间做改进，别的东西都不用说了。\n\n有了一个合理的安排之后，才是说要怎么改进，要怎么做得更好，消除欠下的技术债。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590474555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273182,"discussion_content":"规范在模型前面。架构是演进的，模型是会变的，不存在什么持续优益的架构设计，都是持续重构，边走边调整的。\n\n1.抓好规范，这是协作的基线，也是重构成本的保障。\n2.服务于业务，模型没必要一步到位，技术债也不都是要还的。关键在于对高价值业务复杂性增长曲线的敏感程度，在合适的时候对合适的业务做合适的调整，这需要知识更需要实践的经验。\n3.凡是能用加人加机器解决的问题，最终都会用加人加机器解决。但项目架构质量与加人的速度是成反比。杀鸡取卵并非不可，但总该要权衡下的。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1590418546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221673,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1590563371,"is_pvip":true,"replies":[{"id":"81751","content":"非常感谢你的补充！<br><br>我不会为 Hello，World 做设计，因为它真的“用完即焚”，在开篇词里我说过，设计是应对需求规模的算法。需求越来越多，设计和不设计的差别就会体现出来。但是，你不学习软件设计的话，想直接应对复杂软件是不可能的。<br><br>关于软件的设计过程，我们后面会讲到 DDD，你可以关注一下。<br><br>软件设计和架构设计，其实是没有区别的，只不过，通常把高层一些的设计称为架构设计，但我们这里所学的设计原则同样适用于架构设计。","user_name":"作者回复","comment_id":221673,"uid":"1258861","ip_address":"","utype":1,"ctime":1590582661,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":1,"score":"40245269035","product_id":100052601,"comment_content":"文章在开篇提出的关于软件设计的问题，其实也是我现在的困惑，因为在做求职前的准备，感觉有很多东西要学，极客时间的专栏那么多，眼花缭乱。如何才能提高自己的求职成功率呢？<br><br>软件开发是为了解决问题，而软件设计就是在需求和解决方案之间的桥梁。<br><br>对于“软件设计就是构建出一套模型”这个说法，我感觉似乎有点过于抽象了，虽然文中列举的那个交易系统模型，确实很简洁、准确。<br><br>如果单独来看“模型”和“规范（约束）”都比较容易理解，但是如果说软件设计就是设计出模型和规范来，又有些不好理解了。特意去看了一下 Wiki:<br><br>Software design is the process by which an agent create a specification of a software artifact, intended to accomplish goals, using a set of primitive components and subject to constraints.<br><br>感觉上自己以前可能更看重软件开发的结果，而忽视了其中的模型和约束。<br><br>在这之前，如果拿到一个项目，大概会先看看是 CS 还是 BS 的，一般会采用 MVC 或者是分层模型，然后再去看看有没有其他的开源软件可以借鉴，之后就开始码程序了，编写代码边修改，可能从整体设计上考虑的比较少。<br><br>看了一下留言，发现自己之前可能局限于个体软件作坊，并没有正式或者完整的软件设计过程。那么我有一个问题：软件设计是只适用于相对复杂一些的软件开发过程么？如果程序本身比较简单，而且是那种“用完即焚”式的，是否还需要设计？<br><br>另外一个问题，就是软件设计和架构设计的区别在哪里？应该不仅仅是范围大小的差别吧 。<br><br>期待后续的专栏。","like_count":10,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496536,"discussion_content":"非常感谢你的补充！\n\n我不会为 Hello，World 做设计，因为它真的“用完即焚”，在开篇词里我说过，设计是应对需求规模的算法。需求越来越多，设计和不设计的差别就会体现出来。但是，你不学习软件设计的话，想直接应对复杂软件是不可能的。\n\n关于软件的设计过程，我们后面会讲到 DDD，你可以关注一下。\n\n软件设计和架构设计，其实是没有区别的，只不过，通常把高层一些的设计称为架构设计，但我们这里所学的设计原则同样适用于架构设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590582661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227353,"user_name":"迈步","can_delete":false,"product_type":"c1","uid":1747737,"ip_address":"","ucode":"BA9B69CEDA6176","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ab/19/829f321f.jpg","comment_is_top":false,"comment_ctime":1592362099,"is_pvip":false,"replies":[{"id":"83845","content":"把 DDD 当做一个模板，这个理解方式本身是没有问题的，它就是告诉你，如何把设计中的模型分门别类的放置，后面我们讲 DDD，差不多也是这个思路。<br><br>对于任何一个系统而言，需求都是一点一点增加的，前期不做设计，后期改动起来，难度就非常大了。所以，核心的点在于，设计要做好，别看它现在简单。分层不是你的设计，而构建出你的模型才是设计。<br><br>我不是特别理解你们按照 DDD 思想的开发模板到底是个什么东西，是一个开发框架，还是一个思维工具，所以，不敢妄加判断。<br><br>对于一个团队而言，开发的一致性比个性要重要，因为没有人可以保证一直在一个团队工作下去。<br><br>如果你真的有不错的理念，去做规范和框架的级别的优化、去做算法上的优化，不要在小的地方体现创造力，意义不大。","user_name":"作者回复","comment_id":227353,"uid":"1258861","ip_address":"","utype":1,"ctime":1592436569,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"31657133171","product_id":100052601,"comment_content":"老师您好，我们有一套基于DDD思想的程序开发模板，我们为了避免个体开发差异，所以建议大家都使用统一的开发模板。目前我面临着两个问题<br>1、针对某些使用简单分层架构即可解决问题的服务，是允许使用简单分层架构还是使用统一的DDD开发模板？<br>2、统一开发模板在一定程度上规避了个体差异上的劣势。那么个体差异上的优势如何更好的体现呢？","like_count":8,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498603,"discussion_content":"把 DDD 当做一个模板，这个理解方式本身是没有问题的，它就是告诉你，如何把设计中的模型分门别类的放置，后面我们讲 DDD，差不多也是这个思路。\n\n对于任何一个系统而言，需求都是一点一点增加的，前期不做设计，后期改动起来，难度就非常大了。所以，核心的点在于，设计要做好，别看它现在简单。分层不是你的设计，而构建出你的模型才是设计。\n\n我不是特别理解你们按照 DDD 思想的开发模板到底是个什么东西，是一个开发框架，还是一个思维工具，所以，不敢妄加判断。\n\n对于一个团队而言，开发的一致性比个性要重要，因为没有人可以保证一直在一个团队工作下去。\n\n如果你真的有不错的理念，去做规范和框架的级别的优化、去做算法上的优化，不要在小的地方体现创造力，意义不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592436569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221293,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1590465600,"is_pvip":false,"replies":[{"id":"81761","content":"首先，要分清楚哪些是人为的问题，哪些是设计的问题。赶工绝对是人为的问题，需要设置正确的预期，这是《10x 程序员工作法》讨论的范畴。<br><br>其次，如果是设计问题，需要把分清楚哪些是变的部分，哪些是不变的部分。不变的部分花力气去设计，变的部分需要等一等，等它相对稳定一些，再花大力气去设计。<br><br>规范主要是针对你需要花力气去设计的部分，混乱的部分，就先混乱着。让子弹飞一会儿。","user_name":"作者回复","comment_id":221293,"uid":"1258861","ip_address":"","utype":1,"ctime":1590586068,"user_name_real":"郑晔"}],"discussion_count":2,"race_medal":0,"score":"31655236672","product_id":100052601,"comment_content":"刚开始按照模型和规范走着，后来随着需求的改动，客户不停的催促，代码改动越来越乱，先把工作完成后再改规范，还是有什么好的办法。","like_count":7,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496416,"discussion_content":"首先，要分清楚哪些是人为的问题，哪些是设计的问题。赶工绝对是人为的问题，需要设置正确的预期，这是《10x 程序员工作法》讨论的范畴。\n\n其次，如果是设计问题，需要把分清楚哪些是变的部分，哪些是不变的部分。不变的部分花力气去设计，变的部分需要等一等，等它相对稳定一些，再花大力气去设计。\n\n规范主要是针对你需要花力气去设计的部分，混乱的部分，就先混乱着。让子弹飞一会儿。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590586068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1443145,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eozpyAUaM6ra1hqeIsd4v0fulS4zVmxDM3LQyqGo0BFM141QpQnSib6oHdQricGrRxusp5rflGn54ew/132","nickname":"甜宝仙女的专属饲养员","note":"","ucode":"6D2039BA22551F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584556,"discussion_content":"这个名字我就感觉喜人，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660910097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221172,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1590420759,"is_pvip":false,"replies":[{"id":"81630","content":"应该说是独立“实现”了一个项目。","user_name":"作者回复","comment_id":221172,"uid":"1258861","ip_address":"","utype":1,"ctime":1590475704,"user_name_real":"郑晔"}],"discussion_count":2,"race_medal":0,"score":"18770289943","product_id":100052601,"comment_content":"我独立设计的第一个项目整体来说，是失败的。就是盲目模仿前项目，没理解，分层，抽象，接口，模型等设计概念，最终项目陷入很麻烦的技术问题。","like_count":5,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496368,"discussion_content":"应该说是独立“实现”了一个项目。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590475704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1811495,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","nickname":"小袁","note":"","ucode":"3F5D8721F577D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570831,"discussion_content":"你模仿证明你有用功，跟项目组保持一致。最怕的是哪些有自己想法但有做不好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651932110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221778,"user_name":"Geek_3b1096","can_delete":false,"product_type":"c1","uid":1549364,"ip_address":"","ucode":"A6BD92B79B3632","user_header":"","comment_is_top":false,"comment_ctime":1590590409,"is_pvip":false,"replies":[{"id":"81780","content":"先能分清楚问题在哪，然后，再来解决。","user_name":"作者回复","comment_id":221778,"uid":"1258861","ip_address":"","utype":1,"ctime":1590618745,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"14475492297","product_id":100052601,"comment_content":"先来补课10x程序员工作法","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496567,"discussion_content":"先能分清楚问题在哪，然后，再来解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590618745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221117,"user_name":"捞鱼的搬砖奇","can_delete":false,"product_type":"c1","uid":1021539,"ip_address":"","ucode":"2FD194C4DA26E5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/63/7eb32c9b.jpg","comment_is_top":false,"comment_ctime":1590408953,"is_pvip":false,"replies":[{"id":"81627","content":"也欢迎你回来！","user_name":"作者回复","comment_id":221117,"uid":"1258861","ip_address":"","utype":1,"ctime":1590475437,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"14475310841","product_id":100052601,"comment_content":"熟悉的声音回来了。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496340,"discussion_content":"也欢迎你回来！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590475437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221336,"user_name":"Wei","can_delete":false,"product_type":"c1","uid":1086582,"ip_address":"","ucode":"C23945AA617C91","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/76/aa2202b7.jpg","comment_is_top":false,"comment_ctime":1590477606,"is_pvip":false,"replies":[{"id":"81759","content":"设计改进将在专栏的最后与大家讨论，敬请期待！","user_name":"作者回复","comment_id":221336,"uid":"1258861","ip_address":"","utype":1,"ctime":1590585601,"user_name_real":"郑晔"}],"discussion_count":2,"race_medal":0,"score":"10180412198","product_id":100052601,"comment_content":"很多IT legacy项目，存在了7，8年甚至更久。对比起项目刚开始的时候，语言，框架，best practices， 需求，人员变更等都往往都已经很不一样了。 对着这种“祖传”项目，往往文档缺失，结构复杂，动一发而牵千全身；<br><br>对这种项目做设计优化，该从哪些方面切入呢？<br>","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496428,"discussion_content":"设计改进将在专栏的最后与大家讨论，敬请期待！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590585601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2024937,"avatar":"","nickname":"Geek_8c3a4e","note":"","ucode":"A2DC82AED54AEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284778,"discussion_content":"working effectively with legacy code","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592635043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221312,"user_name":"大王拍我去巡山","can_delete":false,"product_type":"c1","uid":1067406,"ip_address":"","ucode":"94A1EE540BC9CA","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/8e/e6eaf434.jpg","comment_is_top":false,"comment_ctime":1590470437,"is_pvip":true,"replies":[{"id":"81760","content":"不管什么系统，都有一部分内容是稳定的，一部分内容是不稳定的。所以，我们设计的重点就是把稳定的和不稳定的隔离开来。不稳定的验证不好，丢了就丢了，没什么可惜的。千万不要做过度的设计，浪费精力，后面会讲到简单设计。","user_name":"作者回复","comment_id":221312,"uid":"1258861","ip_address":"","utype":1,"ctime":1590585703,"user_name_real":"郑晔"}],"discussion_count":2,"race_medal":0,"score":"10180405029","product_id":100052601,"comment_content":"前台业务变化快 经常这次上线验证效果不好就推翻重做。对于扩展和规划的要求就更高了。现在都是做一步想三步。根据经验考虑后面会有什么变化。。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496420,"discussion_content":"不管什么系统，都有一部分内容是稳定的，一部分内容是不稳定的。所以，我们设计的重点就是把稳定的和不稳定的隔离开来。不稳定的验证不好，丢了就丢了，没什么可惜的。千万不要做过度的设计，浪费精力，后面会讲到简单设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590585703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1811495,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","nickname":"小袁","note":"","ucode":"3F5D8721F577D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570838,"discussion_content":"有没有考虑过是产品经理能力不行，才导致业务变化很快。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651934386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221250,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1590456292,"is_pvip":false,"replies":[{"id":"81841","content":"编码规范和设计规范还是有所差异的。编码规范的适用范围会更大一些，设计规范则适用于一个特定的项目。","user_name":"作者回复","comment_id":221250,"uid":"1258861","ip_address":"","utype":1,"ctime":1590661530,"user_name_real":"郑晔"}],"discussion_count":2,"race_medal":0,"score":"10180390884","product_id":100052601,"comment_content":"向贝佐斯学习，做事情要建立在不变的东西上。<br><br>模型是一个理解世界的抽象模型，就像科学理论一样。好的模型应该是稳定的，简洁的。<br><br>规范也不能朝令夕改，规范就是做事的高层原则，相当于“公理”。公理要么来自于根深蒂固的人性（广义的，中性的，如懒惰，两点之间直线最短），要么就是大量经验教训的积累（如业界各公司如阿里巴巴开发手册之类）。（这里看出为什么小公司规范意识稀缺了，踩得坑不足，积累经验不足，你就是想规范也规范不起来。解决办法就是参考业界或大公司的规范，当然不能照搬。）","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496399,"discussion_content":"编码规范和设计规范还是有所差异的。编码规范的适用范围会更大一些，设计规范则适用于一个特定的项目。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590661530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":565553,"discussion_content":"怎么理解此处的“设计规范则适用于一个特定的项目”？意思是说：每个不同的项目，其设计规范会有差异吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650498164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":496399,"ip_address":""},"score":565553,"extra":""}]}]},{"had_liked":false,"id":275003,"user_name":"favorlm","can_delete":false,"product_type":"c1","uid":1120997,"ip_address":"","ucode":"CFD52127AA6E1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/e5/6899701e.jpg","comment_is_top":false,"comment_ctime":1611273819,"is_pvip":false,"replies":[{"id":"99789","content":"这就需要学习如何去设计一个模型，如果希望快速了解，不妨先看看 DDD 的那个部分，了解一下模型是如何建立的。","user_name":"作者回复","comment_id":275003,"uid":"1258861","ip_address":"","utype":1,"ctime":1611301501,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"5906241115","product_id":100052601,"comment_content":"看完之后，还是不能理解我的增删改查项目如何划分出模型，现在的项目业务和技术是混合在一起的。求一个解释","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514184,"discussion_content":"这就需要学习如何去设计一个模型，如果希望快速了解，不妨先看看 DDD 的那个部分，了解一下模型是如何建立的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611301501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262618,"user_name":"脚踏实地","can_delete":false,"product_type":"c1","uid":2305847,"ip_address":"","ucode":"B23A087DD69D4D","user_header":"","comment_is_top":false,"comment_ctime":1605781453,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5900748749","product_id":100052601,"comment_content":"软件设计: 模型+规范，模型: 高内聚，低耦合; 可分层","like_count":1},{"had_liked":false,"id":234628,"user_name":"邵俊达","can_delete":false,"product_type":"c1","uid":1281460,"ip_address":"","ucode":"4B7DACE6DBCF95","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/b4/ff82483d.jpg","comment_is_top":false,"comment_ctime":1594737886,"is_pvip":false,"replies":[{"id":"86721","content":"原语是一个一个小类或小方法，动作则是原语的组合，它是放到一个事务中的。你读“成交”这个动作的理解是对的，是在一个事务中执行的。","user_name":"作者回复","comment_id":234628,"uid":"1258861","ip_address":"","utype":1,"ctime":1594864268,"user_name_real":"郑晔"}],"discussion_count":2,"race_medal":0,"score":"5889705182","product_id":100052601,"comment_content":"老师您好，请问您文章中说的「交易原语」在代码中是如何体现的呢？是指把不同的动作放到一个事务中吗？比如「成交」这个原语是不同账户的出金和入金这两个操作放在一个事务里？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501444,"discussion_content":"原语是一个一个小类或小方法，动作则是原语的组合，它是放到一个事务中的。你读“成交”这个动作的理解是对的，是在一个事务中执行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594864268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188090,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/fa/6ebaacb0.jpg","nickname":"一马行千里","note":"","ucode":"7725D8629B0265","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318410,"discussion_content":"文章里交易原语的那张图，上下两层左边的名字是不是写反了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603725727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226008,"user_name":"亚伦碎语","can_delete":false,"product_type":"c1","uid":1014505,"ip_address":"","ucode":"F32E5E1B63CC90","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7a/e9/da5c0203.jpg","comment_is_top":false,"comment_ctime":1591927771,"is_pvip":false,"replies":[{"id":"83348","content":"有一些类似的地方，但不完全一样。","user_name":"作者回复","comment_id":226008,"uid":"1258861","ip_address":"","utype":1,"ctime":1592046957,"user_name_real":"郑晔"}],"discussion_count":1,"race_medal":0,"score":"5886895067","product_id":100052601,"comment_content":"我们代码里通常把防腐曾叫adapter","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498077,"discussion_content":"有一些类似的地方，但不完全一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592046957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224046,"user_name":"jokar","can_delete":false,"product_type":"c1","uid":1005214,"ip_address":"","ucode":"4FD20C9D4C71A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/9e/e15a63bb.jpg","comment_is_top":false,"comment_ctime":1591262468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5886229764","product_id":100052601,"comment_content":"我提供一个遇到过的规范不合理的场景：<br><br>我们公司的技术框架是在 [ASP.NET](http:&#47;&#47;asp.net&#47;) 的 MVC 基础上搭建的分层的快速快发系统，很长一段时间都是还是在视图这一层去用 jQuery 来做一个一些简单的交互，因为交互简单，Controller 这一层就负责和视图通讯，许多数据都从 Context（我们这里叫做功能层）取了之后就直接放到 Controller 来用，当时是够用的。<br><br>接下来，我们开始了前后端分离，需要处理更负责的交互了，一个页面上可能是来自多个接口的数据，原来的 Controller 很难满足需求。<br><br>不仅仅很难满足需求，还带来了更多的问题：比如 ASP.NET 的 MVC 根本就不是为提供服务接口而设计的，那么像跨域这种问题，就只能通过修改 web.config 的方式去做，就根本就不是解决跨域的好方法。<br><br>这些问题虽然更准确的来说算是技术债务，不过确实也是我们公司负责人搞了一个快速开发框架规范并试图用这个规范去解决所有问题导致的技术债务。<br><br>我目前的工作是前端开发工程师，虽然知道了这个问题，不过我暂时没有余力去解决这个问题，感觉很无力。","like_count":1},{"had_liked":false,"id":223914,"user_name":"刘拯均","can_delete":false,"product_type":"c1","uid":2011223,"ip_address":"","ucode":"AF6E33D6753A1A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLW4xGESQvNVmIic78DdDjH6yWUEiav2KBS9d8E0F4WXGUkHBqJnT3XNZGELVFqBSQUPHZTvhTjeJKw/132","comment_is_top":false,"comment_ctime":1591232110,"is_pvip":false,"replies":[{"id":"82540","content":"承蒙夸奖，也欢迎邀请更多的小伙伴们一起来学习！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1591315173,"ip_address":"","comment_id":223914,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886199406","product_id":100052601,"comment_content":"诚如郑老师所言，提到软件设计，一开始涌入头脑的便是框架或项目的结构。感觉有很多内容，无法完整的组织在一起。模型+规范，言简意赅，将软件设计的精髓提炼了出来。从“10x程序员”到这里，郑老师一如既往地将最简练、精髓的部分呈现在我们眼前。让我们看到郑老师眼中的程序世界，这给了我们身处泥潭，却能仰望山巅的风景途径。感谢郑老师的分享，加油学习.","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497297,"discussion_content":"承蒙夸奖，也欢迎邀请更多的小伙伴们一起来学习！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591315173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221166,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1590419579,"is_pvip":false,"replies":[{"id":"81842","content":"你们的设计已经算得不错的了。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1590662205,"ip_address":"","comment_id":221166,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5885386875","product_id":100052601,"comment_content":"1.我现在在项目中采用ddd的分层架构。（不要求领域模型设计，仅限定了基本实现规范）<br>2.因为整个公司缺乏显示统一的规范，我希望引入ddd的分层架构去限定这个规范。而且，项目本身虽是微服务技术栈，但模型本质还是大单体，用ddd挺好。（如果是真的微服务，不需要采用ddd的分层，ddd分层架构的理念应该在系统架构上去体现，落地到具体微服务包应该要对这些复杂性无感）<br>3.起了分层的目录结构，做了下各层作用的讲解，前期大部分需求，我都定义好api，然后让队友们来实现。结果还是不理想。问题不在于知识难不难，而在个人意愿和市场需求。相对于个人代码质量的追求，大多数人更愿意把时间放在技术上。毕竟技术面试占分更高，且武学学会了就是会了，能做到分毫不差，短期既有价值。而内功除了学会，还要积累，短期难有成效。人往往都有点浮躁。","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496365,"discussion_content":"你们的设计已经算得不错的了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590662205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221092,"user_name":"上山砍柴","can_delete":false,"product_type":"c1","uid":1059766,"ip_address":"","ucode":"F85D250C11ED70","user_header":"https://wx.qlogo.cn/mmopen/vi_32/4pFDynicvRnrTTRavia64UAknQjyX3KFfm67W4AZG52wm2TgwL1FWNX1zhIlIVgicPw2jzPqKASAib5nI1QfY6pc2Q/132","comment_is_top":false,"comment_ctime":1590403379,"is_pvip":false,"replies":[{"id":"81615","content":"我们一起来探讨。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1590464509,"ip_address":"","comment_id":221092,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5885370675","product_id":100052601,"comment_content":"方法论有了，如何落地是个问题","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496327,"discussion_content":"我们一起来探讨。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590464509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221078,"user_name":"北天魔狼","can_delete":false,"product_type":"c1","uid":1188144,"ip_address":"","ucode":"C22623ECEB8DBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","comment_is_top":false,"comment_ctime":1590399263,"is_pvip":true,"replies":[{"id":"81605","content":"一起来提高，也欢迎分享给更多的同事和朋友！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1590460731,"ip_address":"","comment_id":221078,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5885366559","product_id":100052601,"comment_content":"老师好，我又来上课了","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496320,"discussion_content":"一起来提高，也欢迎分享给更多的同事和朋友！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590460731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188144,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","nickname":"北天魔狼","note":"","ucode":"C22623ECEB8DBA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273482,"discussion_content":"必须得介绍","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590461322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344894,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1651838891,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651838891","product_id":100052601,"comment_content":"软件设计，应该包括模型和规范。--记下来","like_count":0},{"had_liked":false,"id":342824,"user_name":"授人以🐟，不如授人以渔","can_delete":false,"product_type":"c1","uid":1193874,"ip_address":"","ucode":"BD53829E924B66","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","comment_is_top":false,"comment_ctime":1650499075,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650499075","product_id":100052601,"comment_content":"我在项目中，也会对当前要实现的业务做设计，我会对整个业务建模，至少知道这个业务流程中涉及到了哪些概念、概念与概念之间的关系、概念内部的数据流如何处理等等。","like_count":0},{"had_liked":false,"id":342642,"user_name":"Nio","can_delete":false,"product_type":"c1","uid":1529642,"ip_address":"","ucode":"A1B8D3C01FB937","user_header":"https://static001.geekbang.org/account/avatar/00/17/57/2a/c6c95f37.jpg","comment_is_top":false,"comment_ctime":1650379102,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1650379102","product_id":100052601,"comment_content":"软件设计包括模型和规范两部分","like_count":0},{"had_liked":false,"id":337508,"user_name":"云会宾","can_delete":false,"product_type":"c1","uid":2696335,"ip_address":"","ucode":"8DFC2DD03D7E51","user_header":"https://static001.geekbang.org/account/avatar/00/29/24/8f/77140e34.jpg","comment_is_top":false,"comment_ctime":1646875327,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646875327","product_id":100052601,"comment_content":"模型就是描述输入输出的关系，放之软件设计，就是输入输出的框架。放之数学，就是输入输出的数学关系式，放之函数就是输入输出的函数。","like_count":0},{"had_liked":false,"id":324533,"user_name":"托马斯赵四","can_delete":false,"product_type":"c1","uid":2712653,"ip_address":"","ucode":"F9FA980A9F8A1C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/kBKTRyV4wnhV4YN9iaFgKYIJ4451n0zIiazFumcSpCXdEDhdexgc8PQdrDEmy4BCOUgsUlibicEwQlGo6K5Nibv7SEg/132","comment_is_top":false,"comment_ctime":1638493820,"is_pvip":false,"replies":[{"id":"118238","content":"可见离架构师还有很长的路要走😄","user_name":"作者回复","user_name_real":"编辑","uid":"1258861","ctime":1639321241,"ip_address":"","comment_id":324533,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638493820","product_id":100052601,"comment_content":"一个普通程序员就像施工单位的泥瓦工，每天做自己熟悉领域内的工作，高级程序员更像是盖房的室内空间设计师，在已定架构下通过硬装与软装满足客户要求","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538080,"discussion_content":"可见离架构师还有很长的路要走😄","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639321241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316237,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1634215244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634215244","product_id":100052601,"comment_content":"原来模型分层的目的是可叠加！","like_count":0},{"had_liked":false,"id":313698,"user_name":"Bravery168","can_delete":false,"product_type":"c1","uid":1232973,"ip_address":"","ucode":"DB08AEFBD6DF2B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/4d/2116c1a4.jpg","comment_is_top":false,"comment_ctime":1632623443,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1632623443","product_id":100052601,"comment_content":"软件设计，我理解，就是实现业务到软件的映射。<br>这种映射需要满足：<br>适应性:对外来说，适应业务变化和发展。<br>健康度:对软件系统自身来说，变化带来复杂度，需要保证在适应变化的同时保持软件系统的健康。<br>缺少这一层，很明显，以上两点要求在未来都无法得到满足。","like_count":0},{"had_liked":false,"id":312127,"user_name":"R@β11t","can_delete":false,"product_type":"c1","uid":2755994,"ip_address":"","ucode":"83C8175F3E8A47","user_header":"https://static001.geekbang.org/account/avatar/00/2a/0d/9a/50959587.jpg","comment_is_top":false,"comment_ctime":1631631810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631631810","product_id":100052601,"comment_content":"我想要从零开发一个软件，有想要这个软件拥有可拓展性，模块化的时候，就需要仔细思考软件的设计问题了","like_count":0},{"had_liked":false,"id":307808,"user_name":"晴天了","can_delete":false,"product_type":"c1","uid":1359669,"ip_address":"","ucode":"5310E02F8DF1F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/35/0e3a92a7.jpg","comment_is_top":false,"comment_ctime":1629264836,"is_pvip":false,"replies":[{"id":"111473","content":"业务需求可不一定是抽象的","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1629292595,"ip_address":"","comment_id":307808,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1629264836","product_id":100052601,"comment_content":"程序员所面对的第一层抽象层级的模型 是不是就是业务需求","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525296,"discussion_content":"业务需求可不一定是抽象的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629292595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307807,"user_name":"晴天了","can_delete":false,"product_type":"c1","uid":1359669,"ip_address":"","ucode":"5310E02F8DF1F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/35/0e3a92a7.jpg","comment_is_top":false,"comment_ctime":1629264613,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629264613","product_id":100052601,"comment_content":"模型所处于的层级纬度，是根据调用者的需要实现的嘛","like_count":0},{"had_liked":false,"id":301635,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1625794800,"is_pvip":false,"replies":[{"id":"109200","content":"嗯，模型先行，后设计数据库。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1625810420,"ip_address":"","comment_id":301635,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625794800","product_id":100052601,"comment_content":"我的设计是根据产品需求设计为不同的模型，模型与模型之间是怎么交互。再根据模型设计表结构，系统规范去对代码实现进行分层","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523050,"discussion_content":"嗯，模型先行，后设计数据库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625810420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":294302,"user_name":"Geek_9c7788","can_delete":false,"product_type":"c1","uid":1759442,"ip_address":"","ucode":"4C21A1F3038048","user_header":"","comment_is_top":false,"comment_ctime":1621868787,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1621868787","product_id":100052601,"comment_content":"郑老师，模型指的是领域模型还是数据模型，有点抽象","like_count":0,"discussions":[{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565557,"discussion_content":"是领域模型，先有了领域模型，才会有数据模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650498576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293629,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":1914504,"ip_address":"","ucode":"A8A2E3E57BD029","user_header":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","comment_is_top":false,"comment_ctime":1621472179,"is_pvip":true,"replies":[{"id":"106629","content":"其实是一回事。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1621692858,"ip_address":"","comment_id":293629,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621472179","product_id":100052601,"comment_content":"软件设计和架构设计的关系是什么","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520299,"discussion_content":"其实是一回事。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621692858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293531,"user_name":"坏笑 cover🍊🍭🍭","can_delete":false,"product_type":"c1","uid":1697046,"ip_address":"","ucode":"C61A772E090168","user_header":"https://static001.geekbang.org/account/avatar/00/19/e5/16/244680b8.jpg","comment_is_top":false,"comment_ctime":1621420555,"is_pvip":false,"replies":[{"id":"106630","content":"加油！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1621692867,"ip_address":"","comment_id":293531,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621420555","product_id":100052601,"comment_content":"就是现在要做设计了，现学现卖😂","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520257,"discussion_content":"加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621692867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282033,"user_name":"青青子菁","can_delete":false,"product_type":"c1","uid":1721366,"ip_address":"","ucode":"0C13574850362C","user_header":"https://static001.geekbang.org/account/avatar/00/1a/44/16/c33b5eab.jpg","comment_is_top":false,"comment_ctime":1615022904,"is_pvip":false,"replies":[{"id":"102430","content":"矛盾就是，篇幅太长，读者坚持不下来，篇幅太短，读者理解不到位。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1615092069,"ip_address":"","comment_id":282033,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1615022904","product_id":100052601,"comment_content":"学习了这篇文章，然后看了一下整个课程的设计，觉得大部分都是在讲原理、理论。不知道课程里面有没有穿插实例。课程后面要是有一两个案例来巩固原理就好了","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516593,"discussion_content":"矛盾就是，篇幅太长，读者坚持不下来，篇幅太短，读者理解不到位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615092069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2457497,"avatar":"","nickname":"子衿","note":"","ucode":"315DB545804E67","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353373,"discussion_content":"没有实际的案例，理论联系不上实际，容易学了就忘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615164924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264273,"user_name":"皮特尔","can_delete":false,"product_type":"c1","uid":1017161,"ip_address":"","ucode":"313862C91DD325","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/49/585c69c4.jpg","comment_is_top":false,"comment_ctime":1606401009,"is_pvip":false,"replies":[{"id":"95872","content":"前后端都一样。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1606460805,"ip_address":"","comment_id":264273,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606401009","product_id":100052601,"comment_content":"作为一个前端开发，大部分时间都需要和业务打交道。对业务模型的抽象直接决定了项目质量的好坏。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510489,"discussion_content":"前后端都一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606460805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":254218,"user_name":"bidinggong","can_delete":false,"product_type":"c1","uid":1898806,"ip_address":"","ucode":"789A1FBA8408F3","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f9/36/f44b633e.jpg","comment_is_top":false,"comment_ctime":1603084271,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603084271","product_id":100052601,"comment_content":"软件设计就是要构建出一套模型，而软件模型就是这个软件的骨架和核心。","like_count":0},{"had_liked":false,"id":241478,"user_name":"HF","can_delete":false,"product_type":"c1","uid":1060150,"ip_address":"","ucode":"EA504931C0B932","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/36/d3c8d272.jpg","comment_is_top":false,"comment_ctime":1597306694,"is_pvip":false,"replies":[{"id":"100137","content":"程序设计，通常指的写代码实现具体功能的地方，架构设计和软件设计在我心中是一致的，主要是架构模型和规范（这也是《软件设计之美》中讲的），软件工程，主要是如何进行开发，可以这么说，设计和编码是软件工程中的一环。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1611728908,"ip_address":"","comment_id":241478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597306694","product_id":100052601,"comment_content":"老师，程序设计 架构设计 软件设计 软件工程这四个概念有什么区别和联系呢？","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503749,"discussion_content":"程序设计，通常指的写代码实现具体功能的地方，架构设计和软件设计在我心中是一致的，主要是架构模型和规范（这也是《软件设计之美》中讲的），软件工程，主要是如何进行开发，可以这么说，设计和编码是软件工程中的一环。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611728908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235887,"user_name":"周宁","can_delete":false,"product_type":"c1","uid":1275098,"ip_address":"","ucode":"9816F796252948","user_header":"https://static001.geekbang.org/account/avatar/00/13/74/da/44fe2db8.jpg","comment_is_top":false,"comment_ctime":1595235021,"is_pvip":false,"replies":[{"id":"87143","content":"语言的差异，这就是后面要讲的一个关键点。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1595249886,"ip_address":"","comment_id":235887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595235021","product_id":100052601,"comment_content":"&quot;你总算理解了 Observer 模式，却有人告诉你 JDK 中早就提供了原生的支持，但更好的做法应该是用 Guava 的 EventBus&quot;<br>Python 直接在语法上支持装饰器（decorator）模式~","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501865,"discussion_content":"语言的差异，这就是后面要讲的一个关键点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595249886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229843,"user_name":"张浩","can_delete":false,"product_type":"c1","uid":1001225,"ip_address":"","ucode":"DBEAFFB7660813","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/09/316b0aa1.jpg","comment_is_top":false,"comment_ctime":1593161707,"is_pvip":true,"replies":[{"id":"84820","content":"数据结构和性能主要是实现方面，后面会讲到，这只是设计的一部分。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1593175829,"ip_address":"","comment_id":229843,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593161707","product_id":100052601,"comment_content":"现在在小团队，后端有两个人，需求迭代开发前，组内做设计评审，主要是数据结构和性能方面，没啥问题，就直接开发了，学习本门课程主要想为以后做储备，也会想办法将课程学到的内内容应用到实际工作中。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499664,"discussion_content":"数据结构和性能主要是实现方面，后面会讲到，这只是设计的一部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593175829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228247,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1653332,"ip_address":"","ucode":"E3F15FB8576626","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/54/72402617.jpg","comment_is_top":false,"comment_ctime":1592623431,"is_pvip":true,"replies":[{"id":"84505","content":"失控，每个都遭遇过的痛苦。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592905311,"ip_address":"","comment_id":228247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592623431","product_id":100052601,"comment_content":"乱七八糟肯定失控，赞同老师说的颗粒度的规范","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498972,"discussion_content":"失控，每个都遭遇过的痛苦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592905311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228246,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1653332,"ip_address":"","ucode":"E3F15FB8576626","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/54/72402617.jpg","comment_is_top":false,"comment_ctime":1592622973,"is_pvip":true,"replies":[{"id":"84336","content":"然","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592793283,"ip_address":"","comment_id":228246,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592622973","product_id":100052601,"comment_content":"流变是常态","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498971,"discussion_content":"然","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592793283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227585,"user_name":"吴建中","can_delete":false,"product_type":"c1","uid":1090512,"ip_address":"","ucode":"4C6D46E5EC17CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/d0/882b5388.jpg","comment_is_top":false,"comment_ctime":1592439099,"is_pvip":false,"replies":[{"id":"83874","content":"理解得不错！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1592444365,"ip_address":"","comment_id":227585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592439099","product_id":100052601,"comment_content":"是否设计，随着需求规模的变大，效果会凸现出来。模型是构建骨架，各自器官及关系，这种内在的东西，决定了软件的本质。运维，扩展其实是对软件做手术，设想一下，你面对一个无脊椎，各器官混在一起的生物，你敢下手吗，分分钟可能弄死他。<br><br>规范也非常重要，经常听说标准先行，无规矩不成方圆，规范也是执行力的体现。规范无处不在，UI规范，数据库设计规范，编码规范，日报 周报规范，发布规范，文档规范，只要有人的地方，有江湖就要有规范。越早认识到规范的重要性，越重要，在一开始活动之前就规范先行的意识，有规范就遵守，无规范就创建，以文档，流程方式固化下来，并持续优化。规范与文化，与最佳实践也有内在联系。我想模型定义了软件的骨架（业务决定架构，模型承载和映射业务的本质）。规范定了内部次序，约束。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498700,"discussion_content":"理解得不错！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592444365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223850,"user_name":"Chloe","can_delete":false,"product_type":"c1","uid":1511344,"ip_address":"","ucode":"C5CFEE0CB29ADF","user_header":"https://static001.geekbang.org/account/avatar/00/17/0f/b0/f2072176.jpg","comment_is_top":false,"comment_ctime":1591196310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591196310","product_id":100052601,"comment_content":"文中的交易系统是火币吧😜哈哈哈","like_count":0},{"had_liked":false,"id":222338,"user_name":"宋子龙","can_delete":false,"product_type":"c1","uid":1006464,"ip_address":"","ucode":"69C7DDA408192F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/80/114f589c.jpg","comment_is_top":false,"comment_ctime":1590753064,"is_pvip":false,"replies":[{"id":"82026","content":"欢迎分享给更多的小伙伴！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1590758934,"ip_address":"","comment_id":222338,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590753064","product_id":100052601,"comment_content":"行动始于设计，想明白才能做明白，很棒的专栏，赞！","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496756,"discussion_content":"欢迎分享给更多的小伙伴！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590758934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221198,"user_name":"Flynn","can_delete":false,"product_type":"c1","uid":1174517,"ip_address":"","ucode":"293321CC198C0C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/aY5QA2COoiaGy7P3MJzUIam3GG94GpA0fTx8yJN3OyBiaP3eNL65ia99H4RbaqC4fypg7JhBOujlJs7bBTdJKdMUQ/132","comment_is_top":false,"comment_ctime":1590423166,"is_pvip":false,"replies":[{"id":"81843","content":"一种非常典型的做法。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1590662253,"ip_address":"","comment_id":221198,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590423166","product_id":100052601,"comment_content":"嗯。。项目的设计是视图、数据、模型","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496379,"discussion_content":"一种非常典型的做法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590662253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}