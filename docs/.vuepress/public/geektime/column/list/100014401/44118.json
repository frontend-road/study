{"id":44118,"title":"30 | 如何做好微服务容量规划？","content":"<p>专栏上一期我给你讲解了单体应用拆分为微服务后带来的开发、测试和运维复杂度的提升，可以通过DevOps实现CI/CD流程的自动化来解决。除此之外，单体应用拆分为微服务还带来另外一个问题，也就是拆分出来后的多个<strong>微服务容量如何规划</strong>的问题。在单体应用时，只需要针对这个单体应用的访问量和实际接口性能来决定要不要给单体应用扩容，而拆分为众多的微服务之后，需要考虑每个服务的容量规划，它的复杂度主要来自下面几个方面。</p><ul>\n<li>\n<p>服务数量众多，纯靠人肉运维难以管理，比如微博Feed业务仅仅RPC服务就有将近40个。</p>\n</li>\n<li>\n<p>服务的接口表现差异巨大，有的接口属于访问量比较大，但接口响应时间比较短的轻接口；有的接口属于访问量比较小，但接口响应时间比较长的重接口。比如微博Feed业务中计数接口的平均耗时只有2～3ms，而微博Feed业务中Feed接口的平均耗时要超过200ms。</p>\n</li>\n<li>\n<p>服务部署的集群规模大小不同，需要扩容的机器数量差异很大。比如微博的AB测试服务集群只有大约20台机器，扩容只需要几台机器就满足了；而Feed服务则有上千台机器，往往扩容需要上百台机器。</p>\n</li>\n<li>\n<p>服务之间还存在依赖关系，在服务扩容的时候，还需要考虑依赖服务的容量是否足够。比如微博Feed业务扩容还依赖用户关系服务和Card服务，扩容时还需要考虑依赖的用户关系服务和Card服务容量是否有问题。</p>\n</li>\n</ul><!-- [[[read_end]]] --><p>由此可见，单体应用拆分为微服务后，微服务的容量规划难度一下子增加了很多，再靠传统的人肉运维模式显然难以为继。延续上期DevOps的话题，其实微服务的容量规划也是广义DevOps要解决的问题之一，那么DevOps是如何解决的呢？答案就是容量规划系统，下面我就来聊聊<span class=\"orange\">容量规划系统该如何实现</span>。</p><p>容量规划系统的作用是<strong>根据各个微服务部署集群的最大容量和线上实际运行的负荷，来决定各个微服务是否需要弹性扩缩容，以及需要扩缩容多少台机器</strong>。</p><p>可见，容量规划系统实施的关键在于两点：一是如何评估集群的最大容量和线上实际运行的负荷，也就是<strong>如何做好容量评估</strong>；二是如何确定弹性扩缩容的时机以及机器数，也就是如<strong>何做好调度决策</strong>。下面我们分别来看这两个关键点，逐个击破。</p><h2>容量评估</h2><p>一般集群的容量评估都是通过线上实际压测来确定的，那么该如何进行线上压测呢？都需要注意哪些关键点呢？</p><p>1.选择合适的压测指标</p><p>一般在选取压测指标时，主要有两类：一类是系统类指标，比如机器的CPU使用率、内存占用量、磁盘I/O使用率以及网卡带宽等；一类是服务类指标，比如接口响应的平均耗时、P999耗时、错误率。但这些指标在实际压测时，都会存在一些问题。系统类指标比如CPU使用率并不能直接反映出服务压测时的健康状况，有时候CPU使用率不高的时候，接口耗时也可能有问题；而有时候CPU使用率较高时，接口耗时表现依然很正常。而服务类的指标比如接口响应的平均耗时也不能精确的反映服务的实际健康状态，一个最典型的场景就是在压测时，已经出现一定比例的慢请求，而在平均耗时上并不能看出有多大变化，这时候实际服务已经处于不健康的状态了，应该停止压测了。</p><p>根据我的经验，在压测时，除了观察以上这些指标以外，还可以观察接口的慢速比，也就是接口响应时间高于某个阈值的比例。比如微博在进行Feed接口压测时，选择的压测指标就是Feed接口响应时间大于1s的比例，压测的终止条件是Feed接口响应时间大于1s的比例超过1%。我的主要考虑是，当99%以上接口请求都在1s以内返回时，反馈到用户的直接使用感受是不容易感知到Feed刷新慢，反之则不然。对于大部分在线服务来说，接口慢速比不超过1%都是服务质量保证的底线了，因此可以作为一个通用的压测指标。</p><p>2.压测获取单机的最大容量</p><p>集群的最大容量就是单机的最大容量 × 集群内的机器数量，所以要获得集群的最大容量，就必须获得单机的最大容量。通常有两种方式来获取单机的最大容量，一种是单机压测，一种是集群压测。</p><ul>\n<li>\n<p>单机压测一般有两种方式，一种是通过日志回放等手段，模拟线上流量来对单机进行压测；一种是通过TCP-Copy的方式，把线上机器的流量拷贝过来对单机进行压测。</p>\n</li>\n<li>\n<p>集群压测是对整个集群进行压测，以获取单机的最大容量。一般做法是通过不断把线上集群的节点摘除，以减少机器数的方式，来增加线上节点单机的流量，从而达到压测的目的。</p>\n</li>\n</ul><p>从我的经验来看，采用集群压测的方式要更合理一些，因为它是完全使用线上真实流量进行压测，获取的单机最大容量数值更精确。如果采用单机压测，通常为了避免产生“脏数据”，往往需要去掉一些上行的修改请求，所以不能完全模拟线上真实情况。不过使用集群压测的方式也有一个缺点，就是压测的时候会对线上用户的实际请求产生影响，如果压测出问题了，会直接影响线上服务，所以一般会选择在业务低峰期进行压测，最大限度减少对线上服务造成的影响。还有一点是，通常会在工作日进行压测，以便出现问题时，也能人为快速介入。</p><p>假设我们采用集群压测，不断地缩减线上节点的数量，并观察服务的慢速比指标，当慢速比达到1%时，就停止压测，这个时候就可以计算单机的最大容量了，一般做法是用压测停止时刻的单机平均QPS作为单机的最大容量。但是，采用QPS就真的合理吗？实际上并非如此，这是因为QPS并不能准确衡量单机的消耗，就像下面这两张图所展示的，左图的请求响应时间主要集中在100ms以下，没有超过500ms的；而右图的请求响应时间主要集中在50ms以上，没有低于10ms的。这两种请求分布对单机消耗差异很大，显然右边要对单机的消耗更大一些。在单机QPS都是100的情况下，左边的单机还能继续加大QPS，而右边的单机已经出现超过500ms以上的慢请求了。</p><p><img src=\"https://static001.geekbang.org/resource/image/c9/1c/c9a544b649bfba7d4d760147cb9a301c.png?wh=597*220\" alt=\"\"></p><p>所以，一个更合理的计算单机容量的方式是采用区间加权来计算，也就是把请求按照响应时间分成多个区间，每个区间分别赋予不同的权重，响应时间越长权重越高，比如0～10ms区间的权重是1，10～50ms区间的权重是2，50～100ms区间的权重是4，100～200ms区间的权重是8，200～500ms区间的权重是16，500ms以上的权重是32，那么上面两张图所描述的情况的单机容量分别是8×1+50×2+30×4+10×8+2×16=340和2×2+10×4+50×8+20×16+8×32=1020。因此单机的最大容量，也就是压测停止时刻采用区间加权方式计算得出。</p><p>3.实时获取集群的运行负荷</p><p>通过压测能够获取到单机的最大容量，再乘以集群内的机器数量就是集群的最大容量了，下一步获取集群实际运行的负荷，就可以判断集群是否需要扩容了。跟刚才计算单机容量的方式类似，集群的运行负荷也需要通过采用区间加权的方式来计算，但是因为集群的规模可能很大，超过上千台机器，显然通过计算每台单机运行的负荷再加在一起的方式效率不高。我在线上实际使用的方法是统计每台单机在不同耗时区间内的请求数，推送到集中处理的地方进行聚合，将同一个集群内的单机位于不同耗时区间内的请求进行汇总，就得到整个集群的请求在不同耗时区间内的分布了，再利用区间加权的方式就可以计算整个集群的运行负荷。</p><h2>调度决策</h2><p>在容量评估阶段，你可以获取集群的最大容量和集群的实际运行负荷，有了这两个数据后该如何做调度策略呢？我在实际线上业务使用的是<strong>水位线</strong>来进行调度决策。就像水库的水位线一样，要实时观测水库的蓄水量，如果因为长时间降水导致水库蓄水量超过警戒水位线就需要开闸泄洪；如果长时间干旱降水量太少，就需要关闸蓄水，以保持水库中的蓄水量始终在一个合理的水位线上。这样的话，任意时刻的水位线就是集群的最大容量除以集群的实际运行负荷，可以实时监控集群的水位线。</p><p><img src=\"https://static001.geekbang.org/resource/image/f5/4e/f51ace4e71f40600920331d1a7d7fe4e.png?wh=1208*655\" alt=\"\"></p><p>在调度决策时候，就可以根据水位线来做决定。你可以看到下面图中划分了两条线，一条是安全线，一条是致命线。当集群的水位线位于致命线以下时，就需要立即扩容，在扩容一定数量的机器后，水位线回到安全线以上并保持一段时间后，就可以进行缩容了。</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/7d/ff14c602b1d2a5df8949c620f01aee7d.png?wh=1058*257\" alt=\"\"></p><p>那具体在执行扩缩容时，机器数量该如何决定呢？</p><p>1.扩容</p><p>在决定扩多少机器时，一般有两种方式，一种是按数量，一种是按比例。因为不同的集群内机器数量差别可能很大，所以一般采取按比例的方式，举个例子比如每一次扩容都增加30%的机器数量，再看扩容后的水位线是否处于致命线以上了。</p><p>2.缩容</p><p>在扩容完成后，集群的水位线保持在安全线以上一段时间后，就需要缩容，以节省机器成本。可以根据实际业务特点来决定多久后可以缩容，比如微博的业务一般突发流量维持在1个小时以内，因此集群的水位线在安全线以上超过1个小时之后，就可以缩容。而在缩容时也不是一次把所有扩容的机器都缩掉，而是采用逐步缩容的方式，每隔5分钟判断一次集群的水位线是否还在致命线以上，然后按照10%、30%、50%、100%的比例进行缩容，这样可以避免缩容太快导致集群水位线又降到致命线以下又得再扩容机器。</p><p>在实际根据水位线决定是否扩缩容时还需要防止网络抖动等原因造成的水位线瞬间抖动，这个时候集群的运行负荷会突然变大，导致水位线异常，此时如果加以处理的话就会触发扩容，而实际上并不需要扩容。为了防止瞬间抖动，可以每分钟采集一次系统的水位线，一共采集5个点，只有5个点里有3个点满足扩容条件，才真正触发扩容。</p><h2>总结</h2><p>今天我从两个方面具体给你讲解了微服务如何做好容量规划的问题，即做好容量评估和调度决策。容量评估方面，首先要通过压测获取集群的最大容量，并实时采集服务调用的数据以获取集群的实时运行负荷，这样就可以获取集群的实时水位线。而调度决策方面，主要是通过水位线与致命线和安全线对比来决定什么时候该扩缩容。而扩缩容的数量也是有讲究的，扩容的机器数一般按照集群机器数量的比例来，而缩容一般采取逐步缩容的方式以免缩容太快导致反复扩容。</p><p>在单体应用拆分为多个微服务后，如果不做好容量规划是很危险的事情，尤其是在微服务的调用量出现突发峰值流量时，再靠人为判断决策扩缩容往往为时已晚。根据我在微博的实践，也证明了通过容量规划实现微服务的自动扩缩容才是解决这个问题的最佳途径。</p><h2>思考题</h2><p>在计算集群的水位线时，经常会遇到集群内有些单机问题导致整个集群的实时运行负荷偏大，对此你有什么解决方案吗？</p><p>欢迎你在留言区写下你的思考，与我一起讨论。</p><p></p>","neighbors":{"left":{"article_title":"29 | 微服务如何实现DevOps？","id":42825},"right":{"article_title":"31 | 微服务多机房部署实践","id":64301}},"comments":[{"had_liked":false,"id":40151,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1542527751,"is_pvip":false,"replies":[{"id":"18060","content":"数据库方面因为实现自动扩缩容的难度太大，我们目前是留有足够的冗余度，核心数据库都是4倍冗余","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1544945041,"ip_address":"","comment_id":40151,"utype":1}],"discussion_count":1,"race_medal":1,"score":"53082135303","product_id":100014401,"comment_content":"老师，这里都是考虑服务层面的扩缩容。对于数据库层面存在瓶颈的情况，有什么经验分享吗。","like_count":13,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429397,"discussion_content":"数据库方面因为实现自动扩缩容的难度太大，我们目前是留有足够的冗余度，核心数据库都是4倍冗余","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544945041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35894,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1540857073,"is_pvip":false,"replies":[{"id":"13486","content":"这里权重指的是对机器资源的占用","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1541644220,"ip_address":"","comment_id":35894,"utype":1}],"discussion_count":1,"race_medal":1,"score":"48785497329","product_id":100014401,"comment_content":"请问阿忠伯，分区加权计算，响应时间越长，加权越大的原因是什么呢？","like_count":12,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427702,"discussion_content":"这里权重指的是对机器资源的占用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541644220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53874,"user_name":"Ricky Fung","can_delete":false,"product_type":"c1","uid":1051363,"ip_address":"","ucode":"7AEA1F8EC4A088","user_header":"https://static001.geekbang.org/account/avatar/00/10/0a/e3/9637bfdb.jpg","comment_is_top":false,"comment_ctime":1545746489,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18725615673","product_id":100014401,"comment_content":"想问一下在生产环境做压测，由压测产生的数据要如何处理才不会污染真实的数据？","like_count":5,"discussions":[{"author":{"id":1507783,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/c7/549b5616.jpg","nickname":"夜涛","note":"","ucode":"672CC53663710B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301067,"discussion_content":"多加一个冗余字段，标识这是压测数据，压测结束后清理就行了，或者数据本来就有标识。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598399621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":40152,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1002452,"ip_address":"","ucode":"2A677908E5A75D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4b/d4/b7719327.jpg","comment_is_top":false,"comment_ctime":1542527856,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"10132462448","product_id":100014401,"comment_content":"不评估数据库的承受能力吗，不停的扩展服务，把数据库压挂了怎么办？","like_count":2,"discussions":[{"author":{"id":1612910,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9c/6e/01b4d5d2.jpg","nickname":"liupan","note":"","ucode":"C6C7C48BCCAE12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292265,"discussion_content":"感觉数据库已经成为限制微服务的高可用的瓶颈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595159544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64390,"user_name":"Do","can_delete":false,"product_type":"c1","uid":1313480,"ip_address":"","ucode":"EA11EBD6439D1B","user_header":"https://static001.geekbang.org/account/avatar/00/14/0a/c8/dae4a360.jpg","comment_is_top":false,"comment_ctime":1548762599,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5843729895","product_id":100014401,"comment_content":"安全线和致命线是怎么设定的呢? 和集群容量是什么样的关系?","like_count":1},{"had_liked":false,"id":36208,"user_name":"Switch","can_delete":false,"product_type":"c1","uid":1250758,"ip_address":"","ucode":"EB9FFA94D2F24B","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/c6/f5c543ef.jpg","comment_is_top":false,"comment_ctime":1540979313,"is_pvip":false,"replies":[{"id":"13215","content":"这里权重代表的是对系统资源的占用","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1541427441,"ip_address":"","comment_id":36208,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5835946609","product_id":100014401,"comment_content":"为什么响应时间越长，权重越高？<br><br>引用：区间加权来计算，也就是把请求按照响应时间分成多个区间，每个区间分别赋予不同的权重，响应时间越长权重越高","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427782,"discussion_content":"这里权重代表的是对系统资源的占用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541427441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315134,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1633698053,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633698053","product_id":100014401,"comment_content":"微服务容量规划的目的是为了合理高效地利用硬件资源。<br><br>做出合理的容量规划的前提是对容量进行评估，通过监控数据指标，绘制集群水位线，然后通过水位线做出扩容和缩容的调度决策。","like_count":0},{"had_liked":false,"id":292320,"user_name":"Tree","can_delete":false,"product_type":"c1","uid":1064664,"ip_address":"","ucode":"F53C863FF9159C","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/d8/8608ec03.jpg","comment_is_top":false,"comment_ctime":1620782212,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620782212","product_id":100014401,"comment_content":"如果响应时间越大，占用的权重越大，那么最终在计算集群容量的时候该怎么计算呢","like_count":0},{"had_liked":false,"id":292060,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1620658519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620658519","product_id":100014401,"comment_content":"请问老师，服务间的资源配比怎么得到呢？","like_count":0},{"had_liked":false,"id":149421,"user_name":"Joyce","can_delete":false,"product_type":"c1","uid":1129789,"ip_address":"","ucode":"93096F29FF6CFB","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/3d/a9c8d564.jpg","comment_is_top":false,"comment_ctime":1573214248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573214248","product_id":100014401,"comment_content":"如果服务存在分区域（比如地图搜索领域，来自北京的请求路由给固定处理北京数据的微服务）的场景下，怎么去做容量规划呢？因为存在这种固定数据处理微服务的特殊情况","like_count":0},{"had_liked":false,"id":142841,"user_name":"我是曾经那个少年","can_delete":false,"product_type":"c1","uid":1015189,"ip_address":"","ucode":"9F02F7FF147D14","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/95/dd73022c.jpg","comment_is_top":false,"comment_ctime":1571557182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571557182","product_id":100014401,"comment_content":"遇到特殊的单机故障，应该排除计算权重，避免部分异常机器，影响权重的计算。","like_count":0},{"had_liked":false,"id":104158,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1560671014,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1560671014","product_id":100014401,"comment_content":"流量大了就扩容<br>流量小了就缩容<br>机器是租的吗？要不缩容的机器岂不是要闲置了？<br>另外就是线上的压测？不会对线上业务有影响嘛？是只有数据的读，没有写嘛？如果有写怎么控制不影响线上的真实数据？","like_count":0,"discussions":[{"author":{"id":2291160,"avatar":"https://static001.geekbang.org/account/avatar/00/22/f5/d8/121e4b68.jpg","nickname":"Woa 🤞","note":"","ucode":"6033F496082F3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568021,"discussion_content":"缩容之后就能把机器闲置下来给别的服务使用啊 或者关机省电😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651046321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622655,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/7f/7b22f12b.jpg","nickname":"乔","note":"","ucode":"1286F8742B4A01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297445,"discussion_content":"所以说集群压测更能模拟真实线上环境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596940097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1212873,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/c9/9194612b.jpg","nickname":"百里","note":"","ucode":"2CE96129AA7F78","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65324,"discussion_content":"公有云提供,按秒租,按月租","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574995724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75696,"user_name":"滚键盘","can_delete":false,"product_type":"c1","uid":1351570,"ip_address":"","ucode":"F073E8FB8C83D2","user_header":"https://wx.qlogo.cn/mmopen/vi_32/tArJBBE5vlf1lZia78ZlNoeyJyXoppvXOFUtEsOqETfiamWsH51asUox1amKAOGeSjU3kwyNkKFrZTeoY2ibddJ0A/132","comment_is_top":false,"comment_ctime":1552451616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552451616","product_id":100014401,"comment_content":"污染的问题 可以用影子表","like_count":0},{"had_liked":false,"id":36582,"user_name":"扁扁圆圆","can_delete":false,"product_type":"c1","uid":1116671,"ip_address":"","ucode":"CE9B07D930BF78","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZwLEEpglswe8uzYj4W6ZVxx0W0OdicjicFzkha4O99wZWGRXqOTF1LO8SsJaBicCXugIQhn8BQicVoTcDJic82RbwDg/132","comment_is_top":false,"comment_ctime":1541161563,"is_pvip":false,"replies":[{"id":"13131","content":"这里容量应该是所占容量的意思","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1541387836,"ip_address":"","comment_id":36582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1541161563","product_id":100014401,"comment_content":"<br>关于权重那块，慢请求越多，计算出来的单机容量更高？不是应该更低吗？","like_count":0,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427923,"discussion_content":"这里容量应该是所占容量的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541387836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36141,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1540952876,"is_pvip":true,"replies":[{"id":"12855","content":"一般会用gzip压缩","user_name":"作者回复","user_name_real":"古月中心相心","uid":"1010144","ctime":1540955962,"ip_address":"","comment_id":36141,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1540952876","product_id":100014401,"comment_content":"问一个与本节无关的问题，微服务通过http请求调用，数据交换你们做了压缩吗？如果使用过那么用的那种方式呢？","like_count":1,"discussions":[{"author":{"id":1010144,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/e0/ff8ee2e2.jpg","nickname":"胡忠想","note":"","ucode":"0792605FC265B4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427759,"discussion_content":"一般会用gzip压缩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1540955962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":35914,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1540861326,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540861326","product_id":100014401,"comment_content":"可以设置两套监控体系，一个是针对集群的，另一个是针对单机的，对于单机的负载偏高问题，可以用一致性哈希等负载均衡的方式，把请求分配到负载偏低的节点","like_count":0},{"had_liked":false,"id":35913,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1540861298,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540861298","product_id":100014401,"comment_content":"可以设置两套监控体系，一个是针对集群的，另一个是针对单机的，对于单机的水位偏高，可以用负载均衡的方式，把请求分配到水位偏低的节点","like_count":0}]}