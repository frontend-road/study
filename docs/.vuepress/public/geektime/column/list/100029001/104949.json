{"id":104949,"title":"17 | 排队也要讲效率：HTTP的连接管理","content":"<p>在<a href=\"https://time.geekbang.org/column/article/103746\">第14讲</a>里，我曾经提到过HTTP的性能问题，用了六个字来概括：“<strong>不算差，不够好</strong>”。同时，我也谈到了“队头阻塞”，但由于时间的限制没有展开来细讲，这次就来好好地看看HTTP在连接这方面的表现。</p><p>HTTP的连接管理也算得上是个“老生常谈”的话题了，你一定曾经听说过“短连接”“长连接”之类的名词，今天让我们一起来把它们弄清楚。</p><h2>短连接</h2><p>HTTP协议最初（0.9/1.0）是个非常简单的协议，通信过程也采用了简单的“请求-应答”方式。</p><p>它底层的数据传输基于TCP/IP，每次发送请求前需要先与服务器建立连接，收到响应报文后会立即关闭连接。</p><p>因为客户端与服务器的整个连接过程很短暂，不会与服务器保持长时间的连接状态，所以就被称为“<strong>短连接</strong>”（short-lived connections）。早期的HTTP协议也被称为是“<strong>无连接</strong>”的协议。</p><p>短连接的缺点相当严重，因为在TCP协议里，建立连接和关闭连接都是非常“昂贵”的操作。TCP建立连接要有“三次握手”，发送3个数据包，需要1个RTT；关闭连接是“四次挥手”，4个数据包需要2个RTT。</p><p>而HTTP的一次简单“请求-响应”通常只需要4个包，如果不算服务器内部的处理时间，最多是2个RTT。这么算下来，浪费的时间就是“3÷5=60%”，有三分之二的时间被浪费掉了，传输效率低得惊人。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/54/0c/54315ed9ac37fbc6547258040f00a80c.png?wh=1100*1585\" alt=\"\"></p><p>单纯地从理论上讲，TCP协议你可能还不太好理解，我就拿打卡考勤机来做个形象的比喻吧。</p><p>假设你的公司买了一台打卡机，放在前台，因为这台机器比较贵，所以专门做了一个保护罩盖着它，公司要求每次上下班打卡时都要先打开盖子，打卡后再盖上盖子。</p><p>可是偏偏这个盖子非常牢固，打开关闭要费很大力气，打卡可能只要1秒钟，而开关盖子却需要四五秒钟，大部分时间都浪费在了毫无意义的开关盖子操作上了。</p><p>可想而知，平常还好说，一到上下班的点在打卡机前就会排起长队，每个人都要重复“开盖-打卡-关盖”的三个步骤，你说着急不着急。</p><p>在这个比喻里，打卡机就相当于服务器，盖子的开关就是TCP的连接与关闭，而每个打卡的人就是HTTP请求，很显然，短连接的缺点严重制约了服务器的服务能力，导致它无法处理更多的请求。</p><h2>长连接</h2><p>针对短连接暴露出的缺点，HTTP协议就提出了“<strong>长连接</strong>”的通信方式，也叫“持久连接”（persistent connections）、“连接保活”（keep alive）、“连接复用”（connection reuse）。</p><p>其实解决办法也很简单，用的就是“<strong>成本均摊</strong>”的思路，既然TCP的连接和关闭非常耗时间，那么就把这个时间成本由原来的一个“请求-应答”均摊到多个“请求-应答”上。</p><p>这样虽然不能改善TCP的连接效率，但基于“<strong>分母效应</strong>”，每个“请求-应答”的无效时间就会降低不少，整体传输效率也就提高了。</p><p>这里我画了一个短连接与长连接的对比示意图。</p><p><img src=\"https://static001.geekbang.org/resource/image/57/b4/57b3d80234a1f1b8c538a376aa01d3b4.png?wh=1400*1140\" alt=\"\"></p><p>在短连接里发送了三次HTTP“请求-应答”，每次都会浪费60%的RTT时间。而在长连接的情况下，同样发送三次请求，因为只在第一次时建立连接，在最后一次时关闭连接，所以浪费率就是“3÷9≈33%”，降低了差不多一半的时间损耗。显然，如果在这个长连接上发送的请求越多，分母就越大，利用率也就越高。</p><p>继续用刚才的打卡机的比喻，公司也觉得这种反复“开盖-打卡-关盖”的操作太“反人类”了，于是颁布了新规定，早上打开盖子后就不用关上了，可以自由打卡，到下班后再关上盖子。</p><p>这样打卡的效率（即服务能力）就大幅度提升了，原来一次打卡需要五六秒钟，现在只要一秒就可以了，上下班时排长队的景象一去不返，大家都开心。</p><h2>连接相关的头字段</h2><p>由于长连接对性能的改善效果非常显著，所以在HTTP/1.1中的连接都会默认启用长连接。不需要用什么特殊的头字段指定，只要向服务器发送了第一次请求，后续的请求都会重复利用第一次打开的TCP连接，也就是长连接，在这个连接上收发数据。</p><p>当然，我们也可以在请求头里明确地要求使用长连接机制，使用的字段是<strong>Connection</strong>，值是“<strong>keep-alive</strong>”。</p><p>不过不管客户端是否显式要求长连接，如果服务器支持长连接，它总会在响应报文里放一个“<strong>Connection: keep-alive</strong>”字段，告诉客户端：“我是支持长连接的，接下来就用这个TCP一直收发数据吧”。</p><p>你可以在实验环境里访问URI“/17-1”，用Chrome看一下服务器返回的响应头：</p><p><img src=\"https://static001.geekbang.org/resource/image/27/c6/27f13aacad9704368ce383b764c46bc6.png?wh=1142*427\" alt=\"\"></p><p>不过长连接也有一些小缺点，问题就出在它的“长”字上。</p><p>因为TCP连接长时间不关闭，服务器必须在内存里保存它的状态，这就占用了服务器的资源。如果有大量的空闲长连接只连不发，就会很快耗尽服务器的资源，导致服务器无法为真正有需要的用户提供服务。</p><p>所以，长连接也需要在恰当的时间关闭，不能永远保持与服务器的连接，这在客户端或者服务器都可以做到。</p><p>在客户端，可以在请求头里加上“<strong>Connection: close</strong>”字段，告诉服务器：“这次通信后就关闭连接”。服务器看到这个字段，就知道客户端要主动关闭连接，于是在响应报文里也加上这个字段，发送之后就调用Socket API关闭TCP连接。</p><p>服务器端通常不会主动关闭连接，但也可以使用一些策略。拿Nginx来举例，它有两种方式：</p><ol>\n<li>使用“keepalive_timeout”指令，设置长连接的超时时间，如果在一段时间内连接上没有任何数据收发就主动断开连接，避免空闲连接占用系统资源。</li>\n<li>使用“keepalive_requests”指令，设置长连接上可发送的最大请求次数。比如设置成1000，那么当Nginx在这个连接上处理了1000个请求后，也会主动断开连接。</li>\n</ol><p>另外，客户端和服务器都可以在报文里附加通用头字段“Keep-Alive: timeout=value”，限定长连接的超时时间。但这个字段的约束力并不强，通信的双方可能并不会遵守，所以不太常见。</p><p>我们的实验环境配置了“keepalive_timeout 60”和“keepalive_requests 5”，意思是空闲连接最多60秒，最多发送5个请求。所以，如果连续刷新五次页面，就能看到响应头里的“Connection: close”了。</p><p>把这个过程用Wireshark抓一下包，就能够更清晰地看到整个长连接中的握手、收发数据与挥手过程，在课后你可以再实际操作看看。</p><p><img src=\"https://static001.geekbang.org/resource/image/ec/45/ecfb04b7a97f3591efedc428800a4845.png?wh=1142*517\" alt=\"\"></p><h2>队头阻塞</h2><p>看完了短连接和长连接，接下来就要说到著名的“队头阻塞”（Head-of-line blocking，也叫“队首阻塞”）了。</p><p>“队头阻塞”与短连接和长连接无关，而是由HTTP基本的“请求-应答”模型所导致的。</p><p>因为HTTP规定报文必须是“一发一收”，这就形成了一个先进先出的“串行”队列。队列里的请求没有轻重缓急的优先级，只有入队的先后顺序，排在最前面的请求被最优先处理。</p><p>如果队首的请求因为处理的太慢耽误了时间，那么队列里后面的所有请求也不得不跟着一起等待，结果就是其他的请求承担了不应有的时间成本。</p><p><img src=\"https://static001.geekbang.org/resource/image/6a/72/6a6d30a89fb085d5f1773a887aaf5572.png?wh=1142*1054\" alt=\"\"></p><p>还是用打卡机做个比喻。</p><p>上班的时间点上，大家都在排队打卡，可这个时候偏偏最前面的那个人遇到了打卡机故障，怎么也不能打卡成功，急得满头大汗。等找人把打卡机修好，后面排队的所有人全迟到了。</p><h2>性能优化</h2><p>因为“请求-应答”模型不能变，所以“队头阻塞”问题在HTTP/1.1里无法解决，只能缓解，有什么办法呢？</p><p>公司里可以再多买几台打卡机放在前台，这样大家可以不用挤在一个队伍里，分散打卡，一个队伍偶尔阻塞也不要紧，可以改换到其他不阻塞的队伍。</p><p>这在HTTP里就是“<strong>并发连接</strong>”（concurrent connections），也就是同时对一个域名发起多个长连接，用数量来解决质量的问题。</p><p>但这种方式也存在缺陷。如果每个客户端都想自己快，建立很多个连接，用户数×并发数就会是个天文数字。服务器的资源根本就扛不住，或者被服务器认为是恶意攻击，反而会造成“拒绝服务”。</p><p>所以，HTTP协议建议客户端使用并发，但不能“滥用”并发。RFC2616里明确限制每个客户端最多并发2个连接。不过实践证明这个数字实在是太小了，众多浏览器都“无视”标准，把这个上限提高到了6~8。后来修订的RFC7230也就“顺水推舟”，取消了这个“2”的限制。</p><p>但“并发连接”所压榨出的性能也跟不上高速发展的互联网无止境的需求，还有什么别的办法吗？</p><p>公司发展的太快了，员工越来越多，上下班打卡成了迫在眉睫的大问题。前台空间有限，放不下更多的打卡机了，怎么办？那就多开几个打卡的地方，每个楼层、办公区的入口也放上三四台打卡机，把人进一步分流，不要都往前台挤。</p><p>这个就是“<strong>域名分片</strong>”（domain sharding）技术，还是用数量来解决质量的思路。</p><p>HTTP协议和浏览器不是限制并发连接数量吗？好，那我就多开几个域名，比如shard1.chrono.com、shard2.chrono.com，而这些域名都指向同一台服务器www.chrono.com，这样实际长连接的数量就又上去了，真是“美滋滋”。不过实在是有点“上有政策，下有对策”的味道。</p><h2>小结</h2><p>这一讲中我们学习了HTTP协议里的短连接和长连接，简单小结一下今天的内容：</p><ol>\n<li><span class=\"orange\">早期的HTTP协议使用短连接，收到响应后就立即关闭连接，效率很低；</span></li>\n<li><span class=\"orange\">HTTP/1.1默认启用长连接，在一个连接上收发多个请求响应，提高了传输效率；</span></li>\n<li><span class=\"orange\">服务器会发送“Connection: keep-alive”字段表示启用了长连接；</span></li>\n<li><span class=\"orange\">报文头里如果有“Connection: close”就意味着长连接即将关闭；</span></li>\n<li><span class=\"orange\">过多的长连接会占用服务器资源，所以服务器会用一些策略有选择地关闭长连接；</span></li>\n<li><span class=\"orange\">“队头阻塞”问题会导致性能下降，可以用“并发连接”和“域名分片”技术缓解。</span></li>\n</ol><h2>课下作业</h2><ol>\n<li>在开发基于HTTP协议的客户端时应该如何选择使用的连接模式呢？短连接还是长连接？</li>\n<li>应当如何降低长连接对服务器的负面影响呢？</li>\n</ol><p>欢迎你把自己的学习体会写在留言区，与我和其他同学一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p><p><img src=\"https://static001.geekbang.org/resource/image/f9/72/f93afe4b663d681b8ce63c947f478072.png?wh=1769*3448\" alt=\"unpreview\"></p><p></p>","comments":[{"had_liked":false,"id":110450,"user_name":"TerryGoForIt","can_delete":false,"product_type":"c1","uid":1020644,"ip_address":"","ucode":"701B0E72F15AB5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/e4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1562279569,"is_pvip":false,"replies":[{"id":"40161","content":"队头阻塞在http和tcp层次都有，原因不同。<br><br>你说的是tcp队头阻塞，而http的队头阻塞是因为它的请求-应答模式，当然它运行在tcp上，就有两种队头阻塞。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562288435,"ip_address":"","comment_id":110450,"utype":1}],"discussion_count":3,"race_medal":0,"score":"280735153809","product_id":100029001,"comment_content":"老师您好，我想对于 队首阻塞 的问题，应该从 TCP 层面去解释会比较好一点吧。<br>&gt; 以下引用自《Web 性能权威指南》<br>每个 TCP 分组都会带着一个唯一的序列号被发出，而所有分组必须按顺序传送到接收端。如果中途有一个分组没能到达接收端，那么后续分组必须保存到接收端的 TCP 缓冲区，等待丢失的分组重发并到达接收端。这一切都发生在 TCP 层，应用程序对 TCP 重发和缓冲区中排队的分组一无所知，必须等待分组全部到达才能访问数据。在此之前，应用程序只能在通过套接字读数据时感觉到延迟交互。这种效应称为 TCP 的队首阻塞。","like_count":66,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456887,"discussion_content":"队头阻塞在http和tcp层次都有，原因不同。\n\n你说的是tcp队头阻塞，而http的队头阻塞是因为它的请求-应答模式，当然它运行在tcp上，就有两种队头阻塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562288435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1477120,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia31qc8paRg2uPSB6AuEBDricrSxvFBuTpP3NnnflekpJ7wqvN0nRrJyu7zVbzd7Lwjxw/132","nickname":"Geek_steven_wang","note":"","ucode":"8CC8F4C9726191","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5136,"discussion_content":" 1 从效率角度出发应该首选长链接，同时做好服务器资源保护措施，防止恶性消耗。见问题2\n\n2 服务器端，以nginx为例\n使用“keepalive_timeout”指令，设置长连接的超时时间，如果在一段时间内连接上没有任何数据收发就主动断开连接，避免空闲连接占用系统资源。\n使用“keepalive_requests”指令，设置长连接上可发送的最大请求次数。比如设置成 1000，那么当 Nginx 在这个连接上处理了 1000 个请求后，也会主动断开连接。\n\n客户端\n开发人员开发时，如果明确知道本次访问已经完成，应该在请求头中加上 connection:close\n\n\n","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1565994875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1142395,"avatar":"","nickname":"谭亮","note":"","ucode":"8BE75B6409548C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558921,"discussion_content":"TCP,http,路由分组转发，都有阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648522723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120761,"user_name":"qzmone","can_delete":false,"product_type":"c1","uid":1081681,"ip_address":"","ucode":"E10DC194F04B74","user_header":"https://static001.geekbang.org/account/avatar/00/10/81/51/4999f121.jpg","comment_is_top":false,"comment_ctime":1564991792,"is_pvip":false,"replies":[{"id":"44370","content":"域名分片解决的是客户端并发的问题，可以创建更多的连接。<br><br>比如浏览器限制一个域名最多6个连接，域名分3片，那么浏览器就可以同时建立18个连接，显然就能够并发更多请求，获取数据也就快了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565009203,"ip_address":"","comment_id":120761,"utype":1}],"discussion_count":1,"race_medal":0,"score":"212018389296","product_id":100029001,"comment_content":"＂多开几个域名，比如 shard1.chrono.com、shard2.chrono.com，而这些域名都指向同一台服务器 www.chrono.com＂老师，多开几个域名，最终都是指向一个服务器，那跟都直接连一个服务器的效果一样吧，我感觉对服务器的性能要求一样呀，没有减少后端的压力","like_count":50,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461464,"discussion_content":"域名分片解决的是客户端并发的问题，可以创建更多的连接。\n\n比如浏览器限制一个域名最多6个连接，域名分3片，那么浏览器就可以同时建立18个连接，显然就能够并发更多请求，获取数据也就快了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1565009203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111036,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1562427109,"is_pvip":false,"replies":[{"id":"40523","content":"一个来回就是1rtt，三次回收准确来说是1.5个rtt，四次挥手是两个来回，所以是2rtt。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562548458,"ip_address":"","comment_id":111036,"utype":1}],"discussion_count":1,"race_medal":0,"score":"212015824613","product_id":100029001,"comment_content":"老师能解释下，为什么tcp握手1个rtt，挥手2个rtt吗？","like_count":50,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457190,"discussion_content":"一个来回就是1rtt，三次回收准确来说是1.5个rtt，四次挥手是两个来回，所以是2rtt。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562548458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110525,"user_name":"锦","can_delete":false,"product_type":"c1","uid":1468298,"ip_address":"","ucode":"CB0EB4B68C468B","user_header":"https://static001.geekbang.org/account/avatar/00/16/67/8a/babd74dc.jpg","comment_is_top":false,"comment_ctime":1562289846,"is_pvip":false,"replies":[{"id":"40174","content":"总结的不错。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562291312,"ip_address":"","comment_id":110525,"utype":1}],"discussion_count":1,"race_medal":0,"score":"139001243318","product_id":100029001,"comment_content":"一般使用长连接，除非明确知道只会发送一个请求，比如游戏内连接兑换码服务进行礼包兑换。<br>1，服务器端设置keepalive＿timeout表示多长时间没有数据则关闭连接。<br>2，服务器端设置keepalive_requests，表示该连接上处理多少个请求后关闭连接。<br>3，服务器端设置最大连接数，当连接达到上限之后拒绝连接，也可以采用限流措施等。<br>4，客户端设置keepalive_requests，表示该连接上发送多少个连接后关闭连接。<br>5，客户端设置keepalive_timeout，表示多长时间没有数据发送则关闭连接。<br>6，客户端设置响应超时后重试次数，当次数达到上限后关闭连接。","like_count":33,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456923,"discussion_content":"总结的不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562291312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110734,"user_name":"披荆斩棘KK","can_delete":false,"product_type":"c1","uid":1458141,"ip_address":"","ucode":"291154716C855E","user_header":"https://static001.geekbang.org/account/avatar/00/16/3f/dd/4a8b6e27.jpg","comment_is_top":false,"comment_ctime":1562321130,"is_pvip":false,"replies":[{"id":"40533","content":"“高并发请求”是服务器端的概念，意思是同时有多个客户端连接服务器。<br><br>课程里的“并发连接”是客户端的概念，意思是一个浏览器并发多个连接，访问服务器。<br><br>负载均衡是服务器端的概念，就是把大量的客户端连接均匀分散到集群里的多台服务器。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562549045,"ip_address":"","comment_id":110734,"utype":1}],"discussion_count":2,"race_medal":0,"score":"113231470826","product_id":100029001,"comment_content":"老师，请问高并发请求和并发连接有什么关系吗？<br>负载均衡解决高并发问题是并发连接吗？","like_count":27,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457029,"discussion_content":"“高并发请求”是服务器端的概念，意思是同时有多个客户端连接服务器。\n\n课程里的“并发连接”是客户端的概念，意思是一个浏览器并发多个连接，访问服务器。\n\n负载均衡是服务器端的概念，就是把大量的客户端连接均匀分散到集群里的多台服务器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562549045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187577,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1e/f9/bfb54326.jpg","nickname":"狮锅艺","note":"","ucode":"1B4AD130F9D0CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222645,"discussion_content":"我的理解是这样的，并发连接，表示的是同时和服务器建立连接的客户端数量（只连接不操作），这里主要使用的是服务器的内存资源用于维持连接状态；并发请求，表示的是同时向服务器发起读写请求的数量，这里主要使用的是服务器的CPU资源，用于处理读写操作。所以高并发连接，只要服务器内存够理论上就能撑着得住，而高并发请求的话，可能瓶颈就变成CPU了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1586165664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140454,"user_name":"恒","can_delete":false,"product_type":"c1","uid":1225966,"ip_address":"","ucode":"68F64BF1460D8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/b4/ee/c3ff8615.jpg","comment_is_top":false,"comment_ctime":1570948720,"is_pvip":false,"replies":[{"id":"54335","content":"非常完整详细，good。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1571015254,"ip_address":"","comment_id":140454,"utype":1}],"discussion_count":2,"race_medal":0,"score":"87470294640","product_id":100029001,"comment_content":"老师看下我总结的对不对，谢谢！<br>短连接：每次“请求-响应”都先建立tcp连接，完后关闭连接。这样三次握手1.5个rtt，“请求-响应”2个rtt(里面有两个ack)，四次挥手2个rtt，效率极低。适用于少次请求，例如客户端只会对某个服务器发送几次请求后就不再发送。<br>\t<br>长连接：建立tcp连接后不立即关闭，后续http请求复用这个tcp连接。http&#47;1.1默认开启。如果有大量的空闲长连接只连不发占用资源，可能导致耗尽资源“拒绝服务”即DDoS。因此服务器常会设置超时时间或最大请求数。<br><br>这里的“连接”其实是对某个域名的，而不是某个ip或主机。而浏览器对单个域名的并发连接数量有限制，一般为6~8个，所以为了进一步提高连接数就有了“域名分片”技术，即将原来一个域名分成多个域名，但最后指向的服务器还是原来那一台。<br>例如把www.chrono.com分成shard1.chrono.com, 和 shard2.chrono.com，但还是指向原来那台服务器。这虽然提高了客户端的并发数，但反而增加了服务器端的压力。<br><br>连接相关头字段<br>Connection: keep-alive<br>在请求头里表明要求使用长连接，在响应头里表明支持使用长连接。<br>Connection: close<br>在请求头里表明告诉服务器这次通信后关闭长连接，在响应头里表明服务器将关闭长连接。<br>[Connection: Upgrade，配合101状态码表示协议升级，例如从http切换到WebSocket]","like_count":20,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470396,"discussion_content":"非常完整详细，good。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571015254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72787,"discussion_content":"朋友，总结的非常棒！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575527396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118372,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c1","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1564352740,"is_pvip":false,"replies":[{"id":"43352","content":"感谢指正。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1564361700,"ip_address":"","comment_id":118372,"utype":1}],"discussion_count":1,"race_medal":0,"score":"61693894884","product_id":100029001,"comment_content":"拒绝服务应该是dos  ddos是分布式dos","like_count":15,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460380,"discussion_content":"感谢指正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564361700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282140,"user_name":"小M","can_delete":false,"product_type":"c1","uid":1334823,"ip_address":"","ucode":"4210C9B7F18AF7","user_header":"https://static001.geekbang.org/account/avatar/00/14/5e/27/a871073d.jpg","comment_is_top":false,"comment_ctime":1615106157,"is_pvip":false,"replies":[{"id":"102444","content":"说的没错，req-rsp这个就是请求响应机制，要求必须一来一回，也就造成了消息必须排队处理。<br><br>到了http&#47;2，一个流上只跑一个请求响应，而多个流并行，这个队头阻塞的问题也就迎刃而解了。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615115655,"ip_address":"","comment_id":282140,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48859746413","product_id":100029001,"comment_content":"个人理解，不能把http的队首阻塞归结于请求-响应机制。<br>tcp是全双工的，完全可以在一个tcp连接上双端同时进行收发。http只是在tcp连接上流动的一堆数据而已，应用层的数据不存在队首阻塞。问题在于http协议自身：它无法明确的标识出某个rsp是哪个req的。如果服务端不等待上一个req-rsp结束就发出另一个rsp，那么客户端无法区分收到的数据。<br>单连接上的多路复用也是基于请求-响应机制的，虽然一个连接上同时流动着多个req-rsp的数据，但是应用层协议有序号可以区分出rsp是哪个req的。","like_count":12,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516639,"discussion_content":"说的没错，req-rsp这个就是请求响应机制，要求必须一来一回，也就造成了消息必须排队处理。\n\n到了http/2，一个流上只跑一个请求响应，而多个流并行，这个队头阻塞的问题也就迎刃而解了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615115655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556436,"discussion_content":"正解!!!1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647358520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151879,"user_name":"小炭","can_delete":false,"product_type":"c1","uid":1109544,"ip_address":"","ucode":"E20E3958CAF06C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/28/c04a0c83.jpg","comment_is_top":false,"comment_ctime":1573804853,"is_pvip":true,"replies":[{"id":"58419","content":"tcp握手是1个rtt，挥手是2个rtt，这就是3个没有数据传输的时间，实际的数据传输是2个rtt。<br><br>一次短连接总共5个rtt，所以浪费的就是tcp握手挥手的3个，除以总共的5个。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1573807940,"ip_address":"","comment_id":151879,"utype":1}],"discussion_count":4,"race_medal":0,"score":"48818445109","product_id":100029001,"comment_content":"浪费的时间就是“3÷5=60%” 这个算法不是很理解，分子&#47;分母是怎么来的","like_count":11,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474643,"discussion_content":"tcp握手是1个rtt，挥手是2个rtt，这就是3个没有数据传输的时间，实际的数据传输是2个rtt。\n\n一次短连接总共5个rtt，所以浪费的就是tcp握手挥手的3个，除以总共的5个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573807940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140878,"avatar":"https://static001.geekbang.org/account/avatar/00/11/68/8e/2a7faff6.jpg","nickname":"riven","note":"","ucode":"B7051E72AD6D15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":118740,"discussion_content":"实际数据传输为什么是两个rtt呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578188466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1613052,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9c/fc/0aa200b5.jpg","nickname":"Java课代表","note":"","ucode":"F17E4A1807FB12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1140878,"avatar":"https://static001.geekbang.org/account/avatar/00/11/68/8e/2a7faff6.jpg","nickname":"riven","note":"","ucode":"B7051E72AD6D15","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310688,"discussion_content":"以get请求为例，客户端发get给服务器，服务器返回ack，服务器返回数据，客户端回复ack，两个来回，所以算俩rtt。\n可以复习一下第8节课","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1601995593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":118740,"ip_address":""},"score":310688,"extra":""},{"author":{"id":1402668,"avatar":"https://static001.geekbang.org/account/avatar/00/15/67/2c/ee3c2d36.jpg","nickname":"飞翔的葱油饼","note":"","ucode":"42865E09C7F899","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1613052,"avatar":"https://static001.geekbang.org/account/avatar/00/18/9c/fc/0aa200b5.jpg","nickname":"Java课代表","note":"","ucode":"F17E4A1807FB12","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366037,"discussion_content":"果然课代表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617945747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":310688,"ip_address":""},"score":366037,"extra":""}]}]},{"had_liked":false,"id":175056,"user_name":"独钓寒江雪","can_delete":false,"product_type":"c1","uid":1625419,"ip_address":"","ucode":"76278A3EBCE0B8","user_header":"https://static001.geekbang.org/account/avatar/00/18/cd/4b/36396a18.jpg","comment_is_top":false,"comment_ctime":1580542436,"is_pvip":true,"replies":[{"id":"68071","content":"也挺好，多用不同的比喻可以加强理解。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1580630936,"ip_address":"","comment_id":175056,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40235248100","product_id":100029001,"comment_content":"其实感觉本节用地铁站做例子更好：<br><br>地铁站相当于服务器；<br>地铁站有多个出入口，对应域名分片；<br>每个口有多条道，每条道对应一个连接；<br>每条道有开和关，对应握手和挥手；<br>人刷卡通过就传递了数据信息。","like_count":9,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482610,"discussion_content":"也挺好，多用不同的比喻可以加强理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580630936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110540,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1562291731,"is_pvip":false,"replies":[{"id":"40191","content":"1.是的，http是“半双工”，只能一来一回收发数据，这就是队头阻塞的根源。<br><br>2.域名分片其实很简单，就是申请多个域名，但这些域名最后都映射到同一个网站服务器，这样就可以突破浏览器的限制，让连接数是8*域名的个数。<br><br>3.最后我说的不太确切，应该是shard1、shard2的域名都指向www.xxx.com域名对应的ip地址。<br><br>4.域名也可以解析成别名（cname），用于cdn负载均衡，后面会讲到。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562302681,"ip_address":"","comment_id":110540,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40216997395","product_id":100029001,"comment_content":"谢谢老师!讲的很形象，有个问题，长链接。课后小贴士写了区分请求和应答。一个长链接，同一时间只能发送一个请求是么?等到收到服务器响应以后才能被别的请求复用?假如有一个视频的请求一直占着。在分段传输的间隙能发送别的请求么?<br>“域名分片”（domain sharding）技术，具体怎么实现啊后面仔细会讲么?那个域名的比喻没看太懂。是一个浏览器持有同一个服务的，多个负载的链接的意思么(一台服务器8个最多)服务器有集群浏览器创建了8*n个链接。每台负载最多只让一个浏览器连了8个。<br>域名解析不是DNS服务器做的么，不是直接解析成IP的么还能域名指向域名么?完全不懂","like_count":9,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456931,"discussion_content":"1.是的，http是“半双工”，只能一来一回收发数据，这就是队头阻塞的根源。\n\n2.域名分片其实很简单，就是申请多个域名，但这些域名最后都映射到同一个网站服务器，这样就可以突破浏览器的限制，让连接数是8*域名的个数。\n\n3.最后我说的不太确切，应该是shard1、shard2的域名都指向www.xxx.com域名对应的ip地址。\n\n4.域名也可以解析成别名（cname），用于cdn负载均衡，后面会讲到。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562302681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110800,"user_name":"衬衫的价格是19美元","can_delete":false,"product_type":"c1","uid":1397631,"ip_address":"","ucode":"655F925451F772","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","comment_is_top":false,"comment_ctime":1562338037,"is_pvip":false,"replies":[{"id":"40530","content":"http里的连接通常就是tcp连接，也就是调用socket api打开的一个套接字，可以理解成一个流式文件的句柄，可读可写，但数据都是在网络上。<br><br>想要理解清楚应该去看一下tcp&#47;ip相关的资料。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562548898,"ip_address":"","comment_id":110800,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35922076405","product_id":100029001,"comment_content":"服务器或者客户端是怎么是判断一个连接的呢？是不是有一个id来对应一个连接？一个连接具体是什么东西呢？是双方在内存中开辟的空间吗？<br>","like_count":8,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457063,"discussion_content":"http里的连接通常就是tcp连接，也就是调用socket api打开的一个套接字，可以理解成一个流式文件的句柄，可读可写，但数据都是在网络上。\n\n想要理解清楚应该去看一下tcp/ip相关的资料。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562548898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1659177,"avatar":"https://static001.geekbang.org/account/avatar/00/19/51/29/24739c58.jpg","nickname":"凉人。","note":"","ucode":"4DB16004A62015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209238,"discussion_content":"一个连接在TCP种表现为四元组。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584621942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205437,"user_name":"MClink","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","comment_is_top":false,"comment_ctime":1586617172,"is_pvip":true,"replies":[{"id":"76737","content":"因为tcp要一来一回才能确认消息能够正确收发，a端一个来回，然后b端一个来回，最少要三次通信，所以这是最经济的做法。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1586646970,"ip_address":"","comment_id":205437,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27356420948","product_id":100029001,"comment_content":"老师，我们都知道tcp要三次握手来保证连接成功，但是老是有人问为什么是三次，不是四次，不是五次，如果面试官这么问的话，我们应该怎么回答才能是较为准确呢？我也只能说两次无法确认，三次足够确认，四次就多余了，每三次就是一个有效的循环","like_count":6,"discussions":[{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296252,"discussion_content":"10000次也不能保证连接一定建立，但是相对稳定就可以了","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1596498495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491482,"discussion_content":"因为tcp要一来一回才能确认消息能够正确收发，a端一个来回，然后b端一个来回，最少要三次通信，所以这是最经济的做法。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586646970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2675181,"avatar":"","nickname":"Geek_66617b","note":"","ucode":"D5B468568B8F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574249,"discussion_content":"三次握手\n1. 客户端 ----&gt; syn ---&gt; 服务端\n2. 客户端 &lt;---- syn+ack &lt;--- 服务端\n3. 客户端 ----&gt; ack ---&gt; 服务端\n\n四个报文只有三次握手，是将多个包一起发送，服务端收到客户端的请求连接的syn包，将ack和syn包一起回复给客户端，减少了一次发送。\n\n1. 客户端 ----&gt; syn ---&gt; 服务端\n2. 客户端 &lt;---- syn+ack &lt;--- 服务端\n3. 客户端 ----&gt; ack ---&gt; 服务端\n\n1. 客户端发起连接，发送syn包给服务端，表示我准备好了，可以连接了。\n2. 服务端发送syn包给客户端，同理1。\n3. 服务端回复ack包给客户端，表示我知道你准备好了，开始通信吧。\n4. 客户端回复ack包给客户端，同理2。\n\n然后它们就可以通信了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653923172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164193,"user_name":"Happy-Coming","can_delete":false,"product_type":"c1","uid":1023016,"ip_address":"","ucode":"4F7EA88432EDCD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/28/87421d8f.jpg","comment_is_top":false,"comment_ctime":1576907344,"is_pvip":false,"replies":[{"id":"62541","content":"其实只要是现实中的排队，就免不了队头阻塞。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1577062527,"ip_address":"","comment_id":164193,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23051743824","product_id":100029001,"comment_content":"打卡机器比喻非常棒","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478678,"discussion_content":"其实只要是现实中的排队，就免不了队头阻塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577062527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209217,"user_name":"Hale","can_delete":false,"product_type":"c1","uid":1129731,"ip_address":"","ucode":"1925955343FE94","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/03/b2d9a084.jpg","comment_is_top":false,"comment_ctime":1587520923,"is_pvip":true,"replies":[{"id":"78178","content":"<br>队头阻塞有两个层面，一个是HTTP的长连接排队请求处理，另一个是TCP的丢包重传机制。<br><br>可以再看后面的HTTP&#47;2和HTTP&#47;3。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1587533432,"ip_address":"","comment_id":209217,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18767390107","product_id":100029001,"comment_content":"对头阻塞 是http协议层实现的，还是tcp 中listen(blocklog) 实现的？二者有关系吗？","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492741,"discussion_content":"\n队头阻塞有两个层面，一个是HTTP的长连接排队请求处理，另一个是TCP的丢包重传机制。\n\n可以再看后面的HTTP/2和HTTP/3。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587533432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153968,"user_name":"answer宫","can_delete":false,"product_type":"c1","uid":1114020,"ip_address":"","ucode":"54CA51DE2BE829","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/a4/55520286.jpg","comment_is_top":false,"comment_ctime":1574338459,"is_pvip":false,"replies":[{"id":"59164","content":"在tcp层次，发出一个包会返回一个确认收到的ack包，这就是一个rtt。<br><br>如果在http层次，那么看不到ack，所以一个请求一个响应是一个rtt。<br><br>层次不同，对rtt的理解就不一样，这里说的是tcp层次。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1574384322,"ip_address":"","comment_id":153968,"utype":1}],"discussion_count":4,"race_medal":0,"score":"18754207643","product_id":100029001,"comment_content":"老师 ,请问为什么此请求是两个RTT啊,我理解一个就够了啊,一次请求,一次响应,一来一回就ok了吧,没有想通为什么是2个RTT","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475341,"discussion_content":"在tcp层次，发出一个包会返回一个确认收到的ack包，这就是一个rtt。\n\n如果在http层次，那么看不到ack，所以一个请求一个响应是一个rtt。\n\n层次不同，对rtt的理解就不一样，这里说的是tcp层次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574384322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175427,"discussion_content":"因为假设http这边是四个包，请求2个，应答两个。（就是假设最少要发这么多）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581954751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1180493,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/4d/20cb06d0.jpg","nickname":"anderson","note":"","ucode":"F5400691D50E24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221902,"discussion_content":"你的理解是错误的，从http角度一个请求一个响应，在tcp层面一个请求发出后，服务端会返回一个ack，这是一个rtt；服务端返回响应的数据，客户端会返回一个ack给服务端，这是另一个rtt。所以从tcp层面看，http的一次请求响应在tcp层面是2个rtt。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1586078276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":175427,"ip_address":""},"score":221902,"extra":""},{"author":{"id":1299095,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d2/97/5f4cd8da.jpg","nickname":"虎虎生威的程坚强","note":"","ucode":"321C89298D3682","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1180493,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/4d/20cb06d0.jpg","nickname":"anderson","note":"","ucode":"F5400691D50E24","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298171,"discussion_content":"正解，是在不同的层级上看的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597208933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":221902,"ip_address":""},"score":298171,"extra":""}]}]},{"had_liked":false,"id":111170,"user_name":"徐海浪","can_delete":false,"product_type":"c1","uid":1078528,"ip_address":"","ucode":"21801C420D0610","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/00/618b20da.jpg","comment_is_top":false,"comment_ctime":1562497523,"is_pvip":false,"replies":[{"id":"40537","content":"√","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562549135,"ip_address":"","comment_id":111170,"utype":1}],"discussion_count":1,"race_medal":1,"score":"18742366707","product_id":100029001,"comment_content":"1. 在开发基于 HTTP 协议的客户端时应该如何选择使用的连接模式呢？短连接还是长连接？<br>根据请求的频繁程度来选择连接模式。一次性的请求用短链接，频繁与服务端交互的用长连接。<br>2. 应当如何降低长连接对服务器的负面影响呢？<br>长连接会长期占用服务器资源，根据服务器性能设置连接数和长连接超时时间，保证服务器TCP资源使用处于正常范围。","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457263,"discussion_content":"√","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562549135,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137736,"user_name":"李扬翼","can_delete":false,"product_type":"c1","uid":1552543,"ip_address":"","ucode":"4C9B6733B8665C","user_header":"https://static001.geekbang.org/account/avatar/00/17/b0/9f/ea75aa8e.jpg","comment_is_top":false,"comment_ctime":1569833693,"is_pvip":false,"replies":[{"id":"52936","content":"这就要看QUIC和HTTP&#47;3了，请参考飞翔篇。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1569834942,"ip_address":"","comment_id":137736,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14454735581","product_id":100029001,"comment_content":"老师，http2在应用层解决了队头阻塞，那TCP传输层的队头阻塞如何解决呢？","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469237,"discussion_content":"这就要看QUIC和HTTP/3了，请参考飞翔篇。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569834942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198992,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1585475301,"is_pvip":false,"replies":[{"id":"74802","content":"<br>1.是的，短连接指的是一次请求响应后就关闭连接，而不是指时间长短。<br><br>2.长连接是在一个连接里发多次请求，而会话是连接之上的概念，可能跨越多个连接，是业务层面的。<br><br>3.这方面已经有很多方法了，你说的对。<br><br>4.这个是tcp协议的原因，客户端用任意端口，服务器端用固定端口。并发的连接数受服务器的能力、资源限制，如果是Nginx就可以开几万、几十万个并发连接。<br><br>5.看具体情况，如果用户频繁交互就长一些，如果服务器能力差就短一些，Nginx默认是60秒。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1585531246,"ip_address":"","comment_id":198992,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10175409893","product_id":100029001,"comment_content":"1：在开发基于 HTTP 协议的客户端时应该如何选择使用的连接模式呢？短连接还是长连接？<br>这个视业务场景而定，只要一次交互就行了，也就是只有一次来回就OK，那就短链接，否则就长连接。<br>罗老师，请教一下短链接和长链接，表面上的长短是指连接存活的长短，不过如果使用短链接的请求和响应时间比较长时，短链接的存活时间也可能比长链接长的吧？连接的长短核心在于关闭连接的机制而非实际存活长短是吧？当然，一般而言长链接的存活时间是比短链接长的。另外，长链接和回话的存活时间是两个不同的概念吧？他们有什么联系嘛？<br><br>2：应当如何降低长连接对服务器的负面影响呢？<br>使用一定的保护措施，比如：文中讲的按超时时间或请求次数来关闭连接，也可以搞一个连接池来防护服务器。<br><br>老师的例子很棒，生动形象跃然于脑，另外，浏览器建立多个连接看评论服务器端口是一个浏览器是随机的，换言之多个连接在浏览器侧是多个端口在服务器侧是一个端口，这是为什么？感觉有些疑惑，另外请教一下一个端口能建立多少个连接？长链接的超时时间一般设置为多少，怎么考虑的？<br>","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489775,"discussion_content":"\n1.是的，短连接指的是一次请求响应后就关闭连接，而不是指时间长短。\n\n2.长连接是在一个连接里发多次请求，而会话是连接之上的概念，可能跨越多个连接，是业务层面的。\n\n3.这方面已经有很多方法了，你说的对。\n\n4.这个是tcp协议的原因，客户端用任意端口，服务器端用固定端口。并发的连接数受服务器的能力、资源限制，如果是Nginx就可以开几万、几十万个并发连接。\n\n5.看具体情况，如果用户频繁交互就长一些，如果服务器能力差就短一些，Nginx默认是60秒。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585531246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110643,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1562309697,"is_pvip":false,"replies":[{"id":"40217","content":"默认是长连接，可以省略。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562318956,"ip_address":"","comment_id":110643,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10152244289","product_id":100029001,"comment_content":"老师：请教一个问题。为什么我看很多网站HTTP请求都没有返回头里都没有Connection: Keep-Alive。有的网站却有。那些没有返回的是没有使用长连接吗？","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456982,"discussion_content":"默认是长连接，可以省略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562318956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110456,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1562282574,"is_pvip":false,"replies":[{"id":"40159","content":"前半句对，后半句不一定，也可能是镜像集群。","user_name":"作者回复","comment_id":110456,"uid":"1181974","ip_address":"","utype":1,"ctime":1562288298,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"10152217166","product_id":100029001,"comment_content":"请问一下老师域名分片技术是不是让一个浏览器跟不同的域名都建立长连接, 而这些域名都指向同一个服务器集群?","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456891,"discussion_content":"前半句对，后半句不一定，也可能是镜像集群。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562288298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290496,"user_name":"纳兰容若","can_delete":false,"product_type":"c1","uid":1605876,"ip_address":"","ucode":"2E1EA2CDFDA1A9","user_header":"https://static001.geekbang.org/account/avatar/00/18/80/f4/564209ea.jpg","comment_is_top":false,"comment_ctime":1619590938,"is_pvip":true,"replies":[{"id":"105275","content":"我在自己的环境里又试了一下，是可以的。<br><br>注意要打开开发者工具，观察响应头，最好每次测试时都重新打开浏览器，连续多次刷新好像是会计数不准。<br><br>另外也可以看看www目录下的nginx配置文件，把相关的参数再改一下测试。","user_name":"作者回复","comment_id":290496,"uid":"1181974","ip_address":"","utype":1,"ctime":1619593136,"user_name_real":"罗剑锋"}],"discussion_count":2,"race_medal":0,"score":"5914558234","product_id":100029001,"comment_content":"老师您好 17-1 我连续F5好多次 connection一直是keep-alive，是不是我哪里操作错了 <br>感谢老师的答复","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519217,"discussion_content":"我在自己的环境里又试了一下，是可以的。\n\n注意要打开开发者工具，观察响应头，最好每次测试时都重新打开浏览器，连续多次刷新好像是会计数不准。\n\n另外也可以看看www目录下的nginx配置文件，把相关的参数再改一下测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619593136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2267088,"avatar":"https://static001.geekbang.org/account/avatar/00/22/97/d0/95eaabef.jpg","nickname":"水手辛伯达","note":"","ucode":"94D8FD51FE4F8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374583,"discussion_content":"是不是要disable 浏览器的cache?再按F5刷新？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621256683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287677,"user_name":"Jasmine","can_delete":false,"product_type":"c1","uid":1585145,"ip_address":"","ucode":"E54999CC612A7C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuTjCibv0afd7SSdLicfNk0f7KO5ga9VMleD1hc2DtQfianK20ht06SekClKV7M8UXLRHqQLm9hJ3ow/132","comment_is_top":false,"comment_ctime":1618105651,"is_pvip":false,"replies":[{"id":"104484","content":"客户端发一个请求，在tcp层次看就是两个包，然后服务器回复，tcp层次也是两个包。<br><br>注意每一个tcp发送包后都必须有一个ack确认，不过在http层是看不到的。","user_name":"作者回复","comment_id":287677,"uid":"1181974","ip_address":"","utype":1,"ctime":1618121932,"user_name_real":"罗剑锋"}],"discussion_count":2,"race_medal":0,"score":"5913072947","product_id":100029001,"comment_content":"一次请求响应为什么是4个数据包呢？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518384,"discussion_content":"客户端发一个请求，在tcp层次看就是两个包，然后服务器回复，tcp层次也是两个包。\n\n注意每一个tcp发送包后都必须有一个ack确认，不过在http层是看不到的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618121932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1585145,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuTjCibv0afd7SSdLicfNk0f7KO5ga9VMleD1hc2DtQfianK20ht06SekClKV7M8UXLRHqQLm9hJ3ow/132","nickname":"Jasmine","note":"","ucode":"E54999CC612A7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366753,"discussion_content":"嗯，谢谢老师~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618185861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280443,"user_name":"陈文东","can_delete":false,"product_type":"c1","uid":1075453,"ip_address":"","ucode":"FCFCD46C383693","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/fd/3b65f3b2.jpg","comment_is_top":false,"comment_ctime":1614217844,"is_pvip":false,"replies":[{"id":"101811","content":"非常好的补充。","user_name":"作者回复","comment_id":280443,"uid":"1181974","ip_address":"","utype":1,"ctime":1614220613,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"5909185140","product_id":100029001,"comment_content":"作为 HTTP&#47;1.x 的连接，请求是序列化的，哪怕本来是无序的，在没有足够庞大可用的带宽时，也无从优化。一个解决方案是，浏览器为每个域名建立多个连接，以实现并发请求。曾经默认的连接数量为 2 到 3 个，现在比较常用的并发连接数已经增加到 6 条。如果尝试大于这个数字，就有触发服务器 DoS 保护的风险。<br><br>如果服务器端想要更快速的响应网站或应用程序的应答，它可以迫使客户端建立更多的连接。例如，不要在同一个域名下获取所有资源，假设有个域名是 www.example.com，我们可以把它拆分成好几个域名：www1.example.com、www2.example.com、www3.example.com。所有这些域名都指向同一台服务器，浏览器会同时为每个域名建立 6 条连接(在我们这个例子中，连接数会达到 18 条)。这一技术被称作域名分片。<br><br>----<br>以上内容应用的Mozilla 开发文档这段解释就比较清楚，对域名分片。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516099,"discussion_content":"非常好的补充。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614220613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228821,"user_name":"snake","can_delete":false,"product_type":"c1","uid":1217535,"ip_address":"","ucode":"A74B3D02B017FB","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/ff/87d8de89.jpg","comment_is_top":false,"comment_ctime":1592817511,"is_pvip":false,"replies":[{"id":"84411","content":"对，目前绝大多数http都是跑在tcp上。","user_name":"作者回复","comment_id":228821,"uid":"1181974","ip_address":"","utype":1,"ctime":1592873689,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"5887784807","product_id":100029001,"comment_content":"这里的HTTP并发连接指的是TCP连接吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499203,"discussion_content":"对，目前绝大多数http都是跑在tcp上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592873689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218523,"user_name":"firstblood","can_delete":false,"product_type":"c1","uid":1015168,"ip_address":"","ucode":"B53CC5FAECA34D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqjbwXwF3YUcSw7A8v6f0sAYzQMloOWg62aciaGfzZWibRw2jjTja1Vwh5CLVGZdseM6gSBnC1hRzEQ/132","comment_is_top":false,"comment_ctime":1589813841,"is_pvip":false,"replies":[{"id":"80784","content":"连接数是域名限定的，所以才会有域名分片。","user_name":"作者回复","comment_id":218523,"uid":"1181974","ip_address":"","utype":1,"ctime":1589845033,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"5884781137","product_id":100029001,"comment_content":"老师好，有个疑问，对于一个域名最多6-8个链接是指，无论我开多少个页面，只要是同一个域名，就是最多6-8个，还是一个页面最多6-8个？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495497,"discussion_content":"连接数是域名限定的，所以才会有域名分片。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589845033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1799719,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/76/27/aa2743e7.jpg","nickname":"小南风","note":"","ucode":"249B070497C815","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301533,"discussion_content":"更准确描述应该为： 浏览器最多允许对同一个域名Host建立6～8个TCP连接","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598548377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159588,"user_name":"周曙光爱学习","can_delete":false,"product_type":"c1","uid":1022920,"ip_address":"","ucode":"98EAB6EBAB34B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/c8/665100a3.jpg","comment_is_top":false,"comment_ctime":1575696023,"is_pvip":false,"replies":[{"id":"61057","content":"域名会映射为多个ip，但tcp建立连接只能是与一个特定的ip，所以长连接就是与这个连接保持的，ip地址的选择策略可以由客户端或者域名服务器某一方来决定。<br><br>因为这个服务器的ip地址属于这个域名，所以可以理解为与域名保持了长连接。","user_name":"作者回复","comment_id":159588,"uid":"1181974","ip_address":"","utype":1,"ctime":1575852533,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5870663319","product_id":100029001,"comment_content":"老师请教一个问题: 长连接肯定是客户端(ip:port)和某个服务器(ip:port)建立的，比如我们访问某个域名，但是这个域名背后可能有多个服务器，应该怎么理解这个这个长连接建立的双方呢？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477108,"discussion_content":"域名会映射为多个ip，但tcp建立连接只能是与一个特定的ip，所以长连接就是与这个连接保持的，ip地址的选择策略可以由客户端或者域名服务器某一方来决定。\n\n因为这个服务器的ip地址属于这个域名，所以可以理解为与域名保持了长连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575852533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157841,"user_name":"Edward_Elric","can_delete":false,"product_type":"c1","uid":1121855,"ip_address":"","ucode":"C8114E7FA19D4C","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/3f/5fc064d4.jpg","comment_is_top":false,"comment_ctime":1575269006,"is_pvip":false,"replies":[{"id":"60579","content":"9=长连接握手挥手的3+长连接三次http请求响应的6，所以浪费率是3÷9。","user_name":"作者回复","comment_id":157841,"uid":"1181974","ip_address":"","utype":1,"ctime":1575336654,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5870236302","product_id":100029001,"comment_content":"用3÷5=60%来理解 3÷9≈33% 有点解释不通，分子3个RTT是长连接的握手和挥手的损耗,分母9个RTT是假如此次是短连接会浪费9个，3&#47;9 说是长连接的浪费率不对吧、(浪费&#47;总的=浪费率）.不明白3÷9≈33% ，求老师解释，谢谢！","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476549,"discussion_content":"9=长连接握手挥手的3+长连接三次http请求响应的6，所以浪费率是3÷9。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575336654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157265,"user_name":"李鑫磊","can_delete":false,"product_type":"c1","uid":1101615,"ip_address":"","ucode":"D06517CFCEEE00","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/2f/4f89f22a.jpg","comment_is_top":false,"comment_ctime":1575100690,"is_pvip":false,"replies":[{"id":"60451","content":"意思是客户端使用http协议与服务器通信，而不是使用tcp&#47;udp等下层协议。","user_name":"作者回复","comment_id":157265,"uid":"1181974","ip_address":"","utype":1,"ctime":1575248669,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5870067986","product_id":100029001,"comment_content":"请问老师“开发基于 HTTP 协议的客户端”是什么意思？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476379,"discussion_content":"意思是客户端使用http协议与服务器通信，而不是使用tcp/udp等下层协议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575248669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122243,"user_name":"狼的诱惑","can_delete":false,"product_type":"c1","uid":1257043,"ip_address":"","ucode":"AE89DFC5963C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","comment_is_top":false,"comment_ctime":1565321646,"is_pvip":false,"replies":[{"id":"44887","content":"<br>1.通常超时时间都是服务器设置的，应该是在自定义服务里。<br><br>2.方法很多，比如使用一个定时器，当超时后检查连接，没有数据收发就关闭。<br><br>3.服务器实现长连接管理，客户端不需要关心，连接关闭客户端会收到通知。","user_name":"作者回复","comment_id":122243,"uid":"1181974","ip_address":"","utype":1,"ctime":1565322446,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5860288942","product_id":100029001,"comment_content":"老师好，请教个问题：<br>分别通过三个客户端请求同一个服务接口<br>1、启动一个自定义服务接口<br>2、浏览器发起请求，抓包后发现会有通过客户端向服务端做心跳检测机制也就是发送（keep-alive），时间间隔比较长大概是5秒以上一次<br>3、postman发起请求，抓包后发现会有通过客户端向服务端做心跳检测机制也就是发送（keep-alive），平均一秒一次，然后在60秒后，服务器主动断开了连接<br>4、RestTemplate发起请求，请求成功，链接关闭<br><br>问题<br>1、60秒是谁设置的60秒？<br>2、服务器如何实现一段时间没有消息，超时断开连接呢？<br>3、服务器默认支持长连接是谁实现的？tomcat吗？RestTemplate 又如何配合 ？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462171,"discussion_content":"\n1.通常超时时间都是服务器设置的，应该是在自定义服务里。\n\n2.方法很多，比如使用一个定时器，当超时后检查连接，没有数据收发就关闭。\n\n3.服务器实现长连接管理，客户端不需要关心，连接关闭客户端会收到通知。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565322446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122184,"user_name":"狼的诱惑","can_delete":false,"product_type":"c1","uid":1257043,"ip_address":"","ucode":"AE89DFC5963C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","comment_is_top":false,"comment_ctime":1565313676,"is_pvip":false,"replies":[{"id":"44885","content":"<br>1.长连接就是在服务器里保存连接的状态不关闭，也就是不调用close关闭，就实现了长连接，其实很简单。<br><br>2.第8讲应该是一个完整的请求响应吧，不知道有没有满足你的要求。而且这些例子都是请求响应对应的，哪里还要再讲解，可以再说清楚一点。","user_name":"作者回复","comment_id":122184,"uid":"1181974","ip_address":"","utype":1,"ctime":1565322222,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5860280972","product_id":100029001,"comment_content":"老师好，请教个问题<br>1.请求&#47;17-1返回长连接标识，我理解http是一个比较灵活的协议，是一套标准，前面老师也讲过需要请求与应答方都支持长连接才行，那么服务器是如何支持（实现）长连接的？？<br>2.一路看了这么多篇，貌似只有讲到响应后的报文格式，没有看到从请求到应答完整实现，例子都是老师提前准备好的，例子这部分会详细讲解吗？？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462137,"discussion_content":"\n1.长连接就是在服务器里保存连接的状态不关闭，也就是不调用close关闭，就实现了长连接，其实很简单。\n\n2.第8讲应该是一个完整的请求响应吧，不知道有没有满足你的要求。而且这些例子都是请求响应对应的，哪里还要再讲解，可以再说清楚一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565322222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119045,"user_name":"秋水共长天一色🌄","can_delete":false,"product_type":"c1","uid":1558942,"ip_address":"","ucode":"60ED887C419C3D","user_header":"https://static001.geekbang.org/account/avatar/00/17/c9/9e/ce7c8522.jpg","comment_is_top":false,"comment_ctime":1564493069,"is_pvip":false,"replies":[{"id":"43678","content":"客户端响应时间长有很多原因，不一定是队首阻塞。<br><br>队首阻塞导致请求被排队等待处理，和响应时间不完全是一回事。通常说的响应时间应该是建立连接后服务器返回响应报文的时间，这个就和队首阻塞无关了。<br><br>需要在客户端和服务器端都仔细度量一下，看看消耗的时间在哪里。","user_name":"作者回复","comment_id":119045,"uid":"1181974","ip_address":"","utype":1,"ctime":1564534724,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"5859460365","product_id":100029001,"comment_content":"老师你好，我有一些问题需要问问老师。<br>1.就是我们在做性能测试时有时会看到所有接口响应时间都长的情况，能否解释为这是队首堵塞现象呢？<br>2.如果上个问题为队首堵塞现象，是不是当我们看到接口多个接口返回时间普遍时间稍长时其实只是其中一个接口堵塞导致其他接口因为队首堵塞现象也变长了呢？<br>3.如果有一种性能测试场景，A脚本比B脚本中多了一个接口且其他接口均为相同，但两脚本相同的接口的响应时间有较大的差距，是否能理解为多出来的那个接口就为堵塞的源头？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460724,"discussion_content":"客户端响应时间长有很多原因，不一定是队首阻塞。\n\n队首阻塞导致请求被排队等待处理，和响应时间不完全是一回事。通常说的响应时间应该是建立连接后服务器返回响应报文的时间，这个就和队首阻塞无关了。\n\n需要在客户端和服务器端都仔细度量一下，看看消耗的时间在哪里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564534724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351933,"user_name":"小C","can_delete":false,"product_type":"c1","uid":1338334,"ip_address":"","ucode":"27C2D021A9E21E","user_header":"https://static001.geekbang.org/account/avatar/00/14/6b/de/686585ee.jpg","comment_is_top":false,"comment_ctime":1658300313,"is_pvip":true,"replies":[{"id":"127966","content":"http协议没有办法控制，全凭开发者自己来处理。","user_name":"作者回复","comment_id":351933,"uid":"1181974","ip_address":"","utype":1,"ctime":1658303748,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1658300313","product_id":100029001,"comment_content":"客户端怎么控制一次建立多少个tcp长连接？通过程序控制还是浏览器有设置页面可以设置","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580646,"discussion_content":"http协议没有办法控制，全凭开发者自己来处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658303748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351932,"user_name":"小C","can_delete":false,"product_type":"c1","uid":1338334,"ip_address":"","ucode":"27C2D021A9E21E","user_header":"https://static001.geekbang.org/account/avatar/00/14/6b/de/686585ee.jpg","comment_is_top":false,"comment_ctime":1658300195,"is_pvip":true,"replies":[{"id":"127964","content":"域名有很多用法，指向同一个服务器只是用法之一，它只是一个入口，网站在后面还可以用反向代理、负载均衡等很多措施。","user_name":"作者回复","comment_id":351932,"uid":"1181974","ip_address":"","utype":1,"ctime":1658303696,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1658300195","product_id":100029001,"comment_content":"域名分片，都指向同一个服务器，那服务器的压力并没有缓解，这个地方能解释一下吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580643,"discussion_content":"域名有很多用法，指向同一个服务器只是用法之一，它只是一个入口，网站在后面还可以用反向代理、负载均衡等很多措施。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658303696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333802,"user_name":"zyd-githuber","can_delete":false,"product_type":"c1","uid":1383520,"ip_address":"","ucode":"31466DFD25575B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIBrZt8rUzS24vibOdKH8icdxVMHLSNgRaYovGxbuEqJILacAicyLPzLgXkbhPhowibv6plHkDNDywxdA/132","comment_is_top":false,"comment_ctime":1644542685,"is_pvip":false,"replies":[{"id":"122059","content":"队头阻塞是在一个连接里才会发生，我对Ajax不是太了解，应该不会因为这个常识问题而阻塞吧。","user_name":"作者回复","comment_id":333802,"uid":"1181974","ip_address":"","utype":1,"ctime":1644756646,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1644542685","product_id":100029001,"comment_content":"关于http队头阻塞的疑惑：比如在浏览器发起ajax请求，打开页面的第1秒发了一次请求a，第2秒又发了一次请求b。但是a迟迟等不到响应结果，那么即使b在a之前提前完成服务端的处理，也需要傻傻的等待a返回以后再返回嘛？ 如果是，感觉有点颠覆我对ajax异步的认知的感觉。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550845,"discussion_content":"队头阻塞是在一个连接里才会发生，我对Ajax不是太了解，应该不会因为这个常识问题而阻塞吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644756646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332731,"user_name":"ahao","can_delete":false,"product_type":"c1","uid":2898682,"ip_address":"","ucode":"BA63BE2FD58AAB","user_header":"https://static001.geekbang.org/account/avatar/00/2c/3a/fa/31f5319d.jpg","comment_is_top":false,"comment_ctime":1643528688,"is_pvip":false,"replies":[{"id":"121658","content":"proxy可以不删除，再次转发或者改写。","user_name":"作者回复","comment_id":332731,"uid":"1181974","ip_address":"","utype":1,"ctime":1643788890,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1643528688","product_id":100029001,"comment_content":"老师，我有一点不太懂：Connection:Upgrade表示的不是hop-by-hop的header字段吗，应该在proxy那里就已经删除了Upgrade：xxx的字段，那这个版本升级信息是怎么到真实服务端的呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549263,"discussion_content":"proxy可以不删除，再次转发或者改写。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643788890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332430,"user_name":"Bumblebee","can_delete":false,"product_type":"c1","uid":2051293,"ip_address":"","ucode":"B879C8A511D08D","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","comment_is_top":false,"comment_ctime":1643248926,"is_pvip":true,"replies":[{"id":"121492","content":"这个应该是很常见的问题了，用TIME_WAIT关键字搜一下就有很多的解释文章。<br><br>简单来说就是客户端关闭连接后需要等待2msl的时间，保证socket正确关闭，不出现错误数据。","user_name":"作者回复","comment_id":332430,"uid":"1181974","ip_address":"","utype":1,"ctime":1643354113,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1643248926","product_id":100029001,"comment_content":"老师问个问题服务器上有很多tcp连接处于TIME_WAIT状态这个是什么原因导致的？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548741,"discussion_content":"这个应该是很常见的问题了，用TIME_WAIT关键字搜一下就有很多的解释文章。\n\n简单来说就是客户端关闭连接后需要等待2msl的时间，保证socket正确关闭，不出现错误数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643354113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331803,"user_name":"镜花.水月","can_delete":false,"product_type":"c1","uid":2529101,"ip_address":"","ucode":"DC86DA7BB888F3","user_header":"https://static001.geekbang.org/account/avatar/00/26/97/4d/636e5160.jpg","comment_is_top":false,"comment_ctime":1642777214,"is_pvip":true,"replies":[{"id":"121351","content":"awesome!","user_name":"作者回复","comment_id":331803,"uid":"1181974","ip_address":"","utype":1,"ctime":1643068396,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1642777214","product_id":100029001,"comment_content":"<br>TCP&#47;IP的三次握手到四次挥手结束算一次HTTP的连接<br>短连接<br> \t短连接是只每次连接都只是一次 请求-响应 。连接就断开了。短连接的缺点<br>每次HTTP每次都需要重新开始建立TCP&#47;IP的通道连接。很耗时。\t如TCP&#47;IP三次握手大概需要1个RTT(准确需要1.5) <br>四次挥手需要2个RTT<br>一次简单的HTTP请求-响应需要2个RTT.<br>这整个流程需要大概需要5个RTT.TCP&#47;IP建立连接通道占有3&#47;5.传输效率低。<br><br>长连接<br>基于短连接暴露的缺点，HTTP提出的“长连接”的通讯方式。也叫 持久连接“persistent connection”,连接保活keep alive, 连接复用（connection reuse） <br>在短连接中，一次连接一次HTTP请求-响应。长连接中，多个HTTP请求-响应中可以重复利用第一次建立的连接通道。省略了每次请求-响应都需要重新建立连接通道时间。请求头里明确要求使用长连接机制，使用的字段：Connection: keep-alive<br>解决了一个问题，一般都会引出另一个问题。长连接让客户端舒服了，却没有考虑到服务端。每次连接中多个HTTP请求-响应资源都是存储在服务器中。如果大量空闲长连接的资源占用服务器的，服务器资源将会耗尽。使得真正需要服务器而无法提供服务。<br>这是问题一。<br>长连接需要及时的断开。由于服务器端一般不会主动断开连接。由客户端发送请求含请求头字段“connection: close”服务器将会断开连接<br>像Nginx这种代理服务器，可以通过设置连接的超时时间(keepalive)和一次连接中最大请求数目(keepalive_requests)来进行关闭连接。<br>设置超时时间，如果这段时间内，没有任何数据发送则主动断开连接<br>一次连接中发送的请求数达到最大则主动关闭。<br><br>通过请求头字段：keepalive_timeout value 和 keepalive_requests value 来主动断开连接。但是约束力并不强。通讯双方可能并不会遵守。<br>老师，这是个人的不成熟观点：keepalive_timeout value 和 keepalive_requests value 来主动断开连接。但是约束力并不强。主要体现在实用性，如果真的靠这个机制来管理连接通道的断开。不好管理，对于连接通道的管理不够灵活。正式上线的项目，面对大量请求时，单一的keepalive_timeout 和keepalive_requests配置在面对并发量高和请求数量的不确定性。从数目的角度来讲很容易就达到了连接主动断开的条件。就算增大请求最大数量，但服务器应该是承受不起的。如是是时间的话。虽然指定超时内虽然并没有关闭连接。但是这段时间内，说不定连接中请求数目而并发量导致服务器无法支撑。甚至崩溃。<br>所以通过请求头字段：keepalive_timeout 和keepalive_requests来控制服务器中的连接里的请求-响应资源。感觉方案不太好。<br>如果在长连接的基础上，将连接的请求-响应数据资源存储在别处。而非服务器中，这样就减少一种占用服务器资源的因素。<br>比如中间件缓存组件(redis),但是这样又会遇到一系列关于中间件缓存组件方面的管理问题。<br>还<br>队头阻塞<br>Head-of-line Blocking ,队头阻塞，与长短连接无法，是由于HTTP的请求-响应模式所造成的。HTTP规定报文必须是“一发一收”，形成一个先进先出的“队列”。队列里面只有先来后到，没有轻重缓急的优先级。排在最前面的请求被最优先处理<br>性能优化<br>请求-响应模式不能变，所以队头阻塞也无法解决。<br>一个客户端无法满足，使用多个客户端同时进行。(域名分片)<br>HTTP客户端使用并发，但不能滥用发用，用户数 X 并发数量会一个天文数字，服务器的资源根本就扛不住，或者被服务器认为是恶意攻击，反而会造成“拒绝服务”<br>RFC2616明确限制每个客户端最多并发2两个连接。不过实践后太小了 最终提到6-8","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548160,"discussion_content":"awesome!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643068396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320793,"user_name":"明明如月","can_delete":false,"product_type":"c1","uid":2697683,"ip_address":"","ucode":"937488EEAA522E","user_header":"https://static001.geekbang.org/account/avatar/00/29/29/d3/b193a463.jpg","comment_is_top":false,"comment_ctime":1636512400,"is_pvip":false,"replies":[{"id":"116332","content":"great！","user_name":"作者回复","comment_id":320793,"uid":"1181974","ip_address":"","utype":1,"ctime":1636522464,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1636512400","product_id":100029001,"comment_content":"HTTP连接管理<br>短连接HTTP1.0<br>         定义：客户端每次发起HTTP请求时创建TCP连接（三次握手），请求完毕时关闭连接（四次挥手） 适用与只用请求一次的情况。 <br>         缺点： 1RTT&#47;(1.5RTT+1RTT+2RTT) 传输效率低，时间都用在三次握手，四次挥手了，解决方法：长连接<br><br>长连接HTTP1.1<br>        定义：客户端发起HTTP请求后，创建的TCP连接不会立即关闭，接下来的HTTP请求复用这个连接。适合有多次请求的情况。<br>        缺点：TCP连接长时间不关闭，服务器必须在内存中保存它的状态，占用服务器的资源。长连接需在恰当的时间关闭<br>        解决办法：<br>              客户端：在请求头里加上：Connection:close，告诉服务器这次请求后就关闭连接，开发客户端时可以将只需要一次HTTP请求的设置为短链接<br>              服务端:nginx中设置keepalive_timeout,如果连接空闲超过keepalive_timeout时间，则关闭该连接（客户端也可以设置)，nginx设置keepalive_requests,如果该TCP连接上发送了keepalive_requests个HTTP请求则关闭该连接<br><br>队头阻塞<br>       定义:HTTP报文是请求应答模型，一发一收，形成了一个先进先出的串行队列（TCP连接上有多个HTTP请求等着发送），如果队首的请求处理的慢，那么后面的请求也就不得不跟着请求。<br>      解决办法：<br>      并发连接：浏览器同时对一个域名发起多个长连接，那么请求可以在多个TCP连接里等待发送，一个阻塞了可以去另一个，一般浏览器对一个域名的连接数为6-8（多线程下载器可以开启8个线程下载HTTP资源，range范围请求，并发连接）<br>      域名分片：举例：浏览器对一个域名最多有6个长连接，域名分3片，则可以建立18个长连接<br>      管道pipeline：批量发送HTTP请求，批量响应，类似TCP的滑动窗口，但废弃了<br><br>解决一个问题的时候又带来新的问题<br>      短连接传输效率低--------长连接--------闲置长连接占用服务器资源-------超时关闭，设置连接上的请求数超过某值时关闭该连接","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530116,"discussion_content":"great！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636522464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320787,"user_name":"明明如月","can_delete":false,"product_type":"c1","uid":2697683,"ip_address":"","ucode":"937488EEAA522E","user_header":"https://static001.geekbang.org/account/avatar/00/29/29/d3/b193a463.jpg","comment_is_top":false,"comment_ctime":1636511117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636511117","product_id":100029001,"comment_content":"HTTP连接管理","like_count":0},{"had_liked":false,"id":318670,"user_name":"joel","can_delete":false,"product_type":"c1","uid":1550366,"ip_address":"","ucode":"46E91C3F3F1414","user_header":"https://static001.geekbang.org/account/avatar/00/17/a8/1e/4ec85e24.jpg","comment_is_top":false,"comment_ctime":1635386541,"is_pvip":true,"replies":[{"id":"115527","content":"对，就是浏览器与服务器建立的tcp连接。","user_name":"作者回复","comment_id":318670,"uid":"1181974","ip_address":"","utype":1,"ctime":1635389683,"user_name_real":"罗剑锋"}],"discussion_count":2,"race_medal":0,"score":"1635386541","product_id":100029001,"comment_content":"这里的并发连接指的是，建立多个tcp 连接吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529337,"discussion_content":"对，就是浏览器与服务器建立的tcp连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635389683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1550366,"avatar":"https://static001.geekbang.org/account/avatar/00/17/a8/1e/4ec85e24.jpg","nickname":"joel","note":"","ucode":"46E91C3F3F1414","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410699,"discussion_content":"好的，谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635760341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308145,"user_name":"Jiantao","can_delete":false,"product_type":"c1","uid":1163504,"ip_address":"","ucode":"444580EC5EF109","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/f0/1aabc056.jpg","comment_is_top":false,"comment_ctime":1629428298,"is_pvip":false,"replies":[{"id":"111609","content":"不能这么简单地做决定，性能优化需要综合考虑，会受很多其他外部条件的限制。","user_name":"作者回复","comment_id":308145,"uid":"1181974","ip_address":"","utype":1,"ctime":1629440161,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1629428298","product_id":100029001,"comment_content":"感觉要做好性能优化最好还是升级协议版本","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525407,"discussion_content":"不能这么简单地做决定，性能优化需要综合考虑，会受很多其他外部条件的限制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629440161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300038,"user_name":"Geek_1a0e29","can_delete":false,"product_type":"c1","uid":1478573,"ip_address":"","ucode":"DFFDEA3A9A23D5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKBS8Xf2qLLpEe6eXkkTr7PPK0WeyHZe7NzP8S8pUGyyfO5SkSSx9E5S4qdtcINAmdfdSXUKWusvA/132","comment_is_top":false,"comment_ctime":1624960437,"is_pvip":false,"replies":[{"id":"108808","content":"keep going","user_name":"作者回复","comment_id":300038,"uid":"1181974","ip_address":"","utype":1,"ctime":1625014163,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1624960437","product_id":100029001,"comment_content":"受益良多","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522622,"discussion_content":"keep going","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625014163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285491,"user_name":"姚凯伦","can_delete":false,"product_type":"c1","uid":1308098,"ip_address":"","ucode":"B0FC353D06E041","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/c2/4e551270.jpg","comment_is_top":false,"comment_ctime":1616839186,"is_pvip":false,"replies":[{"id":"103647","content":"http连接由客户端发起，所以当然是由客户端、也就是浏览器来决定了。","user_name":"作者回复","comment_id":285491,"uid":"1181974","ip_address":"","utype":1,"ctime":1616935651,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1616839186","product_id":100029001,"comment_content":"想问下，同个域名的并发连接是由谁控制的，是开发者控制的，还是浏览器自己决定的？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517690,"discussion_content":"http连接由客户端发起，所以当然是由客户端、也就是浏览器来决定了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616935651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284165,"user_name":"睡觉也在笑","can_delete":false,"product_type":"c1","uid":1928682,"ip_address":"","ucode":"62381E78061843","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6d/ea/2c5fcdb1.jpg","comment_is_top":false,"comment_ctime":1616106011,"is_pvip":false,"replies":[{"id":"103094","content":"keep-alive是协议的特性，与微服务无关。<br><br>我对spring不是太了解，这个要看它的资料了，是否在服务器端开启了keep-alive。如果用的是http&#47;1.1，默认就是开启的。","user_name":"作者回复","comment_id":284165,"uid":"1181974","ip_address":"","utype":1,"ctime":1616120329,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1616106011","product_id":100029001,"comment_content":"老师请问一下，对于微服务的Rest的请求Keep-alive还有效吗？Spring boot作为服务端好像有keepalive的功能，作为客户端好像没看到。这个能否给个建议？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517261,"discussion_content":"keep-alive是协议的特性，与微服务无关。\n\n我对spring不是太了解，这个要看它的资料了，是否在服务器端开启了keep-alive。如果用的是http/1.1，默认就是开启的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616120329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283089,"user_name":"刘杰","can_delete":false,"product_type":"c1","uid":2460800,"ip_address":"","ucode":"5B3A55700D6063","user_header":"https://static001.geekbang.org/account/avatar/00/25/8c/80/7310baac.jpg","comment_is_top":false,"comment_ctime":1615543371,"is_pvip":false,"replies":[{"id":"102716","content":"good","user_name":"作者回复","comment_id":283089,"uid":"1181974","ip_address":"","utype":1,"ctime":1615554473,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1615543371","product_id":100029001,"comment_content":"1、选择长连接，这样只需要进行一遍三次握手就可以多次发送请求，减少请求-响应时间<br>2、通过在nginx中配置keepalive-timeout来设置超时时间，超过某个时间则关闭该长连接；或者设置keepalive-requests来设置最大请求个数，当请求个数达到最大值时，关闭该长连接","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516931,"discussion_content":"good","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615554473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":278298,"user_name":"乘风破浪","can_delete":false,"product_type":"c1","uid":2406841,"ip_address":"","ucode":"937AF15F3FEBDC","user_header":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","comment_is_top":false,"comment_ctime":1612861087,"is_pvip":false,"replies":[{"id":"101112","content":"服务器可以返回自己的能力，比如是否支持keep-alive、gzip。客户端和服务器实际上是一个互相试探、协商的过程，可以参考各讲理对头字段的说明。","user_name":"作者回复","comment_id":278298,"uid":"1181974","ip_address":"","utype":1,"ctime":1612912591,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1612861087","product_id":100029001,"comment_content":"客户端发起的请求包含什么头字段和什么有关系？<br>假定仅和浏览器有关系，那么头字段那么多，浏览器怎么知道发送那些合适的头字段<br>假定发送的头字段是基于一套通用缺省值，那么为什么不同网站，发送的头字段会不相同<br>例如来说，对于www.baidu.com, 可以发现请求头包含Connection，而对于www.sina.com.cn，请求头不包含Connection<br>如果和服务器有关，它又是如何得知服务器的情况的？<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515340,"discussion_content":"服务器可以返回自己的能力，比如是否支持keep-alive、gzip。客户端和服务器实际上是一个互相试探、协商的过程，可以参考各讲理对头字段的说明。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612912591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256056,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1603516103,"is_pvip":false,"replies":[{"id":"93256","content":"HTTP协议要求消息的发送必须是一来一回，也就是请求-响应，这与客户端、连接都无关，必须是这样处理。<br><br>而那些库则是在HTTP的协议基础上做了封装，表面上看是异步处理的，但下面还是一样，否则就不是HTTP协议了。","user_name":"作者回复","comment_id":256056,"uid":"1181974","ip_address":"","utype":1,"ctime":1603532710,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1603516103","product_id":100029001,"comment_content":"请求响应的模式是对于整个客户端，还是对于一个连接而言?有的编程语言会提供异步的客户端类库，还有前端也有ajax请求，这些是不是违反了http协议?","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507918,"discussion_content":"HTTP协议要求消息的发送必须是一来一回，也就是请求-响应，这与客户端、连接都无关，必须是这样处理。\n\n而那些库则是在HTTP的协议基础上做了封装，表面上看是异步处理的，但下面还是一样，否则就不是HTTP协议了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603532710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249053,"user_name":"Joe","can_delete":false,"product_type":"c1","uid":1124962,"ip_address":"","ucode":"EAEC8ED7986545","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/62/52231841.jpg","comment_is_top":false,"comment_ctime":1600415641,"is_pvip":false,"replies":[{"id":"91397","content":"队头阻塞有两个层次。<br><br>一个是http层次，在单个连接上因为请求排队而阻塞。<br><br>另一个是tcp层次，因为丢包重传机制而阻塞，可以参考后面的http&#47;3。","user_name":"作者回复","comment_id":249053,"uid":"1181974","ip_address":"","utype":1,"ctime":1600435686,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1600415641","product_id":100029001,"comment_content":"老师你好，我理解的并发连接就是tcp的长连接可以同时存在多个，可以缓解http的队首阻塞问题，那么既然tcp链接可以同时执行多个，那为何还会有tcp队首阻塞的问题","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505811,"discussion_content":"队头阻塞有两个层次。\n\n一个是http层次，在单个连接上因为请求排队而阻塞。\n\n另一个是tcp层次，因为丢包重传机制而阻塞，可以参考后面的http/3。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600435686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237474,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1595840266,"is_pvip":true,"replies":[{"id":"87745","content":"rfc规定一个客户端与服务器的并发不超过6个，但这个不是强制的，主要是对浏览器这样的客户端有意义，因为成千上万的浏览器连服务器就容易把服务器挤爆。<br><br>而服务器之间就无所谓了，没有那么高的并发，开多少个连接都行。","user_name":"作者回复","comment_id":237474,"uid":"1181974","ip_address":"","utype":1,"ctime":1595842556,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1595840266","product_id":100029001,"comment_content":"老师是从浏览器发送HTTP请求给服务器的角度说并发连接的，如果RFC2616 里明确限制每个客户端最多并发 2 个连接，那怎么理解服务器发送HTTP请求给另一个服务器呢，一般一个提供REST接口的服务，连接池设置50是正常的吧，这应该表示客户端与服务端建立了50个TCP长连接？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502427,"discussion_content":"rfc规定一个客户端与服务器的并发不超过6个，但这个不是强制的，主要是对浏览器这样的客户端有意义，因为成千上万的浏览器连服务器就容易把服务器挤爆。\n\n而服务器之间就无所谓了，没有那么高的并发，开多少个连接都行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595842556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226368,"user_name":"潇潇雨歇","can_delete":false,"product_type":"c1","uid":1251429,"ip_address":"","ucode":"4BD52BF0F0A084","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","comment_is_top":false,"comment_ctime":1592050943,"is_pvip":false,"replies":[{"id":"83368","content":"对。","user_name":"作者回复","comment_id":226368,"uid":"1181974","ip_address":"","utype":1,"ctime":1592091632,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1592050943","product_id":100029001,"comment_content":"1、不需要多次请求的使用短连接，需要的话就长连接。<br>2、控制长连接的时间，让其在一定时间后断开，不然一直占用资源。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498214,"discussion_content":"对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592091632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226325,"user_name":"Maske","can_delete":false,"product_type":"c1","uid":1696847,"ip_address":"","ucode":"A19BB41A47E852","user_header":"https://static001.geekbang.org/account/avatar/00/19/e4/4f/df6d810d.jpg","comment_is_top":false,"comment_ctime":1592036027,"is_pvip":true,"replies":[{"id":"83367","content":"回答的很好。","user_name":"作者回复","comment_id":226325,"uid":"1181974","ip_address":"","utype":1,"ctime":1592091622,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"1592036027","product_id":100029001,"comment_content":"1.分场景。对于请求资源相于多而且需要在短时间内同时获取的，应该采用长连接。对于请求资源相对较少的可以采用短连接。总的来说，大多数情况还是应该采用长连接。<br>2.<br>a.在nginx配置keepalive_timeout 、keepalive_requests字段来启用长连接断开机制。<br>b.增加服务器主机数量，在nginx配置合适的负载均衡策略<br>c.使用域名分片，并将不同域名指向不同的服务器，对连接进行分流","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498194,"discussion_content":"回答的很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592091622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218742,"user_name":"Geek_b7218f","can_delete":false,"product_type":"c1","uid":1240137,"ip_address":"","ucode":"8D9AE65555B31D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/B7mKLJoo0L8GBBSlYWibkrZfyZX49NCCUxMlpJoAicuuyHRoE362ALQVicMXCS894osJ8icKibWdyIbKleicHpZicibgdA/132","comment_is_top":false,"comment_ctime":1589863551,"is_pvip":false,"replies":[{"id":"80858","content":"对，keepalive是服务器端的设置，可以看Nginx的文档。","user_name":"作者回复","comment_id":218742,"uid":"1181974","ip_address":"","utype":1,"ctime":1589869926,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1589863551","product_id":100029001,"comment_content":"NG作为反向代理是既是服务端也是客户端，keepalive -timeout 是生效服务端角色时吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495563,"discussion_content":"对，keepalive是服务器端的设置，可以看Nginx的文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589869926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209216,"user_name":"Hale","can_delete":false,"product_type":"c1","uid":1129731,"ip_address":"","ucode":"1925955343FE94","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/03/b2d9a084.jpg","comment_is_top":false,"comment_ctime":1587520776,"is_pvip":true,"replies":[{"id":"78180","content":"我又测试了一下，确实是计数到5的时候close。<br>可以看一下Nginx的配置文件，指令是keepalive_requests 5;","user_name":"作者回复","comment_id":209216,"uid":"1181974","ip_address":"","utype":1,"ctime":1587533999,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1587520776","product_id":100029001,"comment_content":"keepalive_requests 5 ? 应该是7吧，我这边显示7的时候，响应状态时Connection=close","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492740,"discussion_content":"我又测试了一下，确实是计数到5的时候close。\n可以看一下Nginx的配置文件，指令是keepalive_requests 5;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587533999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190053,"user_name":"胖子","can_delete":false,"product_type":"c1","uid":1037760,"ip_address":"","ucode":"E6371346288A87","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIuRQaZX70dsBg6khub2VPM1eQAP9IWRWxgOFed3ia4kXyNJInFRicWJ0ibf2YmLsOvJa1sGygGpmJg/132","comment_is_top":false,"comment_ctime":1584598957,"is_pvip":false,"replies":[{"id":"73146","content":"这个在tcp就是传输失败，到上面的应用层自然也就是失败了，但socket可能会返回已经收到的部分数据，不是完整的。","user_name":"作者回复","comment_id":190053,"uid":"1181974","ip_address":"","utype":1,"ctime":1584608535,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"1584598957","product_id":100029001,"comment_content":"一个http包很大被分成了多个tcp包，如果其中某个tcp包丢失（并且重传失败），那应用层会读取这个http请求吗？感觉一个http请求的多个tcp包，到达对端之后应该是要在传输层（OS内核）组装完成，才能被应用层整体读取的吧？那如果丢了其中某一个tcp包，这一整个http请求会被应用层拿到吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487874,"discussion_content":"这个在tcp就是传输失败，到上面的应用层自然也就是失败了，但socket可能会返回已经收到的部分数据，不是完整的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584608535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1037760,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIuRQaZX70dsBg6khub2VPM1eQAP9IWRWxgOFed3ia4kXyNJInFRicWJ0ibf2YmLsOvJa1sGygGpmJg/132","nickname":"胖子","note":"","ucode":"E6371346288A87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213168,"discussion_content":"感谢🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585057170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172398,"user_name":"蓝配鸡","can_delete":false,"product_type":"c1","uid":1348738,"ip_address":"","ucode":"C79A7CA8885B7C","user_header":"https://static001.geekbang.org/account/avatar/00/14/94/82/d0a417ba.jpg","comment_is_top":false,"comment_ctime":1579169159,"is_pvip":false,"replies":[{"id":"66892","content":"“约束力不强”意思是“不是所有的浏览器、客户端、服务器都会遵守”，也就是有的客户端、服务器会忽略这个字段。<br><br>因为http协议很灵活，文本格式很松散，所以很多字段即使缺少浏览器、服务器也可以尝试着去处理，或者即使存在也可以忽略。<br><br>在http&#47;1.1里唯一强制要求的就是host字段，其他都不是必须的。","user_name":"作者回复","comment_id":172398,"uid":"1181974","ip_address":"","utype":1,"ctime":1579222242,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1579169159","product_id":100029001,"comment_content":"罗老师好， 文中提到某些字段 “约束力并不强”。这里的不强是因为现有的浏览器和服务器都不理财这些字段吗？ 与之相应的另外一个问题：哪些是约束力强的字段？这些字段约束力强是因为现有的浏览器和服务器都对此字段进行了处理吗？<br><br>谢谢回答！","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481729,"discussion_content":"“约束力不强”意思是“不是所有的浏览器、客户端、服务器都会遵守”，也就是有的客户端、服务器会忽略这个字段。\n\n因为http协议很灵活，文本格式很松散，所以很多字段即使缺少浏览器、服务器也可以尝试着去处理，或者即使存在也可以忽略。\n\n在http/1.1里唯一强制要求的就是host字段，其他都不是必须的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579222242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168646,"user_name":"Wr","can_delete":false,"product_type":"c1","uid":1713790,"ip_address":"","ucode":"738B316AA2AD66","user_header":"https://static001.geekbang.org/account/avatar/00/1a/26/7e/823c083e.jpg","comment_is_top":false,"comment_ctime":1578130806,"is_pvip":false,"replies":[{"id":"65552","content":"<br>1.对于客户端来说，应当尽量用长连接，而与业务类型无关。因为客户端与服务器建立连接的成本比较“昂贵”，如果频繁建连断连就会影响效率。<br>你说的登录下单等连续操作实际上是会话保持的问题，应该使用cookie解决，而不是长连接。<br><br>2.对。","user_name":"作者回复","comment_id":168646,"uid":"1181974","ip_address":"","utype":1,"ctime":1578273361,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1578130806","product_id":100029001,"comment_content":"1. 如果处理业务单一，一般没有后续动作，使用短链接；如果像老师说的购物操作是登录-加购物车-下单等一些列连续操作，用长连接<br>2. 把握好keepalive_timeout，keepalive_requests设置；在响应中，如果能预计业务请求结束，可以携带结束标识，然后由客户端主动发出Connection: close，这种情况对特定业务处理也未尝不可吧","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480280,"discussion_content":"\n1.对于客户端来说，应当尽量用长连接，而与业务类型无关。因为客户端与服务器建立连接的成本比较“昂贵”，如果频繁建连断连就会影响效率。\n你说的登录下单等连续操作实际上是会话保持的问题，应该使用cookie解决，而不是长连接。\n\n2.对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578273361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145644,"user_name":"蓝配鸡","can_delete":false,"product_type":"c1","uid":1348738,"ip_address":"","ucode":"C79A7CA8885B7C","user_header":"https://static001.geekbang.org/account/avatar/00/14/94/82/d0a417ba.jpg","comment_is_top":false,"comment_ctime":1572336115,"is_pvip":false,"replies":[{"id":"56228","content":"是的，协议就是一种“纸面”上的约定，先说什么后说什么，说完A要回复B……需要双方遵守才能实现。<br><br>偶尔也有某一方不遵守约定，如果差的不多那另一方还可以容忍，能够继续通信，如果差的太离谱了就无法继续通信了。","user_name":"作者回复","comment_id":145644,"uid":"1181974","ip_address":"","utype":1,"ctime":1572337718,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"1572336115","product_id":100029001,"comment_content":"在开发基于 HTTP 协议的客户端时应该如何选择使用的连接模式呢？短连接还是长连接？<br>看情况，如果需要一直通信， 那么开个长连接， 如果只是偶尔一次通信，就选短链接。<br><br>应当如何降低长连接对服务器的负面影响呢？<br>设置基于时间或者次数的limit， 到了就关掉。<br><br>一直有个很蠢的疑问，希望老师解答：<br>所谓的协议是不是只是一个约定，一个很虚的东西。我们所用的这些头字段所产生的行为只是具体的浏览器和服务器遵从这些约定在代码层面做出的实现？<br>比方说如果一个HTTP请求得到一个重定向，浏览器就会自动的做一次跳转。 之类的。<br><br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472506,"discussion_content":"是的，协议就是一种“纸面”上的约定，先说什么后说什么，说完A要回复B……需要双方遵守才能实现。\n\n偶尔也有某一方不遵守约定，如果差的不多那另一方还可以容忍，能够继续通信，如果差的太离谱了就无法继续通信了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572337718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1348738,"avatar":"https://static001.geekbang.org/account/avatar/00/14/94/82/d0a417ba.jpg","nickname":"蓝配鸡","note":"","ucode":"C79A7CA8885B7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41055,"discussion_content":"哈哈， 所以我们相当于在学交规咯？ 考科目1 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572337896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140446,"user_name":"恒","can_delete":false,"product_type":"c1","uid":1225966,"ip_address":"","ucode":"68F64BF1460D8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/b4/ee/c3ff8615.jpg","comment_is_top":false,"comment_ctime":1570945460,"is_pvip":false,"replies":[{"id":"54338","content":"是的，协议就是要双方都遵守，也可以不遵守，就像红绿灯一样，总有闯灯的人。","user_name":"作者回复","comment_id":140446,"uid":"1181974","ip_address":"","utype":1,"ctime":1571015640,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1570945460","product_id":100029001,"comment_content":"不管是header里面表明的是需要长连接还是短连接，这都是通信双方的“口头协议”，落到执行层面双方可以“兑现协议”也可以反着来。不过现实中那些编程框架往往默默地帮我们正确处理了这些，所以大多数情况下我们编程都对这些无感，不去钻研都不知道有这么多门道在里面。老师，我这样理解对嘛？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470391,"discussion_content":"是的，协议就是要双方都遵守，也可以不遵守，就像红绿灯一样，总有闯灯的人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571015640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138390,"user_name":"刘志兵","can_delete":false,"product_type":"c1","uid":1441734,"ip_address":"","ucode":"A90C2FA49EDC23","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/c6/8b5cbe97.jpg","comment_is_top":false,"comment_ctime":1570194161,"is_pvip":false,"replies":[{"id":"53480","content":"http默认都是长连接，所以这样用完全没有问题。<br><br>就Nginx来说，一个“空闲连接”占据的内存是2K，1M内存大概支持500个连接，所以你可以去掉服务器其他的内存消耗来简单地计算一下。","user_name":"作者回复","comment_id":138390,"uid":"1181974","ip_address":"","utype":1,"ctime":1570497069,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1570194161","product_id":100029001,"comment_content":"老师，之前我们的集群是服务端500台机器，客户端也是500台，因为客户端的请求会打到不同的服务器上，所以要连接复用的话，实际上每台客户端都和500台服务端的机器保持一个长连接，500个Http连接好像对于一台机器来说也不是问题，想问一下老师我们这种方式合适吗，一台8G内存的机器建立多少个http连接是上限，谢谢老师","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469504,"discussion_content":"http默认都是长连接，所以这样用完全没有问题。\n\n就Nginx来说，一个“空闲连接”占据的内存是2K，1M内存大概支持500个连接，所以你可以去掉服务器其他的内存消耗来简单地计算一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570497069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136642,"user_name":"bobHan","can_delete":false,"product_type":"c1","uid":1074061,"ip_address":"","ucode":"6602798D820BD5","user_header":"https://static001.geekbang.org/account/avatar/00/10/63/8d/cdeee279.jpg","comment_is_top":false,"comment_ctime":1569486830,"is_pvip":false,"replies":[{"id":"52497","content":"tcp握手是1个rtt，挥手是2个rtt，这就是3个没有数据传输的时间，实际的数据传输是2个rtt。<br><br>一次短连接总共5个rtt，所以浪费的就是tcp握手挥手的3个，除以总共的5个。","user_name":"作者回复","comment_id":136642,"uid":"1181974","ip_address":"","utype":1,"ctime":1569547735,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"1569486830","product_id":100029001,"comment_content":"老师，您好，你上面説：浪费的时间位3÷5=60%，其中3和5，是怎么来的","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468741,"discussion_content":"tcp握手是1个rtt，挥手是2个rtt，这就是3个没有数据传输的时间，实际的数据传输是2个rtt。\n\n一次短连接总共5个rtt，所以浪费的就是tcp握手挥手的3个，除以总共的5个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569547735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1074061,"avatar":"https://static001.geekbang.org/account/avatar/00/10/63/8d/cdeee279.jpg","nickname":"bobHan","note":"","ucode":"6602798D820BD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207337,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584492627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131452,"user_name":"肥嘟嘟左卫门","can_delete":false,"product_type":"c1","uid":1358889,"ip_address":"","ucode":"BA6D8E04C6B2CE","user_header":"https://static001.geekbang.org/account/avatar/00/14/bc/29/c248bfd1.jpg","comment_is_top":false,"comment_ctime":1567757034,"is_pvip":false,"replies":[{"id":"49838","content":"http&#47;1.1默认使用长连接，也就是说隐含的会有头字段connection：keep-alive，加上当然也不算错，就是显式指定长连接了。<br><br>设置头字段其实就是在请求头的文本后面加上一行而已，没有什么特别的，因为http报文的格式就是纯文本。<br><br>浏览器可能会出于某些原因显式指定connection，这个其实我们不需要关心。","user_name":"作者回复","comment_id":131452,"uid":"1181974","ip_address":"","utype":1,"ctime":1567757760,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1567757034","product_id":100029001,"comment_content":"老师，您好，想问一个问题：文中说 1.1 版本的 http 默认使用了长连接，不需要再另外指定，然后我看了一下极客时间这个网页版的 network，在页面的请求头里有设置了 connection：keep-alive，那请问一下这个具体是要在哪里设置啊？谢谢老师。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466460,"discussion_content":"http/1.1默认使用长连接，也就是说隐含的会有头字段connection：keep-alive，加上当然也不算错，就是显式指定长连接了。\n\n设置头字段其实就是在请求头的文本后面加上一行而已，没有什么特别的，因为http报文的格式就是纯文本。\n\n浏览器可能会出于某些原因显式指定connection，这个其实我们不需要关心。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567757760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125144,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1566098738,"is_pvip":false,"replies":[{"id":"46202","content":"<br>1.自己实现当然可以开任意多个连接，像测试工具ab就是这样，开多个并发连接测试。<br><br>2.服务器可以根据客户端的ip地址进行限制，Nginx就有相应的模块。<br><br>3.客户端并发太多连接会消耗服务器的资源，大多数服务器都会限制。<br><br>4.域名分片是为了解决浏览器的限制而产生的，但还是要考虑服务器可能的限制。","user_name":"作者回复","comment_id":125144,"uid":"1181974","ip_address":"","utype":1,"ctime":1566262767,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1566098738","product_id":100029001,"comment_content":"服务端对每个客户端的连接数量没有限制吧？如果我自己实现一个http的客户端，那我可以开100个连接吗？这样只是不符合rfc规范，但是实现是没有问题的？<br><br>如果说服务器端对每个客户端的连接有限制，比如客户端发了100个连接，它是怎么识别这100个连接来自于同一个客户端呢？根据ip？貌似也不行，因为一个主机上可以开多个不同的客户端。<br><br>文中说的连接数限制是说的浏览器的限制吧，比如我们选定了一款浏览器，这个浏览器在访问一个站点时最多只开6个连接。我们在不能修改浏览器代码的情况下如果想加大连接数量，这时候就想出了域名分片这个方法，这时候同一个客户端连接到同一个服务器的连接数量就大大增加了。<br><br>如果能改浏览器代码，那么直接修改连接数量，这样也不用曲折的通过域名分片来实现了。反正服务器对连接数量没限制。<br><br>不知道以上理解对不对，望老师解答。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463452,"discussion_content":"\n1.自己实现当然可以开任意多个连接，像测试工具ab就是这样，开多个并发连接测试。\n\n2.服务器可以根据客户端的ip地址进行限制，Nginx就有相应的模块。\n\n3.客户端并发太多连接会消耗服务器的资源，大多数服务器都会限制。\n\n4.域名分片是为了解决浏览器的限制而产生的，但还是要考虑服务器可能的限制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566262767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125138,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1566097681,"is_pvip":false,"replies":[{"id":"46171","content":"服务器不会区别对待客户端的连接，服务器的端口号都是一样的（比如80），但客户端的多个连接端口号肯定是不一样的，通常是随机选择的。","user_name":"作者回复","comment_id":125138,"uid":"1181974","ip_address":"","utype":1,"ctime":1566260422,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1566097681","product_id":100029001,"comment_content":"并发连接解决队首阻塞问题，那么服务器是怎么区分这几个连接的，每个连接使用的端口号不一样吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463451,"discussion_content":"服务器不会区别对待客户端的连接，服务器的端口号都是一样的（比如80），但客户端的多个连接端口号肯定是不一样的，通常是随机选择的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566260422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124464,"user_name":"四月长安","can_delete":false,"product_type":"c1","uid":1484420,"ip_address":"","ucode":"63F905B16C9F24","user_header":"https://static001.geekbang.org/account/avatar/00/16/a6/84/92cb4db4.jpg","comment_is_top":false,"comment_ctime":1565889747,"is_pvip":false,"replies":[{"id":"45718","content":"不是的。<br><br>队头阻塞与同步异步无关，是请求处理的排队问题，如果多个请求不是排队处理，就没有队头阻塞。<br><br>异步处理解决的是I&#47;O阻塞浪费CPU的问题，为的是重复利用系统资源，提高请求的处理能力。对于单个请求，该阻塞还是会阻塞，排队的请求也一样会有队头阻塞。","user_name":"作者回复","comment_id":124464,"uid":"1181974","ip_address":"","utype":1,"ctime":1565917230,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1565889747","product_id":100029001,"comment_content":"老师您好，根据现在第一位同学的提问，我想问一下http和tcp的队首阻塞应该都是属于同步网络I&#47;O问题吧，现在是不是好多应用场景中都在用异步的请求来避免出现这种问题呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463190,"discussion_content":"不是的。\n\n队头阻塞与同步异步无关，是请求处理的排队问题，如果多个请求不是排队处理，就没有队头阻塞。\n\n异步处理解决的是I/O阻塞浪费CPU的问题，为的是重复利用系统资源，提高请求的处理能力。对于单个请求，该阻塞还是会阻塞，排队的请求也一样会有队头阻塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565917230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122577,"user_name":"季末灬离殇","can_delete":false,"product_type":"c1","uid":1454312,"ip_address":"","ucode":"A40E9146C371FA","user_header":"https://static001.geekbang.org/account/avatar/00/16/30/e8/6898e576.jpg","comment_is_top":false,"comment_ctime":1565427876,"is_pvip":false,"replies":[{"id":"45081","content":"你说的这个“Kept-Alive”是不是“Keep-Alive”，它没有no、数字这样的值，只能用timeout、max参数。<br><br>如果是非标准头就不清楚了。","user_name":"作者回复","comment_id":122577,"uid":"1181974","ip_address":"","utype":1,"ctime":1565572561,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1565427876","product_id":100029001,"comment_content":"老师你好，Charles 抓包工具中发现有的请求是 Kept-Alive 0 有的是 NO 还有的是 4，这是因为不同服务端的实现不同吗？0或者NO 是不是不支持长连接，4是最大支持4次请求吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462316,"discussion_content":"你说的这个“Kept-Alive”是不是“Keep-Alive”，它没有no、数字这样的值，只能用timeout、max参数。\n\n如果是非标准头就不清楚了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565572561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122098,"user_name":"Snowknows","can_delete":false,"product_type":"c1","uid":1253636,"ip_address":"","ucode":"CE3DE5CE159005","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/04/2a77cb61.jpg","comment_is_top":false,"comment_ctime":1565289601,"is_pvip":false,"replies":[{"id":"44865","content":"在一个线程里，短连接也是要顺序收发的，这也会形成一个队列，所以也有队头阻塞，如果是并发多连接就没有问题。","user_name":"作者回复","comment_id":122098,"uid":"1181974","ip_address":"","utype":1,"ctime":1565313802,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1565289601","product_id":100029001,"comment_content":"短连接下也会队头阻塞吗？短连接里只有一个请求。长连接时，在一个连接中的多个请求，如果前面的请求执行的慢，后面的被阻塞。但不同连接之间，互相不会阻塞。不知道理解得对不对，请老师解答下。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462099,"discussion_content":"在一个线程里，短连接也是要顺序收发的，这也会形成一个队列，所以也有队头阻塞，如果是并发多连接就没有问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565313802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122000,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1565267074,"is_pvip":false,"replies":[{"id":"44863","content":"在http协议的层次是不关心tcp包的，请求会按照先后顺序排队，所以服务器会先处理a再处理b，这就是队头阻塞。","user_name":"作者回复","comment_id":122000,"uid":"1181974","ip_address":"","utype":1,"ctime":1565313420,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1565267074","product_id":100029001,"comment_content":"老师，假设 现在有两个http请求 a和b，每个请求都是由10个tcp数据包构成的，在同一个复用的tcp连接上，a先于b发出，都发送到同一台服务器，但是在服务端 当a接收到5个tcp数据包的时候，b的10个tcp数据包已经接受完成了，这时服务端是先处理a还是b？按照您的意思是等a接受完 先处理a？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462051,"discussion_content":"在http协议的层次是不关心tcp包的，请求会按照先后顺序排队，所以服务器会先处理a再处理b，这就是队头阻塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565313420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121600,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1565165090,"is_pvip":false,"replies":[{"id":"44679","content":"在http&#47;1里请求是顺序发出顺序响应的。","user_name":"作者回复","comment_id":121600,"uid":"1181974","ip_address":"","utype":1,"ctime":1565175441,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"1565165090","product_id":100029001,"comment_content":"请问http 开启长链接设置以后，在复用的这个tcp连接上 发送的多个http，服务端接收到的多个http请求 保证有序性么？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461871,"discussion_content":"在http/1里请求是顺序发出顺序响应的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565175441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007753,"avatar":"","nickname":"suke","note":"","ucode":"C0287C31A4F45B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4170,"discussion_content":"所以，假设 现在有两个http请求 a和b，每个请求都是由10个tcp数据包构成的，在同一个复用的tcp连接上，a先于b发出，都发送到同一台服务器，但是在服务端 当a接收到5个tcp数据包的时候，b的10个tcp数据包已经接受完成了，这时服务端是先处理a还是b？按照您的意思是等a接受完 先处理a？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565182230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119804,"user_name":"秋水共长天一色🌄","can_delete":false,"product_type":"c1","uid":1558942,"ip_address":"","ucode":"60ED887C419C3D","user_header":"https://static001.geekbang.org/account/avatar/00/17/c9/9e/ce7c8522.jpg","comment_is_top":false,"comment_ctime":1564705956,"is_pvip":false,"replies":[{"id":"43971","content":"<br>队首阻塞要注意是“队首”，也就是说多个请求排队处理，因为队首慢而发生的阻塞，如果只看单个请求消耗的时间，是不需要考虑队首阻塞的。<br><br>可以用Chrome的开发者工具，timing页里有一次请求消耗时间的详细分解，比如建连、等待响应。<br><br>服务器端也可以用日志记录请求处理消耗的时间，比如Nginx里就有一些变量。<br><br>把这些指标都找出来，就好分析了。后面的“总结篇”会就这个性能优化的问题再讲一讲。<br><br>在http&#47;1里解决不了队首阻塞，但如果尽量缩减每次请求的响应时间，那么队首阻塞就能够得到缓解。","user_name":"作者回复","comment_id":119804,"uid":"1181974","ip_address":"","utype":1,"ctime":1564708066,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1564705956","product_id":100029001,"comment_content":"老师，我对于队首堵塞还有一些疑问，因为我之前问的问题里你有说过队首堵塞会导致请求被排队等待处理，但我们今晚抓包或者接口性能测试时是相当于一个客户端访问服务器的，所以我们应该是无法知道服务器当前状态是否为堵塞状态，所以响应时间应该从我们开始请求开始到完全接收到报文后结束，所以一个接口的响应时间应该是  响应时间＝堵塞时间+真正的响应时间 两个因素组成才对，有可能真正响应时间才100ms，但是堵塞的时间就要900ms，就会导致最后我们得到的响应时间为1s，到却无法判断到底是堵塞影响的响应时间还是接口的响应时间本来就长？或许说我们本就不需要去考虑这个堵塞时间的影响？那我们在做性能测试的时候堵塞情况的影响应该怎样去考虑？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461079,"discussion_content":"\n队首阻塞要注意是“队首”，也就是说多个请求排队处理，因为队首慢而发生的阻塞，如果只看单个请求消耗的时间，是不需要考虑队首阻塞的。\n\n可以用Chrome的开发者工具，timing页里有一次请求消耗时间的详细分解，比如建连、等待响应。\n\n服务器端也可以用日志记录请求处理消耗的时间，比如Nginx里就有一些变量。\n\n把这些指标都找出来，就好分析了。后面的“总结篇”会就这个性能优化的问题再讲一讲。\n\n在http/1里解决不了队首阻塞，但如果尽量缩减每次请求的响应时间，那么队首阻塞就能够得到缓解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564708066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115232,"user_name":"Aviation","can_delete":false,"product_type":"c1","uid":1140593,"ip_address":"","ucode":"38A083FD04951C","user_header":"https://static001.geekbang.org/account/avatar/00/11/67/71/ef1100c7.jpg","comment_is_top":false,"comment_ctime":1563514365,"is_pvip":false,"replies":[{"id":"42096","content":"nice","user_name":"作者回复","comment_id":115232,"uid":"1181974","ip_address":"","utype":1,"ctime":1563518061,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1563514365","product_id":100029001,"comment_content":"看不到connection-close的同学可能需要在chrome developer tools 里面禁用掉Disable cache就可以了. 对了还需要打开Preserve log<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459021,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563518061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113426,"user_name":"羁绊12221","can_delete":false,"product_type":"c1","uid":1463686,"ip_address":"","ucode":"15B47C5053388A","user_header":"https://static001.geekbang.org/account/avatar/00/16/55/86/ca7c94ce.jpg","comment_is_top":false,"comment_ctime":1563005423,"is_pvip":false,"replies":[{"id":"41317","content":"http里的短连接是服务器关闭连接，你可以修改一下实验环境的配置，禁用长连接试试。","user_name":"作者回复","comment_id":113426,"uid":"1181974","ip_address":"","utype":1,"ctime":1563010810,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1563005423","product_id":100029001,"comment_content":"老师好，请教一下，短连接模式下，一次“”请求-问答“”结束后，关闭连接是由客户端发起的吗？因为在TCP层 如果服务端发起 fin，可能会使服务端处于半连接状态(fin_wait2)，概率导致下次请求复用吧？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458216,"discussion_content":"http里的短连接是服务器关闭连接，你可以修改一下实验环境的配置，禁用长连接试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563010810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113204,"user_name":"灰色","can_delete":false,"product_type":"c1","uid":1178135,"ip_address":"","ucode":"869B400BBD520D","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/17/d0b8135f.jpg","comment_is_top":false,"comment_ctime":1562915240,"is_pvip":false,"replies":[{"id":"41229","content":"是的，但有了content-length有助于客户端更好更快地处理请求。","user_name":"作者回复","comment_id":113204,"uid":"1181974","ip_address":"","utype":1,"ctime":1562937217,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562915240","product_id":100029001,"comment_content":"根据http请求应答模式，同一个连接中，客户端发送一个请求，在收到该请求的响应前，客户端是不是不能在该连接上发送下一个请求？如果这样，小贴士中第2条，区分多个请求报文的开始和结束，就不那么困难了，因为服务端响应前应该已经完整读取请求的内容，而第二个请求是在客户端收到响应后发送的。请老师解答。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458110,"discussion_content":"是的，但有了content-length有助于客户端更好更快地处理请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562937217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113029,"user_name":"Remember","can_delete":false,"product_type":"c1","uid":1183073,"ip_address":"","ucode":"864B7A40B9B93E","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/61/c4e05dbf.jpg","comment_is_top":false,"comment_ctime":1562890116,"is_pvip":false,"replies":[{"id":"41235","content":"不完全正确，可以对比一下现实中的排队，排一个窗口和排多个窗口，能够处理更多的请求，但队头阻塞只能缓解，不能解决。","user_name":"作者回复","comment_id":113029,"uid":"1181974","ip_address":"","utype":1,"ctime":1562937732,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562890116","product_id":100029001,"comment_content":"并发连接，指客户端建立多个链接，对于服务端也是先进先出，那个快，那个先返回数据，从而解决队首阻塞问题，是这样理解的吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458023,"discussion_content":"不完全正确，可以对比一下现实中的排队，排一个窗口和排多个窗口，能够处理更多的请求，但队头阻塞只能缓解，不能解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562937732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113026,"user_name":"Remember","can_delete":false,"product_type":"c1","uid":1183073,"ip_address":"","ucode":"864B7A40B9B93E","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/61/c4e05dbf.jpg","comment_is_top":false,"comment_ctime":1562889900,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562889900","product_id":100029001,"comment_content":"并发连接是指客户端","like_count":0},{"had_liked":false,"id":112376,"user_name":"sialvsic","can_delete":false,"product_type":"c1","uid":1030096,"ip_address":"","ucode":"AAB2B5AEEB96FC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/d0/3ffc84ef.jpg","comment_is_top":false,"comment_ctime":1562725032,"is_pvip":false,"replies":[{"id":"40887","content":"为了加快下载速度，浏览器都会开多个连接，也就是并发连接，你观察到的就是这个现象。<br><br>如果有很多请求，浏览器就会在这些连接上排队发送，肯定要比只有一个连接要快。<br><br>至于打开后再关另一个，这属于浏览器自身的行为，为什么要这么做就不知道了。","user_name":"作者回复","comment_id":112376,"uid":"1181974","ip_address":"","utype":1,"ctime":1562732840,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562725032","product_id":100029001,"comment_content":"观察到在Wireshark里面的客户端每次会先发送两次连接建立的请求，如果一个成功建立了在关闭另一个。这和本节所讲的为了避免对头阻塞，客户端会发送多个请求有关系么？不是很清楚。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457705,"discussion_content":"为了加快下载速度，浏览器都会开多个连接，也就是并发连接，你观察到的就是这个现象。\n\n如果有很多请求，浏览器就会在这些连接上排队发送，肯定要比只有一个连接要快。\n\n至于打开后再关另一个，这属于浏览器自身的行为，为什么要这么做就不知道了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562732840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112347,"user_name":"tuoge","can_delete":false,"product_type":"c1","uid":1362424,"ip_address":"","ucode":"EAAC76CE873657","user_header":"","comment_is_top":false,"comment_ctime":1562722660,"is_pvip":false,"replies":[{"id":"40883","content":"理解反了，客户端开多个连接，然后把请求分发到这些连接里，服务器在这些连接上响应请求。<br><br>记着在http里是客户端主动，服务器被动。","user_name":"作者回复","comment_id":112347,"uid":"1181974","ip_address":"","utype":1,"ctime":1562732627,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562722660","product_id":100029001,"comment_content":"举手。很好奇一点，并发多个链接缓解队首阻塞，我的理解是，这个步骤客户端应该是不需要做任何事情，客户端正常发起链接，只是后面的服务器会把这些请求分发到不同链接上。这样的理解对吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457692,"discussion_content":"理解反了，客户端开多个连接，然后把请求分发到这些连接里，服务器在这些连接上响应请求。\n\n记着在http里是客户端主动，服务器被动。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562732627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111849,"user_name":"闫飞","can_delete":false,"product_type":"c1","uid":1013162,"ip_address":"","ucode":"30C782D30108D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/aa/21275b9d.jpg","comment_is_top":false,"comment_ctime":1562631232,"is_pvip":false,"replies":[{"id":"40766","content":"你说的的对，如果Nginx作为反向代理，那么它就把这些并发连接“挡”在了外面，后面的服务器不会受到冲击。<br><br>","user_name":"作者回复","comment_id":111849,"uid":"1181974","ip_address":"","utype":1,"ctime":1562677439,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562631232","product_id":100029001,"comment_content":"并发连接的方式其实是将并发控制转嫁到了服务器端，如果服务器实现本身没有很好的设计来处理这种情况(或者期望是基本的请求响应模型)，单独靠修改Nginx等反向网关的方式不能生效吧？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457469,"discussion_content":"你说的的对，如果Nginx作为反向代理，那么它就把这些并发连接“挡”在了外面，后面的服务器不会受到冲击。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562677439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111230,"user_name":"hakunamatata","can_delete":false,"product_type":"c1","uid":1053144,"ip_address":"","ucode":"D7C3A88FF90CBB","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/d8/cd2abd3f.jpg","comment_is_top":false,"comment_ctime":1562515853,"is_pvip":false,"replies":[{"id":"40541","content":"time_wait可以设置系统参数，close_wait我觉得只能写好代码了，保证及时中止连接。<br><br>网上这方面的资料很多，可以搜一下。","user_name":"作者回复","comment_id":111230,"uid":"1181974","ip_address":"","utype":1,"ctime":1562549491,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562515853","product_id":100029001,"comment_content":"请问一般服务器不会主动关闭，但是如果服务端主动关闭，被动关闭方关闭不当就会出现close_wait状态，导致句柄打开太多，目前看有项目使用httpclient使用pool方式，就出现了该问题，如何正确关闭连接呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457290,"discussion_content":"time_wait可以设置系统参数，close_wait我觉得只能写好代码了，保证及时中止连接。\n\n网上这方面的资料很多，可以搜一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562549491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111030,"user_name":"Yangjing","can_delete":false,"product_type":"c1","uid":1018061,"ip_address":"","ucode":"D88DFD4958D07C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/cd/2c3808ce.jpg","comment_is_top":false,"comment_ctime":1562425669,"is_pvip":true,"replies":[{"id":"40525","content":"一个tcp连接打开后就不关闭，在上面发送多个请求响应，不需要，看图其实比较好理解。<br><br>tcp不记录次数和时长，但服务器在外部可以记录，到次数或者时间就可以关闭。","user_name":"作者回复","comment_id":111030,"uid":"1181974","ip_address":"","utype":1,"ctime":1562548571,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562425669","product_id":100029001,"comment_content":"老师，使用长连接时，不同 http 是怎么复用相同的 tcp 的呢？套接字里好像没有记录使用的次数和时长","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457185,"discussion_content":"一个tcp连接打开后就不关闭，在上面发送多个请求响应，不需要，看图其实比较好理解。\n\ntcp不记录次数和时长，但服务器在外部可以记录，到次数或者时间就可以关闭。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562548571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110959,"user_name":"天，很蓝 ～","can_delete":false,"product_type":"c1","uid":1339242,"ip_address":"","ucode":"081D57F7CECC37","user_header":"https://static001.geekbang.org/account/avatar/00/14/6f/6a/b0d7987b.jpg","comment_is_top":false,"comment_ctime":1562403015,"is_pvip":false,"replies":[{"id":"40529","content":"比如域名分片开了三个域名，那么客户端就可以并发18个连接，这样它就可以用比一个域名多三倍的连接来收发数据，效果肯定会好一些。<br><br>虽然实际上还有可能存在阻塞，但因为并发多了，总体上会变好。<br><br>当然，这只方便了客户端，但加大了服务器的负担。","user_name":"作者回复","comment_id":110959,"uid":"1181974","ip_address":"","utype":1,"ctime":1562548795,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562403015","product_id":100029001,"comment_content":"域名分片那里表示不理解，如果多个域名指向的是同一台机器的话，就算请求过来了，还是缓解不了被阻塞的问题吧？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457142,"discussion_content":"比如域名分片开了三个域名，那么客户端就可以并发18个连接，这样它就可以用比一个域名多三倍的连接来收发数据，效果肯定会好一些。\n\n虽然实际上还有可能存在阻塞，但因为并发多了，总体上会变好。\n\n当然，这只方便了客户端，但加大了服务器的负担。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562548795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110688,"user_name":"响雨","can_delete":false,"product_type":"c1","uid":1581705,"ip_address":"","ucode":"C5FB3A3BC68F92","user_header":"https://static001.geekbang.org/account/avatar/00/18/22/89/73397ccb.jpg","comment_is_top":false,"comment_ctime":1562315132,"is_pvip":false,"replies":[{"id":"40218","content":"√","user_name":"作者回复","comment_id":110688,"uid":"1181974","ip_address":"","utype":1,"ctime":1562318969,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562315132","product_id":100029001,"comment_content":"工作开发一般是默认的长连接，keep-alive。<br>对于长连接的弊端规避方式是设置timeout和最多连接次数keepalive_requests，不符合条件的都断开长连接。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457009,"discussion_content":"√","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562318969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110558,"user_name":"威~~微冷。。。","can_delete":false,"product_type":"c1","uid":1241648,"ip_address":"","ucode":"4F338B722AA252","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/30/76cbc52f.jpg","comment_is_top":false,"comment_ctime":1562294310,"is_pvip":false,"replies":[{"id":"40192","content":"1.在一个浏览器里对同一个网站，应该是复用长连接，所以新的空白页面就会用刚才的连接收发数据。<br><br>2.换了电脑、换了浏览器，长连接当然就不存在了，它只能在当前浏览器里生效，所以就要重新建立连接。","user_name":"作者回复","comment_id":110558,"uid":"1181974","ip_address":"","utype":1,"ctime":1562302771,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562294310","product_id":100029001,"comment_content":"老师，有个疑问：比方说我在电脑A上用游览器访问服务器，这时候建立了长连接，我刷新页面用的是同一个长连接，那如果我新开一个空白页面，同样访问服务器，这时候用的连接和前边的还是同一个吗？(假设之前的连接没有关闭)，如果我是在电脑B上同样访问服务器，和之前的是同一个么？（假设访问的资源不需要鉴权）","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456942,"discussion_content":"1.在一个浏览器里对同一个网站，应该是复用长连接，所以新的空白页面就会用刚才的连接收发数据。\n\n2.换了电脑、换了浏览器，长连接当然就不存在了，它只能在当前浏览器里生效，所以就要重新建立连接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562302771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110466,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1562284234,"is_pvip":false,"replies":[{"id":"40157","content":"笑，印象深刻啊。","user_name":"作者回复","comment_id":110466,"uid":"1181974","ip_address":"","utype":1,"ctime":1562288196,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"1562284234","product_id":100029001,"comment_content":"老师这个打卡机的例子，让我想起了一个月只有三次忘记打卡补卡机会的恐惧，下次可以换个例子比如买票排队打饭之类","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456896,"discussion_content":"笑，印象深刻啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562288196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}