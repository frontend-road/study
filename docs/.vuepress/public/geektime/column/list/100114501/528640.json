{"id":528640,"title":"02｜被隔离的进程：一起来看看容器的本质","content":"<p>你好，我是Chrono。</p><p>在上一次课里，我们初步了解了容器技术，在Linux虚拟机里安装了当前最流行的容器Docker，还使用 <code>docker ps</code>、<code>docker run</code>等命令简单操作了容器。</p><p>广义上来说，容器技术是动态的容器、静态的镜像和远端的仓库这三者的组合。不过，“容器”这个术语作为容器技术里的核心概念，不仅是大多数初次接触这个领域的人，即使是一些已经有使用经验的人，想要准确地把握它们的内涵、本质都是比较困难的。</p><p>那么今天，我们就一起来看看究竟什么是容器（即狭义的、动态的容器）。</p><h2>容器到底是什么</h2><p>从字面上来看，容器就是Container，一般把它形象地比喻成现实世界里的集装箱，它也正好和Docker的现实含义相对应，因为码头工人（那只可爱的小鲸鱼）就是不停地在搬运集装箱。</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/d8/a8bf426d370b71608b6ec8645ba65cd8.jpg?wh=1018x713\" alt=\"图片\"></p><p>集装箱的作用是标准化封装各种货物，一旦打包完成之后，就可以从一个地方迁移到任意的其他地方。相比散装形式而言，集装箱隔离了箱内箱外两个世界，保持了货物的原始形态，避免了内外部相互干扰，极大地简化了商品的存储、运输、管理等工作。</p><p>再回到我们的计算机世界，容器也发挥着同样的作用，不过它封装的货物是运行中的应用程序，也就是进程，同样它也会把进程与外界隔离开，让进程与外部系统互不影响。</p><!-- [[[read_end]]] --><p>我们还是来实际操作一下吧，来看看在容器里运行的进程是个什么样子。</p><p>首先，我们使用 <code>docker pull</code> 命令，拉取一个新的镜像——操作系统Alpine：</p><pre><code class=\"language-plain\">docker pull alpine\n</code></pre><p>然后我们使用 <code>docker run</code> 命令运行它的Shell程序：</p><pre><code class=\"language-plain\">docker run -it alpine sh\n</code></pre><p><strong>注意我们在这里多加了一个 <code>-it</code> 参数</strong>，这样我们就会暂时离开当前的Ubuntu操作系统，进入容器内部。</p><p>现在，让我们执行 <code>cat /etc/os-release</code> ，还有 <code>ps</code> 这两个命令，最后再使用 <code>exit</code> 退出，看看容器里与容器外有什么不同：</p><p><img src=\"https://static001.geekbang.org/resource/image/5b/a5/5bdda43bf599d3f522cb9c0c4527e3a5.png?wh=1218x784\" alt=\"图片\"></p><p>就像这张截图里所显示的，在容器里查看系统信息，会发现已经不再是外面的Ubuntu系统了，而是变成了Alpine Linux 3.15，使用 <code>ps</code> 命令也只会看到一个完全“干净”的运行环境，除了Shell（即sh）没有其他的进程存在。</p><p>也就是说，在容器内部是一个全新的Alpine操作系统，在这里运行的应用程序完全看不到外面的Ubuntu系统，两个系统被互相“隔离”了，就像是一个“世外桃源”。</p><p>我们还可以再拉取一个Ubuntu 18.04的镜像，用同样的方式进入容器内部，然后执行 <code>apt update</code>、<code>apt install</code> 等命令来看看：</p><pre><code class=\"language-plain\">docker pull ubuntu:18.04\ndocker run -it ubuntu:18.04 sh\n\n# 下面的命令都是在容器内执行\ncat /etc/os-release\napt update\napt install -y wget redis\nredis-server &amp;\n</code></pre><p>这里我就不截图了，具体的结果留给你课下去实际操作体会。可以看到的是，容器里是另一个完整的Ubuntu 18.04 系统，我们可以在这个“世外桃源”做任意的事情，比如安装应用、运行Redis服务等。但无论我们在容器里做什么，都不会影响外面的Ubuntu系统（当然不是绝对的）。</p><p>到这里，我们就可以得到一个初步的结论：<strong>容器，就是一个特殊的隔离环境，它能够让进程只看到这个环境里的有限信息，不能对外界环境施加影响</strong>。</p><p>那么，很自然地，我们会产生另外一个问题：为什么需要创建这样的一个隔离环境，直接让进程在系统里运行不好吗？</p><h2>为什么要隔离</h2><p>相信因为这两年疫情，你对“隔离”这个词不会感觉到太陌生。为了防止疫情蔓延，我们需要建立方舱、定点医院，把患病人群控制在特定的区域内，更进一步还会实施封闭小区、关停商场等行动。虽然这些措施带来了一些不便，但都是为了整个社会更大范围的正常运转。</p><p>同样的，在计算机世界里的隔离也是出于同样的考虑，也就是<strong>系统安全</strong>。</p><p>对于Linux操作系统来说，一个不受任何限制的应用程序是十分危险的。这个进程能够看到系统里所有的文件、所有的进程、所有的网络流量，访问内存里的任何数据，那么恶意程序很容易就会把系统搞瘫痪，正常程序也可能会因为无意的Bug导致信息泄漏或者其他安全事故。虽然Linux提供了用户权限控制，能够限制进程只访问某些资源，但这个机制还是比较薄弱的，和真正的“隔离”需求相差得很远。</p><p>而现在，<strong>使用容器技术，我们就可以让应用程序运行在一个有严密防护的“沙盒”（Sandbox）环境之内</strong>，就好像是把进程请进了“隔离酒店”，它可以在这个环境里自由活动，但绝不允许“越界”，从而保证了容器外系统的安全。</p><p><img src=\"https://static001.geekbang.org/resource/image/58/c3/58e8245baaf9675e07ef695fdfb789c3.png?wh=1200x800\" alt=\"图片\" title=\"图片来自网络\"></p><p>另外，在计算机里有各种各样的资源，CPU、内存、硬盘、网卡，虽然目前的高性能服务器都是几十核CPU、上百GB的内存、数TB的硬盘、万兆网卡，但这些资源终究是有限的，而且考虑到成本，也不允许某个应用程序无限制地占用。</p><p><strong>容器技术的另一个本领就是为应用程序加上资源隔离，在系统里切分出一部分资源，让它只能使用指定的配额</strong>，比如只能使用一个CPU，只能使用1GB内存等等，就好像在隔离酒店里保证一日三餐，但想要吃山珍海味那是不行的。这样就可以避免容器内进程的过度系统消耗，充分利用计算机硬件，让有限的资源能够提供稳定可靠的服务。</p><p>所以，虽然进程被“关”在了容器里，损失了一些自由，但却保证了整个系统的安全。而且只要进程遵守隔离规定，不做什么出格的事情，也完全是可以正常运行的。</p><h2>与虚拟机的区别是什么</h2><p>你也许会说，这么看来，容器不过就是常见的“沙盒”技术中的一种，和虚拟机差不了多少，那么它与虚拟机的区别在哪里呢？又有什么样的优势呢？</p><p>在我看来，其实容器和虚拟机面对的都是相同的问题，使用的也都是虚拟化技术，只是所在的层次不同，我们可以参考Docker官网上的两张图，把这两者对比起来会更利于学习理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/b7/02/b734f7d91bda055236b3467bc16f6302.jpg?wh=1920x911\" alt=\"图片\"></p><p>（Docker官网的<a href=\"https://www.docker.com/resources/what-container\">图示</a>其实并不太准确，容器并不直接运行在Docker上，Docker只是辅助建立隔离环境，让容器基于Linux操作系统运行）</p><p>首先，容器和虚拟机的目的都是隔离资源，保证系统安全，然后是尽量提高资源的利用率。</p><p>之前在使用VirtualBox/VMware创建虚拟机的时候，你也应该看到了，它们能够在宿主机系统里完整虚拟化出一套计算机硬件，在里面还能够安装任意的操作系统，这内外两个系统也同样是完全隔离，互不干扰。</p><p>而在数据中心的服务器上，虚拟机软件（即图中的Hypervisor）同样可以把一台物理服务器虚拟成多台逻辑服务器，这些逻辑服务器彼此独立，可以按需分隔物理服务器的资源，为不同的用户所使用。</p><p>从实现的角度来看，虚拟机虚拟化出来的是硬件，需要在上面再安装一个操作系统后才能够运行应用程序，而硬件虚拟化和操作系统都比较“重”，会消耗大量的CPU、内存、硬盘等系统资源，但这些消耗其实并没有带来什么价值，属于“重复劳动”和“无用功”，不过好处就是隔离程度非常高，每个虚拟机之间可以做到完全无干扰。</p><p>我们再来看<strong>容器（即图中的Docker），它直接利用了下层的计算机硬件和操作系统</strong>，因为比虚拟机少了一层，所以自然就会节约CPU和内存，显得非常轻量级，能够更高效地利用硬件资源。不过，因为多个容器共用操作系统内核，应用程序的隔离程度就没有虚拟机那么高了。</p><p><strong>运行效率</strong>，可以说是容器相比于虚拟机最大的优势，在这个对比图中就可以看到，同样的系统资源，虚拟机只能跑3个应用，其他的资源都用来支持虚拟机运行了，而容器则能够把这部分资源释放出来，同时运行6个应用。</p><p><img src=\"https://static001.geekbang.org/resource/image/26/6d/26cb446ac5ec53abde2744c431200c6d.jpg?wh=1920x869\" alt=\"图片\"></p><p>当然，这个对比图只是一个形象的展示，不是严谨的数值比较，不过我们还可以用手里现有的VirtualBox/VMware虚拟机与Docker容器做个简单对比。</p><p>一个普通的Ubuntu虚拟机安装完成之后，体积都是GB级别的，再安装一些应用很容易就会上到10GB，启动的时间通常需要几分钟，我们的电脑上同时运行十来个虚拟机可能就是极限了。而一个Ubuntu镜像大小则只有几十MB，启动起来更是非常快，基本上不超过一秒钟，同时跑上百个容器也毫无问题。</p><p>不过，虚拟机和容器这两种技术也不是互相排斥的，它们完全可以结合起来使用，就像我们的课程里一样，用虚拟机实现与宿主机的强隔离，然后在虚拟机里使用Docker容器来快速运行应用程序。</p><h2>隔离是怎么实现的</h2><p>我们知道虚拟机使用的是Hypervisor（KVM、Xen等），那么，容器是怎么实现和下层计算机硬件和操作系统交互的呢？为什么它会具有高效轻便的隔离特性呢？</p><p>其实奥秘就在于Linux操作系统内核之中，为资源隔离提供了三种技术：<strong>namespace、cgroup、chroot</strong>，虽然这三种技术的初衷并不是为了实现容器，但它们三个结合在一起就会发生奇妙的“化学反应”。</p><p>namespace是2002年从Linux 2.4.19开始出现的，和编程语言里的namespace有点类似，它可以创建出独立的文件系统、主机名、进程号、网络等资源空间，相当于给进程盖了一间小板房，这样就实现了系统全局资源和进程局部资源的隔离。</p><p>cgroup是2008年从Linux 2.6.24开始出现的，它的全称是Linux Control Group，用来实现对进程的CPU、内存等资源的优先级和配额限制，相当于给进程的小板房加了一个天花板。</p><p>chroot的历史则要比前面的namespace、cgroup要古老得多，早在1979年的UNIX V7就已经出现了，它可以更改进程的根目录，也就是限制访问文件系统，相当于给进程的小板房铺上了地砖。</p><p>你看，综合运用这三种技术，一个四四方方、具有完善的隔离特性的容器就此出现了，进程就可以搬进这个小房间，过它的“快乐生活”了。我觉得用鲁迅先生的一句诗来描述这个情景最为恰当：<strong>躲进小楼成一统，管他冬夏与春秋</strong>。</p><h2>小结</h2><p>好了，今天我们一起学习了容器技术中最关键的概念：动态的容器，再简单小结一下课程的要点：</p><ol>\n<li>容器就是操作系统里一个特殊的“沙盒”环境，里面运行的进程只能看到受限的信息，与外部系统实现了隔离。</li>\n<li>容器隔离的目的是为了系统安全，限制了进程能够访问的各种资源。</li>\n<li>相比虚拟机技术，容器更加轻巧、更加高效，消耗的系统资源非常少，在云计算时代极具优势。</li>\n<li>容器的基本实现技术是Linux系统里的namespace、cgroup、chroot。</li>\n</ol><h2>课下作业</h2><p>最后是课下作业时间，给你留两个思考题：</p><ol>\n<li>你能够对比现实中的集装箱，说出容器技术更多的优点吗？</li>\n<li>有一种说法：容器就是轻量级的虚拟机，你认为这种说法正确吗？</li>\n</ol><p>欢迎在留言区发言参与讨论，如果你觉得有收获，也欢迎转发给身边的朋友一起学习。我们下节课见。</p><p><img src=\"https://static001.geekbang.org/resource/image/a5/b4/a575e08bb92885289d693eea40e364b4.jpg?wh=1920x2096\" alt=\"\"></p>","neighbors":{"left":{"article_title":"01｜初识容器：万事开头难","id":528619},"right":{"article_title":"03｜容器化的应用：会了这些你就是Docker高手","id":528651}},"comments":[{"had_liked":false,"id":349523,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1656040704,"is_pvip":false,"replies":[{"id":"127216","content":"这些是容器里比较深入的知识，和专栏的主题不符，暂时还没有计划，如果感兴趣的人多可以单独写加餐文章。<br><br>这方面也可以去看docker官网上的文档，讲解的也很详细。","user_name":"作者回复","comment_id":349523,"uid":"1181974","ip_address":"","utype":1,"ctime":1656042501,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"134800026880","product_id":100114501,"comment_content":"老师，以下这些内容会讲到吗？ 我之前在了解这些概念的时候云里雾里的，希望能看到老师更加形象的讲解。<br><br>1. 容器中的数据。<br>2. 使用已命名的卷永久保存数据。<br>3. 使用绑定装载。<br>4. 查看映像层。<br>5. 缓存依赖项。<br>6 .了解多阶段生成。","like_count":31,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577343,"discussion_content":"这些是容器里比较深入的知识，和专栏的主题不符，暂时还没有计划，如果感兴趣的人多可以单独写加餐文章。\n\n这方面也可以去看docker官网上的文档，讲解的也很详细。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1656042501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":577349,"discussion_content":"大家点赞起来，让老师看到加餐😁。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1656043816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":577343,"ip_address":""},"score":577349,"extra":""}]}]},{"had_liked":false,"id":351308,"user_name":"Geek_b213f7","can_delete":false,"product_type":"c1","uid":2640506,"ip_address":"","ucode":"251E9C5F8A18E3","user_header":"","comment_is_top":false,"comment_ctime":1657690220,"is_pvip":false,"replies":[{"id":"127775","content":"awesome","user_name":"作者回复","comment_id":351308,"uid":"1181974","ip_address":"","utype":1,"ctime":1657693041,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"113326839916","product_id":100114501,"comment_content":"chroot 是在 Unix 和 Linux 系统的一个操作，针对正在运作的软件行程和它的子进程，改变它外显的根目录。一个运行在这个环境下，经由 chroot 设置根目录的程序，它不能够对这个指定根目录之外的文件进行访问动作，不能读取，也不能更改它的内容。<br>首先创建一个目录rootfs<br>mkdir rootfs<br>然后在rootfs目录下新建三个文件<br>cd rootfs<br>touch a b c<br>此时执行一条命令：chroot &#47;home&#47;centos&#47;rootfs &#47;bin&#47;sh<br>这条命令意思是启动一个 sh 进程，并且把 &#47;home&#47;centos&#47;rootfs 作为 sh 进程的根目录<br>此时执行命令：&#47;bin&#47;ls &#47;<br>就可以显示a b c三个文件，说明当前进程的根目录已经变成了主机上的 &#47;home&#47;centos&#47;rootfs 目录。这样就实现了当前进程与主机的隔离<br><br>Namespace<br>Namespace 是 Linux 内核的一项功能，该功能对内核资源进行隔离，使得容器中的进程都可以在单独的命名空间中运行，并且只可以访问当前容器命名空间的资源。Namespace 可以隔离进程 ID、主机名、用户 ID、文件名、网络访问和进程间通信等相关资源。<br><br>Docker 主要用到以下五种命名空间。<br><br>pid namespace：用于隔离进程 ID。<br><br>net namespace：隔离网络接口，在虚拟的 net namespace 内用户可以拥有自己独立的 IP、路由、端口等。<br><br>mnt namespace：文件系统挂载点隔离。<br><br>ipc namespace：信号量,消息队列和共享内存的隔离。<br><br>uts namespace：主机名和域名的隔离。<br><br>Cgroups<br>Cgroups 是一种 Linux 内核功能，可以限制和隔离进程的资源使用情况（CPU、内存、磁盘 I&#47;O、网络等）。在容器的实现中，Cgroups 通常用来限制容器的 CPU 和内存等资源的使用。<br><br>联合文件系统<br>联合文件系统，又叫 UnionFS，是一种通过创建文件层进程操作的文件系统，因此，联合文件系统非常轻快。Docker 使用联合文件系统为容器提供构建层，使得容器可以实现写时复制以及镜像的分层构建和存储。常用的联合文件系统有 AUFS、Overlay 和 Devicemapper 等。","like_count":27,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579789,"discussion_content":"awesome","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657693041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349509,"user_name":"M","can_delete":false,"product_type":"c1","uid":1282556,"ip_address":"","ucode":"9E528D9BA5D1FE","user_header":"https://static001.geekbang.org/account/avatar/00/13/91/fc/c6e7726a.jpg","comment_is_top":false,"comment_ctime":1656032794,"is_pvip":false,"replies":[{"id":"127209","content":"因为这个专栏是入门，所以不会太深入介绍它们的原理，想要深入了解可以参考张磊老师的课。","user_name":"作者回复","comment_id":349509,"uid":"1181974","ip_address":"","utype":1,"ctime":1656038691,"user_name_real":"编辑"}],"discussion_count":3,"race_medal":0,"score":"18835901978","product_id":100114501,"comment_content":"没有介绍如何使用，这三个技术具体实现隔离效果吗？","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577321,"discussion_content":"因为这个专栏是入门，所以不会太深入介绍它们的原理，想要深入了解可以参考张磊老师的课。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1656038691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1282556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/91/fc/c6e7726a.jpg","nickname":"M","note":"","ucode":"9E528D9BA5D1FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577537,"discussion_content":"先学完罗老师的课入门完之后，再去学张磊老师的课。巩固知识。。。。完美","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1656167246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3178406,"avatar":"https://static001.geekbang.org/account/avatar/00/30/7f/a6/b7d7c32c.jpg","nickname":"大明","note":"","ucode":"BE13F85D14BFB1","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590696,"discussion_content":"早知道直接报张磊老师的课了，不划算","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666011537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349502,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1656002121,"is_pvip":true,"replies":[{"id":"127212","content":"容器不是虚拟机，但在隔离方面又与虚拟机很像，所以从比喻的角度来看还是可以接受的。","user_name":"作者回复","comment_id":349502,"uid":"1181974","ip_address":"","utype":1,"ctime":1656038801,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":5,"score":"18835871305","product_id":100114501,"comment_content":"认同“容器就是轻量级的虚拟机”？不<br><br>因为容器本质是一个进程，带着一组“隔离与限制”的进程，与虚拟机差的太远了。","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577325,"discussion_content":"容器不是虚拟机，但在隔离方面又与虚拟机很像，所以从比喻的角度来看还是可以接受的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656038801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349763,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1656314184,"is_pvip":false,"replies":[{"id":"127309","content":"great","user_name":"作者回复","comment_id":349763,"uid":"1181974","ip_address":"","utype":1,"ctime":1656318297,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"14541216072","product_id":100114501,"comment_content":"1:集装箱在码头装船的时候，只要我的船只是匹配集装箱标准的船，就能无缝的装载集装箱，同样容器也是一种标准，我的船（组件）符合这种标准，我就能和容器无缝链接；比如docker-compose和后面的kubernetes，我只需要实现我的容器接口来对接容器就可以了；<br>2:我觉得容器和虚拟机有着本质的区别，虚拟机是虚拟出一套软硬件系统环境，我们的应用跑在虚拟机中，可以大致看作是跑在一个独立的服务器中，而容器只是一个进程，他们存在本质上的区别；如果硬要说他们的相同点，那么只是在隔离性这个广义的角度上，他们所做的事情是类似的。","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577751,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656318297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349826,"user_name":"Andrew","can_delete":false,"product_type":"c1","uid":1856849,"ip_address":"","ucode":"B1598E1E447EC6","user_header":"https://static001.geekbang.org/account/avatar/00/1c/55/51/c7bffc64.jpg","comment_is_top":false,"comment_ctime":1656361911,"is_pvip":true,"replies":[{"id":"127333","content":"容器是运行中的进程，用的是内存，不占用硬盘，对比一下可执行文件和进程。","user_name":"作者回复","comment_id":349826,"uid":"1181974","ip_address":"","utype":1,"ctime":1656396971,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"10246296503","product_id":100114501,"comment_content":"老师，如果镜像的大小是几十MB，再基于这个镜像运行10个容器所占用的硬盘大小就是*10 ？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577865,"discussion_content":"容器是运行中的进程，用的是内存，不占用硬盘，对比一下可执行文件和进程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656396971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349504,"user_name":"星垂平野阔","can_delete":false,"product_type":"c1","uid":3010581,"ip_address":"","ucode":"036EC20979D406","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WrANpwBMr6DsGAE207QVs0YgfthMXy3MuEKJxR8icYibpGDCI1YX4DcpDq1EsTvlP8ffK1ibJDvmkX9LUU4yE8X0w/132","comment_is_top":false,"comment_ctime":1656003987,"is_pvip":true,"replies":[{"id":"127213","content":"容器只打包了系统必须的文件，不包括内核和其他很多的附件，但也有比较完整的操作系统镜像，几百M也不小。","user_name":"作者回复","comment_id":349504,"uid":"1181974","ip_address":"","utype":1,"ctime":1656038909,"user_name_real":"编辑"}],"discussion_count":4,"race_medal":0,"score":"10245938579","product_id":100114501,"comment_content":"写作业：<br>1.容器就像预备装船的成堆集装箱，能够把船舱塞得满满当当的，因为它是直接运行在主机上的进程，主机有多少资源它就能用多少资源—等价于船舱有多大它能装多大。<br>2.容器不是轻量级的虚拟机，它并不是在主机上再抽象出一层操作系统。<br><br>课后感想：<br>运用容器也有好几年了，始终觉得这套技术非常有特色，能够把G级别的操作系统用分层文件的形式压缩成几十M的一个小进程，那么对比下载的iso操作系统它到底是少了哪些部分呢？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577326,"discussion_content":"容器只打包了系统必须的文件，不包括内核和其他很多的附件，但也有比较完整的操作系统镜像，几百M也不小。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656038910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577374,"discussion_content":"什么是“G级别”呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656055652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578827,"discussion_content":"GB giga byte ，就是很大的意思呗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1657033100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":577374,"ip_address":""},"score":578827,"extra":""},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":578833,"discussion_content":"谢谢回答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657036819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":578827,"ip_address":""},"score":578833,"extra":""}]}]},{"had_liked":false,"id":360581,"user_name":"温雅小公子","can_delete":false,"product_type":"c1","uid":2260390,"ip_address":"上海","ucode":"9EA63E36D7C85C","user_header":"https://static001.geekbang.org/account/avatar/00/22/7d/a6/15798bf2.jpg","comment_is_top":false,"comment_ctime":1666670093,"is_pvip":true,"replies":[{"id":"131184","content":"当然不会了，容器里是完全隔离的环境，而且容器的文件系统是只读的，删除也不是真的删除。","user_name":"作者回复","comment_id":360581,"uid":"1181974","ip_address":"上海","utype":1,"ctime":1666678373,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":5,"score":"5961637389","product_id":100114501,"comment_content":"如果我在容器里 rm -rf&#47;*，会对外面的系统有影响吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591586,"discussion_content":"当然不会了，容器里是完全隔离的环境，而且容器的文件系统是只读的，删除也不是真的删除。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1666678374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353856,"user_name":"Geek_093b9e","can_delete":false,"product_type":"c1","uid":2439360,"ip_address":"上海","ucode":"6D9C3634F130F6","user_header":"","comment_is_top":false,"comment_ctime":1659867695,"is_pvip":true,"replies":[{"id":"128706","content":"是的，现在一般用的是pivot_root，但chroot是一个基本工作原理，用来解释docker还是很方便的。","user_name":"作者回复","comment_id":353856,"uid":"1181974","ip_address":"上海","utype":1,"ctime":1659925859,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5954834991","product_id":100114501,"comment_content":"罗老师，<br>您好， 我读了一些文章，chroot 这个系统调用应该是虚拟化技术的开端（1979年）， 后来慢慢有个更好的在内核层面的虚拟化技术，比如出现于2008年的LXC(基于namespace,  cgroup),  docker在LXC上面做了又一层封装，所以我理解当前docker底层没有用到chroot。 如有错误，请您指正。 <br>谢谢   <br>参考连接：<br> https:&#47;&#47;www.codementor.io&#47;blog&#47;docker-technology-5x1kilcbow  <br> https:&#47;&#47;blog.aquasec.com&#47;a-brief-history-of-containers-from-1970s-chroot-to-docker-2016","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583133,"discussion_content":"是的，现在一般用的是pivot_root，但chroot是一个基本工作原理，用来解释docker还是很方便的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659925859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352353,"user_name":"hiDaLao","can_delete":false,"product_type":"c1","uid":2917100,"ip_address":"","ucode":"3C2DC2A3A377E4","user_header":"https://static001.geekbang.org/account/avatar/00/2c/82/ec/99b480e8.jpg","comment_is_top":false,"comment_ctime":1658570583,"is_pvip":true,"replies":[{"id":"128180","content":"awesome","user_name":"作者回复","comment_id":352353,"uid":"1181974","ip_address":"","utype":1,"ctime":1658584901,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5953537879","product_id":100114501,"comment_content":"执行docker run -it ubuntu:18.04 sh后，在容器中执行ps，发现sh的pid为1，在宿主机上执行ps auxf | grep sh,发现是能看到容器内的这个sh进程的，但pid不同。此时在容器内执行apt update，宿主机上ps同样能看到，而且是sh的子进程。说明用户运行在容器里的应用进程，跟宿主机上的其他进程一样，都由宿主机操作系统统一管理，只不过通过namespace对这些进程做了特殊的隔离","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581190,"discussion_content":"awesome","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658584901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351108,"user_name":"Amark","can_delete":false,"product_type":"c1","uid":1121326,"ip_address":"","ucode":"E5F48633654002","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/2e/93812642.jpg","comment_is_top":false,"comment_ctime":1657529463,"is_pvip":false,"replies":[{"id":"127727","content":"其实在docker之前就有容器的概念，也有LXC技术，但突破点的出现也是需要运气的。","user_name":"作者回复","comment_id":351108,"uid":"1181974","ip_address":"","utype":1,"ctime":1657534281,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5952496759","product_id":100114501,"comment_content":"老师，有一个问题，docker 基于cgoup与namespace技术是操作系统本身就有的功能，那为啥docker在十年内才被创造出来，而不是在虚拟机之前呢，这中间还有什么技术没有成熟吗","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579577,"discussion_content":"其实在docker之前就有容器的概念，也有LXC技术，但突破点的出现也是需要运气的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657534281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2985367,"avatar":"","nickname":"Geek_36a738","note":"","ucode":"3F8529193F43BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583150,"discussion_content":"docker的创新应该是镜像了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659932761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350728,"user_name":"pythonbug","can_delete":false,"product_type":"c1","uid":1487274,"ip_address":"","ucode":"1A70CA92FFF8EB","user_header":"https://wx.qlogo.cn/mmopen/vi_32/wgMMrp1hvSB3E30KqZvMsj3KQdAI3T1uQM77LT7hZ65nVSjPGRg3AbUOyiahnssA6AIT5PAkyHFmlTBzUH9gdyQ/132","comment_is_top":false,"comment_ctime":1657120336,"is_pvip":true,"replies":[{"id":"127602","content":"有自己的思考，great","user_name":"作者回复","comment_id":350728,"uid":"1181974","ip_address":"","utype":1,"ctime":1657159661,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5952087632","product_id":100114501,"comment_content":"1、像现实中集装箱的话，我认为一个最大的特点就是适合搬运，说明容器里面装的东西迁移起来会十分方便。<br>2、我觉得轻量级虚拟机这种说法不太准确，按照那个图，容器像是共用了宿主机的底层文件系统，和虚拟机那种完全从虚拟机开始模拟还是有很大区别的，不是一回事。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579054,"discussion_content":"有自己的思考，great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657159661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349515,"user_name":"大号儿童","can_delete":false,"product_type":"c1","uid":3032111,"ip_address":"","ucode":"084A4AAF19694A","user_header":"https://static001.geekbang.org/account/avatar/00/2e/44/2f/4fe861ef.jpg","comment_is_top":false,"comment_ctime":1656037090,"is_pvip":false,"replies":[{"id":"127210","content":"great","user_name":"作者回复","comment_id":349515,"uid":"1181974","ip_address":"","utype":1,"ctime":1656038700,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5951004386","product_id":100114501,"comment_content":"1、打包方便，便于运输迁移，一次性迁移很多容器。啥都能装，能容纳的进程或其他程序比较多。<br>2、正确的，相比虚拟机能高效利用宿主机的资源，但是并不完全能隔离，可能相比于虚拟机还是有点区别","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577322,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656038700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359529,"user_name":"CoachHe","can_delete":false,"product_type":"c1","uid":2182894,"ip_address":"北京","ucode":"E9577E8B4FD1A7","user_header":"https://static001.geekbang.org/account/avatar/00/21/4e/ee/582ffaef.jpg","comment_is_top":false,"comment_ctime":1665626013,"is_pvip":false,"replies":[{"id":"130736","content":"意思是它虚拟的目标是计算机硬件，比如CPU、硬盘等等。","user_name":"作者回复","comment_id":359529,"uid":"1181974","ip_address":"北京","utype":1,"ctime":1665629341,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1665626013","product_id":100114501,"comment_content":"虚拟机虚拟化出来的是硬件 这句话怎么理解呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590221,"discussion_content":"意思是它虚拟的目标是计算机硬件，比如CPU、硬盘等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665629342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359021,"user_name":"Even","can_delete":false,"product_type":"c1","uid":1147948,"ip_address":"北京","ucode":"C3555903EE9525","user_header":"https://static001.geekbang.org/account/avatar/00/11/84/2c/1b0926b4.jpg","comment_is_top":false,"comment_ctime":1665158713,"is_pvip":true,"replies":[{"id":"130559","content":"great","user_name":"作者回复","comment_id":359021,"uid":"1181974","ip_address":"北京","utype":1,"ctime":1665197937,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1665158713","product_id":100114501,"comment_content":"1. 类比集装箱，集装箱就是为了标准化，能够在各种船舶上都放置，搬动，迁移方便，不依赖于具体宿主(船舶)。容器也是这样，跨平台，标准化，方便环境的部署，迁移。<br><br>2. 虚拟机跟容器如果只是说隔离性等，可以模糊的等于。或者说容器是更轻量化的虚拟机。都是属于不同时代下的进化产物。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589610,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665197937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357623,"user_name":"YueShi","can_delete":false,"product_type":"c1","uid":1625530,"ip_address":"北京","ucode":"8F7AFAE4641A7D","user_header":"https://static001.geekbang.org/account/avatar/00/18/cd/ba/3a348f2d.jpg","comment_is_top":false,"comment_ctime":1663497909,"is_pvip":true,"replies":[{"id":"130168","content":"nice","user_name":"作者回复","comment_id":357623,"uid":"1181974","ip_address":"北京","utype":1,"ctime":1663556860,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1663497909","product_id":100114501,"comment_content":"普通的进程 + <br>namespace（一重枷锁，能看到什么进程） + <br>cgroup（二重枷锁，能用多少资源，内存&#47;磁盘。cpu等） + <br>chroot（三重枷锁，能看到什么文件）=<br><br>特殊的进程  = 容器","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588102,"discussion_content":"nice","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663556860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353827,"user_name":"50号公路","can_delete":false,"product_type":"c1","uid":1087012,"ip_address":"北京","ucode":"E32C3AA76C8C08","user_header":"https://static001.geekbang.org/account/avatar/00/10/96/24/2d18968a.jpg","comment_is_top":false,"comment_ctime":1659842377,"is_pvip":false,"replies":[{"id":"128636","content":"great","user_name":"作者回复","comment_id":353827,"uid":"1181974","ip_address":"北京","utype":1,"ctime":1659872919,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1659842377","product_id":100114501,"comment_content":"问题1: 1. 容器能方便的弹缩容 2. 资源的隔离 3. 有效隔离保证了系统的安全<br>问题2: 简易描述没有问题，虚拟机与容器在资源隔离的实现在大相径庭，有资源有效利用和隔离程度上两者差异也较大。抛开底层实现的差异，但两者的目标有共通性。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583007,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659872920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352776,"user_name":"西门吹牛","can_delete":false,"product_type":"c1","uid":1508990,"ip_address":"","ucode":"E5D3624DDE1E83","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","comment_is_top":false,"comment_ctime":1658922295,"is_pvip":false,"replies":[{"id":"128287","content":"great","user_name":"作者回复","comment_id":352776,"uid":"1181974","ip_address":"","utype":1,"ctime":1658960495,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1658922295","product_id":100114501,"comment_content":"namespace有点像进程虚拟地址和物理地址的映射，每个进程看到的都是隔离的完整的虚拟地址空间，实际映射的是不同的物理地址，容器看到的进程空间，看是从1开始，其实还是宿主机上的某个进程","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581732,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658960495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352238,"user_name":"西门吹牛","can_delete":false,"product_type":"c1","uid":1508990,"ip_address":"","ucode":"E5D3624DDE1E83","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","comment_is_top":false,"comment_ctime":1658474265,"is_pvip":false,"replies":[{"id":"128140","content":"great","user_name":"作者回复","comment_id":352238,"uid":"1181974","ip_address":"","utype":1,"ctime":1658474775,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"1658474265","product_id":100114501,"comment_content":"容器的好处：<br>● 方便交付：开发、测试、生产用同样的镜像<br>● 弹性扩容：拉取镜像，直接 docker run 就行，没必要部署配置等繁杂流程<br>● 跨云迁移：拉取镜像，在不同的云服务直接运行","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581053,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658474775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1508990,"avatar":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","nickname":"西门吹牛","note":"","ucode":"E5D3624DDE1E83","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":581121,"discussion_content":"老师，初学云原生，有必要深入原理吗？工作也没接触过，现在这普及度怎么样？如果为了面试，是熟练的掌握使用，还是深入原理？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658531199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":581053,"ip_address":""},"score":581121,"extra":""}]}]},{"had_liked":false,"id":351420,"user_name":"cccccc","can_delete":false,"product_type":"c1","uid":1205724,"ip_address":"","ucode":"BDEFB01B75EBC1","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/dc/d0c58ce5.jpg","comment_is_top":false,"comment_ctime":1657778452,"is_pvip":true,"replies":[{"id":"127817","content":"Nginx的master进程会自动管理它的多进程架构，所以容器里运行多个Nginx进程是没关系的。<br><br>一个容器里有一个进程只是推荐，不是强制的。","user_name":"作者回复","comment_id":351420,"uid":"1181974","ip_address":"","utype":1,"ctime":1657781412,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1657778452","product_id":100114501,"comment_content":"一个容器建议只运行一个应用，而容器只是宿主机上的一个特殊进程。比如我的多个前端项目，分别都启动一个容器去运行，那和原来在宿主机启动一个nginx进程去运行，这两种方式相比，容器的方式是隔离性更好，但多开了几份nginx，会不会导致更多的进程上的切换造成性能上的损失","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579937,"discussion_content":"Nginx的master进程会自动管理它的多进程架构，所以容器里运行多个Nginx进程是没关系的。\n\n一个容器里有一个进程只是推荐，不是强制的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657781412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350891,"user_name":"笑忘日月星辰","can_delete":false,"product_type":"c1","uid":1093857,"ip_address":"","ucode":"79B6F429C78D8B","user_header":"https://static001.geekbang.org/account/avatar/00/10/b0/e1/3aeb2d2d.jpg","comment_is_top":false,"comment_ctime":1657288330,"is_pvip":true,"replies":[{"id":"127657","content":"其实不是什么大问题，云厂商跑虚拟机都已经很多年了，我们学习的话不跑大应用也没事。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1657353495,"ip_address":"","comment_id":350891,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1657288330","product_id":100114501,"comment_content":"虚拟机中运行容器，网络和存储是很大的挑战吧","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579322,"discussion_content":"其实不是什么大问题，云厂商跑虚拟机都已经很多年了，我们学习的话不跑大应用也没事。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657353496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350435,"user_name":"柳成荫","can_delete":false,"product_type":"c1","uid":2341748,"ip_address":"","ucode":"911F75C3D7AE02","user_header":"https://static001.geekbang.org/account/avatar/00/23/bb/74/edc07099.jpg","comment_is_top":false,"comment_ctime":1656914484,"is_pvip":true,"replies":[{"id":"127456","content":"great","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1656919418,"ip_address":"","comment_id":350435,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1656914484","product_id":100114501,"comment_content":"1. 容器体量比较小，方便部署和迁移，有独立的cpu、内存、文件目录，不影响宿主机<br>2. 不正确，容易只是一个进程，没有独立的操作系统","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578615,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656919418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350403,"user_name":"自由","can_delete":false,"product_type":"c1","uid":2576960,"ip_address":"","ucode":"4E3B53D29D86CA","user_header":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","comment_is_top":false,"comment_ctime":1656897204,"is_pvip":false,"replies":[{"id":"127460","content":"方便了货物的转运和存储。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1656919515,"ip_address":"","comment_id":350403,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656897204","product_id":100114501,"comment_content":"码头上的集装箱，似乎工人更方便的找到客户的“大快递”了。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578619,"discussion_content":"方便了货物的转运和存储。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1656919515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349825,"user_name":"Andrew","can_delete":false,"product_type":"c1","uid":1856849,"ip_address":"","ucode":"B1598E1E447EC6","user_header":"https://static001.geekbang.org/account/avatar/00/1c/55/51/c7bffc64.jpg","comment_is_top":false,"comment_ctime":1656361481,"is_pvip":true,"replies":[{"id":"127334","content":"容器直接使用了宿主机的内核，镜像都不包含内核，Alpine当然可以在任何docker环境里运行。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1656397067,"ip_address":"","comment_id":349825,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656361481","product_id":100114501,"comment_content":"容器的系统内核必须和宿主机的内核相同，也就是说如果直接在mac上面安装docker，就无法运行alpine镜像了是吗?","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577866,"discussion_content":"容器直接使用了宿主机的内核，镜像都不包含内核，Alpine当然可以在任何docker环境里运行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656397067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349705,"user_name":"潜光隐耀","can_delete":false,"product_type":"c1","uid":1809457,"ip_address":"","ucode":"8A2FDDEFCB1863","user_header":"https://static001.geekbang.org/account/avatar/00/1b/9c/31/e4677275.jpg","comment_is_top":false,"comment_ctime":1656238952,"is_pvip":false,"replies":[{"id":"127262","content":"开篇词里说了，是今年（2022 年）初发布的 Kubernetes 1.23.3。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1656285266,"ip_address":"","comment_id":349705,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656238952","product_id":100114501,"comment_content":"请问下，后续课程基于什么版本的k8s来讲的？会是最新的版本吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577660,"discussion_content":"开篇词里说了，是今年（2022 年）初发布的 Kubernetes 1.23.3。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1656285266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349613,"user_name":"幸运鼠","can_delete":false,"product_type":"c1","uid":1036099,"ip_address":"","ucode":"6708FCE71A6D4E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/43/45a273f1.jpg","comment_is_top":false,"comment_ctime":1656142916,"is_pvip":false,"replies":[{"id":"127234","content":"great","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1656151577,"ip_address":"","comment_id":349613,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656142916","product_id":100114501,"comment_content":"容器的其他优点包括切换起来效率较高，容器可以看做轻量级的虚拟机是没有问题的！","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577510,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656151577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349595,"user_name":"c⃰h⃰e⃰n⃰","can_delete":false,"product_type":"c1","uid":3032390,"ip_address":"","ucode":"C0A0663E479AC8","user_header":"https://static001.geekbang.org/account/avatar/00/2e/45/46/d1ea5607.jpg","comment_is_top":false,"comment_ctime":1656127810,"is_pvip":false,"replies":[{"id":"127227","content":"<br>1.是的，现在常用的有containerd、CRI-O，docker原来也是，现在被弃用了。<br><br>2.可以类比Java运行时，就是个容器的底层基础设施，有这个容器才能跑起来。<br><br>3.是的，1.24开始不再使用docker了。","user_name":"作者回复","user_name_real":"作者","uid":"1181974","ctime":1656142374,"ip_address":"","comment_id":349595,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656127810","product_id":100114501,"comment_content":"老师，容器运行时这个概念在网上查了很久，一直不知怎么理解。 <br>1）是有很多不同的容器运行时？<br>2）容器运行时是能干嘛？<br>k8s官网看到一句话“将节点上的容器运行时从 Docker Engine 改为 containerd”<br>docker Engine是容器运行时？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577488,"discussion_content":"\n1.是的，现在常用的有containerd、CRI-O，docker原来也是，现在被弃用了。\n\n2.可以类比Java运行时，就是个容器的底层基础设施，有这个容器才能跑起来。\n\n3.是的，1.24开始不再使用docker了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656142374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349581,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1656099416,"is_pvip":false,"replies":[{"id":"127228","content":"是的，都达到了隔离的效果，但容器消耗的资源更少，操作更灵活，所以就代替了虚拟机。<br><br>如果把IP层比作底层硬件，TCP和UDP的类比还是有点接近的，很好的思路。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1656142490,"ip_address":"","comment_id":349581,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656099416","product_id":100114501,"comment_content":"看完容器和虚拟机的对比，受益很大<br><br>给我感觉虚拟机算是真正做到了物理层面的隔离，毕竟硬件都划分出去了，整个操作系统也换了。<br><br>而容器给我的感觉仅仅是给操作系统上的进程加了些权限限定，比如某某进程只能访问某些文件，只能占用多少的资源，通信范围等等。这些东西仅需要逻辑成面的约束，或是软件层面的控制，不需要硬件的强制划分<br><br>从资源的利用层面来讲，虚拟机与容器可以类比网络传输中的 TCP 与 UDP","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577489,"discussion_content":"是的，都达到了隔离的效果，但容器消耗的资源更少，操作更灵活，所以就代替了虚拟机。\n\n如果把IP层比作底层硬件，TCP和UDP的类比还是有点接近的，很好的思路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656142490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349544,"user_name":"boglond","can_delete":false,"product_type":"c1","uid":1112137,"ip_address":"","ucode":"F5FA89C6AFD8DC","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/49/e292f240.jpg","comment_is_top":false,"comment_ctime":1656055692,"is_pvip":false,"replies":[{"id":"127223","content":"可以参考小贴士，用docker官方安装脚本。<br><br>搜了一下，可以试试“sudo yum install -y docker-ce”","user_name":"作者回复","user_name_real":"作者","uid":"1181974","ctime":1656060862,"ip_address":"","comment_id":349544,"utype":1}],"discussion_count":6,"race_medal":0,"score":"1656055692","product_id":100114501,"comment_content":"请教一下，yum list安装docker没有想要的版本，如何用yum的方式安装想要的版本","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577384,"discussion_content":"可以参考小贴士，用docker官方安装脚本。\n\n搜了一下，可以试试“sudo yum install -y docker-ce”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656060862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577448,"discussion_content":"执行 yum update , 如果还没有就去 dcoker 官方找下 对应的 repo 源配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656121814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112137,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/49/e292f240.jpg","nickname":"boglond","note":"","ucode":"F5FA89C6AFD8DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577389,"discussion_content":"可能我没有表达清楚，yum list是查看有哪些可用的docker 版本，安装就是yum install，具体命令如下\n查看有哪些版本\nyum list docker-ce.x86_64 --showduplicates | sort -r\n如上命令的结果中没有我要的 18.09.9版本，我现在想安装18.09.9。\n假如有19.03.13这个版本，那么会使用如下命令\nyum install -y docker-ce-19.03.13 docker-ce-cli-19.03.13 containerd.io  --allowerasing\n但是现在我想安装的是18.09.9,yum 仓库中使用 yum list 查看是没有的，如何安装。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656063599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1112137,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/49/e292f240.jpg","nickname":"boglond","note":"","ucode":"F5FA89C6AFD8DC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577433,"discussion_content":"没在意过版本，我一直用的是最新版，这方面不是很了解，sorry ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656109996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":577389,"ip_address":""},"score":577433,"extra":""},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":577463,"discussion_content":"安装docker yum 源","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656128936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":577433,"ip_address":""},"score":577463,"extra":""},{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1112137,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/49/e292f240.jpg","nickname":"boglond","note":"","ucode":"F5FA89C6AFD8DC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578828,"discussion_content":"参考这个 https://docs.docker.com/engine/install/centos/\n\n如果你想安装 18.09.9 ，可以到这里去下载你要的包 https://download.docker.com/linux/centos/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657033688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":577389,"ip_address":""},"score":578828,"extra":""}]}]}]}