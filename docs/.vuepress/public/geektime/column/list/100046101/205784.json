{"id":205784,"title":"08 | Raft算法（二）：如何复制日志？","content":"<p>你好，我是韩健。</p><p>通过上一讲的学习，你应该知道Raft除了能实现一系列值的共识之外，还能实现各节点日志的一致，不过你也许会有这样的疑惑：“什么是日志呢？它和我的业务数据有什么关系呢？”</p><p>想象一下，一个木筏（Raft）是由多根整齐一致的原木（Log）组成的，而原木又是由木质材料组成，所以你可以认为日志是由多条日志项（Log entry）组成的，如果把日志比喻成原木，那么日志项就是木质材料。</p><p>在Raft算法中，副本数据是以日志的形式存在的，领导者接收到来自客户端写请求后，处理写请求的过程就是一个复制和应用（Apply）日志项到状态机的过程。</p><p>那Raft是如何复制日志的呢？又如何实现日志的一致的呢？这些内容是Raft中非常核心的内容，也是我今天讲解的重点，我希望你不懂就问，多在留言区提出你的想法。首先，咱们先来理解日志，这是你掌握如何复制日志、实现日志一致的基础。</p><h2>如何理解日志？</h2><p>刚刚我提到，副本数据是以日志的形式存在的，日志是由日志项组成，日志项究竟是什么样子呢？</p><p>其实，日志项是一种数据格式，它主要包含用户指定的数据，也就是指令（Command），还包含一些附加信息，比如索引值（Log index）、任期编号（Term）。那你该怎么理解这些信息呢？</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/d5/6d/d5c7b0b95b4289c10c9e0817c71f036d.jpg?wh=1142*750\" alt=\"\"></p><ul>\n<li>指令：一条由客户端请求指定的、状态机需要执行的指令。你可以将指令理解成客户端指定的数据。</li>\n<li>索引值：日志项对应的整数索引值。它其实就是用来标识日志项的，是一个连续的、单调递增的整数号码。</li>\n<li>任期编号：创建这条日志项的领导者的任期编号。</li>\n</ul><p>从图中你可以看到，一届领导者任期，往往有多条日志项。而且日志项的索引值是连续的，这一点你需要注意。</p><p>讲到这儿你可能会问：不是说Raft实现了各节点间日志的一致吗？那为什么图中4个跟随者的日志都不一样呢？日志是怎么复制的呢？又该如何实现日志的一致呢？别着急，接下来咱们就来解决这几个问题。先来说说如何复制日志。</p><h2>如何复制日志？</h2><p>你可以把Raft的日志复制理解成一个优化后的二阶段提交（将二阶段优化成了一阶段），减少了一半的往返消息，也就是降低了一半的消息延迟。那日志复制的具体过程是什么呢？</p><p>首先，领导者进入第一阶段，通过日志复制（AppendEntries）RPC消息，将日志项复制到集群其他节点上。</p><p>接着，如果领导者接收到大多数的“复制成功”响应后，它将日志项应用到它的状态机，并返回成功给客户端。如果领导者没有接收到大多数的“复制成功”响应，那么就返回错误给客户端。</p><p>学到这里，有同学可能有这样的疑问了，领导者将日志项应用到它的状态机，怎么没通知跟随者应用日志项呢？</p><p>这是Raft中的一个优化，领导者不直接发送消息通知其他节点应用指定日志项。因为领导者的日志复制RPC消息或心跳消息，包含了当前最大的，将会被提交（Commit）的日志项索引值。所以通过日志复制RPC消息或心跳消息，跟随者就可以知道领导者的日志提交位置信息。</p><p>因此，当其他节点接受领导者的心跳消息，或者新的日志复制RPC消息后，就会将这条日志项应用到它的状态机。而这个优化，降低了处理客户端请求的延迟，将二阶段提交优化为了一段提交，降低了一半的消息延迟。</p><p>为了帮你理解，我画了一张过程图，然后再带你走一遍这个过程，这样你可以更加全面地掌握日志复制。</p><p><img src=\"https://static001.geekbang.org/resource/image/b8/29/b863dc8546a78c272c965d6e05afde29.jpg?wh=1142*475\" alt=\"\"></p><ol>\n<li>\n<p>接收到客户端请求后，领导者基于客户端请求中的指令，创建一个新日志项，并附加到本地日志中。</p>\n</li>\n<li>\n<p>领导者通过日志复制RPC，将新的日志项复制到其他的服务器。</p>\n</li>\n<li>\n<p>当领导者将日志项，成功复制到大多数的服务器上的时候，领导者会将这条日志项应用到它的状态机中。</p>\n</li>\n<li>\n<p>领导者将执行的结果返回给客户端。</p>\n</li>\n<li>\n<p>当跟随者接收到心跳信息，或者新的日志复制RPC消息后，如果跟随者发现领导者已经提交了某条日志项，而它还没应用，那么跟随者就将这条日志项应用到本地的状态机中。</p>\n</li>\n</ol><p>不过，这是一个理想状态下的日志复制过程。在实际环境中，复制日志的时候，你可能会遇到进程崩溃、服务器宕机等问题，这些问题会导致日志不一致。那么在这种情况下，Raft算法是如何处理不一致日志，实现日志的一致的呢？</p><h2>如何实现日志的一致？</h2><p>在Raft算法中，领导者通过强制跟随者直接复制自己的日志项，处理不一致日志。也就是说，Raft是通过以领导者的日志为准，来实现各节点日志的一致的。具体有2个步骤。</p><ul>\n<li>首先，领导者通过日志复制RPC的一致性检查，找到跟随者节点上，与自己相同日志项的最大索引值。也就是说，这个索引值之前的日志，领导者和跟随者是一致的，之后的日志是不一致的了。</li>\n<li>然后，领导者强制跟随者更新覆盖的不一致日志项，实现日志的一致。</li>\n</ul><p>我带你详细地走一遍这个过程（为了方便演示，我们引入2个新变量）。</p><ul>\n<li>PrevLogEntry：表示当前要复制的日志项，前面一条日志项的索引值。比如在图中，如果领导者将索引值为8的日志项发送给跟随者，那么此时PrevLogEntry值为7。</li>\n<li>PrevLogTerm：表示当前要复制的日志项，前面一条日志项的任期编号，比如在图中，如果领导者将索引值为8的日志项发送给跟随者，那么此时PrevLogTerm值为4。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/e5/f4/e5b5a644c5a0878d26bc4a4a0448c3f4.jpg?wh=1142*1072\" alt=\"\"></p><ol>\n<li>\n<p>领导者通过日志复制RPC消息，发送当前最新日志项到跟随者（为了演示方便，假设当前需要复制的日志项是最新的），这个消息的PrevLogEntry值为7，PrevLogTerm值为4。</p>\n</li>\n<li>\n<p>如果跟随者在它的日志中，找不到与PrevLogEntry值为7、PrevLogTerm值为4的日志项，也就是说它的日志和领导者的不一致了，那么跟随者就会拒绝接收新的日志项，并返回失败信息给领导者。</p>\n</li>\n<li>\n<p>这时，领导者会递减要复制的日志项的索引值，并发送新的日志项到跟随者，这个消息的PrevLogEntry值为6，PrevLogTerm值为3。</p>\n</li>\n<li>\n<p>如果跟随者在它的日志中，找到了PrevLogEntry值为6、PrevLogTerm值为3的日志项，那么日志复制RPC返回成功，这样一来，领导者就知道在PrevLogEntry值为6、PrevLogTerm值为3的位置，跟随者的日志项与自己相同。</p>\n</li>\n<li>\n<p>领导者通过日志复制RPC，复制并更新覆盖该索引值之后的日志项（也就是不一致的日志项），最终实现了集群各节点日志的一致。</p>\n</li>\n</ol><p>从上面步骤中你可以看到，领导者通过日志复制RPC一致性检查，找到跟随者节点上与自己相同日志项的最大索引值，然后复制并更新覆盖该索引值之后的日志项，实现了各节点日志的一致。需要你注意的是，跟随者中的不一致日志项会被领导者的日志覆盖，而且领导者从来不会覆盖或者删除自己的日志。</p><h2>内容小结</h2><p>本节课我主要带你了解了在Raft中什么是日志、如何复制日志、以及如何处理不一致日志等内容。我希望你明确这样几个重点。</p><ul>\n<li>\n<p>在Raft中，副本数据是以日志的形式存在的，其中日志项中的指令表示用户指定的数据。</p>\n</li>\n<li>\n<p>兰伯特的Multi-Paxos不要求日志是连续的，但在Raft中日志必须是连续的。而且在Raft中，日志不仅是数据的载体，日志的完整性还影响领导者选举的结果。也就是说，日志完整性最高的节点才能当选领导者。</p>\n</li>\n<li>\n<p>Raft是通过以领导者的日志为准，来实现日志的一致的。</p>\n</li>\n</ul><p>学完本节课你可以看到，值的共识和日志的一致都是由领导者决定的，领导者的唯一性很重要，那么如果我们需要对集群进行扩容或缩容，比如将3节点集群扩容为5节点集群，这时候是可能同时出现两个领导者的。这是为什么呢？在Raft中，又是如何解决这个问题的呢？我会在下一讲带你了解。</p><h2>课堂思考</h2><p>我提到，领导者接收到大多数的“复制成功”响应后，就会将日志应用到它自己的状态机，然后返回“成功”响应客户端。如果此时有个节点不在“大多数”中，也就是说它接收日志项失败，那么在这种情况下，Raft会如何处理实现日志的一致呢？欢迎在留言区分享你的看法，与我一同讨论。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":187326,"user_name":"花家舍","can_delete":false,"product_type":"c1","uid":1691556,"ip_address":"","ucode":"7881B32FF11779","user_header":"https://static001.geekbang.org/account/avatar/00/19/cf/a4/e810c266.jpg","comment_is_top":true,"comment_ctime":1584083892,"is_pvip":false,"replies":[{"id":"72305","content":"这个资源好，推荐","user_name":"编辑回复","user_name_real":"郭蕾","uid":"1000473","ctime":1584087498,"ip_address":"","comment_id":187326,"utype":2}],"discussion_count":7,"race_medal":0,"score":"9.2233723433814999e+18","product_id":100046101,"comment_content":"http:&#47;&#47;thesecretlivesofdata.com&#47;raft&#47;<br>动画演示  比文章牛逼多了","like_count":72,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487075,"discussion_content":"这个资源好，推荐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584087498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2049877,"avatar":"","nickname":"Geek_1d1fbc","note":"","ucode":"7D4BFC17B9E800","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292372,"discussion_content":"讲的不够深入，都是些大路边上的知识","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1595207520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028940,"avatar":"","nickname":"Geek6561","note":"","ucode":"D44141D4AD2587","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327772,"discussion_content":"动画没包含细节，比如日志的连续性要求","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605943888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1403926,"avatar":"https://static001.geekbang.org/account/avatar/00/15/6c/16/1ab3a06e.jpg","nickname":"克罗地亚狂想曲","note":"","ucode":"79CBA38A2F15D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323744,"discussion_content":"这个动画不错","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604990208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2055809,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","nickname":"码小呆","note":"","ucode":"44532D6ABF9340","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570044,"discussion_content":"牛逼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651646283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363671,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","nickname":"不负青春不负己🤘","note":"","ucode":"A6DD8E8B20EA6E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381920,"discussion_content":"我觉得不错，动画演示","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625296289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179298,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/a2/5252a278.jpg","nickname":"对方正在输入。。。","note":"","ucode":"7B0DEB4D9B43D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379127,"discussion_content":"没看出比文章牛逼到哪儿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623717868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186542,"user_name":"Mars","can_delete":false,"product_type":"c1","uid":1088584,"ip_address":"","ucode":"D7BAA9EBB7D89C","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/48/44965714.jpg","comment_is_top":false,"comment_ctime":1583862407,"is_pvip":false,"replies":[{"id":"77778","content":"加一颗星:)，领导者选举能保证新领导者一定包含这条committed的日志项，但这条日志项在新领导者上处于未提交状态，这时新领导者，会尝试从最新日志项开始，向其他节点复制日志，如果，某条uncommitted的日志项，被发现已经成功复制到大多数节点上，这时这条日志项将处于提交状态，并被应用到状态机，通知其他节点提交这条日志。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587322352,"ip_address":"","comment_id":186542,"utype":1}],"discussion_count":21,"race_medal":0,"score":"190562423431","product_id":100046101,"comment_content":"老师，我有个问题，在那个复制日志的五个过程里，如果第四步执行返回结果成功了，leader突然挂了，此时leader 的状态机已经更新，follower状态机没有更新，此时新选举出来的leader怎么处理这个流程来保证上一个leader的状态机更新apply到其他节点上了呢？","like_count":45,"discussions":[{"author":{"id":1856845,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/55/4d/2b2834a9.jpg","nickname":"郭行知","note":"","ucode":"082C7E34FE6847","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211693,"discussion_content":"接着楼上 @王兵 的评论，补充一下前置条件。这条未应用的日志为啥会出现新的 leader 中？这是因为选举领导者有一个规则是优先选择日志最完整的候选者，经过第 3 步，已经有大多数跟随者复制了最新的日志，新的领导者必然从这些跟随者选举出来，从而保证新领导者有最近的日志，然后由新领导者来继续完成日志应用的工作","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1584880466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1856845,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/55/4d/2b2834a9.jpg","nickname":"郭行知","note":"","ucode":"082C7E34FE6847","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342811,"discussion_content":"最完整的日志是从已提交的日志中选的吧 不包括未提交的日志吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610844961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211693,"ip_address":""},"score":342811,"extra":""},{"author":{"id":1296635,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c8/fb/1e282c37.jpg","nickname":"Jungggle","note":"","ucode":"CEF098BDED51BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349879,"discussion_content":"你根本就不知道日志提没提交","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613614482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":342811,"ip_address":""},"score":349879,"extra":""},{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1296635,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c8/fb/1e282c37.jpg","nickname":"Jungggle","note":"","ucode":"CEF098BDED51BB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389396,"discussion_content":"为啥不知道呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629261705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349879,"ip_address":""},"score":389396,"extra":""}]},{"author":{"id":1125656,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2d/18/918eaecf.jpg","nickname":"后端进阶","note":"","ucode":"480F48F5378307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220898,"discussion_content":"感谢@郭泽聪 同学的解答，现在明白了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585928394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486794,"discussion_content":"加一颗星:)，领导者选举能保证新领导者一定包含这条committed的日志项，但这条日志项在新领导者上处于未提交状态，这时新领导者，会尝试从最新日志项开始，向其他节点复制日志，如果，某条uncommitted的日志项，被发现已经成功复制到大多数节点上，这时这条日志项将处于提交状态，并被应用到状态机，通知其他节点提交这条日志。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587322352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1922583,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELVtQAW8IIDLKcn36XM9noEfKuAKpJQrwruJzXeibDfmibIiawicj5vaoflct0LuTAiaKcmCY3gK9MknEw/132","nickname":"远方","note":"","ucode":"0E2FCC59EDCAD4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"discussion":{"id":580311,"discussion_content":"存在客户端收到失败结果，但是实际执行成功了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658077710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":486794,"ip_address":""},"score":580311,"extra":""}]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342813,"discussion_content":"请问下，如果一共有5个节点A B C D E，其中主节点A发给followers节点一个logA日志，在收到B C D节点响应后本地提交了日志，并且回复了客户端成功，但是在新的心跳rpc发往followers之前挂了（相当于B C D上的logA是没有提交的），这时节点E当选了新的leader是有可能把logA覆盖掉的，这时怎么办呢？因为logA已经成功响应给客户端了，却后来又被覆盖掉了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610845315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1116344,"avatar":"https://static001.geekbang.org/account/avatar/00/11/08/b8/ac8a778e.jpg","nickname":"我得儿意的笑","note":"","ucode":"752E66C6AA96E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343418,"discussion_content":"我理解 BCDE进行选举，因为E的日志完整性不够高，所以不会被选举为leader。假如真的被选举为了leader,根据强领导原则会把BCD的logA给覆盖掉。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1611039475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":342813,"ip_address":""},"score":343418,"extra":""}]},{"author":{"id":1108904,"avatar":"https://static001.geekbang.org/account/avatar/00/10/eb/a8/b014a457.jpg","nickname":"leo","note":"","ucode":"8DEC9D61AEEEDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283218,"discussion_content":"继上，新的问题: 假设有A\nB C D E五个节点，A B C成功复制了最新的日志项，leader节点A提交了，B C未提交，这时leader节点A挂了，选举出新leader节点B，这时候只能发现2个节点具备某条uncommitted的日志项，不满足大多数，这条uncommitted的日志项还能应用到新的leader中？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592212256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1849703,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/39/67/2477b20e.jpg","nickname":"瑞哥","note":"","ucode":"3AE6DCDAE5844F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1108904,"avatar":"https://static001.geekbang.org/account/avatar/00/10/eb/a8/b014a457.jpg","nickname":"leo","note":"","ucode":"8DEC9D61AEEEDA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304252,"discussion_content":"ABC成功复制代表已经有这个日志项了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599530127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":283218,"ip_address":""},"score":304252,"extra":""},{"author":{"id":2028940,"avatar":"","nickname":"Geek6561","note":"","ucode":"D44141D4AD2587","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1108904,"avatar":"https://static001.geekbang.org/account/avatar/00/10/eb/a8/b014a457.jpg","nickname":"leo","note":"","ucode":"8DEC9D61AEEEDA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327779,"discussion_content":"A节点应该算一个，虽然它挂了，但是作为前任leader，数据是从它那来的，它肯定有，2:3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605945673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":283218,"ip_address":""},"score":327779,"extra":""}]},{"author":{"id":1074569,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/89/e2ceca70.jpg","nickname":"方块睡衣","note":"","ucode":"1D355D7FEE5F8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278846,"discussion_content":"如果这条 新选举出来的uncommitted的日志项，发现没有被成功复制到大部分节点，这条uncommitted的日志项领导节点如何处理？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591242168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1292669,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaaDFHiag4sFcO7JUn028Mtk1YvFpibIibLzcTE7Qak0icJklMpqh7k5dSK27dibicMuNgYMozgaibeYppA/132","nickname":"Bball","note":"","ucode":"E483CAFE50CB99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1074569,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/89/e2ceca70.jpg","nickname":"方块睡衣","note":"","ucode":"1D355D7FEE5F8C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548330,"discussion_content":"如果没有复制到大部分节点，就压根选举不到他作为领导者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643126743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":278846,"ip_address":""},"score":548330,"extra":""}]},{"author":{"id":1743447,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHnnNRhRvtictcpvDrFn7XC1NRFQTz2j6mnntR03eRyibqFVS8DrNCy7EDuaAM6wLn8hAUs7Hcvibbg/132","nickname":"hao","note":"","ucode":"1491E144AEC93F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218358,"discussion_content":"如果只复制了少数节点，master就挂了呢，新的master会在这几个少数节点产生吗，然后会应用这一条日志？感觉很多地方都没讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585652091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1609530,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/l4nngwyggBGqeMXC0micwO8bM1hSttgQXa1Y5frJSqWa8NibDhia5icwPcHM5wOpV3hfsf0UicDY0ypFqnQ3iarG0T1w/132","nickname":"Trident","note":"","ucode":"53E6788CF33398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1743447,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHnnNRhRvtictcpvDrFn7XC1NRFQTz2j6mnntR03eRyibqFVS8DrNCy7EDuaAM6wLn8hAUs7Hcvibbg/132","nickname":"hao","note":"","ucode":"1491E144AEC93F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270475,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590020205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218358,"ip_address":""},"score":270475,"extra":""},{"author":{"id":2095550,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/f9/be/6c3a1b6c.jpg","nickname":"小郑","note":"","ucode":"F52BDD1BD35FF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1743447,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHnnNRhRvtictcpvDrFn7XC1NRFQTz2j6mnntR03eRyibqFVS8DrNCy7EDuaAM6wLn8hAUs7Hcvibbg/132","nickname":"hao","note":"","ucode":"1491E144AEC93F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295175,"discussion_content":"加入logA只复制了少数follower，然后leader就挂了。也就是说该条日志没有被commit，那么这几个接收到logA的节点比起其他的节点没有任何选举上的优势，leader不是一定在他们之中产生。leader的一个必要条件是拥有所有的commit日志，这和是否拥有logA无关。接着说，如果是拥有logA的几个节点之一成为了leader，那么很幸运，根据领导人只追加原则，logA会被新领导人尝试提交给现任期的follower。如果是其他不持有logA的节点当选，那么所有现存的logA会在下次新leader发送app消息时被认为是异端而清除掉。这两种结果对于客户端来说都是可以接受的，因为客户端在你说的“master挂了”的情况下，并不能确定该请求时成功还是失败，换言之它对结果没有任何预期。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1596109549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218358,"ip_address":""},"score":295175,"extra":""},{"author":{"id":1849703,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/39/67/2477b20e.jpg","nickname":"瑞哥","note":"","ucode":"3AE6DCDAE5844F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2095550,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/f9/be/6c3a1b6c.jpg","nickname":"小郑","note":"","ucode":"F52BDD1BD35FF8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304254,"discussion_content":"注意未提交的日志项应用的前提是发现这个日志项在其它大部分节点已经存在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599530326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295175,"ip_address":""},"score":304254,"extra":""}]},{"author":{"id":1117741,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/2d/d64a45b5.jpg","nickname":"王兵","note":"","ucode":"AB0CD991527237","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209578,"discussion_content":"这条未应用的日志会在新的leader中应用，因为新的leader不会覆盖这条未应用的日志。这样，其他节点在收到新的leader的新日志时，也会更这应用这条日志。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584639068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310798,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","nickname":"吴小智","note":"","ucode":"C7C9F58B5C9F7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":208388,"discussion_content":"是啊，很关键，老师在文章里应该说明的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584543030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183461,"user_name":"Scott","can_delete":false,"product_type":"c1","uid":1014800,"ip_address":"","ucode":"7E57FDCB5E5D49","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg","comment_is_top":false,"comment_ctime":1583045822,"is_pvip":false,"replies":[{"id":"77620","content":"加一颗星:)，合法的，如果操作具有冥等性，比如“set x = 1”，就没关系，不影响结果，而且最后日志会去重压缩处理的，如果操作不具有冥等性，需要实现客户端协议，确保只提交一次。关于客户端协议，我后面会做补充。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587232126,"ip_address":"","comment_id":183461,"utype":1}],"discussion_count":32,"race_medal":0,"score":"134727031998","product_id":100046101,"comment_content":"我有一个问题，考虑下面这种情况，假设集群有1 leader 多 follower<br>1. leader发出一条set x = 1，index为最新的appendEntries到所有的follower<br>2. 只有一台follower响应了，所以leader对client返回fail<br>3. 这时leader挂了，剩余机器重新进行选举，因为前面那台follower有最新的uncommited的日志，所以它会被选举为leader<br><br>这时就会有一个不一致，外部client认为set x = 1没有成功，但是实际上x = 1是成功的，这种情况合法吗？","like_count":32,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485694,"discussion_content":"加一颗星:)，合法的，如果操作具有冥等性，比如“set x = 1”，就没关系，不影响结果，而且最后日志会去重压缩处理的，如果操作不具有冥等性，需要实现客户端协议，确保只提交一次。关于客户端协议，我后面会做补充。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587232126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1512642,"avatar":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","nickname":"侧耳倾听","note":"","ucode":"5BF2A2440B54F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":231949,"discussion_content":"leader挂了，follower没有收到leader的下一次心跳或者日志复制，虽然写到了日志里但是并没有应用到状态机，实际leader取本地值返回给客户端应该是从状态机取得，不应该从日志中取得，日志的作用仅仅是为了记录日志项的状态，同步各节点日志数据，没有更新到状态机的数据就认为丢失了，没有更新成功","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1586840566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1784256,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/39/c0/9c465545.jpg","nickname":"wchb","note":"","ucode":"49D94DFC61E9DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195897,"discussion_content":"“Uncommitted log，但未复制到大多数据节点上的log，是可能会被覆盖丢弃，也可能被最终commit和apply，到底是哪种结果，取决于哪个节点当选领导者，如果持有uncommited log的节点当选领导者，那么，log将被commit和apply，如果非持有uncommitted log的节点当选领导者，那么，log将被覆盖丢弃。”","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583320817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":1118488,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","nickname":"HuaMax","note":"","ucode":"2E78DE1AF098AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1784256,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/39/c0/9c465545.jpg","nickname":"wchb","note":"","ucode":"49D94DFC61E9DD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197863,"discussion_content":"我理解你的这段话，上面这种情况是合法的，对吗？如果是不合法的，我想了解一下是如何处理这段uncommitted log的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583454519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":195897,"ip_address":""},"score":197863,"extra":""},{"author":{"id":1784256,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/39/c0/9c465545.jpg","nickname":"wchb","note":"","ucode":"49D94DFC61E9DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1118488,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","nickname":"HuaMax","note":"","ucode":"2E78DE1AF098AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":198097,"discussion_content":"我的理解， 如果持有uncommited log的节点当选领导者，则会将uncommited log同步到所有的节点，并自动提交。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583470976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":197863,"ip_address":""},"score":198097,"extra":""},{"author":{"id":1133945,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/79/803537db.jpg","nickname":"慢动作","note":"","ucode":"62C944F4A4D8AC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1784256,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/39/c0/9c465545.jpg","nickname":"wchb","note":"","ucode":"49D94DFC61E9DD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":198156,"discussion_content":"看了下raft论文，按我理解也是这个结论。是不是这种情况几乎不可能出现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583482285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":198097,"ip_address":""},"score":198156,"extra":""}]},{"author":{"id":2192248,"avatar":"","nickname":"Geek_9e9d2a","note":"","ucode":"12938E83F56B01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375947,"discussion_content":"这时follow的日志是未提交日志，是在不稳定日志里。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621902899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133945,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/79/803537db.jpg","nickname":"慢动作","note":"","ucode":"62C944F4A4D8AC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277530,"discussion_content":"看到etcd下有个问题和这个疑问类似，是说如果leader只收到一个应答，说明集群已经宕机，客户端得到的应该是超时吧？https://github.com/etcd-io/etcd/issues/9148","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591066443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206476,"discussion_content":"我觉得两点\n1:含有未提交日志的follower的随机超时慢，没有选举成为leader，那么未提交日志应该会丢弃\n2:含有未提交日志的follower成为主，他通过心跳同步的是已经提交到状态机的日志，而未提交的日志应该不会同步给其他节点\n结论：这条操作最终还是会丢弃的，与client收到的结果一致","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584407975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1489957,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","nickname":"tt","note":"","ucode":"7753B79AD5A9AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218366,"discussion_content":"同意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585652965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":206476,"ip_address":""},"score":218366,"extra":""},{"author":{"id":1120777,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLjKpYPqFABEtcwIfp2F2Wrvp5tJJydd4ReoBauiazJ1kw8h8FPQAAZyu05AG9UFdtzHAKpIs0QVIA/132","nickname":"colin","note":"","ucode":"3B848197126A84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284435,"discussion_content":"针对第2点； 成为新主后，未提交的日志不会丢弃，新主会将未提交的日志再次发起prapare操作，拿到多数派后同意后提交；","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1592531808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":206476,"ip_address":""},"score":284435,"extra":""},{"author":{"id":2095550,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/f9/be/6c3a1b6c.jpg","nickname":"小郑","note":"","ucode":"F52BDD1BD35FF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295171,"discussion_content":"2点有误，raft有一个“领导人只追加”原则，也就是leader保证不会丢弃自己所持有的一切log，不论是否commit。也就是说，这条log会在下次appEntsMsg发送时被提交给其他的follower，达成隐式提交。raft论文中也说明了，leader不会单独提交以前leader任期遗留下来的log，而是会把这种操作隐式加载在当前任期log的提交过程中。除此之外，对于客户端来说，它接受到的应该是一个timeout消息，此时它不应该对上一个set请求的结果做任何预期，请求成功或者失败这两种情况都是可以接受的。如果请求是幂等的，例如set，那么它可以重新发送请求。","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1596108971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":206476,"ip_address":""},"score":295171,"extra":""}]},{"author":{"id":1009801,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/89/173601c5.jpg","nickname":"bc","note":"","ucode":"3899698EA715EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202266,"discussion_content":"你说的这个场景属于一个第三态问题，对于客户端来说，，一模一样的请求要有唯一的id来标识，client会重试，最终也能达成，而server也需要记录已处理过的序号，再收到一模一样的请求，直接返回结果即可。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583890200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1489957,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","nickname":"tt","note":"","ucode":"7753B79AD5A9AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009801,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/68/89/173601c5.jpg","nickname":"bc","note":"","ucode":"3899698EA715EC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218365,"discussion_content":"同意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585652947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":202266,"ip_address":""},"score":218365,"extra":""},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1489957,"avatar":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","nickname":"tt","note":"","ucode":"7753B79AD5A9AC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334338,"discussion_content":"你谁都同意...","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1607826850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218365,"ip_address":""},"score":334338,"extra":""}]},{"author":{"id":1212902,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","nickname":"旅途","note":"","ucode":"5022477E8E9441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200922,"discussion_content":"要是按你的意思那就是 client是通过日志判断是否指令完成了? 当领导者执行完之后 就会返回已完成吧,日志的作用只是帮助选举 个人理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583740963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1118488,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","nickname":"HuaMax","note":"","ucode":"2E78DE1AF098AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194126,"discussion_content":"我的理解，索引值高代表日志更完整，节点更健壮，更应该被推举为leader，但未提交的日志不能作为有效的指令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583194728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1014800,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg","nickname":"Scott","note":"","ucode":"7E57FDCB5E5D49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1118488,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","nickname":"HuaMax","note":"","ucode":"2E78DE1AF098AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194473,"discussion_content":"有道理，说得通","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583223321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":194126,"ip_address":""},"score":194473,"extra":""},{"author":{"id":1118488,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","nickname":"HuaMax","note":"","ucode":"2E78DE1AF098AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133945,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/79/803537db.jpg","nickname":"慢动作","note":"","ucode":"62C944F4A4D8AC","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":197870,"discussion_content":"嗯是的，所以新leader这段uncommitted log要不要同步给其他follower呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583454716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":197821,"ip_address":""},"score":197870,"extra":""},{"author":{"id":1684311,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","nickname":"姜川","note":"","ucode":"0F8A349623EAB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1118488,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","nickname":"HuaMax","note":"","ucode":"2E78DE1AF098AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206478,"discussion_content":"肯定不会的，文中有句话，心跳日志含有最新提交到状态机的数据信息，这条没有提交到状态机，所以肯定不会同步给其他节点","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584408065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":197870,"ip_address":""},"score":206478,"extra":""}]},{"author":{"id":1784256,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/39/c0/9c465545.jpg","nickname":"wchb","note":"","ucode":"49D94DFC61E9DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193010,"discussion_content":"同疑问…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182904,"user_name":"葉月喵","can_delete":false,"product_type":"c1","uid":1850238,"ip_address":"","ucode":"210B5ADA314E58","user_header":"https://static001.geekbang.org/account/avatar/00/1c/3b/7e/9b68d804.jpg","comment_is_top":false,"comment_ctime":1582886848,"is_pvip":false,"replies":[{"id":"70753","content":"复制的，uncommited的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582922516,"ip_address":"","comment_id":182904,"utype":1}],"discussion_count":2,"race_medal":0,"score":"83187265472","product_id":100046101,"comment_content":"上一章跟随者投票时会比较日志索引号大小，用的是已提交的日志，还是已经复制的日志？","like_count":20,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485498,"discussion_content":"复制的，uncommited的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582922516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179952,"avatar":"https://static001.geekbang.org/account/avatar/00/12/01/30/cb3a729e.jpg","nickname":"XHH","note":"","ucode":"3EF89099982977","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190260,"discussion_content":"应该是uncommitted的日志","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582910911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188285,"user_name":"阿kai(aeo","can_delete":false,"product_type":"c1","uid":1147682,"ip_address":"","ucode":"6B1D650D9BFA4C","user_header":"https://static001.geekbang.org/account/avatar/00/11/83/22/c3dae274.jpg","comment_is_top":false,"comment_ctime":1584335788,"is_pvip":false,"replies":[{"id":"77284","content":"加一颗星:)，这是个工程实现层面的优化方式:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586972628,"ip_address":"","comment_id":188285,"utype":1}],"discussion_count":4,"race_medal":0,"score":"53123943340","product_id":100046101,"comment_content":"感觉处理日志一致性问题的时候非常不efficient，如果follower落后得多了，那么来回的RPC大部分都是failure，很耗时间和带宽。follower是否可以直接返回它拥有的最新index，然后leader根据那个index开始看是否match自己的日志，如果match就直接一次性把剩余日志都给follower发过去。这样会有效率一些吧？","like_count":13,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487368,"discussion_content":"加一颗星:)，这是个工程实现层面的优化方式:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586972628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1629094,"avatar":"https://static001.geekbang.org/account/avatar/00/18/db/a6/60bf0220.jpg","nickname":"背道而驰","note":"","ucode":"953CFFE377E176","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211709,"discussion_content":"我觉得改为leader从follower主动拉取 最新index 可能会好一些 如你所说  因为 大部分情况下  leader领先于follower  ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584882871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1849703,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/39/67/2477b20e.jpg","nickname":"瑞哥","note":"","ucode":"3AE6DCDAE5844F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1629094,"avatar":"https://static001.geekbang.org/account/avatar/00/18/db/a6/60bf0220.jpg","nickname":"背道而驰","note":"","ucode":"953CFFE377E176","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":304259,"discussion_content":"主动拉取leader不清楚跟随者是否跌机吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599530927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211709,"ip_address":""},"score":304259,"extra":""}]},{"author":{"id":1355000,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ac/f8/a56b7475.jpg","nickname":"燃烧的M豆","note":"","ucode":"BEDA9FC8852F5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230448,"discussion_content":"如果有好个节点落后太多 这种方法可能一下就崩了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586745508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182972,"user_name":"XHH","can_delete":false,"product_type":"c1","uid":1179952,"ip_address":"","ucode":"3EF89099982977","user_header":"https://static001.geekbang.org/account/avatar/00/12/01/30/cb3a729e.jpg","comment_is_top":false,"comment_ctime":1582900671,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"44532573631","product_id":100046101,"comment_content":"提供一个Raft算法动态演示教程，很清晰： http:&#47;&#47;thesecretlivesofdata.com&#47;raft&#47;","like_count":10,"discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":192059,"discussion_content":"这个动画有个地方和老师讲解的是不一样的，老师讲的当领导者提交日志后是没有在通知跟随者的，而是等下次RPC通信，链接展示的动图通知了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583060266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109041,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ec/31/644fc4cd.jpg","nickname":"有课学","note":"","ucode":"9A8D5E9B9FDA62","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266498,"discussion_content":"大佬们都是怎么找到这些动画图的，真棒，给你加颗星星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589523139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1012159,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/71/bf/2d29cad9.jpg","nickname":"DWZ","note":"","ucode":"46D18B457ACEF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":198205,"discussion_content":"太赞了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583487550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248826,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1600326242,"is_pvip":true,"replies":[{"id":"91814","content":"加一颗星:)，因为存在跟随者日志和领导者日志不一致的情况，这时领导者就不能只同步跟随者缺失的日志项，而是要先做日志一致性检查，如果日志项不一致，领导者要同步并覆盖掉跟随者节点上已存在但不一致的日志项。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1601301463,"ip_address":"","comment_id":248826,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31665097314","product_id":100046101,"comment_content":"为什么跟随者不直接告诉领导者我从哪里缺日志，而让领导者一个一个去尝试？","like_count":7,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505754,"discussion_content":"加一颗星:)，因为存在跟随者日志和领导者日志不一致的情况，这时领导者就不能只同步跟随者缺失的日志项，而是要先做日志一致性检查，如果日志项不一致，领导者要同步并覆盖掉跟随者节点上已存在但不一致的日志项。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601301463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334349,"discussion_content":"可能follower和leader在某个节点上的日志开始出现了分歧，向2个分支发展一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607828690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190116,"user_name":"DZ","can_delete":false,"product_type":"c1","uid":1047376,"ip_address":"","ucode":"58BF0042E31449","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/50/04071be6.jpg","comment_is_top":false,"comment_ctime":1584604164,"is_pvip":true,"replies":[{"id":"77634","content":"加一颗星:)，此时日志项仍处于未提交状态，领导者需要继续重试，按顺序复制日志项，只有当日志项被成功复制到大多数节点时，该日志项处于提交状态，然后被应用到状态机。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587239279,"ip_address":"","comment_id":190116,"utype":1}],"discussion_count":5,"race_medal":0,"score":"31649375236","product_id":100046101,"comment_content":"老师，请教下如果在指定时间内没有收到大部分follower复制成功响应，只收到少数，那么领导者如何处理这次提交？是直接不做任何处理，由心跳或者下次提交重新对齐日志？还是有重试或者rollback机制？","like_count":8,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487893,"discussion_content":"加一颗星:)，此时日志项仍处于未提交状态，领导者需要继续重试，按顺序复制日志项，只有当日志项被成功复制到大多数节点时，该日志项处于提交状态，然后被应用到状态机。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587239279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1515223,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1e/d7/7d28a531.jpg","nickname":"飞机翅膀上","note":"","ucode":"D239DFFECDBF01","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"discussion":{"id":565108,"discussion_content":"你上面不是说，如果没有收到大多数节点的复制成功响应，就返回失败给客户端么 ？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650383896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":487893,"ip_address":""},"score":565108,"extra":""}]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342845,"discussion_content":"那重试的过程中一直不响应客户端吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610848401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1973652,"avatar":"","nickname":"Geek_7d0ff9","note":"","ucode":"C295C6312FC5C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363350,"discussion_content":"我理解那些未被大多数节点确认的uncommited日志，领导者会先向客户端回复，然后还是会不断的向哪些未确认的节点重试复制，一直到成功。如果在重试成功之前该主挂了，则新选的主可能包含这个uncommited日志也可能不包含这个uncommited日志(选主只要当前候选者最大的日志号包含大多数节点的最大日志号即可，可能刚才的uncommited日志只有一个节点复制成功，所以新主可以没有那个uncommited日志)，如果包含，则新主会继续尝试给那些没有这个日志的节点发送复制请求，如果新主任期内有新的日志可以提交(获得大多数确认)，则会级联的给老的uncommited日志提交(这里有个点，就是主节点不会对于老任期的日志执行大多数确认提交的逻辑，原因在论文里有写，大概是这些老任期内uncommited的日志可能会被新的任期选出来的主给覆盖删掉，如果执行提交就会导致数据不一致，所以对于老任期内的uncommited日志只有在当前任期内有日志需要提交时，通过级联提交的规则，给老的uncommited日志提交)。如果不包含，则那些有这个uncommited日志的节点会被新的主节点给覆盖删掉这个uncommited日志。 个人理解，不知道正确不正确，一起讨论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617176314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2632614,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Sjib7R4DApqu3XX7EztpVfK9I2HM9wcsmUSia4kJuib4yuywf42VnjqvSMJf3cicN0BzdklgicTCkg9nwtMsw0AzqicA/132","nickname":"Geek_ght5r0","note":"","ucode":"FDB9282F24D9E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1973652,"avatar":"","nickname":"Geek_7d0ff9","note":"","ucode":"C295C6312FC5C4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569682,"discussion_content":"“如果不包含，则那些有这个uncommited日志的节点会被新的主节点给覆盖删掉这个uncommited日志。” 可是你前面说前一个领导者已经向客户端回复了，现在又把已经回复的数据删掉，这样有问题吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651508679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":363350,"ip_address":""},"score":569682,"extra":""}]}]},{"had_liked":false,"id":231436,"user_name":"Geek_d40030","can_delete":false,"product_type":"c1","uid":2029525,"ip_address":"","ucode":"91A94D7C8F3F71","user_header":"","comment_is_top":false,"comment_ctime":1593676080,"is_pvip":true,"replies":[{"id":"87388","content":"加一颗星:)，这是因为日志项可能来自不同的领导者，比如，节点A、B的索引值4对应的日志项，它的任期编号分别为1和2，那么，这两个日志项，就是2个不同的领导者创建的，即它们是不同的日志项。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595439933,"ip_address":"","comment_id":231436,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27363479856","product_id":100046101,"comment_content":"老师您好，在日志更新的时候为什么有索引值了，还要判断任期呢？理论上索引值是单调递增的就能够判断跟随者的日志在什么位置吧。<br>","like_count":7,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500303,"discussion_content":"加一颗星:)，这是因为日志项可能来自不同的领导者，比如，节点A、B的索引值4对应的日志项，它的任期编号分别为1和2，那么，这两个日志项，就是2个不同的领导者创建的，即它们是不同的日志项。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595439933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182898,"user_name":"Jialin","can_delete":false,"product_type":"c1","uid":1112955,"ip_address":"","ucode":"12583269732A75","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","comment_is_top":false,"comment_ctime":1582885244,"is_pvip":false,"replies":[{"id":"70754","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582922577,"ip_address":"","comment_id":182898,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27352689020","product_id":100046101,"comment_content":"1.Raft 日志格式：<br>• 指令：一条由客户端请求指定的、状态机需要执行的指令。即客户端提交的数据<br>• 索引值：日志项对应的整数索引值，用来标识日志项的，是一个连续的、单调递增的整数号码<br>• 任期编号：创建这条日志项的领导者的任期编号<br>2.理想的日志复制阶段：<br>• 接收到客户端请求后，领导者基于客户端请求中的指令，创建一个新日志项，并附加到本地日志中<br>• 领导者通过日志复制 RPC，将新的日志项复制到其他的服务器<br>• 当领导者将日志项，成功复制到大多数的服务器上的时候，领导者会将这条日志项提交到它的状态机中<br>• 领导者将执行的结果返回给客户端<br>• 当跟随者接收到心跳信息，或者新的日志复制 RPC 消息后，如果跟随者发现领导者已经提交了某条日志项，而它还没提交，那么跟随者就将这条日志项提交到本地的状态机中<br>3.实际生产环境中，复制日志的时候遇到进程崩溃、服务器宕机等问题，这些问题会导致日志不一致。Raft 算法按照“Raft 是通过以领导者的日志为准，来实现各节点日志的一致的”原则处理不一致日志，实现日志的一致，具体如下：<br>• 领导者通过日志复制 RPC 的一致性检查，找到跟随者节点上与自己相同日志项的最大索引值。也就是说，这个索引值之前的日志，领导者和跟随者是一致的，之后的日志是不一致的了。<br>• 领导者强制跟随者更新覆盖的不一致日志项，实现日志的一致<br><br>课后思考题：领导者接收到大多数的“复制成功”响应后，就会将日志提交到它自己的状态机，然后返回“成功”响应客户端。如果此时有个节点不在“大多数”中，也就是说它接收日志项失败，那么在这种情况下，Raft 会通过日志复制 RPC 的一致性检查，找到失败者节点上，与自己相同日志项的最大索引值，然后领导者强制该失败者更新覆盖的不一致日志项，实现日志的一致","like_count":6,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485493,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582922577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186601,"user_name":"bc","can_delete":false,"product_type":"c1","uid":1009801,"ip_address":"","ucode":"3899698EA715EC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/89/173601c5.jpg","comment_is_top":false,"comment_ctime":1583890375,"is_pvip":false,"replies":[{"id":"75877","content":"加一颗星:)。一般有2种实现方式：1. 接收到写请求的跟随者充当“代理”，转发写请求给领导者；2. 跟随者返回领导者信息给客户端，客户端再发起请求，直接联系领导者。在19、20讲，有更具体的分析。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586104885,"ip_address":"","comment_id":186601,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23058726855","product_id":100046101,"comment_content":"客户端并不知道谁是leader，怎么保证客户端的请求一定是由lead来处理的？","like_count":5,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486813,"discussion_content":"加一颗星:)。一般有2种实现方式：1. 接收到写请求的跟随者充当“代理”，转发写请求给领导者；2. 跟随者返回领导者信息给客户端，客户端再发起请求，直接联系领导者。在19、20讲，有更具体的分析。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586104885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1211223,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","nickname":"QQ怪","note":"","ucode":"1A39B8433D9208","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":241149,"discussion_content":"恍然大悟","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587395323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314818,"user_name":"严海波","can_delete":false,"product_type":"c1","uid":1264573,"ip_address":"","ucode":"8D4E230FD95383","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/bd/fe8c68b3.jpg","comment_is_top":false,"comment_ctime":1633451853,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"18813321037","product_id":100046101,"comment_content":"这里有个优化没有说，对于日志落后很多的节点，这么一步步的往回走是很低效的，这种情况下leader可以阶段性发送snapshots一次性把落后的节点的日志迅速的追回到某个snapshots","like_count":4},{"had_liked":false,"id":202232,"user_name":"后端进阶","can_delete":false,"product_type":"c1","uid":1125656,"ip_address":"","ucode":"480F48F5378307","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/18/918eaecf.jpg","comment_is_top":false,"comment_ctime":1585928259,"is_pvip":false,"replies":[{"id":"75702","content":"加一颗星:)，会的，uncommitted log不能保证一定会被提交。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586018638,"ip_address":"","comment_id":202232,"utype":1}],"discussion_count":8,"race_medal":0,"score":"18765797443","product_id":100046101,"comment_content":"老师，我这里有个疑问：文章讲了raft优化成一阶段提交，二阶段提交变成心跳或者下一次日志复制的rpc请求，那么在leader返回成功给client时，还没来得及心跳和下一次rpc日志复制，此时leader宕机了，某个follower成为新的leader，而这个follower并没有这条uncommitted log，此时会不会这条日志会不会被覆盖掉？","like_count":5,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490537,"discussion_content":"加一颗星:)，会的，uncommitted log不能保证一定会被提交。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586018638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1233900,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d3/ec/8635ab38.jpg","nickname":"小龙哥","note":"","ucode":"4A5314AC759D89","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224404,"discussion_content":"这种情况下，这个follower根本不会成为leader。https://zhuanlan.zhihu.com/p/30706032。这里边提到:\n得到投票的前提是：Candidate 节点的最后一个LogEntry 的 Term 比投票节点大，或者在 Term 一样情况下，LogEnry 的 SN (serial number) 必须大于等于投票者。\n你说的情况里，只有复制过的节点才有可能成为leader。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1586304313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2950180,"avatar":"","nickname":"Geek_150c2c","note":"","ucode":"C873CA8A415A5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1233900,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d3/ec/8635ab38.jpg","nickname":"小龙哥","note":"","ucode":"4A5314AC759D89","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":558026,"discussion_content":"确实，这样的follower不可能成为leader的。根本没资格啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648046667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":224404,"ip_address":""},"score":558026,"extra":""}]},{"author":{"id":1246520,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erY7671v8F2joiaBbnCPsbJ6ExFruIMDsd9HRSORsOZgbzBrKibDibU9CRCGghI56hUiampklDWzMFc4A/132","nickname":"华子","note":"","ucode":"91DFE5F9BB8D32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237312,"discussion_content":"说的没错，因为旧的leader已经把日志复制到大多数节点后才宕机，新的leader必然从已经复制日志的节点中选出。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587137897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412253,"discussion_content":"你理解错了几个点。\n1.一阶段提交是日志被复制到大多数节点了，二阶段是leader commit不需要同步告知大多数节点。leader的commit index通过下次日志复制或者心跳告知follower。\n2.leader成功提交则证明日志已被复制到大多数节点上了，选举成为leader的前提是得到大多数节点的支持，而得到节点支持的前提是candidate的日志要比该节点新，因此新选出来的leader必定包含这条日志（只是状态为uncommit），后续通过日志复制到大多数节点，uncommit会变成commit","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636118148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2950180,"avatar":"","nickname":"Geek_150c2c","note":"","ucode":"C873CA8A415A5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1109389,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","nickname":"KW💤","note":"","ucode":"290DD7016F4EE0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557710,"discussion_content":"说的非常好！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647938767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":412253,"ip_address":""},"score":557710,"extra":""}]},{"author":{"id":2748179,"avatar":"","nickname":"cly","note":"","ucode":"0B33AA668E7BFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390839,"discussion_content":"感觉作者也不是很懂，人家都说这条日志都已经复制到大多数节点并返回给Client“成功”了,如果被覆盖掉，岂不是会丢数据？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630073063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2548102,"avatar":"","nickname":"Jia Tiancai","note":"","ucode":"EF2F5FE8A0DF3E","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381240,"discussion_content":"已经复制到大多数节点的log一定能保证达到提交状态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624964716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198508,"user_name":"kylexy_0817","can_delete":false,"product_type":"c1","uid":1068372,"ip_address":"","ucode":"392DD9DD5E4B6E","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/54/9c214885.jpg","comment_is_top":false,"comment_ctime":1585454418,"is_pvip":false,"replies":[{"id":"75993","content":"加一颗星:)，是的，新节点需要同步全部日志，日志同步完成后，才具有投票权。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586194281,"ip_address":"","comment_id":198508,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18765323602","product_id":100046101,"comment_content":"日志必须的连续的，也就是说，新加入的节点必须要全量复制日志？如果日志量大，是否意味着新节点在完成复制日志前的一段很长的时间，都不能成为追随者？","like_count":4,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489715,"discussion_content":"加一颗星:)，是的，新节点需要同步全部日志，日志同步完成后，才具有投票权。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586194281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210783,"user_name":"语法糖不甜","can_delete":false,"product_type":"c1","uid":1476387,"ip_address":"","ucode":"8346BCFF20CA45","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/23/f6835d17.jpg","comment_is_top":false,"comment_ctime":1587824852,"is_pvip":false,"replies":[{"id":"79082","content":"加一颗星:)，不能哟，只有当日志项被复制到大多数节点上时，日志项才处于提交（committed）状态，然后领导者才会将该日志项应用到状态机，并通知跟随者将该日志项应用到状态机。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1588280270,"ip_address":"","comment_id":210783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14472726740","product_id":100046101,"comment_content":"老师 我想问一下：<br>图中的第二步是【领导者通过日志复制 RPC，将新的日志项复制到其他的服务器。】那么此时跟随者会复制日志并提交吗吗？还是跟随者一定是在领导者确认之后才提交的呀？","like_count":3,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493108,"discussion_content":"加一颗星:)，不能哟，只有当日志项被复制到大多数节点上时，日志项才处于提交（committed）状态，然后领导者才会将该日志项应用到状态机，并通知跟随者将该日志项应用到状态机。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588280270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183364,"user_name":"唐明","can_delete":false,"product_type":"c1","uid":1052038,"ip_address":"","ucode":"D6848B63EE2764","user_header":"https://static001.geekbang.org/account/avatar/00/10/0d/86/84984798.jpg","comment_is_top":false,"comment_ctime":1583029465,"is_pvip":false,"replies":[{"id":"77622","content":"加一颗星:)，会继续不断重试，按顺序复制，当将日志项复制到大多数节点时，应用该日志项到状态机。我们要注意的是，已提交的日志项，是一定存在，不会丢失的，未提交的日志项，可能会被覆盖，也可能会被提交。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587232498,"ip_address":"","comment_id":183364,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14467931353","product_id":100046101,"comment_content":"如果领导者没有接收到大多数的“复制成功”响应，那么就返回错误给客户端。<br>我有个疑问，有ABC三个节点，假设领导者将日志复制给了A节点，在将日志复制给B和C时失败，A节点已经复制的日志项要怎么处理才能不出错呢？","like_count":4,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485662,"discussion_content":"加一颗星:)，会继续不断重试，按顺序复制，当将日志项复制到大多数节点时，应用该日志项到状态机。我们要注意的是，已提交的日志项，是一定存在，不会丢失的，未提交的日志项，可能会被覆盖，也可能会被提交。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587232498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2095026,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/f7/b2/b9d2d7d8.jpg","nickname":"","note":"","ucode":"79DB151C0BFC63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395974,"discussion_content":"答非所问","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632372679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030135,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b7/f7/b2423197.jpg","nickname":"牛牛","note":"","ucode":"3FC01F8D66B2FB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381366,"discussion_content":"返给客户端失败的请求的日志还会继续重试吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625024690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182980,"user_name":"shenfl","can_delete":false,"product_type":"c1","uid":1184233,"ip_address":"","ucode":"607CD894152241","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/e9/b6aa6364.jpg","comment_is_top":false,"comment_ctime":1582901535,"is_pvip":false,"replies":[{"id":"70752","content":"重试，指令操作具有冥等性就可以了，比如，set x = v。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582922424,"ip_address":"","comment_id":182980,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14467803423","product_id":100046101,"comment_content":"老师 有个疑问，当领导者提交日志到本地状态机后与客户端网络出问题了，此时客户端会以为本次写入不成功，这样就导致客户端与集群信息不一致，该怎么处理呢？","like_count":3,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485521,"discussion_content":"重试，指令操作具有冥等性就可以了，比如，set x = v。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582922424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179952,"avatar":"https://static001.geekbang.org/account/avatar/00/12/01/30/cb3a729e.jpg","nickname":"XHH","note":"","ucode":"3EF89099982977","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190254,"discussion_content":"leader是append-only的，所以在leader提交日志记录成功后，就没法回滚了。不过可以client可以重试，那么Raft就要实现幂等性了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582909499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2632614,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Sjib7R4DApqu3XX7EztpVfK9I2HM9wcsmUSia4kJuib4yuywf42VnjqvSMJf3cicN0BzdklgicTCkg9nwtMsw0AzqicA/132","nickname":"Geek_ght5r0","note":"","ucode":"FDB9282F24D9E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179952,"avatar":"https://static001.geekbang.org/account/avatar/00/12/01/30/cb3a729e.jpg","nickname":"XHH","note":"","ucode":"3EF89099982977","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569686,"discussion_content":"如果是非幂等性操作呢？比如 x = x + v","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651509299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":190254,"ip_address":""},"score":569686,"extra":""}]}]},{"had_liked":false,"id":241964,"user_name":"山头","can_delete":false,"product_type":"c1","uid":1610142,"ip_address":"","ucode":"9CD45A7966F37E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1R7lHGBvwPTVfb3BAQrPX3AhsYWnXyicbUJUYDgWagWxMGTnsNFvKibzeJ8v7fF2vJLQGf2EY9dV07rnn5Mhv9Uw/132","comment_is_top":false,"comment_ctime":1597543202,"is_pvip":false,"replies":[{"id":"95954","content":"加一颗星:)，可以理解为各节点就多个“位置”的内容达成共识，并且不再改变，比如，各节点在“位置”1存放“X”，在“位置”2存放“Y”。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1606575138,"ip_address":"","comment_id":241964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10187477794","product_id":100046101,"comment_content":" Raft 能实现一系列值的共识，一系列值的共识是什么意思","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503889,"discussion_content":"加一颗星:)，可以理解为各节点就多个“位置”的内容达成共识，并且不再改变，比如，各节点在“位置”1存放“X”，在“位置”2存放“Y”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606575138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228402,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1592659329,"is_pvip":false,"replies":[{"id":"87379","content":"加一颗星:)，这个取决于实现，一般是9，因为操作的冥等性和状态机，能保证最终的结果是符合预期的，不会因为指令重复提交，而对结果产生影响。但如果我们需要实现线性一致性，那么，我们就需要客户端协议的配合，保证操作只执行一次，此时，索引仍是8。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595437858,"ip_address":"","comment_id":228402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10182593921","product_id":100046101,"comment_content":"老师好，想问一下，raft算法日志复制中，假如当前客户端发送请求，领导者处理请求，日志是term是4，索引是8，那么会复制到跟随者，但是由于部分跟随者返回失败，最终领导者给客户端返回失败了，那么下次在处理请求的时候，term是4，索引会变成9还是继续保持8呢？","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499021,"discussion_content":"加一颗星:)，这个取决于实现，一般是9，因为操作的冥等性和状态机，能保证最终的结果是符合预期的，不会因为指令重复提交，而对结果产生影响。但如果我们需要实现线性一致性，那么，我们就需要客户端协议的配合，保证操作只执行一次，此时，索引仍是8。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595437858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226678,"user_name":"z","can_delete":false,"product_type":"c1","uid":1433688,"ip_address":"","ucode":"113CAF2C7F929B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKB0h2nibEbQKcZ6eHkgkmtwMunlibSibT3YAJ8IbDa834HnTAYiajMd8YCdpyDrfhWibCicfpmDCjJzwlA/132","comment_is_top":false,"comment_ctime":1592184276,"is_pvip":false,"replies":[{"id":"87376","content":"加一颗星:)，不会，读请求读到的数据是状态机运算后的数据，即对所有应用（Applied）到状态机的日志项指令，运算后的值。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595437168,"ip_address":"","comment_id":226678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10182118868","product_id":100046101,"comment_content":"从follower节点的读请求一般会返回uncommitted状态的数据吗","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498332,"discussion_content":"加一颗星:)，不会，读请求读到的数据是状态机运算后的数据，即对所有应用（Applied）到状态机的日志项指令，运算后的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595437168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209018,"user_name":"华子","can_delete":false,"product_type":"c1","uid":1246520,"ip_address":"","ucode":"91DFE5F9BB8D32","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erY7671v8F2joiaBbnCPsbJ6ExFruIMDsd9HRSORsOZgbzBrKibDibU9CRCGghI56hUiampklDWzMFc4A/132","comment_is_top":false,"comment_ctime":1587480939,"is_pvip":false,"replies":[{"id":"79100","content":"加一颗星:)，需要Term的，存在你说的情况，比如，在同一个领导者任期内，Term是不变的，index递增。Term和Index唯一标识一个日志项。如果不考虑Term，比如在集群不稳定、反复选举时，可能出现不同日志项，对应同一个Index，无法区分的问题。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1588315810,"ip_address":"","comment_id":209018,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10177415531","product_id":100046101,"comment_content":"日志的索引值如果是单调递增且连续，那就不需要Term值了？是我理解错了？还是说存在两种情况，Index增加Term不增加，Index不增加Term增加，所以不能只根据日志索引值判断？","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492700,"discussion_content":"加一颗星:)，需要Term的，存在你说的情况，比如，在同一个领导者任期内，Term是不变的，index递增。Term和Index唯一标识一个日志项。如果不考虑Term，比如在集群不稳定、反复选举时，可能出现不同日志项，对应同一个Index，无法区分的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588315810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183505,"user_name":"zjm_tmac","can_delete":false,"product_type":"c1","uid":1849621,"ip_address":"","ucode":"5E1DE9A815A98B","user_header":"","comment_is_top":false,"comment_ctime":1583054751,"is_pvip":false,"replies":[{"id":"77717","content":"加一颗星:)，问题1：是的。问题2：etcd的raft实现，我后面做个补充吧。问题3：什么是唯一性冲突，能举个例子吗？应用日志项到状态机失败的例子。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587303986,"ip_address":"","comment_id":183505,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10172989343","product_id":100046101,"comment_content":"有两个问题，状态机指的是上层应用方的状态机吗？比如etcd-raft对应的状态机是etcd的wal模块吗？另外如果日志已经commit但未apply的情况下提交给状态机失败了，比如唯一性冲突了，这种情况下日志会怎么处理呢？","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485702,"discussion_content":"加一颗星:)，问题1：是的。问题2：etcd的raft实现，我后面做个补充吧。问题3：什么是唯一性冲突，能举个例子吗？应用日志项到状态机失败的例子。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587303986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182670,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1582847456,"is_pvip":false,"replies":[{"id":"70761","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582924203,"ip_address":"","comment_id":182670,"utype":1}],"discussion_count":1,"race_medal":1,"score":"10172782048","product_id":100046101,"comment_content":"处理日志项一致通过RPC一致性检查，找到追随者中与自己相同日志项的最大索引，然后把后面的日志项同步过去，让追随者复制更新","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485403,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582924203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182666,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1582847324,"is_pvip":false,"replies":[{"id":"70913","content":"每个跟随者:)。日志复制信息，对每个跟随者，都要单独维护的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582992486,"ip_address":"","comment_id":182666,"utype":1}],"discussion_count":3,"race_medal":1,"score":"10172781916","product_id":100046101,"comment_content":"老师我有个小疑惑，就是Raft在处理日志不一致时会给追随者发送RPC一致性检查，找到和自己相同日志项的最大值，这里是对每个追随者而言的还是所有的追随者而言的？<br>","like_count":2,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485402,"discussion_content":"每个跟随者:)。日志复制信息，对每个跟随者，都要单独维护的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582992486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","nickname":"Jialin","note":"","ucode":"12583269732A75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190436,"discussion_content":"对每个追随者而言，领导者会维护每个追随者的日志索引最大值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582944185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1004698,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","nickname":"每天晒白牙","note":"","ucode":"A1B102CD933DEA","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1112955,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","nickname":"Jialin","note":"","ucode":"12583269732A75","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190492,"discussion_content":"谢谢答疑，我也觉得这样做更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582949888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":190436,"ip_address":""},"score":190492,"extra":""}]}]},{"had_liked":false,"id":321608,"user_name":"零零玲","can_delete":false,"product_type":"c1","uid":2326769,"ip_address":"","ucode":"F993CC91AF3FE1","user_header":"","comment_is_top":false,"comment_ctime":1636965370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5931932666","product_id":100046101,"comment_content":"这里的一致性检查，是否算“写时修复“了？","like_count":1},{"had_liked":false,"id":302958,"user_name":"Focus","can_delete":false,"product_type":"c1","uid":1404785,"ip_address":"","ucode":"A4D43128D664C4","user_header":"https://static001.geekbang.org/account/avatar/00/15/6f/71/da5118c1.jpg","comment_is_top":false,"comment_ctime":1626474784,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"5921442080","product_id":100046101,"comment_content":"发现个 typo: 文中的 PrevLogEntry 应该是 PrevLogIndex. 这样就会论文一致了.","like_count":1,"discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389197,"discussion_content":"我也觉得用原文的prevLogIndex的比较好，毕竟是索引而不是日志项本身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629171337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1404785,"avatar":"https://static001.geekbang.org/account/avatar/00/15/6f/71/da5118c1.jpg","nickname":"Focus","note":"","ucode":"A4D43128D664C4","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384761,"discussion_content":"刚看了 第17课, 原来 Hashicorp的Raft.AppendEntriesRequest 结构体里也是叫 PrevLogEntry... ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626744376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251917,"user_name":"wyhqaq","can_delete":false,"product_type":"c1","uid":1112516,"ip_address":"","ucode":"A98C26A206AD2C","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/c4/b2b3260e.jpg","comment_is_top":false,"comment_ctime":1601973201,"is_pvip":false,"replies":[{"id":"92411","content":"加一颗星:)，不会出现这种情况的，因为，领导者选举机制能保证只有记录这条日志的节点才能成为领导者，未记录这条日志的节点（也就是另外2台机器）是无法成为领导者的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1602520847,"ip_address":"","comment_id":251917,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5896940497","product_id":100046101,"comment_content":"老师请问一下，如果当前有5台机器，最新的日志只comitted到了三台机器上，此时如果挂掉了其中两台机器（比如同一个交换机上），然后一个未记录这条日志的机器投票成为了leader（因为当前只有1台机器有最新日志，所以还是存在这种情况），那这条日志是不是就丢失了。","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506659,"discussion_content":"加一颗星:)，不会出现这种情况的，因为，领导者选举机制能保证只有记录这条日志的节点才能成为领导者，未记录这条日志的节点（也就是另外2台机器）是无法成为领导者的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602520847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342986,"discussion_content":"我感觉这里是有可能的，假如五个节点分别是A B C D E。A B C都成功复制了log2然后A B挂了，剩下C D E，假设这时C的日志是[1,1][1,2]，D的为[1,1]，E的为[1,1],[3,2]。那E是有可能当选leader的，然后会用[3,2]的日志覆盖掉C的[1,2]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610892597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2700925,"avatar":"https://static001.geekbang.org/account/avatar/00/29/36/7d/eab0d26a.jpg","nickname":"丹尼尔-雪碧","note":"","ucode":"F098396F4B7500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554688,"discussion_content":"E的[3,2]不可能出现吧，E的任期号为3，比挂掉的leader的任期1还高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646550932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":342986,"ip_address":""},"score":554688,"extra":""}]},{"author":{"id":2260326,"avatar":"https://static001.geekbang.org/account/avatar/00/22/7d/66/f26d71a7.jpg","nickname":"♪Check King","note":"","ucode":"11BFD41B905FEB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318567,"discussion_content":"这一点我也有疑问，请老师再讲一下，谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603782392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446316,"avatar":"https://static001.geekbang.org/account/avatar/00/16/11/ac/9cc5e692.jpg","nickname":"Corner","note":"","ucode":"7862D593172536","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317318,"discussion_content":"上一节讲到，只要日志编号大于大多数节点就能当选为领导者，此时如果是日志编号第二大的当选了，第一的日志是会被覆盖掉吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603533312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234709,"user_name":"Gopher","can_delete":false,"product_type":"c1","uid":1206229,"ip_address":"","ucode":"3C1F9012BB486D","user_header":"https://static001.geekbang.org/account/avatar/00/12/67/d5/1b26b725.jpg","comment_is_top":false,"comment_ctime":1594777226,"is_pvip":false,"replies":[{"id":"87641","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595752139,"ip_address":"","comment_id":234709,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889744522","product_id":100046101,"comment_content":"回答下问题：<br>如果节点不再大多数节点，只要等心跳来更新自己的任期，还有等到leader 的一致性检查来修复自己的日志","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501479,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595752139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232809,"user_name":"爱德华","can_delete":false,"product_type":"c1","uid":1853638,"ip_address":"","ucode":"800E6A9490D90F","user_header":"https://static001.geekbang.org/account/avatar/00/1c/48/c6/3c8d9a0c.jpg","comment_is_top":false,"comment_ctime":1594122316,"is_pvip":false,"replies":[{"id":"88070","content":"加一颗星:)，没必要合到一起，投票RPC消息与日志复制RPC消息（心跳RPC消息）在内容上区别还是蛮大的，比如term、candidateId，详细信息见论文的“RequestVote RPC”和“AppendEntries RPC”。如果我们在代码实现上，通过字段复用，将请求合并，除了没有明显的收益，也会使代码极其晦涩难读。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1596160327,"ip_address":"","comment_id":232809,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5889089612","product_id":100046101,"comment_content":"日志复制rpc，心跳rpc，投票rpc(第一阶段)。<br><br>这三类请求功能有很大相同之处，是不是整合成一个请求。例如<br><br>日志复制，带了prelog信息用来比较不同之处<br>心跳rpc，应该也会带prelog信息用来看哪些日志没有提交<br>投票rpc，也只用带prelog信息就够了，这个就能让跟随者本条日志是否能应用，至于本条日志内容可以从日志复制rpc中获取。<br><br>不知道这样想对不对，麻烦老师指点一二","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500775,"discussion_content":"加一颗星:)，没必要合到一起，投票RPC消息与日志复制RPC消息（心跳RPC消息）在内容上区别还是蛮大的，比如term、candidateId，详细信息见论文的“RequestVote RPC”和“AppendEntries RPC”。如果我们在代码实现上，通过字段复用，将请求合并，除了没有明显的收益，也会使代码极其晦涩难读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596160327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219663,"user_name":"xzy","can_delete":false,"product_type":"c1","uid":1082132,"ip_address":"","ucode":"483350A630625E","user_header":"https://static001.geekbang.org/account/avatar/00/10/83/14/099742ae.jpg","comment_is_top":false,"comment_ctime":1590059793,"is_pvip":false,"replies":[{"id":"87242","content":"加一颗星:)，强一致性，不是指各节点数据的一致性，而是线性一致性（CAP定理中C，又称原子一致性）。实现线性一致性，读操作需要在领导者节点上执行，并通过客户端协议的配合，来保证指令只执行一次。现在，能保证写操作完成后，读操作就能持续读取到更新后的值，比如Consul的consistent模式，也被称为强一致性。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595341872,"ip_address":"","comment_id":219663,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5885027089","product_id":100046101,"comment_content":"你好，请问如果 leader apply 日志后，返回客户端成功，但是 follower 还未 apply，此时岂不是数据并不一致吗？那 raft 是怎么保证强一致的呢","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495895,"discussion_content":"加一颗星:)，强一致性，不是指各节点数据的一致性，而是线性一致性（CAP定理中C，又称原子一致性）。实现线性一致性，读操作需要在领导者节点上执行，并通过客户端协议的配合，来保证指令只执行一次。现在，能保证写操作完成后，读操作就能持续读取到更新后的值，比如Consul的consistent模式，也被称为强一致性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595341872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209023,"user_name":"华子","can_delete":false,"product_type":"c1","uid":1246520,"ip_address":"","ucode":"91DFE5F9BB8D32","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erY7671v8F2joiaBbnCPsbJ6ExFruIMDsd9HRSORsOZgbzBrKibDibU9CRCGghI56hUiampklDWzMFc4A/132","comment_is_top":false,"comment_ctime":1587481151,"is_pvip":false,"replies":[{"id":"78212","content":"加一颗星:)，是的，64位，0~1844亿亿，足够大了，可以暂时不考虑溢出的情况。另外，我也推荐“小步快跑、逐渐完善”，而不是“一步到位”的项目开发模式。如果要解决溢出的问题，因为日志索引值需要唯一性，所以类似linux内核jiffies的回绕设计，就不可行了，可以使用更多位数来表示。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587581325,"ip_address":"","comment_id":209023,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882448447","product_id":100046101,"comment_content":"HashCorp的Raft实现里面，Leader在发送日志的时候，给每个log赋予索引值，是根据最后的索引值自增，是不是就可以说：索引值是单调自增且连续的值？<br><br>下面是代码：<br><br>for idx, applyLog := range applyLogs {<br>\t\tapplyLog.dispatch = now<br>\t\tlastIndex++ &#47;&#47; leader的lastIndex全局自增，64位溢出怎么办？<br>\t\tapplyLog.log.Index = lastIndex<br>\t\tapplyLog.log.Term = term<br>\t\tlogs[idx] = &amp;applyLog.log<br>\t\tr.leaderState.inflight.PushBack(applyLog)<br>\t}","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492702,"discussion_content":"加一颗星:)，是的，64位，0~1844亿亿，足够大了，可以暂时不考虑溢出的情况。另外，我也推荐“小步快跑、逐渐完善”，而不是“一步到位”的项目开发模式。如果要解决溢出的问题，因为日志索引值需要唯一性，所以类似linux内核jiffies的回绕设计，就不可行了，可以使用更多位数来表示。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587581325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208119,"user_name":"张翠山","can_delete":false,"product_type":"c1","uid":1625728,"ip_address":"","ucode":"12B78F4D8B294C","user_header":"https://static001.geekbang.org/account/avatar/00/18/ce/80/f9f950f1.jpg","comment_is_top":false,"comment_ctime":1587281420,"is_pvip":false,"replies":[{"id":"77704","content":"加一颗星:)，这与具体实现相关，在19、20讲的实战中，我们实现的是，跟随者返回领导者的地址信息给客户端。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587301398,"ip_address":"","comment_id":208119,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882248716","product_id":100046101,"comment_content":"客户端如何知道哪台机器是领导者？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492346,"discussion_content":"加一颗星:)，这与具体实现相关，在19、20讲的实战中，我们实现的是，跟随者返回领导者的地址信息给客户端。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587301398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201053,"user_name":"88591","can_delete":false,"product_type":"c1","uid":1254656,"ip_address":"","ucode":"04CE3E46455185","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/00/3afbab43.jpg","comment_is_top":false,"comment_ctime":1585710047,"is_pvip":false,"replies":[{"id":"75426","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1585838683,"ip_address":"","comment_id":201053,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880677343","product_id":100046101,"comment_content":"通过定时（随机）心跳，检查出不一致的日志。用leader 日志覆盖。","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490227,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585838683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191332,"user_name":"static","can_delete":false,"product_type":"c1","uid":1138754,"ip_address":"","ucode":"1697966367370E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYfReHXMbPaxO890ib9GvY9iciclPIUvaAYMYON4scP7ElXCPVzicghF0SH5HN2LqibYOrdrppC7DuSpw/132","comment_is_top":false,"comment_ctime":1584764165,"is_pvip":false,"replies":[{"id":"77632","content":"加一颗星:)，问题1：不会丢，只有日志项复制到大多数节点，就处于已提交状态，都不会被覆盖，最终也会被应用到状态机。问题2：不会，包含这条日志项的节点，才能成为领导者，不包含这条日志项的节点，是无法赢得大多数选票和当选领导者的。问题2：这个不是问题吧，如果之前写操作执行成功，就一定能获得锁，如果写操作超时，可能获得锁，也可能未获得锁，如果实现分布式锁，需要实现线性一致性，我在后面会补充说说。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587238553,"ip_address":"","comment_id":191332,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5879731461","product_id":100046101,"comment_content":"老师好，我有个一直以来的疑问，例如raft算法中客户端写数据set A，此时leader发起一次日志写并且RPC复制日志给follower，如果leader收到多数请求后，且成功提交状态机，但在下一次心跳之前它挂了，其他节点还没有收到leader最新提交的心跳消息，导致最后一条数据在follower中处于未提交状态（没提交状态机），那这条数据是不是就丢了？如果其他节点成为了leader，那是不是这台挂了的机器在恢复后，也会把这条已经提交的抹掉，因为这是一条和最新的主节点不一致的数据？<br>类比到分布式锁来说，如果我现在加了一个分布式锁在raft算法上，但是此时leader节点挂了，follower还没应用锁信息到状态机，并且follower变为leader，此时又有一个客户端来加分布式锁，一看没锁就成功获取到锁，此时就破坏了分布式锁的同步性质？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488151,"discussion_content":"加一颗星:)，问题1：不会丢，只有日志项复制到大多数节点，就处于已提交状态，都不会被覆盖，最终也会被应用到状态机。问题2：不会，包含这条日志项的节点，才能成为领导者，不包含这条日志项的节点，是无法赢得大多数选票和当选领导者的。问题2：这个不是问题吧，如果之前写操作执行成功，就一定能获得锁，如果写操作超时，可能获得锁，也可能未获得锁，如果实现分布式锁，需要实现线性一致性，我在后面会补充说说。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587238553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1475385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/83/39/f9623363.jpg","nickname":"竹马彦四郎的好朋友影法師","note":"","ucode":"A9555AEFF90CDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256659,"discussion_content":"你这个问题3其实就是raft算法实现分布式锁，其实和你的问题1是一个问题啊~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588508660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188979,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1584441486,"is_pvip":false,"replies":[{"id":"76023","content":"在15讲有补充，你先看看。有疑问，咱们一起讨论:)。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586204231,"ip_address":"","comment_id":188979,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879408782","product_id":100046101,"comment_content":"什么是状态机？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487580,"discussion_content":"在15讲有补充，你先看看。有疑问，咱们一起讨论:)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586204231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188731,"user_name":"姜川","can_delete":false,"product_type":"c1","uid":1684311,"ip_address":"","ucode":"0F8A349623EAB5","user_header":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","comment_is_top":false,"comment_ctime":1584409012,"is_pvip":false,"replies":[{"id":"77779","content":"加一颗星:)，处于提交状态的日志项，不会丢，领导者选举，能保证新领导者一定包含这条日志项，经“日志复制”过程，这条日志项最终会被提交和应用到状态机。“挂了的机器”恢复后，这条日志项及之前的日志项，是和领导者的日志项是一致的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587322780,"ip_address":"","comment_id":188731,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879376308","product_id":100046101,"comment_content":"有个疑问，如果leader收到多数请求后，且成功提交状态机，但在下一次心跳之前它挂了，其他节点还没有收到leader最新提交的心跳消息，导致最后一条数据在follower中处于未提交状态，那这条数据是不是就丢了，如果其他节点成为了leader，那是不是这台挂了的机器在恢复后，也会把这条已经提交的抹掉，因为这是一条和最新的主节点不一致的数据","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487501,"discussion_content":"加一颗星:)，处于提交状态的日志项，不会丢，领导者选举，能保证新领导者一定包含这条日志项，经“日志复制”过程，这条日志项最终会被提交和应用到状态机。“挂了的机器”恢复后，这条日志项及之前的日志项，是和领导者的日志项是一致的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587322780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187783,"user_name":"彦","can_delete":false,"product_type":"c1","uid":1125048,"ip_address":"","ucode":"13EE4093C488A5","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/b8/edbafb82.jpg","comment_is_top":false,"comment_ctime":1584240897,"is_pvip":false,"replies":[{"id":"77287","content":"加一颗星:)，这两个变量，是用于日志复制的。领导者通知跟随者提交日志项，需要通过AppendEntries RPC的leaderCommit字段，将commitIndex信息发送给跟随者。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586980589,"ip_address":"","comment_id":187783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879208193","product_id":100046101,"comment_content":"请问，raft第二阶段提交中，文章中说跟随者采用RPC日志复制来进行提交操作，是不是就是依据PrevLogEntry以及PrevLogTerm和自己状态机中的数据做对比，然后进行提交的？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487239,"discussion_content":"加一颗星:)，这两个变量，是用于日志复制的。领导者通知跟随者提交日志项，需要通过AppendEntries RPC的leaderCommit字段，将commitIndex信息发送给跟随者。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586980589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185553,"user_name":"老杜去哪儿","can_delete":false,"product_type":"c1","uid":1053277,"ip_address":"","ucode":"14A219FD54B124","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/5d/e9cea49e.jpg","comment_is_top":false,"comment_ctime":1583631914,"is_pvip":false,"replies":[{"id":"76186","content":"好，所有的问题都会回答的:)。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586285450,"ip_address":"","comment_id":185553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878599210","product_id":100046101,"comment_content":"能不能对高票对评论进行一下回答呀？高票的问题最有营养","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486411,"discussion_content":"好，所有的问题都会回答的:)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586285450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184274,"user_name":"姜川","can_delete":false,"product_type":"c1","uid":1684311,"ip_address":"","ucode":"0F8A349623EAB5","user_header":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","comment_is_top":false,"comment_ctime":1583281928,"is_pvip":false,"replies":[{"id":"71426","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583388668,"ip_address":"","comment_id":184274,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878249224","product_id":100046101,"comment_content":"如果有一台日志不一致，领导者就逐步向前遍历日志项发送给跟随者，直到有一致的节点后，开始强制跟随者将领导者的发来的数据逐条覆盖到最新的日志项","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485956,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583388668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183585,"user_name":"小样","can_delete":false,"product_type":"c1","uid":1047127,"ip_address":"","ucode":"0D670431F19A14","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bOhve1DBV2oShl2JrXDib4J1T7LciagcB8jogD5c7pvt8Zv7Bq23Zfnl70cf2R81r8ia947Hbib9FZia56sdx9wcEibA/132","comment_is_top":false,"comment_ctime":1583071423,"is_pvip":false,"replies":[{"id":"71290","content":"宕机、网络分区等，比如，在集群运行中，有些节点宕机了，这时数据就不一致了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583257968,"ip_address":"","comment_id":183585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878038719","product_id":100046101,"comment_content":"老师好，我是新来的初学者，问一下日志都是从领导者那里复制的，那么不一致的日志是怎么来的呢？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485720,"discussion_content":"宕机、网络分区等，比如，在集群运行中，有些节点宕机了，这时数据就不一致了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583257968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183311,"user_name":"tim","can_delete":false,"product_type":"c1","uid":1065570,"ip_address":"","ucode":"50F90216B4640B","user_header":"https://static001.geekbang.org/account/avatar/00/10/42/62/536aef06.jpg","comment_is_top":false,"comment_ctime":1582992355,"is_pvip":false,"replies":[{"id":"70918","content":"1. 收到请求后，判断节点是否是领导者节点，如果不是领导者节点，可以这么做，比如，返回领导者节点的信息给客户端，客户端重试并直接访问领导者节点，这是Chubby的做法；或者，将read请求转发给领导者节点；或者，返回Not Leader错误给客户端，客户端重试访问其他节点。<br>2. 是存在这个问题。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582998923,"ip_address":"","comment_id":183311,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5877959651","product_id":100046101,"comment_content":"1. follow 和leader 数据不一致的时候，这时候client来了一个读read请求，怎么避免从follow上read？ <br>2. 如果所有的read都从leader上取数据，follow节点的性能就浪费了。<br>","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485646,"discussion_content":"1. 收到请求后，判断节点是否是领导者节点，如果不是领导者节点，可以这么做，比如，返回领导者节点的信息给客户端，客户端重试并直接访问领导者节点，这是Chubby的做法；或者，将read请求转发给领导者节点；或者，返回Not Leader错误给客户端，客户端重试访问其他节点。\n2. 是存在这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582998923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1475385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/83/39/f9623363.jpg","nickname":"竹马彦四郎的好朋友影法師","note":"","ucode":"A9555AEFF90CDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256582,"discussion_content":"那raft岂不是和chubby一样，读写都在leader上玩单机，follower这是保证ha的东西罢了~ 好悲哀啊~ 为了实现CAP的C，就只能憋屈成这样！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588499393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1475385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/83/39/f9623363.jpg","nickname":"竹马彦四郎的好朋友影法師","note":"","ucode":"A9555AEFF90CDF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553261,"discussion_content":"这个是共识的C! 不是线性一致性的C!","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645795635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":256582,"ip_address":""},"score":553261,"extra":""}]}]},{"had_liked":false,"id":183191,"user_name":"深海极光","can_delete":false,"product_type":"c1","uid":1096111,"ip_address":"","ucode":"331024F7E99C64","user_header":"https://static001.geekbang.org/account/avatar/00/10/b9/af/f59b4c7c.jpg","comment_is_top":false,"comment_ctime":1582969192,"is_pvip":false,"replies":[{"id":"70909","content":"在代码实现时，这块可做优化。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582991205,"ip_address":"","comment_id":183191,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877936488","product_id":100046101,"comment_content":"这时，领导者会递减要复制的日志项的索引值，并发送新的日志项到跟随者，这个消息的 PrevLogEntry 值为 6，PrevLogTerm 值为 3。如果跟随者和leader差的远，比如是3，那就是要从7到3要5次RPC调用才能开始同步，是不是有性能问题","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485590,"discussion_content":"在代码实现时，这块可做优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582991205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182851,"user_name":"robert_z_zhang","can_delete":false,"product_type":"c1","uid":1055356,"ip_address":"","ucode":"E20CAA80647299","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/7c/e1d33f7c.jpg","comment_is_top":false,"comment_ctime":1582876142,"is_pvip":false,"replies":[{"id":"70756","content":"会有额外的性能开销，相对现在服务器性能而言，开销不大，另外，在绝大部分的时候，系统是稳定运行的，各节点日志也是一致的，直接复制日志，就可以了，比如，这时hashicorp raft会采用pipeline模式进行日志复制。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582923270,"ip_address":"","comment_id":182851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877843438","product_id":100046101,"comment_content":"一致性检查是和日志复制同步做的吗？ 如果不一致的节点较多，需要做多个节点的同步工作，是否会影响同步效率呢？","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485474,"discussion_content":"会有额外的性能开销，相对现在服务器性能而言，开销不大，另外，在绝大部分的时候，系统是稳定运行的，各节点日志也是一致的，直接复制日志，就可以了，比如，这时hashicorp raft会采用pipeline模式进行日志复制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582923270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182674,"user_name":"longyi","can_delete":false,"product_type":"c1","uid":1318113,"ip_address":"","ucode":"204CC8D3E98AAC","user_header":"https://static001.geekbang.org/account/avatar/00/14/1c/e1/c99d1473.jpg","comment_is_top":false,"comment_ctime":1582847908,"is_pvip":false,"replies":[{"id":"77625","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587234735,"ip_address":"","comment_id":182674,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877815204","product_id":100046101,"comment_content":"思考题：这个落后的节点上线后，leader会同步日志给它，如果日志已经删除了leader会同步snapshot。","like_count":1,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485405,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587234735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354097,"user_name":"Cherish","can_delete":false,"product_type":"c1","uid":1211936,"ip_address":"北京","ucode":"C1B5E1B44703BA","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/20/d9ae2a0b.jpg","comment_is_top":false,"comment_ctime":1660095686,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1660095686","product_id":100046101,"comment_content":"如果该日志项已被大多数节点接收了, 只有包含这部分日志项的节点才能选举成功(毕竟没接收的节点日志不够完整, 他们投票会被拒绝), 所以最终一致的日志里会包含这部分日志项<br><br>其实更好奇的是如果这个日志项还未被大多数节点确认的时候, Leader挂了, 是不是就会有以下两种case了:<br>1. 如果具有该日志项的节点竞选成功, 责最终日志里会包含这个日志项<br>2. 如果不具有该日志项的节点竞选成功(毕竟有多半节点和他一样缺日志), 一切以leader为准, leader会覆盖掉这部分多余的日志","like_count":0},{"had_liked":false,"id":348605,"user_name":"开心小毛","can_delete":false,"product_type":"c1","uid":1023762,"ip_address":"","ucode":"9D57A2773759F3","user_header":"","comment_is_top":false,"comment_ctime":1655252749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655252749","product_id":100046101,"comment_content":"为什么必须“成功复制到大多数的服务器上的时候”，领导者才可以“将这条日志项应用到它的状态机中”？ 有什么地方用到了多数投票么？raft算法貌似没有用到“大多数”。","like_count":0},{"had_liked":false,"id":348586,"user_name":"Hugh","can_delete":false,"product_type":"c1","uid":2285931,"ip_address":"","ucode":"77434E01E1D715","user_header":"https://static001.geekbang.org/account/avatar/00/22/e1/6b/74a8b7d8.jpg","comment_is_top":false,"comment_ctime":1655215582,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655215582","product_id":100046101,"comment_content":"关于日志复制这部分，想请教几个问题：<br>1. 文中提到，leader向followers发送追加日志的RPC时，follower会将消息内容持久化到WAL以及raft log中，然后响应leader表示自己已完成复制（已复制进log，未提交），如果leader收到了大部分follower的成功响应，则认为此次提交是安全的，并把该日志设置为已提交，并在未来的心跳RPC中把已提交索引同步给所有的follower。这里假设一种情况：leader将日志设置为已提交，但还未来得及把已提交索引发送给其他的follower，如果此时leader宕机了，那么所有的follower都不知道最新的这条日志被提交了，那未来这条日志还会被写进状态机吗？依据是什么？<br>2. 再回到1中的这个例子，假设leader给follower发送追加日志RPC（我们把这次日志叫做X）时，只有一个follower A完成了复制并追加raft log中，其他follower都失败了，此时leader突然宕机了，且A最先超时并转变为candidate发起了选举请求且成功获选成为leader，那么这条日志X最终会被复制给所有的节点吗（我在https:&#47;&#47;raft.github.io&#47; 这个网站用动画模拟了一下，答案是肯定的）？如果会被复制，是不是和客户端的认知就不一致了，因为客户端认为此次的put请求是失败的<br>我参考了raft论文和这篇课程，没找到具体的答案，辛苦老师帮忙解答一下","like_count":0},{"had_liked":false,"id":348399,"user_name":"开心小毛","can_delete":false,"product_type":"c1","uid":1023762,"ip_address":"","ucode":"9D57A2773759F3","user_header":"","comment_is_top":false,"comment_ctime":1655053807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655053807","product_id":100046101,"comment_content":"请问老师，任期编号是用来做什么的，数据复制的过程中如果没有标识或查看任期编号会怎样？","like_count":0},{"had_liked":false,"id":346750,"user_name":"又双叒叕是一年啊","can_delete":false,"product_type":"c1","uid":1000015,"ip_address":"","ucode":"E067320E537DEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/4f/ff1ac464.jpg","comment_is_top":false,"comment_ctime":1653397167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653397167","product_id":100046101,"comment_content":"当领导者将日志项，成功复制到大多数的服务器上的时候，领导者会将这条日志项应用到它的状态机中。 这里的应用到状态机中是指提交日志？","like_count":0},{"had_liked":false,"id":344845,"user_name":"sirius","can_delete":false,"product_type":"c1","uid":1613721,"ip_address":"","ucode":"B3AEA5D15FB086","user_header":"https://static001.geekbang.org/account/avatar/00/18/9f/99/b5e52fd2.jpg","comment_is_top":false,"comment_ctime":1651821996,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651821996","product_id":100046101,"comment_content":"不知道理解对不对，请老师看看哈。<br>这里因为有一个leader，类似的变成了类似数据库两阶段提交。如果把log理解为redo log，可能就很好理解了。<br>客户端请求进来，leader先写入redo log，然后通知follower 写redo log<br>leader收到半数follower写入ok 的ack，就自己把redo log真正写入commit record标记，相当于本地事务提交了，近似于x = 1被真正写入，对外可见了。返回；<br>而所有follower的commit，在下一个心跳中完成。<br>如果一个leader在心跳之前挂了，新的leader因为选举的规则要求日志完整度最高，所以他必然包含这条uncommited的 log，上来后，他向全体follower确认是否有半数follower包含之，有则认为这条log应该commit，commit之，执行上一个leader的心跳；<br>相当于上一个leader挂之前，把信息告诉了大多数人，而继任者根据大多数人的投票，继承了上届leader的遗愿。","like_count":0},{"had_liked":false,"id":337694,"user_name":"Knuth","can_delete":false,"product_type":"c1","uid":1083616,"ip_address":"","ucode":"21298EF9BBB91A","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/e0/292508a4.jpg","comment_is_top":false,"comment_ctime":1646978630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646978630","product_id":100046101,"comment_content":"日志复制那个图是不是有问题啊，leader要等到follower的ack之后才能commit吧。而且不需要等到两个ack了才commit啊，并且这个过程是异步的，你这么画有误导啊","like_count":0},{"had_liked":false,"id":330175,"user_name":"Z宇锤锤","can_delete":false,"product_type":"c1","uid":2188142,"ip_address":"","ucode":"7DB36E986A7A51","user_header":"https://static001.geekbang.org/account/avatar/00/21/63/6e/6b971571.jpg","comment_is_top":false,"comment_ctime":1641828364,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641828364","product_id":100046101,"comment_content":"leader应该是会给所有的跟随者发消息。并依次找出一致日志项的最大序号，使用领导者的日志项强行覆盖掉最大一致项以后所有的日志项。","like_count":0},{"had_liked":false,"id":320201,"user_name":"KW💤","can_delete":false,"product_type":"c1","uid":1109389,"ip_address":"","ucode":"290DD7016F4EE0","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/8d/377c106a.jpg","comment_is_top":false,"comment_ctime":1636118626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636118626","product_id":100046101,"comment_content":"请教下，我看你在回复中说比较日志是用的umcommited log？我怎么感觉有问题啊？如果节点A开始为term 1的leader，往它上面写100条umcommited log，然后它崩溃了；这时节点B成为term 2的leader，往它上面写1条umcommited log，这条umcommited log被同步到majority节点后，节点b提交，然后它马上崩溃了；然后A复活了，这时","like_count":0},{"had_liked":false,"id":314463,"user_name":"ezekiel","can_delete":false,"product_type":"c1","uid":1158795,"ip_address":"","ucode":"AB4AB6FA8612D8","user_header":"https://static001.geekbang.org/account/avatar/00/11/ae/8b/43ce01ca.jpg","comment_is_top":false,"comment_ctime":1633085981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633085981","product_id":100046101,"comment_content":"在领导者和跟随者查找相同日之项的过程中，有没有可能PrevLogEntry和PrevLogTerm值对上了，但是日之乡的值是不一样的？","like_count":0},{"had_liked":false,"id":314335,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1632974520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632974520","product_id":100046101,"comment_content":"如果是三个节点的集群，会返回错误给客户端，如果是3个以上的集群，有一个结点被孤立了，可以正常提交","like_count":0},{"had_liked":false,"id":314334,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1632974237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632974237","product_id":100046101,"comment_content":"在“领导者通过日志复制 RPC，复制并更新覆盖该索引值之后的日志项（也就是不一致的日志项），最终实现了集群各节点日志的一致。”，覆盖之前，是不是要做undo操作？","like_count":0},{"had_liked":false,"id":303973,"user_name":"Geek_d3928c","can_delete":false,"product_type":"c1","uid":2450893,"ip_address":"","ucode":"7CB09FD1F7CB23","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/L8EpqHoAnmvkzCIsdOkv5QvhIzu5tMaF2FDusXShqukv5ZBkS8DbicWaErjnYydibiaqBrs70wQ8P6axvC2FbWpbQ/132","comment_is_top":false,"comment_ctime":1627134566,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1627134566","product_id":100046101,"comment_content":"为什么“日志完整性最高的节点才能当选领导者。“？ 有点不是很理解啊，随机超时并不意味着选出来的领导者就一定是日志最完整的呀","like_count":0},{"had_liked":false,"id":292791,"user_name":"夏风","can_delete":false,"product_type":"c1","uid":1496195,"ip_address":"","ucode":"EEF37E75FBBA8A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJrgpv3Kia5Iw2kmg2rV4PSReiaic8d0Dj93XPlJaNpPRPC2xAIS22PQerSxb0cgjChSGAEOyX4tJBCQ/132","comment_is_top":false,"comment_ctime":1620980688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620980688","product_id":100046101,"comment_content":"在同步日志消息那块，如果跟随者的数据比领导者的数据新，此时怎么处理呢？","like_count":0},{"had_liked":false,"id":283994,"user_name":"出卖灵魂的教练Kerry","can_delete":false,"product_type":"c1","uid":1807943,"ip_address":"","ucode":"8C64517DA556FE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/47/93838ff7.jpg","comment_is_top":false,"comment_ctime":1616032667,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1616032667","product_id":100046101,"comment_content":"老师你好，在你的回复中，如果指定时间内没有收到大部分follower复制成功响应。领导者会重试，可是领导者已经回复客户端了，重试会不会出现，客户端这次访问不存在，下次再访问因为重试而存在的问题。这种情况怎么办？好困惑，希望老师可以解答。","like_count":0},{"had_liked":false,"id":280921,"user_name":"mateye","can_delete":false,"product_type":"c1","uid":1176599,"ip_address":"","ucode":"C402E6E4590F72","user_header":"https://static001.geekbang.org/account/avatar/00/11/f4/17/fb769d42.jpg","comment_is_top":false,"comment_ctime":1614484256,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614484256","product_id":100046101,"comment_content":"raft 日志复制中还存在一个问题『幽灵复现』，这种的问题处理方式在InfluxDB是如何实现的呢","like_count":0},{"had_liked":false,"id":279085,"user_name":"Jungggle","can_delete":false,"product_type":"c1","uid":1296635,"ip_address":"","ucode":"CEF098BDED51BB","user_header":"https://static001.geekbang.org/account/avatar/00/13/c8/fb/1e282c37.jpg","comment_is_top":false,"comment_ctime":1613614981,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613614981","product_id":100046101,"comment_content":"当领导者将日志项，成功复制到大多数的服务器上的时候，领导者会将这条日志项应用到它的状态机中。<br><br><br>这句话大多数服务器指的是大多数follower吧，不包括leader","like_count":0},{"had_liked":false,"id":278958,"user_name":"Jungggle","can_delete":false,"product_type":"c1","uid":1296635,"ip_address":"","ucode":"CEF098BDED51BB","user_header":"https://static001.geekbang.org/account/avatar/00/13/c8/fb/1e282c37.jpg","comment_is_top":false,"comment_ctime":1613483499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613483499","product_id":100046101,"comment_content":"第二个示意图的4和5步骤间领导者挂了，之后新的领导者怎么才知道日志是否需要提交呢？","like_count":0},{"had_liked":false,"id":278452,"user_name":"ichiro","can_delete":false,"product_type":"c1","uid":1086179,"ip_address":"","ucode":"D1708D87538F42","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/e3/1be13204.jpg","comment_is_top":false,"comment_ctime":1612946956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612946956","product_id":100046101,"comment_content":"老师请问下，日志要求连续是说索引值要连续，还是说日志只能追加添加就行，要求日志连续的出发点是为什么？","like_count":0},{"had_liked":false,"id":272504,"user_name":"Dolly","can_delete":false,"product_type":"c1","uid":1513825,"ip_address":"","ucode":"CC74978F393055","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/61/119cbde2.jpg","comment_is_top":false,"comment_ctime":1610101354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610101354","product_id":100046101,"comment_content":"为什么本节说的是必须“完整性最高”的节点才能当选，而上一节说的是“完整性超过半数”的节点就有可能当选？按我个人的理解我觉得此处是笔误，因为完整性超过半数的节点就有可能率先获得超过半数的选票，且和随机超时时间有关，而不必须完整性最高的节点才能当选。","like_count":0},{"had_liked":false,"id":264975,"user_name":"Geek_bd404f","can_delete":false,"product_type":"c1","uid":1392404,"ip_address":"","ucode":"5615487F61E8EE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/4YcSBHO9jZzK0icZXuprLZRuyllAGwWyI4rC7iam8HxEkkwla480bZCxfdibSTuiaxHXzeInhNia8CjsRgt6rzHIx5Q/132","comment_is_top":false,"comment_ctime":1606725711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606725711","product_id":100046101,"comment_content":"在下一个心跳时，将变更日志的发送给没有收到的节点，收到的结点，应用日志。这样可以达到日志的一致。","like_count":0},{"had_liked":false,"id":253972,"user_name":"🎼 张ͮ子ͮ谋ͮ","can_delete":false,"product_type":"c1","uid":2166314,"ip_address":"","ucode":"EB308D06D8CE77","user_header":"https://static001.geekbang.org/account/avatar/00/21/0e/2a/9f2d2d54.jpg","comment_is_top":false,"comment_ctime":1602996375,"is_pvip":false,"replies":[{"id":"96020","content":"加一颗星:)，在Raft中，索引值和任期编号唯一标识一条日志项，也就是说，如果两个日志项的索引值和任期编号相同，那么它们俩也是相同的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1606646200,"ip_address":"","comment_id":253972,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602996375","product_id":100046101,"comment_content":"如果跟随者在它的日志中，找到了 PrevLogEntry 值为 6、PrevLogTerm 值为 3 的日志项，那么日志复制 RPC 返回成功，这样一来，领导者就知道在 PrevLogEntry 值为 6、PrevLogTerm 值为 3 的位置，跟随者的日志项与自己相同。<br><br>是什么机制保证了只要PrevLogEntry和PrevLogTerm和follower上的相同那对应的日志项就是相同的？","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507232,"discussion_content":"加一颗星:)，在Raft中，索引值和任期编号唯一标识一条日志项，也就是说，如果两个日志项的索引值和任期编号相同，那么它们俩也是相同的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606646200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249426,"user_name":"huang","can_delete":false,"product_type":"c1","uid":1022220,"ip_address":"","ucode":"5C4691D0FAD085","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/0c/82250f1e.jpg","comment_is_top":false,"comment_ctime":1600653810,"is_pvip":false,"replies":[{"id":"91812","content":"加一颗星:)，不会出现这种情况的，原因是这样的，当领导者将日志项复制到大多数节点上时，这条日志项才处于committed状态，然后才返回成功给客户端，领导者的“大多数”选举机制，能保证新的领导者一定包含这个日志项。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1601300903,"ip_address":"","comment_id":249426,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1600653810","product_id":100046101,"comment_content":"如果领导者返回成功给客户端之后就挂了，没来得及把当前最大commit通知跟随者，新的领导者选举出来之后，在客户端看来这条消息就是丢失了，是这样吗?","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505925,"discussion_content":"加一颗星:)，不会出现这种情况的，原因是这样的，当领导者将日志项复制到大多数节点上时，这条日志项才处于committed状态，然后才返回成功给客户端，领导者的“大多数”选举机制，能保证新的领导者一定包含这个日志项。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601300903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241482,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1597307298,"is_pvip":false,"replies":[{"id":"95951","content":"加一颗星:)，不可行，一致性检查是没办法跳过的，比如，follower节点的最新日志项，在领导者节点上是不存在的，也就是说，这个日志项是需要被覆盖的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1606574119,"ip_address":"","comment_id":241482,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597307298","product_id":100046101,"comment_content":"这个问题就是上面说的保证日志一致性的流程,在重新连接上网络后,会重新的接收日志项,这时候领导者发现这个follower的日志接收错误,会逐步的回滚测试,一致到能够匹配上的节点,关于这个逐步的回滚操作,是否可以仿造Mysql的GTID,来让follow返回的时候直接带着最新的GTID,方便主节点一口气将缺失的补全","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503750,"discussion_content":"加一颗星:)，不可行，一致性检查是没办法跳过的，比如，follower节点的最新日志项，在领导者节点上是不存在的，也就是说，这个日志项是需要被覆盖的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606574119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232598,"user_name":"Knight²º¹⁸","can_delete":false,"product_type":"c1","uid":1089754,"ip_address":"","ucode":"BDCB830B6A730F","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/da/4f50f1b2.jpg","comment_is_top":false,"comment_ctime":1594046217,"is_pvip":false,"replies":[{"id":"88069","content":"加一颗星:)，这个我研究下，在集中答疑做个补充。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1596159658,"ip_address":"","comment_id":232598,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1594046217","product_id":100046101,"comment_content":"一直有个问题没搞明白，etcd为什么强依赖节点的时钟同步呢","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500704,"discussion_content":"加一颗星:)，这个我研究下，在集中答疑做个补充。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596159658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1089754,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a0/da/4f50f1b2.jpg","nickname":"Knight²º¹⁸","note":"","ucode":"BDCB830B6A730F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295303,"discussion_content":"好的谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596160208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229608,"user_name":"贰的11次方","can_delete":false,"product_type":"c1","uid":1813810,"ip_address":"","ucode":"73299BAA100131","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ad/32/8d4ca29e.jpg","comment_is_top":false,"comment_ctime":1593073091,"is_pvip":false,"replies":[{"id":"87939","content":"加一颗星:)，具体细节，可以线下研究下论文中的“AppendEntries RPC”和Hashicorp Raft源码中的AppendEntriesRequest，来理解。如果学习中遇到了问题，留言，咱们一起讨论:)。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1596043846,"ip_address":"","comment_id":229608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593073091","product_id":100046101,"comment_content":"请问老师，日志复制rpc消息和心跳消息是同一个rpc调用吗？ 如果是，那表示日志复制消息有2个触发点：有新的日志项；定义的心跳消息。 这两种情况中日志复制消息包含的信息是怎么样的呢？感觉这里没有说清清楚","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499559,"discussion_content":"加一颗星:)，具体细节，可以线下研究下论文中的“AppendEntries RPC”和Hashicorp Raft源码中的AppendEntriesRequest，来理解。如果学习中遇到了问题，留言，咱们一起讨论:)。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596043846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225344,"user_name":"月半子","can_delete":false,"product_type":"c1","uid":1320443,"ip_address":"","ucode":"E6E847277B9D8A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RicoHd9axeKYIwOedOFEHDibE8zcFnibmJrSZ8C3ibciaBfBCz7uA20P7sOPQrERX9okzibnrKlibCMP8DDGUCvntgrmA/132","comment_is_top":false,"comment_ctime":1591719762,"is_pvip":false,"replies":[{"id":"87282","content":"加一颗星：），不支持，在Raft中，需要按照顺序提交指令。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595348169,"ip_address":"","comment_id":225344,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591719762","product_id":100046101,"comment_content":"老师 在工程实现中raft算法支持并发执行命令吗 如果支持的话 会不会出现前后两条指令 后面的指令提交成功 前面一条指令没有提交成功的情况呢 针对这种问题又可以怎么解决呢","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497814,"discussion_content":"加一颗星：），不支持，在Raft中，需要按照顺序提交指令。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595348169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225343,"user_name":"月半子","can_delete":false,"product_type":"c1","uid":1320443,"ip_address":"","ucode":"E6E847277B9D8A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RicoHd9axeKYIwOedOFEHDibE8zcFnibmJrSZ8C3ibciaBfBCz7uA20P7sOPQrERX9okzibnrKlibCMP8DDGUCvntgrmA/132","comment_is_top":false,"comment_ctime":1591719569,"is_pvip":false,"replies":[{"id":"87280","content":"加一颗星:)，这个取决于实现，一般而言，是生成新的log，因为即使重复提交，指令的冥等性和状态机，也能保证最终的值，是符合预期的。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1595348035,"ip_address":"","comment_id":225343,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591719569","product_id":100046101,"comment_content":"老师 请问一下 如果leader在执行一条指令后 未收到大多数follower回复 此时会回复客户端失败 后续提交新的指令时 会在新的log index上生成一条log 还是覆盖上一次未提交成功的log呢","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497813,"discussion_content":"加一颗星:)，这个取决于实现，一般而言，是生成新的log，因为即使重复提交，指令的冥等性和状态机，也能保证最终的值，是符合预期的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595348035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213411,"user_name":"黄骏","can_delete":false,"product_type":"c1","uid":1849733,"ip_address":"","ucode":"3C41D02F4F712C","user_header":"https://static001.geekbang.org/account/avatar/00/1c/39/85/c6110f83.jpg","comment_is_top":false,"comment_ctime":1588407074,"is_pvip":true,"replies":[{"id":"79464","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1588783470,"ip_address":"","comment_id":213411,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588407074","product_id":100046101,"comment_content":"所以选主的规则和策略，以及选主过程中对故障的处理都十分重要呢。当主知道你的版本落后了，那么给你最新的数据来同步。","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493771,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588783470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206331,"user_name":"侧耳倾听","can_delete":false,"product_type":"c1","uid":1512642,"ip_address":"","ucode":"5BF2A2440B54F0","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","comment_is_top":false,"comment_ctime":1586840957,"is_pvip":true,"replies":[{"id":"77082","content":"加一颗星:)，是会存在这种情况的，比如像集群中加入新的节点，数据量很大，耗时会比较久，需要设计更高效的日志复制机制。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586854015,"ip_address":"","comment_id":206331,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586840957","product_id":100046101,"comment_content":"老师，请教个问题，领导者是从跟随者选举出来的，跟随者的日志各不相同，会不会存在这种情况，从跟随者选举成领导者开始，某一追随者的日志项在领导者中不存在，这时候是全部领导者的日志恢复给跟随者？如果数据量大，这个传输压力有些大，应该有手动同步日志的功能吧？","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491754,"discussion_content":"加一颗星:)，是会存在这种情况的，比如像集群中加入新的节点，数据量很大，耗时会比较久，需要设计更高效的日志复制机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586854015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204538,"user_name":"伟程","can_delete":false,"product_type":"c1","uid":1095173,"ip_address":"","ucode":"E62433F24C14A1","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/05/bb034c2c.jpg","comment_is_top":false,"comment_ctime":1586418533,"is_pvip":false,"replies":[{"id":"76510","content":"加一颗星:)，一般不会这么说，也不这么类比，写时修复、异步修复是用于AP型系统来实现最终一致，日志一致性检查和复制日志，是raft本身的机制。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586472059,"ip_address":"","comment_id":204538,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586418533","product_id":100046101,"comment_content":"一致性修复，应该算是写时修复吧，另外对于本次消息的提交，对于领导者已经提交至状态机，而对于跟随者来说，是属于异步修复从而保证一致性的吧，请老师指导。","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491210,"discussion_content":"加一颗星:)，一般不会这么说，也不这么类比，写时修复、异步修复是用于AP型系统来实现最终一致，日志一致性检查和复制日志，是raft本身的机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586472059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195435,"user_name":"姜川","can_delete":false,"product_type":"c1","uid":1684311,"ip_address":"","ucode":"0F8A349623EAB5","user_header":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","comment_is_top":false,"comment_ctime":1585187808,"is_pvip":false,"replies":[{"id":"75560","content":"加一颗星:)，算法本身对这点是没有限制的。是否访问跟随者，执行读操作，是由客户端决定的，如果客户端不需要强一致性，也就是读到旧数据，也没关系，是可以访问跟随者执行读操作的，也就是，这时跟随者在对外提供服务。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1585935357,"ip_address":"","comment_id":195435,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585187808","product_id":100046101,"comment_content":"老师，主节点在和不一致的从节点进行数据恢复时，从节点对外提供服务吗","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489064,"discussion_content":"加一颗星:)，算法本身对这点是没有限制的。是否访问跟随者，执行读操作，是由客户端决定的，如果客户端不需要强一致性，也就是读到旧数据，也没关系，是可以访问跟随者执行读操作的，也就是，这时跟随者在对外提供服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585935357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190397,"user_name":"王兵","can_delete":false,"product_type":"c1","uid":1117741,"ip_address":"","ucode":"AB0CD991527237","user_header":"https://static001.geekbang.org/account/avatar/00/11/0e/2d/d64a45b5.jpg","comment_is_top":false,"comment_ctime":1584638623,"is_pvip":false,"replies":[{"id":"76014","content":"加一颗星:)，可以理解日志被回滚了。“节点的状态”，没看明白，如何理解呢？","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586202561,"ip_address":"","comment_id":190397,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1584638623","product_id":100046101,"comment_content":"老师，follower节点的日志项被覆盖时，是不是意味着这个节点的状态要被回滚：）","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487971,"discussion_content":"加一颗星:)，可以理解日志被回滚了。“节点的状态”，没看明白，如何理解呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586202561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117741,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/2d/d64a45b5.jpg","nickname":"王兵","note":"","ucode":"AB0CD991527237","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251015,"discussion_content":"节点状态是的就是复制状态机的状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588057979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1475385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/83/39/f9623363.jpg","nickname":"竹马彦四郎的好朋友影法師","note":"","ucode":"A9555AEFF90CDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1117741,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/2d/d64a45b5.jpg","nickname":"王兵","note":"","ucode":"AB0CD991527237","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256642,"discussion_content":"我知道你说的意思——就是follower日志被修复的一致了，但是状态机是不是也应该修复一波以保持同步. 我认为应该要修复，但是具体如何修复，要看工程的实现. ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588507507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":251015,"ip_address":""},"score":256642,"extra":""}]}]},{"had_liked":false,"id":188744,"user_name":"姜川","can_delete":false,"product_type":"c1","uid":1684311,"ip_address":"","ucode":"0F8A349623EAB5","user_header":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","comment_is_top":false,"comment_ctime":1584410400,"is_pvip":false,"replies":[{"id":"77780","content":"加一颗星:)，更确切的说是领导者选举(日志完整性较高的节点才能当选领导者)，保证了committed日志项不会丢失，一定会被应用到状态机。没有这个限制的，“其他节点成为leader后只能操作自己任期内的日志”。新领导者，复制日志项，当满足“成功复制到大多数节点上”时，就提交处于uncommitted状态的日志项，就可以了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587324048,"ip_address":"","comment_id":188744,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584410400","product_id":100046101,"comment_content":"百度了一下，如果leader在提交状态机后，在发送下一次心跳之前挂了，这条数据应该不会丢，如果这台彻底挂了，其他节点成为leader后只能操作自己任期内的日志，所以之前领导告诉的未提交的日志是不会删除的，<br>然后之前的leader如果恢复了，主会同步它的日志数据，但任意一条已经提交到状态机的日志，它是不会被覆盖删除的，新的leader发现旧leader有一条提交了，但自己却没有提交，且不是自己任期内的，应该就会按已提交的结果更新自己吧","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487506,"discussion_content":"加一颗星:)，更确切的说是领导者选举(日志完整性较高的节点才能当选领导者)，保证了committed日志项不会丢失，一定会被应用到状态机。没有这个限制的，“其他节点成为leader后只能操作自己任期内的日志”。新领导者，复制日志项，当满足“成功复制到大多数节点上”时，就提交处于uncommitted状态的日志项，就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587324048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186091,"user_name":"波波","can_delete":false,"product_type":"c1","uid":1236305,"ip_address":"","ucode":"847168EE0E7D44","user_header":"https://static001.geekbang.org/account/avatar/00/12/dd/51/a7e82963.jpg","comment_is_top":false,"comment_ctime":1583755154,"is_pvip":false,"replies":[{"id":"76178","content":"加一颗星:)，超过半数的指定日志项的日志复制RPC执行成功。另外非常感谢反馈，图，我会微调下。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1586283263,"ip_address":"","comment_id":186091,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583755154","product_id":100046101,"comment_content":"老师，文中说当领导者接收到大多数节点成功复制响应后向客户端返回成功，这里如何确定大多数成功复制的节点啊？看你画的图也没有说明跟随者会返回复制结果啊？","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486621,"discussion_content":"加一颗星:)，超过半数的指定日志项的日志复制RPC执行成功。另外非常感谢反馈，图，我会微调下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586283263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183541,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1583061950,"is_pvip":true,"replies":[{"id":"71055","content":"因为会同时存在两个“大多数”，具体的问题分析和解决办法，09讲具体说说了。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1583070227,"ip_address":"","comment_id":183541,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1583061950","product_id":100046101,"comment_content":"比如将 3 节点集群扩容为 5 节点集群，这时候是可能同时出现两个领导者的。这是为什么呢？<br>有可能由于网络分区，导致新加的两个节点无法和旧的进行通讯，就会选举出来一个新的领导着<br>解决方法：当网络恢复的时候，可以根据 RPC信息中的 领导者的 Term （以大的为准）编号重新确定领导者，然后在进行日志复制","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485708,"discussion_content":"因为会同时存在两个“大多数”，具体的问题分析和解决办法，09讲具体说说了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583070227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183201,"user_name":"姜川","can_delete":false,"product_type":"c1","uid":1684311,"ip_address":"","ucode":"0F8A349623EAB5","user_header":"https://static001.geekbang.org/account/avatar/00/19/b3/57/2d92cf9a.jpg","comment_is_top":false,"comment_ctime":1582971141,"is_pvip":false,"replies":[{"id":"70898","content":"加一颗星:)。可以联合共识或单节点变更，来解决这个问题，09讲会具体说说。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582986477,"ip_address":"","comment_id":183201,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582971141","product_id":100046101,"comment_content":"三节点变五节点时，按之前逻辑每个节点只能投票一次的话，不应该会出现两个领导者呀","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485598,"discussion_content":"加一颗星:)。可以联合共识或单节点变更，来解决这个问题，09讲会具体说说。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582986477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183133,"user_name":"振超","can_delete":false,"product_type":"c1","uid":1103529,"ip_address":"","ucode":"D55B896810DBBF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/a9/ffd70fdc.jpg","comment_is_top":false,"comment_ctime":1582958496,"is_pvip":false,"replies":[{"id":"70911","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582991341,"ip_address":"","comment_id":183133,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582958496","product_id":100046101,"comment_content":"找到与 follower 与 leader 数据一致的交叉点，然后使用 leader 的日志强行覆盖 follower 位于该交差点之后的日志数据","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485568,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582991341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183085,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1582949635,"is_pvip":false,"replies":[{"id":"70912","content":"会的，代码实现时可做优化。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582991394,"ip_address":"","comment_id":183085,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1582949635","product_id":100046101,"comment_content":"当这个跟随者与leader恢复响应后，leader通过rpc日志检查一致性来进行日志同步，但是这里有个问题，如果跟随者跟leader的日志相差太多，那不是会有很频繁的rpc日志检查？","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485557,"discussion_content":"会的，代码实现时可做优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582991394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1856845,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/55/4d/2b2834a9.jpg","nickname":"郭行知","note":"","ucode":"082C7E34FE6847","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194314,"discussion_content":"这里很直接的想法是二分优化。不知道具体实现中是不是这么做的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583204999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183056,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1582944418,"is_pvip":false,"replies":[{"id":"77623","content":"加一颗星:)，问题1：取决于实现，一般是可配置的，比如在Hashicorp Raft中，默认值为100ms。问题2：按顺序发送，如果没有等待发送的日志项，就直接发送，与hb没有关系，独立的。问题3：候选人不会处理这个日志项了，因为它的term值比这个消息的大，其他跟随者收到消息，如果term不大于这个消息的term，继续处理。大家反馈的共性异常情况的疑问，我后面做补充。在这里，我分享个方法，可以通过阅读相关代码，来辅助理解异常情况的处理，在课下可以试试。","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1587233950,"ip_address":"","comment_id":183056,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582944418","product_id":100046101,"comment_content":"老师好，想问下leader节点发送心跳的频率是多久一次呢？客户端有操作到leader节点，是会立即发送日志复制rpc消息还是说等到next heartbeat的时候发送这个日志复制rpc消息呢？如果在发送日志复制消息的过程中发生了重新选举，会怎么样呢？感觉老师可以多列举下各种异常情况和raft算法的处理。","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485551,"discussion_content":"加一颗星:)，问题1：取决于实现，一般是可配置的，比如在Hashicorp Raft中，默认值为100ms。问题2：按顺序发送，如果没有等待发送的日志项，就直接发送，与hb没有关系，独立的。问题3：候选人不会处理这个日志项了，因为它的term值比这个消息的大，其他跟随者收到消息，如果term不大于这个消息的term，继续处理。大家反馈的共性异常情况的疑问，我后面做补充。在这里，我分享个方法，可以通过阅读相关代码，来辅助理解异常情况的处理，在课下可以试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587233950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182867,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1582879438,"is_pvip":false,"replies":[{"id":"70755","content":"不需要设计重试，再次日志复制时，会先复制这个日志项的:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582922696,"ip_address":"","comment_id":182867,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1582879438","product_id":100046101,"comment_content":"如果有个节点不在“大多数”中，也就是说它接收日志项失败，那么在这种情况下，Raft应该会不断重拾保证该节点能正确接受日志。","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485477,"discussion_content":"不需要设计重试，再次日志复制时，会先复制这个日志项的:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582922696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179952,"avatar":"https://static001.geekbang.org/account/avatar/00/12/01/30/cb3a729e.jpg","nickname":"XHH","note":"","ucode":"3EF89099982977","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190257,"discussion_content":"应该是每一次心跳都会检查，然后强制同步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582910004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182787,"user_name":"Purson","can_delete":false,"product_type":"c1","uid":1446120,"ip_address":"","ucode":"5F0C1BB3C0C0A2","user_header":"https://static001.geekbang.org/account/avatar/00/16/10/e8/ec11e306.jpg","comment_is_top":false,"comment_ctime":1582866093,"is_pvip":false,"replies":[{"id":"70759","content":"加一颗星:)","user_name":"作者回复","user_name_real":"hanj4096","uid":"1642497","ctime":1582923911,"ip_address":"","comment_id":182787,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582866093","product_id":100046101,"comment_content":"收到失败的情况下，说明节点没有通信故障，按照老师的上面日志一致的例子，有可能是在一致性检查的时候，找不到合适的覆盖点，Raft的领导节点会向前找到日志项，再次向这个失败节点发送一致性检查。","like_count":0,"discussions":[{"author":{"id":1642497,"avatar":"https://static001.geekbang.org/account/avatar/00/19/10/01/750740a8.jpg","nickname":"hanj4096","note":"","ucode":"481047E40315AA","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485451,"discussion_content":"加一颗星:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582923911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}