{"id":310441,"title":"06 | 物模型：如何定义智能电灯？","content":"<p>你好，我是郭朝斌。</p><p>在基础篇最后一讲的智能家居项目里，我们设计了几个小场景，其中就包括智能电灯。如果你只是想自娱自乐，做一个可以用手机 App 控制的电灯，那么只要通过代码实现控制功能就足够了。至于是怎么控制的，电灯有什么状态上报，你自己知道就行了。</p><p>但是，如果你想让智能电灯真正成为物联网系统的一部分，那就不仅仅是在封闭的、确定的场景下写几行代码的事儿了。在物联网平台上，可能有其他人开发的应用需要显示你的智能电灯的状态；也可能有别的设备，比如光照传感器、智能音箱，在场景联动中要控制灯的状态。</p><p>所以，你需要把控制电灯打开和关闭的方法，告诉这些应用和产品的开发人员。同时，这些开发人员也需要了解，智能电灯的状态信息如何获取和解析。那么，你面临的第一个问题就是，<strong>用什么方式提供这些接口信息呢？</strong></p><p>另外，市面上不止一款智能电灯，如果要一一适配，那工作量肯定很大，而且扩展起来会很困难。那么，你面临的第二个问题就是，<strong>平台应用如何避免针对每款智能灯进行定制开发呢？</strong></p><p>计算机领域的软件体系结构采用的是一种<strong>层</strong>的结构，所以有人说过这么一句名言：<strong>“计算机科学领域的任何问题，都可以通过增加一个间接的中间层来解决。”</strong></p><p>按照这个思路，我们就可以在智能电灯实体和平台之间，增加一层标准规范来解决这些问题。就像，你使用不同的浏览器访问极客时间的网站，都可以看到课程的文本、音频、视频等内容，因为这些内容都是基于 <strong>HTML</strong> （HyperText Markup Language，超文本标记语言）等规范组织的。</p><!-- [[[read_end]]] --><p>物联网中的这层规范就是 Thing Specification Language，简称 <strong>TSL</strong>。使用 TSL 描述的物联网中的实体模型，就是<strong>“物模型”</strong>，或者叫做“产品模型”，也有叫“数据模板”的。不过，我认为“物模型”更有物联网专属的感觉，所以在咱们这门课里我都会用“物模型”这个叫法。</p><h2>物模型和设备的关系是什么？</h2><p>物模型是物理世界的实体东西的一个抽象，是进行数字化描述后，用于数字世界的数字模型。这么说可能有点绕，更直接一点说就是，物模型是使用计算机可以理解的语言，说清楚这个产品<strong>是什么</strong>、<strong>能做什么事情</strong>，以及<strong>可以提供哪些信息</strong>。</p><p>而抽象就是要提取出产品的共同特征，形成模型。以智能灯为例，不同的灯，尽管规格不同，但它们的属性是相似，比如都有开关状态的属性，功能逻辑也相仿。我们可以将这些特征标准化，形成智能灯的物模型。</p><p>反过来，物模型也规约了设备的功能。新增加的设备，如果是同一类型的，在设计、研发中，会遵循相同的功能定义，有相同的特征，实现相同的服务。比如，灯都应该有“开”和“关”两种状态。</p><p><img src=\"https://static001.geekbang.org/resource/image/dd/d7/dd2054abb168001194e69873d9f7bbd7.jpg?wh=2700*1163\" alt=\"\"></p><h2>为什么要使用物模型？</h2><p>基于共同的抽象特征，物模型可以让应用程序不再针对一个个的产品设备，而是同一类设备采用相同的处理逻辑。这实际上是<strong>应用开发的基础</strong>。当烟感传感器的数值触发报警时，即使是不同品牌的烟感产品，应用程序也可以对数值做相同的处理和判断，否则只能分别进行数值分析。</p><p>另外，物模型中，设备的功能是明确定义的，可以方便地实现场景联动。比如，光线传感器可以基于光照强度，向智能电灯发送亮度的控制命令，或者开和关的命令。</p><h2>如何定义物模型？</h2><p>那么，如何定义智能电灯的物模型呢？这里我想告诉你结论，我们一般是通过属性、事件和动作这三种功能元素来定义。接下来，我就一一和你介绍。</p><p>我们知道，智能电灯的状态，要么是打开，要么是关闭；当进行控制时，这两种状态还会相互转换。此外，有些灯还可以根据需求设置不同的亮度、颜色和色温等。</p><p>它们的共同点就是，都描述了产品设备运行时的某种状态，我们用<strong>属性（Property）</strong>来表示。</p><p>属性的特点是可读可写。也就是说，应用程序可以读取属性，也可以设置设备的属性。我们还可以看到类似的例子，比如环境监测设备的温度、湿度这两个属性等。</p><p>如果智能电灯在运行过程中，出现了低电压的情况，或者发生了硬件故障，那么联网的设备可以将这些信息发送出去，通知你来及时作出处理。</p><p>这类由产品设备在运行过程中产生的信息、告警和故障等，就是<strong>事件（Event）</strong>。</p><p>一个事件可以包含多个输出参数。事件不同于属性，事件是设备上报的，不能由应用来设置。类似的例子，还有某任务完成时的消息，环境传感器检测到污染物的告警等。</p><p>我们再看生活中关于灯的一个使用场景：第一次约会的时候，你希望灯能够烘托出浪漫的气氛，就要调节灯的颜色、亮度和色温。如果分别设置属性，将会非常繁琐，这时你会想到要为灯增加一个场景模式的功能，一个命令就可以设置到浪漫模式。</p><p>这种设备可以被调用的能力或者方法，就是<strong>动作（Action）</strong>，也被称作<strong>服务（Service）</strong>。</p><p>动作由应用下发给设备，设备可以返回结果给应用。从执行的流程看，动作还可以进一步分为同步和异步。这取决于动作是否是个耗时的操作，以及其他应用逻辑对于动作执行结果的依赖关系。</p><p>你可能想，设置属性也可以改变设备的状态，那它们的区别是什么呢？相比于属性，动作是应用下发到设备的控制命令；动作可通过一条指令实现更复杂的业务逻辑，比如，调低温度 5 度，旋转摄像头 30°等。</p><p><img src=\"https://static001.geekbang.org/resource/image/fc/e7/fc9a7eef37e61930d6f8fd761c5f97e7.jpg?wh=2700*1069\" alt=\"\"></p><p>到这里，我们定义了属性、事件和动作这三类功能，也就完成了物模型的定义。</p><p>接下来，我们要做的是通过数据来描述它们。和编程语言一样，作为一种模型语言，物模型的数据也有不同的数据类型。它们主要包括六种：</p><ol>\n<li><strong>布尔型</strong>（Bool）：非真即假的二值型变量。例如，开关功能只有开、关两种状态。</li>\n<li><strong>整数型</strong>（Int）：可用于线性调节的整数变量。例如，电灯的亮度是一个整数范围。</li>\n<li><strong>字符<strong><strong>串</strong></strong>型</strong>（String）：以字符串形式表达的功能点。例如，灯的位置。</li>\n<li><strong>浮点型</strong>（Float）：精度为浮点型的功能点。例如，电压值的范围是0.0 - 24.0。</li>\n<li><strong>枚举型</strong>（Enum）：自定义的有限集合值。例如，灯的颜色有白色、红色、黄色等。</li>\n<li><strong>时间型</strong>（Timestamp）：String 类型的 UTC 时间戳。</li>\n</ol><p>对于整数型、浮点型的数值，它们的单位可以是百分比、电压、米等。</p><p>物模型一般是用 <strong>JSON 格式</strong>来表述模型元素。JSON 是 Web 开发中，经常使用的数据格式，相比于 XML，它更加简洁、清晰，也更轻量级。</p><p>在实践中，你手动写完 JSON 格式的物模型后，可以使用检测工具来验证语法是否正确，比如，在线检测工具 <a href=\"https://jsonschemalint.com/\">JSON Schema Lint</a>。</p><p>接下来，我们就按照属性、事件、动作/服务这三个要素，一起看看如何用JSON格式来定义智能电灯的物模型吧。</p><h2>定义智能电灯的物模型</h2><p>智能电灯的开关属性是布尔类型，是必须有的属性。它可以通过 JSON 表述如下：</p><pre><code>{\n      &quot;id&quot;: &quot;power_switch&quot;,   //属性的唯一标识\n      &quot;name&quot;: &quot;电灯开关&quot;,      //名称\n      &quot;desc&quot;: &quot;控制电灯开灭&quot;,   //属性的详细描述\n      &quot;required&quot;: true,       //表示此属性是否必需包含，是\n      &quot;mode&quot;: &quot;rw&quot;,           //属性的模式，r代表读，w代表写\n      &quot;define&quot;: {             //属性的数值定义\n        &quot;type&quot;: &quot;bool&quot;,       //数值的类型，布尔\n        &quot;mapping&quot;: {          //具体数值的含义\n          &quot;0&quot;: &quot;关&quot;,           //0表示灯关闭\n          &quot;1&quot;: &quot;开&quot;            //1表示灯打开\n        }\n      }\n    }\n</code></pre><p>智能电灯的电压是需要监控的数值，当电压低时，可以上报这个事件。这个事件有一个参数，即电压值，数据类型是浮点类型。JSON 格式的描述如下：</p><pre><code>{\n      &quot;id&quot;: &quot;low_voltage&quot;,      //事件唯一标识\n      &quot;name&quot;: &quot;LowVoltage&quot;,      //事件名称\n      &quot;desc&quot;: &quot;Alert for device voltage is low&quot;,  //事件的描述\n      &quot;type&quot;: &quot;alert&quot;,          //事件的类型，告警\n      &quot;required&quot;: false,        //表示此属性是否必需包含，否\n      &quot;params&quot;: [                //事件的参数\n        {\n          &quot;id&quot;: &quot;voltage&quot;,        //事件参数的唯一标识\n          &quot;name&quot;: &quot;Voltage&quot;,      //事件参数的名称\n          &quot;desc&quot;: &quot;Current voltage&quot;,  //参数的描述\n          &quot;define&quot;: {                 //参数的数值定义\n            &quot;type&quot;: &quot;float&quot;,          //数值类型，浮点数\n            &quot;unit&quot;: &quot;V&quot;,              //数值的单位，伏\n            &quot;step&quot;: &quot;1&quot;,              //数值变化的步长，1\n            &quot;min&quot;: &quot;0.0&quot;,              //数值的最小值\n            &quot;max&quot;: &quot;24.0&quot;,             //数值的最大值\n            &quot;start&quot;: &quot;1&quot;                //事件的起始值\n          }\n        }\n      ]\n    }\n</code></pre><p>动作的定义，和属性、事件的定义过程类似，这里我就不再单独解释了。我们直接将所有属性、事件和动作合并，就得到了智能电灯物模型的完整JSON格式：</p><pre><code>{\n  &quot;version&quot;: &quot;1.0&quot;,            //模型版本\n  &quot;properties&quot;: [              //属性列表\n    {\n      &quot;id&quot;: &quot;power_switch&quot;,    //电灯开关属性\n      &quot;name&quot;: &quot;电灯开关&quot;,\n      &quot;desc&quot;: &quot;控制电灯开灭&quot;,\n      &quot;required&quot;: true,\n      &quot;mode&quot;: &quot;rw&quot;,\n      &quot;define&quot;: {\n        &quot;type&quot;: &quot;bool&quot;,\n        &quot;mapping&quot;: {\n          &quot;0&quot;: &quot;关&quot;,\n          &quot;1&quot;: &quot;开&quot;\n        }\n      }\n    },\n    {\n      &quot;id&quot;: &quot;brightness&quot;,        //亮度属性\n      &quot;name&quot;: &quot;亮度&quot;,\n      &quot;desc&quot;: &quot;灯光亮度&quot;,\n      &quot;mode&quot;: &quot;rw&quot;,\n      &quot;define&quot;: {\n        &quot;type&quot;: &quot;int&quot;,\n        &quot;unit&quot;: &quot;%&quot;,\n        &quot;step&quot;: &quot;1&quot;,\n        &quot;min&quot;: &quot;0&quot;,\n        &quot;max&quot;: &quot;100&quot;,\n        &quot;start&quot;: &quot;1&quot;\n      }\n    },\n    {\n      &quot;id&quot;: &quot;color&quot;,            //电灯颜色属性\n      &quot;name&quot;: &quot;颜色&quot;,\n      &quot;desc&quot;: &quot;灯光颜色&quot;,\n      &quot;mode&quot;: &quot;rw&quot;,\n      &quot;define&quot;: {\n        &quot;type&quot;: &quot;enum&quot;,\n        &quot;mapping&quot;: {\n          &quot;0&quot;: &quot;Red&quot;,\n          &quot;1&quot;: &quot;Green&quot;,\n          &quot;2&quot;: &quot;Blue&quot;\n        }\n      }\n    },\n    {\n      &quot;id&quot;: &quot;color_temp&quot;,        //色温属性\n      &quot;name&quot;: &quot;色温&quot;,\n      &quot;desc&quot;: &quot;灯光冷暖&quot;,\n      &quot;mode&quot;: &quot;rw&quot;,\n      &quot;define&quot;: {\n        &quot;type&quot;: &quot;int&quot;,\n        &quot;min&quot;: &quot;0&quot;,\n        &quot;max&quot;: &quot;100&quot;,\n        &quot;start&quot;: &quot;0&quot;,\n        &quot;step&quot;: &quot;10&quot;,\n        &quot;unit&quot;: &quot;%&quot;\n      }\n    }\n  ],\n  &quot;events&quot;: [                        //事件列表\n    {\n      &quot;id&quot;: &quot;status_report&quot;,          //运行状态报告\n      &quot;name&quot;: &quot;DeviceStatus&quot;,\n      &quot;desc&quot;: &quot;Report the device status&quot;,\n      &quot;type&quot;: &quot;info&quot;,\n      &quot;required&quot;: false,\n      &quot;params&quot;: [                      //事件参数列表\n        {\n          &quot;id&quot;: &quot;status&quot;,\n          &quot;name&quot;: &quot;running_state&quot;,\n          &quot;desc&quot;: &quot;Report current device running state&quot;,\n          &quot;define&quot;: {\n            &quot;type&quot;: &quot;bool&quot;,\n            &quot;mapping&quot;: {\n              &quot;0&quot;: &quot;normal&quot;,\n              &quot;1&quot;: &quot;fault&quot;\n            }\n          }\n        },\n        {\n          &quot;id&quot;: &quot;message&quot;,\n          &quot;name&quot;: &quot;Message&quot;,\n          &quot;desc&quot;: &quot;Some extra message&quot;,\n          &quot;define&quot;: {\n            &quot;type&quot;: &quot;string&quot;,\n            &quot;min&quot;: &quot;0&quot;,\n            &quot;max&quot;: &quot;64&quot;\n          }\n        }\n      ]\n    },\n    {\n      &quot;id&quot;: &quot;low_voltage&quot;,            //低电压告警事件\n      &quot;name&quot;: &quot;LowVoltage&quot;,\n      &quot;desc&quot;: &quot;Alert for device voltage is low&quot;,\n      &quot;type&quot;: &quot;alert&quot;,\n      &quot;required&quot;: false,\n      &quot;params&quot;: [\n        {\n          &quot;id&quot;: &quot;voltage&quot;,\n          &quot;name&quot;: &quot;Voltage&quot;,\n          &quot;desc&quot;: &quot;Current voltage&quot;,\n          &quot;define&quot;: {\n            &quot;type&quot;: &quot;float&quot;,\n            &quot;unit&quot;: &quot;V&quot;,\n            &quot;step&quot;: &quot;1&quot;,\n            &quot;min&quot;: &quot;0.0&quot;,\n            &quot;max&quot;: &quot;24.0&quot;,\n            &quot;start&quot;: &quot;1&quot;\n          }\n        }\n      ]\n    },\n    {\n      &quot;id&quot;: &quot;hardware_fault&quot;,            //硬件错误事件\n      &quot;name&quot;: &quot;Hardware_fault&quot;,\n      &quot;desc&quot;: &quot;Report hardware fault&quot;,\n      &quot;type&quot;: &quot;fault&quot;,\n      &quot;required&quot;: false,\n      &quot;params&quot;: [\n        {\n          &quot;id&quot;: &quot;name&quot;,\n          &quot;name&quot;: &quot;Name&quot;,\n          &quot;desc&quot;: &quot;Name like: memory,tf card, censors ...&quot;,\n          &quot;define&quot;: {\n            &quot;type&quot;: &quot;string&quot;,\n            &quot;min&quot;: &quot;0&quot;,\n            &quot;max&quot;: &quot;64&quot;\n          }\n        },\n        {\n          &quot;id&quot;: &quot;error_code&quot;,\n          &quot;name&quot;: &quot;Error_Code&quot;,\n          &quot;desc&quot;: &quot;Error code for fault&quot;,\n          &quot;define&quot;: {\n            &quot;type&quot;: &quot;int&quot;,\n            &quot;unit&quot;: &quot;&quot;,\n            &quot;step&quot;: &quot;1&quot;,\n            &quot;min&quot;: &quot;0&quot;,\n            &quot;max&quot;: &quot;2000&quot;,\n            &quot;start&quot;: &quot;1&quot;\n          }\n        }\n      ]\n    }\n  ],\n  &quot;actions&quot;: [],                  //动作列表\n  &quot;profile&quot;: {                    //产品参数\n    &quot;ProductId&quot;: &quot;8D1GQLE4VA&quot;,    //产品ID\n    &quot;CategoryId&quot;: &quot;141&quot;            //产品分类编号\n  }\n}\n</code></pre><h2>每个模型都要从头定义吗？</h2><p>那我们在创建自己的新模型时，是不是每次都需要从头定义这些属性、事件和动作呢？有没有更简便的方式呢？答案当然是有的。</p><p>创建模型的时候，有拷贝和继承两种模式，这两种创建模式的不同主要体现在<strong>模型关系</strong>上。</p><p><strong>“拷贝”模式</strong>类似于编程语言中的值拷贝，新建模型与被拷贝模型有完全相同的三元素，两个模型相互独立，模型变更互不影响。</p><p><strong>“继承”模式</strong>就是面向对象编程中的继承概念，新建模型被定义为“子模型”，被继承的模型定义为“父模型”。</p><p>继承的具体特征是：</p><ol>\n<li>子模型继承父模型的所有要素，且继承的元素无法被修改。</li>\n<li>子模型可以再被继承，支持多层的继承关系。</li>\n<li>子模型可以创建独立的要素，但子模型中新增的要素不可以和所有上级父模型中的元素重名。</li>\n<li>当父模型中的元素发生变更时，子模型中继承自父模型的元素同步变更，保持与父模型一致。</li>\n</ol><p>以我们刚刚定义的智能电灯的物模型为例，如果要增加安装位置的属性，可以继承已有的模型，然后再增加安装位置的属性。（注意：下面的 JSON 表述省略了与父模型重复的内容。）</p><pre><code>{\n...\n{\n      &quot;id&quot;: &quot;name&quot;,                  //灯位置属性\n      &quot;name&quot;: &quot;灯位置名称&quot;,\n      &quot;desc&quot;: &quot;灯位置名称：书房、客厅等&quot;,\n      &quot;mode&quot;: &quot;rw&quot;,\n      &quot;required&quot;: false,\n      &quot;define&quot;: {\n        &quot;type&quot;: &quot;string&quot;,\n        &quot;min&quot;: &quot;0&quot;,\n        &quot;max&quot;: &quot;64&quot;\n      }\n    }\n...\n}\n</code></pre><p>到这里，我们已经了解了物模型，并且完整实践了一遍物模型的创建。接下来，我给你延伸一下，讲两个和物模型相关的概念。</p><h2>物模型的拓展应用</h2><p>你也许听到过“设备影子”和“数字孪生”这两个概念，它们和我们这里说的“物模型”是什么关系呢？</p><h3>设备影子</h3><p>设备影子用于<strong>缓存设备状态</strong>。应用程序可以通过设备影子直接获取设备最后一次更新的属性值，而无需每次都访问设备。设备在线时，可以直接获取应用指令；设备离线后，再次上线可以主动拉取应用指令。</p><p>我们可以再想象一个场景。如果设备网络稳定，很多应用程序请求获取设备状态，设备需要根据请求响应多次，即使响应的结果是一样的。但是可能设备本身处理能力有限，其实无法负载被请求多次的情况。</p><p>使用设备影子机制，设备只需要主动同步状态给设备影子一次，多个应用程序请求设备影子获取设备状态，即可获取设备最新状态，做到应用程序和设备的解耦。</p><p>再比如，智能电灯的开关状态这个属性，手机 App 可以远程控制，你也可以在本地通过物理开关改变。如果网络不稳定，那么平台上存储的状态，和电灯设备的真实状态可能会不一致，导致后续操作逻辑错误。</p><p>设备影子可以通过双向的同步，实现服务器端和设备端属性的一致，从而解决这个问题。</p><h3>数字孪生（Digital Twin）</h3><p>物模型是物理实体的数字化模型，但主要针对的是物联网中应用的开发和设备的互操作。</p><p>这个模型如果更进一步，集成了物理实体的各类数据，那就是物理实体的<strong>忠实映射</strong>。同时，在物理实体的整个生命周期中，它会和实体一起进化，积累各种信息和知识，并且促进物理实体的优化。这样的模型就是物理实体的数字孪生。</p><p>在工业物联网领域，这个概念已经有了很多的探讨和应用。</p><p>比如，特斯拉公司为其生产的每一辆电动汽车都建立了数字孪生模型，相关的模型数据保存在公司的数据库中，以便在测试中排查故障，为用户提供更好的服务。</p><h2>小结</h2><p>总结一下，在这一讲中，我通过智能电灯的例子讲解了物模型。</p><ol>\n<li>物模型是物理世界中产品设备的数字化模型，它对设备的共同特征进行了抽象，同时规约了设备的设计。</li>\n<li>物模型一般是使用 TSL 描述的 JSON 格式文件。</li>\n<li>物模型包括属性、事件和动作三个功能元素。其中，属性可读可写；事件可以包括多个参数；动作包括应用下发的命令，和设备返回的响应信息</li>\n</ol><p>在实践中，定义物模型时，你需要注意物模型三个功能元素的区别，尤其要了解属性和动作的联系和不同。不好的定义会给功能实现带来困难，比如，将智能电灯的“开”和“关”，定义为两个不同的动作。</p><p>物模型在物联网系统开发中，作用重大，它为应用开发提供了统一的数据模板，方便了场景联动的实现，同时，为平台上实现设备影子提供了基础。</p><p>类似地，数字孪生也正是建立在物理实体的数字模型之上的重要技术方向。这里作为一个引子，有兴趣的话，你可以深入了解一下，也许对你在工作中做系统设计有帮助。</p><h2>思考题</h2><p>最后，我还是给你留个思考题作为结尾。</p><p>物模型是实战开发的基础，咱们最后再通过一个练习来强化下学习效果吧。请你定义一个环境温湿度传感器的物模型。你可以从属性、事件、动作三个元素的角度思考一下，而且一定要动手写一写。</p><p>欢迎在留言区写出你的答案，和我一起交流一下。在后面的实战中，我们也会涉及到温湿度传感器的物模型。如果你的朋友对物联网有兴趣，也欢迎你将这个课程分享给他们一起学习进步。</p>","comments":[{"had_liked":false,"id":263909,"user_name":"Nior","can_delete":false,"product_type":"c1","uid":1089144,"ip_address":"","ucode":"FADC1F3CFA21FC","user_header":"https://static001.geekbang.org/account/avatar/00/10/9e/78/7663ed26.jpg","comment_is_top":false,"comment_ctime":1606292715,"is_pvip":false,"replies":[{"id":"95946","content":"������","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1606570264,"ip_address":"","comment_id":263909,"utype":1}],"discussion_count":5,"race_medal":0,"score":"87505638635","product_id":100063601,"comment_content":"结合厂商实际文档加深理解：<br>华为IoT物模型文档：https:&#47;&#47;support.huaweicloud.com&#47;usermanual-iothub&#47;iot_01_0017.html<br>小米IoT物模型文档：https:&#47;&#47;iot.mi.com&#47;new&#47;doc&#47;standard&#47;miot-spec&#47;spec","like_count":21,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510348,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606570264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047212,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fa/ac/6383e8d3.jpg","nickname":"Dr.Strangelove","note":"","ucode":"4DB604323CCAF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590671,"discussion_content":"小米那个失效了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665993197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"黑龙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147749,"avatar":"https://static001.geekbang.org/account/avatar/00/11/83/65/4348d407.jpg","nickname":"xHua","note":"","ucode":"C00B7CC98FBF03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548895,"discussion_content":"阿里 https://help.aliyun.com/document_detail/73727.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643441508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1275272,"avatar":"https://static001.geekbang.org/account/avatar/00/13/75/88/853d8186.jpg","nickname":"赵永鹏","note":"","ucode":"6A6135171093BB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364564,"discussion_content":"赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617520821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239277,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e8/ed/f9347e5e.jpg","nickname":"我的腿腿","note":"","ucode":"2AAA36A7C3AD75","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340683,"discussion_content":"我也准备说这个呢，才接触物联网开发，个人感觉华为写个更友好点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610097017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262843,"user_name":"doulefi123","can_delete":false,"product_type":"c1","uid":1077383,"ip_address":"","ucode":"CE9ECDEB71E32E","user_header":"https://static001.geekbang.org/account/avatar/00/10/70/87/ce84924a.jpg","comment_is_top":false,"comment_ctime":1605857547,"is_pvip":false,"replies":[{"id":"95460","content":"谢谢你的留言，多交流！","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1605966839,"ip_address":"","comment_id":262843,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44555530507","product_id":100063601,"comment_content":"物模型给我启发太大了，因为我是半路出家，现在我们的设备用mqtt订阅了多条消息（开、关等各种动作），如果改成物模型，订阅一条消息就可以了，相对经济些。再加上场景控制联动，能实现自由形式的功能。","like_count":11,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509995,"discussion_content":"谢谢你的留言，多交流！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605966839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263131,"user_name":"Socrakit","can_delete":false,"product_type":"c1","uid":1335223,"ip_address":"","ucode":"41A4D7D369B3AB","user_header":"https://static001.geekbang.org/account/avatar/00/14/5f/b7/c474f406.jpg","comment_is_top":false,"comment_ctime":1606015987,"is_pvip":true,"replies":[{"id":"95584","content":"������赞<br>温度、湿度的mode可以改为只读r","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1606137732,"ip_address":"","comment_id":263131,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23080852467","product_id":100063601,"comment_content":"&#47;&#47;环境温湿度传感器<br>{<br>  &quot;version&quot;: &quot;1.0&quot;, <br>  &quot;properties&quot;: [  <br>    {<br>      &quot;id&quot;: &quot;temperature&quot;,<br>      &quot;name&quot;: &quot;温度&quot;,<br>      &quot;desc&quot;: &quot;环境温度&quot;,<br>      &quot;mode&quot;: &quot;rw&quot;,<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;float&quot;,<br>        &quot;unit&quot;: &quot;℃&quot;,<br>        &quot;step&quot;: &quot;0.5&quot;,<br>        &quot;min&quot;: &quot;-40.0&quot;,<br>        &quot;max&quot;: &quot;120.0&quot;,<br>        &quot;start&quot;: &quot;0&quot;<br>      }<br>    },<br>    {<br>      &quot;id&quot;: &quot;humidity&quot;, <br>      &quot;name&quot;: &quot;湿度&quot;,<br>      &quot;desc&quot;: &quot;环境湿度&quot;,<br>      &quot;mode&quot;: &quot;rw&quot;,<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;float&quot;,<br>        &quot;unit&quot;: &quot;%&quot;,<br>        &quot;step&quot;: &quot;1&quot;,<br>        &quot;min&quot;: &quot;0&quot;,<br>        &quot;max&quot;: &quot;100&quot;,<br>        &quot;start&quot;: &quot;0&quot;<br>      }<br>    },<br>    {<br>      &quot;id&quot;: &quot;temperature_limit&quot;,<br>      &quot;name&quot;: &quot;温度上下限&quot;,<br>      &quot;desc&quot;: &quot;温度上下限&quot;,<br>      &quot;mode&quot;: &quot;rw&quot;,<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;float&quot;,<br>        &quot;max&quot;: &quot;80&quot;,<br>        &quot;min&quot;: &quot;-10&quot;<br>      }<br>    ,<br>    {<br>      &quot;id&quot;: &quot;humidity_limit&quot;,<br>      &quot;name&quot;: &quot;湿度上下限&quot;,<br>      &quot;desc&quot;: &quot;湿度上下限&quot;,<br>      &quot;mode&quot;: &quot;rw&quot;,<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;float&quot;,<br>        &quot;max&quot;: &quot;60&quot;,<br>        &quot;min&quot;: &quot;20&quot;<br>      }<br>    }<br>  ],<br>  &quot;events&quot;: [                  <br>    ......<br>    {<br>      &quot;id&quot;: &quot;low_humidity&quot;,     <br>      &quot;name&quot;: &quot;LowHumidity&quot;,<br>      &quot;desc&quot;: &quot;Alert for humidity is low&quot;,<br>      &quot;type&quot;: &quot;alert&quot;,<br>      &quot;required&quot;: false,<br>      &quot;params&quot;: [<br>        {<br>          &quot;id&quot;: &quot;humidity&quot;,<br>          &quot;name&quot;: &quot;Humidity&quot;,<br>          &quot;desc&quot;: &quot;Current Humidity&quot;,<br>          &quot;define&quot;: {<br>            .....<br>          }<br>        }<br>      ]<br>    },<br>\t{<br>      &quot;id&quot;: &quot;excess_temperature&quot;,  <br>      &quot;name&quot;: &quot;ExcessTemperature&quot;,<br>      &quot;desc&quot;: &quot;Alert for excess temperature&quot;,<br>      &quot;type&quot;: &quot;alert&quot;,<br>      &quot;required&quot;: false,<br>      &quot;params&quot;: [<br>        {<br>          &quot;id&quot;: &quot;temperature&quot;,<br>          &quot;name&quot;: &quot;Temperature&quot;,<br>          &quot;desc&quot;: &quot;Current temperature&quot;,<br>          &quot;define&quot;: {<br>            .....<br>          }<br>        }<br>      ]<br>    },<br>    ......<br>  ],<br>  ......<br>}","like_count":5,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510105,"discussion_content":"������赞\n温度、湿度的mode可以改为只读r","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606137732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263349,"user_name":"胡黎红","can_delete":false,"product_type":"c1","uid":1030757,"ip_address":"","ucode":"FAF3FAB57AE88A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/65/b731e674.jpg","comment_is_top":false,"comment_ctime":1606111777,"is_pvip":false,"replies":[{"id":"95575","content":"还没有统一的标准，各家平台都有自己的定义。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1606136638,"ip_address":"","comment_id":263349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18785980961","product_id":100063601,"comment_content":"tsl是标准么？","like_count":4,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510156,"discussion_content":"还没有统一的标准，各家平台都有自己的定义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606136638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264290,"user_name":"marquis","can_delete":false,"product_type":"c1","uid":1084392,"ip_address":"","ucode":"05DA7B5ADF7C53","user_header":"https://static001.geekbang.org/account/avatar/00/10/8b/e8/c1bd68fe.jpg","comment_is_top":false,"comment_ctime":1606406881,"is_pvip":false,"replies":[{"id":"95936","content":"������大赞","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1606568861,"ip_address":"","comment_id":264290,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10196341473","product_id":100063601,"comment_content":"&#47;&#47; 温湿度传感器的物模型设计<br>{<br>  &quot;version&quot;: &quot;1.0&quot;,         &#47;&#47;模型版本<br>  &quot;properties&quot;: [           &#47;&#47;属性列表<br>    {<br>      &quot;id&quot;: &quot;temp&quot;,    &#47;&#47;检测环境温度的属性<br>      &quot;name&quot;: &quot;温度检测&quot;,<br>      &quot;desc&quot;: &quot;检测设备周围环境的温度&quot;,<br>      &quot;required&quot;: true,<br>      &quot;mode&quot;: &quot;rw&quot;,         &#47;&#47;write是为了厂测模式进行校准。正常使用下不允许w，只能r<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;float&quot;,<br>        &quot;unit&quot;: &quot;℃&quot;||&quot;℉&quot;,<br>        &quot;step&quot;: &quot;1&quot;,<br>        &quot;min&quot;: &quot;0.0&quot;,      &#47;&#47;根据产品实际测试能力修改<br>        &quot;max&quot;: &quot;80.0&quot;,     &#47;&#47;根据产品实际测试能力修改<br>        &quot;start&quot;: &quot;1&quot;<br>                 }  <br>     },<br>    {<br>      &quot;id&quot;: &quot;humidity&quot;,    &#47;&#47;检测环境相对湿度的属性<br>      ……<br>     }，<br>   {<br>      &quot;id&quot;: &quot;Hightemp_threshold&quot;,    &#47;&#47;高温阈值<br>      &quot;name&quot;: &quot;高温阈值&quot;,<br>      &quot;desc&quot;: &quot;高温报警阈值&quot;,<br>      &quot;required&quot;: false,<br>      &quot;mode&quot;: &quot;rw&quot;,          <br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;float&quot;,<br>        &quot;unit&quot;: &quot;℃&quot;||&quot;℉&quot;,<br>        &quot;step&quot;: &quot;1&quot;,<br>        &quot;min&quot;: &quot;-10.0&quot;,      <br>        &quot;max&quot;: &quot;80.0&quot;,       <br>        &quot;start&quot;: &quot;1&quot;<br>                 }  <br>    ｝,<br>   {<br>      &quot;id&quot;: &quot;Lowtemp_threshold&quot;,    &#47;&#47;低温阈值<br>      ……<br>    ｝,<br>   {<br>      &quot;id&quot;: &quot;HowHumidity_threshold&quot;,&#47;&#47;高湿阈值<br>      ……<br>    ｝,<br>   {<br>      &quot;id&quot;: &quot;LowHumidity_threshold&quot;,&#47;&#47;低湿阈值<br>      ……<br>    ｝,<br>  ],  <br>  &quot;events&quot;: [                      &#47;&#47;事件列表<br>    {<br>      &quot;id&quot;: &quot;high_temp&quot;,           &#47;&#47;高温告警<br>      &quot;name&quot;: &quot;Hightemp&quot;,<br>      &quot;desc&quot;: &quot;Alert for temp is high than threshold&quot;,<br>      &quot;type&quot;: &quot;alert&quot;,<br>      &quot;required&quot;: false,<br>      &quot;params&quot;: [<br>        {<br>          &quot;id&quot;: &quot;temp&quot;,<br>          &quot;name&quot;: &quot;Hightemp&quot;,<br>          &quot;desc&quot;: &quot;Current temp&quot;,<br>          &quot;define&quot;: {<br>            &quot;type&quot;: &quot;float&quot;,<br>            &quot;unit&quot;: &quot;V&quot;,<br>            &quot;step&quot;: &quot;1&quot;,<br>            &quot;min&quot;: &quot;0.0&quot;,<br>            &quot;max&quot;: &quot;24.0&quot;,<br>            &quot;start&quot;: &quot;1&quot;<br>          }<br>        }<br>      ]<br>    },<br>    {<br>      &quot;id&quot;: &quot;low_temp&quot;,          &#47;&#47;低温告警<br>      ……<br>    },<br>    {<br>      &quot;id&quot;: &quot;high_humidity&quot;,     &#47;&#47;高湿告警<br>      ……<br>    },<br>      &quot;id&quot;: &quot;low_humidity&quot;,      &#47;&#47;低湿告警<br>      ……<br>    },<br>   {<br>      &quot;id&quot;: &quot;low_voltage&quot;,      &#47;&#47;供电电压不足告警<br>      ……<br>    },<br>  ],<br>  &quot;actions&quot;: [],                &#47;&#47;动作列表<br>  ……<br>}","like_count":3,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510500,"discussion_content":"������大赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606568861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262845,"user_name":"贤伟","can_delete":false,"product_type":"c1","uid":1496738,"ip_address":"","ucode":"02E467263201DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/a2/be61c162.jpg","comment_is_top":false,"comment_ctime":1605857971,"is_pvip":false,"replies":[{"id":"95459","content":"������ 是的，LwM2M是基于IPSO定义的这些，相比来说，它要比MQTT和CoAP这些应用层更进一步。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1605966781,"ip_address":"","comment_id":262845,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10195792563","product_id":100063601,"comment_content":"Lwm2m 协议中把物理实体都看作资源（resource），可以使用 XML 格式定义资源集合（标准和扩展的 ）。使用路径Object&#47;ObjectInstance&#47;Resource&#47;ResourceInstance 来操作资源（读、写、执行、订阅）。我理解和文中的属性相似，只是已经集成进了协议里，作为M2M沟通的通用语言。  <br>","like_count":2,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509997,"discussion_content":"������ 是的，LwM2M是基于IPSO定义的这些，相比来说，它要比MQTT和CoAP这些应用层更进一步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605966781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057396,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/0CL2N0xC7M9sQ0fVGHXibkCK1EZibtjylLQ1NsiaPCN0fCeNkDuuibDZahC8iaeiafDnzXlicCW0xHxWHw2Ubz7ov9nJg/132","nickname":"cras","note":"","ucode":"C6E59AEE48B763","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330871,"discussion_content":"目前广域网低功耗通信平台电信、移动NB-IOT都优先采用LwM2M。面在实际应用中较多的玩家都是透传。不知大家怎么认识LwM2M，欢迎交流","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606724442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057396,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/0CL2N0xC7M9sQ0fVGHXibkCK1EZibtjylLQ1NsiaPCN0fCeNkDuuibDZahC8iaeiafDnzXlicCW0xHxWHw2Ubz7ov9nJg/132","nickname":"cras","note":"","ucode":"C6E59AEE48B763","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330868,"discussion_content":"LwM2M协议定义比较复杂，基于应用协议COAP再构建一层设备协议，灵活性感觉不是太好\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606724245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275214,"user_name":"lgtao","can_delete":false,"product_type":"c1","uid":1022718,"ip_address":"","ucode":"5854B3CBAC87CC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9a/fe/3e37a60e.jpg","comment_is_top":false,"comment_ctime":1611391970,"is_pvip":false,"replies":[{"id":"100778","content":"可以借鉴腾讯、阿里等平台的功能实现，在这个过程中结合自己的需求做调整。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1612588675,"ip_address":"","comment_id":275214,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5906359266","product_id":100063601,"comment_content":"郭老师能否讲讲物模型在实际物联平台开发过程中具体怎么落地实现？有什么最佳实践案例？","like_count":1,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514265,"discussion_content":"可以借鉴腾讯、阿里等平台的功能实现，在这个过程中结合自己的需求做调整。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612588675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266604,"user_name":"FreeMason","can_delete":false,"product_type":"c1","uid":1340120,"ip_address":"","ucode":"3D58AC2F9AB345","user_header":"https://static001.geekbang.org/account/avatar/00/14/72/d8/9eedbc5e.jpg","comment_is_top":false,"comment_ctime":1607413037,"is_pvip":false,"replies":[{"id":"97102","content":"👍思考很深入<br>要看场景，比如自动驾驶，也对实时要求很高。所以需要边缘计算。<br>我们在这里讨论物联网，但是一些场景还是需要一体的系统，加上实时操作系统，并不一定所有数据要联网处理","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607758031,"ip_address":"","comment_id":266604,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5902380333","product_id":100063601,"comment_content":"工业物联网（本人互联网，因知识局限性，可能有误差）<br>动作（服务）这块好实现吗？感觉工业级对低延时、稳定要求应该很高。进行动作操作时，感觉像是请示-响应模式，如何知道设备接收指令成功并且正常执行了(类似Qos)，但对于工业级出现较高延时与异常（执行未成功）或指令重复应该是比较严重的事情，延时可以使用 5G 来解决，但在可靠性稳定性与指令重复上现有可靠的方案吗？","like_count":1,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511325,"discussion_content":"👍思考很深入\n要看场景，比如自动驾驶，也对实时要求很高。所以需要边缘计算。\n我们在这里讨论物联网，但是一些场景还是需要一体的系统，加上实时操作系统，并不一定所有数据要联网处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607758031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1568083,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/tYopaQ4kGyuG9GCmfUxicicfDdTYnClLdYd4jzldD2ppBRsbfa487l2f5l5unwibrxlqkjFPVicOfN04YeR16QACag/132","nickname":"Geek_matrix","note":"","ucode":"D7F6F2ED9628CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335890,"discussion_content":"我是做工业的，主要是坐汽车行业的设备和生产线。个人感觉自动驾驶相关技术和模型与工业物联网会更贴合。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608367738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264278,"user_name":"marquis","can_delete":false,"product_type":"c1","uid":1084392,"ip_address":"","ucode":"05DA7B5ADF7C53","user_header":"https://static001.geekbang.org/account/avatar/00/10/8b/e8/c1bd68fe.jpg","comment_is_top":false,"comment_ctime":1606403025,"is_pvip":false,"replies":[{"id":"95937","content":"������","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1606568903,"ip_address":"","comment_id":264278,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5901370321","product_id":100063601,"comment_content":"谢谢郭老师。在TSL物模型中，我主要学习到三个关键参数“属性，事件和动作”之间的关系。<br>用自己的话总结：属性，是产品能到达的某种状态。而有了属性，使用者才能通过应用去控制产品到达某种属性状态，这就是动作。事件就是产品在遇到主动完成属性切换或者被动检测到属性变换事件，上报给应用的信息。","like_count":2,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510493,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606568903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262725,"user_name":"钦开","can_delete":false,"product_type":"c1","uid":1130877,"ip_address":"","ucode":"DE66D83B7F9124","user_header":"https://static001.geekbang.org/account/avatar/00/11/41/7d/21f7f458.jpg","comment_is_top":false,"comment_ctime":1605833282,"is_pvip":false,"replies":[{"id":"95462","content":"这个在网关那节我会讲到。简单说物联网需要边缘计算。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1605967143,"ip_address":"","comment_id":262725,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5900800578","product_id":100063601,"comment_content":"老师，您觉得边缘计算和物联网是一种什么关系呢？","like_count":1,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509943,"discussion_content":"这个在网关那节我会讲到。简单说物联网需要边缘计算。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605967143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057396,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/0CL2N0xC7M9sQ0fVGHXibkCK1EZibtjylLQ1NsiaPCN0fCeNkDuuibDZahC8iaeiafDnzXlicCW0xHxWHw2Ubz7ov9nJg/132","nickname":"cras","note":"","ucode":"C6E59AEE48B763","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330874,"discussion_content":"边缘计算是物联网中基于网络拓扑设计的业务运算架构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606724614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342564,"user_name":"Geek_58fcf2","can_delete":false,"product_type":"c1","uid":2918421,"ip_address":"","ucode":"3B052EBC012E8B","user_header":"","comment_is_top":false,"comment_ctime":1650346717,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650346717","product_id":100063601,"comment_content":"学习总价：<br>1.物模型是物体进行抽象的数字花模型。TSL。<br>2.物模型一般包括属性、事件、动作<br>3.物模型是Json格式文件描述<br>4.设备影子是要一个中间件。保存设备的状态。当需要设备的各种信息时与设备影子同步信息。<br>5.数字孪生：物理实体的真实映射。","like_count":0},{"had_liked":false,"id":338951,"user_name":"flying_geek","can_delete":false,"product_type":"c1","uid":1069240,"ip_address":"","ucode":"ECA0022638FF2E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mwpTx4emwpxgMvuVAjkOb9CNaEcjCNYAtHwfU2m6Ek0CJvmsPpYa3yVibsOvtjym2cibUHn4gfOf7OIX9fDLTrlA/132","comment_is_top":false,"comment_ctime":1647829301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647829301","product_id":100063601,"comment_content":"请问老师，物模型里，设备向服务器请求的抽象怎么做的。 如设备请求同步时间，设备登入，等等系统性命令，感谢","like_count":0},{"had_liked":false,"id":335598,"user_name":"阿甘","can_delete":false,"product_type":"c1","uid":1057843,"ip_address":"","ucode":"BC93175B70E05D","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","comment_is_top":false,"comment_ctime":1645600753,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645600753","product_id":100063601,"comment_content":"物模型貌似只起到文档的作用？另外，这个建模语言没有标准吗？类似于yang协议。","like_count":0},{"had_liked":false,"id":335310,"user_name":"徐李","can_delete":false,"product_type":"c1","uid":1213325,"ip_address":"","ucode":"41550F6CA1E112","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","comment_is_top":false,"comment_ctime":1645446560,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645446560","product_id":100063601,"comment_content":"请你定义一个环境温湿度传感器的物模型。你可以从属性、事件、动作三个元素的角度思考一下<br><br>属性：温度，湿度<br>事件：温度超过阈值报警，湿度超过阈值报警<br>动作：温度报警后，联动短信推送，声光报警等","like_count":0},{"had_liked":false,"id":332959,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":2143115,"ip_address":"","ucode":"70AAA76ADEF7B1","user_header":"https://static001.geekbang.org/account/avatar/00/20/b3/8b/3f47b23b.jpg","comment_is_top":false,"comment_ctime":1643884643,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1643884643","product_id":100063601,"comment_content":"老师有几个问题想要请教下：<br>1、 那个开关的英文用的mapping，映射。但是其实感觉不如就用switch或者switch_status，感觉可读性更强。是不是可以？还是说约定俗成用mapping。<br>2、影子设备这块有点疑问，其实它只是解决服务器上，多个功能的状态不统一的问题，但是如果某一边的状态是错的，那其实影子这里也会是错的，而需要下次同步之类的事件发生才会更新对么？比如设备上报了一个开，然后离线并且关了，这个时候影子设备其实还是开的，所有功能调用都会显示该设备诶是开启。下次设备在线并更新了状态，就会让状态全平台统一改回去。是这个意思么？<br>3、模型里面重新加了一些属性，比如课程中是加了等的位置属性；这个属性属于新的功能。实际操作中是怎么维护的呢？是在平台里面登记和审批；还是说外部直接调用父模型，然后自己添加就可以。有没有这样的管控逻辑可以介绍下~<br>谢谢老师！学习以后获益良多！！！","like_count":0},{"had_liked":false,"id":332654,"user_name":"xHua","can_delete":false,"product_type":"c1","uid":1147749,"ip_address":"","ucode":"C00B7CC98FBF03","user_header":"https://static001.geekbang.org/account/avatar/00/11/83/65/4348d407.jpg","comment_is_top":false,"comment_ctime":1643441473,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1643441473","product_id":100063601,"comment_content":"设备影子该如何实现","like_count":0,"discussions":[{"author":{"id":1266677,"avatar":"https://static001.geekbang.org/account/avatar/00/13/53/f5/7eba299b.jpg","nickname":"周天宝","note":"","ucode":"5574296B7C6A08","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590098,"discussion_content":"把这个JSON存到redis里，其他服务要查这个设备状态直接读取redis，设备定期更新这个json，    devideID_123456789：{&#34;设备ID&#34;：123456789, &#34;温度&#34;:35, &#34;采集时间&#34;: &#34;2022-10-12 12:12:12&#34;, 设备状态:开启}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665537554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322727,"user_name":"Geek_1bbdee","can_delete":false,"product_type":"c1","uid":2836446,"ip_address":"","ucode":"1EB65CEA584C54","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0OaV2KicIgpZdNYqIyqcM1ZfF9QPE8QtXaVicTfGuWfx9zRgatNYJDV2DBzrUPXdl7msYsf4Jia3cY6lRThcFGspg/132","comment_is_top":false,"comment_ctime":1637569601,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637569601","product_id":100063601,"comment_content":"老师博大精深，受益匪浅。","like_count":0},{"had_liked":false,"id":278978,"user_name":"9ambition","can_delete":false,"product_type":"c1","uid":1704988,"ip_address":"","ucode":"E6463C18E8CF0B","user_header":"https://static001.geekbang.org/account/avatar/00/1a/04/1c/15c00997.jpg","comment_is_top":false,"comment_ctime":1613502446,"is_pvip":false,"replies":[{"id":"102061","content":"赞","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1614579969,"ip_address":"","comment_id":278978,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1613502446","product_id":100063601,"comment_content":"环境温湿度传感器的物模型：<br>{<br>&quot;verison&quot;:1.0,<br>&quot;properties&quot;:[<br>{&quot;id&quot;:&quot;Temp&quot;,<br> &quot;name&quot;:&quot;Temprature&quot;,<br> &quot;desc&quot;:&quot;Temperature status&quot;,<br> &quot;required&quot;:&quot;True&quot;,<br> &quot;mode&quot;:&quot;r&quot;,<br> &quot;define&quot;:{&quot;type&quot;:&quot;float&quot;,&quot;unit&quot;:&quot;degreeC&quot;,&quot;step&quot;:0.1,&quot;min&quot;:15,&quot;max&quot;:35,&quot;start&quot;:20}},<br>{&quot;id&quot;:&quot;Humid&quot;,<br> &quot;name&quot;:&quot;Humidity&quot;,<br> &quot;desc&quot;:&quot;Humidity status&quot;,<br> &quot;required&quot;:&quot;True&quot;,<br> &quot;mode&quot;:&quot;r&quot;,<br> &quot;define&quot;:{&quot;type&quot;:&quot;int&quot;,&quot;unit&quot;:&quot;%&quot;,&quot;step&quot;:1,&quot;min&quot;:0,&quot;max&quot;:100,&quot;start&quot;:60}}],<br><br>&quot;events&quot;:[{<br>  &quot;id&quot;:&quot;StatusReport&quot;, <br>  &quot;name&quot;:&quot;DeviceStatus&quot;,<br>  &quot;desc&quot;:&quot;ReportDeviceStatus&quot;,<br>  &quot;required&quot;:&quot;True&quot;,<br>  &quot;type&quot;:&quot;info&quot;,<br>  &quot;params&quot;:[{&quot;id&quot;:&quot;Status&quot;,&quot;name&quot;:&quot;RunningStatus&quot;,&quot;desc&quot;:&quot;ReportRunningStatus&quot;,&quot;define&quot;:{&quot;type&quot;:&quot;int&quot;,&quot;mapping&quot;:{&quot;0&quot;:&quot;abnormal&quot;,&quot;1&quot;:&quot;normal&quot;}}}]},<br>{&quot;id&quot;:&quot;LowTempReport&quot;,<br> &quot;name&quot;:&quot;LowTemperatureStatus&quot;,<br> &quot;desc&quot;:&quot;ReportLowTemperatureStatus&quot;,<br> &quot;required&quot;:&quot;True&quot;,<br> &quot;type&quot;:&quot;Alert&quot;,<br> &quot;params&quot;:[{&quot;id&quot;:&quot;Temp&quot;,&quot;name&quot;:&quot;Temperature&quot;,&quot;desc&quot;:&quot;CurrentTemperature&quot;,&quot;define&quot;:{&quot;type&quot;:&quot;float&quot;,&quot;unit&quot;:&quot;degreeC&quot;,&quot;step&quot;:0.1,&quot;min&quot;:10,&quot;max&quot;:15,&quot;start&quot;:15}}]}, <br>{&quot;id&quot;:&quot;LowHumidReport&quot;,<br>&quot;name&quot;:&quot;LowHumidityStatus&quot;,<br>&quot;desc&quot;:&quot;ReportLowHumidityStatus&quot;,<br>&quot;required&quot;:&quot;True&quot;,<br>&quot;type&quot;:&quot;Alert&quot;,<br>&quot;params&quot;:[{&quot;id&quot;:&quot;Humid&quot;,&quot;name&quot;:&quot;Humidity&quot;,&quot;desc&quot;:&quot;CurrentHumidity&quot;,&quot;define&quot;:{&quot;type&quot;:&quot;int&quot;,&quot;unit&quot;:&quot;%&quot;,&quot;step&quot;:1,&quot;min&quot;:10,&quot;max&quot;:30,&quot;start&quot;:30}}]},<br>{&quot;id&quot;:&quot;HardwareFault&quot;,<br>&quot;name&quot;:&quot;HardwareFaultReport&quot;,<br>&quot;desc&quot;:&quot;TandHSensorReport&quot;,<br>&quot;required&quot;:&quot;True&quot;,<br>&quot;type&quot;:&quot;Alert&quot;,<br>&quot;params&quot;:[{&quot;id&quot;:&quot;HWName&quot;,&quot;name&quot;:&quot;HardwareName&quot;,&quot;desc&quot;:&quot;HardwareDeviceName&quot;,&quot;define&quot;:{&quot;type&quot;:&quot;int&quot;,&quot;mapping&quot;:{&quot;0&quot;:&quot;TandH&quot;,&quot;1&quot;:&quot;Battery&quot;,&quot;2&quot;:&quot;WirelessModule&quot;,&quot;3&quot;:&quot;MCU&quot;}}}]},{&quot;id&quot;:&quot;ErrCodeHWFault&quot;,<br>&quot;name&quot;:&quot;ErrorCodeforHardwareFaultReport&quot;,<br>&quot;desc&quot;:&quot;ErrorCodeforHardwareFaultReport&quot;,<br>&quot;required&quot;:&quot;True&quot;,<br>&quot;type&quot;:&quot;Alert&quot;,<br>&quot;params&quot;:[{&quot;id&quot;:&quot;ErrCode&quot;,&quot;name&quot;:&quot;ErrorCode&quot;,&quot;desc&quot;:&quot;ErrorCode&quot;,&quot;define&quot;:{&quot;type&quot;:&quot;int&quot;,&quot;mapping&quot;:{&quot;0&quot;:&quot;Broken&quot;,&quot;1&quot;:&quot;Notgood&quot;,&quot;2&quot;:&quot;LowPower&quot;,&quot;3&quot;:&quot;NoData&quot;}}}]}],<br>&quot;action&quot;:[],<br>&quot;profile&quot;:{&quot;ProductID&quot;:&quot;AFJEIWPF&quot;,&quot;CatergoryID&quot;:&quot;01&quot;}}","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515583,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614579969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273363,"user_name":"Geek_7dd590","can_delete":false,"product_type":"c1","uid":2413319,"ip_address":"","ucode":"B70579B53EAEA5","user_header":"","comment_is_top":false,"comment_ctime":1610551143,"is_pvip":false,"replies":[{"id":"99212","content":"是否为必要的元素","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610777094,"ip_address":"","comment_id":273363,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610551143","product_id":100063601,"comment_content":"required 字段   true和false 什么区别？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513578,"discussion_content":"是否为必要的元素","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610777094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272848,"user_name":"九三","can_delete":false,"product_type":"c1","uid":1454691,"ip_address":"","ucode":"7D093ED7273CBE","user_header":"https://static001.geekbang.org/account/avatar/00/16/32/63/fa24f92e.jpg","comment_is_top":false,"comment_ctime":1610332018,"is_pvip":false,"replies":[{"id":"99217","content":"不是的，事件与属性不同。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610777580,"ip_address":"","comment_id":272848,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610332018","product_id":100063601,"comment_content":"可以理解为 属性是基本单位， 事件和动作也是由属性构成 ，  相互嵌套构成物模型，这么理解对吗？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513408,"discussion_content":"不是的，事件与属性不同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610777580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271862,"user_name":"like_wind","can_delete":false,"product_type":"c1","uid":1755021,"ip_address":"","ucode":"2733C299AE56AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eolBabicK5OTVJJJlUA4wwRtwCohCb75ahtbiaopsicnG3HRQTBOVEUrRY1KYCRZH78cDweQllh0Jzeg/132","comment_is_top":false,"comment_ctime":1609844898,"is_pvip":false,"replies":[{"id":"99240","content":"👍<br>获取当前温度、湿度可以通过属性实现","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1610789273,"ip_address":"","comment_id":271862,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609844898","product_id":100063601,"comment_content":"温湿度传感器物模型定义：<br>属性分析：<br>1.温度<br>2.湿度<br>事件分析：<br>1.温度过高<br>2.温度过低<br>3.湿度过高<br>4.湿度过低<br>5.设备异常<br>动作分析：<br>1.加热<br>2.加湿<br>3.获取当前温度<br>4.获取当前湿度<br><br>{<br>  &quot;version&quot;: &quot;1.0&quot;,<br>  &quot;properties&quot;: [<br>    {<br>      &quot;id&quot;: &quot;temperature&quot;,<br>      &quot;name&quot;: &quot;环境温度&quot;,<br>      &quot;desc&quot;: &quot;周围环境的温度数据&quot;,<br>      &quot;mode&quot;: &quot;r&quot;,<br>      &quot;required&quot;: true,<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;float&quot;,<br>        &quot;unit&quot;: &quot;.C&quot;,<br>        &quot;min&quot;: &quot;-10&quot;,<br>        &quot;max&quot;: &quot;50&quot;<br>      }<br>    },<br>    {<br>      &quot;id&quot;: &quot;humidity&quot;,<br>      &quot;name&quot;: &quot;环境湿度&quot;,<br>      &quot;desc&quot;: &quot;皱纹环境的湿度数据&quot;,<br>      &quot;mode&quot;: &quot;r&quot;,<br>      &quot;required&quot;: true,<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;float&quot;,<br>        &quot;unit&quot;: &quot;RH&quot;,<br>        &quot;min&quot;: &quot;0.2&quot;,<br>        &quot;max&quot;: &quot;0.8&quot;<br>      }<br>    }<br>  ],<br>  &quot;events&quot;: [<br>    {<br>      &quot;id&quot;: &quot;low_temperature&quot;,<br>      &quot;name&quot;: &quot;LowTemperature&quot;,<br>      &quot;desc&quot;: &quot;温度过低报警事件&quot;,<br>      &quot;type&quot;: &quot;alert&quot;,<br>      &quot;required&quot;: false,<br>      &quot;params&quot;: [<br>        {<br>          &quot;id&quot;: &quot;low_temp&quot;,<br>          &quot;name&quot;: &quot;lowTemp&quot;,<br>          &quot;desc&quot;: &quot;Current Temperature&quot;,<br>          &quot;define&quot;: {<br>            &quot;type&quot;: &quot;float&quot;,<br>            &quot;unit&quot;: &quot;.C&quot;,<br>            &quot;min&quot;: &quot;-10&quot;,<br>            &quot;max&quot;: &quot;50&quot;,<br>            &quot;step&quot;: &quot;1&quot;,<br>            &quot;start&quot;: &quot;1&quot;<br>          }<br>        },<br>        {<br>          &quot;温度过高报警事件&quot;: &quot;.....&quot;<br>        },<br>        {<br>          &quot;湿度过高报警事件&quot;: &quot;.....&quot;<br>        },<br>        {<br>          &quot;湿度过低报警事件&quot;: &quot;.....&quot;<br>        }<br>      ],<br>      &quot;actions&quot;: [<br>        {<br>          &quot;id&quot;: &quot;get_temperature&quot;,<br>          &quot;name&quot;: &quot;getTemperature&quot;,<br>          &quot;desc&quot;: &quot;获取当前温度&quot;,<br>          &quot;define&quot;: {<br>            &quot;type&quot;: &quot;float&quot;,<br>            &quot;unit&quot;: &quot;.C&quot;,<br>            &quot;value&quot;: &quot;15&quot;,<br>            &quot;productId&quot;: &quot;p_id&quot;<br>          }<br>        },<br>        {<br>          &quot;获取当前湿度&quot;: &quot;....&quot;<br>        }<br>      ]<br>    }<br>  ]<br>}<br>","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513073,"discussion_content":"👍\n获取当前温度、湿度可以通过属性实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610789273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265885,"user_name":"莹","can_delete":false,"product_type":"c1","uid":1020356,"ip_address":"","ucode":"395C6C4191B091","user_header":"https://static001.geekbang.org/account/avatar/00/0f/91/c4/40609b81.jpg","comment_is_top":false,"comment_ctime":1607061204,"is_pvip":false,"replies":[{"id":"97119","content":"Great！","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1607763611,"ip_address":"","comment_id":265885,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1607061204","product_id":100063601,"comment_content":"<br>{<br>  &quot;version&quot;: &quot;1.0&quot;,            &#47;&#47;模型版本<br>  &quot;properties&quot;: [              &#47;&#47;属性列表<br>    {<br>      &quot;id&quot;: &quot;temp_range&quot;,    &#47;&#47;温度属性<br>      &quot;name&quot;: &quot;温度&quot;,<br>      &quot;desc&quot;: &quot;传感器温度&quot;,<br>      &quot;required&quot;: true,<br>      &quot;mode&quot;: &quot;r&quot;,<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;float&quot;,<br>        &quot;unit&quot;: &quot;C&quot;,<br>        &quot;step&quot;: &quot;0.01&quot;<br>        &quot;min&quot;: &quot;-200.0&quot;,<br>        &quot;max&quot;: &quot;200.0&quot;,<br>        &quot;start&quot;: &quot;0.00&quot;<br>        }<br>      },<br>    {<br>      &quot;id&quot;: &quot;humidity_range&quot;,        &#47;&#47;湿度属性<br>      &quot;name&quot;: &quot;湿度&quot;,<br>      &quot;desc&quot;: &quot;传感器湿度&quot;,<br>      &quot;required&quot;: true,<br>      &quot;mode&quot;: &quot;r&quot;,<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;flow&quot;,<br>        &quot;unit&quot;: &quot;%&quot;,<br>        &quot;step&quot;: &quot;0.01&quot;,<br>        &quot;min&quot;: &quot;0.00&quot;,<br>        &quot;max&quot;: &quot;100.00&quot;,<br>        &quot;start&quot;: &quot;0.00&quot;<br>      }<br>    }<br>  ],<br>  &quot;events&quot;: [                        &#47;&#47;事件列表<br>    {<br>      &quot;id&quot;: &quot;status_report&quot;,          &#47;&#47;运行状态报告<br>      &quot;name&quot;: &quot;运行状态&quot;,<br>      &quot;desc&quot;: &quot;运行状态报告&quot;,<br>      &quot;type&quot;: &quot;info&quot;,<br>      &quot;required&quot;: false,<br>      &quot;params&quot;: [                      &#47;&#47;事件参数列表<br>        {<br>          &quot;id&quot;: &quot;status&quot;,<br>          &quot;name&quot;: &quot;当前状态&quot;,<br>          &quot;desc&quot;: &quot;报告当前状态&quot;,<br>          &quot;define&quot;: {<br>            &quot;type&quot;: &quot;bool&quot;,<br>            &quot;mapping&quot;: {<br>              &quot;0&quot;: &quot;正常&quot;,<br>              &quot;1&quot;: &quot;出错&quot;<br>            }<br>          }<br>        }<br>      ]<br>    }<br>  ],<br>  &quot;actions&quot;: [<br>    {<br>      &quot;id&quot;: &quot;send_data&quot;,    &#47;&#47;发送数据动作<br>      &quot;name&quot;: &quot;发送数据&quot;,<br>      &quot;desc&quot;: &quot;发送数据动作&quot;,<br>      &quot;required&quot;: true,<br>      &quot;mode&quot;: &quot;r&quot;,<br>      &quot;define&quot;: {<br>        &quot;type&quot;: &quot;int&quot;,<br>        &quot;mapping&quot;: { <br>          &quot;0&quot;: &quot;on&quot;, <br>          &quot;1&quot;: &quot;off&quot;<br>        }<br>    }<br>  ],                  &#47;&#47;动作列表<br>  &quot;profile&quot;: {                    &#47;&#47;产品参数<br>    &quot;ProductId&quot;: &quot;Temp_Humidity_Sensor129SEFIONE1&quot;,    &#47;&#47;产品ID<br>    &quot;CategoryId&quot;: &quot;100&quot;            &#47;&#47;产品分类编号<br>  }<br>}","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511081,"discussion_content":"Great！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607763611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265397,"user_name":"碎步马拉松","can_delete":false,"product_type":"c1","uid":2303998,"ip_address":"","ucode":"9612A9F8FC6DDA","user_header":"https://static001.geekbang.org/account/avatar/00/23/27/fe/e4e0126d.jpg","comment_is_top":false,"comment_ctime":1606889264,"is_pvip":false,"replies":[{"id":"96553","content":"数字孪生是个内涵外延很广的概念，不止这些。它试图在数字世界完全映射实体物理世界的东西。比如大众点评上的一个餐馆，也可以认为是一个真实餐馆的数字孪生，有它的菜品、位置、电话、大家的评价等各种描述信息。如果你的餐馆没有在系统上存在孪生对象，那可以说在数字世界，它不存在。那说回设备，如果一个设备要在数字世界有孪生对象。就会用到很多物联网技术，这个孪生对象可以具体收集的数据分析出很多信息，比如设备的震动幅度最近有增大趋势，采用几种不同技术后，再跟进一段时间数据，可以对比出哪种方式好，从而推进设备的技术迭代，等等很多应用。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1606968189,"ip_address":"","comment_id":265397,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606889264","product_id":100063601,"comment_content":"数字孪生 = 设备影子 + 设备全生命周期数据 ？","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510918,"discussion_content":"数字孪生是个内涵外延很广的概念，不止这些。它试图在数字世界完全映射实体物理世界的东西。比如大众点评上的一个餐馆，也可以认为是一个真实餐馆的数字孪生，有它的菜品、位置、电话、大家的评价等各种描述信息。如果你的餐馆没有在系统上存在孪生对象，那可以说在数字世界，它不存在。那说回设备，如果一个设备要在数字世界有孪生对象。就会用到很多物联网技术，这个孪生对象可以具体收集的数据分析出很多信息，比如设备的震动幅度最近有增大趋势，采用几种不同技术后，再跟进一段时间数据，可以对比出哪种方式好，从而推进设备的技术迭代，等等很多应用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606968189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264972,"user_name":"cras","can_delete":false,"product_type":"c1","uid":1057396,"ip_address":"","ucode":"C6E59AEE48B763","user_header":"https://wx.qlogo.cn/mmopen/vi_32/0CL2N0xC7M9sQ0fVGHXibkCK1EZibtjylLQ1NsiaPCN0fCeNkDuuibDZahC8iaeiafDnzXlicCW0xHxWHw2Ubz7ov9nJg/132","comment_is_top":false,"comment_ctime":1606724807,"is_pvip":false,"replies":[{"id":"96417","content":"嗯，有一个中间角色，大家都以它为准，这就是保证一致性的本质。","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1606868077,"ip_address":"","comment_id":264972,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1606724807","product_id":100063601,"comment_content":"基于物模型的定义，云端实现设备影子。状态同步确实是一个难点，如何保证状态一致性老师能否展下说下。","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510757,"discussion_content":"嗯，有一个中间角色，大家都以它为准，这就是保证一致性的本质。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606868077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081317,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoSibI5icXW0c7pEHxbiaw3S88SPYw35icBowcXnatApKLVDVCz0ajfIyYJq1BXgODaTxPvUI4xo9UpIQ/132","nickname":"浪漫拖鞋","note":"","ucode":"82D92D58E8C5B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399743,"discussion_content":"老师中间角色能否给点具体的技术方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633051547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1031970,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bf/22/26530e66.jpg","nickname":"趁早","note":"","ucode":"949FB3AA250D80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331816,"discussion_content":"这个不能保证一致性吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606985997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263125,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1047816,"ip_address":"","ucode":"472B3C88A0B0E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fd/08/d9906c8e.jpg","comment_is_top":false,"comment_ctime":1606015023,"is_pvip":false,"replies":[{"id":"95493","content":"相关资料会请老师专门在之后的加餐中整理补充，请保持对课程的关注😊","user_name":"编辑回复","user_name_real":"易家成","uid":"1957233","ctime":1606021423,"ip_address":"","comment_id":263125,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1606015023","product_id":100063601,"comment_content":"老师，能否推荐一些物联网书籍、博客？","like_count":0,"discussions":[{"author":{"id":1957233,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/dd/71/6828170d.jpg","nickname":"爱学习的家成","note":"","ucode":"670B26EE0C6450","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510103,"discussion_content":"相关资料会请老师专门在之后的加餐中整理补充，请保持对课程的关注😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606021423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263124,"user_name":"185","can_delete":false,"product_type":"c1","uid":1058880,"ip_address":"","ucode":"F27A4189CA4864","user_header":"https://static001.geekbang.org/account/avatar/00/10/28/40/c8fad3f7.jpg","comment_is_top":false,"comment_ctime":1606014935,"is_pvip":false,"replies":[{"id":"95585","content":"������","user_name":"作者回复","user_name_real":"郭朝斌","uid":"2302171","ctime":1606137772,"ip_address":"","comment_id":263124,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1606014935","product_id":100063601,"comment_content":"新学到：设备影子、数字孪生。多谢。","like_count":0,"discussions":[{"author":{"id":2302171,"avatar":"https://static001.geekbang.org/account/avatar/00/23/20/db/b04f43dc.jpg","nickname":"郭朝斌","note":"","ucode":"2969986E1B3851","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510102,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606137772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}