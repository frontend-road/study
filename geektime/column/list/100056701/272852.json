{"id":272852,"title":"06 | 数据同步：主从库如何实现数据一致？","content":"<p>你好，我是蒋德钧。</p><p>前两节课，我们学习了AOF和RDB，如果Redis发生了宕机，它们可以分别通过回放日志和重新读入RDB文件的方式恢复数据，从而保证尽量少丢失数据，提升可靠性。</p><p>不过，即使用了这两种方法，也依然存在服务不可用的问题。比如说，我们在实际使用时只运行了一个Redis实例，那么，如果这个实例宕机了，它在恢复期间，是无法服务新来的数据存取请求的。</p><p>那我们总说的Redis具有高可靠性，又是什么意思呢？其实，这里有两层含义：一是<strong>数据尽量少丢失</strong>，二是<strong>服务尽量少中断</strong>。AOF和RDB保证了前者，而对于后者，Redis的做法就是<strong>增加副本冗余量</strong>，将一份数据同时保存在多个实例上。即使有一个实例出现了故障，需要过一段时间才能恢复，其他实例也可以对外提供服务，不会影响业务使用。</p><p>多实例保存同一份数据，听起来好像很不错，但是，我们必须要考虑一个问题：这么多副本，它们之间的数据如何保持一致呢？数据读写操作可以发给所有的实例吗？</p><p>实际上，Redis提供了主从库模式，以保证数据副本的一致，主从库之间采用的是读写分离的方式。</p><ul>\n<li><strong>读操作</strong>：主库、从库都可以接收；</li>\n<li><strong>写操作</strong>：首先到主库执行，然后，主库将写操作同步给从库。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/80/2f/809d6707404731f7e493b832aa573a2f.jpg?wh=3214*2119\" alt=\"\" title=\"Redis主从库和读写分离\"></p><p>那么，为什么要采用读写分离的方式呢？</p><!-- [[[read_end]]] --><p>你可以设想一下，如果在上图中，不管是主库还是从库，都能接收客户端的写操作，那么，一个直接的问题就是：如果客户端对同一个数据（例如k1）前后修改了三次，每一次的修改请求都发送到不同的实例上，在不同的实例上执行，那么，这个数据在这三个实例上的副本就不一致了（分别是v1、v2和v3）。在读取这个数据的时候，就可能读取到旧的值。</p><p>如果我们非要保持这个数据在三个实例上一致，就要涉及到加锁、实例间协商是否完成修改等一系列操作，但这会带来巨额的开销，当然是不太能接受的。</p><p>而主从库模式一旦采用了读写分离，所有数据的修改只会在主库上进行，不用协调三个实例。主库有了最新的数据后，会同步给从库，这样，主从库的数据就是一致的。</p><p>那么，主从库同步是如何完成的呢？主库数据是一次性传给从库，还是分批同步？要是主从库间的网络断连了，数据还能保持一致吗？这节课，我就和你聊聊主从库同步的原理，以及应对网络断连风险的方案。</p><p>好了，我们先来看看主从库间的第一次同步是如何进行的，这也是Redis实例建立主从库模式后的规定动作。</p><h2>主从库间如何进行第一次同步？</h2><p>当我们启动多个Redis实例的时候，它们相互之间就可以通过replicaof（Redis 5.0之前使用slaveof）命令形成主库和从库的关系，之后会按照三个阶段完成数据的第一次同步。</p><p>例如，现在有实例1（ip：172.16.19.3）和实例2（ip：172.16.19.5），我们在实例2上执行以下这个命令后，实例2就变成了实例1的从库，并从实例1上复制数据：</p><pre><code>replicaof  172.16.19.3  6379\n</code></pre><p>接下来，我们就要学习主从库间数据第一次同步的三个阶段了。你可以先看一下下面这张图，有个整体感知，接下来我再具体介绍。</p><p><img src=\"https://static001.geekbang.org/resource/image/63/a1/63d18fd41efc9635e7e9105ce1c33da1.jpg?wh=3765*1676\" alt=\"\" title=\"主从库第一次同步的流程\"></p><p>第一阶段是主从库间建立连接、协商同步的过程，主要是为全量复制做准备。在这一步，<strong>从库和主库建立起连接，并告诉主库即将进行同步，主库确认回复后，主从库间就可以开始同步了</strong>。</p><p>具体来说，从库给主库发送psync命令，表示要进行数据同步，主库根据这个命令的参数来启动复制。psync命令包含了<strong>主库的runID</strong>和<strong>复制进度offset</strong>两个参数。</p><ul>\n<li>runID，是每个Redis实例启动时都会自动生成的一个随机ID，用来唯一标记这个实例。当从库和主库第一次复制时，因为不知道主库的runID，所以将runID设为“？”。</li>\n<li>offset，此时设为-1，表示第一次复制。</li>\n</ul><p>主库收到psync命令后，会用FULLRESYNC响应命令带上两个参数：主库runID和主库目前的复制进度offset，返回给从库。从库收到响应后，会记录下这两个参数。</p><p>这里有个地方需要注意，<strong>FULLRESYNC响应表示第一次复制采用的全量复制，也就是说，主库会把当前所有的数据都复制给从库</strong>。</p><p>在第二阶段，<strong>主库将所有数据同步给从库。从库收到数据后，在本地完成数据加载</strong>。这个过程依赖于内存快照生成的RDB文件。</p><p>具体来说，主库执行bgsave命令，生成RDB文件，接着将文件发给从库。从库接收到RDB文件后，会先清空当前数据库，然后加载RDB文件。这是因为从库在通过replicaof命令开始和主库同步前，可能保存了其他数据。为了避免之前数据的影响，从库需要先把当前数据库清空。</p><p>在主库将数据同步给从库的过程中，主库不会被阻塞，仍然可以正常接收请求。否则，Redis的服务就被中断了。但是，这些请求中的写操作并没有记录到刚刚生成的RDB文件中。为了保证主从库的数据一致性，主库会在内存中用专门的replication buffer，记录RDB文件生成后收到的所有写操作。</p><p>最后，也就是第三个阶段，主库会把第二阶段执行过程中新收到的写命令，再发送给从库。具体的操作是，当主库完成RDB文件发送后，就会把此时replication buffer中的修改操作发给从库，从库再重新执行这些操作。这样一来，主从库就实现同步了。</p><h2>主从级联模式分担全量复制时的主库压力</h2><p>通过分析主从库间第一次数据同步的过程，你可以看到，一次全量复制中，对于主库来说，需要完成两个耗时的操作：生成RDB文件和传输RDB文件。</p><p>如果从库数量很多，而且都要和主库进行全量复制的话，就会导致主库忙于fork子进程生成RDB文件，进行数据全量同步。fork这个操作会阻塞主线程处理正常请求，从而导致主库响应应用程序的请求速度变慢。此外，传输RDB文件也会占用主库的网络带宽，同样会给主库的资源使用带来压力。那么，有没有好的解决方法可以分担主库压力呢？</p><p>其实是有的，这就是“主-从-从”模式。</p><p>在刚才介绍的主从库模式中，所有的从库都是和主库连接，所有的全量复制也都是和主库进行的。现在，我们可以<strong>通过“主-从-从”模式将主库生成RDB和传输RDB的压力，以级联的方式分散到从库上</strong>。</p><p>简单来说，我们在部署主从集群的时候，可以手动选择一个从库（比如选择内存资源配置较高的从库），用于级联其他的从库。然后，我们可以再选择一些从库（例如三分之一的从库），在这些从库上执行如下命令，让它们和刚才所选的从库，建立起主从关系。</p><pre><code>replicaof  所选从库的IP 6379\n</code></pre><p>这样一来，这些从库就会知道，在进行同步时，不用再和主库进行交互了，只要和级联的从库进行写操作同步就行了，这就可以减轻主库上的压力，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/40/45/403c2ab725dca8d44439f8994959af45.jpg?wh=3543*1791\" alt=\"\" title=\"级联的“主-从-从”模式\"></p><p>好了，到这里，我们了解了主从库间通过全量复制实现数据同步的过程，以及通过“主-从-从”模式分担主库压力的方式。那么，一旦主从库完成了全量复制，它们之间就会一直维护一个网络连接，主库会通过这个连接将后续陆续收到的命令操作再同步给从库，这个过程也称为<strong>基于长连接的命令传播</strong>，可以避免频繁建立连接的开销。</p><p>听上去好像很简单，但不可忽视的是，这个过程中存在着风险点，最常见的就是<strong>网络断连或阻塞</strong>。如果网络断连，主从库之间就无法进行命令传播了，从库的数据自然也就没办法和主库保持一致了，客户端就可能从从库读到旧数据。</p><p>接下来，我们就来聊聊网络断连后的解决办法。</p><h2>主从库间网络断了怎么办？</h2><p>在Redis 2.8之前，如果主从库在命令传播时出现了网络闪断，那么，从库就会和主库重新进行一次全量复制，开销非常大。</p><p>从Redis 2.8开始，网络断了之后，主从库会采用增量复制的方式继续同步。听名字大概就可以猜到它和全量复制的不同：全量复制是同步所有数据，而增量复制只会把主从库网络断连期间主库收到的命令，同步给从库。</p><p>那么，增量复制时，主从库之间具体是怎么保持同步的呢？这里的奥妙就在于repl_backlog_buffer这个缓冲区。我们先来看下它是如何用于增量命令的同步的。</p><p>当主从库断连后，主库会把断连期间收到的写操作命令，写入replication buffer，同时也会把这些操作命令也写入repl_backlog_buffer这个缓冲区。</p><p>repl_backlog_buffer是一个环形缓冲区，<strong>主库会记录自己写到的位置，从库则会记录自己已经读到的位置</strong>。</p><p>刚开始的时候，主库和从库的写读位置在一起，这算是它们的起始位置。随着主库不断接收新的写操作，它在缓冲区中的写位置会逐步偏离起始位置，我们通常用偏移量来衡量这个偏移距离的大小，对主库来说，对应的偏移量就是master_repl_offset。主库接收的新写操作越多，这个值就会越大。</p><p>同样，从库在复制完写操作命令后，它在缓冲区中的读位置也开始逐步偏移刚才的起始位置，此时，从库已复制的偏移量slave_repl_offset也在不断增加。正常情况下，这两个偏移量基本相等。</p><p><img src=\"https://static001.geekbang.org/resource/image/13/37/13f26570a1b90549e6171ea24554b737.jpg?wh=4000*1065\" alt=\"\" title=\"Redis repl_backlog_buffer的使用\"></p><p>主从库的连接恢复之后，从库首先会给主库发送psync命令，并把自己当前的slave_repl_offset发给主库，主库会判断自己的master_repl_offset和slave_repl_offset之间的差距。</p><p>在网络断连阶段，主库可能会收到新的写操作命令，所以，一般来说，master_repl_offset会大于slave_repl_offset。此时，主库只用把master_repl_offset和slave_repl_offset之间的命令操作同步给从库就行。</p><p>就像刚刚示意图的中间部分，主库和从库之间相差了put d e和put d f两个操作，在增量复制时，主库只需要把它们同步给从库，就行了。</p><p>说到这里，我们再借助一张图，回顾下增量复制的流程。</p><p><img src=\"https://static001.geekbang.org/resource/image/20/16/20e233bd30c3dacb0221yy0c77780b16.jpg?wh=3328*1689\" alt=\"\" title=\"Redis增量复制流程\"></p><p>不过，有一个地方我要强调一下，因为repl_backlog_buffer是一个环形缓冲区，所以在缓冲区写满后，主库会继续写入，此时，就会覆盖掉之前写入的操作。<strong>如果从库的读取速度比较慢，就有可能导致从库还未读取的操作被主库新写的操作覆盖了，这会导致主从库间的数据不一致</strong>。</p><p>因此，我们要想办法避免这一情况，一般而言，我们可以调整<strong>repl_backlog_size</strong>这个参数。这个参数和所需的缓冲空间大小有关。缓冲空间的计算公式是：缓冲空间大小 = 主库写入命令速度 * 操作大小 - 主从库间网络传输命令速度 * 操作大小。在实际应用中，考虑到可能存在一些突发的请求压力，我们通常需要把这个缓冲空间扩大一倍，即repl_backlog_size = 缓冲空间大小 * 2，这也就是repl_backlog_size的最终值。</p><p>举个例子，如果主库每秒写入2000个操作，每个操作的大小为2KB，网络每秒能传输1000个操作，那么，有1000个操作需要缓冲起来，这就至少需要2MB的缓冲空间。否则，新写的命令就会覆盖掉旧操作了。为了应对可能的突发压力，我们最终把repl_backlog_size设为4MB。</p><p>这样一来，增量复制时主从库的数据不一致风险就降低了。不过，如果并发请求量非常大，连两倍的缓冲空间都存不下新操作请求的话，此时，主从库数据仍然可能不一致。</p><p>针对这种情况，一方面，你可以根据Redis所在服务器的内存资源再适当增加repl_backlog_size值，比如说设置成缓冲空间大小的4倍，另一方面，你可以考虑使用切片集群来分担单个主库的请求压力。关于切片集群，我会在第9讲具体介绍。</p><h2>小结</h2><p>这节课，我们一起学习了Redis的主从库同步的基本原理，总结来说，有三种模式：全量复制、基于长连接的命令传播，以及增量复制。</p><p>全量复制虽然耗时，但是对于从库来说，如果是第一次同步，全量复制是无法避免的，所以，我给你一个小建议：<strong>一个Redis实例的数据库不要太大</strong>，一个实例大小在几GB级别比较合适，这样可以减少RDB文件生成、传输和重新加载的开销。另外，为了避免多个从库同时和主库进行全量复制，给主库过大的同步压力，我们也可以采用“主-从-从”这一级联模式，来缓解主库的压力。</p><p>长连接复制是主从库正常运行后的常规同步阶段。在这个阶段中，主从库之间通过命令传播实现同步。不过，这期间如果遇到了网络断连，增量复制就派上用场了。我特别建议你留意一下repl_backlog_size这个配置参数。如果它配置得过小，在增量复制阶段，可能会导致从库的复制进度赶不上主库，进而导致从库重新进行全量复制。所以，通过调大这个参数，可以减少从库在网络断连时全量复制的风险。</p><p>不过，主从库模式使用读写分离虽然避免了同时写多个实例带来的数据不一致问题，但是还面临主库故障的潜在风险。主库故障了从库该怎么办，数据还能保持一致吗，Redis还能正常提供服务吗？在接下来的两节课里，我会和你具体聊聊主库故障后，保证服务可靠性的解决方案。</p><h2>每课一问</h2><p>按照惯例，我给你提一个小问题。这节课，我提到，主从库间的数据复制同步使用的是RDB文件，前面我们学习过，AOF记录的操作命令更全，相比于RDB丢失的数据更少。那么，为什么主从库间的复制不使用AOF呢？</p><p>好了，这节课就到这里，如果你觉得有收获，欢迎你帮我把今天的内容分享给你的朋友。</p>","comments":[{"had_liked":false,"id":242144,"user_name":"Geek_121747","can_delete":false,"product_type":"c1","uid":2061660,"ip_address":"","ucode":"8A7AD79B6F53F5","user_header":"","comment_is_top":true,"comment_ctime":1597623743,"is_pvip":false,"replies":[{"id":"89451","content":"我看到还有几个同学在问类似的这个问题，大家都思考的很仔细，非常好!<br><br>对于这个问题来说，有两个关键点：<br>1. 一个从库如果和主库断连时间过长，造成它在主库repl_backlog_buffer的slave_repl_offset位置上的数据已经被覆盖掉了，此时从库和主库间将进行全量复制。<br><br>2. 每个从库会记录自己的slave_repl_offset，每个从库的复制进度也不一定相同。在和主库重连进行恢复时，从库会通过psync命令把自己记录的slave_repl_offset发给主库，主库会根据从库各自的复制进度，来决定这个从库可以进行增量复制，还是全量复制。","user_name":"作者回复","comment_id":242144,"uid":"1609687","ip_address":"","utype":1,"ctime":1597682261,"user_name_real":"蒋德钧"}],"discussion_count":29,"race_medal":0,"score":"9.2233730177049006e+18","product_id":100056701,"comment_content":"老师，我对repl_backlog_buffer有点疑问，<br><br>文中描述1：“因为 repl_backlog_buffer 是一个环形缓冲区，所以在缓冲区写满后，主库会继续写入，此时，就会覆盖掉之前写入的操作。如果从库的读取速度比较慢，就有可能导致从库还未读取的操作被主库新写的操作覆盖了，这会导致主从库间的数据不一致。”<br><br>文中描述2：我特别建议你留意一下 repl_backlog_size 这个配置参数。如果它配置得过小，在增量复制阶段，可能会导致从库的复制进度赶不上主库，进而导致从库重新进行全量复制。<br><br>我的疑问是，如果在网络断开期间，repl_backlog_size环形缓冲区写满之后，从库是会丢失掉那部分被覆盖掉的数据，还是直接进行全量复制呢？","like_count":229,"discussions":[{"author":{"id":1074742,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/36/b4a4e6fb.jpg","nickname":"Edon du","note":"","ucode":"1648624751AAE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361004,"discussion_content":"简单来说就是发送给主库的offset，主库查询不到就进行了全量复制，查询的到就进行增量复制","likes_number":38,"is_delete":false,"is_hidden":false,"ctime":1616577547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1645684,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/74/eb472cc3.jpg","nickname":"海强","note":"","ucode":"EF4971CD58E4E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348982,"discussion_content":"所谓环形，我理解就是最新的覆盖最旧的，但是序号还是递增的吧","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1612833396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1652895,"avatar":"https://static001.geekbang.org/account/avatar/00/19/38/9f/895353ab.jpg","nickname":"黄卫江","note":"","ucode":"0366942B81E7FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1645684,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/74/eb472cc3.jpg","nickname":"海强","note":"","ucode":"EF4971CD58E4E5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574244,"discussion_content":"序号得看offset怎么设计，是归零还是取模。数据肯定是被覆盖了的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653921985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348982,"ip_address":""},"score":574244,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652895,"avatar":"https://static001.geekbang.org/account/avatar/00/19/38/9f/895353ab.jpg","nickname":"黄卫江","note":"","ucode":"0366942B81E7FC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575974,"discussion_content":"递增","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655217545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":574244,"ip_address":""},"score":575974,"extra":""}]},{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503941,"discussion_content":"我看到还有几个同学在问类似的这个问题，大家都思考的很仔细，非常好!\n\n对于这个问题来说，有两个关键点：\n1. 一个从库如果和主库断连时间过长，造成它在主库repl_backlog_buffer的slave_repl_offset位置上的数据已经被覆盖掉了，此时从库和主库间将进行全量复制。\n\n2. 每个从库会记录自己的slave_repl_offset，每个从库的复制进度也不一定相同。在和主库重连进行恢复时，从库会通过psync命令把自己记录的slave_repl_offset发给主库，主库会根据从库各自的复制进度，来决定这个从库可以进行增量复制，还是全量复制。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1597682261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1240629,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ee/35/5647c7e5.jpg","nickname":"市集养猫者","note":"","ucode":"D44FF82C51C617","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337708,"discussion_content":"如果重连后，主库Id不一致，也要全量重同步","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1609052315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1739070,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/89/3e/0dd8e96b.jpg","nickname":"InfoQ_小汤","note":"","ucode":"E4C30DB7A9B54C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411690,"discussion_content":"感觉老师没回答到重点 文章说的确实衔接不上","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1635985406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1118559,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/5f/0d24dba2.jpg","nickname":"在路上","note":"","ucode":"0BEC28E0772A39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338905,"discussion_content":"因为是环形，所以主库是怎么知道有没有被覆盖掉呢","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609416087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1102291,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/d3/827cdfd5.jpg","nickname":"Kai","note":"","ucode":"BE6985A02BEA7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1118559,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/5f/0d24dba2.jpg","nickname":"在路上","note":"","ucode":"0BEC28E0772A39","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341596,"discussion_content":"我跟你是同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610459477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338905,"ip_address":""},"score":341596,"extra":""},{"author":{"id":1736650,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","nickname":"我的喵","note":"","ucode":"A7435BDBDD2587","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1118559,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/5f/0d24dba2.jpg","nickname":"在路上","note":"","ucode":"0BEC28E0772A39","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347633,"discussion_content":"假如slave_repl_offset大于了master_repl_offset这种场景？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612268554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338905,"ip_address":""},"score":347633,"extra":""},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1736650,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","nickname":"我的喵","note":"","ucode":"A7435BDBDD2587","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371586,"discussion_content":"offset是递增的。\n所以如果断连时间过长，slave_offset在backlog_buffer里找不到，即被判定为覆盖，需要全量复制。\n\n源码里，offset的数据类型是long long型，最大值为2^63-1， 非常大的一个数，意味着你写入的字节数基本上不可能超过，也就意味着这个offset不会溢出，也就意味着slave_offset不会超过master_offset","likes_number":19,"is_delete":false,"is_hidden":false,"ctime":1619856563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":347633,"ip_address":""},"score":371586,"extra":""}]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318859,"discussion_content":"看到老师说 repl_backlog_buffer环形结构，瞬间联想到mongoDB的oplogSize，天下存储系统采用的原理真的是老古董阿","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603868833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2277195,"avatar":"https://static001.geekbang.org/account/avatar/00/22/bf/4b/2acf59c1.jpg","nickname":"我","note":"","ucode":"49C9AFFB997A3F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324377,"discussion_content":"说是环形的，其实还是数组，写满了再重头写，这样子就形成了环形结构","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1605096376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318859,"ip_address":""},"score":324377,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2277195,"avatar":"https://static001.geekbang.org/account/avatar/00/22/bf/4b/2acf59c1.jpg","nickname":"我","note":"","ucode":"49C9AFFB997A3F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373384,"discussion_content":"对的 具体实际是线性表的两种表现形式 无外乎就是数组和链表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620712827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":324377,"ip_address":""},"score":373384,"extra":""},{"author":{"id":1686001,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b9/f1/d2575c03.jpg","nickname":"Emotion丿星","note":"","ucode":"D7FBACCE6EFB35","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377008,"discussion_content":"还有mysql的redo log","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1622461942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318859,"ip_address":""},"score":377008,"extra":""}]},{"author":{"id":1739070,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/89/3e/0dd8e96b.jpg","nickname":"InfoQ_小汤","note":"","ucode":"E4C30DB7A9B54C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411692,"discussion_content":"按照老师这个回答 覆盖以后仅会触发全量复制 并不会丢失数据","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635985517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1188220,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/7c/940627a7.jpg","nickname":"在雨中","note":"","ucode":"C4A0B725C8A009","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1739070,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/89/3e/0dd8e96b.jpg","nickname":"InfoQ_小汤","note":"","ucode":"E4C30DB7A9B54C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560367,"discussion_content":"嗯，老师的这个回答跟文章的描述不一致。看文章的时候就觉得可以根据情况进行一次全量同步，避免数据丢失","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649302514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411692,"ip_address":""},"score":560367,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1739070,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/89/3e/0dd8e96b.jpg","nickname":"InfoQ_小汤","note":"","ucode":"E4C30DB7A9B54C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575976,"discussion_content":"老师意思为了不丢失数据, 得全量复制.......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655217812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411692,"ip_address":""},"score":575976,"extra":""}]},{"author":{"id":1590887,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/67/004cb4f8.jpg","nickname":"MOK_G_S","note":"","ucode":"C1CED3D134C70A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378521,"discussion_content":"repl_backlog_size写满了会覆盖掉速度跟不上的从库的offset，导致从库需要做一次全量复制。\n是不是设计成优先考虑自动扩充repl_backlog_size的容量更划算呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623254530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1614636,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJn1M83Jv0OM2ibwMNrVZicKUZjwPIwXRfI9KMnum8icO00wXicrII7n2c1icWPK8NdrgwdZ9RsEpJr5aQ/132","nickname":"Geek_9decd8","note":"","ucode":"03990B88868A1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1590887,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/67/004cb4f8.jpg","nickname":"MOK_G_S","note":"","ucode":"C1CED3D134C70A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531078,"discussion_content":"1   内存是宝贵滴\n2   增量命令同步过多不如rdb同步","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1637222498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378521,"ip_address":""},"score":531078,"extra":"{\"user_type\":1}"}]},{"author":{"id":1663762,"avatar":"https://static001.geekbang.org/account/avatar/00/19/63/12/5a22fcc7.jpg","nickname":"第四范式","note":"","ucode":"61ECDC7C834CAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300515,"discussion_content":"看看源码，最好了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598156123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1765091,"avatar":"","nickname":"Geek_ddf5d3","note":"","ucode":"916042ED48CA54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350136,"discussion_content":"断联时间过长，是多长呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613722253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2450539,"avatar":"","nickname":"Geek_f12f39","note":"","ucode":"44A4AC80BADB8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1765091,"avatar":"","nickname":"Geek_ddf5d3","note":"","ucode":"916042ED48CA54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352017,"discussion_content":"断多久，没谁说的清，不管断多久，如果把repl_backlog_buffer这个缓冲区写满了，我感觉就要全量复制了，不然的话，就会丢数据","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1614570508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":350136,"ip_address":""},"score":352017,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2450539,"avatar":"","nickname":"Geek_f12f39","note":"","ucode":"44A4AC80BADB8F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374755,"discussion_content":"是偏移量超过一轮 找不回来了 只能重新做个新的时间轴。那么redis里就是发起全量复制","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1621336644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":352017,"ip_address":""},"score":374755,"extra":""}]},{"author":{"id":1623409,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","nickname":"风向北吹","note":"","ucode":"2FD0BC5159E1C1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310433,"discussion_content":"对于主从级联集群，那是否只需要考虑级联从库的slave_repl_offset就可以了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601826385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1623409,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","nickname":"风向北吹","note":"","ucode":"2FD0BC5159E1C1","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":374756,"discussion_content":"不用 每个级联都有自己的主库 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621336686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":310433,"ip_address":""},"score":374756,"extra":""}]}]},{"had_liked":false,"id":349574,"user_name":"健康创客小辉辉","can_delete":false,"product_type":"c1","uid":3027938,"ip_address":"","ucode":"C633A4D21C2BCA","user_header":"https://static001.geekbang.org/account/avatar/00/2e/33/e2/22ec4c24.jpg","comment_is_top":true,"comment_ctime":1656081275,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"9.2233720385108992e+18","product_id":100056701,"comment_content":"涨知识了","like_count":0},{"had_liked":false,"id":242221,"user_name":"Kaito","can_delete":false,"product_type":"c1","uid":1020042,"ip_address":"","ucode":"79775FA35A95F2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","comment_is_top":false,"comment_ctime":1597636500,"is_pvip":true,"discussion_count":234,"race_medal":0,"score":"5284407410580","product_id":100056701,"comment_content":"主从全量同步使用RDB而不使用AOF的原因：<br><br>1、RDB文件内容是经过压缩的二进制数据（不同数据类型数据做了针对性优化），文件很小。而AOF文件记录的是每一次写操作的命令，写操作越多文件会变得很大，其中还包括很多对同一个key的多次冗余操作。在主从全量数据同步时，传输RDB文件可以尽量降低对主库机器网络带宽的消耗，从库在加载RDB文件时，一是文件小，读取整个文件的速度会很快，二是因为RDB文件存储的都是二进制数据，从库直接按照RDB协议解析还原数据即可，速度会非常快，而AOF需要依次重放每个写命令，这个过程会经历冗长的处理逻辑，恢复速度相比RDB会慢得多，所以使用RDB进行主从全量同步的成本最低。<br><br>2、假设要使用AOF做全量同步，意味着必须打开AOF功能，打开AOF就要选择文件刷盘的策略，选择不当会严重影响Redis性能。而RDB只有在需要定时备份和主从全量同步数据时才会触发生成一次快照。而在很多丢失数据不敏感的业务场景，其实是不需要开启AOF的。<br><br>另外，需要指出老师文章的错误：“当主从库断连后，主库会把断连期间收到的写操作命令，写入 replication buffer，同时也会把这些操作命令也写入 repl_backlog_buffer 这个缓冲区。”<br><br>1、主从库连接都断开了，哪里来replication buffer呢？<br><br>2、应该不是“主从库断连后”主库才把写操作写入repl_backlog_buffer，只要有从库存在，这个repl_backlog_buffer就会存在。主库的所有写命令除了传播给从库之外，都会在这个repl_backlog_buffer中记录一份，缓存起来，只有预先缓存了这些命令，当从库断连后，从库重新发送psync $master_runid $offset，主库才能通过$offset在repl_backlog_buffer中找到从库断开的位置，只发送$offset之后的增量数据给从库即可。<br><br>有同学对repl_backlog_buffer和replication buffer理解比较混淆，我大概解释一下：<br><br>1、repl_backlog_buffer：就是上面我解释到的，它是为了从库断开之后，如何找到主从差异数据而设计的环形缓冲区，从而避免全量同步带来的性能开销。如果从库断开时间太久，repl_backlog_buffer环形缓冲区被主库的写命令覆盖了，那么从库连上主库后只能乖乖地进行一次全量同步，所以repl_backlog_buffer配置尽量大一些，可以降低主从断开后全量同步的概率。而在repl_backlog_buffer中找主从差异的数据后，如何发给从库呢？这就用到了replication buffer。<br><br>2、replication buffer：Redis和客户端通信也好，和从库通信也好，Redis都需要给分配一个 内存buffer进行数据交互，客户端是一个client，从库也是一个client，我们每个client连上Redis后，Redis都会分配一个client buffer，所有数据交互都是通过这个buffer进行的：Redis先把数据写到这个buffer中，然后再把buffer中的数据发到client socket中再通过网络发送出去，这样就完成了数据交互。所以主从在增量同步时，从库作为一个client，也会分配一个buffer，只不过这个buffer专门用来传播用户的写命令到从库，保证主从数据一致，我们通常把它叫做replication buffer。<br><br>3、再延伸一下，既然有这个内存buffer存在，那么这个buffer有没有限制呢？如果主从在传播命令时，因为某些原因从库处理得非常慢，那么主库上的这个buffer就会持续增长，消耗大量的内存资源，甚至OOM。所以Redis提供了client-output-buffer-limit参数限制这个buffer的大小，如果超过限制，主库会强制断开这个client的连接，也就是说从库处理慢导致主库内存buffer的积压达到限制后，主库会强制断开从库的连接，此时主从复制会中断，中断后如果从库再次发起复制请求，那么此时可能会导致恶性循环，引发复制风暴，这种情况需要格外注意。","like_count":1231,"discussions":[{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299380,"discussion_content":"1. repl_backlog_buffer用于主从间的增量同步。主节点只有一个repl_backlog_buffer缓冲区，各个从节点的offset偏移量都是相对该缓冲区而言的。\n2. replication buffer用于主节点与各个从节点间 数据的批量交互。主节点为各个从节点分别创建一个缓冲区，由于各个从节点的处理能力差异，各个缓冲区数据可能不同。","likes_number":58,"is_delete":false,"is_hidden":false,"ctime":1597669057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":12,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299396,"discussion_content":"理解的很对！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1597672999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299380,"ip_address":""},"score":299396,"extra":""},{"author":{"id":1024726,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a2/d6/97370dfc.jpg","nickname":"onno","note":"","ucode":"FB7E829037DA10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301321,"discussion_content":"这个地方其实就很直白，repl_backlog_buffer仅在主节点一个，各个从节点的offset都在这个buffer内，而relication buffer是客户端buffer，所以每一个client都会有一个，也就是从库作为一个client也会拥有自己的那个","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598489962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299380,"ip_address":""},"score":301321,"extra":""},{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1024726,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a2/d6/97370dfc.jpg","nickname":"onno","note":"","ucode":"FB7E829037DA10","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301361,"discussion_content":"可以去看看老师的答疑部分，对比下就知道哪里理解有误了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598502082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301321,"ip_address":""},"score":301361,"extra":""}]},{"author":{"id":2028938,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/8a/dc9a23a1.jpg","nickname":"续费专用","note":"","ucode":"1B585A131B64B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387297,"discussion_content":"这个专栏看下去的唯一动力就是kaito的评论。。。作者有些地方确实都没讲清楚","likes_number":28,"is_delete":false,"is_hidden":false,"ctime":1628091762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":2293155,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKug7j7FSiaWwGzQKWXPbHA9teGtx4TncVUyxbSUTgxVXH1jESD44FRQJZspF5CrvU7ib0tNJ7Stoag/132","nickname":"Geek_de5d8e","note":"","ucode":"A9D7017CA8E7E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2028938,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/8a/dc9a23a1.jpg","nickname":"续费专用","note":"","ucode":"1B585A131B64B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391992,"discussion_content":"确实","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630750284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":387297,"ip_address":""},"score":391992,"extra":""},{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2028938,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/8a/dc9a23a1.jpg","nickname":"续费专用","note":"","ucode":"1B585A131B64B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539928,"discussion_content":"蒋老师可能默认这些都是大家应该知道的。:(","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639882471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":387297,"ip_address":""},"score":539928,"extra":""},{"author":{"id":2793585,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/a0/71/1725274f.jpg","nickname":"赵敷","note":"","ucode":"39D0FDAC84FB63","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2028938,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/8a/dc9a23a1.jpg","nickname":"续费专用","note":"","ucode":"1B585A131B64B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557006,"discussion_content":"我也感觉作者有些地方其实说的不够准确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647602665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":387297,"ip_address":""},"score":557006,"extra":""}]},{"author":{"id":1211790,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7d/8e/bb16d414.jpg","nickname":"Wangxi","note":"","ucode":"C25A9A14179930","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300810,"discussion_content":"老哥每集都来砸场子","likes_number":23,"is_delete":false,"is_hidden":false,"ctime":1598269518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1300285,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d7/3d/a076faf1.jpg","nickname":"蜗牛","note":"","ucode":"A99C9C890F95E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1211790,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7d/8e/bb16d414.jpg","nickname":"Wangxi","note":"","ucode":"C25A9A14179930","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":328665,"discussion_content":"大佬都是交流：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606207211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300810,"ip_address":""},"score":328665,"extra":""},{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1300285,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d7/3d/a076faf1.jpg","nickname":"蜗牛","note":"","ucode":"A99C9C890F95E4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338298,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609235020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":328665,"ip_address":""},"score":338298,"extra":""},{"author":{"id":1483821,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0G3cibDykvgIkomb5QrjBGuiaf5rJG2317JN1sePZ589IjUcMTOF4ZMrKVYU4ywfq1qfREqCW9Zww/132","nickname":"1634LM","note":"","ucode":"0F5FA57B69788C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1211790,"avatar":"https://static001.geekbang.org/account/avatar/00/12/7d/8e/bb16d414.jpg","nickname":"Wangxi","note":"","ucode":"C25A9A14179930","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":546677,"discussion_content":"这个人应该是来分流的，我看他的评论 感觉他不是来学习的， 而是回答老师的问题 ，吸引其他同学关注他，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642389553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300810,"ip_address":""},"score":546677,"extra":""}]},{"author":{"id":2323177,"avatar":"https://static001.geekbang.org/account/avatar/00/23/72/e9/cfe774c0.jpg","nickname":"大师","note":"","ucode":"906D4F53844226","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361610,"discussion_content":"而在repl_backlog_buffer中找主从差异的数据后，如何发给从库呢？这就用到了replication buffer。\n这句话的意思是：先在backlog里通过offset差异，找到差异数据，然后将这部分差异数据同步到replication buffer后，replication buffer才专门的将这部分数据发送给从库，达到增量同步的目的，是吧？","likes_number":21,"is_delete":false,"is_hidden":false,"ctime":1616718354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2323177,"avatar":"https://static001.geekbang.org/account/avatar/00/23/72/e9/cfe774c0.jpg","nickname":"大师","note":"","ucode":"906D4F53844226","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365599,"discussion_content":"对","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1617848246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":361610,"ip_address":""},"score":365599,"extra":""},{"author":{"id":2844598,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqZjLcrj0O1Dic9ICNHNvmKMme0aykon2iaVBwnQk7YiasTLucahObqBUElFaUDdWhWWxykP50A8EQxg/132","nickname":"Tom","note":"","ucode":"F54B834C527AE6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":590182,"discussion_content":"repl_backlog_buffer不同从库的offset会有差别吗，通过从库id来区分？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665573527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":365599,"ip_address":"广东"},"score":590182,"extra":""}]},{"author":{"id":1622022,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia6zEsh2u119zJicmq7wApvnricZEKiawaZicice1cOzujWdFicFwPtavlHiaVpCNgCpxBtdl7ynd3y0wkQ/132","nickname":"james_xu","note":"","ucode":"12E50291F5BA89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379081,"discussion_content":"看丁奇老师的MySQL课程时，里面在解释全量查询的执行过程时提到了MySQL是把要发送的数据先放在net buffer中，net buffer满了之后再通过socket连接发送给客户端。MySQL中的net buffer和这里的replication buffer是十分的相似了。","likes_number":19,"is_delete":false,"is_hidden":false,"ctime":1623668367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1361159,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","nickname":"涛哥哥","note":"","ucode":"329A1384E3AB5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1622022,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia6zEsh2u119zJicmq7wApvnricZEKiawaZicice1cOzujWdFicFwPtavlHiaVpCNgCpxBtdl7ynd3y0wkQ/132","nickname":"james_xu","note":"","ucode":"12E50291F5BA89","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570618,"discussion_content":"其实不论 mysql 也好，redis 也好，MQ 也是不例外的。其实任何与网络或者磁盘的架构设计，都会有一个缓冲结构的设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651837603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379081,"ip_address":""},"score":570618,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1622022,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia6zEsh2u119zJicmq7wApvnricZEKiawaZicice1cOzujWdFicFwPtavlHiaVpCNgCpxBtdl7ynd3y0wkQ/132","nickname":"james_xu","note":"","ucode":"12E50291F5BA89","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571360,"discussion_content":"不是相似 是为了减少系统调用的次数。如果每写一个byte就发送 就会做系统调用。而攒满一个byte数组再发送 就会少N倍的系统调用。\n在计算机里前者称为write through 后者称为write back.\n顺带提一下 write back是冯诺依曼架构经典写模型","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1652183046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379081,"ip_address":""},"score":571360,"extra":""}]},{"author":{"id":2128887,"avatar":"https://static001.geekbang.org/account/avatar/00/20/7b/f7/062d1a9f.jpg","nickname":"刀杨","note":"","ucode":"BAC6FF79A3D5AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372636,"discussion_content":"K神，我问下是不是这样。repl_backlog_buffer这个缓冲只在主从重连时才起作用，在主从连接正常时，即使master覆盖了slave的数据也没关系，应为数据都在replication_buffer里，只要replication_buffer没溢出，等slave消费完了replication_buffer，slave_offset也追上去了，只有等到主从重连时才会用到repl_backlog_buffer做判断，正常情况下repl_backlog_buffer只是一直循环写。","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1620396714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":15,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2128887,"avatar":"https://static001.geekbang.org/account/avatar/00/20/7b/f7/062d1a9f.jpg","nickname":"刀杨","note":"","ucode":"BAC6FF79A3D5AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372701,"discussion_content":"对","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1620438398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":372636,"ip_address":""},"score":372701,"extra":""},{"author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2128887,"avatar":"https://static001.geekbang.org/account/avatar/00/20/7b/f7/062d1a9f.jpg","nickname":"刀杨","note":"","ucode":"BAC6FF79A3D5AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378788,"discussion_content":"太像MySQL redo log 了，如果机器不发生故障，redo log 就是累赘，因为数据改动都在缓存页中。Redis 的 repl_backlog_buffer 也是，如果主从连接正常也是累赘（不过网络不稳定时常态），因为写命令也在 replication_buffer 中。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1623401394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":372636,"ip_address":""},"score":378788,"extra":""},{"author":{"id":2128887,"avatar":"https://static001.geekbang.org/account/avatar/00/20/7b/f7/062d1a9f.jpg","nickname":"刀杨","note":"","ucode":"BAC6FF79A3D5AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382518,"discussion_content":"redolog不完全是累赘，redolog吧随机io 变成顺序io 了","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1625623383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378788,"ip_address":""},"score":382518,"extra":""}]},{"author":{"id":2128887,"avatar":"https://static001.geekbang.org/account/avatar/00/20/7b/f7/062d1a9f.jpg","nickname":"刀杨","note":"","ucode":"BAC6FF79A3D5AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368855,"discussion_content":"我理解了一下，只要有从节点连接上，在主节点就会有一个repl_backlog_buffer，并且无论从节点是否断开连接，主节点都会把收到的命令写入repl_backlog_buffer，如果从节点连接正常，主节点直接走replication buffer，如果从节点断开连接，等再次连接上时判断offset是否被覆盖，没有被覆盖把slave offset和master offset之间的数据通过replication buffer传输，如果被覆盖则再次RDB走replication buffer全量同步","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1618845493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2128887,"avatar":"https://static001.geekbang.org/account/avatar/00/20/7b/f7/062d1a9f.jpg","nickname":"刀杨","note":"","ucode":"BAC6FF79A3D5AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368888,"discussion_content":"嗯，有一个小问题是，如果一个slave都没有了，那backlog buffer也会释放了。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1618872403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368855,"ip_address":""},"score":368888,"extra":""},{"author":{"id":2962531,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/34/63/45614098.jpg","nickname":"GBXK","note":"","ucode":"AFEF9462413012","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":559888,"discussion_content":"如果是一主一从，那么当从断开连接后再重连，只能全量同步了？因为backlog buffer已经被释放了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1649042330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368888,"ip_address":""},"score":559888,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":571362,"discussion_content":"是不是repl _id 拿不到了 就不用调用createBacklog()? 我印象中就是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652183231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368888,"ip_address":""},"score":571362,"extra":""}]},{"author":{"id":1470958,"avatar":"https://static001.geekbang.org/account/avatar/00/16/71/ee/31b19304.jpg","nickname":"小可爱","note":"","ucode":"5379D1F00E8796","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333332,"discussion_content":"每天只为了看看你的评论哈哈哈","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1607502407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037036,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/15/2c/df1f9cae.jpg","nickname":"nil","note":"","ucode":"6627C9421DA30C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307425,"discussion_content":"好多群都说老哥厉害，还能知道老师错了，还截图就是这个评论，特地买这个课来看您的，前来膜拜一下！","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1600648389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2037036,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/15/2c/df1f9cae.jpg","nickname":"nil","note":"","ucode":"6627C9421DA30C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308748,"discussion_content":"是哪些群？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1601051175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":307425,"ip_address":""},"score":308748,"extra":""}]},{"author":{"id":1010523,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6b/5b/e022dcd0.jpg","nickname":"song","note":"","ucode":"6EA9C14AE21DFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299824,"discussion_content":"老哥 我一篇文章看不到你，我就觉得缺点东西，实在是牛逼。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1597830999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2306208,"avatar":"https://static001.geekbang.org/account/avatar/00/23/30/a0/4fff55b0.jpg","nickname":"谁亦能呵一呵","note":"","ucode":"F949B49D274A48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335323,"discussion_content":"你好，请问基于长连接的命令传播时，从库也是从repl_backlog_buffer中得到新的数据嘛，主库再通过replication_buffer发送黑从库嘛","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1608168313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2306208,"avatar":"https://static001.geekbang.org/account/avatar/00/23/30/a0/4fff55b0.jpg","nickname":"谁亦能呵一呵","note":"","ucode":"F949B49D274A48","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335353,"discussion_content":"命令传播直接走replication buffer。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1608172265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335323,"ip_address":""},"score":335353,"extra":""},{"author":{"id":1720348,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/cSS7liaUp9HEn3hEV47YcsibqMKLA1CjCXSzmIm2dzvXfaJMyg2Nww5RuibQGhs8VDJKSlQVB9rUq9mMqHQIwNyNA/132","nickname":"待价菜鸟","note":"","ucode":"202DB89484FD14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":551855,"discussion_content":"你好。请问下命令传播直接走replication buffer，slave_repl_offset是如果更新的啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645154222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335353,"ip_address":""},"score":551855,"extra":""}]},{"author":{"id":1240510,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/UXCLpCDP4o2LFpLIrEup2arUOHzwhPY3X8nOoNSRwS6NgNiaQEduN8exnEDicc8goGCARIthOzwEpGATpiadzv3oQ/132","nickname":"formain","note":"","ucode":"D0B7816D6A40E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300270,"discussion_content":"老哥，你真是来砸场子的，太牛逼了！","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1598007276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2406845,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/bd/7fef12c8.jpg","nickname":"张新亮","note":"","ucode":"B68A71CDEA551A","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381056,"discussion_content":"“从库作为一个client，也会分配一个buffer，只不过这个buffer专门用来传播用户的写命令到从库，保证主从数据一致，我们通常把它叫做replication buffer。”，问下，多个从库是否需要维护多个replication buffer","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1624882459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2406845,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/bd/7fef12c8.jpg","nickname":"张新亮","note":"","ucode":"B68A71CDEA551A","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":381144,"discussion_content":"会","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1624929938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381056,"ip_address":""},"score":381144,"extra":""},{"author":{"id":2708541,"avatar":"","nickname":"LWQ","note":"","ucode":"6500780D16DD04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":385352,"discussion_content":"当主库完成 RDB 文件发送后，就会把此时 replication buffer 中的修改操作发给从库。那这个阶段主库的写操作数据怎么办呢？这样不就一直有主从库的数据差吗？大佬，请教一下。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627010746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381144,"ip_address":""},"score":385352,"extra":""},{"author":{"id":1644104,"avatar":"https://static001.geekbang.org/account/avatar/00/19/16/48/09493874.jpg","nickname":"茶没喝完","note":"","ucode":"D72D88C42A1258","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2406845,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/bd/7fef12c8.jpg","nickname":"张新亮","note":"","ucode":"B68A71CDEA551A","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":387139,"discussion_content":"每个从库，master都会有一个replication_buffer,但是只有一个replic_backlog_buffer所有salve共有","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1628002717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381056,"ip_address":""},"score":387139,"extra":""}]},{"author":{"id":1175329,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/21/69c181b8.jpg","nickname":"Rain","note":"","ucode":"603DFFAC6A3755","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301581,"discussion_content":"呼吁可以给评论加笔记，划线，复制","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1598580421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2416395,"avatar":"https://static001.geekbang.org/account/avatar/00/24/df/0b/7f14e6fd.jpg","nickname":"rtl.","note":"","ucode":"7E4E58548BA853","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356926,"discussion_content":"插眼","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615709298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2105474,"avatar":"https://static001.geekbang.org/account/avatar/00/20/20/82/e1603919.jpg","nickname":"莞尔一笑","note":"","ucode":"CFF52F89D2C680","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304335,"discussion_content":"大佬，再请教一下主库记录增量操作是写到repl_backlog_buffer后，再从repl_backlog_buffer同步到replication buffer呢，还是主库直接写两份分别到两个buffer中呢？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599548904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2105474,"avatar":"https://static001.geekbang.org/account/avatar/00/20/20/82/e1603919.jpg","nickname":"莞尔一笑","note":"","ucode":"CFF52F89D2C680","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304344,"discussion_content":"分别写。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599550214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304335,"ip_address":""},"score":304344,"extra":""},{"author":{"id":1032000,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bf/40/94eaca1b.jpg","nickname":"wei","note":"","ucode":"8B14D27AE7C54E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":315130,"discussion_content":"看上面讲的，在主从断开重新链接上后，需要从repl_backlog_buffer 的指定offset开始增量复制的时候，那就不是分别写了吧？得从repl_backlog_buffer 指定offset位置把写命令写入到replication buffer 中吧？？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603243755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304344,"ip_address":""},"score":315130,"extra":""},{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1032000,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bf/40/94eaca1b.jpg","nickname":"wei","note":"","ucode":"8B14D27AE7C54E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315160,"discussion_content":"主从断开了，replication buffer也会释放，此时只会写backlog_buffer。待从库连上来之后，再分配replication buffer，然后继续写2个。","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1603245493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315130,"ip_address":""},"score":315160,"extra":""}]},{"author":{"id":2130097,"avatar":"","nickname":"Geek_325aee","note":"","ucode":"5C2CCB648B87E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301018,"discussion_content":"同看了源码后才知道replication_buffer就是redis服务端为每个client发送response的buffer。。\n另外老哥我有个问题，我看到源码slave psync过程中，有slave共用rdb的情形，如下：\n（1）slave1发送psync，需要fullsync，master回复给slave1此时的master_repl_offset记为n\n（2）之后master开始接收写命令，增加master_repl_offset的值记为n+1，并将写命令写入到slave1的replication_buffer中\n（3）此时slave2来psync，master回复给slave1此时的master_repl_offset的值，即n+1；之后master发现正在为slave1生成rdb，那么为slave2复用这个rdb，再将slave1的replication_buffer中的内容复制给slave2；\n（4）当rdb生成完成后，将rdb发送给两个slave，并将缓冲区的命令集合发送出去。但是此时slave2的初始master_repl_offset值比slave1的多了1。此时slave2的这个repl_offset值就是错误的，实际上应该是从n开始累加。\n\n不知道我这里漏掉了什么步骤，或者理解错误？求老哥解答。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598366398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047423,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fb/7f/746a6f5e.jpg","nickname":"Q","note":"","ucode":"785546C617D3DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300719,"discussion_content":"大佬就是不一样！ 看评论就能学习不少！赞！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598247234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1811495,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","nickname":"小袁","note":"","ucode":"3F5D8721F577D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300470,"discussion_content":"砸场子的来了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598114926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299888,"discussion_content":"我今天看了下6.0.6的源码，只找到复制积压缓冲区，你知道replication buffer在哪里吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1597848961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299890,"discussion_content":"不要刻意在意这个名字，它其实就是client的内存缓冲区，因为是专门给从库用的，所以我们才给它起了这个名字。","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1597849512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299888,"ip_address":""},"score":299890,"extra":""}]},{"author":{"id":1819715,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c4/43/a25e8017.jpg","nickname":"随心而动","note":"","ucode":"7D44EBF5007004","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411683,"discussion_content":"很想问一下这些知识是看的书还是官方文档！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635984496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2726415,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eribGDMxHDQH1VxFew07wiaV617Wiam17xZrUHiciatibBLOqPNSInaoo67AFbAUBNKQXKNlDsPIz3FvibVg/132","nickname":"Geek_c92193","note":"","ucode":"4DA44E9262F25F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393353,"discussion_content":"牛逼 ，看老师文章的时候就有点搞不清楚了 ，一看你K神评论立马明白了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631370970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373388,"discussion_content":"真意外可代表2021年还在回复 谈下我自己的看法吧。除了Kaito同学提到的RDB与AOF文件本身特性 我觉得还要考虑linux磁盘寻址这个因素。\n因为aof文件通常在生产上都是GB级别的 对这样一个大文件随机读 磁盘开销无法避免 而如果是一主N从 不是老师说的主-从-从结构 无法想象这种几何级的io wa。\n另外一个写线程在追加另一个读线程在随机读 还牵涉到pagecache的锁定问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620714088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393821,"discussion_content":"aof应该是追加方式是顺序读的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631611205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373388,"ip_address":""},"score":393821,"extra":""}]},{"author":{"id":2277773,"avatar":"","nickname":"肖立智","note":"","ucode":"9DAF54CB38DB72","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360969,"discussion_content":"看了几章都看到你，想请问一下你对这个redis这么了解想必是系统性看过书了吧，有哪些书籍呢？同时也注意到还有很多系统层面的知识点，膜拜大佬知识面的广度。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616568771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1757797,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d2/65/79d89c77.jpg","nickname":"小白白不白","note":"","ucode":"270EC3A197A8D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349900,"discussion_content":"K神 如果在全量复制途中，这时写操作暴增使replicationBuffer满了主库将连接主动断开。  那么就是从库还没有复制，主库就将其断开了。\n会不会出现这种情况？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613623674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1757797,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d2/65/79d89c77.jpg","nickname":"小白白不白","note":"","ucode":"270EC3A197A8D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349951,"discussion_content":"会的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613639786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349900,"ip_address":""},"score":349951,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1757797,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d2/65/79d89c77.jpg","nickname":"小白白不白","note":"","ucode":"270EC3A197A8D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373390,"discussion_content":"如果不断开就是等着雪崩 所以熔断只是一种思想 不是一种技术。比方说JDK线程池打满ThreadPoolExecutor将其回绝掉","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620714510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349900,"ip_address":""},"score":373390,"extra":""}]},{"author":{"id":1112676,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","nickname":"Sam Fu","note":"","ucode":"EA285A4943271F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347717,"discussion_content":"哈哈哈 你太强了！！！ ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612314997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1877187,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/a4/c3/2f3af7bb.jpg","nickname":"Charles","note":"","ucode":"457C49D774B8FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344496,"discussion_content":"问一下，如果有3个从库，是不是就会有3个replication buff 和 3个 repl_back_log？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611479288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1877187,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/a4/c3/2f3af7bb.jpg","nickname":"Charles","note":"","ucode":"457C49D774B8FE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344507,"discussion_content":"backlog buffer只有一个。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1611481433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":344496,"ip_address":""},"score":344507,"extra":""}]},{"author":{"id":2351810,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/BdyGbicsMXzLDeOdUcFAthHrWK7PsWZ55kVK3g5YsCsYaAzCch168zGyXxxMibW2icqM4ibQcTXqm7Rhep5lIt594Q/132","nickname":"Geek_a2edf0","note":"","ucode":"617F6ADB998E57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333850,"discussion_content":"为什么不直接从repl_backlog_buffer拉数据，而要获取到offset再去replication_buffer获取数据呢 ？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607653366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2372437,"avatar":"","nickname":"Geek_9e0ac9","note":"","ucode":"F12BDAF33C9134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2351810,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/BdyGbicsMXzLDeOdUcFAthHrWK7PsWZ55kVK3g5YsCsYaAzCch168zGyXxxMibW2icqM4ibQcTXqm7Rhep5lIt594Q/132","nickname":"Geek_a2edf0","note":"","ucode":"617F6ADB998E57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336293,"discussion_content":"当主从库断连后，replication buffer丢失，repl_backlog_buffer仍然存在，主库会把断连期间收到的写操作命令，写入 repl_backlog_buffer 这个缓冲区。当主从库重新建立连接后，主库只用把repl_backlog_buffer中位于 master_repl_offset 和 slave_repl_offset 之间的命令操作通过replication buffer同步给从库就行。replication buffer其实就相当于一个发送缓冲区，用于缓存将要发给从库的命令，而repl_backlog_buffer相当于一个备份，当主从库断开连接，replication buffer丢失后，主库仍然可以将需要发送给从库的名录记录到repl_back_log中，用于后续同步","likes_number":29,"is_delete":false,"is_hidden":false,"ctime":1608546185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333850,"ip_address":""},"score":336293,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2351810,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/BdyGbicsMXzLDeOdUcFAthHrWK7PsWZ55kVK3g5YsCsYaAzCch168zGyXxxMibW2icqM4ibQcTXqm7Rhep5lIt594Q/132","nickname":"Geek_a2edf0","note":"","ucode":"617F6ADB998E57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375323,"discussion_content":"其实backlog就是日志 而buffer就是操作系统里的cache/buffer 每次发送都是攒着发的 要不然就是慢io了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621578985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333850,"ip_address":""},"score":375323,"extra":""}]},{"author":{"id":1622696,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/a8/f3f8f5d2.jpg","nickname":"一格状语","note":"","ucode":"EBA9ED5F97416D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329397,"discussion_content":"K神好，主从库连接恢复之后，主库将偏移差之间的命令正常的传给了从库。那么后续呢？再次开启基于长连接的命令传播模式进行写同步吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606378556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1622696,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/a8/f3f8f5d2.jpg","nickname":"一格状语","note":"","ucode":"EBA9ED5F97416D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329413,"discussion_content":"是的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1606381150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329397,"ip_address":""},"score":329413,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1622696,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/a8/f3f8f5d2.jpg","nickname":"一格状语","note":"","ucode":"EBA9ED5F97416D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373418,"discussion_content":"偏移接上了 就定期同步就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620721737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329397,"ip_address":""},"score":373418,"extra":""}]},{"author":{"id":2212143,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c1/2f/5c8167aa.jpg","nickname":"油纸伞","note":"","ucode":"C2655B9F8874E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312825,"discussion_content":"有个疑惑，主从库中都有个key1：99，如果主从库之间网络断开了，这时候有个线程过来修改了key1：55，主库会存储下这个操作，另一个线程过来去如果去从库中读取这个值，由于网络断开了主库没有同步数据到从库，就会读到原来的旧值key1：99？这就数据不一致了？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602827472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2212143,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c1/2f/5c8167aa.jpg","nickname":"油纸伞","note":"","ucode":"C2655B9F8874E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312832,"discussion_content":"是。主从同步有问题，数据肯定会不一致啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602829199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312825,"ip_address":""},"score":312832,"extra":""},{"author":{"id":2212143,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c1/2f/5c8167aa.jpg","nickname":"油纸伞","note":"","ucode":"C2655B9F8874E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":312973,"discussion_content":"那有没办法解决这个数据一致性问题呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602899478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312832,"ip_address":""},"score":312973,"extra":""},{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2212143,"avatar":"https://static001.geekbang.org/account/avatar/00/21/c1/2f/5c8167aa.jpg","nickname":"油纸伞","note":"","ucode":"C2655B9F8874E2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312978,"discussion_content":"要尽可能保证主从节点的状态正常，降低不一致的概率。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602900797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312973,"ip_address":""},"score":312978,"extra":""}]},{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299352,"discussion_content":"你好，同一个Redis实例，AOF日志文件 为什么会比RDB文件 大呢？\n\n自答：AOF日志文件的每条命令除了键值信息外，还有命令，分隔符等信息，因此整个库的AOF日志，是要比单纯只包括键值信息的RDB文件要大。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597666006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301649,"discussion_content":"自拍自扣，铁血两分","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598597700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299352,"ip_address":""},"score":301649,"extra":""}]},{"author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299278,"discussion_content":"大佬在帮我解答下疑问：就是bgsave生成的rdb文件什么时候“过期”，或者有过期的说法吗？比如我2个从节点执行replicaof（或者slaveof），主节点是同一个，这中情况下，rdb生成1次还是2次？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597639726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":299323,"discussion_content":"RDB没有过期的说法。\n\n如果一个从库连上主库需要同步全量数据，主库fork子进程开始生成RDB文件，此时又一个从库需要全量同步数据，这个从库会等待主库RDB生成完成后，直接复用这个RDB文件。\n\n如果之前的从库RDB已经生成，正在发送RDB数据给从库，此时新的从库只能生成新的RDB使用。","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1597658585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299278,"ip_address":""},"score":299323,"extra":""},{"author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":299330,"discussion_content":"明白 谢谢了，谢谢大佬解惑。\n英文太菜，配置文件解释的：With disk-backed replication, while the RDB file is generated, more replicas can be queued and served with the RDB file as soon as the current child producing the RDB file finishes its work\n看的不是很懂，[大哭]","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1597659545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299323,"ip_address":""},"score":299330,"extra":""},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":299639,"discussion_content":"以 disk 的方式同步数据，主库生成RDB文件并且同步后，这个RDB文件是不是自动删除了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597757090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299323,"ip_address":""},"score":299639,"extra":""}]},{"author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299276,"discussion_content":"豁然开朗，点赞，关注，早上搜索了好久replication buffer与repl_backlog_buffer的区别","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597639467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2850411,"avatar":"","nickname":"李红艳","note":"","ucode":"A80F00A38F38CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587470,"discussion_content":"k神！！，可以推荐一些redis的学习资料吗？不限于视频，书籍，专栏等任何形式，非常感谢~~~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663075809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3027938,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/33/e2/22ec4c24.jpg","nickname":"健康创客小辉辉","note":"","ucode":"C633A4D21C2BCA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577410,"discussion_content":"大神，太卷了，跟不上😂 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656081184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1183484,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0e/fc/4c0d6fa7.jpg","nickname":"A-领悟 Lifetruth‖","note":"","ucode":"8728D44AD28CDB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576070,"discussion_content":"老哥 稳啊，解决的我刚看完的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655270645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","nickname":"听雨","note":"","ucode":"252754F9FCFF0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574380,"discussion_content":"有问题请教下老哥，第一次同步RDB时，数据会经过replication_buffer吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654010040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1254493,"avatar":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","nickname":"听雨","note":"","ucode":"252754F9FCFF0C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575996,"discussion_content":"都会吧  相当于send_buffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655220272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":574380,"ip_address":""},"score":575996,"extra":""}]},{"author":{"id":2041396,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","nickname":"宙斯","note":"","ucode":"80DF36BAD298AD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560993,"discussion_content":"咨询个问题，哨兵模式下 Redis 主从切换之后，其他从服务器都需要重新全量复制吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649508285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1792714,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/5a/ca/4d5d23d1.jpg","nickname":"Im me","note":"","ucode":"FF7DEED4BB4C37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556490,"discussion_content":"大佬，是不是有群，能拉我进群吗？课程讲的挺好，但是我产生了更多的疑问。我的微信号: iYouQiang99","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647400876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2357566,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f9/3e/0d5f27c4.jpg","nickname":"肥猫不开心","note":"","ucode":"FA9204B84913C0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553680,"discussion_content":"🐮 我就是要清不楚的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646027021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":5,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1728297,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/5f/29/9ea859ad.jpg","nickname":"Jmper","note":"","ucode":"E5CD2E6C0E80AB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553382,"discussion_content":"感谢大神，我再这句话疑惑了很长时间，找了很多资料，面对断联网络后，同时将命令写进两个缓存池太不理解了，😭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645869302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1415619,"avatar":"https://static001.geekbang.org/account/avatar/00/15/99/c3/e4f408d4.jpg","nickname":"陌兮","note":"","ucode":"00CE47CAECD5CD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553338,"discussion_content":"每次看到都感觉到惊艳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645855578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2883490,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/ff/a2/56e24200.jpg","nickname":"J 杰~","note":"","ucode":"7202987553A19D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544267,"discussion_content":"哥你太猛了，作者不敢置顶你了:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641453512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1513948,"avatar":"https://static001.geekbang.org/account/avatar/00/17/19/dc/9d3ed421.jpg","nickname":"monchickey","note":"","ucode":"D7B670444F62B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403613,"discussion_content":"看老师的意思replication buffer应该是在主库这一侧的缓冲区，不是在客户端的，每个TCP连接拥有1个，所以连接断开后应该也是可以写入的，只是网卡发不出去，客户端的buffer服务端应该不用关心吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634117227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1779061,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/25/75/d38dacaf.jpg","nickname":"李安民","note":"","ucode":"B5C45FD56E652B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393682,"discussion_content":"巨佬👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631544594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2263999,"avatar":"","nickname":"38k","note":"","ucode":"4CA6DE061A576A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385680,"discussion_content":"这张说的有点乱，有些地方错误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627204009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2425143,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ax8hKssnRFGUJvb0mQFZltpcnA7kyAR6Mx24gRpVwjUjRSFpZsF667IIZaCdpoamiaiaYnTqwHzOF1eFd6KYggow/132","nickname":"Geek_0902d9","note":"","ucode":"7D65F39B5955D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385456,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627049270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1203051,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5b/6b/1b2f9b81.jpg","nickname":"Joey(小东)","note":"","ucode":"7C30FC82EECF74","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383942,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626312926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1305393,"avatar":"https://static001.geekbang.org/account/avatar/00/13/eb/31/2768a6a1.jpg","nickname":"斌子","note":"","ucode":"602804C685CFAE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380565,"discussion_content":"k神，我的理解是这样，主从连接断重连后，会先应用replication buffer里面的内容，然后再发送slave offset，这时候主再查询master offset做对比，如果还有差异，就增量，如果数值被覆盖了全量？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624584192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1997758,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/7b/be/12735117.jpg","nickname":"god","note":"","ucode":"09CB6D17451CBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1305393,"avatar":"https://static001.geekbang.org/account/avatar/00/13/eb/31/2768a6a1.jpg","nickname":"斌子","note":"","ucode":"602804C685CFAE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384898,"discussion_content":"说的不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626786488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":380565,"ip_address":""},"score":384898,"extra":""},{"author":{"id":1644104,"avatar":"https://static001.geekbang.org/account/avatar/00/19/16/48/09493874.jpg","nickname":"茶没喝完","note":"","ucode":"D72D88C42A1258","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1305393,"avatar":"https://static001.geekbang.org/account/avatar/00/13/eb/31/2768a6a1.jpg","nickname":"斌子","note":"","ucode":"602804C685CFAE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387140,"discussion_content":"连接断开后，replication buffer内存释放。当master没有salve与它连接，replica_backlog_buffer也会这一定时间后内存释放，这个时间可以在配置文件修改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628002828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":380565,"ip_address":""},"score":387140,"extra":""}]},{"author":{"id":1389314,"avatar":"https://static001.geekbang.org/account/avatar/00/15/33/02/83f47bf9.jpg","nickname":"流沙","note":"","ucode":"6153686D1C34B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380210,"discussion_content":"k神你好，增量复制时，从库发过来它的offset，发现backlog已经将其覆盖了，那就会进行一次全量同步，那全量同步之后，主从应该是一致的，老师怎么在文中说这时候会主从不一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624373734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":6,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518793,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/c9/462afe28.jpg","nickname":"小白","note":"","ucode":"11FC209D9ED65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378880,"discussion_content":"类似于mysql写操作的bin log 和 redo log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623482823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2647707,"avatar":"https://static001.geekbang.org/account/avatar/00/28/66/9b/01d1b20d.jpg","nickname":"Ballontt","note":"","ucode":"2C9163EEF4B8CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377822,"discussion_content":"@ Kaito 1）命令传播中的改操作，会写入replication buffer吗，如果不会是怎么发送给salve的？2）命令传播也应该是异步的，如果是异步如何控制写slave scoket的频率？\n3）除了重连外，backlog buffer还有一个使用场景，如：命令传播阶段，网络数据丢失了，slave在向master发送心跳时，master是可以感知到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622888718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2647707,"avatar":"https://static001.geekbang.org/account/avatar/00/28/66/9b/01d1b20d.jpg","nickname":"Ballontt","note":"","ucode":"2C9163EEF4B8CD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377826,"discussion_content":"1、会\n2、先写到buffer中，再由定时任务刷到slave socket\n3、不是，我没看到源码有这个逻辑","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1622894359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":377822,"ip_address":""},"score":377826,"extra":""},{"author":{"id":1317999,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1c/6f/3ea2a599.jpg","nickname":"嘉木","note":"","ucode":"AF4877693782C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":400144,"discussion_content":"2、先写到buffer中，再由定时任务刷到slave socket\n—— 是每次事件循环前处理一轮buffer的发送，没处理完的由可写事件触发，调用可写事件处理器发给slave的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633181379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":377826,"ip_address":""},"score":400144,"extra":""}]},{"author":{"id":2557346,"avatar":"https://static001.geekbang.org/account/avatar/00/27/05/a2/24d5e88e.jpg","nickname":"king🐳","note":"","ucode":"88DA7981062AB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376692,"discussion_content":"RDB快照会存在同一个key的多次冗余操作吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622279486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2557346,"avatar":"https://static001.geekbang.org/account/avatar/00/27/05/a2/24d5e88e.jpg","nickname":"king🐳","note":"","ucode":"88DA7981062AB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376718,"discussion_content":"不会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622290646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":376692,"ip_address":""},"score":376718,"extra":""},{"author":{"id":1644104,"avatar":"https://static001.geekbang.org/account/avatar/00/19/16/48/09493874.jpg","nickname":"茶没喝完","note":"","ucode":"D72D88C42A1258","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2557346,"avatar":"https://static001.geekbang.org/account/avatar/00/27/05/a2/24d5e88e.jpg","nickname":"king🐳","note":"","ucode":"88DA7981062AB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387141,"discussion_content":"RDB文件保存的是key:value，也就是快照是内存的最新数据。AOF文件保存的命令形式，对同一个key多次操作，aof文件会记录多次操作。这是aof文件比rdb文件大的原因，使用aof文件恢复数据库更慢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1628003071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":376692,"ip_address":""},"score":387141,"extra":""}]},{"author":{"id":1512816,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/70/3cfbe4a7.jpg","nickname":"M","note":"","ucode":"762580CB3D39AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371753,"discussion_content":"课代表这块还有点懵懂，主从库断联了之后，先在backlog里通过offset差异，找到差异数据，然后将这部分差异数据同步到replication buffer后在同步给从库。backlog不是只记录主从差异的offset吗，咋还有记录新写入的主库数据呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619952678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1512816,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/70/3cfbe4a7.jpg","nickname":"M","note":"","ucode":"762580CB3D39AA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371851,"discussion_content":"主不一直写新数据，差异数据怎么找对不？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620020033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":371753,"ip_address":""},"score":371851,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1512816,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/70/3cfbe4a7.jpg","nickname":"M","note":"","ucode":"762580CB3D39AA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373385,"discussion_content":"这里牵涉到对日志的理解 简单的说就是把发生的事件记录下来 才能有后续的一系列事情","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620713110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":371753,"ip_address":""},"score":373385,"extra":""}]},{"author":{"id":1179737,"avatar":"https://static001.geekbang.org/account/avatar/00/12/00/59/f25c8831.jpg","nickname":"ElywardYou","note":"","ucode":"C729514095676D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368703,"discussion_content":"同步过程中，从节点可以接收读命令吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618810596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1179737,"avatar":"https://static001.geekbang.org/account/avatar/00/12/00/59/f25c8831.jpg","nickname":"ElywardYou","note":"","ucode":"C729514095676D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368845,"discussion_content":"可以","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618844407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368703,"ip_address":""},"score":368845,"extra":""},{"author":{"id":2139819,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a6/ab/ac3a3348.jpg","nickname":"晴天","note":"","ucode":"8CF96071F37680","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":371403,"discussion_content":"如果从节点还没增量同步完成，此时收到了读请求会怎么处理？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619756003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368845,"ip_address":""},"score":371403,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2139819,"avatar":"https://static001.geekbang.org/account/avatar/00/20/a6/ab/ac3a3348.jpg","nickname":"晴天","note":"","ucode":"8CF96071F37680","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373389,"discussion_content":"表象上就是数据丢失 这就要看业务上要不要把连接放出来直连从库了。毕竟10ms级别的延迟 现代存储系统复制技术都无力解决。但是ap级别的redis使用时应该要提前知晓这些问题。否则就是把ap当成ca用了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620714207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":371403,"ip_address":""},"score":373389,"extra":""}]},{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350921,"discussion_content":"原文：当主从库断连后，主库会把断连期间收到的写操作命令，写入 replication buffer，同时也会把这些操作命令也写入 repl_backlog_buffer 这个缓冲区。\n\n课代表，请问一下，主从断连之后，为啥还要写 replication buffer，该 buffer 只是用于长连接命令传播时，缓存发送从库的写命令的吧？\n\n当主从库重新连上时，从 repl_backlog_buffer 读取待同步的写命令，通过 replication buffer 发送给从库。因此主从断连之后往 replication buffer 写入的写命令，就是无效的吖！\n\n谢谢！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614073666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351085,"discussion_content":"主从断了之后，replication buffer就没了，不会再写。这期间只会写backlog buffer，我在评论里指出了文章错误了。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1614149980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":350921,"ip_address":""},"score":351085,"extra":""},{"author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":361840,"discussion_content":"这篇讲得好乱啊，我看深入浅出redis说，主从同步时，全量用rdb，同步rdb期间的增量写入循环buffer，思路特别清晰。但是这篇却说同步期间的增量写入replication buffer，断网期间写入循环buffer和replication。。。乱七八糟，关键指出来了还不该。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616767322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":351085,"ip_address":""},"score":361840,"extra":""},{"author":{"id":1438422,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/jgEicJMDKtww4iayMAw247KHwX2N4g5xoGrW5pjVsgJhpibFgs79uVibjOTVuo1ia17XHyHzlk4xvJSP2OCE0AD14xg/132","nickname":"Geek_8b8d3d","note":"","ucode":"9E308F95A5F748","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":367515,"discussion_content":"这地方应该文章里讲错了，我看了半天都没理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618384672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":351085,"ip_address":""},"score":367515,"extra":""}]},{"author":{"id":1253530,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/9a/3b1c65fd.jpg","nickname":"八百","note":"","ucode":"79F1F79ADF5A00","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348873,"discussion_content":"666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612762878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622499,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyr8VM0QCSDaiaQ5K8OFF3o6h3rwucDicYNhKxaxqEanic9aWfd3bOuopUPza6uTfskpELQms8QBvdQ/132","nickname":"LinSharry","note":"","ucode":"74828240C1FF99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345533,"discussion_content":"有个问题请教下，redis会为每个客户端配置一个replication_buffer,那当有很多客户端与redis连接的时候，redis分配的replication_buffer不就会越来越多吗，redis对这个有限制或者处理吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611736463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344530,"discussion_content":"想了解更多细节，可以加我微信 black-rye 进群提问题哈！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611490772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1272662,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","nickname":"单朋荣","note":"","ucode":"8AD121BEDD9675","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340658,"discussion_content":"既然buffer是用来数据交换的，为啥block中要存数据呢？直接存主存从读的offset偏移量不就好了~不是很明白，求解答，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610089271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":7,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1355831,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/37/d654fbac.jpg","nickname":"几近虚年","note":"","ucode":"28CD6486EED8E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1272662,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","nickname":"单朋荣","note":"","ucode":"8AD121BEDD9675","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360626,"discussion_content":"你说的是 repl_backlog_buffer 吧？按照大佬评论纠正的，repl_buffer 缓存在主从连接断开后，就释放了。那此时主库新来的写操作，写命令就得找地方放，并且得同步给从库。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1616492117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340658,"ip_address":""},"score":360626,"extra":""}]},{"author":{"id":1185504,"avatar":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","nickname":"星期八","note":"","ucode":"34A37F73A48E7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339101,"discussion_content":"replication buffer怎么感觉你是的系统的缓冲区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609503756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185504,"avatar":"https://static001.geekbang.org/account/avatar/00/12/16/e0/7abad3cc.jpg","nickname":"星期八","note":"","ucode":"34A37F73A48E7F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373391,"discussion_content":"把它理解为linux的cache把","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620714655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339101,"ip_address":""},"score":373391,"extra":""}]},{"author":{"id":1179560,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/a8/73cd4a30.jpg","nickname":"千万海","note":"","ucode":"941C431A163B83","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329375,"discussion_content":"原文说 replication buffer 记录下来之前的操作所有命令，但是如果只是负责网络通信的buffer,难道不应该是发一个删一个么。且如果这个已经有了所有命令，则没有必要再弄个环形缓冲区了，这里都有全量数据。这个地方原文是不是有问题，课代表？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606373716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1179560,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/a8/73cd4a30.jpg","nickname":"千万海","note":"","ucode":"941C431A163B83","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329388,"discussion_content":"再读一遍文章理解下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606377283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329375,"ip_address":""},"score":329388,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179560,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/a8/73cd4a30.jpg","nickname":"千万海","note":"","ucode":"941C431A163B83","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375324,"discussion_content":"buffer不用删除 因为网络buffer没有一致性问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621579032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329375,"ip_address":""},"score":375324,"extra":""}]},{"author":{"id":1134774,"avatar":"https://static001.geekbang.org/account/avatar/00/11/50/b6/a60efa42.jpg","nickname":"孟凡浩","note":"","ucode":"77522A196C31D5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328055,"discussion_content":"mk","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606043615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003699,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL8L7Am3u37GO6CWKqBbI02DZ2ss3IZb0F9OLewAS446vh3aicndQ255HjEDzIldBUhRpUbL04rnDA/132","nickname":"Cloud_July","note":"","ucode":"98646F7142CBFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326647,"discussion_content":"replication buffer为什么会持续增长呢，除了用来处理主从的差异数据，还会处理什么数据，只是从库复制慢的话，最多就是保存了主从的差异数据吧，还是发生全量备份时也是用这块内存？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605637412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1003699,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL8L7Am3u37GO6CWKqBbI02DZ2ss3IZb0F9OLewAS446vh3aicndQ255HjEDzIldBUhRpUbL04rnDA/132","nickname":"Cloud_July","note":"","ucode":"98646F7142CBFF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329390,"discussion_content":"主从全量同步、增量同步都用这个buffer。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606377312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326647,"ip_address":""},"score":329390,"extra":""},{"author":{"id":1317999,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1c/6f/3ea2a599.jpg","nickname":"嘉木","note":"","ucode":"AF4877693782C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":400156,"discussion_content":"全量同步的RDB数据，直接发slave，不走这个buffer；但是发送RDB期间的写命令会写到replication buffer。\nRDB发完，再来发replication buffer里面的写命令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633182893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378790,"ip_address":""},"score":400156,"extra":""}]},{"author":{"id":1668982,"avatar":"https://static001.geekbang.org/account/avatar/00/19/77/76/56740001.jpg","nickname":"猿飞日斩","note":"","ucode":"9ABF88EAD3965C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316594,"discussion_content":"主从同步的RDB文件与持久化生成的RDB文件是同一份吗？快照周期内发生了主从全量复制，快照周期时生成的RDB文件会被覆盖吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603429429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2287252,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e6/94/b8443fe7.jpg","nickname":"路飞大大","note":"","ucode":"B9C96899F3A957","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1668982,"avatar":"https://static001.geekbang.org/account/avatar/00/19/77/76/56740001.jpg","nickname":"猿飞日斩","note":"","ucode":"9ABF88EAD3965C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320840,"discussion_content":"振磊，是你吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604488144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":316594,"ip_address":""},"score":320840,"extra":""},{"author":{"id":1668982,"avatar":"https://static001.geekbang.org/account/avatar/00/19/77/76/56740001.jpg","nickname":"猿飞日斩","note":"","ucode":"9ABF88EAD3965C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2287252,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e6/94/b8443fe7.jpg","nickname":"路飞大大","note":"","ucode":"B9C96899F3A957","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321051,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604537894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":320840,"ip_address":""},"score":321051,"extra":""},{"author":{"id":2372437,"avatar":"","nickname":"Geek_9e0ac9","note":"","ucode":"F12BDAF33C9134","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1668982,"avatar":"https://static001.geekbang.org/account/avatar/00/19/77/76/56740001.jpg","nickname":"猿飞日斩","note":"","ucode":"9ABF88EAD3965C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336295,"discussion_content":"不是，如果主库不采用rdb快照进行持久化，也就不存在RDB文件。当主从库第一次同步时，主库会自行进行一次全量快照生成要发给从库的RDB文件。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608546418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":316594,"ip_address":""},"score":336295,"extra":""}]},{"author":{"id":1977474,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2c/82/98e2b82a.jpg","nickname":"Reborn 2.0","note":"","ucode":"BA506E7455D91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315448,"discussion_content":"你好, 我还想问一个问题: 主从库建立起的这个&#34;命令传播的长连接&#34;, 是刚开始第一步slave发送replicaof命令的时候就建立好一直维持的吗? 还是什么时候啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603276103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1977474,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2c/82/98e2b82a.jpg","nickname":"Reborn 2.0","note":"","ucode":"BA506E7455D91C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315497,"discussion_content":"主从建立连接就会分配buffer。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603281203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315448,"ip_address":""},"score":315497,"extra":""},{"author":{"id":1977474,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2c/82/98e2b82a.jpg","nickname":"Reborn 2.0","note":"","ucode":"BA506E7455D91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":315868,"discussion_content":"好的，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603333399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315497,"ip_address":""},"score":315868,"extra":""},{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":338290,"discussion_content":"？ @Reborn 2.0 应该是问的那个长连接是什么时候建立的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609233819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315497,"ip_address":""},"score":338290,"extra":""}]},{"author":{"id":1977474,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2c/82/98e2b82a.jpg","nickname":"Reborn 2.0","note":"","ucode":"BA506E7455D91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315443,"discussion_content":"我想问一下: redis执行的每个写命令都有一个offset吗? 为什么repli_backlog_buffer里面有offset, slave从replication_buffer上面读数据会知道另一个buffer上面的offset呢?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603275539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1977474,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2c/82/98e2b82a.jpg","nickname":"Reborn 2.0","note":"","ucode":"BA506E7455D91C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315498,"discussion_content":"offset是server根据每个写请求的数据长度计算出来的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603281492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315443,"ip_address":""},"score":315498,"extra":""},{"author":{"id":1977474,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2c/82/98e2b82a.jpg","nickname":"Reborn 2.0","note":"","ucode":"BA506E7455D91C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":315870,"discussion_content":"哦哦，那对于每一个写命令的offset就是master和slave都知道的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603333479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315498,"ip_address":""},"score":315870,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1977474,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2c/82/98e2b82a.jpg","nickname":"Reborn 2.0","note":"","ucode":"BA506E7455D91C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375325,"discussion_content":"看一下psync参数 slave是把自己的offset带给master而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621579092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315443,"ip_address":""},"score":375325,"extra":""}]},{"author":{"id":1781893,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/30/85/14c2f16c.jpg","nickname":"石小","note":"","ucode":"4258C686F289A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312967,"discussion_content":"班长好，结合上节课的持久化策略，我有这样的问题：我们业务一般都只在从库做持久化，那么可不可能出现一种情况，主库数据写入之后发生宕机（此时上层应用程序调用返回的结果是成功的），但还没来得及和从库同步，等到主从自动切换完成，新的主库依然没有最后一次写入的数据，造成了数据的永久失败，而应用程序是无感知的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602896731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1781893,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/30/85/14c2f16c.jpg","nickname":"石小","note":"","ucode":"4258C686F289A6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312968,"discussion_content":"是，有可能。但只有在写入量很大，并且主从网络可能存在延迟的情况下，会出现这种情况，但并不是没有可能。\n\n主从同步本身不保证完全一致，只要是异步同步，都有可能发生这种问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602897720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312967,"ip_address":""},"score":312968,"extra":""},{"author":{"id":2037841,"avatar":"","nickname":"huan","note":"","ucode":"C98A40D3667336","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":365549,"discussion_content":"那有方案保证主库挂掉的时候，不丢失数据吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617839223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":312968,"ip_address":""},"score":365549,"extra":""},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2037841,"avatar":"","nickname":"huan","note":"","ucode":"C98A40D3667336","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373446,"discussion_content":"除非采用同步 或半同步 但是和redis设计初衷违背","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620731305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":365549,"ip_address":""},"score":373446,"extra":""}]},{"author":{"id":1316682,"avatar":"https://static001.geekbang.org/account/avatar/00/14/17/4a/d8fd5563.jpg","nickname":"记忆","note":"","ucode":"503DBE662BF544","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308296,"discussion_content":"老哥，主库怎么知道从库发来的offset位置已经被覆盖了呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600910209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1316682,"avatar":"https://static001.geekbang.org/account/avatar/00/14/17/4a/d8fd5563.jpg","nickname":"记忆","note":"","ucode":"503DBE662BF544","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308447,"discussion_content":"主库在repl_backlog中记的命令数据是带有offset的，如果从库发来的offset在repl_backlog中找不到对应的命令数据，就说明被新数据覆盖了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1600953338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308296,"ip_address":""},"score":308447,"extra":""},{"author":{"id":1020629,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/d5/699384a0.jpg","nickname":"yeek","note":"","ucode":"A1C71023113CB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":309322,"discussion_content":"可以理解为offset都是数组的索引，然后主库在写这个buffer时，一直增加offset的值，然后原环队列中的节点上的offset被覆盖了，从而能知道从库的偏移量是否被覆盖了，是这样么？我还没看源码…","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1601258214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308447,"ip_address":""},"score":309322,"extra":""},{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1020629,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/d5/699384a0.jpg","nickname":"yeek","note":"","ucode":"A1C71023113CB9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309325,"discussion_content":"可以这么理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601258441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309322,"ip_address":""},"score":309325,"extra":""}]},{"author":{"id":1117838,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/8e/fab5c731.jpg","nickname":"南北宏","note":"","ucode":"66C99A63827FA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306365,"discussion_content":"1.从节点断开后replication buffer也没了，这时候重连的增量复制是从repl_backlog_buffer了吧\n2.所以replication buffer用到的时候只有命令传播的时候用到了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600255968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":8,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/b1/86ea2993.jpg","nickname":"静晓晨曦","note":"","ucode":"DC8BB8A85FD937","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305066,"discussion_content":"评论又能学习一波，给老哥点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599752589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1635325,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f3/fd/20cb61a8.jpg","nickname":"橙子乐","note":"","ucode":"CA72E9911EC614","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304863,"discussion_content":"直接来看你评论的，搞redis组件一年多了，你的评论对于问题的解析和扩展真的相当到位，当然还有对老师错误的指正，赞！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599701968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1635325,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f3/fd/20cb61a8.jpg","nickname":"橙子乐","note":"","ucode":"CA72E9911EC614","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304865,"discussion_content":"过奖过奖～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599702148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304863,"ip_address":""},"score":304865,"extra":""}]},{"author":{"id":1812201,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLm8skz4F7FGGBTXWUMia6qVEc00BddeXapicv5FkAx62GmOnUNEcE4scSR60AmappQoNdIQhccKsBA/132","nickname":"末日，成欢","note":"","ucode":"BBAEBB9C93558A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302765,"discussion_content":"大佬， 内存buffer和client buffer 有啥区别， 是一个意思吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599025816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1812201,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLm8skz4F7FGGBTXWUMia6qVEc00BddeXapicv5FkAx62GmOnUNEcE4scSR60AmappQoNdIQhccKsBA/132","nickname":"末日，成欢","note":"","ucode":"BBAEBB9C93558A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302766,"discussion_content":"就是在内存维护一个buffer，这个buffer专门用于和client传输数据用的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599025937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302765,"ip_address":""},"score":302766,"extra":""}]},{"author":{"id":2105198,"avatar":"https://static001.geekbang.org/account/avatar/00/20/1f/6e/1dad9975.jpg","nickname":"海风吹","note":"","ucode":"C7A83EE7610D8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300824,"discussion_content":"repl_backlog_buffer环形缓冲区被主库的写命令覆盖了，那么从库连上主库后只能乖乖地进行一次全量同步\n这儿没明白， 从库是怎么知道 环形缓冲区被主库已经全覆盖了哪？？它只有一个偏移量。是第一段中说的    “”缓存起来，只有预先缓存了这些命令“”，对比缓存的命令么？？但是这些命令也可能相同啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598275089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2105198,"avatar":"https://static001.geekbang.org/account/avatar/00/20/1f/6e/1dad9975.jpg","nickname":"海风吹","note":"","ucode":"C7A83EE7610D8F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300860,"discussion_content":"不是从库做的，是主库做的。\n\n主库根据从库传来的offset，在repl_backlog中寻找，如果没有被覆盖，就可以只同步差异数据，否则给从库全量数据。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1598283421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300824,"ip_address":""},"score":300860,"extra":""},{"author":{"id":1672786,"avatar":"https://static001.geekbang.org/account/avatar/00/19/86/52/91c7d112.jpg","nickname":"Garen","note":"","ucode":"0608C88F83EF0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":308064,"discussion_content":"他应该是想知道主库怎么知道有没有被覆盖","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600834570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300860,"ip_address":""},"score":308064,"extra":""},{"author":{"id":2341163,"avatar":"https://static001.geekbang.org/account/avatar/00/23/b9/2b/c0f306a5.jpg","nickname":"Geek_a315d7","note":"","ucode":"6F8D9CA9D8844C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":329908,"discussion_content":"老哥，这里还是有点疑问，麻烦解答下 ~\n\n比如repl_backlog这个环形队列的长度为9（索引0-8），从库传过来的offset为1，主库当前的offset为3，那这里的3可能是主库把队列已经循环写了多遍之后的，此时从库的1在repl_backlog中是可以找到的，请问会出现这种情况吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606479838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300860,"ip_address":""},"score":329908,"extra":""}]},{"author":{"id":1187538,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1e/d2/fd747eb2.jpg","nickname":"cosmos","note":"","ucode":"0FAA12450402B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299773,"discussion_content":"老哥太强了，收获满满！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597812762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/3a/bc801fb2.jpg","nickname":"mqray","note":"","ucode":"15664507AD7033","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299611,"discussion_content":"老师不是说 主库会在内存中用专门的replication buffer记录rdb文件生成后接受到的写操作么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597749523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1336634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/3a/bc801fb2.jpg","nickname":"mqray","note":"","ucode":"15664507AD7033","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299623,"discussion_content":"是的，你的疑问点是？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597753768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299611,"ip_address":""},"score":299623,"extra":""},{"author":{"id":1623409,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","nickname":"风向北吹","note":"","ucode":"2FD0BC5159E1C1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":310437,"discussion_content":"主库接收client写操作的缓冲区和给client回response的缓冲区是同一个吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1601827615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299623,"ip_address":""},"score":310437,"extra":""},{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1623409,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","nickname":"风向北吹","note":"","ucode":"2FD0BC5159E1C1","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":310447,"discussion_content":"2个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601859925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":310437,"ip_address":""},"score":310447,"extra":""}]},{"author":{"id":1358832,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bb/f0/c36cc6d5.jpg","nickname":"哈喽","note":"","ucode":"33DEB091E31970","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299505,"discussion_content":"课代表，有一事相问，当数据写入到主节点后，主节点是每隔一定时间通过网络将replication_buffer中的命令发送到从上吗？这个频率是可以配置的吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597719074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1358832,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bb/f0/c36cc6d5.jpg","nickname":"哈喽","note":"","ucode":"33DEB091E31970","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299655,"discussion_content":"Redis在处理每一个客户端IO事件之前，都会检查一下有没有哪个client的buffer中有数据，如果有，就把buffer数据发送到这个client的socket中。这个没办法控制，只要有请求进来都会做一遍检查。\n\n但如果一直没有客户端请求进来，Redis内部还维护了一个定时器，默认每隔100ms也会检查一下client buffer是否有数据可发送，有的话也会发出去。这个定时器的频率是可以控制的，可以看看Redis配置文件中的hz参数，它控制整个Redis的定时任务执行的频率。","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1597759618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299505,"ip_address":""},"score":299655,"extra":""},{"author":{"id":1358832,"avatar":"https://static001.geekbang.org/account/avatar/00/14/bb/f0/c36cc6d5.jpg","nickname":"哈喽","note":"","ucode":"33DEB091E31970","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":299749,"discussion_content":"多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597806343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299655,"ip_address":""},"score":299749,"extra":""},{"author":{"id":1623409,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c5/71/f7c43b49.jpg","nickname":"风向北吹","note":"","ucode":"2FD0BC5159E1C1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":310438,"discussion_content":"处理客户端请求之前，检查每个client的buffer，如果连接的client多的话，轮询是否会很耗时？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601827803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299655,"ip_address":""},"score":310438,"extra":""}]},{"author":{"id":1325816,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","nickname":"君哥聊技术","note":"","ucode":"2C9A22BCE4C79E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299468,"discussion_content":"大大的赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597711928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1435733,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","nickname":"MClink","note":"","ucode":"F479190923355C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299461,"discussion_content":"RDB可以设置格式嘛，为啥我查看的时候似乎并不是二进制的格式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597710094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1435733,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","nickname":"MClink","note":"","ucode":"F479190923355C","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":299637,"discussion_content":"不可以设置格式，二进制文件不使用工具是无法直接查看内容的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597756367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299461,"ip_address":""},"score":299637,"extra":""},{"author":{"id":1435733,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","nickname":"MClink","note":"","ucode":"F479190923355C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":299759,"discussion_content":"我是直接cat的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597809085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299637,"ip_address":""},"score":299759,"extra":""}]},{"author":{"id":1671917,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqvfH3iatrDMG3YaW1LlCtibKbPe4lSib8CvWTK78emvAu0dNCQY7OOZPZfQicdCUKUyFpTcia5exNibvIQ/132","nickname":"akka","note":"","ucode":"FCD0964E761172","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299379,"discussion_content":"不愧是课代表啊，太太太太狠了！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597668916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":9,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205697,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/c1/afcd981b.jpg","nickname":"程序员二师兄","note":"","ucode":"C9E3B5B3358BDF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299360,"discussion_content":"真是魔鬼。分析的太棒了，点赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597666470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":10,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299336,"discussion_content":"你好，同一个Redis实例，AOF日志文件 为什么会比RDB文件 大呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597660494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":10,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1727355,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/5b/7b/1ee6ec86.jpg","nickname":"Lionheart","note":"","ucode":"CA2E83FE4EAD18","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299328,"discussion_content":"老哥稳！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597659455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":10,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1131687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","nickname":"啦啦啦","note":"","ucode":"6B12EC90A62525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299321,"discussion_content":"repl_backlog_buffer里面存的也是写操作命令吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597657654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":10,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1131687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","nickname":"啦啦啦","note":"","ucode":"6B12EC90A62525","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299325,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597658594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299321,"ip_address":""},"score":299325,"extra":""},{"author":{"id":1411281,"avatar":"https://static001.geekbang.org/account/avatar/00/15/88/d1/43ebb68c.jpg","nickname":"一条有梦想的咸鱼","note":"","ucode":"15BA7CA2C08EFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":299387,"discussion_content":"那既然repl_backlog_buffer也存了写命令，为啥还要从replication buffer去发送数据啊，为啥不直接把repl_backlog_buffer中的数据发给从节点啊？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1597670943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299325,"ip_address":""},"score":299387,"extra":""},{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1411281,"avatar":"https://static001.geekbang.org/account/avatar/00/15/88/d1/43ebb68c.jpg","nickname":"一条有梦想的咸鱼","note":"","ucode":"15BA7CA2C08EFF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299398,"discussion_content":"两者作用不同，一个是为增量同步提供保障，一个是数据交互的通道。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1597673126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299387,"ip_address":""},"score":299398,"extra":""}]},{"author":{"id":1131687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","nickname":"啦啦啦","note":"","ucode":"6B12EC90A62525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299319,"discussion_content":"大佬666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597657442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":10,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243382,"user_name":"注定非凡","can_delete":false,"product_type":"c1","uid":1113597,"ip_address":"","ucode":"80673056E131B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","comment_is_top":false,"comment_ctime":1598081955,"is_pvip":true,"discussion_count":10,"race_medal":0,"score":"409619975075","product_id":100056701,"comment_content":"一，作者讲了什么？<br>Redis的主从库数据同步机制的诞生背景和运行机制<br><br>二，作者是怎么把这事给讲明白的？    <br>   1， 作者首先介绍了主从库诞生需求背景：（写到这让我想起许式伟在架构课中提到的：拆解架构的两个核心：需求和规格）<br>        为了实现Redis的高可用性，需要有多个redis实例，并且要保证多个实例数据一致（CAP定理：一致性，可用性，分区容错性）<br>    2，介绍Redis的主从库间的工作机制：读写分离，主库负责接收读写请求，从库负责接收读请求，为保证从库可以正确的响应读请求，主库需要向从库同步数据<br>    3，详细介绍了主从同步的机制：同步时间，同步内容，异常处理，失败补偿<br><br>三，作者为了讲明白，讲了哪些要点？有哪些亮点？<br>    1，亮点1：Redis采用读写分离的好处：避免了加锁，实例间协商是否完成修改等复杂操作<br>    1，亮点2：全量同步的发生时机：首次上线 和 从库的环形缓冲区位置标识被覆盖<br>    2，亮点3：增量同步保障机制依赖于一个特殊的数据结构：环形缓冲区<br>    3，要点1：首次同步分为三个阶段，①：建立连接，②：同步RDB文件，③：同步增量数据<br>    4，要点2：全量同步需要主机fork子进程，产生全量RDB文件，并发送，为了减轻主机的压力，从机之间也可用互相同步<br>    5，要点3：增量同步可以缓解主机全量同步的压力，它需要特殊机制保障：replication buffer，环形缓冲区，master_repl_offset，slave_repl_offset<br>    6，要点4：从机的同步位置标识，在环形缓冲区被覆盖后，会触发新的一轮全量同步，所repl_backlog_buffer的大小是redis重要的调优参数<br>    7，要点5：主从同步有三种机制：全量同步，基于长链接的命令传播（在写这个笔记时把它忽略了），增量同步<br><br>四，对于作者所讲，我有哪些发散性思考？<br>    1，作者在介绍数据备份和数据同步时，都提到了单个redis的实例不宜过大<br>    2，同步机制不止是redis需要，kafka，mysql中也需要，这个需要去看看他们是怎么设计的<br>    3，作者介绍的redis数据一致性保障机制是很有趣，对于异常的处理机制值得学习<br><br>五，在未来的哪些场景里，我能够使用它？<br>    1，以后面试，redis的数据备份和数同步可以不怂了<br>    2，分布式系统的三定律有了联系对象<br><br>六，评论区的收获<br>    从@Kaito 大神 那里了解到，<br>    1，repl_backlog_buffer，是随着主机一起诞生的<br>    2，主机和所有的clent端（包括从机）都会建立一个对应的buffer<br>    3，replication buffer是与每个clent端一一对应 <br>    4，redis的所有写命令除了用于长链接广播，还都会写入repl_backlog_buffer<br>","like_count":95,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301659,"discussion_content":"卧槽老哥，你太狠了，总结的太狠了。\n不是一板一眼的总结，而是有自己的理解和针对总结进行发散关联。\n你可太行了。\n正班长是 @Kaito，你@注定非凡 就是副班长了。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1598600332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1113597,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fd/fd/326be9bb.jpg","nickname":"注定非凡","note":"","ucode":"80673056E131B7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301718,"discussion_content":"sid同学过誉了，kaido才是真正的大神。而我只是一个小菜鸟。非常感谢你表扬，一起努力学习，一起进步成长","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1598618063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301659,"ip_address":""},"score":301718,"extra":""}]},{"author":{"id":2866243,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/bc/43/22ab8fcc.jpg","nickname":"天儿","note":"","ucode":"24A900F6304B1C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560437,"discussion_content":"两位大神一个是课代表负责做附加题，一个是学习委员负责给大家抄笔记：p","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649329184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2260986,"avatar":"https://static001.geekbang.org/account/avatar/00/22/7f/fa/b244f3a3.jpg","nickname":"🍭","note":"","ucode":"A515C1C5DC0E13","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386559,"discussion_content":"单线程为什么需要避免加锁啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627636934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2649828,"avatar":"https://static001.geekbang.org/account/avatar/00/28/6e/e4/9901994d.jpg","nickname":"Geek_9bd7ef","note":"","ucode":"E68C656EE1EBAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2260986,"avatar":"https://static001.geekbang.org/account/avatar/00/22/7f/fa/b244f3a3.jpg","nickname":"🍭","note":"","ucode":"A515C1C5DC0E13","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540727,"discussion_content":"个人理解是 不是单线程避免加锁  而是为了避免因为处理共享数据需要加锁等情况所以使用了单线程","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640143066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":386559,"ip_address":""},"score":540727,"extra":""}]},{"author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378842,"discussion_content":"基于长 连接的命令传播应该也需要 buffer 吧？ 是将 buffer 中的命令数据发送到对端的 socket 中发送过去的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623462219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375322,"discussion_content":"backlog是跟着master走的，只要redis现在承担主机的职责 它就会有一个backlog。比方说主从从。replication buffer是定义在client结构体 所以k神才会问老师主从都断开了 buffer在哪里的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621578612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1475876,"avatar":"https://static001.geekbang.org/account/avatar/00/16/85/24/98d00055.jpg","nickname":"持#樞","note":"","ucode":"2974D70A62A406","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":368540,"discussion_content":"kai 说主从机断了连接  ，replication buffer就不在了 ，不知道从哪里看的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618746620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1069203,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/93/e9755d47.jpg","nickname":"mbond","note":"","ucode":"41D88206637E96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1475876,"avatar":"https://static001.geekbang.org/account/avatar/00/16/85/24/98d00055.jpg","nickname":"持#樞","note":"","ucode":"2974D70A62A406","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533599,"discussion_content":"replication buffer应该 主从建立连接后才有吧，有几个从机就有几个replication buffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637914465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368540,"ip_address":""},"score":533599,"extra":""},{"author":{"id":2911084,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/6b/6c/3e80afaf.jpg","nickname":"HappyHasson","note":"","ucode":"B84CC43E349CFA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1475876,"avatar":"https://static001.geekbang.org/account/avatar/00/16/85/24/98d00055.jpg","nickname":"持#樞","note":"","ucode":"2974D70A62A406","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553316,"discussion_content":"master会为每个client维护一个结构，这个client结构里就包含replication buffer，如果主从断链了，当然master里的这个client结构就不存在了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645847309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":368540,"ip_address":""},"score":553316,"extra":""}]}]},{"had_liked":false,"id":242472,"user_name":"不负青春不负己🤘","can_delete":false,"product_type":"c1","uid":1363671,"ip_address":"","ucode":"A6DD8E8B20EA6E","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","comment_is_top":false,"comment_ctime":1597737075,"is_pvip":true,"replies":[{"id":"89478","content":"Redis在全量复制时，既支持先生成RDB文件，再把RDB文件传给从库，也支持在主库上直接通过socket把数据传给从库，这称为无盘复制。<br><br>如果运行主库的机器磁盘性能不太好，但是网络性能不错的话，可以考虑无盘复制。","user_name":"作者回复","comment_id":242472,"uid":"1609687","ip_address":"","utype":1,"ctime":1597750413,"user_name_real":"蒋德钧"}],"discussion_count":5,"race_medal":0,"score":"173396428915","product_id":100056701,"comment_content":"我问个问题 psync 这个动作 执行 RDB 全量数据，是直接传输到从库上，还是先落到主redis 磁盘上","like_count":40,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504016,"discussion_content":"Redis在全量复制时，既支持先生成RDB文件，再把RDB文件传给从库，也支持在主库上直接通过socket把数据传给从库，这称为无盘复制。\n\n如果运行主库的机器磁盘性能不太好，但是网络性能不错的话，可以考虑无盘复制。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597750413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1292669,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaaDFHiag4sFcO7JUn028Mtk1YvFpibIibLzcTE7Qak0icJklMpqh7k5dSK27dibicMuNgYMozgaibeYppA/132","nickname":"Bball","note":"","ucode":"E483CAFE50CB99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409249,"discussion_content":"主库可以直接无盘传到网络上，从库应该是要先到磁盘上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635402033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1887603,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/cd/73/f6889c2f.jpg","nickname":"Wind","note":"","ucode":"AD108636DE44C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403852,"discussion_content":"repl-diskless-sync\nrepl-diskless-sync-delay","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634174668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337367,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKovy1cIaZMffjELv4jjWEDshQLDoU9RoHzW0w8uWB7Kg0RSLLG8lTEgp2qnpvtKj4eibiaqQOH6jEA/132","nickname":"阿飞_","note":"","ucode":"7754E61ABD3CBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394601,"discussion_content":"说的是sendfile零拷贝吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631952876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2335122,"avatar":"https://static001.geekbang.org/account/avatar/00/23/a1/92/5addf21e.jpg","nickname":"大声叫安哥","note":"","ucode":"F35B6C8C50037B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381400,"discussion_content":"请问无盘复制具体怎么操作呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625040320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242180,"user_name":"Mr.蜜","can_delete":false,"product_type":"c1","uid":1035257,"ip_address":"","ucode":"C911B81198B3F5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/f9/75d08ccf.jpg","comment_is_top":false,"comment_ctime":1597630617,"is_pvip":false,"replies":[{"id":"89442","content":"没错，环形缓冲区再大，在某些时候，就如你所说的从库长期断网时，也会出问题。<br><br>其实从库正常情况下会每秒给主库发送一个replconf ack命令，主库会根据这个命令的达到时间判断和从库的连网情况。如果距离最后一次ack命令收到的时间已经超过了repl_timeout时间，就会和从库断开连接了。<br><br>从库再和主库连接时，会发送自己的复制进度，如果要复制内容在缓冲区中已经被覆盖了，那么就不再做增量复制了，而是进行全量复制。","user_name":"作者回复","comment_id":242180,"uid":"1609687","ip_address":"","utype":1,"ctime":1597679305,"user_name_real":"蒋德钧"}],"discussion_count":5,"race_medal":0,"score":"139036584089","product_id":100056701,"comment_content":"我有一个疑问，环形缓冲期再大，也会出问题，那么如果遇到这类问题，导致数据不同步怎么处理？比方说，一个从库长断网以后，长时间没有联网处理。","like_count":32,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503945,"discussion_content":"没错，环形缓冲区再大，在某些时候，就如你所说的从库长期断网时，也会出问题。\n\n其实从库正常情况下会每秒给主库发送一个replconf ack命令，主库会根据这个命令的达到时间判断和从库的连网情况。如果距离最后一次ack命令收到的时间已经超过了repl_timeout时间，就会和从库断开连接了。\n\n从库再和主库连接时，会发送自己的复制进度，如果要复制内容在缓冲区中已经被覆盖了，那么就不再做增量复制了，而是进行全量复制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597679305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1884974,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c3/2e/38f304ab.jpg","nickname":"Berlin","note":"","ucode":"2F8E21AC1DDF5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":561063,"discussion_content":"老师，请教一下主库是怎么确定从库要赋值的内容在缓冲区已经被覆盖掉了？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649521094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":503945,"ip_address":""},"score":561063,"extra":""}]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373531,"discussion_content":"分布式场景下 会维护一个session time out机制 所以他们都会做一个心跳。redis里配置就是repl_timeout","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620778841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575999,"discussion_content":"repl_timeout 默认一分钟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655221001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575998,"discussion_content":"就是心跳保证吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655220529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242394,"user_name":"祝康力","can_delete":false,"product_type":"c1","uid":2050440,"ip_address":"","ucode":"3DD394B40DE7BB","user_header":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfB5aNorgZCyDCNxMQVK2NJkQFXib3NPk1ibzFVNMYGqmYzleNd8FAQFblQwU7jktpGIZEzLw9yW0Xsw/132","comment_is_top":false,"comment_ctime":1597712153,"is_pvip":false,"replies":[{"id":"89479","content":"Redis主从库的复制是异步的，主库收到命令操作后，在本地执行完成后，就会返回给客户端，并不会等到和从库同步完成后才返回给客户端。<br><br>如果从库同步较慢的话，例如从库正在执行bigkey操作，那么复制进度就会落后，此时，从库数据不是强一致性保证。","user_name":"作者回复","comment_id":242394,"uid":"1609687","ip_address":"","utype":1,"ctime":1597752076,"user_name_real":"蒋德钧"}],"discussion_count":8,"race_medal":0,"score":"108971894553","product_id":100056701,"comment_content":"老师，主从库的复制，是异步的吗？那就保证不了强一制了，文章没有提及这一点","like_count":25,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503999,"discussion_content":"Redis主从库的复制是异步的，主库收到命令操作后，在本地执行完成后，就会返回给客户端，并不会等到和从库同步完成后才返回给客户端。\n\n如果从库同步较慢的话，例如从库正在执行bigkey操作，那么复制进度就会落后，此时，从库数据不是强一致性保证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597752076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2552477,"avatar":"https://static001.geekbang.org/account/avatar/00/26/f2/9d/a8d2e139.jpg","nickname":"是呱呱呀","note":"","ucode":"E5EFB6E733004A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372252,"discussion_content":"所以会导致脏读么","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1620260952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2552477,"avatar":"https://static001.geekbang.org/account/avatar/00/26/f2/9d/a8d2e139.jpg","nickname":"是呱呱呀","note":"","ucode":"E5EFB6E733004A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378847,"discussion_content":"数据没有同步完成，所以会造成脏读","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623463268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":372252,"ip_address":""},"score":378847,"extra":""},{"author":{"id":1416880,"avatar":"https://static001.geekbang.org/account/avatar/00/15/9e/b0/619fcd87.jpg","nickname":"yooOOooOooo","note":"","ucode":"6F28C7860B83CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2552477,"avatar":"https://static001.geekbang.org/account/avatar/00/26/f2/9d/a8d2e139.jpg","nickname":"是呱呱呀","note":"","ucode":"E5EFB6E733004A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536040,"discussion_content":"所以有了repl_backlog_buffer，但重点考虑设置repl_backlog_size的大小","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638649865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":372252,"ip_address":""},"score":536040,"extra":""},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1416880,"avatar":"https://static001.geekbang.org/account/avatar/00/15/9e/b0/619fcd87.jpg","nickname":"yooOOooOooo","note":"","ucode":"6F28C7860B83CA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556782,"discussion_content":"不是一回事儿，异步的数据同步操作，决定了有数据同步的延迟，造成数据不一致性，repl_backlog_buffer是为了降低网络断连再重连的全量复制问题。 ","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1647509970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":536040,"ip_address":""},"score":556782,"extra":""}]},{"author":{"id":2873299,"avatar":"","nickname":"nuptxiaoli","note":"","ucode":"EF2962A390DC55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547006,"discussion_content":"会脏读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642493725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2440690,"avatar":"","nickname":"小勇","note":"","ucode":"C4FFB8696F812C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377325,"discussion_content":"老师你好，请教一下，在从库短时间断网后的增量复制期间，或者这个命令传播的异步执行期间，去从库读数据，应该就读不到最新的数据了吧？也就是，会脏读吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622603939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2440690,"avatar":"","nickname":"小勇","note":"","ucode":"C4FFB8696F812C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378846,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623463235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":377325,"ip_address":""},"score":378846,"extra":""}]}]},{"had_liked":false,"id":242225,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1597637082,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"108971819482","product_id":100056701,"comment_content":"上一条评论有误，已经删除，请通过本条评论<br><br>repl_backlog_size这个参数很重要，因为如果满了，就需要重新全量复制，默认是1M，所以之前网上就流传1个段子，如果一个公司说自己体量如何大，技术多么牛，要是repl_backlog_size参数是默认值，基本可以认为要不业务体量吹牛逼了，要不就没有真正的技术牛人。<br><br>主从复制的另一种方式：基于硬盘和无盘复制<br>可以通过这个参数设置<br>repl-diskless-sync<br>复制集同步策略：磁盘或者socket<br>新slave连接或者老slave重新连接时候不能只接收不同，得做一个全同步。需要一个新的RDB文件dump出来，然后从master传到slave。可以有两种情况：<br> 1）基于硬盘（disk-backed）：master创建一个新进程dump RDB，完事儿之后由父进程（即主进程）增量传给slaves。<br> 2）基于socket（diskless）：master创建一个新进程直接dump RDB到slave的socket，不经过主进程，不经过硬盘。<br><br>当基于 disk-backed 复制时，当 RDB 文件生成完毕，多个 replicas 通过排队来同步 RDB 文件。<br><br>当基于diskless的时候，master等待一个repl-diskless-sync-delay的秒数，如果没slave来的话，就直接传，后来的得排队等了。否则就可以一起传。适用于disk较慢，并且网络较快的时候，可以用diskless。（默认用disk-based）<br><br><br>回答下课后问题：<br>    1、RDB读取快，这样从库可以尽快完成RDB的读取，然后入去消费replication buffer的数据。如果是AOF的话，AOF体积大，读取慢，需要更大的replication buffer，如果一个主节点的从节点多的话，就需要更大的内存去处理；<br>    2、AOF文件是append追加模式，同时读写需要考虑并发安全问题，并且AOF是文本文件，体积较大，浪费网络带宽。<br><br>最后问老师个问题哈，就是bgsave生成的rdb文件什么时候“过期”，或者有过期的说法吗？比如我2个从节点执行replicaof（或者slaveof），主节点是同一个，这中情况下，rdb生成1次还是2次？","like_count":25,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301657,"discussion_content":"A从节点向主节点申请全量同步，\n在主节点创建完成RDB文件之前，如果B从节点也向主及诶点申请全量同步的话，RDB只会生成一次。\n在主节点创建完成RDB文件之后，如果B从节点也向主及诶点申请全量同步的话，主节点会在完成A节点的RDB文件同步之后，再重新创建RDB文件给B节点的同步。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1598599806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2131606,"avatar":"","nickname":"Geek_da4cfb","note":"","ucode":"DB59B24A249713","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376649,"discussion_content":"2次，这就是为啥要主从从的模式减轻主库的压力","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622255865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253652,"avatar":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","nickname":"Steven","note":"","ucode":"3FE64459842015","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383759,"discussion_content":"有同样的疑问，暂时还未找到明确的说法：\nDisk-backed 部分赞同 sid 的说法。\nDiskless，分析认为是以一次 RDB 传输为单位生成，在延时等待时间之前到达的副本都使用同一个 RDB，然后一起并行传输。下次全量同步再生成新的一个 RDB。\n\n哪位大神看到麻烦确认一下，谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626233019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299762,"discussion_content":"我2个从节点执行replicaof（或者slaveof），主节点是同一个，这中情况下，rdb生成1次还是2次？\n\n我觉得应该要生成两次，比如极端一点儿的场景，从节点1在下午两点发起一次同步请求；而从节点2在下午6点发起一次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597810297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242197,"user_name":"QFY","can_delete":false,"product_type":"c1","uid":1144134,"ip_address":"","ucode":"5EAA14772BA908","user_header":"https://static001.geekbang.org/account/avatar/00/11/75/46/815e56c8.jpg","comment_is_top":false,"comment_ctime":1597633232,"is_pvip":false,"replies":[{"id":"89450","content":"善于思考，非常棒！<br><br>repl_backlog_buffer是所有从库共享的，不过正如文章中说的，slave_repl_offset是由从库自己记录的，这也是因为每个从库的复制进度不一定相同。<br><br>从库断连后再恢复时，会给主库发送psync命令，并把自己当前的slave_repl_offset发给主库。所以，在你所说的情况下，正常恢复的从库推进的slave_repl_offset是它自己记录的，不会影响到第二个从库。<br><br>第二个从库断连后再恢复，只要slave_repl_offset指向的数据没有被覆盖，就能继续恢复。<br><br>希望解答了你的问题 :)","user_name":"作者回复","comment_id":242197,"uid":"1609687","ip_address":"","utype":1,"ctime":1597680266,"user_name_real":"蒋德钧"}],"discussion_count":2,"race_medal":0,"score":"74612077264","product_id":100056701,"comment_content":"课后题：<br>aof记录的是命令，如果是首次主从全量复制，而且如果aof文件还没被重写会存在对一个key的反复操作，那么效率会比较低<br><br>疑问：<br>【repl_backlog_buffer 是一个环形缓冲区，主库会记录自己写到的位置，从库则会记录自己已经读到的位置】针对这一句，这个repl_backlog_buffer是在主库上面，但是他同时要记录master_repl_offset和slave_repl_offset，这个slave_repl_offset是每个从库记录一个还是共用一个？如果是共用一个，那如果有两个从库正在恢复，一个正常恢复把slave_repl_offset往前推了，另一个从库在恢复的过程中又断了，但是再恢复的时候slave_repl_offset已经往前推了，中间就有一部分数据丢失了，这个情况该怎么办了（这个情况可能有点极端）<br>","like_count":17,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503950,"discussion_content":"善于思考，非常棒！\n\nrepl_backlog_buffer是所有从库共享的，不过正如文章中说的，slave_repl_offset是由从库自己记录的，这也是因为每个从库的复制进度不一定相同。\n\n从库断连后再恢复时，会给主库发送psync命令，并把自己当前的slave_repl_offset发给主库。所以，在你所说的情况下，正常恢复的从库推进的slave_repl_offset是它自己记录的，不会影响到第二个从库。\n\n第二个从库断连后再恢复，只要slave_repl_offset指向的数据没有被覆盖，就能继续恢复。\n\n希望解答了你的问题 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597680266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1144134,"avatar":"https://static001.geekbang.org/account/avatar/00/11/75/46/815e56c8.jpg","nickname":"QFY","note":"","ucode":"5EAA14772BA908","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299624,"discussion_content":"谢谢老师，清楚了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597753817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242325,"user_name":"我不用网名","can_delete":false,"product_type":"c1","uid":1066411,"ip_address":"","ucode":"B1C921455BF44F","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/ab/7dec2448.jpg","comment_is_top":false,"comment_ctime":1597672252,"is_pvip":false,"replies":[{"id":"89480","content":"咱们评论区有不少同学的回复都很棒，思考问题非常仔细、周全和深入。<br><br>读评论区是一次非常好的再学习过程 :)","user_name":"作者回复","comment_id":242325,"uid":"1609687","ip_address":"","utype":1,"ctime":1597752221,"user_name_real":"蒋德钧"}],"discussion_count":3,"race_medal":0,"score":"70317148988","product_id":100056701,"comment_content":"看了课程内容,不看评论绝对是一种损失","like_count":16,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503979,"discussion_content":"咱们评论区有不少同学的回复都很棒，思考问题非常仔细、周全和深入。\n\n读评论区是一次非常好的再学习过程 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597752221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013093,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/65/2a7f8212.jpg","nickname":"小明","note":"","ucode":"31A24C60B4CC5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389973,"discussion_content":"这个课程可以不用看文章直接看评论,  课程就是误导人 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629548035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2027828,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f1/34/6978db6a.jpg","nickname":"果果","note":"","ucode":"458AC5EC0A8790","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1013093,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/65/2a7f8212.jpg","nickname":"小明","note":"","ucode":"31A24C60B4CC5B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391785,"discussion_content":"牛逼","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630635115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389973,"ip_address":""},"score":391785,"extra":""}]}]},{"had_liked":false,"id":242417,"user_name":"Geek_33c084","can_delete":false,"product_type":"c1","uid":1753056,"ip_address":"","ucode":"32F92FE46C4381","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIIDUnsfAibxPYXkLW0COHStXqD9jgUP9LCqpxeOL76ahZ4kDVIbwtLfedm8paGVsXLfuRuu2ccQ2w/132","comment_is_top":false,"comment_ctime":1597717485,"is_pvip":false,"replies":[{"id":"89476","content":"不错的总结！","user_name":"作者回复","comment_id":242417,"uid":"1609687","ip_address":"","utype":1,"ctime":1597744597,"user_name_real":"蒋德钧"}],"discussion_count":1,"race_medal":0,"score":"53137325037","product_id":100056701,"comment_content":"主从复制的流程：1.建立链接；2.rdb全量复制；2.网络长链接复制。<br>主-从-从的级联主从复制模式:减少主库的bgsave压力，减少网络传输的压力<br>断网重连：repl_backlog_size环形缓冲区，存在覆盖情况。主库还可以根据slave_repl_offset判断是全量复制，还是增量复制","like_count":12,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504006,"discussion_content":"不错的总结！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597744597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242156,"user_name":"赖阿甘","can_delete":false,"product_type":"c1","uid":1351988,"ip_address":"","ucode":"77493FE85CBAF8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTICBNZjA9hW65x6g9b2iaicKUJW5gxFxtgPXH9Cqp6eyFfY1sD2hVY4dZrY5pmoK2r1KZEiaaIKocdZQ/132","comment_is_top":false,"comment_ctime":1597626025,"is_pvip":false,"discussion_count":10,"race_medal":0,"score":"44547298985","product_id":100056701,"comment_content":"我有个疑问，为什么要有两个缓冲区，replication buffer和repl_backlog_buffer ，这两个缓冲区的区别是什么？replication buffer缓冲区是每个从库的连接都有一个吗？按照我的理解，replication buffer在第一次连接时完成全量复制(包括复制期间主库又接收到的新操作)，进入长连接复制之后这个缓冲区就应该没有作用了，但是为什么主从断联之后，主库还要把接受到的写命令都记录到这两个缓冲区，照理说只需要记录到repl_backlog_buffer就可以了，还望老师解答","like_count":10,"discussions":[{"author":{"id":1024726,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a2/d6/97370dfc.jpg","nickname":"onno","note":"","ucode":"FB7E829037DA10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301322,"discussion_content":"我理解是repl_backlog_buffer是就主节点一个，然后replication buffer每个从库都在主库内拥有一个，有点类似nginx的request_pool，然后同步信息最终会通过replication buffer 发送出去","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1598490249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378850,"discussion_content":"repl_backlog_buffer：是主库记录写命令的，所有从库共享。从命名可以看出，用于备份的缓存区，因此该缓存区存在的前提是需要有从库，没有从库该缓存区就会被回收。该缓存区是循环写的，因此发生数据追尾是必然的，也就是说该缓存区内的数据是最新的一部分数据而非全部数据。这部分数据唯一的用途是为从库弥补差异化数据的，如果从库相比主库数据差异太大，就不能从该缓存区取数据了，只能进行全量同步。\nreplication_buffer: 该缓存区本质上是一个 client_buffer，从命名也能看出，是每个客户端都对应一个。一般情况下数据是先写入 client_buffer 然后再发送到客户端的 socket 。在主从同步时，也就是先把指令写入 replication_buffer，然后在发送到从库。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623464424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204525,"avatar":"https://static001.geekbang.org/account/avatar/00/12/61/2d/5ca0a3da.jpg","nickname":"常文龙","note":"","ucode":"4A126159D24766","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319412,"discussion_content":"同问","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604024582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1234273,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d5/61/8ad99e09.jpg","nickname":"刘百万","note":"","ucode":"692E23D070641A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374459,"discussion_content":"我也是有这个疑问呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621186639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1524514,"avatar":"https://static001.geekbang.org/account/avatar/00/17/43/22/2118ac0a.jpg","nickname":"孟祥建","note":"","ucode":"7F0286EE626E9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367078,"discussion_content":"replication_buffer 主从断开连接之后就没了，只能靠back_log_buffer","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618244766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1234273,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d5/61/8ad99e09.jpg","nickname":"刘百万","note":"","ucode":"692E23D070641A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1524514,"avatar":"https://static001.geekbang.org/account/avatar/00/17/43/22/2118ac0a.jpg","nickname":"孟祥建","note":"","ucode":"7F0286EE626E9C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374460,"discussion_content":"老师说的是两个buffer都会在断开期间写入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621186756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":367078,"ip_address":""},"score":374460,"extra":""},{"author":{"id":2028938,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/8a/dc9a23a1.jpg","nickname":"续费专用","note":"","ucode":"1B585A131B64B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1234273,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d5/61/8ad99e09.jpg","nickname":"刘百万","note":"","ucode":"692E23D070641A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387295,"discussion_content":"老师是错的。。看这个专栏不看评论就是损失","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628091103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374460,"ip_address":""},"score":387295,"extra":""}]},{"author":{"id":2364361,"avatar":"https://static001.geekbang.org/account/avatar/00/24/13/c9/68839e9b.jpg","nickname":"过客","note":"","ucode":"8E63453A0C150E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335651,"discussion_content":"我的理解：复制缓冲区是完全同步时用到的，进入命令传播时就无用了，之所以保留是因为由于某种原因（长时间断链后重新连接）需要再次进行全量同步时还会用到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608263390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299769,"discussion_content":"同问，每个缓冲区的功能我都理解，就是这个设计由来让我琢磨不透","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597811543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2308075,"avatar":"","nickname":"Geek_89e362","note":"","ucode":"E596C2CFE1CFAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346566,"discussion_content":"我的理解是这样的。repl_backlog_buffer，是所有从节点共享的，也就主节点每接收一个指令，就在此缓冲区缓存一个。而replication_buffer是每个客户端一个，在给从节点同步数据是，就可以每次复制一批到replication_buffer，这样就可以慢慢传送了，可以减少复制偏移量被覆盖的概率","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1611994968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299769,"ip_address":""},"score":346566,"extra":""}]}]},{"had_liked":false,"id":242141,"user_name":"等风来🎧","can_delete":false,"product_type":"c1","uid":1804087,"ip_address":"","ucode":"B6BB8714A0B019","user_header":"https://static001.geekbang.org/account/avatar/00/1b/87/37/b071398c.jpg","comment_is_top":false,"comment_ctime":1597623511,"is_pvip":false,"replies":[{"id":"89488","content":"咱们有同学问到了类似slave_repl_offset被覆盖的这个问题，你的回复就是答案。 :)<br><br>我在文章小结中有提到了一句“通过调大这个参数（repl_backlog_size），可以减少从库在网络断连时全量复制的风险”，这种情况就是因为repl_backlog被覆盖写了，导致从库开始全量复制。不过这句的确不明显，不容易让大家注意，都是我的错。。。","user_name":"作者回复","comment_id":242141,"uid":"1609687","ip_address":"","utype":1,"ctime":1597758747,"user_name_real":"蒋德钧"}],"discussion_count":1,"race_medal":0,"score":"44547296471","product_id":100056701,"comment_content":"如果并大量特别大，增量复制的时候，从库的消费的偏移量仍不在主库的环形缓存池中，应该会进行一次全量复制，这个老师好像没有提到","like_count":10,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503939,"discussion_content":"咱们有同学问到了类似slave_repl_offset被覆盖的这个问题，你的回复就是答案。 :)\n\n我在文章小结中有提到了一句“通过调大这个参数（repl_backlog_size），可以减少从库在网络断连时全量复制的风险”，这种情况就是因为repl_backlog被覆盖写了，导致从库开始全量复制。不过这句的确不明显，不容易让大家注意，都是我的错。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597758747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242133,"user_name":"Geek_121747","can_delete":false,"product_type":"c1","uid":2061660,"ip_address":"","ucode":"8A7AD79B6F53F5","user_header":"","comment_is_top":false,"comment_ctime":1597618406,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44547291366","product_id":100056701,"comment_content":"每课一问：1.因为AOF文件比RDB文件大，网络传输比较耗时，<br>              2.从库在初始化数据时，RDB文件比AOF文件执行更快","like_count":10,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373532,"discussion_content":"建议结合linux磁盘寻址再思考一下 因为文件归根结底在磁盘上。除非redis抛弃这些落地文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620778950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244314,"user_name":"Geek_e0ee48","can_delete":false,"product_type":"c1","uid":1904256,"ip_address":"","ucode":"11D10A0F5892AB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgDicRj9LAvWSejVc6v34R6dR1yRHzqBgEpABeRwDvNcpoFW6zmiavwV5cP1fCKJiaQPiafP9E7Puqnw/132","comment_is_top":false,"comment_ctime":1598457479,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"40253163143","product_id":100056701,"comment_content":"你好，老师：<br>请教下，由于redis的读写分离和命令传播，那么主库和从库势必存在数据不一致的瞬间。当应用读到这种不一致的数据需要怎么处理？","like_count":9,"discussions":[{"author":{"id":1109527,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ee/17/32183260.jpg","nickname":"逍遥魔君","note":"","ucode":"6EDD906634D7CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367565,"discussion_content":"一般在主库读，从库读会有业务问题，除非你能接受延迟。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618394078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2640551,"avatar":"https://static001.geekbang.org/account/avatar/00/28/4a/a7/ab7998b1.jpg","nickname":"zachary","note":"","ucode":"B22B95FCECD6E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381387,"discussion_content":"其实是一种过期读的情况，看业务中是否允许。如果业务中对不允许的话，可以强制去读主库。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625036974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1645684,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/74/eb472cc3.jpg","nickname":"海强","note":"","ucode":"EF4971CD58E4E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348980,"discussion_content":"我也在想这个问题。但是如果作为缓存的场景，影响应该就是多去数据库读一次，也还好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612833232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242901,"user_name":"heyman","can_delete":false,"product_type":"c1","uid":1173894,"ip_address":"","ucode":"92EF9EF1B1B1B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/86/d34800a4.jpg","comment_is_top":false,"comment_ctime":1597888090,"is_pvip":false,"replies":[{"id":"89589","content":"这个需要客户端实现（例如Redisson客户端），或者在客户端和集群间增加一个proxy才行，由客户端或proxy先行判断是读操作还是写操作，再把读、写操作发给从库或主库","user_name":"作者回复","comment_id":242901,"uid":"1609687","ip_address":"","utype":1,"ctime":1597935762,"user_name_real":"蒋德钧"}],"discussion_count":2,"race_medal":0,"score":"40252593754","product_id":100056701,"comment_content":"老师，客户端写入数据只能从主库写入，读数据可以从主库或者从库读取。请问这个是怎么控制的？客户端要自己实现吗？客户端是怎么知道要往哪个节点写？","like_count":9,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504127,"discussion_content":"这个需要客户端实现（例如Redisson客户端），或者在客户端和集群间增加一个proxy才行，由客户端或proxy先行判断是读操作还是写操作，再把读、写操作发给从库或主库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597935762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1173894,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e9/86/d34800a4.jpg","nickname":"heyman","note":"","ucode":"92EF9EF1B1B1B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300109,"discussion_content":"从库是天然就是只读的吗？还是说要另外配置一下读写权限？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597936781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248358,"user_name":"慌张而黑糖","can_delete":false,"product_type":"c1","uid":1638878,"ip_address":"","ucode":"B4416885A301C8","user_header":"https://static001.geekbang.org/account/avatar/00/19/01/de/bf524817.jpg","comment_is_top":false,"comment_ctime":1600132858,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"35959871226","product_id":100056701,"comment_content":"不知道有没有很极端的情况，就是主库的偏移量的绕着环形缓冲区转一圈又跑到从库的前面。","like_count":8,"discussions":[{"author":{"id":1016575,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/82/ff/00e7614e.jpg","nickname":"robyy","note":"","ucode":"773337C9942A7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346438,"discussion_content":"offset是持续/永远增加的，可以理解成offset和数组下标绑定的，所以主库那边直接判断从库发来的offset还在不在数组数据里。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1611954851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1110189,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/ad/653db0f4.jpg","nickname":"王九荣","note":"","ucode":"3C87DF4F7CEE10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1016575,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/82/ff/00e7614e.jpg","nickname":"robyy","note":"","ucode":"773337C9942A7F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388086,"discussion_content":"很有用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628584463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":346438,"ip_address":""},"score":388086,"extra":""}]},{"author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378852,"discussion_content":"1 从库长时间断连\n2 从库执行bigkey，且主库写操作频率过高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623464620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373533,"discussion_content":"有的 一切借由可能。但判断是否断链的标准是一样的 因为offset是单调递增的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620779006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242366,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1597681225,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"35957419593","product_id":100056701,"comment_content":"使用RDB主要是有以下几个原因：<br>1、首先RDB和AOF最大的区别就是，RDB是内存快照，而AOF记录的是数据变化的过程，在全量初始化的情况下肯定是快照更优，RDB作为数据初始化的方式也更加快<br>2、是针对RDB和AOF的文件大小问题，AOF是数据变化的过程（动态变化），相比于RDB不利于压缩，使用RDB在传输文件的时候可以更好的节约网络资源<br>3、进行主从同步并不是只使用RDB，而是RDB + 缓冲区的方式，这样可以保证bgsave期间的数据任然能同步<br><br>在生产环境中主从复制会经常出现以下两种情况：1、从服务器重启，2、主服务器宕机<br>在早期Redis中每次出现意外进行重新同步都是使用RDB的方式（sync），会导致很大的开销,于是在Redis2.8开始实现了部分重同步的功能psync<br>psync 的格式如下：psync &lt;Master-Run-ID&gt; &lt;OFFSET&gt; ,通过缓冲区 + offset的方式来避免每次进行完全重同步<br><br>为了保证数据的最终一致性现如今Redis也具备两种同步方式：<br>1、完全重同步（RDB同步）<br>2、部分重同步（缓冲区同步）<br><br>【完全重同步】的开销是很大的（走bgsave），生产环境中希望尽可能的使用【部分重同步】，但是【部分重同步】的条件也比较苛刻条件如下：<br>1、从服务器两次执行 RUN_ID 必须相等<br>2、复制偏移量必须包含在复制缓冲区中<br><br>也由于这些原因，Redis4.0的时候提出了psync2的方式，主要改进点在两个方面：<br>1、RDB文件中用于存放辅助字段的 AUX_FIELD_KEY_VALUE_PAIRS 中保存主服务器的RUN_ID，当从服务器恢复的时候能避免进行完全重同步<br>2、在新易主的服务器中冗余上一个主服务器的RUN_ID 和 offset 分别存放在 server.replid2 和 server.second_replid_offset 这两个字段中，这样避免主从切换后发生完全重同步","like_count":8,"discussions":[{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576006,"discussion_content":"psync2咋就避免全量同步?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655224367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2330905,"avatar":"https://static001.geekbang.org/account/avatar/00/23/91/19/6a3e7efc.jpg","nickname":"程序员9527","note":"","ucode":"1A1609F6BEAD84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373727,"discussion_content":"mark一下\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620837173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262377,"user_name":"似水","can_delete":false,"product_type":"c1","uid":1187892,"ip_address":"","ucode":"771BF594C9D6AE","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/34/31bff3e9.jpg","comment_is_top":false,"comment_ctime":1605702818,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"31670473890","product_id":100056701,"comment_content":"有个疑问，怎么保证读取的数据是最新的？从主库中写操作之后同步到从库需要时间的吧，那这段时间的读取怎么办呢","like_count":7,"discussions":[{"author":{"id":1281857,"avatar":"https://static001.geekbang.org/account/avatar/00/13/8f/41/307555ff.jpg","nickname":"伊诺","note":"","ucode":"709E038DD01C17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548751,"discussion_content":"最终一致性，具体怎么处理得？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643356945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393829,"discussion_content":"最终一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631612412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242384,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1597709204,"is_pvip":false,"replies":[{"id":"89465","content":"Redis中RDB是默认开启的。同时，你可以在配置文件中设置appendonly  yes，这样就可以把AOF也开启了。<br><br>在RDB和AOF同时开启后，在进行恢复时，会优先使用AOF进行恢复。<br><br>","user_name":"作者回复","comment_id":242384,"uid":"1609687","ip_address":"","utype":1,"ctime":1597721197,"user_name_real":"蒋德钧"}],"discussion_count":6,"race_medal":0,"score":"27367512980","product_id":100056701,"comment_content":"我有个疑问，redis我记得是AOF和RDB只能选择一个，要么开启AOF，要么开启RDB，如果master开启了AOF，那这是的RDB又怎么开启的呢？还是说master会同时开启AOF和RDB？","like_count":6,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503996,"discussion_content":"Redis中RDB是默认开启的。同时，你可以在配置文件中设置appendonly  yes，这样就可以把AOF也开启了。\n\n在RDB和AOF同时开启后，在进行恢复时，会优先使用AOF进行恢复。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597721197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305686,"discussion_content":"在RDB和AOF同时开启后，在进行恢复时，会优先使用AOF进行恢复。\n上文这句什么意思？重启后redis内存数据看不是应该没有数据在内存中吗？不是应该先恢复RDB，再做AOF里面的操作吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600056839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1192724,"avatar":"https://static001.geekbang.org/account/avatar/00/12/33/14/78104f1f.jpg","nickname":"Just Do IT","note":"","ucode":"1EAD92510FA7BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381476,"discussion_content":"这块老师的回复绝对有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625080138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305686,"ip_address":""},"score":381476,"extra":""},{"author":{"id":2028938,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/8a/dc9a23a1.jpg","nickname":"续费专用","note":"","ucode":"1B585A131B64B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1192724,"avatar":"https://static001.geekbang.org/account/avatar/00/12/33/14/78104f1f.jpg","nickname":"Just Do IT","note":"","ucode":"1EAD92510FA7BE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387296,"discussion_content":"这个专栏写的太乱了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628091426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381476,"ip_address":""},"score":387296,"extra":""},{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568491,"discussion_content":"老师的解释没问题，AOF里也有全量数据，恢复的时候不需要先RDB再AOF，如果开了AOF，不管有没有RDB，都是优先从AOF恢复数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651151524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305686,"ip_address":""},"score":568491,"extra":""}]},{"author":{"id":1937062,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","nickname":"Java垒墙工程师","note":"","ucode":"E76AE44A9C76AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305705,"discussion_content":"记混了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600064175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242160,"user_name":"tt","can_delete":false,"product_type":"c1","uid":1489957,"ip_address":"","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1597626350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27367430126","product_id":100056701,"comment_content":"我觉得之所以主从库间的数据复制同步使用的是 RDB 文件，是因为主从复制要解决的是不同节点之间状态的一致性问题，RDB文件的内容正好是某一个时间点主库的状态<br><br>AOF文件则不同，其内容本质上是操作而不是状态，内容存在大量冗余。主从复制本质上是一个最终一致性的过程，为了减少不一致的时间窗口的大小，采用RDB文件是最合适的。","like_count":6},{"had_liked":false,"id":243065,"user_name":"heyman","can_delete":false,"product_type":"c1","uid":1173894,"ip_address":"","ucode":"92EF9EF1B1B1B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/86/d34800a4.jpg","comment_is_top":false,"comment_ctime":1597936903,"is_pvip":false,"replies":[{"id":"89596","content":"从Redis 2.6开始，从库默认是被设置为只读的，配置项slave-read-only 默认为yes.","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1597939574,"ip_address":"","comment_id":243065,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23072773383","product_id":100056701,"comment_content":"老师，从库天然就是只读的吗？还是说要另外配置一下读写权限？","like_count":5,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504168,"discussion_content":"从Redis 2.6开始，从库默认是被设置为只读的，配置项slave-read-only 默认为yes.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597939574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242519,"user_name":"伊贺","can_delete":false,"product_type":"c1","uid":1044870,"ip_address":"","ucode":"610C041F19CF40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f1/86/2c65933d.jpg","comment_is_top":false,"comment_ctime":1597748461,"is_pvip":false,"replies":[{"id":"89490","content":"理解的没错，repl_backlog的大小毕竟是有限的，如果持续的速度不对等，同步慢的从库的slave_repl_offset位置上的数据还是会被覆盖掉，此时，从库和主库间就会进行全量复制了。","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1597763321,"ip_address":"","comment_id":242519,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18777617645","product_id":100056701,"comment_content":"举个例子，如果主库每秒写入 2000 个操作，每个操作的大小为 2KB，网络每秒能传输 1000 个操作，那么，有 1000 个操作需要缓冲起来，这就至少需要 2MB 的缓冲空间。否则，新写的命令就会覆盖掉旧操作了。为了应对可能的突发压力，我们最终把 repl_backlog_size 设为 4MB。<br><br>这个例子没太明白，每秒只能传输1000条记录的话，相当于每一秒就有1000条记录没有同步到从库。所以这个缓冲期只是为了应对短暂的同步延迟，持续的速度不对等的话，是肯定会被覆盖的。<br><br>我理解的对吗？","like_count":4,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504027,"discussion_content":"理解的没错，repl_backlog的大小毕竟是有限的，如果持续的速度不对等，同步慢的从库的slave_repl_offset位置上的数据还是会被覆盖掉，此时，从库和主库间就会进行全量复制了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597763321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1503506,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f1/12/7dac30d6.jpg","nickname":"你为啥那么牛","note":"","ucode":"1ABC604A54A8F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338307,"discussion_content":"在服务性能和网络传输稳定的情况下，用空间代替时间，1秒内发一半，存一半，是可以解决持续速度不对等的问题的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609236260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242158,"user_name":"test","can_delete":false,"product_type":"c1","uid":1065849,"ip_address":"","ucode":"9A4973E591DD12","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","comment_is_top":false,"comment_ctime":1597626151,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18777495335","product_id":100056701,"comment_content":"课后题：aof比rdb大，rdb加载起来比aof快。","like_count":4},{"had_liked":false,"id":262925,"user_name":"Keith","can_delete":false,"product_type":"c1","uid":1193337,"ip_address":"","ucode":"B40774090714D1","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/79/21647da2.jpg","comment_is_top":false,"comment_ctime":1605886562,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14490788450","product_id":100056701,"comment_content":"关于repl_backlog_buffer环形缓冲区，如果主库的写入master_repl_offset超过slave_repl_offset至少一轮，并且master_repl_offset仍然大于slave_repl_offset，此时主库是如何判断应该进行增量同步还是全量同步呢？","like_count":3,"discussions":[{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371564,"discussion_content":"如果master_repl_offset - slave_repl_offset >= backlog buffer size, 此时就说明有数据被覆盖了，必须得进行全量同步了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619850094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242718,"user_name":"杨礼斌","can_delete":false,"product_type":"c1","uid":1053086,"ip_address":"","ucode":"ECDBDD44C43780","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/9e/4fa5dcde.jpg","comment_is_top":false,"comment_ctime":1597822606,"is_pvip":false,"replies":[{"id":"89527","content":"master_repl_offset是主库自己往repl_backlog_buffer中写入命令的偏移量，就只有一个值。<br><br>从库的slave_repl_offset理解没问题 :)","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1597849255,"ip_address":"","comment_id":242718,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14482724494","product_id":100056701,"comment_content":"“在网络断连阶段，主库可能会收到新的写操作命令，所以，一般来说，master_repl_offset 会大于 slave_repl_offset。此时，主库只用把 master_repl_offset 和 slave_repl_offset 之间的命令操作同步给从库就行”，基于这句话引起的疑问，slave_repl_offset是每个从库都会记录自己的，那master_repl_offset是会根据每个从库都有一个不同的值么","like_count":3,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504082,"discussion_content":"master_repl_offset是主库自己往repl_backlog_buffer中写入命令的偏移量，就只有一个值。\n\n从库的slave_repl_offset理解没问题 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597849255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242294,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1597663820,"is_pvip":false,"replies":[{"id":"89492","content":"如果“以从库为粒度保存”是指每个从库有自己的复制位置，那就没问题。<br><br>我也再解释下，repl_backlog_buffer就是一块内存空间，被所有从库共享的。不过每个从库会记录自己的复制位置，重新同步时也会发给主库。<br>","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1597764590,"ip_address":"","comment_id":242294,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14482565708","product_id":100056701,"comment_content":"repl_backlog_buffer是以从库为粒度保存的吧，也就说在一主多从的情况下，主会分别保存多每个从库的处理位置吧。<br>思考题：<br>1、rdb比aof通常情况下会大些，<br>2、传播起来更耗带宽等资源<br>3、从库恢复更耗时间<br>","like_count":3,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503974,"discussion_content":"如果“以从库为粒度保存”是指每个从库有自己的复制位置，那就没问题。\n\n我也再解释下，repl_backlog_buffer就是一块内存空间，被所有从库共享的。不过每个从库会记录自己的复制位置，重新同步时也会发给主库。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597764590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555123,"discussion_content":"文件大小是不是说反了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646753661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1138821,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","nickname":"与路同飞","note":"","ucode":"2985F1440A1962","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311171,"discussion_content":"rbd通常比aof要小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602243032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1250907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","nickname":"Monday","note":"","ucode":"77B9BACC783598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299699,"discussion_content":"感谢老师回复，我理解了，主库只顾往前刷，每个从库请求时都会带上自己最后刷到的位置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597767605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274614,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1611102992,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10201037584","product_id":100056701,"comment_content":"如果全量复制过程中，网络断开了，主库这时应该没有设置replica-block-buffer缓冲区，此时应该会重新进行全量复制吧，，大神们？？","like_count":1,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388970,"discussion_content":"repl_backlog_buffer跟网络没有直接关系，是主库自己维护的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629080225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265675,"user_name":"3-","can_delete":false,"product_type":"c1","uid":2308917,"ip_address":"","ucode":"0B92117E13A262","user_header":"https://static001.geekbang.org/account/avatar/00/23/3b/35/e1f0e060.jpg","comment_is_top":false,"comment_ctime":1606978023,"is_pvip":false,"replies":[{"id":"98004","content":"在主-从-从模式中，我们假设主库有两个从库1和2，然后从库1又有两个从库3和4，那么从库3和4的数据同步是和从库1进行的，而不再是和主库进行主从复制了，所以可以在一定程度上减轻主库的压力。","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1609076086,"ip_address":"","comment_id":265675,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10196912615","product_id":100056701,"comment_content":"老师，看完“主-从-从”模式，我不懂为什么“主-从-从”模式可以缓解主库压力！","like_count":2,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511013,"discussion_content":"在主-从-从模式中，我们假设主库有两个从库1和2，然后从库1又有两个从库3和4，那么从库3和4的数据同步是和从库1进行的，而不再是和主库进行主从复制了，所以可以在一定程度上减轻主库的压力。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609076086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373534,"discussion_content":"因为每次哨兵切换主从 会导致runid变化。这时候必定会发起全量复制。你先看下psync传参","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620779132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263904,"user_name":"youngitachi","can_delete":false,"product_type":"c1","uid":1214582,"ip_address":"","ucode":"88717CA8B8ED64","user_header":"https://static001.geekbang.org/account/avatar/00/12/88/76/c69b7fe5.jpg","comment_is_top":false,"comment_ctime":1606291503,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10196226095","product_id":100056701,"comment_content":"老师，问个问题。<br>文章里说了“为了保证主从库的数据一致性，主库会在内存中用专门的 replication buffer，记录 RDB 文件生成后收到的所有写操作。”。<br>我想问的是，主从断开连接后，如果复制进度过慢导致在repl_backlog里的数据备覆盖了，为什么不能从这个replication buffer里面去同步数据呢","like_count":2,"discussions":[{"author":{"id":2308075,"avatar":"","nickname":"Geek_89e362","note":"","ucode":"E596C2CFE1CFAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346579,"discussion_content":"replication_buffer是跟客户端绑定的，主从模式，从节点就相当于主节点的一个客户端，所以当短链后，这个replication_buffer也就消失了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611996780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248091,"user_name":"feihui","can_delete":false,"product_type":"c1","uid":1007294,"ip_address":"","ucode":"13F1D4A82BC650","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/be/9ea55f46.jpg","comment_is_top":false,"comment_ctime":1600005759,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10189940351","product_id":100056701,"comment_content":"老师文中“如果它配置得过小，在增量复制阶段，可能会导致从库的复制进度赶不上主库，进而导致从库重新进行全量复制。”感觉描述有问题，配置过小跟从库复制进度没关心吧，感觉改成“在从库复制进度赶不上主库的时候，会导致全量同步”更好","like_count":2,"discussions":[{"author":{"id":2797976,"avatar":"","nickname":"Geek_323a60","note":"","ucode":"CDC276EC255411","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579775,"discussion_content":"兄弟，你理解的有问题啊。主库的写入速度应该是固定的。如果环形缓冲配置的过小会导致，主库写入位置的数据并没有被从库同步，导致同步数据丢失。这时就会全量复制。文中老师说的这句话说的也是相对速度，环形缓冲越小，写满的几率就越大，触发全量同步的几率也就越大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657683360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247419,"user_name":"Lywane","can_delete":false,"product_type":"c1","uid":1446512,"ip_address":"","ucode":"2B0027AA069CE9","user_header":"https://static001.geekbang.org/account/avatar/00/16/12/70/10faf04b.jpg","comment_is_top":false,"comment_ctime":1599704659,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10189639251","product_id":100056701,"comment_content":"举个例子，如果主库每秒写入 2000 个操作，每个操作的大小为 2KB，网络每秒能传输 1000 个操作，那么，有 1000 个操作需要缓冲起来，这就至少需要 2MB 的缓冲空间。<br><br>传输的比写的慢，这样多少缓冲区也不够吧？还是这里指的只是突发情况？","like_count":2,"discussions":[{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371565,"discussion_content":"肯定是异常情况。如果总是发生，这是从库性能的问题，网络性能的问题，需要调优","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619850244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1269957,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/c5/69286d58.jpg","nickname":"樱小路依然","note":"","ucode":"DBA9FF68015FE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338796,"discussion_content":"应该是突发情况 不然理解不了..","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609383669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246607,"user_name":"ppd0705","can_delete":false,"product_type":"c1","uid":1155646,"ip_address":"","ucode":"EB63D4E3FD1E9A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","comment_is_top":false,"comment_ctime":1599437858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10189372450","product_id":100056701,"comment_content":"请问一下slave_repl_offset是怎么更新的？在主从使用长连接正常通信同步的时候主库告知的吗？","like_count":2},{"had_liked":false,"id":311392,"user_name":"flying myself","can_delete":false,"product_type":"c1","uid":1992480,"ip_address":"","ucode":"69F26BE9B94B58","user_header":"https://static001.geekbang.org/account/avatar/00/1e/67/20/93b2e38e.jpg","comment_is_top":false,"comment_ctime":1631200098,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5926167394","product_id":100056701,"comment_content":"replication buffer 理解为client buffer，每个从库和客户端在主库内存都对应一个replication buffer；replication buffer 理解为client buffer 从库在他就在   主从断连了  replication buffer 就释放了 ；而环形缓冲区更像是日志记录，一直有的，主要是网络断连时候，用于将两个offset之间的数据同步给replication buffer这个发送缓冲区，再通过客户端socket同步给从库","like_count":1},{"had_liked":false,"id":275785,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1611666292,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5906633588","product_id":100056701,"comment_content":"老师您好，学习这节课，有比较多的疑问，如下：<br>1. 命令传播的长连接何时建立的，是执行 replicaof 时么？主库怎么知道从库成功接收到了 rdb 和 replication buffer，并且如何知道这些命令是否全部都执行成功，而不是只有部分命令执行成功？<br><br>2. FULLRESYNC 时 offset 具体是怎么得到的？所有的从库共享一个 offset 么？<br><br>3. 从库加载 rdb 之后，后续的新增的更新命令，都是存到 replication buffer 么？然后主库再同步给从库，那 replication buffer 是每个从库都对应一份么？并且从库后续怎么更新自己本地的 offset？<br><br>4. repl_backlog_buffer 给每个从库都维护一份么？这个 buffer 是不是只有在判定主从断连之后才会写入？即正常时只写 replication buffer；断连后，写 replication buffer，也写 repl_backlog_buffer？<br><br>谢谢老师！","like_count":1,"discussions":[{"author":{"id":2334421,"avatar":"https://static001.geekbang.org/account/avatar/00/23/9e/d5/24fbf7c1.jpg","nickname":"孙宏彬2","note":"","ucode":"C86EA0860CD1A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385982,"discussion_content":"看看k大佬的评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627371481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273255,"user_name":"CityAnimal","can_delete":false,"product_type":"c1","uid":1139902,"ip_address":"","ucode":"206491F70572AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/64/be/12c37d15.jpg","comment_is_top":false,"comment_ctime":1610514013,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5905481309","product_id":100056701,"comment_content":"笔记打卡<br>    * [ ] 高可靠性<br>        * [ ] 数据尽量少丢失 &amp;lt;= AOF &amp;amp; RDB<br>        * [ ] 服务尽量少中断 &amp;lt;= 增加副本冗余量<br>    * [ ] 主从库模式<br>        * [ ] 采用 读写分离<br>            * [ ] 读操作：主从都可<br>            * [ ] 写操作：先在主库执行，然后同步给从库<br>        * [ ] 通过 replicaof &#47; slaveof(5.0 前）命令形成主库和从库的关系<br>    * [ ] 主从库同步<br>        * [ ] 权量同步 | 第一次同步<br>            * [ ] 1. 主从库间建立连接、协商同步 =&amp;gt; 为全量复制做准备<br>                * [ ] 从库给主库发送 psync 命令<br>                    * [ ] psync 命令包含了主库的 runID 和复制进度 offset 两个参数<br>                        * [ ] runID = ?<br>                        * [ ] offset = -1 , 表示第一次复制<br>                * [ ] 主库根据这个命令的参数来启动复制<br>                    * [ ] FULLRESYNC 响应命令, 两个参数：<br>                        * [ ] 主库 runID<br>                        * [ ] 主库目前的复制进度 offset，返回给从库<br>            * [ ] 2. 主库将所有数据同步给从库。从库收到数据后，完成数据加载<br>                * [ ] 1. 主库执行 bgsave 命令，生成 RDB 文件<br>                * [ ] 2. 将文件发给从库<br>                * [ ] 3. 从库接收到 后，会先清空当前数据库，然后加载 RDB 文件<br>                * [ ] 为了保证主从库的数据一致性<br>                    * [ ] 主库会在内存中用专门的 replication buffer，记录 RDB 生成后收到的所有写操作<br>            * [ ] 3. 主库会把第二阶段执行过程中新收到的写命令，再发送给从库<br>        * [ ] 基于长连接的命令传播 | 正常运行后的常规同步阶段<br>        * [ ] 增量复制 &amp;lt;= 主从库间网络断了怎么办？<br>            * [ ] Redis 2.8 之前，重新进行一次**全量复制** =&amp;gt; 开销非常大<br>            * [ ] 之后，主从库会采用**增量复制**的方式继续同步<br>                * [ ] repl_backlog_buffer 缓冲区<br>                    * [ ] 一个环形缓冲区<br>                        * [ ] 主库 记录自己写到的位置, master_repl_offset<br>                        * [ ] 从库 记录已经读到的位置, slave_repl_offset<br>                    * [ ] repl_backlog_size 参数控制<br>                        * [ ] 缓冲空间大小 = 主库写入命令速度 * 操作大小 - 主从库间网络传输命令速度 * 操作大小<br>                        * [ ] repl_backlog_size = 缓冲空间大小 * 2<br>                * [ ] 连接恢复后<br>                    * [ ] 从库发送 psync 命令，offset=slave_repl_offset<br>                    * [ ] 主库把 master_repl_offset 和 slave_repl_offset 间的操作同步给从库<br>    * [ ] 主从级联模式 | “主 - 从 - 从”模式<br>        * [ ] 将主库的压力，以级联的方式分散到从库上。","like_count":1},{"had_liked":false,"id":271343,"user_name":"小超人","can_delete":false,"product_type":"c1","uid":1411096,"ip_address":"","ucode":"0D8A433F3E3737","user_header":"https://static001.geekbang.org/account/avatar/00/15/88/18/9744d5ec.jpg","comment_is_top":false,"comment_ctime":1609571548,"is_pvip":false,"replies":[{"id":"98414","content":"offset是用来记录主从库在repl_backlog_buffer中的写入和读取的位置，如果从库同步的太慢，会导致从库的offset停留在repl_backlog_buffer的某个位置，但此时，里面的数据已经被刷了一环了，从库要同步的数据也已经被覆盖掉了。发生这种情况后，主从库就开始做全量同步了。","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1609720268,"ip_address":"","comment_id":271343,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5904538844","product_id":100056701,"comment_content":"我有一个问题， 如果 一个从库和主库同步的时间隔离得太久了， 如果同步数据的时候 $offset 依然保存在 repl_backlog_buffer 里面， 但是里面的数据已经被刷了一环了， 这种情况下会发生吗？ 如果会发生， Redis 是怎么做同步的呢？","like_count":1,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512905,"discussion_content":"offset是用来记录主从库在repl_backlog_buffer中的写入和读取的位置，如果从库同步的太慢，会导致从库的offset停留在repl_backlog_buffer的某个位置，但此时，里面的数据已经被刷了一环了，从库要同步的数据也已经被覆盖掉了。发生这种情况后，主从库就开始做全量同步了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609720268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1677568,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eopibicYcibaNGZvicTEMyYroXQGpP1WicRxI0SBobVJVYtml6K6bQhtgR3bLZJkFZMSDV4SuxdjZRgXUw/132","nickname":"宇智波悟天","note":"","ucode":"C6945990FE33C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377825,"discussion_content":"系统定义了几个值，用于描述buf的状态。repl_backlog_idx是老师提到的buf中最新写入的位置，从0开始达到repl_backlog_size又指向0。你的问题的关键，被“套圈”以后怎么办？确实，光有这个repl_backlog_idx是不能判断是否“套圈”的。所以还有几个记录值：master_repl_offset表示当前累计写入buf的总偏移量，它永远递增。repl_backlog_histlen表示当前的有效buf长度；repl_backlog_off指向当前有效buf的起始偏移量，它和master_repl_offset是对应的，标记累计偏移量在这一轮buf中的起始位置的累计偏移。三者关系： repl_backlog_off = master_repl_offset - repl_backlog_histlen + 1。这样子，来一个slave_repl_offset，主库都能够通过计算知道从库的读取偏移还在不在这轮buf中，不在的话自然只能全量同步了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1622891044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371577,"discussion_content":"关键点就在于 offset是递增的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619853283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016575,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/82/ff/00e7614e.jpg","nickname":"robyy","note":"","ucode":"773337C9942A7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346439,"discussion_content":"关键在offset是会不断增加的，和数组的元素数据结构绑定，然后类似于对buffer/数组长度求余得到数组小标，所以主库直接查从库的offset在不在数组数据里","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611956119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266648,"user_name":"Sr7vy","can_delete":false,"product_type":"c1","uid":1276653,"ip_address":"","ucode":"4C2D930E984BC9","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/ed/f52b84b9.jpg","comment_is_top":false,"comment_ctime":1607426606,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5902393902","product_id":100056701,"comment_content":"老师，client-output-buffer-limit 能展开讲下吗？<br>默认client-output-buffer-limit slave 256mb 64mb 60<br>遇到过一次故障，redis节点20GB+，切换后做load momery要5-6分钟，会发现在mater节点，从还没有load结束，就已经被master认定为丢失连接，请问下遇到这种情况应该怎么处理？<br>另外repl-timeout跟client-output-buffer-limit的60s有什么关系？","like_count":1,"discussions":[{"author":{"id":2026765,"avatar":"","nickname":"ivan","note":"","ucode":"EBED3FF6606E76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333322,"discussion_content":"client-output-buffer-limit slave 256mb 64mb 60 表示如果60秒内缓冲区消耗持续大于60m或者直接超过256m，主节点将直接关闭复制客户端连接，造成全量同步失败.\n答案来源于：<redis开发与运维>一书，6.3章原理.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1607500457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261239,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1605248214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5900215510","product_id":100056701,"comment_content":"&quot;第一阶段是主从库间建立连接、协商同步的过程，主要是为全量复制做准备。在这一步，从库和主库建立起连接，并告诉主库即将进行同步，主库确认回复后，主从库间就可以开始同步了&quot;  老师这个连接时建立TCP连接吗","like_count":1},{"had_liked":false,"id":260174,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1604934518,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5899901814","product_id":100056701,"comment_content":"repl_backlog_size这个参数很重要，因为如果满了，就需要重新全量复制，默认是1M，所以之前网上就流传1个段子，如果一个公司说自己体量如何大，技术多么牛，要是repl_backlog_size参数是默认值，基本可以认为要不业务体量吹牛逼了，要不就没有真正的技术牛人。","like_count":1},{"had_liked":false,"id":259511,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1604738156,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5899705452","product_id":100056701,"comment_content":"有个问题：就是主从同步数据的的过程中肯定需要时间的，那会不会导致读到的还是旧值呢？会有一定的延迟？","like_count":1},{"had_liked":false,"id":255171,"user_name":"Reborn 2.0","can_delete":false,"product_type":"c1","uid":1977474,"ip_address":"","ucode":"BA506E7455D91C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/2c/82/98e2b82a.jpg","comment_is_top":false,"comment_ctime":1603276049,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5898243345","product_id":100056701,"comment_content":"老师, 我还想问一个问题: 主从库建立起的这个&quot;命令传播的长连接&quot;, 是刚开始第一步slave发送replicaof命令的时候就建立好一直维持的吗? 还是什么时候啊","like_count":1,"discussions":[{"author":{"id":2172420,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/r2nR7Zkl5RP7LobsNKJ6wmmtyXrh4alNSAOldx1y1PSeFB1J2I14HE4I0BCgicPhubIOibPZAENzEpHEWTFjMNqg/132","nickname":"董董","note":"","ucode":"C222E275545158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326534,"discussion_content":"顶一下，也是我的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605614004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245243,"user_name":"Mr.Cool","can_delete":false,"product_type":"c1","uid":1797149,"ip_address":"","ucode":"1347C0F297F0B6","user_header":"https://static001.geekbang.org/account/avatar/00/1b/6c/1d/3e834742.jpg","comment_is_top":false,"comment_ctime":1598874770,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5893842066","product_id":100056701,"comment_content":"老师之前回复吕同学：Redis中RDB是默认开启的。同时，你可以在配置文件中设置appendonly yes，这样就可以把AOF也开启了。<br>在RDB和AOF同时开启后，在进行恢复时，会优先使用AOF进行恢复。<br><br>但是在上节中讲到，在Redis 4.0 中提出了一个混合使用 AOF 日志和内存快照的方法。<br><br>基于上述描述，新人小白有一个问题：那是不是Redis4.0之后如果是优先恢复AOF，然后再恢复RDB，那会不会出现恢复rdb的时候将aof的数据覆盖掉？还是说Redis4.0之后恢复文件的顺序发生了改变？","like_count":1,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373535,"discussion_content":"混合持久化是写在aof文件里的 你可以下载一个redis4.0+试一下 再用二进制文件打开aof文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620779204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1252567,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1c/d7/c176ad9f.jpg","nickname":"绝尘而去","note":"","ucode":"690E4E6B3E39DD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308718,"discussion_content":"恢复数据时还是采用aof，只不过，在rewrite时会把aof中的数据写成rdb格式存在aof文件里，之后产生的数据通过记录命令的方式追加到后面，如此往复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601042357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244136,"user_name":"Lywane","can_delete":false,"product_type":"c1","uid":1446512,"ip_address":"","ucode":"2B0027AA069CE9","user_header":"https://static001.geekbang.org/account/avatar/00/16/12/70/10faf04b.jpg","comment_is_top":false,"comment_ctime":1598407751,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5893375047","product_id":100056701,"comment_content":"才发现老师和我是校友","like_count":1},{"had_liked":false,"id":242288,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1597660046,"is_pvip":false,"replies":[{"id":"89493","content":"对RDB和AOF理解到位 :)","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1597765186,"ip_address":"","comment_id":242288,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5892627342","product_id":100056701,"comment_content":"解答：主从同步采用RDB的原因是由于采用RDB，从节点恢复效率更好，能够更快地对外提供服务，分担主节点的读压力。<br>如果采用AOF日志，从节点需要逐条执行命令，恢复效率低","like_count":1,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503973,"discussion_content":"对RDB和AOF理解到位 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597765186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242253,"user_name":"醉、随风🙄 🙄","can_delete":false,"product_type":"c1","uid":1219433,"ip_address":"","ucode":"FDDFE9827FD64B","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/69/943dfd5c.jpg","comment_is_top":false,"comment_ctime":1597649406,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5892616702","product_id":100056701,"comment_content":"我有个问题，为什么一定要同时存在repl_backlog_buffer和replication buffer两个缓冲区，而且repl_backlog_buffer确要定义成环形的。我觉得是否可以定义成一个链表，然后主库的offset与从库的offset都指向链表中某个元素，redis定时清理从库offset之前的数据，这样不是做到了既能增量同步，也不用担心因为并发过大造成的同步数据丢失。","like_count":1,"discussions":[{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299764,"discussion_content":"从库多个实例的话，以谁的为准来做清理呢？\n而且主库是不保存各个从库的偏移量\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597810514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371573,"discussion_content":"循环buffer隐含着“超限”的意思， master_offset-slave_offeset>=buffer size,  相当于设置了一个度，因为内存有限。\n其次，slave_repo_offset是每个从库自己维护的，对于主库而言，选哪个slave_repo_offset为准呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619852795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242231,"user_name":"猿人谷","can_delete":false,"product_type":"c1","uid":1100149,"ip_address":"","ucode":"85106C7FB14C43","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/75/62ce2d69.jpg","comment_is_top":false,"comment_ctime":1597642378,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"5892609674","product_id":100056701,"comment_content":"补充一个知识点：主从模式下，Redis能否读到过期键？<br>当 Redis 运行在主从模式下时，从库不会进行过期扫描，从库对过期键的处理是被动的。也就是即使从库中的 key 过期了，如果有客户端访问从库时，依然可以得到 key 对应的值，像未过期的键值对一样返回。","like_count":1,"discussions":[{"author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299670,"discussion_content":"不对，从库虽然不会删除过期key，但是访问这个key时还会返回null，外部看来这个key已经不存在了。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1597761355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/90/8a/288f9f94.jpg","nickname":"Kaito","note":"","ucode":"79775FA35A95F2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":371567,"discussion_content":"那就说明，redis底层应该存储着这个key创建的绝对时间，对吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619851303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299670,"ip_address":""},"score":371567,"extra":""}]},{"author":{"id":1065863,"avatar":"https://static001.geekbang.org/account/avatar/00/10/43/87/24eb68cf.jpg","nickname":"dermanyuan","note":"","ucode":"3227437F62C5B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301652,"discussion_content":"redis有延迟删除机制，当访问数据时 比较过期时间，如果过期且数据存在则返回null，同时会异步删除数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598598484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242175,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1597629142,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5892596438","product_id":100056701,"comment_content":"印象中Redis在repl_backlog_buffer写满了之后会触发一次全量复制，以此来保证被覆盖的数据不丢失。不知道对不对","like_count":1,"discussions":[{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299636,"discussion_content":"主库不会触发复制， 触发复制的时机都是从库做了某个动作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597756340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360212,"user_name":"遇见阳光","can_delete":false,"product_type":"c1","uid":1203576,"ip_address":"湖北","ucode":"378E5D37B3CD0E","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/78/f011d586.jpg","comment_is_top":false,"comment_ctime":1666279055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666279055","product_id":100056701,"comment_content":"命令传播阶段master发送给slave的数据会通过ack机制确保数据同步成功吗？","like_count":0},{"had_liked":false,"id":355075,"user_name":"蔡欧","can_delete":false,"product_type":"c1","uid":1317604,"ip_address":"广东","ucode":"39470A1DCAA7A9","user_header":"https://static001.geekbang.org/account/avatar/00/14/1a/e4/5e2a8190.jpg","comment_is_top":false,"comment_ctime":1661055475,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661055475","product_id":100056701,"comment_content":"redis服务可用性：采用主从架构<br>redis主从同步的原理：主redis维护一个repl_backlog_buff，所有操作都会写入改buff，从发送psync命令上送自己的offset，主则从上送的offset开始一直到master offset数据同步给从<br>从服务器断链后，怎么保证数据同步的一致性：1 增加repl_backlog_buff的大小，尽可能避免ring buff覆盖到从的offset 2 如果覆盖到从offset，从则申请一次全量复制<br>如何避免主服务器由于同步导致性能下降的问题：从主从架构变成主从从架构，降低主的压力<br>如何解决主从io不一致导致replication buff扩张问题：通过client-output-buffer-limit限制大小，如果超过该限制，则主动断开连接","like_count":0},{"had_liked":false,"id":353432,"user_name":"陈扬","can_delete":false,"product_type":"c1","uid":1886778,"ip_address":"浙江","ucode":"FF76E9DCD06BCF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL8O8j1HZhjWRS844VLiayLgCCWrokyqD0Pib0Je24UfR9iaGNs6ichjMBCVibDyTgOFkLfJiccpceicE5Uw/132","comment_is_top":false,"comment_ctime":1659433509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659433509","product_id":100056701,"comment_content":"主库上的 repl_backlog_buffer  是一个从库一个buffer 呢，还是只有一个repl_backlog_buffer ，上面有不同从库的offset","like_count":0},{"had_liked":false,"id":351998,"user_name":"程是程天文的程","can_delete":false,"product_type":"c1","uid":1317029,"ip_address":"","ucode":"56AB070DA072C2","user_header":"https://static001.geekbang.org/account/avatar/00/14/18/a5/9abebe85.jpg","comment_is_top":false,"comment_ctime":1658319639,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1658319639","product_id":100056701,"comment_content":"缓冲空间大小 = 主库写入命令速度 * 操作大小 - 主从库间网络传输命令速度 * 操作大小<br>这里应该是 <br>(最大主库写入命令速度 * 操作大小 - 最小主从库间网络传输命令速度 * 操作大小) * 持续时间吧<br>","like_count":0},{"had_liked":false,"id":351886,"user_name":"going","can_delete":false,"product_type":"c1","uid":2313353,"ip_address":"","ucode":"3AA83F9B07BE8B","user_header":"https://static001.geekbang.org/account/avatar/00/23/4c/89/82a3ee04.jpg","comment_is_top":false,"comment_ctime":1658279836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658279836","product_id":100056701,"comment_content":"RDB是记录当前内存中的数据，在生成快照之后的操作是放在缓冲区的，这也能减少数据丢失，对于从库来说用RDB来生成数据要比使用AOF生成数据快，个人的理解。","like_count":0},{"had_liked":false,"id":351305,"user_name":"Geek_ad9aec","can_delete":false,"product_type":"c1","uid":3050838,"ip_address":"","ucode":"951E86E64B4844","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/MnNmAGFwlyPFiazHo4micPVFR4SheUk4VC5gKyoYHyHaZAWbyI16aEhm4xoxa4bNH7h5SdPajZibpC5wlyUGBzoog/132","comment_is_top":false,"comment_ctime":1657685993,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657685993","product_id":100056701,"comment_content":"老师讲了主从第一次的全量同步以及网络断开重新连上之后的增量同步。我有一个疑问。那么平时平稳运行情况下是怎么同步的？","like_count":0},{"had_liked":false,"id":350937,"user_name":"小coding","can_delete":false,"product_type":"c1","uid":2502879,"ip_address":"","ucode":"08360F2B8F856A","user_header":"https://static001.geekbang.org/account/avatar/00/26/30/df/c6f56efb.jpg","comment_is_top":false,"comment_ctime":1657366370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657366370","product_id":100056701,"comment_content":"为什么将repl_backlog_buffer设置为环状","like_count":0},{"had_liked":false,"id":349170,"user_name":"NorthWind","can_delete":false,"product_type":"c1","uid":1037669,"ip_address":"","ucode":"459ADF3B0945E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/65/1c9f1530.jpg","comment_is_top":false,"comment_ctime":1655780167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655780167","product_id":100056701,"comment_content":"single source of truth，master 就是负责这个的。","like_count":0},{"had_liked":false,"id":349028,"user_name":"建锋","can_delete":false,"product_type":"c1","uid":2295880,"ip_address":"","ucode":"50E4AF68BE4488","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/SYxHx9k1fVAZGanCk5cFVdzFyhx2pkNk45RdH1Yo3ITBH7dCWjwzEzibAnZaXayqF1TibW6ynBkCqIOd6p1Yhlew/132","comment_is_top":false,"comment_ctime":1655650563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655650563","product_id":100056701,"comment_content":"使用rdb,是因为其使用二进制文件记录数据信息，文件大小比aof小，执行恢复也比aof快","like_count":0},{"had_liked":false,"id":348695,"user_name":"梦江","can_delete":false,"product_type":"c1","uid":2059155,"ip_address":"","ucode":"B5FD2835863460","user_header":"https://static001.geekbang.org/account/avatar/00/1f/6b/93/bfda2d1c.jpg","comment_is_top":false,"comment_ctime":1655304858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655304858","product_id":100056701,"comment_content":"我理解repl_buffer 就是一个缓冲区，<br>master写命令执行的同时也会写到这里面，然后异步线程发送这些buffer给从节点","like_count":0},{"had_liked":false,"id":348632,"user_name":"lupguo","can_delete":false,"product_type":"c1","uid":1009098,"ip_address":"","ucode":"1B55A01DF78647","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/ca/38dcd55a.jpg","comment_is_top":false,"comment_ctime":1655263949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655263949","product_id":100056701,"comment_content":"增量复制细节：<br><br>1. `repl_backlog_buffer` : 主节点若识别到有挂有从节点，则会申请一个环形缓冲区，这个缓冲区多Slave共享一个；主节点会把Redis写操作指令存入`repl_backlog_buffer` 环形缓冲区内<br>2. 各从库会向主库发送 `psync` 获取各自从库offset后的Redis写命令<br>3. 主节点将`[slave_offset, master_offset]`间的写操作内容同步到`relication buffer` ，发送给指定的从库实例（这里的`relication buffer`  ，实际就是客户端写缓存buffer `client-output-buffer-limit参数有控制`)<br><br>环形缓冲区大小配置：<br>从配置，特别注意repl_backlog_size 参数配置，若配置过小，可能从库赶不上主库，导致主从间要做全量RDB同步（假设主库写2000 qps，每个cmd 2KB，即每秒主库有4M写入；若从库每秒能同步1000qps，即2M消费；所以 repl_backlog_size 至少为2M以上，考虑到突发压力，repl_backlog_size 可以配置2~3倍以上，即4~6M，避免主从同步offset偏差过大，导致全量RDB同步）","like_count":0},{"had_liked":false,"id":347667,"user_name":"樱桃汁。","can_delete":false,"product_type":"c1","uid":2907715,"ip_address":"","ucode":"36EE9D8B9C5122","user_header":"https://static001.geekbang.org/account/avatar/00/2c/5e/43/004a52fa.jpg","comment_is_top":false,"comment_ctime":1654268977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654268977","product_id":100056701,"comment_content":".AOF记录的是命令，用命令的方式复制数据比快照慢","like_count":0},{"had_liked":false,"id":347431,"user_name":"听雨","can_delete":false,"product_type":"c1","uid":1254493,"ip_address":"","ucode":"252754F9FCFF0C","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","comment_is_top":false,"comment_ctime":1654010079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654010079","product_id":100056701,"comment_content":"主从第一次同步RDB数据时，数据会经过replication_buffer吗","like_count":0},{"had_liked":false,"id":345304,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1652182871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652182871","product_id":100056701,"comment_content":"简单说一下 buffer实际上就是用户态的缓冲区。java里通常是char数组 &#47;byte数组。而c里通常是char * 指代的内存首地址。<br><br>再来回答下课代表和老师的回复。backlog实际上就是在接收指令时用于做主从同步的 这个backlog是每个redis server都有 甚至从机也有个slave_backlog。<br> <br>而replication buffer实际上是每个客户端的缓冲区。怎么来理解？ 如果每写一个<br>byte都要做网络io 那么会很慢 就会回到write through的通信模式。而如果搞一个缓冲区 那么就攒齐一个byte数组 再发送，而这个东西通常称为buffer。客户端的buffer叫replication buffer","like_count":0},{"had_liked":false,"id":345297,"user_name":"keep_it_real","can_delete":false,"product_type":"c1","uid":2055554,"ip_address":"","ucode":"F5057CAF752FF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/5d/82/81b2ba91.jpg","comment_is_top":false,"comment_ctime":1652177642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652177642","product_id":100056701,"comment_content":"repl_backlog_buffer有点类似MySQL的redo log，也是一边写入一边擦除，不过redo log没有来的及落盘的部分不会被覆盖，而是会停掉写入，等待被擦除一段再写入。","like_count":0},{"had_liked":false,"id":343460,"user_name":"Geek_9adefb","can_delete":false,"product_type":"c1","uid":2980933,"ip_address":"","ucode":"DE7D4E98F892AE","user_header":"","comment_is_top":false,"comment_ctime":1650861474,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1650861474","product_id":100056701,"comment_content":"老师好，课非常棒，但是关于两个缓冲区怎么配合的，我还是有点疑问，我说出我的理解，您帮忙看下对不对：<br><br>增量命令是放到环形缓冲区replication_backlog_buffer中的，然后每次都会根据每个从节点的进度往各个从节点客户端的replication_buffe中拷贝，连接正常的情况下从库只需要从replication_buffer中去读就行了，在正常的时候，哪怕环形缓冲区追上并覆盖了也没关系，因为需要给从库的数据已经不停的被拷贝到replication buffer里面了。 （这一部分不知道理解的对不对）<br><br>但是如果是断线重连的情况，那就需要replication_backlog_buffer中判断一下是否已经追上并覆盖了，如果是的那就只能增量覆盖（这一部分应该没问题）<br><br>如果断线重连，并且发现replication_backlog_buffer中还没有覆盖，则就将指定范围内的数据拷贝到客户端的replication_buffer中去 （这一部分不知道理解的对不对）<br><br><br>","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568103,"discussion_content":"replication_buffer就是一个客户端的输出缓冲区，任何发往客户的的数据都要先到这个缓冲区，再实际发出去\n1、连接正常的情况下，主从复制是主库直接把命令发给从库，（当然也是先到replication_buffer再实际给从库），跟replication_backlog_buffer没什么关系；只有在从库断了重连后，期间的命令丢失，才会根据replication_backlog_buffer把增量的数据发往replication_buffer并给到从库；\n2、不太清楚你说的增量覆盖什么意思。如果断线重连后，master发现slave上次同步的offset数据已经被覆盖，则全量复制，否则只发增量数据；这里不管是全量rdb还是增量命令，也都是先到replication_buffer\n3、没错\n不知道我解释清楚没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651066598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341881,"user_name":"宙斯","can_delete":false,"product_type":"c1","uid":2041396,"ip_address":"","ucode":"80DF36BAD298AD","user_header":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","comment_is_top":false,"comment_ctime":1649899278,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649899278","product_id":100056701,"comment_content":"问题1 偏移值一直保持增大？<br>问题2 主从复制过程从库在rdb导入时清空本地数据，那么这个过程从库是无法对外提供服务？<br>问题3 如果发生主从切换后，所有从库会全量同步？","like_count":0},{"had_liked":false,"id":341361,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1649567280,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649567280","product_id":100056701,"comment_content":"从执行效率的角度，rdb更快，offset可以确保数据的一致性","like_count":0},{"had_liked":false,"id":338268,"user_name":"Im me","can_delete":false,"product_type":"c1","uid":1792714,"ip_address":"","ucode":"FF7DEED4BB4C37","user_header":"https://static001.geekbang.org/account/avatar/00/1b/5a/ca/4d5d23d1.jpg","comment_is_top":false,"comment_ctime":1647400086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647400086","product_id":100056701,"comment_content":"老师，replication buffer中的没有同步给从库的数据被客户端读取了，岂不是就是旧数据了，这几乎一直在发生呀","like_count":0},{"had_liked":false,"id":337633,"user_name":"leo","can_delete":false,"product_type":"c1","uid":1880831,"ip_address":"","ucode":"A35EA21E4AB4E4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/3WkjeoWuGxfR4yJc9wzJVqRQPEEBr7B6ibKf8qaERSbS0KzxibibiaClYicpPeZFjxo1uendzn2DMeTDQJJzVXxEuiaA/132","comment_is_top":false,"comment_ctime":1646925612,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646925612","product_id":100056701,"comment_content":"“当主从库断连后，主库会把断连期间收到的写操作命令，写入 replication buffer，同时也会把这些操作命令写入 repl_backlog_buffer 这个缓冲区。”，请问这里为什么还要写入 replication buffer呢","like_count":0},{"had_liked":false,"id":337631,"user_name":"leo","can_delete":false,"product_type":"c1","uid":1880831,"ip_address":"","ucode":"A35EA21E4AB4E4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/3WkjeoWuGxfR4yJc9wzJVqRQPEEBr7B6ibKf8qaERSbS0KzxibibiaClYicpPeZFjxo1uendzn2DMeTDQJJzVXxEuiaA/132","comment_is_top":false,"comment_ctime":1646924398,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646924398","product_id":100056701,"comment_content":"“为了保证主从库的数据一致性，主库会在内存中用专门的 replication buffer，记录 RDB 文件生成后收到的所有写操作。”  请问这里的 replication buffer 存放的是 日志 还是 数据 呢？","like_count":0},{"had_liked":false,"id":337322,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1646753765,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1646753765","product_id":100056701,"comment_content":"老师，您好，文中长连接复制，基于Tcp协议，还是http协议呢？","like_count":0,"discussions":[{"author":{"id":1103091,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","nickname":"李二木","note":"","ucode":"30E03BB84ADB27","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560618,"discussion_content":"tcp把。肯定不是http","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649405209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336492,"user_name":"Tim","can_delete":false,"product_type":"c1","uid":1480717,"ip_address":"","ucode":"3AAA9FD3D8DDDB","user_header":"https://static001.geekbang.org/account/avatar/00/16/98/0d/fb77a32c.jpg","comment_is_top":false,"comment_ctime":1646188052,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1646188052","product_id":100056701,"comment_content":"想请问一下老师，slave_repl_offset和master_repl_offset是一直递增的，还是达到repl_backlog_size后会取模？如果是后者的话，是不是会存在slave_repl_offset在第一圈中的偏移量小于master_repl_offset在第二圈中的偏移量，这种情况到底是采用全量复制还是增量复制么","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568070,"discussion_content":"一直递增的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651061358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336059,"user_name":"阮华","can_delete":false,"product_type":"c1","uid":2912941,"ip_address":"","ucode":"D0FDA030071C8F","user_header":"https://static001.geekbang.org/account/avatar/00/2c/72/ad/e22c4507.jpg","comment_is_top":false,"comment_ctime":1645872496,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645872496","product_id":100056701,"comment_content":"建议老师把“增量复制”这一块调整下，不然新手看的会特别疑惑，网络都断开了，redis怎么还可以通过增量复制进行主从同步呢？看完下面的评论才恍然大悟，原来只是记录偏移量，需要等到网络恢复后再根据偏移量给从库同步","like_count":0},{"had_liked":false,"id":334275,"user_name":"是我！","can_delete":false,"product_type":"c1","uid":1691331,"ip_address":"","ucode":"0B474014D620F4","user_header":"https://static001.geekbang.org/account/avatar/00/19/ce/c3/688b8bf9.jpg","comment_is_top":false,"comment_ctime":1644844277,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1644844277","product_id":100056701,"comment_content":"老师好，如果replication buffer和repl_backlog_buffer写满了之后，会发生怎样的操作？2、replication buffer和repl_backlog_buffer这两个内存缓冲区什么时机会清除内存呐？","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568073,"discussion_content":"1、replication buffer有限制，默认的话是64M，超过以后客户端连接会被强制断开；\n2、repl_backlog_buffer是环形缓冲区，写满之后覆盖最旧的；\n3、replication buffer如果正常将数据发送到客户端就会被清掉，可以认为是一个存放堆积数据的，正常不会太大，客户端断开以后 这个客户端的replication buffer就销毁了；\n4、首先你要知道repl_backlog_buffer只在master存在，当master变成slave，或者master 1小时内都没有slave连接上，master就会把repl_backlog_buffer释放掉，反之，当第一个slave连接上来时，repl_backlog_buffer会被创建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651062270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333243,"user_name":"Geek_064e72","can_delete":false,"product_type":"c1","uid":2900973,"ip_address":"","ucode":"D627BACE46C37C","user_header":"","comment_is_top":false,"comment_ctime":1644226455,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644226455","product_id":100056701,"comment_content":" replication buffer和repl_backlog_buffer里面的内容是和AOF一样的写操作记录吗？如果不是，那么 replication buffer和repl_backlog_buffer的内容长什么样子？","like_count":0},{"had_liked":false,"id":332585,"user_name":"伊诺","can_delete":false,"product_type":"c1","uid":1281857,"ip_address":"","ucode":"709E038DD01C17","user_header":"https://static001.geekbang.org/account/avatar/00/13/8f/41/307555ff.jpg","comment_is_top":false,"comment_ctime":1643355296,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1643355296","product_id":100056701,"comment_content":"老师，在线上环境，我增加从节点服务器。在做主从数据同步时候，读操作会分配到从节点服务器么？主从数据会存在网络延迟数据不一致么？","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554089,"discussion_content":"看客户端，一般来说如果你没设就不会做读写分离。主从数据会存在不一致，所以业务上要能容忍，否则不适合用这种方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646208456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332093,"user_name":"日月星辰","can_delete":false,"product_type":"c1","uid":1796332,"ip_address":"","ucode":"4E9F48153B2D8B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/68/ec/eb0ebbb6.jpg","comment_is_top":false,"comment_ctime":1643013516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643013516","product_id":100056701,"comment_content":"也就是说增量同步的时候，主库会把 repl_backlog_buffer 里的命令先拷贝到 replication buffer，再通过 replication buffer 发送给从库是吗？","like_count":0},{"had_liked":false,"id":332076,"user_name":"日月星辰","can_delete":false,"product_type":"c1","uid":1796332,"ip_address":"","ucode":"4E9F48153B2D8B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/68/ec/eb0ebbb6.jpg","comment_is_top":false,"comment_ctime":1643007642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643007642","product_id":100056701,"comment_content":"如何保证写的时候只写入主库呢？","like_count":0},{"had_liked":false,"id":332049,"user_name":"日月星辰","can_delete":false,"product_type":"c1","uid":1796332,"ip_address":"","ucode":"4E9F48153B2D8B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/68/ec/eb0ebbb6.jpg","comment_is_top":false,"comment_ctime":1642995671,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642995671","product_id":100056701,"comment_content":"增量同步，同步的是数据还是命令？","like_count":0},{"had_liked":false,"id":330664,"user_name":"iiiiiiiiice","can_delete":false,"product_type":"c1","uid":1397368,"ip_address":"","ucode":"6B781E213D1308","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/78/31016021.jpg","comment_is_top":false,"comment_ctime":1642087705,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1642087705","product_id":100056701,"comment_content":"从库的slave_repl_offset是什么时候记录的","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568095,"discussion_content":"全量同步时，master会告诉slave当前偏移量，slave存起来；后续master命令传播给slave时，slave根据接收到的命令长度自行更新offset（比如master发送的命令长度是10，发送时master_repl_offset+10，slave接收到命令slave_repl_offset也+10，这样offset就同步了），断线重连后，salve向master发送PSYNC时就能带上这个slave_repl_offset获取增量数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651065324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325145,"user_name":"树心","can_delete":false,"product_type":"c1","uid":1589523,"ip_address":"","ucode":"6C329F0FF798B9","user_header":"https://static001.geekbang.org/account/avatar/00/18/41/13/ab14ad25.jpg","comment_is_top":false,"comment_ctime":1638842166,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1638842166","product_id":100056701,"comment_content":"第6-9节应该是一个小主题，怎样通过集群提高redis可靠性。<br>第6节讲解了主从同步、增量复制的方式，之后应该会演化到哨兵集群和切片集群。","like_count":0},{"had_liked":false,"id":324308,"user_name":"Yipsen","can_delete":false,"product_type":"c1","uid":2856313,"ip_address":"","ucode":"F0ECE8C12AF105","user_header":"","comment_is_top":false,"comment_ctime":1638366336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638366336","product_id":100056701,"comment_content":"AOP文件较大占用带宽过大？而RDB相比AOP的缺点是有延迟，这块可以通过offset补齐。","like_count":0},{"had_liked":false,"id":324085,"user_name":"Sam Fu","can_delete":false,"product_type":"c1","uid":1112676,"ip_address":"","ucode":"EA285A4943271F","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","comment_is_top":false,"comment_ctime":1638284186,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1638284186","product_id":100056701,"comment_content":"老师 这个offset是怎么维护的呀 replication buffer是怎么知道backlog里面的offset的呀","like_count":0},{"had_liked":false,"id":323858,"user_name":"wessonwang","can_delete":false,"product_type":"c1","uid":1000441,"ip_address":"","ucode":"A9BA5E3A3F278E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/f9/723ee153.jpg","comment_is_top":false,"comment_ctime":1638184606,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1638184606","product_id":100056701,"comment_content":"如果使用AOF来复制数据，存在两方面问题<br>1、创建从节点时，数据初始化，所依赖的AOF重写日志文件，大小比RDB要大，给网络IO带来更大压力；<br>2、第二阶段，从磁盘读取AOF日志，前后两次读 会是一个随机读，增加不一致的窗口；","like_count":0},{"had_liked":false,"id":321917,"user_name":"crown clown","can_delete":false,"product_type":"c1","uid":1738238,"ip_address":"","ucode":"04A981C89044EA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/fe/9cba131f.jpg","comment_is_top":false,"comment_ctime":1637110629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637110629","product_id":100056701,"comment_content":"原文：举个例子，如果主库每秒写入 2000 个操作，每个操作的大小为 2KB，网络每秒能传输 1000 个操作，那么，有 1000 个操作需要缓冲起来，这就至少需要 2MB 的缓冲空间。否则，新写的命令就会覆盖掉旧操作了。为了应对可能的突发压力，我们最终把 repl_backlog_size 设为 4MB。<br><br>这里的repl_backlog_size应该也和时间有关系吧，估算业务的高峰时长 * 2MB * 2 才是真正的大小吧？","like_count":0},{"had_liked":false,"id":321437,"user_name":"克里斯","can_delete":false,"product_type":"c1","uid":1181844,"ip_address":"","ucode":"00B755C10AC1C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/94/2c22bd4e.jpg","comment_is_top":false,"comment_ctime":1636878662,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636878662","product_id":100056701,"comment_content":" The client output buffer limits can be used to force disconnection of clients<br># that are not reading data from the server fast enough for some reason (a<br># common reason is that a Pub&#47;Sub client can&#39;t consume messages as fast as the<br># publisher can produce them).<br>#<br># The limit can be set differently for the three different classes of clients:<br>#<br># normal -&gt; normal clients including MONITOR clients<br># replica  -&gt; replica clients<br># pubsub -&gt; clients subscribed to at least one pubsub channel or pattern<br>#<br># The syntax of every client-output-buffer-limit directive is the following:<br>#<br># client-output-buffer-limit &lt;class&gt; &lt;hard limit&gt; &lt;soft limit&gt; &lt;soft seconds&gt;<br><br><br>client-output-buffer-limit normal 0 0 0<br>client-output-buffer-limit replica 256mb 64mb 60<br>client-output-buffer-limit pubsub 32mb 8mb 60","like_count":0},{"had_liked":false,"id":320424,"user_name":"monsterhxw","can_delete":false,"product_type":"c1","uid":1216801,"ip_address":"","ucode":"D04AD6301AE7AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/91/21/d16b884e.jpg","comment_is_top":false,"comment_ctime":1636308249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636308249","product_id":100056701,"comment_content":"老师,redis集群好像有用到Gossip协议来同步数据,可以说一下吗?","like_count":0},{"had_liked":false,"id":320340,"user_name":"最摇摆的鱼","can_delete":false,"product_type":"c1","uid":1255574,"ip_address":"","ucode":"DA19F4C4224719","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqgVXa8DyW0YsrdYtPNMOdGH6hfdwfjwyBPRyoc9yuS4Ml18l0kApOoOKwYkF6NlDPYpX1bVEWomw/132","comment_is_top":false,"comment_ctime":1636266099,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636266099","product_id":100056701,"comment_content":"觉得那个repl_backlog_size有问题吧：<br>1. 网络传播速度不应该大于等于写入速度吗？如果小的话，累积命令无限增加，缓存设多大都没用。<br>2.例子里面假设了网络中断只有一秒，计算公式里面没有这个参数。","like_count":0},{"had_liked":false,"id":320235,"user_name":"A小望","can_delete":false,"product_type":"c1","uid":2526707,"ip_address":"","ucode":"2353EA5CC29CF5","user_header":"https://static001.geekbang.org/account/avatar/00/26/8d/f3/02423443.jpg","comment_is_top":false,"comment_ctime":1636167160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636167160","product_id":100056701,"comment_content":"老师请问下，读数据可以从各个节点读，在节点同步数据未完成过程中，不同节点读出来数据是不是会不会不一致","like_count":0},{"had_liked":false,"id":319096,"user_name":"受超凡","can_delete":false,"product_type":"c1","uid":2678558,"ip_address":"","ucode":"A2A160D483BBB0","user_header":"","comment_is_top":false,"comment_ctime":1635582659,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1635582659","product_id":100056701,"comment_content":"repl_backlog_buffer这个缓冲区为什么要设计成环呢？用一个队列不更简单吗，一端进一端出，队列满了以后，新入队的将前边的挤出队列？主从的开始位置就是队列的起始位置，队列满了指针在回到队列头。","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568418,"discussion_content":"1、repl_backlog_buffer实际上是一段连续的内存空间，创建的时候就一次性全部申请，那么这段内存是挨在一起的，内存数据往往具有局部性，连续的内存可以一次性加载到CPU Cache，提升性能；而如果用队列就没有这种好处\n2、还是连续内存带来的好处；给你一个偏移量要把之后的数据读出来，如果是队列你需要做寻址，而且大概率不止一次寻址，而连续内存可以一次性给你全部读出来\n3、维护指针还需要额外空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651129800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316836,"user_name":"Geek_23ffd0","can_delete":false,"product_type":"c1","uid":1640220,"ip_address":"","ucode":"BC70715E7F1A01","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/RNJfsfhsEic2mHHGiattprpLkdeHBOeXrdkwm8JM01L7yl8DEvsVMesSzGthpLpibmMq1TThYFm7ibK2uEicrh96RsA/132","comment_is_top":false,"comment_ctime":1634562881,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1634562881","product_id":100056701,"comment_content":"请问一下，怎么知道repl_backlog_buffer的内容被覆盖了？","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568118,"discussion_content":"master维护了当前offset，以及环形缓冲区的大小。如果slave的offset小于当前offset - 缓冲区大小，是不是一定被覆盖了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651067691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316762,"user_name":"Geek_51f7f1","can_delete":false,"product_type":"c1","uid":1750221,"ip_address":"","ucode":"C055C2BEF78BCB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/E3vGFse0gcpic1tkmYkrzJSW0p8VqBiaZUREwkCicysrk5n4T0omg3DoTZe2rHiaDNibtJOd0L6hakY4zDOvs4fyWJA/132","comment_is_top":false,"comment_ctime":1634543350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634543350","product_id":100056701,"comment_content":"主从模式下，为啥说耗时在RDB快照文件下呢。我是理解不管多少个从库，都是只生成一个RDB快照文件，所以主从和主从从模式感觉性能消耗差不多。","like_count":0},{"had_liked":false,"id":313991,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1632792480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632792480","product_id":100056701,"comment_content":"Redis实现高可靠性有两个目标：<br>  1、尽可能减少数据丢失<br>  2、不间断地提供服务<br><br>第一个目标通过AOF和RDB实现，第二个目标需要通过容灾备份实现，也就是主从同步。主从同步需要通过读写分离机制来保证数据一致性。如果数据只在主从间进行同步，势必会造成redis主线程频繁进行同步，造成主线程阻塞，所以Redis采用“主-从-从”的模式进行数据同步。<br><br>数据同步需要通过RDB文件进行同步，第一次同步是全量复制，之后会维持一个长链接，避免频繁建立连接的开销，在同步期间，主库会把断连期间收到的写操作命令，写入 replication buffer，之后通过replication buffer 进行增量同步。<br>具体过程是：<br>  1、从库向主库发起同步请求，主库同意后，开始进行同步；<br>  2、主库向从库发送RDB文件，并把同步期间的写操作命令记录在replication buffer中。从库收到RDB文件，在本地完成数据加载；<br>  3、主库发送同步期间执行的操作命令给从库，从库根据replication buffer中的命令进行增量同步。<br><br>另外，如果从库宕机，主库除了会把断连期间收到的写操作命令，写入 replication buffer，同时也会把这些操作命令也写入 repl_backlog_buffer 这个缓冲区。repl_backlog_buffer是一个环形缓冲区，从库恢复时，通过偏移量可以知晓需要同步哪些数据。可以调整 repl_backlog_size 这个参数，来调整环形缓冲区的大小。主库可以根据slave_repl_offset判断是全量同步，还是增量同步。","like_count":0},{"had_liked":false,"id":312920,"user_name":"Eleven","can_delete":false,"product_type":"c1","uid":1168452,"ip_address":"","ucode":"FB4A0C8CA732BE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/44/0ec958f4.jpg","comment_is_top":false,"comment_ctime":1632123759,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1632123759","product_id":100056701,"comment_content":"没有开启RDB怎么实现主从同步呢？","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568115,"discussion_content":"不需要开启，主从同步时必然会生成RDB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651067490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":312509,"user_name":"听雨","can_delete":false,"product_type":"c1","uid":1254493,"ip_address":"","ucode":"252754F9FCFF0C","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/5d/65e61dcb.jpg","comment_is_top":false,"comment_ctime":1631846587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631846587","product_id":100056701,"comment_content":"请问当从库恢复连接增量复制时，是把repl_backlog_buffer中master_repl_offset 和 slave_repl_offset 之间的命令操作直接同步给从库，还是先将这些命令复制到replication_buffer，然后再由replication_buffer发送给从库","like_count":0},{"had_liked":false,"id":311360,"user_name":"flying myself","can_delete":false,"product_type":"c1","uid":1992480,"ip_address":"","ucode":"69F26BE9B94B58","user_header":"https://static001.geekbang.org/account/avatar/00/1e/67/20/93b2e38e.jpg","comment_is_top":false,"comment_ctime":1631187641,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1631187641","product_id":100056701,"comment_content":"如果从库数量很多，而且都要和主库进行全量复制的话，就会导致主库忙于 fork 子进程生成 RDB 文件，进行数据全量同步<br><br>问题：什么时候全量复制 增量复制 从库同时进行复制？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393846,"discussion_content":"主库生成rdb期间所有的从库的全量同步请求都是用的同一份","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631617653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311357,"user_name":"Geek_3e0bd8","can_delete":false,"product_type":"c1","uid":2760744,"ip_address":"","ucode":"E172EC11B33574","user_header":"","comment_is_top":false,"comment_ctime":1631185076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631185076","product_id":100056701,"comment_content":"主从复制，读写分裂不能保证一致性的，这个关键点都不讲","like_count":0},{"had_liked":false,"id":310324,"user_name":"小德","can_delete":false,"product_type":"c1","uid":1239693,"ip_address":"","ucode":"F541817F301EE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/8d/2e1b6705.jpg","comment_is_top":false,"comment_ctime":1630594538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630594538","product_id":100056701,"comment_content":"AOF：逻辑日志<br>RDB：物理日志<br>最重要的区别，物理日志幂等f(x) = f(f(x))","like_count":0},{"had_liked":false,"id":309693,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1630306640,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1630306640","product_id":100056701,"comment_content":"老师，您好。<br>全量复制的第一阶段，主库回复 FULLRESYNC runID offset，从库保存主库信息成功。<br>此时主从库网络断开，过了一会重新连上，此时从库进行增量同步，发送 psync runID offset 给主库。<br>那从库的数据不就是不完整了么？<br>谢谢老师","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393849,"discussion_content":"这个要看断连多长时间了，如果超过从库设定的超时时间还会再一次全量同步，另外一种情况如果master的offset-slave的offset大小大于backlog的大小，也就是数据被覆盖了也会全量同步，其余都是增量，数据最终是完整的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631617923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307207,"user_name":"科科","can_delete":false,"product_type":"c1","uid":1647304,"ip_address":"","ucode":"7DAE6FE781172E","user_header":"https://static001.geekbang.org/account/avatar/00/19/22/c8/f2892022.jpg","comment_is_top":false,"comment_ctime":1628935954,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1628935954","product_id":100056701,"comment_content":"老师有个问题，级联的从库的上一级从库如果和主库之间发生网络的中断，恢复连接后是由级联的从库和主库之间同步之后再同步到该库么？","like_count":0},{"had_liked":false,"id":306567,"user_name":"你是猪嘛","can_delete":false,"product_type":"c1","uid":1782175,"ip_address":"","ucode":"CB78CA5137CE9E","user_header":"https://static001.geekbang.org/account/avatar/00/1b/31/9f/55052f1e.jpg","comment_is_top":false,"comment_ctime":1628608608,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1628608608","product_id":100056701,"comment_content":"对于置顶的回答还有一个问题，极端情况下，环形已经绕了两圈导致master的offset回到原来的位置，类似aba问题，具体是如何解决？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388564,"discussion_content":"master的offset只管覆盖的，是不管覆盖几圈，收到slave的同步请求，判断之间的offset的差如果大于环形的长，就全量同步一遍给这个slave","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628836584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306563,"user_name":"你是猪嘛","can_delete":false,"product_type":"c1","uid":1782175,"ip_address":"","ucode":"CB78CA5137CE9E","user_header":"https://static001.geekbang.org/account/avatar/00/1b/31/9f/55052f1e.jpg","comment_is_top":false,"comment_ctime":1628608439,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1628608439","product_id":100056701,"comment_content":"请问老师，新业务或者老业务的口子比较多，怎么去预估写入命令的速度和命令大小呢？如果有比较好的实践可以介绍一下","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388566,"discussion_content":"一般对redis都有流量监控的，以及请求统计（用于统计读写占比），粗略估计下主的写流量和从的写流量 做个参考也许","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628836903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306394,"user_name":"The way","can_delete":false,"product_type":"c1","uid":2629052,"ip_address":"","ucode":"12A59C0798A2FF","user_header":"https://static001.geekbang.org/account/avatar/00/28/1d/bc/11b8722f.jpg","comment_is_top":false,"comment_ctime":1628523018,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1628523018","product_id":100056701,"comment_content":"我想到个问题，incrby这个命令是发到主还是从呢？我猜的是主","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388565,"discussion_content":"涉及写操作的都是主","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628836687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304965,"user_name":"bigben","can_delete":false,"product_type":"c1","uid":1169313,"ip_address":"","ucode":"DBD15A6C8E2590","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkeOAC8k7aPMfQZ4ickiavpfR9mTQs1wGhGtIicotzAoszE5qkLfFTabkDU2E39ovSgoibJ1IiaLXtGicg/132","comment_is_top":false,"comment_ctime":1627720460,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1627720460","product_id":100056701,"comment_content":"正常的主从同步是怎么做的？就是文中的增量复制吗？感觉文中的增量服务只是在重连时的数据同步。","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568114,"discussion_content":"其实老师文中有提到了，会维护一个长连接，正常情况下的主从同步，主库会直接把命令发到replication buffer，进而同步到从库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651067350,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388567,"discussion_content":"应该是从库按一定频率（例如1s）runid+offset请求主库同步数据，主库收到请求后判断master_offset-slave_offeset是否超限，不超限则返回master_offset-slave_offeset的增量数据给从库（放到replication-buffer），同时返回新的offset，超限则全量同步。循环往复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628837327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304655,"user_name":"Geek_bdf27e","can_delete":false,"product_type":"c1","uid":1883022,"ip_address":"","ucode":"09837D6BD4DD35","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eosE8ic8Ky1HrTaD5mq0tq4DZH4er7zmAUwLd9yy2cUO9n0bddb3bqiat9ea3XzAicHqdp781ibtbAtlw/132","comment_is_top":false,"comment_ctime":1627539707,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1627539707","product_id":100056701,"comment_content":"想提个问题：<br>有这样1个场景，项目刚开始运营的时候是单机部署，随着时间的推移，数据越来越多，压力越来越大，要使用主从复制，主节点的RDB文件过大，此时如何处理","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388568,"discussion_content":"这个时候就要考虑数据分片了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628837413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304144,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1627271751,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627271751","product_id":100056701,"comment_content":"在说到repl_backlog_size的时候,就联想到了redo_log_buffer,<br>对于AOF为何没有采用,AOF文件就因为保存的完整,所以体积更大,不适合传输,而且读取更加缓慢,不如二进制的RDB文件","like_count":0},{"had_liked":false,"id":303813,"user_name":"LWQ","can_delete":false,"product_type":"c1","uid":2708541,"ip_address":"","ucode":"6500780D16DD04","user_header":"","comment_is_top":false,"comment_ctime":1627010613,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1627010613","product_id":100056701,"comment_content":"老师，当主库完成 RDB 文件发送后，就会把此时 replication buffer 中的修改操作发给从库，那此时发送缓冲时候的数据，这个时间段主库的写操作进来的数据呢？这样不就一直存在主从的数据差？","like_count":0,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568112,"discussion_content":"这个时间段的数据再往缓冲区丢，从库继续读，源源不断，主从数据一致性肯定是难以避免的，看业务接收程度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651067270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303408,"user_name":"god","can_delete":false,"product_type":"c1","uid":1997758,"ip_address":"","ucode":"09CB6D17451CBC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/7b/be/12735117.jpg","comment_is_top":false,"comment_ctime":1626770942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626770942","product_id":100056701,"comment_content":"你好，作者，想问你一下，你主从库连接都断开了，哪里来replication buffer呢？这里讲的正确吗？","like_count":0},{"had_liked":false,"id":300791,"user_name":"Inno","can_delete":false,"product_type":"c1","uid":2142543,"ip_address":"","ucode":"8CB14D9A54CC9B","user_header":"https://static001.geekbang.org/account/avatar/00/20/b1/4f/f0b9b11d.jpg","comment_is_top":false,"comment_ctime":1625388093,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1625388093","product_id":100056701,"comment_content":"老师主要讲了首次同步以及主从断联的数据补偿，那么主从库第一次同步之后，接下来的同步操作，是采用分批操作还是一次性操作呢？如果是分批操作，又该由哪些条件决定呢？分批操作是采用RDB还是AOF呢？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388947,"discussion_content":"全量同步以后用repl_backlog_buffer的日志记录，根据主库和备库的offset偏差值进行数据同步操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629077368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300188,"user_name":"不知道","can_delete":false,"product_type":"c1","uid":2673958,"ip_address":"","ucode":"48F0593A3F407F","user_header":"https://static001.geekbang.org/account/avatar/00/28/cd/26/b451000e.jpg","comment_is_top":false,"comment_ctime":1625039950,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1625039950","product_id":100056701,"comment_content":"有个问题，是读操作，是主从都可以读，但是在主从同步的时候，从还没有完全同步过来，这个时候如果有请求从此从库读数据是咋样的","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388953,"discussion_content":"主备数据不一致性肯定存在的，看业务是否能容忍。如果不能就全读主库。话说回来主库数据和数据库也可能存在不一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629078017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298914,"user_name":"流沙","can_delete":false,"product_type":"c1","uid":1389314,"ip_address":"","ucode":"6153686D1C34B7","user_header":"https://static001.geekbang.org/account/avatar/00/15/33/02/83f47bf9.jpg","comment_is_top":false,"comment_ctime":1624371945,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1624371945","product_id":100056701,"comment_content":"老师，网络恢复之后，通过增量复制，从库的数据和主库一致后，是否还会变成基于长连接的命令传播这种方式","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388954,"discussion_content":"是的，基于replication_buffer的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629078137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298575,"user_name":"花晨少年","can_delete":false,"product_type":"c1","uid":1098987,"ip_address":"","ucode":"6AA3537A6BA10E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/eb/2285a345.jpg","comment_is_top":false,"comment_ctime":1624202101,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1624202101","product_id":100056701,"comment_content":"具体从库怎么感知到，repl_backlog被覆盖，导致从库存在丢失，重新进行全量复制的呢。","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388957,"discussion_content":"不是从库感知，从库是定期执行增量数据同步，请求参数会发送自己的offset，由主库进行判断是否覆盖，如果主库offfset-从库offset大于backlog_buffer的size则产生覆盖，进行全量同步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629078276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297260,"user_name":"小五","can_delete":false,"product_type":"c1","uid":1411419,"ip_address":"","ucode":"B7B1F121837CD9","user_header":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","comment_is_top":false,"comment_ctime":1623396500,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623396500","product_id":100056701,"comment_content":"小结：<br>1 Redis 保证数据尽量少丢失，采用了持久化策略：RDB 和 AOP<br>2 Redis 保证服务尽量少中断，采用了多副本节点，使用主从模式。但是主从模式必然涉及到一致性问题，Redis 使用读写分离和数据同步策略来保证一致性问题。具体同步策略如下：<br>   2.1 全量复制：用于主从首次连接进行的数据同步；此外，断连恢复后，从库复制偏移量被覆盖，也需要全量复制。<br>   2.2 基于长连接的命令传播：主从库正常运行后的常规同步阶段。<br>   2.3 增量复制：用于断线重连后，进行差异化的复制。<br>3 主从库模式使用读写分离虽然避免了同时写多个实例带来的数据不一致问题，但是还面临主库故障的潜在风险，因此就需要使用哨兵机制和分片集群策略实现自动故障转移。","like_count":0},{"had_liked":false,"id":297001,"user_name":"MOK_G_S","can_delete":false,"product_type":"c1","uid":1590887,"ip_address":"","ucode":"C1CED3D134C70A","user_header":"https://static001.geekbang.org/account/avatar/00/18/46/67/004cb4f8.jpg","comment_is_top":false,"comment_ctime":1623254485,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1623254485","product_id":100056701,"comment_content":"repl_backlog_size写满了会覆盖掉速度跟不上的从库的offset，导致从库需要做一次全量复制。<br>是不是应该优先考虑自动扩充repl_backlog_size的容量更划算？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388558,"discussion_content":"可能是环形结构，扩充代价比较高或者容易丢数据。而且初始大小都给了计算方法了，也加了足够的buffer了，出现覆盖的几率不高了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628835051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295928,"user_name":"春风百里","can_delete":false,"product_type":"c1","uid":1739292,"ip_address":"","ucode":"A42347996D2B85","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8a/1c/f8ea6063.jpg","comment_is_top":false,"comment_ctime":1622647881,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1622647881","product_id":100056701,"comment_content":"有个疑问，望解答，一主多从已经建立长连接正常同步写操作的情况下，每个从节点的执行写操作的速度可能不一样，比如同样的时间内，一个从节点同步了两个写命令，另一个从节点只同步了一个从命令，所以我理解从节点每次同步完写命令后，都会返回自己的offset给主节点，然后主节点根据每个从节点的offset决定推送相应的写操作，对吗？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388560,"discussion_content":"应该是从节点请求同步数据的时候把offset发给主节点，主节点返回同步数据的时候再把新的offset发给从节点，从节点自己保存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628835256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378853,"discussion_content":"同步的时候，从节点给主节点复制偏移量，主节点判断该偏移量对应的指令数据有没有覆盖，没有覆盖就将从节点的复制偏移量和主节点的复制偏移量的差值数据发送给从节点。此外，主节点的复制偏移量只有主库维护，从节点偏移量由每个从库自身维护。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623465714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292179,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1620713782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620713782","product_id":100056701,"comment_content":"说下自己的看法 结合课代表Kaito的答案 我觉得还遗漏了一点：就是linux对于aof文件的随机寻址问题。因为如果用aof文件当做backlog用 必然就牵涉到文件内offset寻址问题（也就是找到我要复制的起始偏移量）而这个逻辑问题在计算机层面就会变成磁盘的随机读问题。另外GB级别的文件不停的追加 另一个线程不停的读 本身会涉及pagecache的锁定问题。并不是简单的copy-on-write就能解决","like_count":0},{"had_liked":false,"id":291794,"user_name":"小罗希冀","can_delete":false,"product_type":"c1","uid":1311995,"ip_address":"","ucode":"88416458FF0041","user_header":"https://static001.geekbang.org/account/avatar/00/14/04/fb/40f298bb.jpg","comment_is_top":false,"comment_ctime":1620487033,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620487033","product_id":100056701,"comment_content":"因为通过AOF文件恢复，相当于逐条逐条命令重新执行，这比较慢，而且AOF文件的体积也比RDB文件要大，不利于在主库和从库之间传输","like_count":0},{"had_liked":false,"id":291456,"user_name":"南荣牧歌","can_delete":false,"product_type":"c1","uid":1765050,"ip_address":"","ucode":"2DFD9B50955C5A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ee/ba/ac07d5a4.jpg","comment_is_top":false,"comment_ctime":1620294333,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620294333","product_id":100056701,"comment_content":"主库只能是一个么， 可不可以多个主库","like_count":0},{"had_liked":false,"id":291379,"user_name":"是呱呱呀","can_delete":false,"product_type":"c1","uid":2552477,"ip_address":"","ucode":"E5EFB6E733004A","user_header":"https://static001.geekbang.org/account/avatar/00/26/f2/9d/a8d2e139.jpg","comment_is_top":false,"comment_ctime":1620261127,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1620261127","product_id":100056701,"comment_content":"主从常规同步期间会阻塞从服务器的读操作么？是否会出现脏读","like_count":0,"discussions":[{"author":{"id":1411419,"avatar":"https://static001.geekbang.org/account/avatar/00/15/89/5b/b014ce14.jpg","nickname":"小五","note":"","ucode":"B7B1F121837CD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378854,"discussion_content":"不会阻塞。没有完成同步就会出现脏读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623465790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289035,"user_name":"吃饭睡觉打酱油","can_delete":false,"product_type":"c1","uid":1071668,"ip_address":"","ucode":"95EC98C2B5045B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5a/34/4cbadca6.jpg","comment_is_top":false,"comment_ctime":1618824179,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1618824179","product_id":100056701,"comment_content":"当主从库断连后，主库会把断连期间收到的写操作命令，写入 replication buffer，同时也会把这些操作命令也写入 repl_backlog_buffer 这个缓冲区。<br>这个有疑问，主从断连后主库才写入 repl _backlog_buffer 这个缓冲区？那么从库怎么知道自己的offset。","like_count":0,"discussions":[{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371575,"discussion_content":"即使不断连，master也会写入repl_backlog_buffer。\n从库复制期间，都会同步维护自己的slave_replica_offset","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619853060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288907,"user_name":"coco","can_delete":false,"product_type":"c1","uid":1052821,"ip_address":"","ucode":"7BC3AB84E8434E","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/95/17a9a042.jpg","comment_is_top":false,"comment_ctime":1618757321,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618757321","product_id":100056701,"comment_content":"同步的是数据，不是主库的操作。ROF是数据，AOF也偏重操作记录。","like_count":0},{"had_liked":false,"id":287975,"user_name":"Be a laity","can_delete":false,"product_type":"c1","uid":1812846,"ip_address":"","ucode":"A91A4307FF2041","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/6e/797621cc.jpg","comment_is_top":false,"comment_ctime":1618237044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618237044","product_id":100056701,"comment_content":"是只有第一次复制的时候才会通过rdb全量复制，后续都是通过replaction_buffer进行同步的吗","like_count":0},{"had_liked":false,"id":287695,"user_name":"VIP2","can_delete":false,"product_type":"c1","uid":1787871,"ip_address":"","ucode":"A28B23B96A5524","user_header":"","comment_is_top":false,"comment_ctime":1618111759,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1618111759","product_id":100056701,"comment_content":"老师你好，看完这张有个疑问点：主-从-从同步结构，在数据同步完成之后，第二层的从节点应该没办法直接平滑切换到主节点是吧，因为同步的runId发生变化，最终还是会导致全量同步。所以我的理解是这个结构适合于在主节点发生宕机之后，切换从节点到主节点时，已让能够保持主从的结构，可以减少全量复制的概率。","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388962,"discussion_content":"个人觉得这种主-从-从结构用的不是很多，主要依据以下两点 第一大部分主从结构都是一主一从或者一主两从，不会有太多从机需要全量同步数据。第二 备机都需要全量同步数据的概率不是很高，基本上重启才会遇到，但是只要全量同步在rdb完成前用的都是一份数据不存在主库的同步压力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629079483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287314,"user_name":"ly","can_delete":false,"product_type":"c1","uid":1221628,"ip_address":"","ucode":"5E2B85252DABF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/fc/379387a4.jpg","comment_is_top":false,"comment_ctime":1617877658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617877658","product_id":100056701,"comment_content":"有个小疑问，这里主从复制采用RDB的方式进行，并不代表主库的备份策略就是RDB吧？主库可能是AOF方式 也可能是RDB方式进行备份的。我想备份策略和复制策略是独立的吧","like_count":0},{"had_liked":false,"id":285345,"user_name":"wwj","can_delete":false,"product_type":"c1","uid":1704677,"ip_address":"","ucode":"7DA2C9A5491C66","user_header":"https://static001.geekbang.org/account/avatar/00/1a/02/e5/2117a869.jpg","comment_is_top":false,"comment_ctime":1616747614,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1616747614","product_id":100056701,"comment_content":"有个问题想问一下，从库复制完成的时候，需要删除旧数据集，加载新数据集，这个时候是否会暂停读服务？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388964,"discussion_content":"个人感觉应该不会，从库是否提供服务完全依赖主库的心跳检测，只要心跳正常还是会被请求到，即使数据不全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629079638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282868,"user_name":"Geek_cdd683","can_delete":false,"product_type":"c1","uid":2510446,"ip_address":"","ucode":"135E0BBED1003E","user_header":"","comment_is_top":false,"comment_ctime":1615447837,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1615447837","product_id":100056701,"comment_content":"slave_repl_offset 大于 master_repl_offset的原因可能是什么呢 老师","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388965,"discussion_content":"还是有几率会出现的因为repl_backlog_buffer是环形结构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629079766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371572,"discussion_content":"这种情况很难出现吧，除非master_repl_offset溢出了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619852401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":280491,"user_name":"听雨忘尘","can_delete":false,"product_type":"c1","uid":1309697,"ip_address":"","ucode":"F3E479BCECE7A8","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/01/79fb1351.jpg","comment_is_top":false,"comment_ctime":1614234108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614234108","product_id":100056701,"comment_content":"老师, 请问主-从-从模式不会有更高的延迟吗?","like_count":0},{"had_liked":false,"id":278593,"user_name":"曾泽浩","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1613118051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613118051","product_id":100056701,"comment_content":"想问老师一个问题，一条写命令，是在主库写成功之后就算成功，还是同步写给从库之后才算成功的，怎么保证客户端读取主库和从库之间的数据一致性呢？","like_count":0},{"had_liked":false,"id":277680,"user_name":"白小龙","can_delete":false,"product_type":"c1","uid":1230191,"ip_address":"","ucode":"34BFCBA8D98AB8","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/6f/8ba27eab.jpg","comment_is_top":false,"comment_ctime":1612515264,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1612515264","product_id":100056701,"comment_content":"kafka的设计有异曲同工之处，一个partition队列维护自己的tail指针，消费者维护offset指针，消费者挂了重连后可以继续从offset处续上","like_count":0,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373536,"discussion_content":"不是的 kafka里面也要维护一个backlog 只不过我们用高低水位线做了包装。如果高低水位线发生错乱 比方说经常被大家拿出来讨论的循环选主等 backlog就失效了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620779309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276829,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1612147638,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1612147638","product_id":100056701,"comment_content":"老师，请问如何知道replation backlog 中的数据被覆盖了！<br>怎么知道的从库来获取的offset找不到了？ 具体数据是怎么样呢的？ <br>","like_count":0,"discussions":[{"author":{"id":1978838,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/31/d6/4bfaa08c.jpg","nickname":"阿川Arc","note":"","ucode":"4D990D6E3152A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361324,"discussion_content":"简单举个例子：backlog buffer大小8，从0-7，假设从库记录读位置到3，也就是slave-offset=3，主库写位置到6 master-offset=6，这时又有大量新数据要写入，并且主从网络断联，此时出现情况：slave-offset还是3，但是master-offset增长到了11，也就是经过了一次环并将3给覆盖了。重新连接后，从库发送slave-offset=3给主库，此时就会发现backlog buffer中找不到offset=3的数据，也就是被覆盖了。其实重点就是要知道offset是一直增加的，只要有写数据就会增。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616642068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1346215,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","nickname":"William","note":"","ucode":"55F5D9DEE485B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1978838,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/31/d6/4bfaa08c.jpg","nickname":"阿川Arc","note":"","ucode":"4D990D6E3152A6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361595,"discussion_content":"是的， 知道一直递增就能想明白这个事情了. 多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616712218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":361324,"ip_address":""},"score":361595,"extra":""}]}]},{"had_liked":false,"id":276031,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1611751607,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1611751607","product_id":100056701,"comment_content":"怀疑”主库会把断连期间收到的写操作命令，写入 replication buffer...“表述有误吧?<br>另外一个问题，有资料提到，master会根据slave反馈的复制进度，发现slave漏掉的指令，对这部分指令补发。我不太理解这如何做到，这种说法对么？master只是把指令一直写入slave的client-out-buffer，而slave又肯定会“落后”，不可能一直及时赶上master的进度，怎么才算漏掉的呢？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388968,"discussion_content":"这里的漏掉应该是指从库还没来得及同步的那部分主库的增量，也就是repl_backlog_buffer的里面主库offet和从库offet的差值间隔那部分数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629080052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272429,"user_name":"单朋荣","can_delete":false,"product_type":"c1","uid":1272662,"ip_address":"","ucode":"8AD121BEDD9675","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/56/37a4cea7.jpg","comment_is_top":false,"comment_ctime":1610088404,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1610088404","product_id":100056701,"comment_content":"repl_backlog_size同步后，通过长连接主从同步的数据，会再次从repl buffer那里读吗？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388969,"discussion_content":"会的，增量数据都从那里出的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629080173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271962,"user_name":"周翔在山麓（Xiang Zhou）","can_delete":false,"product_type":"c1","uid":1609289,"ip_address":"","ucode":"E126273356E5B6","user_header":"https://static001.geekbang.org/account/avatar/00/18/8e/49/10ef002d.jpg","comment_is_top":false,"comment_ctime":1609896860,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1609896860","product_id":100056701,"comment_content":"我想问一下，读写分离模型下redis会存在过期读的问题吗，如何处理呢？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388971,"discussion_content":"应该是不会存在，因为过期时间都是存的绝对时间，取值后会进行判断，超过当前时间会返回空的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629080303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271403,"user_name":"泊","can_delete":false,"product_type":"c1","uid":1557092,"ip_address":"","ucode":"3E9275288F1B0D","user_header":"https://static001.geekbang.org/account/avatar/00/17/c2/64/5cd6efa0.jpg","comment_is_top":false,"comment_ctime":1609597482,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609597482","product_id":100056701,"comment_content":"配置主从库时是一定会产生RDB文件吗？如果配置的持久化策略为AOF的话还会产生RDB文件吗，如果不产生的话是不是无法配置主从库了（第一次主从数据同步时同步数据是使用的RDB文件）","like_count":0},{"had_liked":false,"id":271110,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1609402103,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1609402103","product_id":100056701,"comment_content":"老师，上面说到主从优化方式可以通过金字塔的形式，也就是主后面跟着从1，再后面的从挂在从1或者其子节点后面，这样虽然可以降低主库的压力，但是要是类似从1故障，后面其他从库也就数据无法进行同步，这种情况下，有没有什么处理方法？","like_count":0},{"had_liked":false,"id":269628,"user_name":"出卖灵魂的教练Kerry","can_delete":false,"product_type":"c1","uid":1807943,"ip_address":"","ucode":"8C64517DA556FE","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/47/93838ff7.jpg","comment_is_top":false,"comment_ctime":1608719310,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1608719310","product_id":100056701,"comment_content":"主从切换时，如何保证数据不丢呢？","like_count":0},{"had_liked":false,"id":269074,"user_name":"辉","can_delete":false,"product_type":"c1","uid":1176927,"ip_address":"","ucode":"6089737D104BF7","user_header":"https://static001.geekbang.org/account/avatar/00/11/f5/5f/cfaa25a2.jpg","comment_is_top":false,"comment_ctime":1608515989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608515989","product_id":100056701,"comment_content":"Redis主从级联模式,主 - 从 - 从模式部署Slave2，Slave2部署成功后还是指向Slave1？如果是Slave1的话，如果运行中Slave1宕机，Slave2不就直接废掉无法同步了么？","like_count":0},{"had_liked":false,"id":268951,"user_name":"景风","can_delete":false,"product_type":"c1","uid":2272585,"ip_address":"","ucode":"1AFBD809EDBD30","user_header":"https://static001.geekbang.org/account/avatar/00/22/ad/49/e2c687f1.jpg","comment_is_top":false,"comment_ctime":1608445175,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1608445175","product_id":100056701,"comment_content":"如果主从同步比较慢，从库没有及时更新，这个时候有读数据操作，刚好用了这个从库去查，发现没有查到，那这是不是有问题？","like_count":0,"discussions":[{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371578,"discussion_content":"是出了问题。其实就是CAP理论的 C 没有满足， 你保证了A（从库的可用性），失去了一致性（C）。\n\n具体要看你的业务场景是更看重A还是C，如果是C，那就得设计成强一致性， A有可能一段时间内就不能满足。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619853803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267223,"user_name":"Geek_a2edf0","can_delete":false,"product_type":"c1","uid":2351810,"ip_address":"","ucode":"617F6ADB998E57","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/BdyGbicsMXzLDeOdUcFAthHrWK7PsWZ55kVK3g5YsCsYaAzCch168zGyXxxMibW2icqM4ibQcTXqm7Rhep5lIt594Q/132","comment_is_top":false,"comment_ctime":1607653520,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1607653520","product_id":100056701,"comment_content":"老师我想问下 既然repl_backlog_buffer保存了写操作命令，那么从库不就可以根据offset直接来这拿数据吗？为啥还要再去replication_buffer获取数据呢","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388972,"discussion_content":"repl_backlog_buffer这个相当于一个日志文件，replication_buffer这个才是真正缓存，为了提升主备同步io效率的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629080508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":265916,"user_name":"华仔","can_delete":false,"product_type":"c1","uid":1102612,"ip_address":"","ucode":"E18F564F9F81BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/14/653b2a89.jpg","comment_is_top":false,"comment_ctime":1607067746,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607067746","product_id":100056701,"comment_content":"应该说全量同步用RDB，增量同步其实可以用AOF，replication buffer就是一条一条的命令，只是没有刷盘而已。这样做不好的地方在于主从不能断开太长时间，不然重连后又要全量同步一次","like_count":0},{"had_liked":false,"id":265038,"user_name":"日月星辰","can_delete":false,"product_type":"c1","uid":1796332,"ip_address":"","ucode":"4E9F48153B2D8B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/68/ec/eb0ebbb6.jpg","comment_is_top":false,"comment_ctime":1606742349,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1606742349","product_id":100056701,"comment_content":"老师好，如果在第三阶段，也就是主库把 replication buffer 中的数据往从库传递的时候，又接受到了写操作，这种情况下怎么保证数据一致性呢？","like_count":0,"discussions":[{"author":{"id":2308075,"avatar":"","nickname":"Geek_89e362","note":"","ucode":"E596C2CFE1CFAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346574,"discussion_content":"数据应该不会100%实时一致的，而是采用的最终一致性。如果在复制的同时又接受到了数据，是会保存在repl_backlog_buffer中，等待下一次同步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611996502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264664,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1606566536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606566536","product_id":100056701,"comment_content":"基于长连接的命令传播与增量复制的区别是啥？完全没注意到基于长连接的命令复制。看评论笔记才发现","like_count":0},{"had_liked":false,"id":264309,"user_name":"煮石山农","can_delete":false,"product_type":"c1","uid":1768991,"ip_address":"","ucode":"7B2D210E822A05","user_header":"https://static001.geekbang.org/account/avatar/00/1a/fe/1f/9c61526e.jpg","comment_is_top":false,"comment_ctime":1606435631,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1606435631","product_id":100056701,"comment_content":"有一个疑问：<br><br>读写分离后，如果主从库断连了，应用从读库读出的数据就是脏数据了；如果从库复制存在少量差异，也会出现读库的脏读；<br><br>怎么保证这个的呢？","like_count":0},{"had_liked":false,"id":264126,"user_name":"刘伟","can_delete":false,"product_type":"c1","uid":1425456,"ip_address":"","ucode":"26A77D2F6429F0","user_header":"https://static001.geekbang.org/account/avatar/00/15/c0/30/53965ee0.jpg","comment_is_top":false,"comment_ctime":1606357660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606357660","product_id":100056701,"comment_content":"主库每次写入都会同步从库吗","like_count":0},{"had_liked":false,"id":262356,"user_name":"阿木木","can_delete":false,"product_type":"c1","uid":1142778,"ip_address":"","ucode":"F3E79D3FC7F3A2","user_header":"https://static001.geekbang.org/account/avatar/00/11/6f/fa/9a2d729d.jpg","comment_is_top":false,"comment_ctime":1605698652,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605698652","product_id":100056701,"comment_content":"请教老师，假设有一键值对在主节点进行了写操作，在从节点增量同步前，客户端读取了从节点上的值，redis是怎么保证读取的数据是最新数据的呢？","like_count":0},{"had_liked":false,"id":261356,"user_name":"春风","can_delete":false,"product_type":"c1","uid":1103971,"ip_address":"","ucode":"76947E35A76C67","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/63/e4c28138.jpg","comment_is_top":false,"comment_ctime":1605283145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605283145","product_id":100056701,"comment_content":"老师，主库宕机后，哨兵怎么处理主-从-从的级联关系呢，是只剩主-从还是会保留主-从-从的关系","like_count":0},{"had_liked":false,"id":260175,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1604934543,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604934543","product_id":100056701,"comment_content":"主从复制的流程：1.建立链接；2.rdb全量复制；2.网络长链接复制。<br>主-从-从的级联主从复制模式:减少主库的bgsave压力，减少网络传输的压力<br>断网重连：repl_backlog_size","like_count":0},{"had_liked":false,"id":260173,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1604934490,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604934490","product_id":100056701,"comment_content":"刚开始的时候，主库和从库的写读位置在一起，这算是它们的起始位置。随着主库不断接收新的写操作，它在缓冲区中的写位置会逐步偏离起始位置，我们通常用偏移量来衡量这个偏移距离的大小，对主库来说，对应的偏移量就是 master_repl_offset。主库接收的新写操作越多，这个值就会越大。","like_count":0},{"had_liked":false,"id":259501,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1604736210,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604736210","product_id":100056701,"comment_content":"主从同步的整个过程感觉其实和 AOF&amp;RDB 集成持久化是差不多的，首先bgsave，fork一个线程去执行RDB快照（主从同步过程中会有一步传输文件），然后新的命令放到AOF中（主从同步的过程中新的请求会存到buffer中）。","like_count":0},{"had_liked":false,"id":259348,"user_name":"乐萌TD","can_delete":false,"product_type":"c1","uid":1792420,"ip_address":"","ucode":"AAD1355E371620","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo62pttzxBohm02HCWdNyfa8ZslBt7579t4M2LySyv1PkorIGyx9Q7iaWEHOrS1S93By4kBTjeLkyA/132","comment_is_top":false,"comment_ctime":1604710813,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604710813","product_id":100056701,"comment_content":"老师好，咨询一个问题，如果一主多从的情况，是等到一个从断链就开始往backlog-buffer环形缓冲区写吗，还是说其实一直都在写","like_count":0},{"had_liked":false,"id":258769,"user_name":"明月几时","can_delete":false,"product_type":"c1","uid":1675716,"ip_address":"","ucode":"E46C844EAB2CD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","comment_is_top":false,"comment_ctime":1604551812,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1604551812","product_id":100056701,"comment_content":"aof记录的是命令，如果是首次主从全量复制，而且如果aof文件还没被重写会存在对一个key的反复操作，那么效率会比较低","like_count":0},{"had_liked":false,"id":257920,"user_name":"鲁·本","can_delete":false,"product_type":"c1","uid":1209939,"ip_address":"","ucode":"F1DEB30C21B48E","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/53/21d62a23.jpg","comment_is_top":false,"comment_ctime":1604212972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604212972","product_id":100056701,"comment_content":"offset会消耗光么？","like_count":0},{"had_liked":false,"id":257022,"user_name":"单小灰","can_delete":false,"product_type":"c1","uid":1067354,"ip_address":"","ucode":"59C4523FF1B5DB","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/5a/67b5f0b1.jpg","comment_is_top":false,"comment_ctime":1603813963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603813963","product_id":100056701,"comment_content":"不太明白，在断连期间为什么要同时写replication buffer和repl_backlog_buffer，讲道理repl_backlog_buffer里面就可以读到从库落后的那些操作命令，直接取出来给从库不就好了么？","like_count":0},{"had_liked":false,"id":255734,"user_name":"面向运气开发","can_delete":false,"product_type":"c1","uid":1129709,"ip_address":"","ucode":"F23361FB85D02C","user_header":"https://static001.geekbang.org/account/avatar/00/11/3c/ed/9b42e3e2.jpg","comment_is_top":false,"comment_ctime":1603419811,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603419811","product_id":100056701,"comment_content":"第一次连接传的 offset 有啥用，2.8之前 命令传输断了 再重连上就全量复制。2.8之后用的是增量复制也跟 offset 没关系阿。","like_count":0},{"had_liked":false,"id":255167,"user_name":"Reborn 2.0","can_delete":false,"product_type":"c1","uid":1977474,"ip_address":"","ucode":"BA506E7455D91C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/2c/82/98e2b82a.jpg","comment_is_top":false,"comment_ctime":1603275554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603275554","product_id":100056701,"comment_content":"我想问一下: redis执行的每个写命令都有一个offset吗? 为什么repli_backlog_buffer里面有offset, slave从replication_buffer上面读数据会知道另一个buffer上面的offset呢?","like_count":0},{"had_liked":false,"id":254570,"user_name":"Li Yao","can_delete":false,"product_type":"c1","uid":1129838,"ip_address":"","ucode":"703E1E5505F70D","user_header":"https://static001.geekbang.org/account/avatar/00/11/3d/6e/60680aa4.jpg","comment_is_top":false,"comment_ctime":1603151093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603151093","product_id":100056701,"comment_content":"老师您好，有两个问题请教下<br>1. repl_backlog_buffer是环形缓冲区，那么如何判断它是否写满了呢？<br>2. repl_backlog_buffer是只有断连时才会写入吗？断连时同时会写replication buffer有什么用途呢？","like_count":0},{"had_liked":false,"id":253786,"user_name":"石小","can_delete":false,"product_type":"c1","uid":1781893,"ip_address":"","ucode":"4258C686F289A6","user_header":"https://static001.geekbang.org/account/avatar/00/1b/30/85/14c2f16c.jpg","comment_is_top":false,"comment_ctime":1602896806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602896806","product_id":100056701,"comment_content":"老师好，结合上节课的持久化策略，我有这样的问题：我们业务一般都只在从库做持久化，那么可不可能出现一种情况，主库数据写入之后发生宕机（此时上层应用程序调用返回的结果是成功的），但还没来得及和从库同步，等到主从自动切换完成，新的主库依然没有最后一次写入的数据，造成了数据的永久失败，而应用程序是无感知的？","like_count":0},{"had_liked":false,"id":253679,"user_name":"M.N.G.","can_delete":false,"product_type":"c1","uid":2105364,"ip_address":"","ucode":"B96B914D7145F1","user_header":"https://static001.geekbang.org/account/avatar/00/20/20/14/89fbdcb7.jpg","comment_is_top":false,"comment_ctime":1602829425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602829425","product_id":100056701,"comment_content":"请问主从全量同步之后的每个写命令是怎么同步的","like_count":0},{"had_liked":false,"id":252735,"user_name":"启程","can_delete":false,"product_type":"c1","uid":1388780,"ip_address":"","ucode":"A0D505AA06B581","user_header":"https://static001.geekbang.org/account/avatar/00/15/30/ec/849b6b91.jpg","comment_is_top":false,"comment_ctime":1602472071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602472071","product_id":100056701,"comment_content":"老师，我们做了三主三从，一个从节点挂了为什么会引起服务不可用？redis不会自动切换读取节点吗？需要在代码端控制吗","like_count":0},{"had_liked":false,"id":251399,"user_name":"李","can_delete":false,"product_type":"c1","uid":1119312,"ip_address":"","ucode":"5C0FAA211F2E26","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","comment_is_top":false,"comment_ctime":1601525332,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1601525332","product_id":100056701,"comment_content":"打卡先记录问题:1.全量复制第三阶段，主库怎么知道从库rdb加载完了   2.增量复制阶段，为什么写backlog后还要写buffer","like_count":0},{"had_liked":false,"id":251152,"user_name":"惘 闻","can_delete":false,"product_type":"c1","uid":1181650,"ip_address":"","ucode":"C5909F034BF072","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/d2/0d7ee298.jpg","comment_is_top":false,"comment_ctime":1601382209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601382209","product_id":100056701,"comment_content":"我觉得这两个缓冲区，有点像RDB和AOF结合使用时的AOP，只不过这个缓冲区是主从各保存一个offset值的区别。","like_count":0},{"had_liked":false,"id":250888,"user_name":"油纸伞","can_delete":false,"product_type":"c1","uid":2212143,"ip_address":"","ucode":"C2655B9F8874E2","user_header":"https://static001.geekbang.org/account/avatar/00/21/c1/2f/5c8167aa.jpg","comment_is_top":false,"comment_ctime":1601273016,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601273016","product_id":100056701,"comment_content":"请问下，redis缓存和mysql的数据一致性如何处理呢？","like_count":0},{"had_liked":false,"id":250631,"user_name":"ayu","can_delete":false,"product_type":"c1","uid":1496036,"ip_address":"","ucode":"B841E06228B9D6","user_header":"https://static001.geekbang.org/account/avatar/00/16/d3/e4/5a75f0a5.jpg","comment_is_top":false,"comment_ctime":1601178086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601178086","product_id":100056701,"comment_content":"主从采用读写分离，从库可以读，写入的话必须主库先写入，再同步给从库。那么有个小问题，在主库写入后、同步给从库前，客户端又来读取了，这时候从从库读，读到的岂不是还是老数据？","like_count":0},{"had_liked":false,"id":249675,"user_name":"萧","can_delete":false,"product_type":"c1","uid":1229143,"ip_address":"","ucode":"0C2239867AFF5F","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/57/27de274f.jpg","comment_is_top":false,"comment_ctime":1600754005,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1600754005","product_id":100056701,"comment_content":"### Redis高可用之主从库数据同步<br>redis高可用保证：<br>- 数据尽量少丢失：AOF和RDB<br>- 服务尽量少中断：增加副本冗余量<br><br>读写分离：为了保证数据的一致性，这样性能较好，去除了锁的开销、主从直接的协商等<br>- 读操作：主库、从库都可以接收<br>- 写操作：首先到主库执行，后同步到从库<br><br>主从同步的三个阶段：<br>- 1.建立连接协商同步<br>- 2.主库数据同步给从库：主库bgsave发送RBD给从库，避免主库有过多的bgsave，使用主从从<br>- 3.主库发送新写命令给从库<br><br>网络断开主从恢复：断连期间数据写入replication buffer,同时也写入repl_backlog_buffer（同步延时较高时可以调大）<br>- 主从库都会记录当前读到数据的位置<br>- 重连后从库发送位置给主库<br>- 主库返回位置差之间的数据给从库<br><br>疑问：主从库之间同步存在延时，新写操作会阻塞当前节点的读，但当数据还没有同步到从库，读数据时，从库数据不是最新的是如何解决的？","like_count":0},{"had_liked":false,"id":248800,"user_name":"Sunny","can_delete":false,"product_type":"c1","uid":1067570,"ip_address":"","ucode":"FE57B69A9CF91D","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/32/23db38ab.jpg","comment_is_top":false,"comment_ctime":1600314143,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600314143","product_id":100056701,"comment_content":"主从库间的复制不使用 AOF, 因为AOF文件文件比较大，恢复数据比较耗时，导致恢复期间主库更新记录积压。","like_count":0},{"had_liked":false,"id":248147,"user_name":"Java垒墙工程师","can_delete":false,"product_type":"c1","uid":1937062,"ip_address":"","ucode":"E76AE44A9C76AE","user_header":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","comment_is_top":false,"comment_ctime":1600044376,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600044376","product_id":100056701,"comment_content":"<br>1、为什么没有使用aof？这个buffer和aof功能重复吧？<br>2、repl_backlog_size配置过小会导致全量复制，会重新生成RDB？清空repl_backlog_size buffer里面的内容，那压力不是更加的大吗？更加处理不过来吗？<br>","like_count":0},{"had_liked":false,"id":248090,"user_name":"feihui","can_delete":false,"product_type":"c1","uid":1007294,"ip_address":"","ucode":"13F1D4A82BC650","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/be/9ea55f46.jpg","comment_is_top":false,"comment_ctime":1600005620,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600005620","product_id":100056701,"comment_content":"老师，想请教下，那个 offset 应该不是环形求组的吧，应该是另外一个计数吧，另外，老师文中","like_count":0},{"had_liked":false,"id":244938,"user_name":"马青艳","can_delete":false,"product_type":"c1","uid":1722479,"ip_address":"","ucode":"388E4689BED388","user_header":"","comment_is_top":false,"comment_ctime":1598757059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598757059","product_id":100056701,"comment_content":"请问<br>1.基于长连接的命令传播和增量同步过程中，会存在主库的数据还未同步给从库，从库就接收到读请求的问题吗？是不是读到了旧数据。<br>2.还有一个问题，redis 6.0 的多线程机制大约在第几节课会讲到。<br>期待回复","like_count":0},{"had_liked":false,"id":244815,"user_name":"dfuru","can_delete":false,"product_type":"c1","uid":2110772,"ip_address":"","ucode":"0222FADA093D95","user_header":"","comment_is_top":false,"comment_ctime":1598689478,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598689478","product_id":100056701,"comment_content":"1.同步RDB，从库收到后可直接加载成与主库差异较小状态，业务读取到旧数据机率小；<br>2.同步AOF，从库收到后需要重放完每一条命令后，才能达到与主机差异较小状态，业务读取到旧数据机率大；   同步AOF，还会多同步一些数据中间状态命令，浪费带宽。<br>","like_count":0},{"had_liked":false,"id":244233,"user_name":"南北少卿","can_delete":false,"product_type":"c1","uid":1018958,"ip_address":"","ucode":"DFCC59F2BBD8CE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/4e/b81969fa.jpg","comment_is_top":false,"comment_ctime":1598436211,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598436211","product_id":100056701,"comment_content":"老师,有两个问题<br>1:repl_backlog_buffer是只有在主从断连期间,主库向其写入数据吗?<br>2:从库在复制完写操作命令后，它在缓冲区中的读位置也开始逐步偏移刚才的起始位置，此时，从库已复制的偏移量 slave_repl_offset 也在不断增加.此时主从库之间尚未恢复连接,从库在缓冲区中的读位置如何增加的呢?","like_count":0,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301658,"discussion_content":"1.不是。没断连的时候也会维护的。锻炼的时候就用到了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598600128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244046,"user_name":"Geek_325aee","can_delete":false,"product_type":"c1","uid":2130097,"ip_address":"","ucode":"5C2CCB648B87E5","user_header":"","comment_is_top":false,"comment_ctime":1598366623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598366623","product_id":100056701,"comment_content":"老师我有个问题，我看到源码slave psync过程中，有slave共用rdb的情形，如下：<br>（1）slave1发送psync，需要fullsync，master回复给slave1此时的master_repl_offset记为n<br>（2）之后master开始接收写命令，增加master_repl_offset的值记为n+1，并将写命令写入到slave1的replication_buffer中<br>（3）此时slave2来psync，master回复给slave1此时的master_repl_offset的值，即n+1；之后master发现正在为slave1生成rdb，那么为slave2复用这个rdb，再将slave1的replication_buffer中的内容复制给slave2；<br>（4）当rdb生成完成后，将rdb发送给两个slave，并将缓冲区的命令集合发送出去。但是此时slave2的初始master_repl_offset值比slave1的多了1。此时slave2的这个repl_offset值就是错误的，实际上应该是从n开始累加。<br><br>不知道我这里漏掉了什么步骤，或者理解错误？求老师解答。。<br><br>我看的redis源码版本是3.0","like_count":0},{"had_liked":false,"id":243944,"user_name":"窗外","can_delete":false,"product_type":"c1","uid":1311172,"ip_address":"","ucode":"1E8F2D9439E7F3","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/c4/21c2cde4.jpg","comment_is_top":false,"comment_ctime":1598335068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598335068","product_id":100056701,"comment_content":"老师好，replication buffer 用于主从库的数据交互，那通过 repl_backlog_buffer 增量复制时，repl_backlog_buffer 会发送命令给从库，那是直接发给从库还是先发到 replication buffer，由 replication buffer 给从库","like_count":0},{"had_liked":false,"id":243339,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1598065109,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1598065109","product_id":100056701,"comment_content":"老师好，想问下redis主从复制的时候，是从库拉数据还是主库有数据变更就推送数据给从库？","like_count":0,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301660,"discussion_content":"主 推 就 完 事 了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598600351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1173894,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e9/86/d34800a4.jpg","nickname":"heyman","note":"","ucode":"92EF9EF1B1B1B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300475,"discussion_content":"推送","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598121961,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243321,"user_name":"Geek1560","can_delete":false,"product_type":"c1","uid":2028949,"ip_address":"","ucode":"5F27A28B8002E6","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/95/a362f01b.jpg","comment_is_top":false,"comment_ctime":1598059204,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598059204","product_id":100056701,"comment_content":"第三阶段命令传播，主库如何知道发送的命令被从库成功接收？如果不知道，是否会存在数据丢失的风险？如果知道，又是通过何种机制，是否会增加开销","like_count":0,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301662,"discussion_content":"slave和master之间有心跳机制。默认每秒slave发送repliconf ack <replication_offset>给master，告知master自己的复制偏移量，如果和master的复制偏移量不一致，则master会借助repl_backlog_buffer增量同步slave缺少的写命令给slave。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598600494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242765,"user_name":"路飞桑","can_delete":false,"product_type":"c1","uid":1144333,"ip_address":"","ucode":"2EA3B61395FBA7","user_header":"https://static001.geekbang.org/account/avatar/00/11/76/0d/781aa509.jpg","comment_is_top":false,"comment_ctime":1597835363,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597835363","product_id":100056701,"comment_content":"老师，对于redis这样主-从模式下的主从同步延迟有什么解决方式吗","like_count":0,"discussions":[{"author":{"id":1388092,"avatar":"https://static001.geekbang.org/account/avatar/00/15/2e/3c/eae43616.jpg","nickname":"sid","note":"","ucode":"3D1F9169A19D29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301663,"discussion_content":"https://blog.csdn.net/john1337/article/details/98850192","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598600633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242596,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1597794237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597794237","product_id":100056701,"comment_content":"采用主-从-从这种模式，那么我的客户端怎么连接这种模式呢，还是说从库的从库只是做数据备份使用，参与实际业务的使用？想不明白，因为平时开发中都是基于哨兵来监控主从","like_count":0},{"had_liked":false,"id":242571,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1597764083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597764083","product_id":100056701,"comment_content":"提问：“从库接收到 RDB 文件后，会先清空当前数据库，然后加载 RDB 文件。”<br>这个清空动作是同步的，还是异步（另起线程处理）的？<br><br>同步的话，会影响到从节点的恢复效率。<br>异步的话，从节点恢复数据就显得有些复杂了","like_count":0},{"had_liked":false,"id":242543,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1597755008,"is_pvip":false,"replies":[{"id":"89491","content":"我目前手边的环境是5.0.8 :)","user_name":"作者回复","user_name_real":"蒋德钧","uid":"1609687","ctime":1597763356,"ip_address":"","comment_id":242543,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597755008","product_id":100056701,"comment_content":"老师，您的实验环境使用的哪个Redis版本？","like_count":0,"discussions":[{"author":{"id":1609687,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8f/d7/fb60129d.jpg","nickname":"蒋德钧","note":"","ucode":"833985C2C37C0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504034,"discussion_content":"我目前手边的环境是5.0.8 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597763356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242522,"user_name":"🐾","can_delete":false,"product_type":"c1","uid":1087256,"ip_address":"","ucode":"D0AD0260351C31","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","comment_is_top":false,"comment_ctime":1597749605,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597749605","product_id":100056701,"comment_content":"主从同步时，会有可能把网络带宽打满吗？","like_count":0,"discussions":[{"author":{"id":1123146,"avatar":"https://static001.geekbang.org/account/avatar/00/11/23/4a/c608bdf6.jpg","nickname":"三石","note":"","ucode":"734DCECABC3BEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393946,"discussion_content":"正常情况下应该不会，主从同步传输数据过大链接会被主动断开。可以看下client output buffer limit的slave配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631669254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242414,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1597717023,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597717023","product_id":100056701,"comment_content":"AOF记录的是一条条命令，RDB是全量数据文件。aof同步数据更慢，且还要兼容从库原有数据。rdb文件，从库只要清空数据库，直接全量同步过去。对于在同步期间的非读操作，也会通过主库记录再同步给从库，实现数据一致性和减少同步的耗时","like_count":0},{"had_liked":false,"id":242314,"user_name":"Kvicii.Y","can_delete":false,"product_type":"c1","uid":1442588,"ip_address":"","ucode":"446BFA633569EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/1c/c9fe6738.jpg","comment_is_top":false,"comment_ctime":1597667953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597667953","product_id":100056701,"comment_content":"除了从库命令读取比较慢以外，如果网络断连再恢复造成了repl_backlog_buffer的覆盖也就永远的不一致了吧，这样也只能通过调大他的值决定吗","like_count":0},{"had_liked":false,"id":242301,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1597665388,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597665388","product_id":100056701,"comment_content":"1. 相同数据下，AOF 文件比 RDB 更大，因此需要的网络带宽更多；<br>2. 在恢复数据时，使用RDB更快。<br>3. 如果使用AOF文件来同步相对来说丢的数据更少，但是不表示不丢数据。即也需要第三个阶段来保证数据的一致性。因此相对来说使用RDB开销更小些。","like_count":0},{"had_liked":false,"id":242277,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1597656346,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597656346","product_id":100056701,"comment_content":"从库在执行 replication buffer里面的命令的时候，这时候主库不又会产生新的数据了吗？这样下去不就没完没了了吗","like_count":0,"discussions":[{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299766,"discussion_content":"是这样子的，不过引入缓存的目标主要是解决读多写少的系统场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597810970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242227,"user_name":"那时刻","can_delete":false,"product_type":"c1","uid":1150927,"ip_address":"","ucode":"B0D150856C3A4A","user_header":"https://static001.geekbang.org/account/avatar/00/11/8f/cf/890f82d6.jpg","comment_is_top":false,"comment_ctime":1597637751,"is_pvip":false,"discussion_count":2,"race_medal":1,"score":"1597637751","product_id":100056701,"comment_content":"请问老师，FULLRESYNC命令里的复制进度offset指的是repl_backlog_buffer里master_repl_offset吗？","like_count":0,"discussions":[{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299767,"discussion_content":"offset是repl_backlog_buffer缓冲区中的偏移量。master_repl_offset是主库写该缓冲区的偏移量，正常情况下，与从库的slave_repl_offset是一致的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597811195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1150927,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8f/cf/890f82d6.jpg","nickname":"那时刻","note":"","ucode":"B0D150856C3A4A","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299778,"discussion_content":"嗯嗯，明白了。刚开始第一次读文章的时候，没理解。后来回炉一遍，清楚了。多谢多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597813493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299767,"ip_address":""},"score":299778,"extra":""}]}]},{"had_liked":false,"id":242209,"user_name":"yayiyaya","can_delete":false,"product_type":"c1","uid":1615156,"ip_address":"","ucode":"38532C740FA186","user_header":"https://static001.geekbang.org/account/avatar/00/18/a5/34/6e3e962f.jpg","comment_is_top":false,"comment_ctime":1597634623,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1597634623","product_id":100056701,"comment_content":"使用 主 -从 -从 模式， 客户端的请示是怎么到达第二个从库的？ 不太理解","like_count":0},{"had_liked":false,"id":242201,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1597633569,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597633569","product_id":100056701,"comment_content":"主库和从库可以布署在不同的地理位置吗","like_count":0,"discussions":[{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299332,"discussion_content":"只要网络是通的，就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597660132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242187,"user_name":"tt","can_delete":false,"product_type":"c1","uid":1489957,"ip_address":"","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1597631704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597631704","product_id":100056701,"comment_content":"老师，还有一个问题，主从同步时，生成RDB快照是由bgsave进程完成的，那主库发送RDB文件内容和从库接收数据各是有哪些线程完成的呢？也是主线程么？","like_count":0},{"had_liked":false,"id":242146,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1597623787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597623787","product_id":100056701,"comment_content":"我觉得，和redis提供的特性相关。redis主打就是快，而不是一致性。通过rdb能够快速提供服务的可用能力","like_count":0}]}