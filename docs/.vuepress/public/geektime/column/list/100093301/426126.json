{"id":426126,"title":"02 | NumPy（上）：核心数据结构详解","content":"<p>你好，我是方远。</p><p>通过前面两节课，我们已经对PyTorch有了初步的了解，你是不是迫不及待想要动手玩转PyTorch了？先别着急，我们有必要先品尝一道“前菜”，它就是NumPy。</p><p>为什么我们要先拿下NumPy呢？我相信，无论你正在从事或打算入门机器学习，不接触NumPy几乎不可能。现在的主流深度学习框架PyTorch与TensorFlow中最基本的计算单元Tensor，都与NumPy数组有着类似的计算逻辑，可以说掌握了NumPy对学习这两种框架都有很大帮助。</p><p>另外，NumPy还被广泛用在Pandas，SciPy等其他数据科学与科学计算的Python模块中。而我们日常用得越来越多的人脸识别技术（属于计算机视觉领域），其原理本质上就是先把图片转换成NumPy的数组，然后再进行一系列处理。</p><p>为了让你真正吃透NumPy，我会用两节课的内容讲解NumPy。这节课，我们先介绍NumPy的数组、数组的关键属性以及非常重要的轴的概念。</p><h2>什么是NumPy</h2><p>NumPy是用于Python中科学计算的一个基础包。它提供了一个多维度的数组对象（稍后展开），以及针对数组对象的各种快速操作，例如排序、变换，选择等。NumPy的安装方式非常简单，可以使用Conda安装，命令如下：</p><!-- [[[read_end]]] --><pre><code class=\"language-plain\">conda install numpy\n</code></pre><p>或使用pip进行安装，命令如下：</p><pre><code class=\"language-plain\">pip install numpy\n</code></pre><h2>NumPy数组</h2><p>刚才所说的数组对象是NumPy中最核心的组成部分，这个数组叫做ndarray，是“N-dimensional array”的缩写。其中的N是一个数字，指代维度，例如你常常能听到的1-D数组、2-D数组或者更高维度的数组。</p><p>在NumPy中，数组是由numpy.ndarray 类来实现的，它是NumPy的核心数据结构。我们今天的内容就是围绕它进行展开的。</p><p>学习一个新知识，我们常用的方法就是跟熟悉的东西做对比。NumPy数组从逻辑上来看，与其他编程语言中的数组是一样的，索引也是从0开始。而Python中的列表，其实也可以达到与NumPy数组相同的功能，但它们又有差异，做个对比你就能体会到NumPy数组的特点了。</p><p>1.Python中的列表可以动态地改变，而NumPy数组是不可以的，它在创建时就有固定大小了。改变Numpy数组长度的话，会新创建一个新的数组并且删除原数组。<br>\n2.NumPy数组中的数据类型必须是一样的，而列表中的元素可以是多样的。<br>\n3.NumPy针对NumPy数组一系列的运算进行了优化，使得其速度特别快，并且相对于Python中的列表，同等操作只需使用更少的内存。</p><h2>创建数组</h2><p>好，那就让我们来看看NumPy数组是怎么创建的吧？</p><p>最简单的方法就是把一个列表传入到np.array()或np.asarray()中，这个列表可以是任意维度的。np.array()属于深拷贝，np.asarray()则是浅拷贝，它们的区别我们下节课再细讲，这里你有个印象就行。</p><p>我们可以先试着创建一个一维的数组，代码如下。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;import numpy as np\n&gt;&gt;&gt;#引入一次即可\n\n&gt;&gt;&gt;arr_1_d = np.asarray([1])\n&gt;&gt;&gt;print(arr_1_d)\n[1]\n</code></pre><p>再创建一个二维数组：</p><pre><code class=\"language-plain\">&gt;&gt;&gt;arr_2_d = np.asarray([[1, 2], [3, 4]])\n&gt;&gt;&gt;print(arr_2_d)\n[[1 2]\n [3 4]]\n</code></pre><p>你也可以试试自己创建更高维度的数组。</p><h3>数组的属性</h3><p>作为一个数组，NumPy有一些固有的属性，我们今天来介绍非常常用且关键的数组维度、形状、size与数据类型。</p><h4>ndim</h4><p>ndim表示数组维度（或轴）的个数。刚才创建的数组arr_1_d的轴的个数就是1，arr_2_d的轴的个数就是2。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;arr_1_d.ndim\n1\n&gt;&gt;&gt;arr_2_d.ndim\n2\n</code></pre><h4>shape</h4><p>shape表示数组的维度或形状， 是一个整数的元组，元组的长度等于ndim。</p><p>arr_1_d的形状就是（1，）（一个向量）， arr_2_d的形状就是(2, 2)（一个矩阵）。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;arr_1_d.shape\n(1,)\n&gt;&gt;&gt;arr_2_d.shape\n(2, 2)\n</code></pre><p>shape这个属性在实际中用途还是非常广的。比如说，我们现在有这样的数据(B, W, H, C)，熟悉深度学习的同学肯定会知道，这代表一个batch size 为B的（W，H，C）数据。</p><p>现在我们需要根据（W，H，C）对数据进行变形或者其他处理，这时我们可以直接使用input_data.shape[1:3]获取到数据的形状，而不需要直接在程序中硬编程、直接写好输入数据的宽高以及通道数。</p><p>在实际的工作当中，我们经常需要对数组的形状进行变换，就可以使用arr.reshape()函数，在不改变数组元素内容的情况下变换数组的形状。但是你需要注意的是，<strong>变换前与变换后数组的元素个数需要是一样的</strong>，请看下面的代码。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;arr_2_d.shape\n(2, 2)\n&gt;&gt;&gt;arr_2_d\n[[1 2]\n [3 4]]\n# 将arr_2_d reshape为(4，1)的数组\n&gt;&gt;&gt;arr_2_d.reshape((4，1))\narray([[1],\n       [2],\n       [3],\n       [4]])\n</code></pre><p>我们还可以使用np.reshape(a, newshape, order)对数组a进行reshape，新的形状在newshape中指定。</p><p>这里需要注意的是，reshape函数有个<strong>order参数</strong>，它是指以什么样的顺序读写元素，其中有这样几个参数。</p><ul>\n<li>‘C’：默认参数，使用类似C-like语言（行优先）中的索引方式进行读写。</li>\n<li>‘F’：使用类似Fortran-like语言（列优先）中的索引方式进行读写。</li>\n<li>‘A’：原数组如果是按照‘C’的方式存储数组，则用‘C’的索引对数组进行reshape，否则使用’F’的索引方式。</li>\n</ul><p>reshape的过程你可以这样理解，首先需要根据指定的方式(‘C’或’F’)将原数组展开，然后再根据指定的方式写入到新的数组中。</p><p>这是什么意思呢？先看一个简单的2维数组的例子。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;a = np.arange(6).reshape(2,3)\narray([[0, 1, 2],\n&nbsp; &nbsp; &nbsp; &nbsp;[3, 4, 5]])\n</code></pre><p>我们要将数组a，按照’C’的方式reshape成(3,2)，可以这样操作。首先将原数组展开，对于‘C’的方式来说是行优先，最后一个维度最优先改变，所以展开结果如下，序号那一列代表展开顺序。<br>\n<img src=\"https://static001.geekbang.org/resource/image/46/e1/46dc5efc0fc1ff8yya419d459349cde1.jpg?wh=1185x621\" alt=\"图片\"></p><p>所以，reshape后的数组，是按照0，1，2，3，4，5这个序列进行写入数据的。reshape后的数组如下表所示，序号代表写入顺序。</p><p><img src=\"https://static001.geekbang.org/resource/image/a2/1e/a2e4259d27eae29196616dece4b46d1e.jpg?wh=1240x615\" alt=\"图片\"></p><p>接下来，再看看将数组a，按照’F’的方式reshape成(3,2)要如何处理。</p><p>对于行优先的方式，我们应该是比较熟悉的，而‘F’方式是列优先的方式，这一点对于没有使用过列优先的同学来说，可能比较难理解一点。</p><p>首先是按列优先展开原数组，列优先意味着最先变化的是数组的第一个维度。下表是展开后的结果，序号是展开顺序，这里请注意下<strong>坐标的变换方式</strong>（第一个维度最先变化）。</p><p><img src=\"https://static001.geekbang.org/resource/image/fe/72/fe21a81ab58523edc0d1a84f15yyf372.jpg?wh=1185x621\" alt=\"\"></p><p>所以，reshape后的数组，是按照0，3，1，4，2，5这个序列进行写入数据的。reshape后的数组如下表所示，序号代表写入顺序，为了显示直观，我将相同行以同样颜色显示了。</p><p><img src=\"https://static001.geekbang.org/resource/image/26/6b/26dbe3e14fded552bd8a0515858a476b.jpg?wh=1227x606\" alt=\"图片\"></p><p>这里我给你留一个小练习，你可以试试对多维数组的reshape吗？</p><p>不过，大部分时候还是使用’C’的方式比较多，也就是行优先的形式。至少目前为止我还没有使用过’F’与’A’的方式。</p><h4>size</h4><p>size，也就是数组元素的总数，它就等于shape属性中元素的乘积。</p><p>请看下面的代码，arr_2_d的size是4。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;arr_2_d.size\n4\n</code></pre><h4>dtype</h4><p>最后要说的是dtype，它是一个描述数组中元素类型的对象。使用dtype属性可以查看数组所属的数据类型。</p><p>NumPy中大部分常见的数据类型都是支持的，例如int8、int16、int32、float32、float64等。dtype是一个常见的属性，在创建数组，数据类型转换时都可以看到它。</p><p>首先我们看看arr_2_d的数据类型：</p><pre><code class=\"language-plain\">&gt;&gt;&gt;arr_2_d.dtype\ndtype('int64')\n</code></pre><p>你可以回头看一下刚才创建arr_2_d的时候，我们并没有指定数据类型，如果没有指定数据类型，NumPy会自动进行判断，然后给一个默认的数据类型。</p><p>我们再看下面的代码，我们在创建arr_2_d时，对数据类型进行了指定。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;arr_2_d = np.asarray([[1, 2], [3, 4]], dtype='float')\n&gt;&gt;&gt;arr_2_d.dtype\ndtype('float64')\n</code></pre><p>数组的数据类型当然也可以改变，我们可以使用astype()改变数组的数据类型，不过改变数据类型会创建一个新的数组，而不是改变原数组的数据类型。</p><p>请看后面的代码。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;arr_2_d.dtype\ndtype('float64')\n&gt;&gt;&gt;arr_2_d.astype('int32')\narray([[1, 2],\n&nbsp; &nbsp; &nbsp; &nbsp;[3, 4]], dtype=int32)\n&gt;&gt;&gt;arr_2_d.dtype\ndtype('float64')\n# 原数组的数据类型并没有改变\n&gt;&gt;&gt;arr_2_d_int = arr_2_d.astype('int32')\n&gt;&gt;&gt;arr_2_d_int.dtype\ndtype('int32')\n</code></pre><p>但是，我想提醒你，<strong>不能通过直接修改数据类型来修改数组的数据类型</strong>，这样代码虽然不会报错，但是数据会发生改变，请看下面的代码：</p><pre><code class=\"language-plain\">&gt;&gt;&gt;arr_2_d.dtype\ndtype('float64')\n&gt;&gt;&gt;arr_2_d.size\n4\n&gt;&gt;&gt;arr_2_d.dtype='int32'\n&gt;&gt;&gt;arr_2_d\narray([[         0, 1072693248,          0, 1073741824],\n       [         0, 1074266112,          0, 1074790400]], dtype=int32)\n</code></pre><p>1个float64相当于2个int32，所以原有的4个float32，会变为8个int32，然后直接输出这个8个int32。</p><h3>其他创建数组的方式</h3><p>除了使用np.asarray或np.array来创建一个数组之外，NumPy还提供了一些按照既定方式来创建数组的方法，我们只需按照要求，提供一些必要的参数即可。</p><h4>np.ones() 与np.zeros()</h4><p>np.ones()用来创建一个全1的数组，必须参数是指定数组的形状，可选参数是数组的数据类型，你可以结合下面的代码进行理解。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;np.ones()\nTraceback (most recent call last):\n&nbsp; File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: ones() takes at least 1 argument (0 given)\n# 报错原因是没有给定形状的参数\n&gt;&gt;&gt;np.ones(shape=(2,3))\narray([[1., 1., 1.],\n&nbsp; &nbsp; &nbsp; &nbsp;[1., 1., 1.]])\n&gt;&gt;&gt;np.ones(shape=(2,3), dtype='int32')\narray([[1, 1, 1],\n&nbsp; &nbsp; &nbsp; &nbsp;[1, 1, 1]], dtype=int32)\n</code></pre><p>创建全0的数组是np.zeros()，用法与np.ones()类似，我们就不举例了。</p><p>那这两个函数一般什么时候用呢？例如，如果需要初始化一些权重的时候就可以用上，比如说生成一个2x3维的数组，每个数值都是0.5，可以这样做。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;np.ones((2, 3)) * 0.5\narray([[0.5, 0.5, 0.5],\n&nbsp; &nbsp; &nbsp; &nbsp;[0.5, 0.5, 0.5]]\n</code></pre><h4>np.arange()</h4><p>我们还可以使用np.arange([start, ]stop, [step, ]dtype=None)创建一个在[start, stop)区间的数组，元素之间的跨度是step。</p><p>start是可选参数，默认为0。stop是必须参数，区间的终点，请注意，刚才说的区间是一个<strong>左闭右开区间</strong>，所以数组并不包含stop。step是可选参数，默认是1。</p><pre><code class=\"language-plain\"># 创建从0到4的数组\n&gt;&gt;&gt;np.arange(5)\narray([0, 1, 2, 3, 4])\n# 从2开始到4的数组\n&gt;&gt;&gt;np.arange(2, 5)\narray([2, 3, 4])\n# 从2开始，到8的数组，跨度是3\n&gt;&gt;&gt;np.arange(2, 9, 3)\narray([2, 5, 8])\n</code></pre><h4>np.linspace()</h4><p>最后，我们也可以用np.linspace（start, stop, num=50, endpoint=True, retstep=False, dtype=None）创建一个数组，具体就是创建一个从开始数值到结束数值的等差数列。</p><ul>\n<li>start：必须参数，序列的起始值。</li>\n<li>stop：必须参数，序列的终点。</li>\n<li>num：序列中元素的个数，默认是50。</li>\n<li>endpoint：默认为True，如果为True，则数组最后一个元素是stop。</li>\n<li>retstep：默认为False，如果为True，则返回数组与公差。</li>\n</ul><pre><code class=\"language-plain\"># 从2到10，有3个元素的等差数列\n&gt;&gt;&gt;np.linspace(start=2, stop=10, num=3)\n</code></pre><p>np.arange与np.linspace也是比较常见的函数，比如你要作图的时候，可以用它们生成x轴的坐标。例如，我要生成一个$y=x^{2}$的图片，x轴可以用np.linespace()来生成。</p><pre><code class=\"language-plain\">import numpy as np\nimport matplotlib.pyplot as plt\n\nX = np.arange(-50, 51, 2)\nY = X ** 2\n\nplt.plot(X, Y, color='blue')\nplt.legend()\nplt.show()\n</code></pre><p><img src=\"https://static001.geekbang.org/resource/image/0c/b4/0c752f2b6777a95d8a373649e4a3a2b4.jpg?wh=1800x1146\" alt=\"图片\"></p><h2>数组的轴</h2><p>这是一个非常重要的概念，也是NumPy数组中最不好理解的一个概念。它经常出现在np.sum()、np.max()这样关键的聚合函数中。</p><p>我们用这样一个问题引出，同一个函数如何根据轴的不同来获得不同的计算结果呢？比如现在有一个(4,3)的矩阵，存放着4名同学关于3款游戏的评分数据。</p><pre><code class=\"language-plain\">&gt;&gt;&gt;interest_score = np.random.randint(10, size=(4, 3))\n&gt;&gt;&gt;interest_score\narray([[4, 7, 5],\n&nbsp; &nbsp; &nbsp; &nbsp;[4, 2, 5],\n&nbsp; &nbsp; &nbsp; &nbsp;[7, 2, 4],\n&nbsp; &nbsp; &nbsp; &nbsp;[1, 2, 4]])\n</code></pre><p>第一个需求是，计算每一款游戏的评分总和。这个问题如何解决呢，我们一起分析一下。<br>\n数组的轴即数组的维度，它是从0开始的。对于我们这个二维数组来说，有两个轴，分别是代表行的0轴与代表列的1轴。如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/e1/de/e14a4f5d6ba946665b7ccf01c58a2dde.jpg?wh=1233x790\" alt=\"图片\"></p><p>我们的问题是要计算每一款游戏的评分总和，也就是沿着0轴的方向进行求和。所以，我们只需要在求和函数中指定沿着0轴的方向求和即可。</p><pre><code class=\"language-plain\">&gt;&gt;&gt; np.sum(interest_score, axis=0)\narray([16, 13, 18])\n</code></pre><p>计算方向如绿色箭头所示：<br>\n<img src=\"https://static001.geekbang.org/resource/image/3a/80/3a6bd04c4708d3635e9c92092612e380.jpg?wh=1207x812\" alt=\"图片\"></p><p>第二个问题是要计算每名同学的评分总和，也就是要沿着1轴方向对二维数组进行操作。所以，我们只需要将axis参数设定为1即可。</p><pre><code class=\"language-plain\">&gt;&gt;&gt; np.sum(interest_score, axis=1)\narray([16, 11, 13,&nbsp; 7])\n</code></pre><p>计算方向如绿色箭头所示。<br>\n<img src=\"https://static001.geekbang.org/resource/image/d6/b4/d60ed120c370e376253bee7b362590b4.jpg?wh=1196x790\" alt=\"图片\"></p><p>二维数组还是比较好理解的，那多维数据该怎么办呢？你有没有发现，其实当axis=i时，就是按照第i个轴的方向进行计算的，或者可以理解为第i个轴的数据将会被折叠或聚合到一起。</p><p>形状为(a, b, c)的数组，沿着0轴聚合后，形状变为(b, c)；沿着1轴聚合后，形状变为(a, c)；</p><p>沿着2轴聚合后，形状变为(a, b)；更高维数组以此类推。</p><p>接下来，我们再看一个多维数组的例子。对数组a，求不同维度上的最大值。</p><pre><code class=\"language-plain\">&gt;&gt;&gt; a = np.arange(18).reshape(3,2,3)\n&gt;&gt;&gt; a\narray([[[ 0,&nbsp; 1,&nbsp; 2],\n&nbsp; &nbsp; &nbsp; &nbsp; [ 3,&nbsp; 4,&nbsp; 5]],\n\n&nbsp; &nbsp; &nbsp; &nbsp;[[ 6,&nbsp; 7,&nbsp; 8],\n&nbsp; &nbsp; &nbsp; &nbsp; [ 9, 10, 11]],\n\n&nbsp; &nbsp; &nbsp; &nbsp;[[12, 13, 14],\n&nbsp; &nbsp; &nbsp; &nbsp; [15, 16, 17]]])\n</code></pre><p>我们可以将同一个轴上的数据看做同一个单位，那聚合的时候，我们只需要在同级别的单位上进行聚合就可以了。<br>\n如下图所示，绿框代表沿着0轴方向的单位，蓝框代表着沿着1轴方向的单位，红框代表着2轴方向的单位。</p><p><img src=\"https://static001.geekbang.org/resource/image/0a/b9/0af604dc4661e5512515781bbd7be3b9.jpg?wh=977x838\" alt=\"图片\"></p><p>当axis=0时，就意味着将三个绿框的数据聚合在一起，结果是一个（2，3）的数组，数组内容为：$$\\begin{matrix}<br>\n[ \\ [(max(a_{000},a_{100},a_{200}), max(a_{001},a_{101},a_{201}), max(a_{002},a_{102},a_{202}))], \\\\\\<br>\n[(max(a_{010},a_{110},a_{210}), max(a_{011},a_{111},a_{211}), max(a_{012},a_{112},a_{212}))] \\ ] \\<br>\n\\end{matrix}$$</p><p>代码如下：</p><pre><code class=\"language-plain\">&gt;&gt;&gt; a.max(axis=0)\narray([[12, 13, 14],\n&nbsp; &nbsp; &nbsp; &nbsp;[15, 16, 17]])\n</code></pre><p>当axis=1时，就意味着每个绿框内的蓝框聚合在一起，结果是一个（3，3）的数组，数组内容为：<br>\n$$\\begin{matrix}<br>\n[ \\ [(max(a_{000},a_{010}), max(a_{001},a_{011}), max(a_{002},a_{012}))], \\\\\\<br>\n[(max(a_{100},a_{110}), max(a_{101},a_{111}), max(a_{102},a_{112}))],  \\\\\\<br>\n[(max(a_{200},a_{210}), max(a_{201},a_{211}), max(a_{202},a_{212}))], \\ ] \\<br>\n\\end{matrix}<br>\n$$</p><p>代码如下：</p><pre><code class=\"language-plain\">&gt;&gt;&gt; a.max(axis=1)\narray([[ 3,&nbsp; 4,&nbsp; 5],\n&nbsp; &nbsp; &nbsp; &nbsp;[ 9, 10, 11],\n&nbsp; &nbsp; &nbsp; &nbsp;[15, 16, 17]])\n</code></pre><p>当axis=2时，就意味着每个蓝框中的红框聚合在一起，结果是一个（3，2）的数组，数组内容如下所示：<br>\n$$\\begin{matrix}<br>\n[ \\ [(max(a_{000},a_{001},a_{002}), max(a_{010},a_{011},a_{012}))], \\\\\\<br>\n[(max(a_{100},a_{101},a_{102}), max(a_{110},a_{111},a_{112}))], \\\\\\<br>\n[(max(a_{200},a_{201},a_{202}), max(a_{210},a_{211},a_{212}))], \\ ] \\\\\\<br>\n\\end{matrix}<br>\n$$</p><p>代码如下：</p><pre><code class=\"language-plain\">&gt;&gt;&gt; a.max(axis=2)\narray([[ 2,&nbsp; 5],\n&nbsp; &nbsp; &nbsp; &nbsp;[ 8, 11],\n&nbsp; &nbsp; &nbsp; &nbsp;[14, 17]])\n</code></pre><p>axis参数非常常见，不光光出现在刚才介绍的sum与max，还有很多其他的聚合函数也会用到，例如min、mean、argmin（求最小值下标）、argmax（求最大值下标）等。</p><h2>小结</h2><p>恭喜你完成了这节课的学习。其实你只要有一些其他语言的编程基础，学Numpy还是非常容易的。这里我想再次强调一下为什么NumPy这道前菜必不可少。</p><p>其实Numpy的很多知识点是与PyTorch融会贯通的，例如PyTorch中的Tensor。而且Numpy在机器学习中常常被用到，很多模块都要基于NumPy展开，尤其是在数据的预处理和膜后处理中。</p><p>NumPy是用于Python中科学计算的一个基础包。它提供了一个多维度的数组对象，以及针对数组对象的各种快速操作。为了让你有更直观的体验，我们学习了创建数组的四种方式。</p><p>其中你重点要掌握的方法，就是如何使用<strong>np.asarray</strong>创建一个数组。这里涉及数组属性（ndim、shape、dtype、size）的灵活使用，特别是数组的形状变化与数据类型转换。</p><p>最后，我为你介绍了数组轴的概念，我们需要在数组的聚合函数中灵活运用它。虽然这个概念十分常用，但却不好理解，建议你根据我课程里的例子仔细揣摩一下，从2维数组一步步推理到多维数组，根据轴的不同，数组聚合的方向是如何变化的。</p><p>下一节课，我们要继续学习NumPy中常用且重要的功能。</p><h2>每课一练</h2><p>在刚才用户对游戏评分的那个问题中，你能计算一下每位用户对三款游戏的打分的平均分吗？</p><p>欢迎你在留言区记录你的疑问或者收获，也推荐你把这节课分享给你的朋友。</p>","neighbors":{"left":{"article_title":"01 | PyTorch：网红中的顶流明星","id":425463},"right":{"article_title":"03 | NumPy（下）：深度学习中的常用操作","id":426801}},"comments":[{"had_liked":false,"id":316886,"user_name":"于小咸","can_delete":false,"product_type":"c1","uid":1640946,"ip_address":"","ucode":"833D5E92016430","user_header":"https://static001.geekbang.org/account/avatar/00/19/09/f2/6ed195f4.jpg","comment_is_top":true,"comment_ctime":1634605666,"is_pvip":false,"replies":[{"id":"114742","content":"你好，于小咸。感谢你的留言与认可。希望与你一起进步。^^","user_name":"作者回复","user_name_real":"方远","uid":"2802608","ctime":1634609762,"ip_address":"","comment_id":316886,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.223372064259199e+18","product_id":100093301,"comment_content":"之前一直没搞清楚轴的概念，听方老师讲解以后终于明白了，轴的方向就是行序号或者列序号增长的方向","like_count":6,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528555,"discussion_content":"你好，于小咸。感谢你的留言与认可。希望与你一起进步。^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634609762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004953,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/99/4bdadfd3.jpg","nickname":"Chloe","note":"","ucode":"C4848ED5B35752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548378,"discussion_content":"真的呢，绿色蓝色红色的示意图很有帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643167552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316079,"user_name":"lwg0452","can_delete":false,"product_type":"c1","uid":1853479,"ip_address":"","ucode":"0B58A1C80F9074","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyEJx6dG2dMuMz6swdfjNuw3HMoEAbtxprfdBUAyRpLFayxmwEiaYLs224LuAdwWu55ENLgsI8U4w/132","comment_is_top":false,"comment_ctime":1634125272,"is_pvip":false,"replies":[{"id":"114507","content":"你好，lwg0452。感谢你的留言^^。是的，这么做是正确的👍。<br>也可以用np.mean。对于普通求平均来说，他们都是一样的，也就是说np.average(interest_score, axis=1)与np.mean(interest_score, axis=1)的输出是一样的。<br>不过np.average还可以用于加权平均，比如给定每个游戏的权值weights=np.array([4,2,7])，计算每名同学对三款游戏的加权平均就可以这样做，<br>np.average(interest_score, weights=weights, axis=1)。<br>加权平均计算方式的话，用第一名同学举例就是<br>interest_score[0][0] * weights[0]&#47;weights.sum() + interest_score[0][1] * weights[1]&#47;weights.sum() + interest_score[0][2] * weights[0]&#47;weights.sum()<br>","user_name":"作者回复","user_name_real":"Geek_d25b3b","uid":"2802608","ctime":1634132836,"ip_address":"","comment_id":316079,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57468700120","product_id":100093301,"comment_content":"思考题<br>np.average(interest_score, axis=1)","like_count":13,"discussions":[{"author":{"id":2953704,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/11/e8/e26cc95a.jpg","nickname":"Jzq","note":"","ucode":"58E0C231E20A0C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563212,"discussion_content":"第三个权重是weights[2]/weights.sum()吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649950853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528256,"discussion_content":"你好，lwg0452。感谢你的留言^^。是的，这么做是正确的👍。\n也可以用np.mean。对于普通求平均来说，他们都是一样的，也就是说np.average(interest_score, axis=1)与np.mean(interest_score, axis=1)的输出是一样的。\n不过np.average还可以用于加权平均，比如给定每个游戏的权值weights=np.array([4,2,7])，计算每名同学对三款游戏的加权平均就可以这样做，\nnp.average(interest_score, weights=weights, axis=1)。\n加权平均计算方式的话，用第一名同学举例就是\ninterest_score[0][0] * weights[0]/weights.sum() + interest_score[0][1] * weights[1]/weights.sum() + interest_score[0][2] * weights[0]/weights.sum()\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634132836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315982,"user_name":"jssfy","can_delete":false,"product_type":"c1","uid":1137238,"ip_address":"","ucode":"F16353CFE607B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/56/115c6433.jpg","comment_is_top":false,"comment_ctime":1634093357,"is_pvip":false,"replies":[{"id":"114495","content":"你好，jssfy。首先谢谢你的留言。<br>pytorch是用于深度学习的框架，如果涉及到数组使用都强烈建议使用np，原因有以下几点：<br>1. np提供了丰富的矩阵运算，非常适合深度学习处理数据时使用。<br>例如，数组中某维度的数据拼接，在实际训练场景中，可用于增加训练数据的特征维度等，np中一个函数即可搞定。<br>再例如，np中的argmax函数，可以让我们在做分类任务时轻松取到最大概率的分类是什么。<br>等等这些np数组中强大的功能，都是python数组所不具备的。<br>2. np节约内存<br>np数组对内存的优化很好，长度越大，其相比python的数组占用内存越少。","user_name":"作者回复","user_name_real":"Geek_d25b3b","uid":"2802608","ctime":1634109538,"ip_address":"","comment_id":315982,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44583766317","product_id":100093301,"comment_content":"pytorch哪些场景必须或者强烈建议用np? 不用python数组的原因是什么?可否举个例子?","like_count":10,"discussions":[{"author":{"id":1008587,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","nickname":"和你一起搬砖的胡大爷","note":"","ucode":"54607F4E17917A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405539,"discussion_content":"Python 并没有数组，只有list和tuple，这两个Python原生库也不能做矩阵计算，numpy的Backend是blas库，openblas，atlas，mkl，编译时候选择，用numpy做矩阵运算，速度比你用list和tuple手写快上千倍，甚至上万倍","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1634573187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528223,"discussion_content":"你好，jssfy。首先谢谢你的留言。\npytorch是用于深度学习的框架，如果涉及到数组使用都强烈建议使用np，原因有以下几点：\n1. np提供了丰富的矩阵运算，非常适合深度学习处理数据时使用。\n例如，数组中某维度的数据拼接，在实际训练场景中，可用于增加训练数据的特征维度等，np中一个函数即可搞定。\n再例如，np中的argmax函数，可以让我们在做分类任务时轻松取到最大概率的分类是什么。\n等等这些np数组中强大的功能，都是python数组所不具备的。\n2. np节约内存\nnp数组对内存的优化很好，长度越大，其相比python的数组占用内存越少。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634109538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349493,"user_name":"qifeng.wang","can_delete":false,"product_type":"c1","uid":2938330,"ip_address":"","ucode":"D7812BB803A5D7","user_header":"","comment_is_top":false,"comment_ctime":1655995597,"is_pvip":false,"replies":[{"id":"127290","content":"你好，感谢你的留言。<br>3维以上就画不出来。但其实原理是一样的。<br>你比如说，有一个数组的shape是(3,2,4,5)<br>现在沿着第2个轴求最大值，其实就是沿着axis=1求最大值，经过计算之后的数组的shape就是(3,4,5)","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1656310863,"ip_address":"","comment_id":349493,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5950962893","product_id":100093301,"comment_content":"作者没有介绍四维轴的概念，三轴的可以理解，就是长方体，X(0),Y(1),Z(2), axis=0就按照这个方向 做投影转换成 二维（Y,Z），四维的有点理解不出来，麻烦解读一下。","like_count":1,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577723,"discussion_content":"你好，感谢你的留言。\n3维以上就画不出来。但其实原理是一样的。\n你比如说，有一个数组的shape是(3,2,4,5)\n现在沿着第2个轴求最大值，其实就是沿着axis=1求最大值，经过计算之后的数组的shape就是(3,4,5)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656310863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2938330,"avatar":"","nickname":"qifeng.wang","note":"","ucode":"D7812BB803A5D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":584991,"discussion_content":"多谢回复 最近还在学习，日拱一卒，利用碎片化时间，系统化学习！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661260762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":577723,"ip_address":"广东"},"score":584991,"extra":""}]}]},{"had_liked":false,"id":344995,"user_name":"芜风","can_delete":false,"product_type":"c1","uid":1326892,"ip_address":"","ucode":"2416648949BEA2","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/2c/ae8a5968.jpg","comment_is_top":false,"comment_ctime":1651917742,"is_pvip":true,"replies":[{"id":"126007","content":"感谢支持^^","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1652163188,"ip_address":"","comment_id":344995,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5946885038","product_id":100093301,"comment_content":"老师的专栏又简洁又有重点，真的很好！","like_count":1,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571268,"discussion_content":"感谢支持^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652163189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316045,"user_name":"人间失格","can_delete":false,"product_type":"c1","uid":2806480,"ip_address":"","ucode":"70B75266F38A62","user_header":"","comment_is_top":false,"comment_ctime":1634115036,"is_pvip":false,"replies":[{"id":"114510","content":"你好，人间失格。谢谢你的留言也感谢你的认可。：）我会用通俗易通的言语来讲解专栏的内容。<br>Numpy快是因为底层是用C、C++和Fortran写的，并在底层对各种运算进行了高度的优化。","user_name":"作者回复","user_name_real":"Geek_d25b3b","uid":"2802608","ctime":1634133522,"ip_address":"","comment_id":316045,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5929082332","product_id":100093301,"comment_content":"给老师点赞，老师轴抽象的很好，比我初次看更具体，希望后面网络结构和优化也能这样。请问numpy快和并行的原因是因为底层storage方式吗？","like_count":1,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528246,"discussion_content":"你好，人间失格。谢谢你的留言也感谢你的认可。：）我会用通俗易通的言语来讲解专栏的内容。\nNumpy快是因为底层是用C、C++和Fortran写的，并在底层对各种运算进行了高度的优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634133522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316003,"user_name":"AstrHan","can_delete":false,"product_type":"c1","uid":1944884,"ip_address":"","ucode":"14C5F3323A472D","user_header":"","comment_is_top":false,"comment_ctime":1634104156,"is_pvip":false,"replies":[{"id":"114509","content":"你好，AstrHan，谢谢你的留言。谢谢你的认可。是啊，自行车爱好者：）。","user_name":"作者回复","user_name_real":"Geek_d25b3b","uid":"2802608","ctime":1634132938,"ip_address":"","comment_id":316003,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5929071452","product_id":100093301,"comment_content":"数组轴的这个例子好记！老师是自行车爱好者啊，每张头图都是，，","like_count":1,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528232,"discussion_content":"你好，AstrHan，谢谢你的留言。谢谢你的认可。是啊，自行车爱好者：）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634132938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358422,"user_name":"牛狼_","can_delete":false,"product_type":"c1","uid":2663442,"ip_address":"上海","ucode":"B99814333E6497","user_header":"https://static001.geekbang.org/account/avatar/00/28/a4/12/e52cbb79.jpg","comment_is_top":false,"comment_ctime":1664284856,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1664284856","product_id":100093301,"comment_content":"&gt;&gt;&gt;np.around(np.average(interest_score, axis=1), decimals=2)  # 保留两位小数","like_count":0},{"had_liked":false,"id":352553,"user_name":"John(易筋)","can_delete":false,"product_type":"c1","uid":1180202,"ip_address":"北京","ucode":"BB4E58DD4B8F15","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/2a/90e38b94.jpg","comment_is_top":false,"comment_ctime":1658757997,"is_pvip":true,"replies":[{"id":"128357","content":"👍🏻 ^^","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1659079574,"ip_address":"北京","comment_id":352553,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1658757997","product_id":100093301,"comment_content":"```<br>mean_1 = np.mean(interest_score, axis=1)<br>print(mean_1)<br>```","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581943,"discussion_content":"👍🏻 ^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659079574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350740,"user_name":"starwonder","can_delete":false,"product_type":"c1","uid":1664589,"ip_address":"","ucode":"B6953F2626AAC6","user_header":"","comment_is_top":false,"comment_ctime":1657152561,"is_pvip":true,"replies":[{"id":"127609","content":"你好，感谢你的留言。<br>这个看怎么理解吧。<br>通常来说降维是指将输入数据的若干个维度，通过某种方法降低到指定维度。<br>例如，PCA或者一些embedding方法","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1657170972,"ip_address":"","comment_id":350740,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657152561","product_id":100093301,"comment_content":"数据降维的本质就是按照某（几）个轴的方向进行聚合吧？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579087,"discussion_content":"你好，感谢你的留言。\n这个看怎么理解吧。\n通常来说降维是指将输入数据的若干个维度，通过某种方法降低到指定维度。\n例如，PCA或者一些embedding方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657170972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344863,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1651826495,"is_pvip":false,"replies":[{"id":"126084","content":"👍🏻👍🏻^^<br><br>也可以用np.mean。对于普通求平均来说，他们都是一样的，也就是说np.average(interest_score, axis=1)与np.mean(interest_score, axis=1)的输出是一样的。<br>不过np.average还可以用于加权平均，比如给定每个游戏的权值weights=np.array([4,2,7])，计算每名同学对三款游戏的加权平均就可以这样做，<br>np.average(interest_score, weights=weights, axis=1)。<br>加权平均计算方式的话，用第一名同学举例就是<br>interest_score[0][0] * weights[0]&#47;weights.sum() + interest_score[0][1] * weights[1]&#47;weights.sum() + interest_score[0][2] * weights[0]&#47;weights.sum()","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1652250176,"ip_address":"","comment_id":344863,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651826495","product_id":100093301,"comment_content":"np.average(interest_score, axis=0)","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571512,"discussion_content":"👍🏻👍🏻^^\n\n也可以用np.mean。对于普通求平均来说，他们都是一样的，也就是说np.average(interest_score, axis=1)与np.mean(interest_score, axis=1)的输出是一样的。\n不过np.average还可以用于加权平均，比如给定每个游戏的权值weights=np.array([4,2,7])，计算每名同学对三款游戏的加权平均就可以这样做，\nnp.average(interest_score, weights=weights, axis=1)。\n加权平均计算方式的话，用第一名同学举例就是\ninterest_score[0][0] * weights[0]/weights.sum() + interest_score[0][1] * weights[1]/weights.sum() + interest_score[0][2] * weights[0]/weights.sum()","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652250176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344852,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1651823327,"is_pvip":false,"replies":[{"id":"126116","content":"可以这么理解^^","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1652409949,"ip_address":"","comment_id":344852,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651823327","product_id":100093301,"comment_content":"这里的轴就是维度的概念吧","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571790,"discussion_content":"可以这么理解^^","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652409949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342104,"user_name":"珍妮•玛仕多","can_delete":false,"product_type":"c1","uid":1806720,"ip_address":"","ucode":"6E1E5564F979B3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/91/80/bc38f890.jpg","comment_is_top":false,"comment_ctime":1650015158,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650015158","product_id":100093301,"comment_content":"写的真叼","like_count":0},{"had_liked":false,"id":338347,"user_name":"海阔天空","can_delete":false,"product_type":"c1","uid":1437261,"ip_address":"","ucode":"18070321EEFBD9","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/4d/11c14e57.jpg","comment_is_top":false,"comment_ctime":1647433679,"is_pvip":false,"replies":[{"id":"123703","content":"你好，海阔天空，感谢你的留言。😀","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1647513925,"ip_address":"","comment_id":338347,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647433679","product_id":100093301,"comment_content":"讲得好","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556789,"discussion_content":"你好，海阔天空，感谢你的留言。😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647513925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331558,"user_name":"Geek_Frank","can_delete":false,"product_type":"c1","uid":1898544,"ip_address":"","ucode":"196797FF55491C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/I6hWU7cqyOrz8COhkU4ibib3PlUkm3wse56dKuRbiaeWlVE6ZrxEHv6u1eOVxNK3icPiauiaibDl98ibdq671iav1lTgNxQ/132","comment_is_top":false,"comment_ctime":1642650707,"is_pvip":true,"replies":[{"id":"121159","content":"你好，Frank，感谢留言。<br>他们差异不大（特别是在使用的层面），互相转换起来非常方便。<br>但是最大的区别是Numpy的数组是在CPU上运算的，像统计机器学习的sklearn可以直接使用。而Pytorch是侧重深度学习的，深度学习多数是在GPU上运算的，而tensor是可以在GPU上运算的。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1642734466,"ip_address":"","comment_id":331558,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1642650707","product_id":100093301,"comment_content":"被一个问题困扰了，想请教方老师。<br>tensor和numpy的ndarray数据结构上究竟有何不同？<br>或者说它们在内存中存在形式、结构有哪些本质区别？<br>为何二者要转换而不能混用？转换的过程中到底改变了啥？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547530,"discussion_content":"你好，Frank，感谢留言。\n他们差异不大（特别是在使用的层面），互相转换起来非常方便。\n但是最大的区别是Numpy的数组是在CPU上运算的，像统计机器学习的sklearn可以直接使用。而Pytorch是侧重深度学习的，深度学习多数是在GPU上运算的，而tensor是可以在GPU上运算的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642734466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1898544,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/I6hWU7cqyOrz8COhkU4ibib3PlUkm3wse56dKuRbiaeWlVE6ZrxEHv6u1eOVxNK3icPiauiaibDl98ibdq671iav1lTgNxQ/132","nickname":"Geek_Frank","note":"","ucode":"196797FF55491C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":547707,"discussion_content":"pytorch中的tensor.cuda不能够转换为numpy，cpu的就可以，那么tensor.cuda和tensor.cpu有哪些不同呢。或者说张量在cpu和gpu中存在形式有哪些区别呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642836405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":547530,"ip_address":""},"score":547707,"extra":""}]}]},{"had_liked":false,"id":331536,"user_name":"Geek_Frank","can_delete":false,"product_type":"c1","uid":1898544,"ip_address":"","ucode":"196797FF55491C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/I6hWU7cqyOrz8COhkU4ibib3PlUkm3wse56dKuRbiaeWlVE6ZrxEHv6u1eOVxNK3icPiauiaibDl98ibdq671iav1lTgNxQ/132","comment_is_top":false,"comment_ctime":1642645040,"is_pvip":true,"replies":[{"id":"121160","content":"是啊^^","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1642734475,"ip_address":"","comment_id":331536,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642645040","product_id":100093301,"comment_content":"方远老师喜欢骑行？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547531,"discussion_content":"是啊^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642734475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330863,"user_name":"与子成说＆亦我所欲","can_delete":false,"product_type":"c1","uid":2808696,"ip_address":"","ucode":"476C100EE273A0","user_header":"https://static001.geekbang.org/account/avatar/00/2a/db/78/8bcd5492.jpg","comment_is_top":false,"comment_ctime":1642232832,"is_pvip":false,"replies":[{"id":"120890","content":"你好，感谢你的留言。正确👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻^^","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1642385501,"ip_address":"","comment_id":330863,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642232832","product_id":100093301,"comment_content":"思考题：np.average(scores,axis=1)","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546660,"discussion_content":"你好，感谢你的留言。正确👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642385502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316864,"user_name":"和你一起搬砖的胡大爷","can_delete":false,"product_type":"c1","uid":1008587,"ip_address":"","ucode":"54607F4E17917A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/cb/7c004188.jpg","comment_is_top":false,"comment_ctime":1634573318,"is_pvip":false,"replies":[{"id":"114743","content":"你好。感谢你的留言与认可。希望与你一起学习进步。：）","user_name":"作者回复","user_name_real":"方远","uid":"2802608","ctime":1634609792,"ip_address":"","comment_id":316864,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634573318","product_id":100093301,"comment_content":"老师把axis解释的真好，axis要是没人教几年都搞不明白……","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528545,"discussion_content":"你好。感谢你的留言与认可。希望与你一起学习进步。：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634609792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316249,"user_name":"木木","can_delete":false,"product_type":"c1","uid":2809727,"ip_address":"","ucode":"560718C7D1A2D3","user_header":"https://static001.geekbang.org/account/avatar/00/2a/df/7f/2e797a8d.jpg","comment_is_top":false,"comment_ctime":1634220739,"is_pvip":false,"replies":[{"id":"114560","content":"你好，木木。感谢你的留言，聚合函数是一类函数的统称。<br>例如，求最大值，最小值，求均值等等，都可以叫做聚合函数。<br>如果还有哪里不明白，可以进入到读者交流群，再继续沟通^^","user_name":"作者回复","user_name_real":"方远","uid":"2802608","ctime":1634260128,"ip_address":"","comment_id":316249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634220739","product_id":100093301,"comment_content":"老师好。老师讲的最后一个三维的数组聚合，我看的不是特别明白。聚合是求最大值吗？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528325,"discussion_content":"你好，木木。感谢你的留言，聚合函数是一类函数的统称。\n例如，求最大值，最小值，求均值等等，都可以叫做聚合函数。\n如果还有哪里不明白，可以进入到读者交流群，再继续沟通^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634260128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316168,"user_name":"大大大大大大黄同学","can_delete":false,"product_type":"c1","uid":1482634,"ip_address":"","ucode":"A2F3F32C7C96D8","user_header":"https://static001.geekbang.org/account/avatar/00/16/9f/8a/89523bb7.jpg","comment_is_top":false,"comment_ctime":1634189202,"is_pvip":false,"replies":[{"id":"114558","content":"你好，大大大大大大黄同学，谢谢你的留言并且为你提出自己的见解点赞。<br>不过这样理解稍微有点不正确。<br>首先是矩阵转置是逻辑概念，而从&#39;C&#39;与&#39;F&#39;的方式进行reshape是物理层面的。<br>其次，这种思考方式，如果数组变成高维度了该怎么办呢？<br>最后是，文章里是从(2,3)变为(3,2)，(2,3)的数组转置后已经是(3,2)了。：）","user_name":"作者回复","user_name_real":"方远","uid":"2802608","ctime":1634255993,"ip_address":"","comment_id":316168,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1634189202","product_id":100093301,"comment_content":"方老师，您好。请问按照‘F’对numpy数组变形为(3,2)是否可以理解为：先对原始数组arr进行转置得到arr_T，按照‘C‘对arr_T变形为(2,3)，再转置回来。","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528290,"discussion_content":"你好，大大大大大大黄同学，谢谢你的留言并且为你提出自己的见解点赞。\n不过这样理解稍微有点不正确。\n首先是矩阵转置是逻辑概念，而从&amp;#39;C&amp;#39;与&amp;#39;F&amp;#39;的方式进行reshape是物理层面的。\n其次，这种思考方式，如果数组变成高维度了该怎么办呢？\n最后是，文章里是从(2,3)变为(3,2)，(2,3)的数组转置后已经是(3,2)了。：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634255993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590986,"discussion_content":"我理解就是，如果是C，那原先是2x3的格子，那就按行读，再按行放入3x2的格子中。如果是F，那原先2x3的格子就按列读，再按列放入3x2\n的格子中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666196606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}