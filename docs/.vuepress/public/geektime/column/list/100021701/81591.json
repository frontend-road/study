{"id":81591,"title":"27丨K-Means（下）：如何使用K-Means对图像进行分割？","content":"<p>上节课，我讲解了K-Means的原理，并且用K-Means对20支亚洲球队进行了聚类，分成3个梯队。今天我们继续用K-Means进行聚类的实战。聚类的一个常用场景就是对图像进行分割。</p><p>图像分割就是利用图像自身的信息，比如颜色、纹理、形状等特征进行划分，将图像分割成不同的区域，划分出来的每个区域就相当于是对图像中的像素进行了聚类。单个区域内的像素之间的相似度大，不同区域间的像素差异性大。这个特性正好符合聚类的特性，所以你可以把图像分割看成是将图像中的信息进行聚类。当然聚类只是分割图像的一种方式，除了聚类，我们还可以基于图像颜色的阈值进行分割，或者基于图像边缘的信息进行分割等。</p><h2>将微信开屏封面进行分割</h2><p>上节课，我讲了sklearn工具包中的K-Means算法使用，我们现在用K-Means算法对微信页面进行分割。微信开屏图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/50/a2/50457e4e1fbd288c125364a6904774a2.png?wh=762*1355\" alt=\"\"><br>\n我们先设定下聚类的流程，聚类的流程和分类差不多，如图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/8a/78/8af94562f6bd3ac42036ec47f5ad2578.jpg?wh=2373*1087\" alt=\"\"><br>\n在准备阶段里，我们需要对数据进行加载。因为处理的是图像信息，我们除了要获取图像数据以外，还需要获取图像的尺寸和通道数，然后基于图像中每个通道的数值进行数据规范化。这里我们需要定义个函数load_data，来帮我们进行图像加载和数据规范化。代码如下：</p><!-- [[[read_end]]] --><pre><code># 加载图像，并对数据进行规范化\ndef load_data(filePath):\n    # 读文件\n    f = open(filePath,'rb')\n    data = []\n    # 得到图像的像素值\n    img = image.open(f)\n    # 得到图像尺寸\n    width, height = img.size\n    for x in range(width):\n        for y in range(height):\n            # 得到点(x,y)的三个通道值\n            c1, c2, c3 = img.getpixel((x, y))\n            data.append([c1, c2, c3])\n    f.close()\n    # 采用Min-Max规范化\n    mm = preprocessing.MinMaxScaler()\n    data = mm.fit_transform(data)\n    return np.mat(data), width, height\n</code></pre><p>因为jpg格式的图像是三个通道(R,G,B)，也就是一个像素点具有3个特征值。这里我们用c1、c2、c3来获取平面坐标点(x,y)的三个特征值，特征值是在0-255之间。</p><p>为了加快聚类的收敛，我们需要采用Min-Max规范化对数据进行规范化。我们定义的load_data函数返回的结果包括了针对(R,G,B)三个通道规范化的数据，以及图像的尺寸信息。在定义好load_data函数后，我们直接调用就可以得到相关信息，代码如下：</p><pre><code># 加载图像，得到规范化的结果img，以及图像尺寸\nimg, width, height = load_data('./weixin.jpg')\n</code></pre><p>假设我们想要对图像分割成2部分，在聚类阶段，我们可以将聚类数设置为2，这样图像就自动聚成2类。代码如下：</p><pre><code># 用K-Means对图像进行2聚类\nkmeans =KMeans(n_clusters=2)\nkmeans.fit(img)\nlabel = kmeans.predict(img)\n# 将图像聚类结果，转化成图像尺寸的矩阵\nlabel = label.reshape([width, height])\n# 创建个新图像pic_mark，用来保存图像聚类的结果，并设置不同的灰度值\npic_mark = image.new(&quot;L&quot;, (width, height))\nfor x in range(width):\n    for y in range(height):\n        # 根据类别设置图像灰度, 类别0 灰度值为255， 类别1 灰度值为127\n        pic_mark.putpixel((x, y), int(256/(label[x][y]+1))-1)\npic_mark.save(&quot;weixin_mark.jpg&quot;, &quot;JPEG&quot;)\n</code></pre><p>代码中有一些参数，我来给你讲解一下这些参数的作用和设置方法。</p><p>我们使用了fit和predict这两个函数来做数据的训练拟合和预测，因为传入的参数是一样的，我们可以同时进行fit和predict操作，这样我们可以直接使用fit_predict(data)得到聚类的结果。得到聚类的结果label后，实际上是一个一维的向量，我们需要把它转化成图像尺寸的矩阵。label的聚类结果是从0开始统计的，当聚类数为2的时候，聚类的标识label=0或者1。</p><p>如果你想对图像聚类的结果进行可视化，直接看0和1是看不出来的，还需要将0和1转化为灰度值。灰度值一般是在0-255的范围内，我们可以将label=0设定为灰度值255，label=1设定为灰度值127。具体方法是用int(256/(label[x][y]+1))-1。可视化的时候，主要是通过设置图像的灰度值进行显示。所以我们把聚类label=0的像素点都统一设置灰度值为255，把聚类label=1的像素点都统一设置灰度值为127。原来图像的灰度值是在0-255之间，现在就只有2种颜色（也就是灰度为255，和灰度127）。</p><p>有了这些灰度信息，我们就可以用image.new创建一个新的图像，用putpixel函数对新图像的点进行灰度值的设置，最后用save函数保存聚类的灰度图像。这样你就可以看到聚类的可视化结果了，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/94/6b/9420b9bedf2e3514b0624543a69fb06b.png?wh=762*1355\" alt=\"\"><br>\n上面是分割成2个部分的分割可视化，完整代码见<a href=\"https://github.com/cystanford/kmeans/blob/master/kmeans1.py\">这里</a>。</p><p><a href=\"https://github.com/cystanford/kmeans/blob/master/kmeans1.py\">https://github.com/cystanford/kmeans/blob/master/kmeans1.py</a></p><p>如果我们想要分割成16个部分，该如何对不同分类设置不同的颜色值呢？这里需要用到skimage工具包，它是图像处理工具包。你需要使用pip install scikit-image来进行安装。</p><p>这段代码可以将聚类标识矩阵转化为不同颜色的矩阵：</p><pre><code>from skimage import color\n# 将聚类标识矩阵转化为不同颜色的矩阵\nlabel_color = (color.label2rgb(label)*255).astype(np.uint8)\nlabel_color = label_color.transpose(1,0,2)\nimages = image.fromarray(label_color)\nimages.save('weixin_mark_color.jpg')\n</code></pre><p>代码中，我使用skimage中的label2rgb函数来将label分类标识转化为颜色数值，因为我们的颜色值范围是[0,255]，所以还需要乘以255进行转化，最后再转化为np.uint8类型。unit8类型代表无符号整数，范围是0-255之间。</p><p>得到颜色矩阵后，你可以把它输出出来，这时你发现输出的图像是颠倒的，原因可能是图像源拍摄的时候本身是倒置的。我们需要设置三维矩阵的转置，让第一维和第二维颠倒过来，也就是使用transpose(1,0,2)，将原来的(0,1,2）顺序转化为(1,0,2)顺序，即第一维和第二维互换。</p><p>最后我们使用fromarray函数，它可以通过矩阵来生成图片，并使用save进行保存。</p><p>最后得到的分类标识颜色化图像是这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/d2/b7/d26df5f1ed26cca53118a99aa04484b7.png?wh=541*959\" alt=\"\"><br>\n完整的代码见<a href=\"https://github.com/cystanford/kmeans/blob/master/kmeans2.py\">这里</a>。</p><p><a href=\"https://github.com/cystanford/kmeans/blob/master/kmeans2.py\">https://github.com/cystanford/kmeans/blob/master/kmeans2.py</a></p><p>刚才我们做的是聚类的可视化。如果我们想要看到对应的原图，可以将每个簇（即每个类别）的点的RGB值设置为该簇质心点的RGB值，也就是簇内的点的特征均为质心点的特征。</p><p>我给出了完整的代码，代码中，我可以把范围为0-255的数值投射到1-256数值之间，方法是对每个数值进行加1，你可以自己来运行下：</p><pre><code># -*- coding: utf-8 -*-\n# 使用K-means对图像进行聚类，并显示聚类压缩后的图像\nimport numpy as np\nimport PIL.Image as image\nfrom sklearn.cluster import KMeans\nfrom sklearn import preprocessing\nimport matplotlib.image as mpimg\n# 加载图像，并对数据进行规范化\ndef load_data(filePath):\n    # 读文件\n    f = open(filePath,'rb')\n    data = []\n    # 得到图像的像素值\n    img = image.open(f)\n    # 得到图像尺寸\n    width, height = img.size\n    for x in range(width):\n        for y in range(height):\n            # 得到点(x,y)的三个通道值\n            c1, c2, c3 = img.getpixel((x, y))\n            data.append([(c1+1)/256.0, (c2+1)/256.0, (c3+1)/256.0])\n    f.close()\n    return np.mat(data), width, height\n# 加载图像，得到规范化的结果imgData，以及图像尺寸\nimg, width, height = load_data('./weixin.jpg')\n# 用K-Means对图像进行16聚类\nkmeans =KMeans(n_clusters=16)\nlabel = kmeans.fit_predict(img)\n# 将图像聚类结果，转化成图像尺寸的矩阵\nlabel = label.reshape([width, height])\n# 创建个新图像img，用来保存图像聚类压缩后的结果\nimg=image.new('RGB', (width, height))\nfor x in range(width):\n    for y in range(height):\n        c1 = kmeans.cluster_centers_[label[x, y], 0]\n        c2 = kmeans.cluster_centers_[label[x, y], 1]\n        c3 = kmeans.cluster_centers_[label[x, y], 2]\n        img.putpixel((x, y), (int(c1*256)-1, int(c2*256)-1, int(c3*256)-1))\nimg.save('weixin_new.jpg')\n</code></pre><p>完整代码见<a href=\"https://github.com/cystanford/kmeans/blob/master/kmeans3.py\">这里</a>。</p><p><a href=\"https://github.com/cystanford/kmeans/blob/master/kmeans3.py\">https://github.com/cystanford/kmeans/blob/master/kmeans3.py</a></p><p>你可以看到我没有用到sklearn自带的MinMaxScaler，而是自己写了Min-Max规范化的公式。这样做的原因是我们知道RGB每个通道的数值在[0,255]之间，所以我们可以用每个通道的数值+1/256，这样数值就会在[0,1]之间。</p><p>对图像做了Min-Max空间变换之后，还可以对其进行反变换，还原出对应原图的通道值。</p><p>对于点(x,y)，我们找到它们所属的簇label[x,y]，然后得到这个簇的质心特征，用c1,c2,c3表示：</p><pre><code>c1 = kmeans.cluster_centers_[label[x, y], 0]\nc2 = kmeans.cluster_centers_[label[x, y], 1]\nc3 = kmeans.cluster_centers_[label[x, y], 2]\n</code></pre><p>因为c1, c2, c3对应的是数据规范化的数值，因此我们还需要进行反变换，即：</p><pre><code>c1=int(c1*256)-1\nc2=int(c2*256)-1\nc3=int(c3*256)-1\n</code></pre><p>然后用img.putpixel设置点(x,y)反变换后得到的特征值。最后用img.save保存图像。</p><h2>总结</h2><p>今天我们用K-Means做了图像的分割，其实不难发现K-Means聚类有个缺陷：聚类个数K值需要事先指定。如果你不知道该聚成几类，那么最好会给K值多设置几个，然后选择聚类结果最好的那个值。</p><p>通过今天的图像分割，你发现用K-Means计算的过程在sklearn中就是几行代码，大部分的工作还是在预处理和后处理上。预处理是将图像进行加载，数据规范化。后处理是对聚类后的结果进行反变换。</p><p>如果涉及到后处理，你可以自己来设定数据规范化的函数，这样反变换的函数比较容易编写。</p><p>另外我们还学习了如何在Python中如何对图像进行读写，具体的代码如下，上文中也有相应代码，你也可以自己对应下：</p><pre><code>import PIL.Image as image\n# 得到图像的像素值\nimg = image.open(f)\n# 得到图像尺寸\nwidth, height = img.size\n</code></pre><p>这里会使用PIL这个工具包，它的英文全称叫Python Imaging Library，顾名思义，它是Python图像处理标准库。同时我们也使用到了skimage工具包（scikit-image），它也是图像处理工具包。用过Matlab的同学知道，Matlab处理起图像来非常方便。skimage可以和它相媲美，集成了很多图像处理函数，其中对不同分类标识显示不同的颜色。在Python中图像处理工具包，我们用的是skimage工具包。</p><p>这节课没有太多的理论概念，主要讲了K-Means聚类工具，数据规范化工具，以及图像处理工具的使用，并在图像分割中进行运用。其中涉及到的工具包比较多，你需要在练习的时候多加体会。当然不同尺寸的图像，K-Means运行的时间也是不同的。如果图像尺寸比较大，你可以事先进行压缩，长宽在200像素内运行速度会比较快，如果超过了1000像素，速度会很慢。</p><p><img src=\"https://static001.geekbang.org/resource/image/5a/99/5a3f0dfaf5e6aaca1e96f488f8a10999.png?wh=1574*842\" alt=\"\"><br>\n今天我讲了如何使用K-Means聚类做图像分割，谈谈你使用的体会吧。另外我在<a href=\"https://github.com/cystanford/kmeans/blob/master/baby.jpg\">GitHub</a>上上传了一张baby.jpg的图片，请你编写代码用K-Means聚类方法将它分割成16个部分。</p><p>链接：<a href=\"https://github.com/cystanford/kmeans/blob/master/baby.jpg\">https://github.com/cystanford/kmeans/blob/master/baby.jpg</a></p><p>欢迎在评论区与我分享你的答案，也欢迎点击“请朋友读”，把这篇文章分享给你的朋友或者同事。</p><p></p>","comments":[{"had_liked":false,"id":66821,"user_name":"淡魂","can_delete":false,"product_type":"c1","uid":1353958,"ip_address":"","ucode":"23EFE8E08A8853","user_header":"","comment_is_top":false,"comment_ctime":1550025286,"is_pvip":false,"replies":[{"id":24714,"content":"一个不错的问题，实际上都是一样的，只要能划分到[0,1]空间内，而且在变化的过程中不存在分母为0的情况即可。因为我们是缩放一个固定的尺寸，所以除以255，反变换的时候乘以255是没有问题的。你也可以自己修改运行下，同样可以得到结果。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550802777,"ip_address":"","comment_id":66821,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"请问老师。自己写Min-Max规范化公式的时候为什么不直接除以255，这样得到的数据也是在[0,1]之间，是因为那个值不可以为0吗？什么原因呢？","like_count":14},{"had_liked":false,"id":68552,"user_name":"深白浅黑","can_delete":false,"product_type":"c1","uid":1123923,"ip_address":"","ucode":"DCCAA31DE8B127","user_header":"https://static001.geekbang.org/account/avatar/00/11/26/53/60fe31fb.jpg","comment_is_top":false,"comment_ctime":1550542956,"is_pvip":false,"replies":[{"id":24718,"content":"一个很好的问题，实际上label[x,y]是得到当前点的类别，kmeans.cluster_centers_可以得到某类别的数值，因为图像JPG是3个通道，所以通过kmeans.cluster_centers_[label[x, y], 0]，kmeans.cluster_centers_[label[x, y], 1]，kmeans.cluster_centers_[label[x, y], 2]可以获得这3个通道的数值，然后将这些数值作为当前点的数值。因为当前点已经被划分到了这个类别，所以数值是一致的。这样如果原来图像中有N种颜色，现在聚类数是16，相当于每个点的颜色值就变成了其中一个类别的颜色值，也就是变成了16种颜色，完成了聚类（降维）。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550802926,"ip_address":"","comment_id":68552,"utype":2}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师下面函数中，最后的参数代表什么意思？手册上显示的是n_feature，但没说具体的意义，不是很明白。\n        c1 = kmeans.cluster_centers_[label[x, y], 2]\n        c2 = kmeans.cluster_centers_[label[x, y], 1]\n        c3 = kmeans.cluster_centers_[label[x, y], 0]","like_count":7,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438929,"discussion_content":"一个不错的问题，实际上都是一样的，只要能划分到[0,1]空间内，而且在变化的过程中不存在分母为0的情况即可。因为我们是缩放一个固定的尺寸，所以除以255，反变换的时候乘以255是没有问题的。你也可以自己修改运行下，同样可以得到结果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550802777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71443,"user_name":"cua","can_delete":false,"product_type":"c1","uid":1346950,"ip_address":"","ucode":"68F3983BA62435","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/icpJJI5qPlVwaZoOk6zKicZU9lFGkYyMJXmUXRBicibqBrrEvn7vKsL49ESrkibumd7qXUsXs7Yzj3Dib6npR6hB4ryQ/132","comment_is_top":false,"comment_ctime":1551343697,"is_pvip":false,"replies":[{"id":64489,"content":"参数过多？","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619994,"ip_address":"","comment_id":71443,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"为什么会出现这个错误呢ValueError: too many values to unpack (expected 3)","like_count":4,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439729,"discussion_content":"一个很好的问题，实际上label[x,y]是得到当前点的类别，kmeans.cluster_centers_可以得到某类别的数值，因为图像JPG是3个通道，所以通过kmeans.cluster_centers_[label[x, y], 0]，kmeans.cluster_centers_[label[x, y], 1]，kmeans.cluster_centers_[label[x, y], 2]可以获得这3个通道的数值，然后将这些数值作为当前点的数值。因为当前点已经被划分到了这个类别，所以数值是一致的。这样如果原来图像中有N种颜色，现在聚类数是16，相当于每个点的颜色值就变成了其中一个类别的颜色值，也就是变成了16种颜色，完成了聚类（降维）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550802926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1914504,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","nickname":"Simon","note":"","ucode":"A8A2E3E57BD029","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224699,"discussion_content":"可以打印kmeans.cluster_centers_看下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586324297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71445,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551344014,"is_pvip":false,"replies":[{"id":64488,"content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619985,"ip_address":"","comment_id":71445,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"# -*- coding: utf-8 -*-\n# 使用K-means对图像进行聚类，显示分割标识的可视化\nimport numpy as np\nimport PIL.Image as image\nfrom sklearn.cluster import KMeans\nfrom sklearn import preprocessing\nfrom skimage import color\n\n# 加载图像，并对数据进行规范化\ndef load_data(filePath):\n    # 读文件\n    f = open(filePath,&#39;rb&#39;)\n    data = []\n    # 得到图像的像素值\n    img = image.open(f)\n    # 得到图像尺寸\n    width, height = img.size\n    for x in range(width):\n        for y in range(height):\n            # 得到点(x,y)的三个通道值\n            c1, c2, c3 = img.getpixel((x, y))\n            data.append([c1, c2, c3])\n    f.close()\n    # 采用Min-Max规范化\n    mm = preprocessing.MinMaxScaler()\n    data = mm.fit_transform(data)\n    return np.mat(data), width, height\n\n# 加载图像，得到规范化的结果img，以及图像尺寸\nimg, width, height = load_data(&#39;.&#47;baby2.jpg&#39;)\n\n# 用K-Means对图像进行16聚类\nkmeans =KMeans(n_clusters=16)\nkmeans.fit(img)\nlabel = kmeans.predict(img)\n# 将图像聚类结果，转化成图像尺寸的矩阵\nlabel = label.reshape([width, height])\n# 将聚类标识矩阵转化为不同颜色的矩阵\nlabel_color = (color.label2rgb(label)*255).astype(np.uint8)\nlabel_color = label_color.transpose(1,0,2)\nimages = image.fromarray(label_color)\nimages.save(&#39;baby_16.jpg&#39;)","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441151,"discussion_content":"参数过多？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2009471,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a9/7f/89a6e6e6.jpg","nickname":"泊旭临","note":"","ucode":"7F79FEDBAD4BAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277098,"discussion_content":"你用的图片应该是png格式 ，jpg格式就只有三个参数可以获取","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590999788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1617284,"avatar":"","nickname":"Geek_78a41a","note":"","ucode":"5BF45C53211CA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19121,"discussion_content":"我的也是，试了一下猜测是jpg解析后是4个通道，我改成c1, c2, c3 ,c4= img.getpixel((x, y))就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569140406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464176,"avatar":"","nickname":"周志翔","note":"","ucode":"22866A9A9650E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1895,"discussion_content":"我的也是，最后解决了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563070986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68684,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1550571994,"is_pvip":false,"replies":[{"id":24720,"content":"不用np.mat()也是OK的，jpg和png通道数确实需要注意。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550803031,"ip_address":"","comment_id":68684,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"问题：已经使用mm进行数据拟合转换了，为何还要使用np.mat()转换呢？作用在哪里？方便后面使用np.uint8吗？\n\n注意：实战的时候，保存图片为jpg格式\n如果是png格式的话，会出现4个值，导致赋值错误，(R, G, B, A)\n\nimport PIL.Image as image\nimport numpy as np\nimport pandas as pd\n#载入数据\ndef load_data(file):\n    with open(file,&#39;rb&#39;) as f:\n        data=[]\n        #打开文件\n        img=image.open(f)\n        width,height=img.size\n        #获取特征数据\n        for x in range(width):\n            for y in range(height):\n                c1,c2,c3=img.getpixel((x,y))\n                data.append([c1,c2,c3])\n        #进行mm规范化\n        from sklearn.preprocessing import MinMaxScaler\n        mm=MinMaxScaler()\n        data=mm.fit_transform(data)\n        return np.mat(data),width,height\ndata,width,height=load_data(&#39;.&#47;27&#47;baby.jpg&#39;)\n\n#进行聚类\nfrom sklearn.cluster import KMeans\nkmeans=KMeans(n_clusters=16)\nlabel=kmeans.fit_predict(data)\n\n#可视化\n#转换成图像矩阵\nlabel=label.reshape([width,height])\n#生成一张新图片\n# pic_1=image.new(&quot;L&quot;,(width,height))\n# #把像素信息写入\n# #方法1写入灰度值\n# for x in range(width):\n#     for y in range(height):\n#         #按照分类确定灰度值\n#         pic_1.putpixel((x,y),int(label[x][y]*256&#47;16))\n# pic_1.save(&#39;.&#47;27&#47;baby.jpg&#39;)\n\n# #方法2\n# # 使用模组，将表示矩阵转换为各种颜色的矩阵\n# #使用label2rgb(label)*255转化,再把矩阵转化为unit8类型，无符号整数\n# from skimage import color\n# label_color=(color.label2rgb(label)*255).astype(np.uint8)\n# #似乎都需要进行颠倒处理\n# label_color=label_color.transpose(1,0,2)\n# #使用fromarray把矩阵生成图片\n# images=image.fromarray(label_color)\n# images.save(&#39;.&#47;27&#47;baby_color_2.jpg&#39;)\n\n#方法3获取对应原图\n#创建新的图片\nimges1=image.new(&#39;RGB&#39;,(width,height))\n#写入图片\nfor x in  range(width):\n    for y in range(height):\n        #吧范围为0-255的数值投射到1-256\n        #获取第一列即r的值\n        c1=kmeans.cluster_centers_[label[x,y],0]\n        c2 = kmeans.cluster_centers_[label[x, y], 1]\n        c3 = kmeans.cluster_centers_[label[x, y], 2]\n        imges1.putpixel((x,y),(int(c1*256)-1,int(c2*256)-1,int(c3*256)-1))\nimges1.save(&#39;.&#47;27&#47;baby_yasuo.jpg&#39;)","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441153,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152789,"user_name":"Ronnyz","can_delete":false,"product_type":"c1","uid":1488280,"ip_address":"","ucode":"9F34527B1D343D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/98/ffaf2aca.jpg","comment_is_top":false,"comment_ctime":1574080407,"is_pvip":false,"replies":[{"id":59728,"content":"不错 加油Ronnyz","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1574738275,"ip_address":"","comment_id":152789,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"import numpy as np\r\nimport PIL.Image as Image\r\nfrom sklearn import preprocessing\r\nfrom sklearn.cluster import KMeans\r\nfrom skimage import color\r\n\r\n#加载图片，并进行规范化\r\ndef load_data(filepath):\r\n    #读图片\r\n    f=open(filepath,&#39;rb&#39;)\r\n    #获取图片像素\r\n    img=Image.open(f)\r\n    #获取图片尺寸和像素矩阵\r\n    width,height =img.size\r\n    data=[]\r\n    for x in range(width):\r\n        for y in range(height):\r\n            #得到点（x,y）的R,G,B通道值\r\n            r,g,b=img.getpixel((x,y))\r\n            data.append([r,g,b])\r\n    f.close()\r\n    #采用min-max规范化\r\n    mm=preprocessing.MinMaxScaler()\r\n    print(&#39;原位置列表：&#39;)\r\n    print(type(data))\r\n    print(len(data))\r\n    data=mm.fit_transform(data)\r\n    return np.mat(data),width,height\r\n\r\n#加载图片，得到规范化结果\r\nimg,width,height = load_data(&#39;.&#47;kmeans-master&#47;baby.jpg&#39;)\r\nprint(&#39;\\n规范化的像素矩阵：&#39;)\r\nprint(type(img))\r\nprint(img.shape)\r\n#用K-Means进行16聚类\r\nkmeans = KMeans(n_clusters=16)\r\nlabel=kmeans.fit_predict(img)\r\n\r\n#将图像结果，转化成图像尺寸矩阵\r\nlabel=label.reshape([width,height])\r\n\r\n#创建颜色表示矩阵图\r\nlabel_color = (color.label2rgb(label)*255).astype(np.uint8)\r\nlabel_color=label_color.transpose(1,0,2)\r\nprint(&#39;\\n像素颜色矩阵：&#39;)\r\nprint(label_color.shape)\r\nimages=Image.fromarray(label_color)\r\nimages.save(&#39;.&#47;kmeans-master&#47;baby_mark.jpg&#39;)\r\n\r\n#创建新图像，保存聚类压缩之后的结果\r\nimg=Image.new(&#39;RGB&#39;,(width,height))\r\nfor x in range(width):\r\n    for y in range(height):\r\n        r1=kmeans.cluster_centers_[label[x, y],0]\r\n        g1=kmeans.cluster_centers_[label[x, y], 1]\r\n        b1=kmeans.cluster_centers_[label[x, y], 2]\r\n        img.putpixel((x,y),(int(r1*256)-1,int(g1*256)-1,int(b1*256)-1))\r\nimg.save(&#39;.&#47;kmeans-master&#47;baby_new.jpg&#39;)","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474939,"discussion_content":"不错 加油Ronnyz","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574738275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234043,"user_name":"§mc²ompleXWr","can_delete":false,"product_type":"c1","uid":1932586,"ip_address":"","ucode":"8D2527DE0F760B","user_header":"https://static001.geekbang.org/account/avatar/00/1d/7d/2a/4c7e2e2f.jpg","comment_is_top":false,"comment_ctime":1594561722,"is_pvip":false,"replies":[{"id":103512,"content":"np.mat()函数是将输入解释为矩阵，指的是二维矩阵。\nnp.array()函数是创建一个数组，它可以是一维、二维或更高维。\n当数组为二维时，和矩阵等价，所以你会觉得结果看起来一样。\n","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1616693384,"ip_address":"","comment_id":234043,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"为什么要用np.mat(data)??\n我用array()跑出来的结果完全是一样的啊。。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474939,"discussion_content":"不错 加油Ronnyz","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574738275,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75298,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1552375405,"is_pvip":false,"replies":[{"id":64434,"content":"嗯嗯 加油~","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619171,"ip_address":"","comment_id":75298,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"极客时间 pc界面终于改了。。之前的界面找某篇文章费死个劲","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501251,"discussion_content":"np.mat()函数是将输入解释为矩阵，指的是二维矩阵。\nnp.array()函数是创建一个数组，它可以是一维、二维或更高维。\n当数组为二维时，和矩阵等价，所以你会觉得结果看起来一样。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616693384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187792,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1f/d0/660502a4.jpg","nickname":"初","note":"","ucode":"E124D8A566DA43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647341,"discussion_content":"mat在numpy2.0没了，替代品是asmatrix，但是asmatrix不给fit，我切回array了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719900750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67351,"user_name":"Rickie","can_delete":false,"product_type":"c1","uid":1352052,"ip_address":"","ucode":"F859B7837DFD18","user_header":"https://static001.geekbang.org/account/avatar/00/14/a1/74/3dfa4436.jpg","comment_is_top":false,"comment_ctime":1550134031,"is_pvip":false,"replies":[{"id":24717,"content":"可以找运营加到微信群里，我帮你看看。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550802860,"ip_address":"","comment_id":67351,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师好，想请问下您聚类后得到的那张灰度图像有其他的设置吗？我使用跟您一样的代码，最后生成的图尺寸非常小，且一些细节并没有分类正确...不知道是什么原因？","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442852,"discussion_content":"嗯嗯 加油~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71427,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551340301,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"import PIL.Image as image\n导入的是pillow包，而非pil包。\npil包不支持64位，但是有pillow包代替用。","like_count":18,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439151,"discussion_content":"可以找运营加到微信群里，我帮你看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550802860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66821,"user_name":"淡魂","can_delete":false,"product_type":"c1","uid":1353958,"ip_address":"","ucode":"23EFE8E08A8853","user_header":"","comment_is_top":false,"comment_ctime":1550025286,"is_pvip":false,"replies":[{"id":24714,"content":"一个不错的问题，实际上都是一样的，只要能划分到[0,1]空间内，而且在变化的过程中不存在分母为0的情况即可。因为我们是缩放一个固定的尺寸，所以除以255，反变换的时候乘以255是没有问题的。你也可以自己修改运行下，同样可以得到结果。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550802777,"ip_address":"","comment_id":66821,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"请问老师。自己写Min-Max规范化公式的时候为什么不直接除以255，这样得到的数据也是在[0,1]之间，是因为那个值不可以为0吗？什么原因呢？","like_count":14,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438929,"discussion_content":"一个不错的问题，实际上都是一样的，只要能划分到[0,1]空间内，而且在变化的过程中不存在分母为0的情况即可。因为我们是缩放一个固定的尺寸，所以除以255，反变换的时候乘以255是没有问题的。你也可以自己修改运行下，同样可以得到结果。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550802777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68552,"user_name":"深白浅黑","can_delete":false,"product_type":"c1","uid":1123923,"ip_address":"","ucode":"DCCAA31DE8B127","user_header":"https://static001.geekbang.org/account/avatar/00/11/26/53/60fe31fb.jpg","comment_is_top":false,"comment_ctime":1550542956,"is_pvip":false,"replies":[{"id":24718,"content":"一个很好的问题，实际上label[x,y]是得到当前点的类别，kmeans.cluster_centers_可以得到某类别的数值，因为图像JPG是3个通道，所以通过kmeans.cluster_centers_[label[x, y], 0]，kmeans.cluster_centers_[label[x, y], 1]，kmeans.cluster_centers_[label[x, y], 2]可以获得这3个通道的数值，然后将这些数值作为当前点的数值。因为当前点已经被划分到了这个类别，所以数值是一致的。这样如果原来图像中有N种颜色，现在聚类数是16，相当于每个点的颜色值就变成了其中一个类别的颜色值，也就是变成了16种颜色，完成了聚类（降维）。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550802926,"ip_address":"","comment_id":68552,"utype":2}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师下面函数中，最后的参数代表什么意思？手册上显示的是n_feature，但没说具体的意义，不是很明白。\n        c1 = kmeans.cluster_centers_[label[x, y], 2]\n        c2 = kmeans.cluster_centers_[label[x, y], 1]\n        c3 = kmeans.cluster_centers_[label[x, y], 0]","like_count":7,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439729,"discussion_content":"一个很好的问题，实际上label[x,y]是得到当前点的类别，kmeans.cluster_centers_可以得到某类别的数值，因为图像JPG是3个通道，所以通过kmeans.cluster_centers_[label[x, y], 0]，kmeans.cluster_centers_[label[x, y], 1]，kmeans.cluster_centers_[label[x, y], 2]可以获得这3个通道的数值，然后将这些数值作为当前点的数值。因为当前点已经被划分到了这个类别，所以数值是一致的。这样如果原来图像中有N种颜色，现在聚类数是16，相当于每个点的颜色值就变成了其中一个类别的颜色值，也就是变成了16种颜色，完成了聚类（降维）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550802926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1914504,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","nickname":"Simon","note":"","ucode":"A8A2E3E57BD029","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224699,"discussion_content":"可以打印kmeans.cluster_centers_看下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586324297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71443,"user_name":"cua","can_delete":false,"product_type":"c1","uid":1346950,"ip_address":"","ucode":"68F3983BA62435","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/icpJJI5qPlVwaZoOk6zKicZU9lFGkYyMJXmUXRBicibqBrrEvn7vKsL49ESrkibumd7qXUsXs7Yzj3Dib6npR6hB4ryQ/132","comment_is_top":false,"comment_ctime":1551343697,"is_pvip":false,"replies":[{"id":64489,"content":"参数过多？","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619994,"ip_address":"","comment_id":71443,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"为什么会出现这个错误呢ValueError: too many values to unpack (expected 3)","like_count":4,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441151,"discussion_content":"参数过多？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2009471,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a9/7f/89a6e6e6.jpg","nickname":"泊旭临","note":"","ucode":"7F79FEDBAD4BAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277098,"discussion_content":"你用的图片应该是png格式 ，jpg格式就只有三个参数可以获取","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590999788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1617284,"avatar":"","nickname":"Geek_78a41a","note":"","ucode":"5BF45C53211CA5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19121,"discussion_content":"我的也是，试了一下猜测是jpg解析后是4个通道，我改成c1, c2, c3 ,c4= img.getpixel((x, y))就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569140406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464176,"avatar":"","nickname":"周志翔","note":"","ucode":"22866A9A9650E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1895,"discussion_content":"我的也是，最后解决了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563070986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71445,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551344014,"is_pvip":false,"replies":[{"id":64488,"content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619985,"ip_address":"","comment_id":71445,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"# -*- coding: utf-8 -*-\n# 使用K-means对图像进行聚类，显示分割标识的可视化\nimport numpy as np\nimport PIL.Image as image\nfrom sklearn.cluster import KMeans\nfrom sklearn import preprocessing\nfrom skimage import color\n\n# 加载图像，并对数据进行规范化\ndef load_data(filePath):\n    # 读文件\n    f = open(filePath,&#39;rb&#39;)\n    data = []\n    # 得到图像的像素值\n    img = image.open(f)\n    # 得到图像尺寸\n    width, height = img.size\n    for x in range(width):\n        for y in range(height):\n            # 得到点(x,y)的三个通道值\n            c1, c2, c3 = img.getpixel((x, y))\n            data.append([c1, c2, c3])\n    f.close()\n    # 采用Min-Max规范化\n    mm = preprocessing.MinMaxScaler()\n    data = mm.fit_transform(data)\n    return np.mat(data), width, height\n\n# 加载图像，得到规范化的结果img，以及图像尺寸\nimg, width, height = load_data(&#39;.&#47;baby2.jpg&#39;)\n\n# 用K-Means对图像进行16聚类\nkmeans =KMeans(n_clusters=16)\nkmeans.fit(img)\nlabel = kmeans.predict(img)\n# 将图像聚类结果，转化成图像尺寸的矩阵\nlabel = label.reshape([width, height])\n# 将聚类标识矩阵转化为不同颜色的矩阵\nlabel_color = (color.label2rgb(label)*255).astype(np.uint8)\nlabel_color = label_color.transpose(1,0,2)\nimages = image.fromarray(label_color)\nimages.save(&#39;baby_16.jpg&#39;)","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441153,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68684,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1550571994,"is_pvip":false,"replies":[{"id":24720,"content":"不用np.mat()也是OK的，jpg和png通道数确实需要注意。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550803031,"ip_address":"","comment_id":68684,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"问题：已经使用mm进行数据拟合转换了，为何还要使用np.mat()转换呢？作用在哪里？方便后面使用np.uint8吗？\n\n注意：实战的时候，保存图片为jpg格式\n如果是png格式的话，会出现4个值，导致赋值错误，(R, G, B, A)\n\nimport PIL.Image as image\nimport numpy as np\nimport pandas as pd\n#载入数据\ndef load_data(file):\n    with open(file,&#39;rb&#39;) as f:\n        data=[]\n        #打开文件\n        img=image.open(f)\n        width,height=img.size\n        #获取特征数据\n        for x in range(width):\n            for y in range(height):\n                c1,c2,c3=img.getpixel((x,y))\n                data.append([c1,c2,c3])\n        #进行mm规范化\n        from sklearn.preprocessing import MinMaxScaler\n        mm=MinMaxScaler()\n        data=mm.fit_transform(data)\n        return np.mat(data),width,height\ndata,width,height=load_data(&#39;.&#47;27&#47;baby.jpg&#39;)\n\n#进行聚类\nfrom sklearn.cluster import KMeans\nkmeans=KMeans(n_clusters=16)\nlabel=kmeans.fit_predict(data)\n\n#可视化\n#转换成图像矩阵\nlabel=label.reshape([width,height])\n#生成一张新图片\n# pic_1=image.new(&quot;L&quot;,(width,height))\n# #把像素信息写入\n# #方法1写入灰度值\n# for x in range(width):\n#     for y in range(height):\n#         #按照分类确定灰度值\n#         pic_1.putpixel((x,y),int(label[x][y]*256&#47;16))\n# pic_1.save(&#39;.&#47;27&#47;baby.jpg&#39;)\n\n# #方法2\n# # 使用模组，将表示矩阵转换为各种颜色的矩阵\n# #使用label2rgb(label)*255转化,再把矩阵转化为unit8类型，无符号整数\n# from skimage import color\n# label_color=(color.label2rgb(label)*255).astype(np.uint8)\n# #似乎都需要进行颠倒处理\n# label_color=label_color.transpose(1,0,2)\n# #使用fromarray把矩阵生成图片\n# images=image.fromarray(label_color)\n# images.save(&#39;.&#47;27&#47;baby_color_2.jpg&#39;)\n\n#方法3获取对应原图\n#创建新的图片\nimges1=image.new(&#39;RGB&#39;,(width,height))\n#写入图片\nfor x in  range(width):\n    for y in range(height):\n        #吧范围为0-255的数值投射到1-256\n        #获取第一列即r的值\n        c1=kmeans.cluster_centers_[label[x,y],0]\n        c2 = kmeans.cluster_centers_[label[x, y], 1]\n        c3 = kmeans.cluster_centers_[label[x, y], 2]\n        imges1.putpixel((x,y),(int(c1*256)-1,int(c2*256)-1,int(c3*256)-1))\nimges1.save(&#39;.&#47;27&#47;baby_yasuo.jpg&#39;)","like_count":2,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439796,"discussion_content":"不用np.mat()也是OK的，jpg和png通道数确实需要注意。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550803031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152789,"user_name":"Ronnyz","can_delete":false,"product_type":"c1","uid":1488280,"ip_address":"","ucode":"9F34527B1D343D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b5/98/ffaf2aca.jpg","comment_is_top":false,"comment_ctime":1574080407,"is_pvip":false,"replies":[{"id":59728,"content":"不错 加油Ronnyz","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1574738275,"ip_address":"","comment_id":152789,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"import numpy as np\r\nimport PIL.Image as Image\r\nfrom sklearn import preprocessing\r\nfrom sklearn.cluster import KMeans\r\nfrom skimage import color\r\n\r\n#加载图片，并进行规范化\r\ndef load_data(filepath):\r\n    #读图片\r\n    f=open(filepath,&#39;rb&#39;)\r\n    #获取图片像素\r\n    img=Image.open(f)\r\n    #获取图片尺寸和像素矩阵\r\n    width,height =img.size\r\n    data=[]\r\n    for x in range(width):\r\n        for y in range(height):\r\n            #得到点（x,y）的R,G,B通道值\r\n            r,g,b=img.getpixel((x,y))\r\n            data.append([r,g,b])\r\n    f.close()\r\n    #采用min-max规范化\r\n    mm=preprocessing.MinMaxScaler()\r\n    print(&#39;原位置列表：&#39;)\r\n    print(type(data))\r\n    print(len(data))\r\n    data=mm.fit_transform(data)\r\n    return np.mat(data),width,height\r\n\r\n#加载图片，得到规范化结果\r\nimg,width,height = load_data(&#39;.&#47;kmeans-master&#47;baby.jpg&#39;)\r\nprint(&#39;\\n规范化的像素矩阵：&#39;)\r\nprint(type(img))\r\nprint(img.shape)\r\n#用K-Means进行16聚类\r\nkmeans = KMeans(n_clusters=16)\r\nlabel=kmeans.fit_predict(img)\r\n\r\n#将图像结果，转化成图像尺寸矩阵\r\nlabel=label.reshape([width,height])\r\n\r\n#创建颜色表示矩阵图\r\nlabel_color = (color.label2rgb(label)*255).astype(np.uint8)\r\nlabel_color=label_color.transpose(1,0,2)\r\nprint(&#39;\\n像素颜色矩阵：&#39;)\r\nprint(label_color.shape)\r\nimages=Image.fromarray(label_color)\r\nimages.save(&#39;.&#47;kmeans-master&#47;baby_mark.jpg&#39;)\r\n\r\n#创建新图像，保存聚类压缩之后的结果\r\nimg=Image.new(&#39;RGB&#39;,(width,height))\r\nfor x in range(width):\r\n    for y in range(height):\r\n        r1=kmeans.cluster_centers_[label[x, y],0]\r\n        g1=kmeans.cluster_centers_[label[x, y], 1]\r\n        b1=kmeans.cluster_centers_[label[x, y], 2]\r\n        img.putpixel((x,y),(int(r1*256)-1,int(g1*256)-1,int(b1*256)-1))\r\nimg.save(&#39;.&#47;kmeans-master&#47;baby_new.jpg&#39;)","like_count":1,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439796,"discussion_content":"不用np.mat()也是OK的，jpg和png通道数确实需要注意。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550803031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234043,"user_name":"§mc²ompleXWr","can_delete":false,"product_type":"c1","uid":1932586,"ip_address":"","ucode":"8D2527DE0F760B","user_header":"https://static001.geekbang.org/account/avatar/00/1d/7d/2a/4c7e2e2f.jpg","comment_is_top":false,"comment_ctime":1594561722,"is_pvip":false,"replies":[{"id":103512,"content":"np.mat()函数是将输入解释为矩阵，指的是二维矩阵。\nnp.array()函数是创建一个数组，它可以是一维、二维或更高维。\n当数组为二维时，和矩阵等价，所以你会觉得结果看起来一样。\n","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1616693384,"ip_address":"","comment_id":234043,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"为什么要用np.mat(data)??\n我用array()跑出来的结果完全是一样的啊。。","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501251,"discussion_content":"np.mat()函数是将输入解释为矩阵，指的是二维矩阵。\nnp.array()函数是创建一个数组，它可以是一维、二维或更高维。\n当数组为二维时，和矩阵等价，所以你会觉得结果看起来一样。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616693384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187792,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1f/d0/660502a4.jpg","nickname":"初","note":"","ucode":"E124D8A566DA43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":647341,"discussion_content":"mat在numpy2.0没了，替代品是asmatrix，但是asmatrix不给fit，我切回array了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1719900750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75298,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1552375405,"is_pvip":false,"replies":[{"id":64434,"content":"嗯嗯 加油~","user_name":"作者回复","user_name_real":"cy","uid":1306094,"ctime":1577619171,"ip_address":"","comment_id":75298,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"极客时间 pc界面终于改了。。之前的界面找某篇文章费死个劲","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442852,"discussion_content":"嗯嗯 加油~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67351,"user_name":"Rickie","can_delete":false,"product_type":"c1","uid":1352052,"ip_address":"","ucode":"F859B7837DFD18","user_header":"https://static001.geekbang.org/account/avatar/00/14/a1/74/3dfa4436.jpg","comment_is_top":false,"comment_ctime":1550134031,"is_pvip":false,"replies":[{"id":24717,"content":"可以找运营加到微信群里，我帮你看看。","user_name":"编辑回复","user_name_real":"何昌梅","uid":1165037,"ctime":1550802860,"ip_address":"","comment_id":67351,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"老师好，想请问下您聚类后得到的那张灰度图像有其他的设置吗？我使用跟您一样的代码，最后生成的图尺寸非常小，且一些细节并没有分类正确...不知道是什么原因？","like_count":0,"discussions":[{"author":{"id":1165037,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c6/ed/89a2dc13.jpg","nickname":"丢了个丢丢丢","note":"","ucode":"BDD7E97E0E5E96","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439151,"discussion_content":"可以找运营加到微信群里，我帮你看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550802860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71427,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1551340301,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100021701,"comment_content":"import PIL.Image as image\n导入的是pillow包，而非pil包。\npil包不支持64位，但是有pillow包代替用。","like_count":18,"discussions":[{"author":{"id":1257490,"avatar":"https://static001.geekbang.org/account/avatar/00/13/30/12/7144b8b2.jpg","nickname":"mozlingyu","note":"","ucode":"2ECA45816F2D22","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287907,"discussion_content":"PIL 很久不更新，只支持 2.7，pillow 是更新支持 3.x 版本 python 的 PIL 非官方版本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593585476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75176,"user_name":"vortual","can_delete":false,"product_type":"c1","uid":1258515,"ip_address":"","ucode":"1161CD103110C0","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/13/d43ff5ed.jpg","comment_is_top":false,"comment_ctime":1552360175,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"衷心希望老师能开一讲讲下数据规范化的问题。从之前的几讲总是遇到有些是minmax规范化，有些是需要正态分布，希望老师能讲下具体什么时候用哪种，而且规范化的好处，目前知道的是加快收敛和降低维度，但为啥还不是很清楚","like_count":9},{"had_liked":false,"id":69952,"user_name":"Geek_hve78z","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550915295,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"新概念总结\n1、图像分割就是把图像分成若干个特定的、具有独特性质的区域并提出感兴趣目标的技术和过程。它是由图像处理到图像分析的关键步骤\n\n有一个问题，最后一个案例中，图像分割，输出原图有什么意义","like_count":3},{"had_liked":false,"id":391591,"user_name":"手指饼干","can_delete":false,"product_type":"c1","uid":1048607,"ip_address":"广东","ucode":"1AC502D2B782F0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0M3kK7d2sLapYh9VgqzQargLNkiaJbJZTDNjzLhm9s9FYbFUVDSKa74yvcvH5IHWgknuibmh9fObbrHXvfAib28IQ/132","comment_is_top":false,"comment_ctime":1718611596,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"np.mat 已经废弃，需要用 np.array 替代","like_count":1},{"had_liked":false,"id":179049,"user_name":"Neo","can_delete":false,"product_type":"c1","uid":1812206,"ip_address":"","ucode":"A8520B93E2620A","user_header":"","comment_is_top":false,"comment_ctime":1581904303,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"这里好像没有设置评估聚类表现的环节？请问如何比较不同k值的表现呢","like_count":1,"discussions":[{"author":{"id":1149004,"avatar":"https://static001.geekbang.org/account/avatar/00/11/88/4c/2c3d2c7d.jpg","nickname":"小强","note":"","ucode":"CC3D3A9E5D9A42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306835,"discussion_content":"一脸懵逼的进来，一脸懵逼的出去，不知道有啥作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600400619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1914504,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","nickname":"Simon","note":"","ucode":"A8A2E3E57BD029","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224686,"discussion_content":"用算法输出的原图跟真正的原图不一样哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586323220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83146,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1554440099,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"图像分割的主要工作在于数据的预处理，同时分割为几类需要人工指定这个很不方便","like_count":1},{"had_liked":false,"id":382568,"user_name":"静静呀","can_delete":false,"product_type":"c1","uid":3690337,"ip_address":"上海","ucode":"C0540C96A261BF","user_header":"https://static001.geekbang.org/account/avatar/00/38/4f/61/018352d4.jpg","comment_is_top":false,"comment_ctime":1697596794,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"老师，这个算法是不是可以用来压缩图片呢，通过聚类后图片确实变小了很多，也变模糊了，QQ相册里的图片是通过类似方式处理的吗","like_count":0},{"had_liked":false,"id":272259,"user_name":"McKee Chen","can_delete":false,"product_type":"c1","uid":2037505,"ip_address":"","ucode":"F74B76542FAB65","user_header":"https://static001.geekbang.org/account/avatar/00/1f/17/01/1c5309a3.jpg","comment_is_top":false,"comment_ctime":1610008803,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"学习本节课的体会：\n1.运用K-Means进行图像分割需要灵活运用矩阵与图像之间的转换，以及label2rgb、fromarray、transpose函数的使用和理解；\n2.在数据规范化这一处理上可以使用kmeans自带的函数，也可以自行进行数据规范化(前提是知道数值所处的范围)；\n3.对图像通道、灰度值等有了了解；\n4.还是得多写代码，才能熟能生巧，将知识吸收成自己的。\n\n#用 K-Means 聚类方法将 baby.jpg 的图片分割成 16 个部分\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler\nfrom skimage import color\nimport PIL.Image as image\nimport numpy as np\n\ndef load_data(filepath):\n    #读取文件\n    f = open(filepath, &#39;rb&#39;)\n    data = []\n    #得到图像的像素值\n    img = image.open(f)#输入文件路径，选择可读写二进制文件模式\n    #得到图像尺寸\n    width, height = img.size\n    for x in range(width):\n        for y in range(height):\n            #得到点 (x, y) 的三个通道值\n            c1, c2, c3 = img.getpixel((x, y))\n            data.append([c1, c2, c3])\n    f.close()\n    #采用MinMax规范化\n    mm = MinMaxScaler()\n    data = mm.fit_transform(data)\n    return np.mat(data), width, height\n#加载图像，得到规范化结果 img，以及图像尺寸 width， height\nimg, width, height = load_data(r&#39;C:\\Users\\Desktop\\baby.jpg&#39;)\n#用 K-Means 对图像进行16聚类\nkmeans = KMeans(n_clusters=16)\nlabel = kmeans.fit_predict(img)#获得聚类结果\n#将图像聚类结果，转化成图像尺寸的矩阵\nlabel = label.reshape([width, height])\n#将聚类表示转化成不同颜色的矩阵\nlabel_color = (color.label2rgb(label)*255).astype(np.uint8)\nlabel_color = label_color.transpose(1, 0, 2)\nimages = image.fromarray(label_color)\n#图片保存\nimages.save(r&#39;C:\\Users\\Desktop\\baby_new_color.jpg&#39;)","like_count":0},{"had_liked":false,"id":177325,"user_name":"苹果","can_delete":false,"product_type":"c1","uid":1761988,"ip_address":"","ucode":"5D0FA9D8560FD8","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e2/c4/25acaa38.jpg","comment_is_top":false,"comment_ctime":1581347581,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"聚类处理后，比如n_claster = 16 ,比较原图片更模糊些，可见，k值取越小，图片更模糊，用聚类算法使图片模糊，好像杀鸡焉用牛刀呀","like_count":0},{"had_liked":false,"id":76761,"user_name":"三硝基甲苯","can_delete":false,"product_type":"c1","uid":1141929,"ip_address":"","ucode":"C492B058C2A5C0","user_header":"","comment_is_top":false,"comment_ctime":1552702874,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":" 一开始对那个baby的图进行16份用Kmeans分类后的颜色感觉到怪怪的，折腾了好久才反应过来，这个是个分类，还好醒悟的早，不然这个要纠结好久，以为自己哪里有问题。。","like_count":0},{"had_liked":false,"id":67245,"user_name":"梁利文","can_delete":false,"product_type":"c1","uid":1302512,"ip_address":"","ucode":"B333F95AC750EE","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/f0/ea4d36a7.jpg","comment_is_top":false,"comment_ctime":1550114525,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"那连接只能在手机上看，在电脑上看不到，不方便看案例和操作","like_count":0,"discussions":[{"author":{"id":1914504,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","nickname":"Simon","note":"","ucode":"A8A2E3E57BD029","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224688,"discussion_content":"这里是应用算法，不是评估算法。不同k值的表现，看上一节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586323321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75176,"user_name":"vortual","can_delete":false,"product_type":"c1","uid":1258515,"ip_address":"","ucode":"1161CD103110C0","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/13/d43ff5ed.jpg","comment_is_top":false,"comment_ctime":1552360175,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"衷心希望老师能开一讲讲下数据规范化的问题。从之前的几讲总是遇到有些是minmax规范化，有些是需要正态分布，希望老师能讲下具体什么时候用哪种，而且规范化的好处，目前知道的是加快收敛和降低维度，但为啥还不是很清楚","like_count":9},{"had_liked":false,"id":69952,"user_name":"Geek_hve78z","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1550915295,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"新概念总结\n1、图像分割就是把图像分成若干个特定的、具有独特性质的区域并提出感兴趣目标的技术和过程。它是由图像处理到图像分析的关键步骤\n\n有一个问题，最后一个案例中，图像分割，输出原图有什么意义","like_count":3,"discussions":[{"author":{"id":1149004,"avatar":"https://static001.geekbang.org/account/avatar/00/11/88/4c/2c3d2c7d.jpg","nickname":"小强","note":"","ucode":"CC3D3A9E5D9A42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306835,"discussion_content":"一脸懵逼的进来，一脸懵逼的出去，不知道有啥作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600400619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1914504,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","nickname":"Simon","note":"","ucode":"A8A2E3E57BD029","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224686,"discussion_content":"用算法输出的原图跟真正的原图不一样哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586323220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":391591,"user_name":"手指饼干","can_delete":false,"product_type":"c1","uid":1048607,"ip_address":"广东","ucode":"1AC502D2B782F0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0M3kK7d2sLapYh9VgqzQargLNkiaJbJZTDNjzLhm9s9FYbFUVDSKa74yvcvH5IHWgknuibmh9fObbrHXvfAib28IQ/132","comment_is_top":false,"comment_ctime":1718611596,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"np.mat 已经废弃，需要用 np.array 替代","like_count":1},{"had_liked":false,"id":179049,"user_name":"Neo","can_delete":false,"product_type":"c1","uid":1812206,"ip_address":"","ucode":"A8520B93E2620A","user_header":"","comment_is_top":false,"comment_ctime":1581904303,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"这里好像没有设置评估聚类表现的环节？请问如何比较不同k值的表现呢","like_count":1,"discussions":[{"author":{"id":1914504,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","nickname":"Simon","note":"","ucode":"A8A2E3E57BD029","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224688,"discussion_content":"这里是应用算法，不是评估算法。不同k值的表现，看上一节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586323321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83146,"user_name":"滨滨","can_delete":false,"product_type":"c1","uid":1334567,"ip_address":"","ucode":"881EFA798BEE34","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/27/74e152d3.jpg","comment_is_top":false,"comment_ctime":1554440099,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"图像分割的主要工作在于数据的预处理，同时分割为几类需要人工指定这个很不方便","like_count":1},{"had_liked":false,"id":382568,"user_name":"静静呀","can_delete":false,"product_type":"c1","uid":3690337,"ip_address":"上海","ucode":"C0540C96A261BF","user_header":"https://static001.geekbang.org/account/avatar/00/38/4f/61/018352d4.jpg","comment_is_top":false,"comment_ctime":1697596794,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"老师，这个算法是不是可以用来压缩图片呢，通过聚类后图片确实变小了很多，也变模糊了，QQ相册里的图片是通过类似方式处理的吗","like_count":0},{"had_liked":false,"id":272259,"user_name":"McKee Chen","can_delete":false,"product_type":"c1","uid":2037505,"ip_address":"","ucode":"F74B76542FAB65","user_header":"https://static001.geekbang.org/account/avatar/00/1f/17/01/1c5309a3.jpg","comment_is_top":false,"comment_ctime":1610008803,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"学习本节课的体会：\n1.运用K-Means进行图像分割需要灵活运用矩阵与图像之间的转换，以及label2rgb、fromarray、transpose函数的使用和理解；\n2.在数据规范化这一处理上可以使用kmeans自带的函数，也可以自行进行数据规范化(前提是知道数值所处的范围)；\n3.对图像通道、灰度值等有了了解；\n4.还是得多写代码，才能熟能生巧，将知识吸收成自己的。\n\n#用 K-Means 聚类方法将 baby.jpg 的图片分割成 16 个部分\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler\nfrom skimage import color\nimport PIL.Image as image\nimport numpy as np\n\ndef load_data(filepath):\n    #读取文件\n    f = open(filepath, &#39;rb&#39;)\n    data = []\n    #得到图像的像素值\n    img = image.open(f)#输入文件路径，选择可读写二进制文件模式\n    #得到图像尺寸\n    width, height = img.size\n    for x in range(width):\n        for y in range(height):\n            #得到点 (x, y) 的三个通道值\n            c1, c2, c3 = img.getpixel((x, y))\n            data.append([c1, c2, c3])\n    f.close()\n    #采用MinMax规范化\n    mm = MinMaxScaler()\n    data = mm.fit_transform(data)\n    return np.mat(data), width, height\n#加载图像，得到规范化结果 img，以及图像尺寸 width， height\nimg, width, height = load_data(r&#39;C:\\Users\\Desktop\\baby.jpg&#39;)\n#用 K-Means 对图像进行16聚类\nkmeans = KMeans(n_clusters=16)\nlabel = kmeans.fit_predict(img)#获得聚类结果\n#将图像聚类结果，转化成图像尺寸的矩阵\nlabel = label.reshape([width, height])\n#将聚类表示转化成不同颜色的矩阵\nlabel_color = (color.label2rgb(label)*255).astype(np.uint8)\nlabel_color = label_color.transpose(1, 0, 2)\nimages = image.fromarray(label_color)\n#图片保存\nimages.save(r&#39;C:\\Users\\Desktop\\baby_new_color.jpg&#39;)","like_count":0},{"had_liked":false,"id":177325,"user_name":"苹果","can_delete":false,"product_type":"c1","uid":1761988,"ip_address":"","ucode":"5D0FA9D8560FD8","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e2/c4/25acaa38.jpg","comment_is_top":false,"comment_ctime":1581347581,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"聚类处理后，比如n_claster = 16 ,比较原图片更模糊些，可见，k值取越小，图片更模糊，用聚类算法使图片模糊，好像杀鸡焉用牛刀呀","like_count":0},{"had_liked":false,"id":76761,"user_name":"三硝基甲苯","can_delete":false,"product_type":"c1","uid":1141929,"ip_address":"","ucode":"C492B058C2A5C0","user_header":"","comment_is_top":false,"comment_ctime":1552702874,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":" 一开始对那个baby的图进行16份用Kmeans分类后的颜色感觉到怪怪的，折腾了好久才反应过来，这个是个分类，还好醒悟的早，不然这个要纠结好久，以为自己哪里有问题。。","like_count":0},{"had_liked":false,"id":67245,"user_name":"梁利文","can_delete":false,"product_type":"c1","uid":1302512,"ip_address":"","ucode":"B333F95AC750EE","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/f0/ea4d36a7.jpg","comment_is_top":false,"comment_ctime":1550114525,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100021701,"comment_content":"那连接只能在手机上看，在电脑上看不到，不方便看案例和操作","like_count":0}]}