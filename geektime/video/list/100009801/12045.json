{"id":12045,"title":"22 | 理解 Kotlin 中的常量与只读","content":"<h1>源代码及 PDF 课件地址：</h1><p><strong><a href=\"https://gitee.com/geektime-geekbang/KotlinPrimer\">https://gitee.com/geektime-geekbang/KotlinPrimer</a></strong></p>","comments":[{"had_liked":false,"id":50104,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c3","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1544867347,"is_pvip":false,"replies":[{"id":19070,"content":"就是不写在类里面，直接写在文件中","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1545380386,"ip_address":"","comment_id":50104,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"topLevel 是什么意思","like_count":2,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432878,"discussion_content":"就是不写在类里面，直接写在文件中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545380386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19706,"user_name":"null","can_delete":false,"product_type":"c3","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1533981787,"is_pvip":false,"replies":[{"id":6900,"content":"语义上没有区别，在使用上可以理解为java的final没有问题","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1534121615,"ip_address":"","comment_id":19706,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"老师，还是没太懂 var 和 val 之间的区别。\nvar 与 val，除了 val 不能有 setter 方法，还有其他的区别么？\n比如用法上，在什么场景使用 var，什么场景使用 val？语义上又有啥区别？谢谢","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421949,"discussion_content":"语义上没有区别，在使用上可以理解为java的final没有问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534121615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1710802,"avatar":"","nickname":"hei_dou","note":"","ucode":"1C358A040117A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375579,"discussion_content":"Kotlin推荐优先考虑使用val，只有那些你觉得需要改变变量值的情况下才使用var。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621753497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64681,"user_name":"edmondz","can_delete":false,"product_type":"c3","uid":1003778,"ip_address":"","ucode":"EDC0A8F6675C7D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/02/c9b03902.jpg","comment_is_top":false,"comment_ctime":1548857885,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"通过重写get方法达到了近似改变person类val age的例子非常不恰当。会让一部分同学对于val的意义以及var val的区别更加疑惑。\nvar可读写的变量，任何时候都可以通过set方法改变其值。\nval只读变量，只能在初始化时赋值，相当于java的中final修饰的变量。","like_count":8},{"had_liked":false,"id":341293,"user_name":"抱紧我的小鲤鱼","can_delete":false,"product_type":"c3","uid":1014603,"ip_address":"","ucode":"139780FB860FA3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/4b/95812b15.jpg","comment_is_top":false,"comment_ctime":1649505060,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"const 关键字 不可单独使用，只能与 val 组合使用.\n\n1. const val 只可以修饰top-level变量，val 无限制\n\n2. const val 字节码为 public final static，可以直接访问。而 val 字节码为 private final static，并且val 会生成方法getNormalObject()，通过方法调用访问。","like_count":1}]}