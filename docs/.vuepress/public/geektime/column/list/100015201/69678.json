{"id":69678,"title":"40 | Kubernetes的资源模型与资源管理","content":"<p>你好，我是张磊。今天我和你分享的主题是：Kubernetes的资源模型与资源管理。</p><p>作为一个容器集群编排与管理项目，Kubernetes为用户提供的基础设施能力，不仅包括了我在前面为你讲述的应用定义和描述的部分，还包括了对应用的资源管理和调度的处理。那么，从今天这篇文章开始，我就来为你详细讲解一下后面这部分内容。</p><p><span class=\"orange\">而作为Kubernetes的资源管理与调度部分的基础，我们要从它的资源模型开始说起。</span></p><p>我在前面的文章中已经提到过，在Kubernetes里，Pod是最小的原子调度单位。这也就意味着，所有跟调度和资源管理相关的属性都应该是属于Pod对象的字段。而这其中最重要的部分，就是Pod的CPU和内存配置，如下所示：</p><pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: frontend\nspec:\n  containers:\n  - name: db\n    image: mysql\n    env:\n    - name: MYSQL_ROOT_PASSWORD\n      value: &quot;password&quot;\n    resources:\n      requests:\n        memory: &quot;64Mi&quot;\n        cpu: &quot;250m&quot;\n      limits:\n        memory: &quot;128Mi&quot;\n        cpu: &quot;500m&quot;\n  - name: wp\n    image: wordpress\n    resources:\n      requests:\n        memory: &quot;64Mi&quot;\n        cpu: &quot;250m&quot;\n      limits:\n        memory: &quot;128Mi&quot;\n        cpu: &quot;500m&quot;\n</code></pre><blockquote>\n<p>备注：关于哪些属性属于Pod对象，而哪些属性属于Container，你可以在回顾一下第14篇文章<a href=\"https://time.geekbang.org/column/article/40366\">《深入解析Pod对象（一）：基本概念》</a>中的相关内容。</p>\n</blockquote><p>在Kubernetes中，像CPU这样的资源被称作“可压缩资源”（compressible resources）。它的典型特点是，当可压缩资源不足时，Pod只会“饥饿”，但不会退出。</p><p>而像内存这样的资源，则被称作“不可压缩资源（incompressible resources）。当不可压缩资源不足时，Pod就会因为OOM（Out-Of-Memory）被内核杀掉。</p><!-- [[[read_end]]] --><p>而由于Pod可以由多个Container组成，所以CPU和内存资源的限额，是要配置在每个Container的定义上的。这样，Pod整体的资源配置，就由这些Container的配置值累加得到。</p><p>其中，Kubernetes里为CPU设置的单位是“CPU的个数”。比如，cpu=1指的就是，这个Pod的CPU限额是1个CPU。当然，具体“1个CPU”在宿主机上如何解释，是1个CPU核心，还是1个vCPU，还是1个CPU的超线程（Hyperthread），完全取决于宿主机的CPU实现方式。Kubernetes只负责保证Pod能够使用到“1个CPU”的计算能力。</p><p>此外，Kubernetes允许你将CPU限额设置为分数，比如在我们的例子里，CPU limits的值就是500m。所谓500m，指的就是500 millicpu，也就是0.5个CPU的意思。这样，这个Pod就会被分配到1个CPU一半的计算能力。</p><p>当然，<strong>你也可以直接把这个配置写成cpu=0.5。但在实际使用时，我还是推荐你使用500m的写法，毕竟这才是Kubernetes内部通用的CPU表示方式。</strong></p><p>而对于内存资源来说，它的单位自然就是bytes。Kubernetes支持你使用Ei、Pi、Ti、Gi、Mi、Ki（或者E、P、T、G、M、K）的方式来作为bytes的值。比如，在我们的例子里，Memory requests的值就是64MiB (2的26次方bytes) 。这里要注意区分MiB（mebibyte）和MB（megabyte）的区别。</p><blockquote>\n<p>备注：1Mi=1024*1024；1M=1000*1000</p>\n</blockquote><p>此外，不难看到，<strong>Kubernetes里Pod的CPU和内存资源，实际上还要分为limits和requests两种情况</strong>，如下所示：</p><pre><code>spec.containers[].resources.limits.cpu\nspec.containers[].resources.limits.memory\nspec.containers[].resources.requests.cpu\nspec.containers[].resources.requests.memory\n</code></pre><p>这两者的区别其实非常简单：在调度的时候，kube-scheduler只会按照requests的值进行计算。而在真正设置Cgroups限制的时候，kubelet则会按照limits的值来进行设置。</p><p>更确切地说，当你指定了requests.cpu=250m之后，相当于将Cgroups的cpu.shares的值设置为(250/1000)*1024。而当你没有设置requests.cpu的时候，cpu.shares默认则是1024。这样，Kubernetes就通过cpu.shares完成了对CPU时间的按比例分配。</p><p>而如果你指定了limits.cpu=500m之后，则相当于将Cgroups的cpu.cfs_quota_us的值设置为(500/1000)*100ms，而cpu.cfs_period_us的值始终是100ms。这样，Kubernetes就为你设置了这个容器只能用到CPU的50%。</p><p>而对于内存来说，当你指定了limits.memory=128Mi之后，相当于将Cgroups的memory.limit_in_bytes设置为128 * 1024 * 1024。而需要注意的是，在调度的时候，调度器只会使用requests.memory=64Mi来进行判断。</p><p><strong>Kubernetes这种对CPU和内存资源限额的设计，实际上参考了Borg论文中对“动态资源边界”的定义</strong>，既：容器化作业在提交时所设置的资源边界，并不一定是调度系统所必须严格遵守的，这是因为在实际场景中，大多数作业使用到的资源其实远小于它所请求的资源限额。</p><p>基于这种假设，Borg在作业被提交后，会主动减小它的资源限额配置，以便容纳更多的作业、提升资源利用率。而当作业资源使用量增加到一定阈值时，Borg会通过“快速恢复”过程，还原作业原始的资源限额，防止出现异常情况。</p><p>而Kubernetes的requests+limits的做法，其实就是上述思路的一个简化版：用户在提交Pod时，可以声明一个相对较小的requests值供调度器使用，而Kubernetes真正设置给容器Cgroups的，则是相对较大的limits值。不难看到，这跟Borg的思路相通的。</p><p><span class=\"orange\">在理解了Kubernetes资源模型的设计之后，我再来和你谈谈Kubernetes里的QoS模型。</span>在Kubernetes中，不同的requests和limits的设置方式，其实会将这个Pod划分到不同的QoS级别当中。</p><p><strong>当Pod里的每一个Container都同时设置了requests和limits，并且requests和limits值相等的时候，这个Pod就属于Guaranteed类别</strong>，如下所示：</p><pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: qos-demo\n  namespace: qos-example\nspec:\n  containers:\n  - name: qos-demo-ctr\n    image: nginx\n    resources:\n      limits:\n        memory: &quot;200Mi&quot;\n        cpu: &quot;700m&quot;\n      requests:\n        memory: &quot;200Mi&quot;\n        cpu: &quot;700m&quot;\n</code></pre><p>当这个Pod创建之后，它的qosClass字段就会被Kubernetes自动设置为Guaranteed。需要注意的是，当Pod仅设置了limits没有设置requests的时候，Kubernetes会自动为它设置与limits相同的requests值，所以，这也属于Guaranteed情况。</p><p><strong>而当Pod不满足Guaranteed的条件，但至少有一个Container设置了requests。那么这个Pod就会被划分到Burstable类别</strong>。比如下面这个例子：</p><pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: qos-demo-2\n  namespace: qos-example\nspec:\n  containers:\n  - name: qos-demo-2-ctr\n    image: nginx\n    resources:\n      limits\n        memory: &quot;200Mi&quot;\n      requests:\n        memory: &quot;100Mi&quot;\n</code></pre><p><strong>而如果一个Pod既没有设置requests，也没有设置limits，那么它的QoS类别就是BestEffort</strong>。比如下面这个例子：</p><pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: qos-demo-3\n  namespace: qos-example\nspec:\n  containers:\n  - name: qos-demo-3-ctr\n    image: nginx\n</code></pre><p>那么，Kubernetes为Pod设置这样三种QoS类别，具体有什么作用呢？</p><p>实际上，<strong>QoS划分的主要应用场景，是当宿主机资源紧张的时候，kubelet对Pod进行Eviction（即资源回收）时需要用到的。</strong></p><p>具体地说，当Kubernetes所管理的宿主机上不可压缩资源短缺时，就有可能触发Eviction。比如，可用内存（memory.available）、可用的宿主机磁盘空间（nodefs.available），以及容器运行时镜像存储空间（imagefs.available）等等。</p><p>目前，Kubernetes为你设置的Eviction的默认阈值如下所示：</p><pre><code>memory.available&lt;100Mi\nnodefs.available&lt;10%\nnodefs.inodesFree&lt;5%\nimagefs.available&lt;15%\n</code></pre><p>当然，上述各个触发条件在kubelet里都是可配置的。比如下面这个例子：</p><pre><code>kubelet --eviction-hard=imagefs.available&lt;10%,memory.available&lt;500Mi,nodefs.available&lt;5%,nodefs.inodesFree&lt;5% --eviction-soft=imagefs.available&lt;30%,nodefs.available&lt;10% --eviction-soft-grace-period=imagefs.available=2m,nodefs.available=2m --eviction-max-pod-grace-period=600\n</code></pre><p>在这个配置中，你可以看到<strong>Eviction在Kubernetes里其实分为Soft和Hard两种模式</strong>。</p><p>其中，Soft Eviction允许你为Eviction过程设置一段“优雅时间”，比如上面例子里的imagefs.available=2m，就意味着当imagefs不足的阈值达到2分钟之后，kubelet才会开始Eviction的过程。</p><p>而Hard Eviction模式下，Eviction过程就会在阈值达到之后立刻开始。</p><blockquote>\n<p>Kubernetes计算Eviction阈值的数据来源，主要依赖于从Cgroups读取到的值，以及使用cAdvisor监控到的数据。</p>\n</blockquote><p>当宿主机的Eviction阈值达到后，就会进入MemoryPressure或者DiskPressure状态，从而避免新的Pod被调度到这台宿主机上。</p><p>而当Eviction发生的时候，kubelet具体会挑选哪些Pod进行删除操作，就需要参考这些Pod的QoS类别了。</p><ul>\n<li>首当其冲的，自然是BestEffort类别的Pod。</li>\n<li>其次，是属于Burstable类别、并且发生“饥饿”的资源使用量已经超出了requests的Pod。</li>\n<li>最后，才是Guaranteed类别。并且，Kubernetes会保证只有当Guaranteed类别的Pod的资源使用量超过了其limits的限制，或者宿主机本身正处于Memory Pressure状态时，Guaranteed的Pod才可能被选中进行Eviction操作。</li>\n</ul><p>当然，对于同QoS类别的Pod来说，Kubernetes还会根据Pod的优先级来进行进一步地排序和选择。</p><p>在理解了Kubernetes里的QoS类别的设计之后，我再来为你讲解一下<span class=\"orange\">Kubernetes里一个非常有用的特性：cpuset的设置。</span></p><p>我们知道，在使用容器的时候，你可以通过设置cpuset把容器绑定到某个CPU的核上，而不是像cpushare那样共享CPU的计算能力。</p><p>这种情况下，由于操作系统在CPU之间进行上下文切换的次数大大减少，容器里应用的性能会得到大幅提升。事实上，<strong>cpuset方式，是生产环境里部署在线应用类型的Pod时，非常常用的一种方式。</strong></p><p>可是，这样的需求在Kubernetes里又该如何实现呢？</p><p>其实非常简单。</p><ul>\n<li>首先，你的Pod必须是Guaranteed的QoS类型；</li>\n<li>然后，你只需要将Pod的CPU资源的requests和limits设置为同一个相等的整数值即可。</li>\n</ul><p>比如下面这个例子：</p><pre><code>spec:\n  containers:\n  - name: nginx\n    image: nginx\n    resources:\n      limits:\n        memory: &quot;200Mi&quot;\n        cpu: &quot;2&quot;\n      requests:\n        memory: &quot;200Mi&quot;\n        cpu: &quot;2&quot;\n</code></pre><p>这时候，该Pod就会被绑定在2个独占的CPU核上。当然，具体是哪两个CPU核，是由kubelet为你分配的。</p><p>以上，就是Kubernetes的资源模型和QoS类别相关的主要内容。</p><h2>总结</h2><p>在本篇文章中，我先为你详细讲解了Kubernetes里对资源的定义方式和资源模型的设计。然后，我为你讲述了Kubernetes里对Pod进行Eviction的具体策略和实践方式。</p><p>正是基于上述讲述，在实际的使用中，我强烈建议你将DaemonSet的Pod都设置为Guaranteed的QoS类型。否则，一旦DaemonSet的Pod被回收，它又会立即在原宿主机上被重建出来，这就使得前面资源回收的动作，完全没有意义了。</p><h2>思考题</h2><p>为什么宿主机进入MemoryPressure或者DiskPressure状态后，新的Pod就不会被调度到这台宿主机上呢？</p><p>感谢你的收听，欢迎你给我留言，也欢迎分享给更多的朋友一起阅读。</p><p></p>","comments":[{"had_liked":false,"id":42104,"user_name":"DJH","can_delete":false,"product_type":"c1","uid":1256740,"ip_address":"","ucode":"2BDEF123B3DB6A","user_header":"https://static001.geekbang.org/account/avatar/00/13/2d/24/28acca15.jpg","comment_is_top":false,"comment_ctime":1542927296,"is_pvip":false,"replies":[{"id":"15118","content":"对","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1542933493,"ip_address":"","comment_id":42104,"utype":1}],"discussion_count":4,"race_medal":0,"score":"302190638016","product_id":100015201,"comment_content":"“为什么宿主机进入 MemoryPressure 或者 Dis...“<br><br>这是因为给宿主机打了污点标记吗？","like_count":71,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429991,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542933493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179126,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOFQ3PxxaIRbdp5o3pNxwyrBl2lyK4Il08cF4ZvXpeAhP5WJA0Rw482WibqweYBnviaX8SdO5Bak8g/132","nickname":"极客土豆","note":"","ucode":"CE48C42B8CBE17","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":253348,"discussion_content":"污点标记是k8s里的专业说法么？ 资源不够了，肯定不能安排上，我觉得这类似生活常识？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588228663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1643296,"avatar":"https://static001.geekbang.org/account/avatar/00/19/13/20/2d22b331.jpg","nickname":"H.Z","note":"","ucode":"728417BD5B4DA8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179126,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOFQ3PxxaIRbdp5o3pNxwyrBl2lyK4Il08cF4ZvXpeAhP5WJA0Rw482WibqweYBnviaX8SdO5Bak8g/132","nickname":"极客土豆","note":"","ucode":"CE48C42B8CBE17","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":401604,"discussion_content":"问的是具体的实现方式，打了污点以后，就不会再调度到这个节点了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633697966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253348,"ip_address":""},"score":401604,"extra":""},{"author":{"id":1218404,"avatar":"https://static001.geekbang.org/account/avatar/00/12/97/64/c4d9ce92.jpg","nickname":"漩涡鸣人","note":"","ucode":"FFF6596A9F90C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179126,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOFQ3PxxaIRbdp5o3pNxwyrBl2lyK4Il08cF4ZvXpeAhP5WJA0Rw482WibqweYBnviaX8SdO5Bak8g/132","nickname":"极客土豆","note":"","ucode":"CE48C42B8CBE17","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":567810,"discussion_content":"他这句话如果没有 k8s 污点背景知识的话，就会有你这种想法，觉得他表达有问题。\n如果有污点背景知识的话，我其实知道他想问的是污点，但是我不确定他是故意这样说来提升难度，还是确实因为没表达好，比较简单的问法应该是问通过什么方式实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651001362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":253348,"ip_address":""},"score":567810,"extra":""}]}]},{"had_liked":false,"id":190196,"user_name":"chenhz","can_delete":false,"product_type":"c1","uid":1078160,"ip_address":"","ucode":"485420EA3282D4","user_header":"https://static001.geekbang.org/account/avatar/00/10/73/90/9118f46d.jpg","comment_is_top":false,"comment_ctime":1584612852,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"160498402804","product_id":100015201,"comment_content":"<br>Pod 是最小的原子调度单位，所有跟调度和资源管理相关的属性，都是 Pod 对象属性的字段。其中最重要的是 Pod 和 CPU 配置。其中，CPU 属于可压缩资源，内存属于不可压缩资源。当可压缩资源不足时，Pod 会饥饿；当不可压缩资源不足时，Pod 就会因为 OOM 被内核杀掉。<br><br>Pod ，即容器组，由多个容器组成，其 CPU 和内存配额在 Container 上定义，其 Container 配置的累加值即为 Pod 的配额。<br><br>## limits 和 requests<br><br>- requests：kube-scheduler 只会按照 requests 的值进行计算。<br>- limits：kubelet 则会按照 limits 的值来进行设置 Cgroups 限制.<br><br><br>## QoS 模型<br>- Guaranteed： 同时设置 requests 和 limits，并且 requests 和 limit 值相等。优势一是在资源不足 Eviction 发生时，最后被删除；并且删除的是 Pod 资源用量超过 limits 时才会被删除；优势二是该模型与 docker cpuset 的方式绑定 CPU 核，避免频繁的上下午文切换，性能会得到大幅提升。<br>- Burstable：不满足 Guaranteed 条件， 但至少有一个 Container 设置了 requests<br>- BestEffort：没有设置 requests 和 limits。<br><br>## Eviction <br><br>```bash<br>kubelet --eviction-hard=imagefs.available&lt;10%,memory.available&lt;500Mi,nodefs.available&lt;5%,nodefs.inodesFree&lt;5% --eviction-soft=imagefs.available&lt;30%,nodefs.available&lt;10% \\<br>--eviction-soft-grace-period=imagefs.available=2m,nodefs.available=2m \\<br>--eviction-max-pod-grace-period=600<br>```<br><br>两种模式：<br>- soft: 如 `eviction-soft-grace-period=imagefs.available=2m`  eviction 会在阈值达到 2 分钟后才会开始<br>- hard：evivtion 会立即开始。<br><br>**eviction 计算原理**： 将 Cgroups （limits属性）设置的值和 cAdvisor 监控的数据相比较。<br><br><br>最佳实践：DaemonSet 的 Pod 都设置为 Guaranteed， 避免进入“回收-&gt;创建-&gt;回收-&gt;创建”的“死循环”。","like_count":38,"discussions":[{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548529,"discussion_content":"如果只设置了CPU的requests和limits，也是Guaranteed？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643248931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041563,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/26/db/45f51ab3.jpg","nickname":"Hongjian","note":"","ucode":"A31DB255FFEE95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299757,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597807771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42329,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1003104,"ip_address":"","ucode":"E8F0F3B000020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","comment_is_top":false,"comment_ctime":1542940704,"is_pvip":false,"replies":[{"id":"15269","content":"是","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1542986740,"ip_address":"","comment_id":42329,"utype":1}],"discussion_count":3,"race_medal":0,"score":"143276861472","product_id":100015201,"comment_content":"老师您好，cpu设置limit之后，容器的cpu使用率永远不会超过这个限制对吗？而mem设置limit之后，容器mem使用率有可能超过这个限制而被kill掉，也就是说设置了cpu limit之后，容器永远不会因为cpu超过限制而被kill对吗","like_count":34,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430050,"discussion_content":"是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542986740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1580926,"avatar":"","nickname":"ch_ort","note":"","ucode":"B79746E687F29E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332573,"discussion_content":"mem设置了limit之后，为什么还有可能超过limit？这个理解不正确吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607263527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1109528,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ee/18/65e89d9c.jpg","nickname":"王大喵","note":"","ucode":"C14AAE3ED964DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1580926,"avatar":"","nickname":"ch_ort","note":"","ucode":"B79746E687F29E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575133,"discussion_content":"内存泄漏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654605818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":332573,"ip_address":""},"score":575133,"extra":""}]}]},{"had_liked":false,"id":42284,"user_name":"wilder","can_delete":false,"product_type":"c1","uid":1007682,"ip_address":"","ucode":"C176379126D007","user_header":"https://static001.geekbang.org/account/avatar/00/0f/60/42/8a79c613.jpg","comment_is_top":false,"comment_ctime":1542937324,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"121802021612","product_id":100015201,"comment_content":"极客时间里面最爱的课程，没有之一，哈哈哈哈哈哈","like_count":28,"discussions":[{"author":{"id":1293354,"avatar":"https://static001.geekbang.org/account/avatar/00/13/bc/2a/00a3d488.jpg","nickname":"gl328518397","note":"","ucode":"05AF4661EF0AAF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18363,"discussion_content":"作者很投入的在分享。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569051054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42984,"user_name":"刘岚乔月","can_delete":false,"product_type":"c1","uid":1095289,"ip_address":"","ucode":"99A9AB4E4E1111","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/79/22e582a5.jpg","comment_is_top":false,"comment_ctime":1543128468,"is_pvip":false,"replies":[{"id":"15418","content":"kubernetes 是云时代的开发者工具。重要的事情只说一遍。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1543192536,"ip_address":"","comment_id":42984,"utype":1}],"discussion_count":2,"race_medal":0,"score":"78852539796","product_id":100015201,"comment_content":"1、3、5都在追文章，一直都有一个疑问，请作者能解惑下。<br>对于主java是其他语言（非运维）的同学来说，我们是否需要深入了解k8s和docker（还是停留在使用层面） 我想一直跟着学的同学大部门还是冲着能找到更好的工作去的（有情怀的同学请忽略）<br>目前更大公司的招聘对于要求掌握k8s和docker的基本上都是运维岗位。<br>并没有招聘java要求掌握k8s和docker，面试中也不曾问到。感觉很尴尬 - -！<br>毕竟时间成本在哪，请作者能阐述下自己的观点！<br>","like_count":18,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430266,"discussion_content":"kubernetes 是云时代的开发者工具。重要的事情只说一遍。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1543192536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b8/8b/68555cbf.jpg","nickname":"Geek_122dd9","note":"","ucode":"12BDEF1FC06633","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586441,"discussion_content":"多学学，增长下见识也好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662216720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45243,"user_name":"Flying","can_delete":false,"product_type":"c1","uid":1284267,"ip_address":"","ucode":"44B86B33AA461E","user_header":"","comment_is_top":false,"comment_ctime":1543566344,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"40198272008","product_id":100015201,"comment_content":"请用老师，cpuset为2，这个Pod就独占两个cpu核上，假如宿主机总共只有10个cpu核，那么这台机就只能运行5个cpuset=2的Pod吗","like_count":10,"discussions":[{"author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114047,"discussion_content":"我的理解：cpuset为2,这要求pod的cpu.request为2,那么对于一个10 c的节点，allocatable最大也是10c，所以也就最多可以部署五个cpuset=2的pod了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577953861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548530,"discussion_content":"肯定不是的呀，全占的话（设置这种pod的cpu不会被其他pod选中）肯定小于五，因为还有系统和组件需要。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643249194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":114047,"ip_address":""},"score":548530,"extra":""}]}]},{"had_liked":false,"id":42346,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1542941887,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"35902680255","product_id":100015201,"comment_content":"能否分享一下给namespace 设置quota的经验呢？<br><br>如果设置的太小，会造成资源的浪费。如果设置太大，又怕起不到限制的作用。一个namespace使用资源太多可能会影响其他namespace用户的使用。<br><br>这是否也是namespace只能做soft multi-tenant的佐证呢？Cloudfoundry应该是按照实际的usage来设置space的quota，如果有监控插件，k8s可以也按照实际的usage来设置quota吗？","like_count":8,"discussions":[{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547534,"discussion_content":"为namespace设置LimitRange吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642735355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1207457,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/a1/80d83f0a.jpg","nickname":"Ellison","note":"","ucode":"A2FB94D4F6A332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351310,"discussion_content":"我理解现在是可以设置namespace级别的限制cpu和内存使用率的， 叫做priorityClassName","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614238820,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161272,"user_name":"黑米","can_delete":false,"product_type":"c1","uid":1018706,"ip_address":"","ucode":"E7DBEA7867862A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8b/52/6659dc1b.jpg","comment_is_top":false,"comment_ctime":1576161478,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"31640932550","product_id":100015201,"comment_content":"如果一个java应用JAVA_OPTS配置了-Xms4g -Xmx4g，k8s这边要配置多少的limit比较合适？直接4Gi的话应用内存达到一个阈值会被重启。","like_count":7,"discussions":[{"author":{"id":1227639,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bb/77/e1391dd8.jpg","nickname":"旺旺","note":"","ucode":"2067D3BCCA7C0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344084,"discussion_content":"这两个参数对于java程序得堆内存限制得不是很友好，我们生产环境用得   -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap \\\n                            -XX:MaxRAMFraction=2 堆内存用得limit参数得一半，也不知道对大家有没有帮助，欢迎大家指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611285642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1259608,"avatar":"https://static001.geekbang.org/account/avatar/00/13/38/58/816a2469.jpg","nickname":"李阳","note":"","ucode":"9FD607383ACB7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1227639,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bb/77/e1391dd8.jpg","nickname":"旺旺","note":"","ucode":"2067D3BCCA7C0A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550272,"discussion_content":"这个参数 新版的jdk 默认支持  不需要添加了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644462626,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":344084,"ip_address":""},"score":550272,"extra":""}]},{"author":{"id":1092218,"avatar":"https://static001.geekbang.org/account/avatar/00/10/aa/7a/ae8c247d.jpg","nickname":"指尖以东","note":"","ucode":"1DEE134FE92FD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331039,"discussion_content":"我们给的6-8g内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606750291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010922,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","nickname":"坤","note":"","ucode":"74E6838226A405","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263649,"discussion_content":"这个问题，我们性能压测时出现fullgc了，在纯docker环境下是没问题的，在k8s中，jstat中O选项的值一起涨，不下降。有遇到过的同学吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589237989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179418,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/1a/af425223.jpg","nickname":"吴正轩","note":"","ucode":"6669ACD7B27687","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204347,"discussion_content":"这个要根据实际情况看呢，如果用了NIO，还需要额外的直接内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584158197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201777,"avatar":"https://static001.geekbang.org/account/avatar/00/12/56/71/fb2d9923.jpg","nickname":"Kerwin","note":"","ucode":"082382EFB0A1A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":123002,"discussion_content":"require就要加上metaspace和一些堆外内存，我公司的应用大概需要768m内存，limit的值再额外+1GB吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578384975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1306715,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ooYDTtTQHL9CZQmonDOQSKCHNJ11B29uEu4ZdUS3ejg5513KlzZE0zPLqUbWcWdZ7zn4KCkGAIo0aImUvBBSgA/132","nickname":"mapsic","note":"","ucode":"1A2233755E2296","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1201777,"avatar":"https://static001.geekbang.org/account/avatar/00/12/56/71/fb2d9923.jpg","nickname":"Kerwin","note":"","ucode":"082382EFB0A1A2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375577,"discussion_content":"我们这边额外在加1GB，不够用的，会OOM","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621752182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":123002,"ip_address":""},"score":375577,"extra":""},{"author":{"id":2649310,"avatar":"https://static001.geekbang.org/account/avatar/00/28/6c/de/1934abe6.jpg","nickname":"刘超","note":"","ucode":"78B617AADA9035","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1306715,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ooYDTtTQHL9CZQmonDOQSKCHNJ11B29uEu4ZdUS3ejg5513KlzZE0zPLqUbWcWdZ7zn4KCkGAIo0aImUvBBSgA/132","nickname":"mapsic","note":"","ucode":"1A2233755E2296","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415158,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636995027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":375577,"ip_address":""},"score":415158,"extra":""}]}]},{"had_liked":false,"id":43838,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1543307757,"is_pvip":false,"replies":[{"id":"15724","content":"是的","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1543371528,"ip_address":"","comment_id":43838,"utype":1}],"discussion_count":3,"race_medal":0,"score":"31608078829","product_id":100015201,"comment_content":"在namespace limitRange 里面设置了default request 和 default limit之后，创建出来的pod即使不显式指定limit和request，是不是也是guaranteed？","like_count":7,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430519,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543371528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759682,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d9/c2/5d28b113.jpg","nickname":"蒋星辰","note":"","ucode":"64F78B0BA5A787","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348569,"discussion_content":"如果两个默认值不想等，也是guaranteed?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612625938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1759682,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d9/c2/5d28b113.jpg","nickname":"蒋星辰","note":"","ucode":"64F78B0BA5A787","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548531,"discussion_content":"他们讨论的应该是相等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643249339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348569,"ip_address":""},"score":548531,"extra":""}]}]},{"had_liked":false,"id":42232,"user_name":"unique","can_delete":false,"product_type":"c1","uid":1102846,"ip_address":"","ucode":"32AEF0883648F1","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/fe/7558e3f2.jpg","comment_is_top":false,"comment_ctime":1542934807,"is_pvip":false,"replies":[{"id":"15271","content":"对","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1542986837,"ip_address":"","comment_id":42232,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27312738583","product_id":100015201,"comment_content":"这时候，该 Pod 就会被绑定在 2 个独占的 CPU 核上。<br><br>独占的意思就是其它pod 不能使用这两个CPU了么？","like_count":6,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430015,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542986837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1389362,"avatar":"https://static001.geekbang.org/account/avatar/00/15/33/32/8f304f6c.jpg","nickname":"--SNIPER","note":"","ucode":"7439EC0458BD7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352093,"discussion_content":"Guaranteed类型的pod并不会去设置/sys/fs/cgroup/cpuset/cpuset.cpus，这里实现原理和配置cpuset的区别是什么呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614599276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003790,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/51/0e/000f9f42.jpg","nickname":"zy","note":"","ucode":"EBD3A4BBC44D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217292,"discussion_content":"张老师，按照文章里说的Guaranteed类型的pod，设置的request,limit cpu=&#34;2&#34;, 似乎底层没有通过cpuset去给pod设置独占。想请教一下，这里说的绑定在 2 个独占的 CPU 核，是利用什么原理呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585539173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1994572,"avatar":"","nickname":"Geek_2b4a91","note":"","ucode":"242A32ED80C420","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1003790,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/51/0e/000f9f42.jpg","nickname":"zy","note":"","ucode":"EBD3A4BBC44D69","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338629,"discussion_content":"我的理解是因为给分配的是整数个cpu，分配给pod后不会有其他pod来使用，不重启的话就不会释放和切换，就是看起来像“独占”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609325649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":217292,"ip_address":""},"score":338629,"extra":""}]}]},{"had_liked":false,"id":139523,"user_name":"Adam","can_delete":false,"product_type":"c1","uid":1305633,"ip_address":"","ucode":"338BA720880E4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/21/b0fe1bfd.jpg","comment_is_top":false,"comment_ctime":1570671938,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"18750541122","product_id":100015201,"comment_content":"宿主机进入了MemoryPressure后被打上污点标记，新的POD不会被调度到此节点，那假如宿主机资源恢复正常后，这个污点标记会自己消失吗？还是说需要人工介入去处理。","like_count":4,"discussions":[{"author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114050,"discussion_content":"我的理解：驱逐策略中有个参数eviction-pressure-transition-period，这个值默认值应该是5m，表示当发生驱逐时，该节点有5m时间内被标记为存在压力状态，也就是被打了污点，5m后压力状态会解除，污点也是被去掉了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1577954113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548532,"discussion_content":"如果超过这个period才恢复了，是不是就要手动干预？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1643249465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":114050,"ip_address":""},"score":548532,"extra":""},{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548535,"discussion_content":"而且你说的这个和提问的应该不是一个事情？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643249594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":114050,"ip_address":""},"score":548535,"extra":""}]}]},{"had_liked":false,"id":153248,"user_name":"manatee","can_delete":false,"product_type":"c1","uid":1041112,"ip_address":"","ucode":"708D90E7A265BD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/d8/f0562ede.jpg","comment_is_top":false,"comment_ctime":1574208011,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14459109899","product_id":100015201,"comment_content":"请问老师，当pod因为Eviction 而被删除时，如果pod是被replica set设置了副本数的，他会在其他node中在被拉起吗","like_count":3,"discussions":[{"author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114068,"discussion_content":"会的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577955207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43086,"user_name":"汪浩","can_delete":false,"product_type":"c1","uid":1065643,"ip_address":"","ucode":"652788EB4AE746","user_header":"https://static001.geekbang.org/account/avatar/00/10/42/ab/3ea0e5cf.jpg","comment_is_top":false,"comment_ctime":1543158727,"is_pvip":false,"replies":[{"id":"15411","content":"对，得然后编辑改一下","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1543192144,"ip_address":"","comment_id":43086,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14428060615","product_id":100015201,"comment_content":"被称作“不可压缩资源（compressible resources）<br><br>应该是 uncompressible","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430293,"discussion_content":"对，得然后编辑改一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543192144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136244,"user_name":"随意门","can_delete":false,"product_type":"c1","uid":1316502,"ip_address":"","ucode":"6AADD9C133AFCB","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/96/1538f36c.jpg","comment_is_top":false,"comment_ctime":1569394785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10159329377","product_id":100015201,"comment_content":"请问，Kubernetes有办法限制每个容器的磁盘使用量吗？假设一个容器的日志输出到容器中的一个文件中，然后日志量有很大，怎么限制才能防止它把宿主机的磁盘都占满？","like_count":2},{"had_liked":false,"id":98658,"user_name":"beenchaos","can_delete":false,"product_type":"c1","uid":1007348,"ip_address":"","ucode":"1BAA2F4F216899","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/f4/776ad2df.jpg","comment_is_top":false,"comment_ctime":1559051915,"is_pvip":false,"replies":[{"id":"36292","content":"不能这么理解，首先，cpuset也可以绑定多个核的，其次，它的主要作用是让其他进程不能来到被独占的core上。","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1559619002,"ip_address":"","comment_id":98658,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10148986507","product_id":100015201,"comment_content":"请问张老师，cpuset是否只适用于nginx或者redis这类单线程的应用，为这类进程单独绑定一个CPU。而针对多线程的应用程序，设置cpuset反而会限制该应用程序的并发能力？这样理解准确么？","like_count":2,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451772,"discussion_content":"不能这么理解，首先，cpuset也可以绑定多个核的，其次，它的主要作用是让其他进程不能来到被独占的core上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559619002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45376,"user_name":"初学者","can_delete":false,"product_type":"c1","uid":1042833,"ip_address":"","ucode":"9471A905D07CE1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e9/91/4219d305.jpg","comment_is_top":false,"comment_ctime":1543626593,"is_pvip":true,"replies":[{"id":"16259","content":"这个非常简单，就是按qos划分成三种","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1543732993,"ip_address":"","comment_id":45376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10133561185","product_id":100015201,"comment_content":"老师，能不能讲一下kubernetes是如何划分和管理宿主机上的cgroups结构的？","like_count":3,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431006,"discussion_content":"这个非常简单，就是按qos划分成三种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543732993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319257,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1635722525,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5930689821","product_id":100015201,"comment_content":"第四十课:K8s的资源模型和资源管理<br>K8s的资源分为两类，一类是可压缩资源（compressible resources），比如CPU，也就是当资源不足的时候Pod不会退出。另一类资源是不可压缩资源（incompassible resources），比如内存，其典型特点是当该资源不足的时候，Pod会因为OOM（Out Of Memory）被内核杀掉。<br><br>建议半个CPU配置用cpu=500m表示，而不是cpu=0.5（一个cpu=1000m，也就是cpu=1）<br><br>1Mi=1024*1024；1M=1000*1000<br><br>request和limit区别是：在调度的时候，kube-scheduler 只会按照 requests 的值进行计算。而在真正设置 Cgroups 限制的时候，kubelet 则会按照 limits 的值来进行设置。<br><br>当宿主机资源紧张的时间kubelet就会对Pod进行Eviction（资源回收），这时候会运用到QoS划分：<br>第一个会删除的是BestEffort类Pod，也就是Pod 既没有设置 requests，也没有设置 limits。<br>接下来第二个会删除的是Burstable类Pod。这是至少有一个 Container 设置了 requests。那么这个 Pod 就会被划分到 Burstable 类别<br>最后一类会删除的Pod是Guaranteed，也就是设置了request和limit，或者只设置limit的Pod。<br><br>Eviction 在 Kubernetes 里分为 Soft 和 Hard 两种模式。Soft Eviction 允许你为 Eviction 过程设置一段“优雅时间”，比如文章里的例子里的 imagefs.available=2m，就意味着当 imagefs 不足的阈值达到 2 分钟之后，kubelet 才会开始 Eviction 的过程。而 Hard Eviction 模式下，Eviction 过程就会在阈值达到之后立刻开始。<br><br>Kubernetes 计算 Eviction 阈值的数据来源，主要依赖于从 Cgroups 读取到的值，以及使用 cAdvisor 监控到的数据。<br><br>当宿主机的 Eviction 阈值达到后，就会进入 MemoryPressure 或者 DiskPressure 状态，从而避免新的 Pod 被调度到这台宿主机上。它使用taint把node taint，就无法调度Pod到其node之上了。<br><br>cpuset 方式是生产环境里部署在线应用类型的 Pod 时，非常常用的一种方式。设置 cpuset 会把容器绑定到某个 CPU 的核上，而不是像 cpushare 那样共享 CPU 的计算能力，这样能大大减少CPU之间上下文切换次数，从而提高容器性能。设置cpuset的方式是，首先Pod 必须是 Guaranteed 的 QoS 类型；然后，你只需要将 Pod 的 CPU 资源的 requests 和 limits 设置为同一个相等的整数值即可。<br>","like_count":1},{"had_liked":false,"id":257777,"user_name":"大工 赵洁","can_delete":false,"product_type":"c1","uid":2228986,"ip_address":"","ucode":"6AFDFB479FAF4B","user_header":"https://static001.geekbang.org/account/avatar/00/22/02/fa/8149913a.jpg","comment_is_top":false,"comment_ctime":1604128437,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5899095733","product_id":100015201,"comment_content":"首先，你的 Pod 必须是 Guaranteed 的 QoS 类型；<br>然后，你只需要将 Pod 的 CPU 资源的 requests 和 limits 设置为同一个相等的整数值即可。<br>问题：满足条件1不就是满足了条件2了吗？","like_count":1,"discussions":[{"author":{"id":2053476,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/55/64/15b80c68.jpg","nickname":"学算法的小白","note":"","ucode":"FEFC055B478B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340481,"discussion_content":"第二点还有说CPU必须为整数值，假如设置0.5或者500m那也不会独占。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1610013514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476507,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/9b/8bebc8b6.jpg","nickname":"Marshall","note":"","ucode":"0FB004E8163F44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335744,"discussion_content":"还有一个整数","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608291601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2302544,"avatar":"","nickname":"Geek_a84c95","note":"","ucode":"55185C31A921BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327087,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605746934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72824,"user_name":"Lucius","can_delete":false,"product_type":"c1","uid":1388882,"ip_address":"","ucode":"C26194B10FEAB7","user_header":"","comment_is_top":false,"comment_ctime":1551744601,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"5846711897","product_id":100015201,"comment_content":"&quot;将 DaemonSet 的 Pod 都设置为 Guarant...&quot; 不太懂, Guaranteed和重新创建有什么关系","like_count":1,"discussions":[{"author":{"id":1356206,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/ae/344fbda3.jpg","nickname":"追风","note":"","ucode":"D1D463D7B911A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270390,"discussion_content":"楼上几位貌似没说到重点，反向来看，如果ds不设置成guaranteed，那么宿主机资源不够时，为了回收资源和优先级的因素，他会被优先清理，但是dm资源类型比较特殊，仍然会在宿主机重新创建pod，这样循环反复，不停地做无用功。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1589990995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081299,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7f/d3/b5896293.jpg","nickname":"Realm","note":"","ucode":"30CBEBE619D1A2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49269,"discussion_content":"在宿主机资源紧张的情况下，通过guaranteed，来确保daemonset最后被回收，也就是尽量不被回收.","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1573568830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114054,"discussion_content":"daemonset的特性是在节点上需要部署一个pod又最多部署一个pod，如果ds的pod qos级别很低，发生驱逐现象是被优先驱赶了，ds又会立刻在节点上部署（不受污点限制），之后又被驱逐。。。如此反复","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577954424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1512942,"avatar":"https://static001.geekbang.org/account/avatar/00/17/15/ee/f461168f.jpg","nickname":"Jay","note":"","ucode":"D9A45EA47908C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114057,"discussion_content":"不确定ds是否默认配置了容忍机制来忽略节点的压力状态，但是ds控制的pod是作为守护进程服务的，配置为guaranteed更合理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577954524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43754,"user_name":"阿鹏","can_delete":false,"product_type":"c1","uid":1207915,"ip_address":"","ucode":"88C847A20EEA9A","user_header":"https://static001.geekbang.org/account/avatar/00/12/6e/6b/9c3f3abb.jpg","comment_is_top":false,"comment_ctime":1543288031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838255327","product_id":100015201,"comment_content":"老师，关于资源隔离我有三个问题想请教一下。<br>第一，正如您所说，&#47;proc是不能被隔离的，但是我们可以通过lxcfs或者高版本的jdk版本来让容器里的服务知道自己的资源限制，或者还有方式，老师有推荐的吗？<br>第二，我使用lxcfs隔离后，容器内&#47;proc&#47;meminfo文件确实是限制后的内存大小，但是容器内&#47;proc&#47;cpuinfo的信息跟宿主机是一样的，那么容器内的应该要怎么知道自己正确的cpu数量呢？<br>第三，我参考github上的lxcfs-initializer使用DaemonSet和Initialzer给容器加入lxcfs，使用annotations做关联，使用了该annotation的deployment能正常部署，没使用的报错：<br>Timeout: request did not complete within allowed duration<br>求老师指点一下","like_count":1},{"had_liked":false,"id":42336,"user_name":"Pixar","can_delete":false,"product_type":"c1","uid":1197659,"ip_address":"","ucode":"E653387BA8EA16","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/5b/07858c33.jpg","comment_is_top":false,"comment_ctime":1542941156,"is_pvip":false,"replies":[{"id":"15268","content":"见QoS部分","user_name":"作者回复","user_name_real":"Geek_6ef93d","uid":"1218095","ctime":1542986716,"ip_address":"","comment_id":42336,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837908452","product_id":100015201,"comment_content":"如果某个Guaranted Pod 的 Mem 设定为了256，在宿主机资源不紧张但该Pod 的的 mem 使用量达到了256以后会出现什么情况？会被oom杀掉吗？","like_count":1,"discussions":[{"author":{"id":1218095,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/2f/876085fa.jpg","nickname":"张磊 Kubernetes","note":"","ucode":"16E29BDAB1F5BC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430056,"discussion_content":"见QoS部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542986716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355706,"user_name":"我感觉你们在背着我学kubernetes","can_delete":false,"product_type":"c1","uid":2889064,"ip_address":"北京","ucode":"83BF0C1334FE51","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/yib4NPWzs5g36icOuVviaUtOUAAOvJn45EKCriaQIibSyicojLuQh687ZJ5flpvOaezORia7SjUCBtrneUGJh8HmKicrEw/132","comment_is_top":false,"comment_ctime":1661674780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661674780","product_id":100015201,"comment_content":"而对于内存来说，当你指定了 limits.memory=128Mi 之后，相当于将 Cgroups 的 memory.limit_in_bytes 设置为 128 * 1024 * 1024。而需要注意的是，在调度的时候，调度器只会使用 requests.memory=64Mi 来进行判断 请问大佬这个64Mi 怎么算出来的呢怎么理解呢","like_count":0},{"had_liked":false,"id":351157,"user_name":"双叶","can_delete":false,"product_type":"c1","uid":1009260,"ip_address":"","ucode":"6DA1D477F9D580","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/6c/4a68a916.jpg","comment_is_top":false,"comment_ctime":1657573011,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657573011","product_id":100015201,"comment_content":"查了一下文档，必须把 CPU Manager Policy 设置成 Static 才能有设置 cpuset 的功能<br><br>https:&#47;&#47;kubernetes.io&#47;docs&#47;tasks&#47;administer-cluster&#47;cpu-management-policies&#47;","like_count":0},{"had_liked":false,"id":313289,"user_name":"Geek_Fang","can_delete":false,"product_type":"c1","uid":1514175,"ip_address":"","ucode":"CCF0DBC6AC247F","user_header":"https://static001.geekbang.org/account/avatar/00/17/1a/bf/872c2289.jpg","comment_is_top":false,"comment_ctime":1632365557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632365557","product_id":100015201,"comment_content":"limit和request设置里面如果我只设置cpu=1，不设置其他资源，是不是也是独享的","like_count":0},{"had_liked":false,"id":266265,"user_name":"ch_ort","can_delete":false,"product_type":"c1","uid":1580926,"ip_address":"","ucode":"B79746E687F29E","user_header":"","comment_is_top":false,"comment_ctime":1607263390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1607263390","product_id":100015201,"comment_content":"因为kuberentes的cpu limit是使用cpu.cfs_quota_us实现的，所以是精确控制，因此cpu不会超过limit限制的值。 那么mem的limit是如何实现的呢？ ","like_count":0},{"had_liked":false,"id":266263,"user_name":"ch_ort","can_delete":false,"product_type":"c1","uid":1580926,"ip_address":"","ucode":"B79746E687F29E","user_header":"","comment_is_top":false,"comment_ctime":1607263259,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1607263259","product_id":100015201,"comment_content":"在Kubernets里，Pod是最小的原子调度单位。这也意味着，所有跟调度和资源管理相关的属性都应该是属于Pod对象的字段。通过设置requests和limits来进行资源的隔离。<br><br>cpu个数，cpu物理核、cpu逻辑核、vCPU的区别：比如：2块cpu，每块 24个物理核，每块物理核超卖成2块逻辑核，总共 2*24*2 = 96核，每个核超卖100个vCPU，则vCPU = 96*100 <br><br>1MiB和MB的区别： 1Mi = 1024* 1024 bytes ； 1M=1000*1000 bytes<br><br>cpu.shares 与 cpu.cfs_period_us &#47; cpu.cfs_quota_us的区别： <br>cpu.shares无法精确控制CPU，在CPU不繁忙时，任何进程都没有CPU的限制，当CPU繁忙时，A进程的CPU能使用的量为 (A的shares)&#47;(所有进程shares的和)<br>cpu.cfs_period_us &#47; cpu.cfs_quota_us能够精确控制CPU，无论cpu是否繁忙，A进程能使用的CPU为cfs_period的一段时间内，只能被分配到总量为cfs_quota的CPU时间<br><br>Kuberentes的QoS有三种，在宿主机的资源紧张时起作用按优先级来驱逐Pod，分别是 Guaranteed、Burstable、BestEffort。<br><br>Kuberentes中的cpuset（绑核），其实就是将Pod的 requests设置和limits设置为相同的值<br>","like_count":0,"discussions":[{"author":{"id":1389362,"avatar":"https://static001.geekbang.org/account/avatar/00/15/33/32/8f304f6c.jpg","nickname":"--SNIPER","note":"","ucode":"7439EC0458BD7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352091,"discussion_content":"Kuberentes中的cpuset（绑核），其实就是将Pod的 requests设置和limits设置为相同的值\n------------------\n这块具体的实现原理是咋样的呢，我尝试看了下cpuset并没有配置相关限制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614599175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256661,"user_name":"朱东辉","can_delete":false,"product_type":"c1","uid":1983157,"ip_address":"","ucode":"D9EA5C37A1B386","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIh7iatqAeGsJuDNxsDlmCQx64ktJl7ATAkBtDO6iczIqsLFPXkF6GPGJpMBCxbl4DJ5obHwAK0bSAQ/132","comment_is_top":false,"comment_ctime":1603700072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603700072","product_id":100015201,"comment_content":"由于处于这种状态下的主机被标记无敌，noschedule不可调度状态","like_count":0},{"had_liked":false,"id":256615,"user_name":"zizi","can_delete":false,"product_type":"c1","uid":1297333,"ip_address":"","ucode":"B1CD5F9CEAF4F3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIwufWp49Df9StZ1YzeicUwGON4aYA7tkLeVhDELSBGjicichhq44Ghoo047jOHK89Lj78d7GtyB7E9A/132","comment_is_top":false,"comment_ctime":1603690536,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1603690536","product_id":100015201,"comment_content":"一直有一个疑问，如果一个物理机上一部分pod使用了cpuset 独占了一部分cpu，其他的不是Guaranteed的pod不能使用这些cpu，那么他们是在剩下的cpu上竞争cpu时间片么？","like_count":0,"discussions":[{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548538,"discussion_content":"对于没有设置cpuset的pod应该是要按照OS的调度策略进行？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643251067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255855,"user_name":"每一段路都是一种领悟","can_delete":false,"product_type":"c1","uid":1123452,"ip_address":"","ucode":"B23F0D4B02197B","user_header":"https://static001.geekbang.org/account/avatar/00/11/24/7c/b76ad65d.jpg","comment_is_top":false,"comment_ctime":1603444632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603444632","product_id":100015201,"comment_content":"太棒了，好久不看，返回来再看一遍，获益匪浅","like_count":0},{"had_liked":false,"id":243086,"user_name":"小麦","can_delete":false,"product_type":"c1","uid":1088945,"ip_address":"","ucode":"EB60FCDE1911E7","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/b1/51c4ec9f.jpg","comment_is_top":false,"comment_ctime":1597944831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597944831","product_id":100015201,"comment_content":"老师，我想问一下，如果我没有设置limit和request，容器使用的资源会有上限吗？如果有，这个上限值取决于机器本身资源吗？如果不设置limit和request，是否相较于设置了资源限制后对k8s资源调度性能上会有损耗？","like_count":0},{"had_liked":false,"id":242107,"user_name":"Geek_e0ee48","can_delete":false,"product_type":"c1","uid":1904256,"ip_address":"","ucode":"11D10A0F5892AB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIgDicRj9LAvWSejVc6v34R6dR1yRHzqBgEpABeRwDvNcpoFW6zmiavwV5cP1fCKJiaQPiafP9E7Puqnw/132","comment_is_top":false,"comment_ctime":1597590791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597590791","product_id":100015201,"comment_content":"非常实用的一篇文章。学习到了以前没有注意的资源分配方式。赞。感谢张磊老师。","like_count":0},{"had_liked":false,"id":231793,"user_name":"Geek_2160ad","can_delete":false,"product_type":"c1","uid":1342058,"ip_address":"","ucode":"559F1C65F195BC","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLC207D4bC5aypTsCQpRPoBnomZFlLMczYf0ibscYib8GewnnW57Rib0fD0UtyGdiaHYDmAmzQXLniclng/132","comment_is_top":false,"comment_ctime":1593770553,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1593770553","product_id":100015201,"comment_content":"老师，有个问题想请教一下，如果宿主机的资源充分，当QOS级别为Guaranteed的资源超过其使用限制的话，这个Pod是否会被驱逐呢？","like_count":0,"discussions":[{"author":{"id":2589474,"avatar":"https://static001.geekbang.org/account/avatar/00/27/83/22/a44b65f5.jpg","nickname":"JamonJou","note":"","ucode":"C77E647E2FA7A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548539,"discussion_content":"不会超过的，设置了限制就是不让你用。比如cpu不够那就慢慢执行有点卡，mem不够可能需要磁盘的swap来进行（OS做的，应用程序忽略）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643251183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231661,"user_name":"？","can_delete":false,"product_type":"c1","uid":2030035,"ip_address":"","ucode":"3043E00A056081","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f9/d3/2cb7516e.jpg","comment_is_top":false,"comment_ctime":1593744154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593744154","product_id":100015201,"comment_content":"老师，有没有istio相关的讲解呢，网上资料实在太少了","like_count":0},{"had_liked":false,"id":187153,"user_name":"高山高","can_delete":false,"product_type":"c1","uid":1211280,"ip_address":"","ucode":"48D96B52A820B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/90/1be15305.jpg","comment_is_top":false,"comment_ctime":1584027196,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584027196","product_id":100015201,"comment_content":"老师好，cpu设置了limit后，通过监控发现某个点会超过limit的值，这是为什么呢？","like_count":0},{"had_liked":false,"id":154603,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1574490496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574490496","product_id":100015201,"comment_content":"污点标记","like_count":0},{"had_liked":false,"id":137552,"user_name":"WY","can_delete":false,"product_type":"c1","uid":1412548,"ip_address":"","ucode":"43184845CD4F9B","user_header":"https://static001.geekbang.org/account/avatar/00/15/8d/c4/9cc93c6e.jpg","comment_is_top":false,"comment_ctime":1569773984,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1569773984","product_id":100015201,"comment_content":"我们的一个java程序运行在pod的容器里。pod只这一个容器，是httpclient高并发场景，通过premethous没有看到jvm内存泄露，但是pod的内存在不断增加，导致pod被重启，错误又不是oomkilled。而是error, errorcode 257请问是什么原因？","like_count":0,"discussions":[{"author":{"id":1179418,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/1a/af425223.jpg","nickname":"吴正轩","note":"","ucode":"6669ACD7B27687","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204348,"discussion_content":"检查下直接内存？NIO用到的直接内存在JVM以外，另外建议发一下JVM参数，JDK8.192u以前的版本，不识别docker容器默认的Xms，会取得物理机的Xms","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584158320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2649310,"avatar":"https://static001.geekbang.org/account/avatar/00/28/6c/de/1934abe6.jpg","nickname":"刘超","note":"","ucode":"78B617AADA9035","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179418,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ff/1a/af425223.jpg","nickname":"吴正轩","note":"","ucode":"6669ACD7B27687","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415159,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636995223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":204348,"ip_address":""},"score":415159,"extra":""}]},{"author":{"id":1006424,"avatar":"","nickname":"门窗小二","note":"","ucode":"0BF3780C247F22","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377468,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622679221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010922,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6c/ea/ce9854a5.jpg","nickname":"坤","note":"","ucode":"74E6838226A405","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263650,"discussion_content":"这个问题有解决吗？我们也遇到过了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589238081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77336,"user_name":"15201457704","can_delete":false,"product_type":"c1","uid":1029117,"ip_address":"","ucode":"EB145052B096D5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b3/fd/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1552909281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552909281","product_id":100015201,"comment_content":"DiskPressure\tnodefs.available, nodefs.inodesFree, imagefs.available, or imagefs.inodesFree\tAvailable disk space and inodes on either the node’s root filesystem or image filesystem has satisfied an eviction threshold  老师这个有点懵，请问是什么意思？","like_count":0},{"had_liked":false,"id":51965,"user_name":"(!0+)[+]+([+]+)[-~]","can_delete":false,"product_type":"c1","uid":1133804,"ip_address":"","ucode":"1544F3EEF6AC6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/4c/ec/9fea079a.jpg","comment_is_top":false,"comment_ctime":1545283789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545283789","product_id":100015201,"comment_content":"思考题<br>因为controller看到node上有污点？","like_count":0},{"had_liked":false,"id":45140,"user_name":"大彬","can_delete":false,"product_type":"c1","uid":1119330,"ip_address":"","ucode":"0177F6BA4D0575","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/62/3449ff20.jpg","comment_is_top":false,"comment_ctime":1543549495,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543549495","product_id":100015201,"comment_content":"我在实际操作中遇到一个问题，我用 aws kops 部署了一个 3 master，3 node 的集群，服务器选的是 t2.medium (2核4G)。 用 helm 安装 stable&#47;elasticsearch 无法启动，node 会出现 Not Ready，System OOM Killed 这样的错误，也无法 ssh 登录了。我想知道有没有办法避免这样的故障，能给 node 系统至少预留一些资源，可以允许 pod 无法启动，也不至于节点崩溃没有响应了？","like_count":0,"discussions":[{"author":{"id":1356206,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b1/ae/344fbda3.jpg","nickname":"追风","note":"","ucode":"D1D463D7B911A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270394,"discussion_content":"设置resourse quota","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589991817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43402,"user_name":"leo","can_delete":false,"product_type":"c1","uid":1022306,"ip_address":"","ucode":"EE84F30C6617C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/62/18b04db7.jpg","comment_is_top":false,"comment_ctime":1543222880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543222880","product_id":100015201,"comment_content":"老师，请教您个问题，当我们使用istio的时候，业务服务的鉴权如何做？在spring cloud里可以在api-gateway层完成。可istio的gateway应该没有这样的职责。","like_count":0},{"had_liked":false,"id":42428,"user_name":"每日都想上班","can_delete":false,"product_type":"c1","uid":1060466,"ip_address":"","ucode":"1DE64120C8B14A","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/72/145c10db.jpg","comment_is_top":false,"comment_ctime":1542952895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542952895","product_id":100015201,"comment_content":"每天看每天都有吸收知识的课程","like_count":0},{"had_liked":false,"id":42117,"user_name":"jaxzhai","can_delete":false,"product_type":"c1","uid":1182911,"ip_address":"","ucode":"B65A8EE7A061FC","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/bf/863d440a.jpg","comment_is_top":false,"comment_ctime":1542929892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542929892","product_id":100015201,"comment_content":"因为调度器在预选的时候会判断节点资源是否充足，如果资源不够将不会被调度。","like_count":0},{"had_liked":false,"id":42107,"user_name":"维苏威的血","can_delete":false,"product_type":"c1","uid":1226481,"ip_address":"","ucode":"270C29C0189875","user_header":"https://static001.geekbang.org/account/avatar/00/12/b6/f1/bfa3f46c.jpg","comment_is_top":false,"comment_ctime":1542928416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542928416","product_id":100015201,"comment_content":"不可压缩资源 typo","like_count":0}]}