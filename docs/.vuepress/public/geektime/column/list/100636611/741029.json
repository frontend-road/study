{"id":741029,"title":"第 7 章 文本编辑工具Vim","content":"\n<p>前面我们多次提到过<code>vi</code>命令，它是Linux中必不可少的工具。早期的Unix都是使用vi作为系统默认的编辑器。也许你会问，vi与Vim有什么区别？其实Vim是vi的升级版。很多Linux系统管理员习惯用vi，因为他们接触Linux时用的就是vi，到后来Vim才比较流行。所以无论是用vi还是Vim，只要能达到我们想要的目的即可。</p>\n<p>在阿铭看来，vi和Vim的最大区别就是编辑一个文本时vi不会显示颜色，而Vim会显示颜色。后者显示颜色更便于用户进行编辑，但其他功能两者并没有太大的区别。所以，在Linux系统下，使用vi还是Vim完全取决你的个人喜好。</p>\n<p>如果你的系统里没有Vim工具，请按如下方法安装：</p>\n<pre class=\"code-rows\"><code># yum install -y vim-enhanced</code></pre>\n<h2 id=\"nav_point_123\">7.1 Vim的3种常用模式</h2>\n<p>Vim有3种模式：一般模式、编辑模式和命令模式，这需要我们牢记。</p>\n<h3 id=\"nav_point_124\">7.1.1 一般模式</h3>\n<p>当我们使用命令<code>vim filename</code>编辑文件时，会默认进入文件的一般模式。在这个模式下，你可以做的操作有：上下移动光标、删除某个字符、删除某行以及复制或粘贴一行或者多行。下面我们先复制一个文件，然后使用Vim打开该文件，如下所示：</p>\n<pre class=\"code-rows\"><code># cp /etc/dnsmasq.conf /tmp/1.txt // 因为该文件行比较多，适合我们做试验\n# vim /tmp/1.txt</code></pre>\n<p>首先复制一个文件到/tmp/目录下，并改名为1.txt。然后使用Vim工具编辑它，按回车后进入文件1.txt，该模式就是一般模式。在该模式下，我们可以移动光标的位置，操作方法如表7-1所示。</p><!-- [[[read_end]]] -->\n<p><strong>表7-1 移动光标</strong></p>\n<table width=\"90%\" border=\"1\">\n<thead>\n<tr>\n<th><p>按键</p></th>\n<th><p>作用</p></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><p>h或者向左的方向键</p></td>\n<td><p>光标向左移动一个字符</p></td>\n</tr>\n<tr>\n<td><p>l（小写字母l）或者向右的方向键</p></td>\n<td><p>光标向右移动一个字符</p></td>\n</tr>\n<tr>\n<td><p>k或者向上的方向键</p></td>\n<td><p>光标向上移动一个字符</p></td>\n</tr>\n<tr>\n<td><p>j或者向下的方向键</p></td>\n<td><p>光标向下移动一个字符</p></td>\n</tr>\n<tr>\n<td><p>Ctrl+B</p></td>\n<td><p>文本页面向前翻一页</p></td>\n</tr>\n<tr>\n<td><p>Ctrl+F</p></td>\n<td><p>文本页面向后翻一页</p></td>\n</tr>\n<tr>\n<td><p>数字0或者Shift+6</p></td>\n<td><p>移动到本行行首</p></td>\n</tr>\n<tr>\n<td><p>Shift+4</p></td>\n<td><p>移动到本行行尾</p></td>\n</tr>\n<tr>\n<td><p>gg</p></td>\n<td><p>移动到首行</p></td>\n</tr>\n<tr>\n<td><p>G</p></td>\n<td><p>移动到尾行</p></td>\n</tr>\n<tr>\n<td><p>nG（n是任意数字）</p></td>\n<td><p>移动到第<em>n</em>行</p></td>\n</tr>\n</tbody>\n</table>\n<p>在一般模式下，我们还可以实现对字符或字符串的删除、复制、粘贴等操作，如表7-2所示。</p>\n<p><strong>表7-2 删除、复制和粘贴</strong></p>\n<table width=\"90%\" border=\"1\">\n<thead>\n<tr>\n<th><p>按键</p></th>\n<th><p>作用</p></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><p>x和X</p></td>\n<td><p>x表示向后删除一个字符，X表示向前删除一个字符</p></td>\n</tr>\n<tr>\n<td><p>nx</p></td>\n<td><p>向后删除<em>n</em>个字符</p></td>\n</tr>\n<tr>\n<td><p>dd</p></td>\n<td><p>删除/剪切光标所在的那一行</p></td>\n</tr>\n<tr>\n<td><p>ndd（n为number的缩写）</p></td>\n<td><p>删除/剪切光标所在行之后的<em>n</em>行</p></td>\n</tr>\n<tr>\n<td><p>yy</p></td>\n<td><p>复制光标所在行</p></td>\n</tr>\n<tr>\n<td><p>p</p></td>\n<td><p>从光标所在行开始，向下粘贴已经复制或者粘贴的内容</p></td>\n</tr>\n<tr>\n<td><p>P</p></td>\n<td><p>从光标所在行开始，向上粘贴已经复制或者粘贴的内容</p></td>\n</tr>\n<tr>\n<td><p>nyy</p></td>\n<td><p>从光标所在行开始，向下复制<em>n</em>行</p></td>\n</tr>\n<tr>\n<td><p>u</p></td>\n<td><p>还原上一步操作</p></td>\n</tr>\n<tr>\n<td><p>v</p></td>\n<td><p>按v后移动光标会选中指定字符，然后可以实现复制、粘贴等操作</p></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"nav_point_125\">7.1.2 编辑模式</h3>\n<p>在一般模式下是不可以修改某一个字符的，如果要修改字符，就只能进入编辑模式。从一般模式进入编辑模式，只需按i、I、a、A、o、O、r和R中的某一个键即可。当进入编辑模式时，在屏幕的尾行会显示<code>INSERT</code>或<code>REPLACE</code>的字样（如果你的CentOS支持中文，则会显示“插入”）。从编辑模式回到一般模式，只需按Esc键即可。具体行为对照表如表7-3所示。</p>\n<p><strong>表7-3 进入编辑模式</strong></p>\n<table width=\"90%\" border=\"1\">\n<thead>\n<tr>\n<th><p>按键</p></th>\n<th><p>作用</p></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><p>i</p></td>\n<td><p>在当前字符前插入</p></td>\n</tr>\n<tr>\n<td><p>I</p></td>\n<td><p>在光标所在行的行首插入</p></td>\n</tr>\n<tr>\n<td><p>a</p></td>\n<td><p>在当前字符后插入</p></td>\n</tr>\n<tr>\n<td><p>A</p></td>\n<td><p>在光标所在行的行尾插入</p></td>\n</tr>\n<tr>\n<td><p>o</p></td>\n<td><p>在当前行的下一行插入新的一行</p></td>\n</tr>\n<tr>\n<td><p>O</p></td>\n<td><p>在当前行的上一行插入新的一行</p></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"nav_point_126\">7.1.3 命令模式</h3>\n<p>在一般模式下，输入<code>:</code>或者<code>/</code>即可进入命令模式。在该模式下，我们可以搜索某个字符或者字符串，也可以实现保存、替换、退出、显示行号等操作，如表7-4所示。</p>\n<p><strong>表7-4 命令模式</strong></p>\n<table width=\"90%\" border=\"1\">\n<thead>\n<tr>\n<th><p>命令</p></th>\n<th><p>作用</p></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><p><code>/word</code></p></td>\n<td><p>在光标之后查找一个字符串<code>word</code>，按n向后继续搜索</p></td>\n</tr>\n<tr>\n<td><p><code>?word</code></p></td>\n<td><p>在光标之前查找一个字符串<code>word</code>，按n向前继续搜索</p></td>\n</tr>\n<tr>\n<td><p><code>:n1,n2s/word1/word2/g</code></p></td>\n<td><p>在n1和n2行之间查找<code>word1</code>并替换为<code>word2</code>，不加g则只替换每行的第一个<code>word1</code></p></td>\n</tr>\n<tr>\n<td><p><code>:1,$s/word1/word2/g</code></p></td>\n<td><p>将文档中所有的<code>word1</code>都替换为<code>word2</code>，不加g则只替换每行的第一个<code>word1</code></p></td>\n</tr>\n</tbody>\n</table>\n<p>命令模式的其他功能，如表7-5表示。</p>\n<p><strong>表7-5 命令模式的其他功能</strong></p>\n<table width=\"90%\" border=\"1\">\n<thead>\n<tr>\n<th><p>命令</p></th>\n<th><p>作用</p></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><p><code>:w</code></p></td>\n<td><p>保存文本</p></td>\n</tr>\n<tr>\n<td><p><code>:q</code></p></td>\n<td><p>退出Vim</p></td>\n</tr>\n<tr>\n<td><p><code>:w!</code></p></td>\n<td><p>强制保存，在root用户下，即使文本只读也可以完成保存</p></td>\n</tr>\n<tr>\n<td><p><code>:q!</code></p></td>\n<td><p>强制退出，所有改动不生效</p></td>\n</tr>\n<tr>\n<td><p><code>:wq</code></p></td>\n<td><p>保存并退出</p></td>\n</tr>\n<tr>\n<td><p><code>:set nu</code></p></td>\n<td><p>显示行号</p></td>\n</tr>\n<tr>\n<td><p><code>:set nonu</code></p></td>\n<td><p>不显示行号</p></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"nav_point_127\">7.2 Vim实践</h2>\n<p>下面阿铭教你如何在一个空白文档中写入一段文字，然后保存。</p>\n<p>首先输入<code>vim test.txt</code>，直接按回车，进入一般模式，如下所示：</p>\n<pre class=\"code-rows\"><code># vim test.txt</code></pre>\n<p>然后按i键进入编辑模式，在窗口的左下角会显示“<code>- 插入 -</code>”或者“<code>- INSERT -</code>”，这说明已进入插入模式，允许编辑文档。下面阿铭输入如下文字：</p>\n<pre class=\"code-rows\"><code>This is a test file.\nAnd this is the first time to using \"vim\".\nIt's easy to use \"vim\".\nI like to using it, do you like it?</code></pre>\n<p>编辑后，按Esc键，窗口左下角显示的“<code>- 插入 -</code>”或者“<code>- INSERT -</code>”消失，然后输入“<code>:wq</code>”，直接按回车保存刚才输入的文字。如下所示：</p>\n<pre class=\"code-rows\"><code>This is a test file.\nAnd this is the first time to using \"vim\".\nIt's easy to use \"vim\".\nI like to using it, do you like it?\n~\n~\n:wq</code></pre>\n<p>此时我们可以查看test.txt文档的内容，如下所示：</p>\n<pre class=\"code-rows\"><code># cat test.txt\nThis is a test file.\nAnd this is the first time to using \"vim\".\nIt's easy to use \"vim\".\nI like to using it, do you like it?</code></pre>\n<p>Vim为全键盘操作的编辑器，在各模式下都有很多功能键。阿铭在前面几个表中列出来的都是最常用的功能，你要多加练习，其他不常用的功能也需要了解一下。如果你能全部掌握阿铭列出来的功能，那么基本上算是掌握了Vim。下面阿铭带着大家一起来练习一下。首先，复制一个示例文本文档，如下：</p>\n<pre class=\"code-rows\"><code># cp /etc/dnsmasq.conf /tmp/1.txt // 再次复制该文件\n# vim /tmp/1.txt</code></pre>\n<p>请完成如下操作。</p>\n<p>(1) 分别向下、向右、向左、向上移动6个字符（6j 6l 6h 6k）。</p>\n<p>(2) 分别向下、向上翻两页（分别按两次Ctrl+F和Ctrl+B）。</p>\n<p>(3) 把光标移动到第49行（49G）。</p>\n<p>(4) 把光标移动到行尾，再移动到行首（Shift+4，Shift+6）。</p>\n<p>(5) 移动到1.txt文件的最后一行（G）。</p>\n<p>(6) 移动到文件的首行（gg）。</p>\n<p>(7) 搜索文件中出现的<code>dnsmasq</code>字符串，并数一下该字符串出现的次数（输入<code>/dnsmsq</code>，然后按n）。</p>\n<p>(8) 把从第1行到第10行出现的dnsmasq都替换成dns（<code>:1,10s/dnsmasq/dns/g</code>）。</p>\n<p>(9) 还原上一步操作（u）。</p>\n<p>(10) 把整个文件中所有的etc替换成cte（<code>:1,$s/etc/cte/g</code>）。</p>\n<p>(11) 把光标移动到第25行，删除字符串<code>anchors</code>（输入25G后回车，然后按j向右移动光标找到anchors，按v选中，然后按x）。</p>\n<p>(12) 还原上一步操作（u）。</p>\n<p>(13) 删除第50行（50G dd）。</p>\n<p>(14) 还原上一步操作（u）。</p>\n<p>(15) 删除第37行至第42行的所有内容（37G 6dd）。</p>\n<p>(16) 还原上一步操作（u）。</p>\n<p>(17) 复制第48行的内容并将其粘贴到第52行下面（48G yy 52G p）。</p>\n<p>(18) 还原上一步操作（按两下u）。</p>\n<p>(19) 复制第37行至第42行的内容并将其粘贴到第44行上面（37G 6yy 44G P）。</p>\n<p>(20) 还原上一步操作（按两下u）。</p>\n<p>(21) 把第37行至第42行的内容移动到第19行下面（37G 6dd 19G p）。</p>\n<p>(22) 还原上一步操作（按两下u）。</p>\n<p>(23) 把光标移动到首行，把第1行内容改为<code>#!/bin/bash</code>（先按gg把光标定位到第1行，然后按字母A，进入编辑模式，同时将光标移到行末尾进行修改操作，完成后按Esc键）。</p>\n<p>(24) 在第1行下面插入新的一行，并输入<code># Hello!</code>（先按gg将光标定位到第1行，然后按o进入编辑模式，同时将光标下移另起一行，输入<code># Hello!</code>）。</p>\n<p>(25) 保存文档并退出（按Esc键，输入<code>:wq</code>）。</p>\n<h2 id=\"nav_point_128\">7.3 课后习题</h2>\n<p>(1) vi与Vim有什么区别？它们之间有什么关系？</p>\n<p>(2) 如何查看当前系统的Vim版本？</p>\n<p>(3) 如何把文档中出现的abc全部替换成def？如何只替换每行中出现的第一个abc？</p>\n<p>(4) 当搜索某个关键词时，光标定位的关键词所在的行是如何决定的？也就是说，光标是定位到出现关键词的最顶端那行还是最底端那行，还是另外的情况？如何从当前关键词移动到下一个关键词？如何从当前关键词移动到上一个关键词呢？</p>\n<p>(5) 当编辑完文档后，按Esc键进入命令模式，此时输入命令:x，会怎么样？</p>\n<p>(6) 在一般模式下，如何把光标快速向右或向左移动10个字符？</p>\n<p>(7) <code>vim + filename</code>表示什么含义？执行<code>vim +10 filename</code>将会发生什么？</p>\n<p>(8) 用Vim打开文档后，如何使光标跳转到第20行？如何使光标跳到最后一行呢？</p>\n<p>(9) 用Vim打开文档后，默认是不显示行号的，如何才能显示行号呢？</p>\n<p>(10) 用Vim打开文档后，如何把第20行至第50行中的第一个abc替换为efg？如果想替换所有的abc呢？</p>\n<p>(11) 用Vim打开文档后，如何快速删除前100行？</p>\n<p>(12) 用Vim打开文档后，如何复制一行并将其粘贴到第20行的下面？</p>\n\n<br style=\"page-break-after:always\" />","neighbors":{"left":{"article_title":"第 6 章 Linux磁盘管理","id":741028},"right":{"article_title":"第 8 章 文档的压缩与打包","id":741030}},"comments":[{"had_liked":false,"id":386760,"user_name":"learn more","can_delete":false,"product_type":"c1","uid":1128702,"ip_address":"湖南","ucode":"0EF628B2E0F95E","user_header":"https://static001.geekbang.org/account/avatar/00/11/38/fe/04f56d1e.jpg","comment_is_top":false,"comment_ctime":1705491439,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100636611,"comment_content":"&quot;p 从光标所在行开始，向下粘贴已经复制或者粘贴的内容&quot;\n&quot;P 从光标所在行开始，向上粘贴已经复制或者粘贴的内容&quot;\n\n内容描述有误，应该是\n&quot;p 从光标所在行开始，向下粘贴已经复制或者剪切的内容&quot;\n&quot;P 从光标所在行开始，向上粘贴已经复制或者剪切的内容&quot;\n\n开始一直没搞明白。\n\n关于 dd ，使用剪切代替删除是不是更合适？\n","like_count":0}]}