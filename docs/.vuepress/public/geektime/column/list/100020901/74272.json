{"id":74272,"title":"15 | 基础篇：Linux内存是怎么工作的？","content":"<p>你好，我是倪朋飞。</p><p>前几节我们一起学习了 CPU 的性能原理和优化方法，接下来，我们将进入另一个板块——内存。</p><p>同 CPU 管理一样，内存管理也是操作系统最核心的功能之一。内存主要用来存储系统和应用程序的指令、数据、缓存等。</p><p>那么，Linux 到底是怎么管理内存的呢？今天，我就来带你一起来看看这个问题。</p><h2>内存映射</h2><p>说到内存，你能说出你现在用的这台计算机内存有多大吗？我估计你记得很清楚，因为这是我们购买时，首先考虑的一个重要参数，比方说，我的笔记本电脑内存就是 8GB 的 。</p><p>我们通常所说的内存容量，就像我刚刚提到的8GB，其实指的是物理内存。物理内存也称为主存，大多数计算机用的主存都是动态随机访问内存（DRAM）。只有内核才可以直接访问物理内存。那么，进程要访问内存时，该怎么办呢？</p><p>Linux 内核给每个进程都提供了一个独立的虚拟地址空间，并且这个地址空间是连续的。这样，进程就可以很方便地访问内存，更确切地说是访问虚拟内存。</p><p>虚拟地址空间的内部又被分为<strong>内核空间和用户空间</strong>两部分，不同字长（也就是单个CPU指令可以处理数据的最大长度）的处理器，地址空间的范围也不同。比如最常见的 32 位和 64 位系统，我画了两张图来分别表示它们的虚拟地址空间，如下所示：</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/ed/7b/ed8824c7a2e4020e2fdd2a104c70ab7b.png?wh=1004*456\" alt=\"\"></p><p>通过这里可以看出，32位系统的内核空间占用 1G，位于最高处，剩下的3G是用户空间。而 64 位系统的内核空间和用户空间都是 128T，分别占据整个内存空间的最高和最低处，剩下的中间部分是未定义的。</p><p>还记得进程的用户态和内核态吗？进程在用户态时，只能访问用户空间内存；只有进入内核态后，才可以访问内核空间内存。虽然每个进程的地址空间都包含了内核空间，但这些内核空间，其实关联的都是相同的物理内存。这样，进程切换到内核态后，就可以很方便地访问内核空间内存。</p><p>既然每个进程都有一个这么大的地址空间，那么所有进程的虚拟内存加起来，自然要比实际的物理内存大得多。所以，并不是所有的虚拟内存都会分配物理内存，只有那些实际使用的虚拟内存才分配物理内存，并且分配后的物理内存，是通过<strong>内存映射</strong>来管理的。</p><p>内存映射，其实就是将<strong>虚拟内存地址</strong>映射到<strong>物理内存地址</strong>。为了完成内存映射，内核为每个进程都维护了一张页表，记录虚拟地址与物理地址的映射关系，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/fc/b6/fcfbe2f8eb7c6090d82bf93ecdc1f0b6.png?wh=572*370\" alt=\"\"></p><p>页表实际上存储在 CPU 的内存管理单元 MMU中，这样，正常情况下，处理器就可以直接通过硬件，找出要访问的内存。</p><p>而当进程访问的虚拟地址在页表中查不到时，系统会产生一个<strong>缺页异常</strong>，进入内核空间分配物理内存、更新进程页表，最后再返回用户空间，恢复进程的运行。</p><p>另外，我在 <a href=\"https://time.geekbang.org/column/article/69859\">CPU 上下文切换的文章中</a>曾经提到， TLB（Translation Lookaside Buffer，转译后备缓冲器）会影响 CPU 的内存访问性能，在这里其实就可以得到解释。</p><p>TLB 其实就是 MMU 中页表的高速缓存。由于进程的虚拟地址空间是独立的，而 TLB 的访问速度又比 MMU 快得多，所以，通过减少进程的上下文切换，减少TLB的刷新次数，就可以提高TLB 缓存的使用率，进而提高CPU的内存访问性能。</p><p>不过要注意，MMU 并不以字节为单位来管理内存，而是规定了一个内存映射的最小单位，也就是页，通常是 4 KB大小。这样，每一次内存映射，都需要关联 4 KB 或者 4KB 整数倍的内存空间。</p><p>页的大小只有4 KB ，导致的另一个问题就是，整个页表会变得非常大。比方说，仅 32 位系统就需要 100 多万个页表项（4GB/4KB），才可以实现整个地址空间的映射。为了解决页表项过多的问题，Linux 提供了两种机制，也就是多级页表和大页（HugePage）。</p><p>多级页表就是把内存分成区块来管理，将原来的映射关系改成区块索引和区块内的偏移。由于虚拟内存空间通常只用了很少一部分，那么，多级页表就只保存这些使用中的区块，这样就可以大大地减少页表的项数。</p><p>Linux 用的正是四级页表来管理内存页，如下图所示，虚拟地址被分为5个部分，前4个表项用于选择页，而最后一个索引表示页内偏移。</p><p><img src=\"https://static001.geekbang.org/resource/image/b5/25/b5c9179ac64eb5c7ca26448065728325.png?wh=1390*460\" alt=\"\"></p><p>再看大页，顾名思义，就是比普通页更大的内存块，常见的大小有 2MB 和 1GB。大页通常用在使用大量内存的进程上，比如 Oracle、DPDK 等。</p><p>通过这些机制，在页表的映射下，进程就可以通过虚拟地址来访问物理内存了。那么具体到一个 Linux 进程中，这些内存又是怎么使用的呢？</p><h2>虚拟内存空间分布</h2><p>首先，我们需要进一步了解虚拟内存空间的分布情况。最上方的内核空间不用多讲，下方的用户空间内存，其实又被分成了多个不同的段。以 32 位系统为例，我画了一张图来表示它们的关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/71/5d/71a754523386cc75f4456a5eabc93c5d.png?wh=266*354\" alt=\"\"></p><p>通过这张图你可以看到，用户空间内存，从低到高分别是五种不同的内存段。</p><ol>\n<li>\n<p>只读段，包括代码和常量等。</p>\n</li>\n<li>\n<p>数据段，包括全局变量等。</p>\n</li>\n<li>\n<p>堆，包括动态分配的内存，从低地址开始向上增长。</p>\n</li>\n<li>\n<p>文件映射段，包括动态库、共享内存等，从高地址开始向下增长。</p>\n</li>\n<li>\n<p>栈，包括局部变量和函数调用的上下文等。栈的大小是固定的，一般是 8 MB。</p>\n</li>\n</ol><p>在这五个内存段中，堆和文件映射段的内存是动态分配的。比如说，使用 C 标准库的 malloc() 或者 mmap() ，就可以分别在堆和文件映射段动态分配内存。</p><p>其实64位系统的内存分布也类似，只不过内存空间要大得多。那么，更重要的问题来了，内存究竟是怎么分配的呢？</p><h2>内存分配与回收</h2><p>malloc() 是 C 标准库提供的内存分配函数，对应到系统调用上，有两种实现方式，即 brk() 和 mmap()。</p><p>对小块内存（小于128K），C 标准库使用 brk() 来分配，也就是通过移动堆顶的位置来分配内存。这些内存释放后并不会立刻归还系统，而是被缓存起来，这样就可以重复使用。</p><p>而大块内存（大于 128K），则直接使用内存映射 mmap() 来分配，也就是在文件映射段找一块空闲内存分配出去。</p><p>这两种方式，自然各有优缺点。</p><p>brk() 方式的缓存，可以减少缺页异常的发生，提高内存访问效率。不过，由于这些内存没有归还系统，在内存工作繁忙时，频繁的内存分配和释放会造成内存碎片。</p><p>而 mmap() 方式分配的内存，会在释放时直接归还系统，所以每次 mmap 都会发生缺页异常。在内存工作繁忙时，频繁的内存分配会导致大量的缺页异常，使内核的管理负担增大。这也是malloc 只对大块内存使用 mmap  的原因。</p><p>了解这两种调用方式后，我们还需要清楚一点，那就是，当这两种调用发生后，其实并没有真正分配内存。这些内存，都只在首次访问时才分配，也就是通过缺页异常进入内核中，再由内核来分配内存。</p><p>整体来说，Linux 使用伙伴系统来管理内存分配。前面我们提到过，这些内存在MMU中以页为单位进行管理，伙伴系统也一样，以页为单位来管理内存，并且会通过相邻页的合并，减少内存碎片化（比如brk方式造成的内存碎片）。</p><p>你可能会想到一个问题，如果遇到比页更小的对象，比如不到1K的时候，该怎么分配内存呢？</p><p>实际系统运行中，确实有大量比页还小的对象，如果为它们也分配单独的页，那就太浪费内存了。</p><p>所以，在用户空间，malloc 通过 brk() 分配的内存，在释放时并不立即归还系统，而是缓存起来重复利用。在内核空间，Linux 则通过 slab 分配器来管理小内存。你可以把slab 看成构建在伙伴系统上的一个缓存，主要作用就是分配并释放内核中的小对象。</p><p>对内存来说，如果只分配而不释放，就会造成内存泄漏，甚至会耗尽系统内存。所以，在应用程序用完内存后，还需要调用 free() 或 unmap() ，来释放这些不用的内存。</p><p>当然，系统也不会任由某个进程用完所有内存。在发现内存紧张时，系统就会通过一系列机制来回收内存，比如下面这三种方式：</p><ul>\n<li>\n<p>回收缓存，比如使用 LRU（Least Recently Used）算法，回收最近使用最少的内存页面；</p>\n</li>\n<li>\n<p>回收不常访问的内存，把不常用的内存通过交换分区直接写到磁盘中；</p>\n</li>\n<li>\n<p>杀死进程，内存紧张时系统还会通过 OOM（Out of Memory），直接杀掉占用大量内存的进程。</p>\n</li>\n</ul><p>其中，第二种方式回收不常访问的内存时，会用到交换分区（以下简称 Swap）。Swap 其实就是把一块磁盘空间当成内存来用。它可以把进程暂时不用的数据存储到磁盘中（这个过程称为换出），当进程访问这些内存时，再从磁盘读取这些数据到内存中（这个过程称为换入）。</p><p>所以，你可以发现，Swap 把系统的可用内存变大了。不过要注意，通常只在内存不足时，才会发生 Swap 交换。并且由于磁盘读写的速度远比内存慢，Swap 会导致严重的内存性能问题。</p><p>第三种方式提到的  OOM（Out of Memory），其实是内核的一种保护机制。它监控进程的内存使用情况，并且使用 oom_score 为每个进程的内存使用情况进行评分：</p><ul>\n<li>\n<p>一个进程消耗的内存越大，oom_score 就越大；</p>\n</li>\n<li>\n<p>一个进程运行占用的 CPU 越多，oom_score 就越小。</p>\n</li>\n</ul><p>这样，进程的 oom_score 越大，代表消耗的内存越多，也就越容易被 OOM 杀死，从而可以更好保护系统。</p><p>当然，为了实际工作的需要，管理员可以通过 /proc 文件系统，手动设置进程的 oom_adj ，从而调整进程的 oom_score。</p><p>oom_adj 的范围是 [-17, 15]，数值越大，表示进程越容易被 OOM 杀死；数值越小，表示进程越不容易被 OOM 杀死，其中 -17 表示禁止 OOM。</p><p>比如用下面的命令，你就可以把 sshd 进程的 oom_adj 调小为 -16，这样， sshd 进程就不容易被 OOM 杀死。</p><pre><code>echo -16 &gt; /proc/$(pidof sshd)/oom_adj\n</code></pre><h2>如何查看内存使用情况</h2><p>通过了解内存空间的分布，以及内存的分配和回收，我想你对内存的工作原理应该有了大概的认识。当然，系统的实际工作原理更加复杂，也会涉及其他一些机制，这里我只讲了最主要的原理。掌握了这些，你可以对内存的运作有一条主线认识，不至于脑海里只有术语名词的堆砌。</p><p>那么在了解内存的工作原理之后，我们又该怎么查看系统内存使用情况呢？</p><p>其实前面CPU内容的学习中，我们也提到过一些相关工具。在这里，你第一个想到的应该是 free  工具吧。下面是一个 free 的输出示例：</p><pre><code># 注意不同版本的free输出可能会有所不同\n$ free\n              total        used        free      shared  buff/cache   available\nMem:        8169348      263524     6875352         668     1030472     7611064\nSwap:             0           0           0\n</code></pre><p>你可以看到，free 输出的是一个表格，其中的数值都默认以字节为单位。表格总共有两行六列，这两行分别是物理内存 Mem 和交换分区 Swap 的使用情况，而六列中，每列数据的含义分别为：</p><ul>\n<li>\n<p>第一列，total 是总内存大小；</p>\n</li>\n<li>\n<p>第二列，used 是已使用内存的大小，包含了共享内存；</p>\n</li>\n<li>\n<p>第三列，free 是未使用内存的大小；</p>\n</li>\n<li>\n<p>第四列，shared 是共享内存的大小；</p>\n</li>\n<li>\n<p>第五列，buff/cache 是缓存和缓冲区的大小；</p>\n</li>\n<li>\n<p>最后一列，available 是新进程可用内存的大小。</p>\n</li>\n</ul><p>这里尤其注意一下，最后一列的可用内存available 。available不仅包含未使用内存，还包括了可回收的缓存，所以一般会比未使用内存更大。不过，并不是所有缓存都可以回收，因为有些缓存可能正在使用中。</p><p>不过，我们知道，free 显示的是整个系统的内存使用情况。如果你想查看进程的内存使用情况，可以用 top 或者 ps 等工具。比如，下面是 top 的输出示例：</p><pre><code># 按下M切换到内存排序\n$ top\n...\nKiB Mem :  8169348 total,  6871440 free,   267096 used,  1030812 buff/cache\nKiB Swap:        0 total,        0 free,        0 used.  7607492 avail Mem\n\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n  430 root      19  -1  122360  35588  23748 S   0.0  0.4   0:32.17 systemd-journal\n 1075 root      20   0  771860  22744  11368 S   0.0  0.3   0:38.89 snapd\n 1048 root      20   0  170904  17292   9488 S   0.0  0.2   0:00.24 networkd-dispat\n    1 root      20   0   78020   9156   6644 S   0.0  0.1   0:22.92 systemd\n12376 azure     20   0   76632   7456   6420 S   0.0  0.1   0:00.01 systemd\n12374 root      20   0  107984   7312   6304 S   0.0  0.1   0:00.00 sshd\n...\n</code></pre><p>top 输出界面的顶端，也显示了系统整体的内存使用情况，这些数据跟 free 类似，我就不再重复解释。我们接着看下面的内容，跟内存相关的几列数据，比如 VIRT、RES、SHR 以及 %MEM 等。</p><p>这些数据，包含了进程最重要的几个内存使用情况，我们挨个来看。</p><ul>\n<li>\n<p>VIRT 是进程虚拟内存的大小，只要是进程申请过的内存，即便还没有真正分配物理内存，也会计算在内。</p>\n</li>\n<li>\n<p>RES 是常驻内存的大小，也就是进程实际使用的物理内存大小，但不包括 Swap 和共享内存。</p>\n</li>\n<li>\n<p>SHR 是共享内存的大小，比如与其他进程共同使用的共享内存、加载的动态链接库以及程序的代码段等。</p>\n</li>\n<li>\n<p>%MEM 是进程使用物理内存占系统总内存的百分比。</p>\n</li>\n</ul><p>除了要认识这些基本信息，在查看 top 输出时，你还要注意两点。</p><p>第一，虚拟内存通常并不会全部分配物理内存。从上面的输出，你可以发现每个进程的虚拟内存都比常驻内存大得多。</p><p>第二，共享内存 SHR 并不一定是共享的，比方说，程序的代码段、非共享的动态链接库，也都算在 SHR 里。当然，SHR 也包括了进程间真正共享的内存。所以在计算多个进程的内存使用时，不要把所有进程的 SHR 直接相加得出结果。</p><h2>小结</h2><p>今天，我们梳理了 Linux 内存的工作原理。对普通进程来说，它能看到的其实是内核提供的虚拟内存，这些虚拟内存还需要通过页表，由系统映射为物理内存。</p><p>当进程通过 malloc() 申请内存后，内存并不会立即分配，而是在首次访问时，才通过缺页异常陷入内核中分配内存。</p><p>由于进程的虚拟地址空间比物理内存大很多，Linux 还提供了一系列的机制，应对内存不足的问题，比如缓存的回收、交换分区 Swap 以及 OOM 等。</p><p>当你需要了解系统或者进程的内存使用情况时，可以用 free 和 top 、ps 等性能工具。它们都是分析性能问题时最常用的性能工具，希望你能熟练使用它们，并真正理解各个指标的含义。</p><h2>思考</h2><p>最后，我想请你来聊聊你所理解的Linux内存。你碰到过哪些内存相关的性能瓶颈？你又是怎么样来分析它们的呢？你可以结合今天学到的内存知识和工作原理，提出自己的观点。</p><p>欢迎在留言区和我讨论，也欢迎你把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","neighbors":{"left":{"article_title":"14 | 答疑（二）：如何用perf工具分析Java程序？","id":73738},"right":{"article_title":"16 | 基础篇：怎么理解内存中的Buffer和Cache？","id":74633}},"comments":[{"had_liked":false,"id":53354,"user_name":"JohnT3e","can_delete":false,"product_type":"c1","uid":1063982,"ip_address":"","ucode":"CF4AAAC933529C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdWHFCr66TzHS2CpCkiaRaDIk3tU5sKPry16Q7ic0mZZdy8LOCYc38wOmyv5RZico7icBVeaPX8X2jcw/132","comment_is_top":false,"comment_ctime":1545631368,"is_pvip":false,"replies":[{"id":"19332","content":"👍 谢谢分享，这篇博客很详细","user_name":"作者回复","comment_id":53354,"uid":"1001282","ip_address":"","utype":1,"ctime":1545643835,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"740280006280","product_id":100020901,"comment_content":"目前我配合使用《Operating System Concepts》这本书学习此专栏，也是一个不错的选择。此书中的第四部分“Memory Management”对今天这部分内容有较为详细的描述，感兴趣的同学可以去看一下。另外对于TOP命令中输出的内存情况解释，可以认真看一下man手册的内容。如果你动手能力比较强，可以看https:&#47;&#47;blog.holbertonschool.com&#47;hack-the-virtual-memory-malloc-the-heap-the-program-break&#47;这篇博客，手把手教你使用程序（C语言）来实际地去搞清楚虚拟内存分布。","like_count":173,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434108,"discussion_content":"👍 谢谢分享，这篇博客很详细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545643835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1320487,"avatar":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","nickname":"罗杰","note":"","ucode":"96BAFAA147341F","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555900,"discussion_content":"英文的博客讲的可真是太精彩了，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647095249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80379,"user_name":"梦回汉唐","can_delete":false,"product_type":"c1","uid":1321581,"ip_address":"","ucode":"9C66E35165F813","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/6d/0e436c1c.jpg","comment_is_top":false,"comment_ctime":1553653094,"is_pvip":false,"replies":[{"id":"29332","content":"👍","user_name":"作者回复","comment_id":80379,"uid":"1001282","ip_address":"","utype":1,"ctime":1553697680,"user_name_real":"倪朋飞"}],"discussion_count":6,"race_medal":0,"score":"306496331110","product_id":100020901,"comment_content":"1、调用c标准库的都是用户空间的调用，用户空间的内存分配都是基于buddy算法（伙伴算法），并不涉及slab<br>2、brk()方式之所以会产生内存碎片，是由于brk分配的内存是推_edata指针，从堆的低地址向高地址推进。这种情况下，如果高地址的内存不释放，低地址的内存是得不到释放的<br>3、mmap()方式分配的内存，是在堆与栈之间的空闲区域分配虚拟内存，直接拿到的是内存地址，可以直接操作内存的释放<br><br>上述的都是在用户空间发生的行为，只有在内核空间，内核调用kmalloc去分配内存的时候，才会涉及到slab","like_count":72,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444841,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553697680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1587280,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epZhOmpZpicOzalVU7kibd59dMJc25N9cfGu9icBAIUPzYNYDedtzlYHZBiazaYiadgqvlotrjM4CA6KOQ/132","nickname":"Geek_ty","note":"","ucode":"F8178B6B09D628","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305286,"discussion_content":"注意一哈这个评论会容易产生误导。我们平时所说的内存页分配指的都是用户态的页分配，但是分配和管理的过程需要用户态和内核态的合作。实际上产生系统调用后通过80中断就进入了内核态工作了。“上述的都是在用户空间发生的行为，只有在内核空间，内核调用kmalloc去分配内存的时候，才会涉及到slab”最好假装看不见，不然容易越看越晕或者产生误解。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599839676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1236573,"avatar":"https://static001.geekbang.org/account/avatar/00/12/de/5d/a7e748db.jpg","nickname":"Kim","note":"","ucode":"39CC8E1E8EFB8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349662,"discussion_content":"关于第三点，不太明白，mmap分配的内存也是虚拟内存，拿到的也是虚拟内存地址，怎么就能直接操作内存的释放呢？不是应该通过内核态才能么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613442119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2830902,"avatar":"","nickname":"Geek6703","note":"","ucode":"8F71AAD9C355CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1236573,"avatar":"https://static001.geekbang.org/account/avatar/00/12/de/5d/a7e748db.jpg","nickname":"Kim","note":"","ucode":"39CC8E1E8EFB8A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531125,"discussion_content":"我想是因为用户态可以通过munmap系统调用进入内核态直接释放的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637236807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349662,"ip_address":""},"score":531125,"extra":"{\"user_type\":1}"}]},{"author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293770,"discussion_content":"没明白，第2点的“这种情况下，如果高地址的内存不释放，低地址的内存是得不到释放的”\n高地址内存不释放，怎么会导致 低地址内存无法释放呢？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595663707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1188710,"avatar":"https://static001.geekbang.org/account/avatar/00/12/23/66/413c0bb5.jpg","nickname":"LDxy","note":"","ucode":"956432CE7B7761","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1170843,"avatar":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","nickname":"yyl","note":"","ucode":"1741DACDFCA9AF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297286,"discussion_content":"看一下文中的内存布局图就明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596857060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293770,"ip_address":""},"score":297286,"extra":""}]}]},{"had_liked":false,"id":53104,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1545585592,"is_pvip":false,"replies":[{"id":"19449","content":"👍 谢谢分享你的经历。缓存和swap后面都还会细讲","user_name":"作者回复","comment_id":53104,"uid":"1001282","ip_address":"","utype":1,"ctime":1545696430,"user_name_real":"倪朋飞"}],"discussion_count":7,"race_medal":0,"score":"246358721464","product_id":100020901,"comment_content":"[D15打卡]<br>linux的内存跟windows的很不一样。类linux的系统会尽量使用内存缓存东西，提供运行效率。所以linux&#47;mac显示的free剩余内存通常很小，但实际上被缓存的cache可能很大，并不代表系统内存紧张！<br>曾经就闹过笑话，看见系统free值很低，怕程序因为oom被系统杀掉，还特意写个c程序去挤内存。程序不停的申请1MB内存然后memset，随机挑几个位置写，保证申请的都被加载到物理内存中。（跟文中描述的一致，只申请不使用不会加载到物理内存）然后挤的差不多了就把测试程序关掉。看上去free变大了很多很开心。现在想想，就是掩耳盗铃罢了。<br>以前物理机上还有swap交换分区，现在都是云服务器，基本没有了该分区。也不会遇到因为频繁使用交换分区导致性能下降的问题了。<br>我内存方面的问题遇到的都比较简单，基本上就是top&#47;free看看系统和各程序的，找到有问题的程序，看看是否有内存泄露。平常不泄漏都是够用的。<br>redis对内存比较敏感，曾经就因为配置项是默认值，在内存用完后，所有的set操作都直接返回错误，导致线上系统故障。（redis在备份时会新开一个进程，实际使用内存量会翻番。）后来会定期检查redis 的info memory 看内存使用情况。<br>——————————<br>期待的内存篇开始了，好开心！又可以跟着老师学新知识啦！","like_count":57,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434034,"discussion_content":"👍 谢谢分享你的经历。缓存和swap后面都还会细讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545696430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1298046,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZicicibGibtR5zAia782Ajc5I5BN3F3tjAdlibATIknHv67gbxeH21N7B6vbgwLjYb1miaLKhqicptB5ibYw/132","nickname":"阿飞","note":"","ucode":"F8B1FC8521264D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534365,"discussion_content":"redis fork子进程去做快照，主子进程共享内存段，怎么会翻翻呢，如果翻翻了那是不是内存到60%就不能做快照呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638172153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1298046,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZicicibGibtR5zAia782Ajc5I5BN3F3tjAdlibATIknHv67gbxeH21N7B6vbgwLjYb1miaLKhqicptB5ibYw/132","nickname":"阿飞","note":"","ucode":"F8B1FC8521264D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535415,"discussion_content":"不一定是完全翻倍，但也不是说完全不占额外空间吧。我猜是在写时才需要重新拷贝一份。至于这拷贝的一部分是多少，就待定了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638434457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534365,"ip_address":""},"score":535415,"extra":""}]},{"author":{"id":2559543,"avatar":"","nickname":"清水","note":"","ucode":"D25F83AA62FD70","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399250,"discussion_content":"你好，问下，部署在pod的JAVA线程内存，top命令中%mem感觉涨上去就不下了了，我们开发说是要发生FGC才会下降，是这样吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632926650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202482,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ydFhHonicUQibGlAfsAYBibNOfSxpCG5cJNp9oRibTJm3TrxM7Hj4WPPCRE3vluZJb0TGQqpKCaBWLdmra5Su1KF5Q/132","nickname":"yudidi","note":"","ucode":"70283DE39D86F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390510,"discussion_content":"挤内存的程序是为了啥呢? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629871850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1202482,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ydFhHonicUQibGlAfsAYBibNOfSxpCG5cJNp9oRibTJm3TrxM7Hj4WPPCRE3vluZJb0TGQqpKCaBWLdmra5Su1KF5Q/132","nickname":"yudidi","note":"","ucode":"70283DE39D86F5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397104,"discussion_content":"就是服务经常会oom，以为把内存挤出来一点，就能减少oom的风险了。\n是不是有点掩耳盗铃的意思？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632562994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":390510,"ip_address":""},"score":397104,"extra":""}]},{"author":{"id":1235862,"avatar":"https://static001.geekbang.org/account/avatar/00/12/db/96/f3f692e8.jpg","nickname":"Loading","note":"","ucode":"8FB1C984970924","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":241989,"discussion_content":"其实Win也类似，只是Win10之前的版本没有在任务管理器里面直接显示出来，Win10的任务管理器中可以看到内存的备用部分(包含未频繁使用的缓存数据和代码的内存)就是缓存，几乎占用了剩下可用内存的全部。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587454674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53199,"user_name":"划时代","can_delete":false,"product_type":"c1","uid":1061454,"ip_address":"","ucode":"9554CE2F83B77F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2o1Izf2YyJSnnI0ErZ51pYRlnrmibqUTaia3tCU1PjMxuwyXSKOLUYiac2TQ5pd5gNGvS81fVqKWGvDsZLTM8zhWg/132","comment_is_top":false,"comment_ctime":1545615252,"is_pvip":false,"replies":[{"id":"19445","content":"👍 ","user_name":"作者回复","comment_id":53199,"uid":"1001282","ip_address":"","utype":1,"ctime":1545696031,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"130394634132","product_id":100020901,"comment_content":"我的分析步骤：使用top和ps查询系统中大量占用内存的进程，使用cat &#47;proc&#47;[pid]&#47;status和pmap -x pid查看某个进程使用内存的情况和动态变化。","like_count":30,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434061,"discussion_content":"👍 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545696031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53142,"user_name":"espzest","can_delete":false,"product_type":"c1","uid":1094470,"ip_address":"","ucode":"64B1A7DEA19348","user_header":"https://static001.geekbang.org/account/avatar/00/10/b3/46/ec914238.jpg","comment_is_top":false,"comment_ctime":1545611625,"is_pvip":false,"replies":[{"id":"19303","content":"嗯嗯，是的，谢谢指出。slab是内核空间的，只用来管理内核中的小块内存","user_name":"作者回复","comment_id":53142,"uid":"1001282","ip_address":"","utype":1,"ctime":1545638312,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"121804695913","product_id":100020901,"comment_content":"用户空间malloc不会使用slab机制吧，slab是内核空间的，对不？","like_count":29,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434043,"discussion_content":"嗯嗯，是的，谢谢指出。slab是内核空间的，只用来管理内核中的小块内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545638312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1803259,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","nickname":"linker","note":"","ucode":"6C5799F2FC2C82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210131,"discussion_content":"用户空间的glibc也有内存管理，类似内核空间的伙伴系统，但是不一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584709928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317646,"discussion_content":"然后更上层又会封装一层 比如golang的内存管理类似于tcmalloc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603586799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53206,"user_name":"威","can_delete":false,"product_type":"c1","uid":1068542,"ip_address":"","ucode":"C921CDCB22B9A3","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/fe/882eaf0f.jpg","comment_is_top":false,"comment_ctime":1545615856,"is_pvip":false,"replies":[{"id":"19444","content":"会的，比如 dmesg |grep -E ‘kill|oom|out of memory’","user_name":"作者回复","comment_id":53206,"uid":"1001282","ip_address":"","utype":1,"ctime":1545695987,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"113214765552","product_id":100020901,"comment_content":"老师您好，请问如果发生了OOM，系统会记录下是哪个（些）进程被杀掉吗？","like_count":27,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434064,"discussion_content":"会的，比如 dmesg |grep -E ‘kill|oom|out of memory’","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545695987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1797216,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/6c/60/dadcf0b4.jpg","nickname":"泡泡龙","note":"","ucode":"F72BDC55C1DDFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251586,"discussion_content":"grep &#34;Out of memory&#34; /var/log/messages","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1588088582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":231125,"user_name":"生活不如诗","can_delete":false,"product_type":"c1","uid":1139515,"ip_address":"","ucode":"FD48EABEEC52B7","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/3b/c5cd68ab.jpg","comment_is_top":false,"comment_ctime":1593589620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"100377837428","product_id":100020901,"comment_content":"一、内存工作原理：<br>\t1.linux内核给每个进程提供了一个独立的虚拟地址空间，并且这个空间是连续的。<br>\t2.虚拟地址空间分为内核空间和用户空间。进程在用户态时只能访问用户空间内存，只有进入内核态后才能访问内核空间内存；虽然每个进程都有内核空间，但这些内核空间关联的是相同的物理内存。<br>\t3.并不是所有的虚拟内存都会分配物理内存，只有实际使用的虚拟内存才分配物理内存；<br>二、内存回收的三种方式：<br>\t1.回收缓存，比如通过LRU算法回收最近很少使用的内存页面；<br>\t2.回收不常访问的内存，把不常用的内存通过交换分区直接写到磁盘中；<br>\t\t注意：此方法会用到swap分区。把进程暂时不用的数据放到磁盘（swap）上，不过会严重影响性能；<br>\t3.通过oom杀死进程；<br>\t\t1.一个进程消耗的内存越大，oom_score越大；<br>\t\t2.一个进程运行占用的cpu越多，oom_score越小；<br>\t\t3.oom_score越大的进程，越容易被OOM杀死；<br>\t\t4.可以通过调整&#47;proc&#47;${pidof sshd)&#47;oom_adj来调整oom_score，值范围是[-17,15]，-17表示禁止被OOM；<br>三、内存查看方式：<br>\t1. free<br>\t2. top<br>\t\t1. VIRT是进程申请的虚拟内存，比实际占用内存要大得多；<br>\t\t2. RES是常驻内存，是进程实际占用内存；<br>\t\t3. SHR是共享内存，比如与其他进程共同使用的共享内存、加载的动态链接库以及程序的代码段等。不过SHR也会有程序代码段，非共享动态链接库等，所以不能把多个进程的SHR相加得结果；<br>\t注意：<br>\t\t1. 虚拟内存通常不会全部分配到物理内存；","like_count":24},{"had_liked":false,"id":53470,"user_name":"赵强强","can_delete":false,"product_type":"c1","uid":1073596,"ip_address":"","ucode":"1B8AE07484C69A","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/bc/88a905a5.jpg","comment_is_top":false,"comment_ctime":1545652019,"is_pvip":false,"replies":[{"id":"19396","content":"MMU全称就是内存管理单元，管理地址映射关系（也就是页表）。但MMU的性能跟CPU比还是不够快，所以又有了TLB。TLB实际上是MMU的一部分，把页表缓存起来以提升性能。","user_name":"作者回复","comment_id":53470,"uid":"1001282","ip_address":"","utype":1,"ctime":1545664717,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"65970161459","product_id":100020901,"comment_content":"倪老师，“Operating Systems Design and Implementation”里面说，大部分页式存储管理，页表是存储到内存里面的，为降低频繁访问内存计算物理地址，引入TLB用于缓存常用映射以提升性能。以现在流行的linux为例，本节课说页表存储在MMU是否还正确呢？","like_count":15,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434148,"discussion_content":"MMU全称就是内存管理单元，管理地址映射关系（也就是页表）。但MMU的性能跟CPU比还是不够快，所以又有了TLB。TLB实际上是MMU的一部分，把页表缓存起来以提升性能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545664717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1889038,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/d3/0e/ef771277.jpg","nickname":"Akon","note":"","ucode":"F0DA31C4BB4947","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193606,"discussion_content":"页表是内核初始化的，是存储在Dram中的，被映射的页表项会缓存在TLB中，页表就是一堆数组和映射算法","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583158569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53239,"user_name":"虎虎❤️","can_delete":false,"product_type":"c1","uid":1086535,"ip_address":"","ucode":"157F261E80291A","user_header":"https://static001.geekbang.org/account/avatar/00/10/94/47/75875257.jpg","comment_is_top":false,"comment_ctime":1545618547,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"48790258803","product_id":100020901,"comment_content":"请教老师几个问题<br><br>1. 当内存紧张时，系统通过三种机制回收内存。第二种换页比较好理解， 但是第一种LRU回收内存页怎么理解？回收后的页去哪了?如果直接删除会导致程序出问题吗？<br><br>2. OOM的分数是参照进程的实际消耗内存还是虚拟内存大小？<br><br>3. 进程启动时，是不是需要分配一个最小的内存？都包括什么呢？如何确定最小的内存是多大呢？比如我在k8s里设置container的request值，我希望是能容乃下这个container的最小内存，有没有办法计算呢？<br><br>有的问题比较小白，望老师包含。如果无法简短的回答，能否推荐些资料呢？谢谢","like_count":11,"discussions":[{"author":{"id":1549032,"avatar":"","nickname":"Zzz","note":"","ucode":"9323254354868B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325859,"discussion_content":"应该是buff或者cache","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605446270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1889038,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/d3/0e/ef771277.jpg","nickname":"Akon","note":"","ucode":"F0DA31C4BB4947","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193601,"discussion_content":"回收的可能只是brk调用free释放但没有实际释放的cache？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583158377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71506,"user_name":"李亮亮","can_delete":false,"product_type":"c1","uid":1116508,"ip_address":"","ucode":"290907F930B261","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/5c/b5d79d20.jpg","comment_is_top":false,"comment_ctime":1551359203,"is_pvip":false,"replies":[{"id":"25721","content":"对的，Linux也是一个程序，本质上还是数据结构+算法😊","user_name":"作者回复","comment_id":71506,"uid":"1001282","ip_address":"","utype":1,"ctime":1551400423,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"40206064867","product_id":100020901,"comment_content":"我的理解就是，Linux里面所有的概念皆结构（C语言的结构体），页表也是一种结构体，也就是数据，所以保存还是在内存里面。mmu其实就是一个硬件，它的作用就是找到某个虚拟地址到物理地址的映射，也就是找到正确的页表项。然后再交给CPU，当然也可以把找到的结果缓存在TBL中，这样CPU下次使用同一个虚拟地址就省了转换这步了，老师，不知道我理解的有错吗？","like_count":9,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441179,"discussion_content":"对的，Linux也是一个程序，本质上还是数据结构+算法😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551400423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1671811,"avatar":"https://static001.geekbang.org/account/avatar/00/19/82/83/50931cc3.jpg","nickname":"、Ama","note":"","ucode":"50CFBE9125C379","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":307300,"discussion_content":"文章中说页表存储于mmu，这里有问题吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600593771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2328318,"avatar":"https://static001.geekbang.org/account/avatar/00/23/86/fe/0fb57311.jpg","nickname":"游离的鱼","note":"","ucode":"292D852B51C7D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339307,"discussion_content":"兄弟的描述，加上老师的回答解决了我心中的一些小疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609598531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53461,"user_name":"赵强强","can_delete":false,"product_type":"c1","uid":1073596,"ip_address":"","ucode":"1B8AE07484C69A","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/bc/88a905a5.jpg","comment_is_top":false,"comment_ctime":1545650439,"is_pvip":false,"replies":[{"id":"19397","content":"1. 进程不需要获取其他进程的内存情况<br>2. 所有进程的内存都是由内核来管理的，内核保证内存的访问安全。比如，访问非法地址时，进程会panic","user_name":"作者回复","comment_id":53461,"uid":"1001282","ip_address":"","utype":1,"ctime":1545664846,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"40200356103","product_id":100020901,"comment_content":"倪老师，如果进程间的虚拟内存空间独立，每个进程又有自己的页表，那么进程怎么获知其他进程占用的物理内存情况，怎么防止覆盖其他进程的物理内存块呢？","like_count":9,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434145,"discussion_content":"1. 进程不需要获取其他进程的内存情况\n2. 所有进程的内存都是由内核来管理的，内核保证内存的访问安全。比如，访问非法地址时，进程会panic","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545664846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53134,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1545611089,"is_pvip":false,"replies":[{"id":"19447","content":"😂","user_name":"作者回复","comment_id":53134,"uid":"1001282","ip_address":"","utype":1,"ctime":1545696223,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"40200316753","product_id":100020901,"comment_content":"打卡day16<br>工作中，发生oom基本都是程序跑的，都甩给研发了～😂","like_count":9,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434040,"discussion_content":"😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545696223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112850,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1562831356,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23037667836","product_id":100020901,"comment_content":"看的很爽这篇文章，之前知道一点操作系统关于内存的分配使用，内存映射管理物理内存和虚拟内存的对应关系，也知道页。但是还没见过将二者串起来，好多疑问解决。<br>我们经常说的多少位长，到底有什么区别？就是虚拟内存空间大小，以及空间的分配区别。<br>虚拟内存和物理内存的分配，怎么让物理内存能及时跟进程需要的虚拟内存交互对应起来？内核态和用户态的切换，知道进程有个虚拟地址，一个是用户的，一个是内核的，当调用进程的某些内存发现维护的内存映射没有对应的，及切换到内核态，内核把对应的虚拟内存放进去物理内存，再切回来用户态，进程继续，妙。","like_count":5,"discussions":[{"author":{"id":1107484,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/1c/9d3744ee.jpg","nickname":"小李讲源码","note":"","ucode":"2573037D7C82C8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536503,"discussion_content":"插眼👀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638797516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2328318,"avatar":"https://static001.geekbang.org/account/avatar/00/23/86/fe/0fb57311.jpg","nickname":"游离的鱼","note":"","ucode":"292D852B51C7D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339308,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609598938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242492,"user_name":"zhaolm","can_delete":false,"product_type":"c1","uid":2062394,"ip_address":"","ucode":"6C89683624153D","user_header":"","comment_is_top":false,"comment_ctime":1597741785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18777610969","product_id":100020901,"comment_content":"https:&#47;&#47;blog.csdn.net&#47;tennysonsky&#47;article&#47;details&#47;45092229<br>这边文章关于的内存使用  比较容易懂；","like_count":4},{"had_liked":false,"id":53434,"user_name":"圣域烈焰","can_delete":false,"product_type":"c1","uid":1301926,"ip_address":"","ucode":"ED2323472BD66C","user_header":"https://static001.geekbang.org/account/avatar/00/13/dd/a6/adb3b1d9.jpg","comment_is_top":false,"comment_ctime":1545644170,"is_pvip":false,"replies":[{"id":"19438","content":"下一期讲 buffer 和 cache","user_name":"作者回复","comment_id":53434,"uid":"1001282","ip_address":"","utype":1,"ctime":1545694552,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"14430546058","product_id":100020901,"comment_content":"请教一个问题，使用free命令的时候，看到的buffer、cache和shared有什么区别？","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434137,"discussion_content":"下一期讲 buffer 和 cache","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545694552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53264,"user_name":"大甜菜","can_delete":false,"product_type":"c1","uid":1354971,"ip_address":"","ucode":"34EB4775A53AE3","user_header":"https://static001.geekbang.org/account/avatar/00/14/ac/db/51399da1.jpg","comment_is_top":false,"comment_ctime":1545620700,"is_pvip":false,"replies":[{"id":"19300","content":"嗯嗯，是的，谢谢指出","user_name":"作者回复","comment_id":53264,"uid":"1001282","ip_address":"","utype":1,"ctime":1545637943,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"14430522588","product_id":100020901,"comment_content":"malloc本身不会使用slab<br>只有内核中使用kmalloc才回通过slab分配内存","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434087,"discussion_content":"嗯嗯，是的，谢谢指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545637943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1249598,"avatar":"https://static001.geekbang.org/account/avatar/00/13/11/3e/925aa996.jpg","nickname":"HelloBug","note":"","ucode":"E61A4AD5C2F724","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548256,"discussion_content":"malloc会触发内核使用kmalloc通过slab分配内存吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643101947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53183,"user_name":"wahaha","can_delete":false,"product_type":"c1","uid":1051402,"ip_address":"","ucode":"E60166599CF31D","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/0a/fa152399.jpg","comment_is_top":false,"comment_ctime":1545614305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14430516193","product_id":100020901,"comment_content":"请问，当手动让一个进程暂停后，如何手动让内核立即swap out该进程占用的内存？","like_count":3},{"had_liked":false,"id":214526,"user_name":"刘文坛","can_delete":false,"product_type":"c1","uid":1141060,"ip_address":"","ucode":"327D908175EDD0","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/44/1588e8b6.jpg","comment_is_top":false,"comment_ctime":1588761784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10178696376","product_id":100020901,"comment_content":"页表是放在内存当中的，不是在mmu中吧？","like_count":2},{"had_liked":false,"id":78551,"user_name":"周曙光爱学习","can_delete":false,"product_type":"c1","uid":1022920,"ip_address":"","ucode":"98EAB6EBAB34B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/c8/665100a3.jpg","comment_is_top":false,"comment_ctime":1553173501,"is_pvip":false,"replies":[{"id":"28772","content":"虚拟内存由内核来管理，进程不能直接访问物理内存","user_name":"作者回复","comment_id":78551,"uid":"1001282","ip_address":"","utype":1,"ctime":1553319007,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10143108093","product_id":100020901,"comment_content":"虚拟内存中只有内核空间能访问物理内存吗？也就是说只有内核空间才会有页表与物理内存关联吗？那用户空间的虚拟内存怎么玩？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444140,"discussion_content":"虚拟内存由内核来管理，进程不能直接访问物理内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553319007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56555,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1546487362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10136421954","product_id":100020901,"comment_content":"DAY15，内存工作原理有点难理解~~","like_count":2},{"had_liked":false,"id":55023,"user_name":"Geek_37593b","can_delete":false,"product_type":"c1","uid":1333821,"ip_address":"","ucode":"9C0CD7C30CA62C","user_header":"https://static001.geekbang.org/account/avatar/00/14/5a/3d/1a1754f2.jpg","comment_is_top":false,"comment_ctime":1546002943,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10135937535","product_id":100020901,"comment_content":"先打卡，地铁上。","like_count":2},{"had_liked":false,"id":54622,"user_name":"Griffin","can_delete":false,"product_type":"c1","uid":1087329,"ip_address":"","ucode":"CF766B92A65261","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/61/34a0da09.jpg","comment_is_top":false,"comment_ctime":1545916653,"is_pvip":false,"replies":[{"id":"19949","content":"MAC还真不了解。接下来还有swap的文章，到时候可以参考试试","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546005988,"ip_address":"","comment_id":54622,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135851245","product_id":100020901,"comment_content":"hmmm，我要提问。老师，我的开发机是macbook。内存是16G。但是经常出现已12G，swap用了3-4G。我平时没用ide就tmux+vim，内存大户就一个dorker和chrome。卡的我不得了，每次都只能重启来缓解。发现有个windowserver占用很多。感觉16G内存开发应该完全够用才对啊，有没有mac下可以禁用swap？让内存不够的时候优先回收缓存和不常用的内存，而不是滥用swap？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434516,"discussion_content":"MAC还真不了解。接下来还有swap的文章，到时候可以参考试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546005988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54164,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1545799487,"is_pvip":false,"replies":[{"id":"19703","content":"GC负责回收内存","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545835677,"ip_address":"","comment_id":54164,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135734079","product_id":100020901,"comment_content":"JAVA的GC是不是也是分配内存的？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434377,"discussion_content":"GC负责回收内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545835677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53219,"user_name":"walker","can_delete":false,"product_type":"c1","uid":1324219,"ip_address":"","ucode":"FA5B2400A53730","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/bb/0b971fca.jpg","comment_is_top":false,"comment_ctime":1545617267,"is_pvip":false,"replies":[{"id":"19342","content":"进程需要通过系统调用进入内核态，内核空间的分布和管理方法跟用户态也不同，后面的案例也会提到","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545644574,"ip_address":"","comment_id":53219,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135551859","product_id":100020901,"comment_content":"怎样去区分一个应用的用户态和内核态。他们在使用内存方面有什么异同。内核的内存空间不像用户内存空间一样分布吗","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434070,"discussion_content":"进程需要通过系统调用进入内核态，内核空间的分布和管理方法跟用户态也不同，后面的案例也会提到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545644574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314856,"user_name":"谛听","can_delete":false,"product_type":"c1","uid":1228687,"ip_address":"","ucode":"7539D5B06662EA","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/8f/51f044dc.jpg","comment_is_top":false,"comment_ctime":1633506673,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5928473969","product_id":100020901,"comment_content":"1. 比如说，使用 C 标准库的 malloc() 或者 mmap() ，就可以分别在堆和文件映射段动态分配内存。<br>2. malloc() 是 C 标准库提供的内存分配函数，对应到系统调用上，有两种实现方式，即 brk() 和 mmap()。<br>以上两句话有些矛盾，malloc() 在堆上分配内存，mmap() 在文件映射段分配内存，为啥 malloc() 会包含 mmap() 实现方式呢？","like_count":1,"discussions":[{"author":{"id":1129668,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/c4/7c2bf312.jpg","nickname":"草根","note":"","ucode":"7C97CB09A4D8F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540515,"discussion_content":"这是两种不同的分配内存的方式，malloc中有个判断，根据128kb大小决定是走brk分支还是mmap分支。当然你可以调用mmap函数直接进行内存映射。不矛盾","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640073946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269733,"user_name":"Geek_065895","can_delete":false,"product_type":"c1","uid":2136069,"ip_address":"","ucode":"2E6FCCC78E5767","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rxz5aKicRkvqWmt6c6c7eayHvh577uibBTVQzcJKwSTqI9FaxZSRlx7NRVw4atWpqER8ncA5jErQb3wb4cPzZxlA/132","comment_is_top":false,"comment_ctime":1608774176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5903741472","product_id":100020901,"comment_content":"15.<br>关键字：<br>内存映射 <br>虚拟地址空间<br>MMU<br>TLB<br>多级页表<br>大页<br>虚拟内存空间分布<br>malloc和mmap比较<br>内存回收的三种方式<br>交换区<br>OOM机制<br>free<br>top<br>ps<br>知识点：<br>内存映射：将虚拟地址转变为物理地址<br>虚拟地址空间：<br>MMU：Memory Management Unit，负责进行内存映射，存储页表<br>TLB：页表缓存<br>多级页表：多级映射<br>大页：每个页大小变大，比如1M等，适用于数据库等<br>虚拟内存空间分布：从上往下，栈区、文件映射、堆区、数据段、只读段<br>malloc和mmap比较：malloc通过控制brk（）进行内存分配，释放后会先缓存起来；mmap进行文件映射，释放后直接清理内存。频繁mmap会触发大量缺页中断。两种方法都是第一次访问时才分配内存<br>内存回收三种方式：回收缓存，比如用LRU算法；回收不常用的内存（通过交换分区直接写到磁盘中）；OOM，直接杀掉占用大量内存的进程<br>交换区：<br>OOM机制：内核用oom_score为每一个进程的内存使用情况进行评分：消耗内存越大，占用CPU越少，oom_score越大，越容易被OOM杀死<br><br>命令行指令：<br>free<br>top:VIRT（虚拟内存大小），RES(常驻内存大小)，SHR（共享内存大小），<br>ps<br><br><br>问题<br>1. 为啥多级页表能减少页表项数呢<br>","like_count":1},{"had_liked":false,"id":250415,"user_name":"剑龙","can_delete":false,"product_type":"c1","uid":1014053,"ip_address":"","ucode":"CF2611E8800427","user_header":"https://static001.geekbang.org/account/avatar/00/0f/79/25/a817a056.jpg","comment_is_top":false,"comment_ctime":1601077405,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5896044701","product_id":100020901,"comment_content":"老师,我查了下ubuntu20.04的我top命令，RES应该包括SHR的","like_count":1,"discussions":[{"author":{"id":1236002,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dc/22/bb8e93b4.jpg","nickname":"晴天雨伞","note":"","ucode":"F14D8133A1C077","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389986,"discussion_content":"centos的解释是不包含swap，但没有说是否包含共享，ubuntu的man里面解释是包含共享。这里我也困惑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629558534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182251,"user_name":"二进制之路","can_delete":false,"product_type":"c1","uid":1008395,"ip_address":"","ucode":"67C84B013147B1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/63/0b/ad56aeb4.jpg","comment_is_top":false,"comment_ctime":1582734261,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5877701557","product_id":100020901,"comment_content":"写了篇文章，部分内容参考了本篇：<br>《计算机虚拟存储器的一点琐碎记录》<br>为了更加有效地管理存储器并且少出错，现代系统提供了一种对主存的抽象概念，叫做虚拟存储器（VM）。<br>https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;mo8cr14ddyZJA0EvyxC6lw","like_count":1},{"had_liked":false,"id":177830,"user_name":"winfield","can_delete":false,"product_type":"c1","uid":1216930,"ip_address":"","ucode":"6A5E1B449328C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIQMh5jMlvAibnTgiaVXmsb333JBjpdvLVcptc232zQey5wkBOEPiauepQpv8UlRcOFqnTyhEQiadaHMA/132","comment_is_top":false,"comment_ctime":1581512060,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5876479356","product_id":100020901,"comment_content":"请教老师一个问题，buffer 和 cache 属于内存空间的哪一段？谢谢！","like_count":1,"discussions":[{"author":{"id":1659275,"avatar":"https://static001.geekbang.org/account/avatar/00/19/51/8b/e3b827b7.jpg","nickname":"羿达","note":"","ucode":"48559E9D480C34","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338377,"discussion_content":"应该是内核空间中吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609252101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85820,"user_name":"G.S.K","can_delete":false,"product_type":"c1","uid":1222966,"ip_address":"","ucode":"88217F9289EB48","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/36/d054c979.jpg","comment_is_top":false,"comment_ctime":1555247324,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5850214620","product_id":100020901,"comment_content":"请教老师，如果一个程序的可执行文件大小为2M，那么运行这个程序后，进程的虚拟内存空间中的只读段就是大约2M的大小吗？如果一个程序的可执行文件大小为2G，那么运行这个程序后，进程的虚拟内存空间中的只读段就是大约2G的大小吗？","like_count":2,"discussions":[{"author":{"id":1298046,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZicicibGibtR5zAia782Ajc5I5BN3F3tjAdlibATIknHv67gbxeH21N7B6vbgwLjYb1miaLKhqicptB5ibYw/132","nickname":"阿飞","note":"","ucode":"F8B1FC8521264D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275059,"discussion_content":"cat /proc/<pid>/maps\n1、前三行分别是Text Segment、Data Segment和BSS Segment，Text Segment其实就是存放二进制可执行代码的位置，所以它的权限是读与可执行，Data Segment存放的是静态常量，所以该地址段权限是只读，BSS Segment存放未初始化的静态变量，所以也就是可以随意读写。\n2、接下来是Heap地址段，heap地址是往高地址增长的，是用来动态分配内存的区域。它跟栈相反，是往高地址增长的，对应的内存申请系统调用是brk()。\n接下来的区域是Memory Mapping Segment。这块地址也是用来分配内存区域的，一般是用来把文件映射进内存用的，但是你也可以直接在这里申请内存空间来使用，对应的内存申请系统调用是mmap()。\n3、再下面就是Stack地址段了。这个栈已经用了136KB了。栈的最大范围，我们可以通过prlimit命令看到，默认的情况下是8MB，和Linux-x86一样。\n4、再下面就是vvar，vdso和vsyscall了。这三个东西都为了加速访问内核数据，比如读取时间gettimeofday，肯定不能频繁地进行系统调用陷入内核，所以就映射到用户空间了。所有程序都有这3个映射地址段。\n\n原文链接：https://blog.csdn.net/Wu_Roc/java/article/details/77203480","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1590656663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71484,"user_name":"湖海散人","can_delete":false,"product_type":"c1","uid":1096781,"ip_address":"","ucode":"74C0C825D74CC1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJe0esddRVdG689MicU5zMibMtkyLpYkX4MtiamKP8eFf7KUoMlfU7ficrciakyVS06jHVdskYT67JKtdg/132","comment_is_top":false,"comment_ctime":1551354570,"is_pvip":false,"replies":[{"id":"26301","content":"物理内存是由内核来统一管理的，内核通过kmalloc、页、SLAB 等多种机制来管理不同用途的内存","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551702935,"ip_address":"","comment_id":71484,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846321866","product_id":100020901,"comment_content":"分配虚拟内存使用的是brk 和 mmap，在真正使用内存的时候引起缺页中断再分配真正的物理内存<br><br>请问，那这里的分配物理内存的方式是怎样的啊，是按照什么机制来进行分配物理内存，虚拟内存有内存的分段等一系列机制在管理，那物理内存呢？  在使用brk分配小内存和使用mmap分配大内存的时候，对应的物理内存的分配策略是怎样的啊","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441176,"discussion_content":"物理内存是由内核来统一管理的，内核通过kmalloc、页、SLAB 等多种机制来管理不同用途的内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551702935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53274,"user_name":"子轩Zixuan","can_delete":false,"product_type":"c1","uid":1045688,"ip_address":"","ucode":"293D10B7A89931","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/b8/43a4c2c0.jpg","comment_is_top":false,"comment_ctime":1545621340,"is_pvip":false,"replies":[{"id":"19334","content":"马上就开始😊","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545643871,"ip_address":"","comment_id":53274,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840588636","product_id":100020901,"comment_content":"cpu和内存应该是出问题频率最高的两块内容了，期待内存篇实战","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434090,"discussion_content":"马上就开始😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545643871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53215,"user_name":"Enterprize","can_delete":false,"product_type":"c1","uid":1215130,"ip_address":"","ucode":"3C120E9023B6C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/9a/7270d764.jpg","comment_is_top":false,"comment_ctime":1545616711,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5840584007","product_id":100020901,"comment_content":"今天讲的很硬核","like_count":1,"discussions":[{"author":{"id":1629257,"avatar":"https://static001.geekbang.org/account/avatar/00/18/dc/49/43ae1627.jpg","nickname":"Ansyear","note":"","ucode":"489CE96852EA2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405241,"discussion_content":"很硬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634539111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53177,"user_name":"wahaha","can_delete":false,"product_type":"c1","uid":1051402,"ip_address":"","ucode":"E60166599CF31D","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/0a/fa152399.jpg","comment_is_top":false,"comment_ctime":1545613966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5840581262","product_id":100020901,"comment_content":"老师，请问怎么监控和分析系统的swap指标？如果用了zswap或swap on zram device，能否得到它的压缩和解压的CPU使用情况？","like_count":1},{"had_liked":false,"id":53163,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1545613012,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5840580308","product_id":100020901,"comment_content":"有问题请教，上面提到的段最终是否都是按页映射，段的大小有限制吗？","like_count":1,"discussions":[{"author":{"id":1129668,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/c4/7c2bf312.jpg","nickname":"草根","note":"","ucode":"7C97CB09A4D8F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540516,"discussion_content":"这涉及到内存管理，有页式管理，也有段式管理，也有段页式管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640074085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53148,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1545612190,"is_pvip":false,"replies":[{"id":"19446","content":"前两个有涉及，后面两个问题有没有细节？我可以放在答疑中解答","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545696173,"ip_address":"","comment_id":53148,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840579486","product_id":100020901,"comment_content":"我所碰到的内存问题有：频繁的缺页中断导致的，内存不足导致的，malloc锁争用导致的，64位系统物理内存还有几十G但是分配内存失败。不知道这些课程会不会都有涉及?","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434046,"discussion_content":"前两个有涉及，后面两个问题有没有细节？我可以放在答疑中解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545696173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355691,"user_name":"allen","can_delete":false,"product_type":"c1","uid":1334123,"ip_address":"山东","ucode":"67CD32ACB95013","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/6b/2ddbeab2.jpg","comment_is_top":false,"comment_ctime":1661658830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661658830","product_id":100020901,"comment_content":"各位大佬 我这有个服务器 装些oracle的备库 发现每隔两个小时左右 内存使用率就降低20%左右 是啥原因呢？","like_count":0},{"had_liked":false,"id":352252,"user_name":"文若钝","can_delete":false,"product_type":"c1","uid":2699967,"ip_address":"","ucode":"B3BC21AA19168F","user_header":"https://static001.geekbang.org/account/avatar/00/29/32/bf/fd6a1c99.jpg","comment_is_top":false,"comment_ctime":1658481495,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1658481495","product_id":100020901,"comment_content":"问题：实际使用，是否是与CPU的上下文切换同步，即运行的进程在使用CPU同时也使用的内存，反之则处于CPU中断和内存映射表中排队的状态？","like_count":0},{"had_liked":false,"id":351399,"user_name":"Dexter","can_delete":false,"product_type":"c1","uid":2608728,"ip_address":"","ucode":"909CABC4AC4AC9","user_header":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","comment_is_top":false,"comment_ctime":1657769796,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657769796","product_id":100020901,"comment_content":"伙伴系统能否详细解释下？","like_count":0},{"had_liked":false,"id":344903,"user_name":"Geek_6eb5f4","can_delete":false,"product_type":"c1","uid":2875639,"ip_address":"","ucode":"C266E0B6C5F8C9","user_header":"","comment_is_top":false,"comment_ctime":1651845316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651845316","product_id":100020901,"comment_content":"几级页表也是可以通过内核配置的","like_count":0},{"had_liked":false,"id":344900,"user_name":"Geek_6eb5f4","can_delete":false,"product_type":"c1","uid":2875639,"ip_address":"","ucode":"C266E0B6C5F8C9","user_header":"","comment_is_top":false,"comment_ctime":1651845083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651845083","product_id":100020901,"comment_content":"页表是存放在内存中而不是mmu中吧","like_count":0},{"had_liked":false,"id":344899,"user_name":"Geek_6eb5f4","can_delete":false,"product_type":"c1","uid":2875639,"ip_address":"","ucode":"C266E0B6C5F8C9","user_header":"","comment_is_top":false,"comment_ctime":1651844607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651844607","product_id":100020901,"comment_content":"内核配置为36位的时候用户和内核空间都是128T，但是配置为48位位都是256T","like_count":0},{"had_liked":false,"id":343417,"user_name":"wang","can_delete":false,"product_type":"c1","uid":1322604,"ip_address":"","ucode":"D91EDE10480C19","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/6c/7499cbd4.jpg","comment_is_top":false,"comment_ctime":1650846133,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650846133","product_id":100020901,"comment_content":"所以，你可以发现，Swap 把系统的可用内存变大了。不过要注意，通常只在内存不足时，才会发生 Swap 交换。并且由于磁盘读写的速度远比内存慢，Swap 会导致严重的内存性能问题。#正常使用swap的情况有哪些？老师能举个例么","like_count":0},{"had_liked":false,"id":337113,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1646630630,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1646630630","product_id":100020901,"comment_content":"为了复现线上环境内存不足的情况，Redis 无法 dump 的问题。先是往 Redis 中写入大量数据，但是只是键值不同，虽然 Redis 占用了一半内存，但是因为 dump 默认是开启压缩的，所以不会触发 dump。我想我可以 malloc 大量的内存，结果我尝试分配了很大的内存，竟然成功了。最后才发现 malloc 之后，不会真正分配，而是在使用的时候才会映射。","like_count":0},{"had_liked":false,"id":323791,"user_name":"gecko","can_delete":false,"product_type":"c1","uid":1198048,"ip_address":"","ucode":"2B7122536F1A0E","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/e0/1ff26e99.jpg","comment_is_top":false,"comment_ctime":1638163612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638163612","product_id":100020901,"comment_content":"“free 输出的是一个表格，其中的数值都默认以字节为单位。”<br>man free 输出<br>Display the amount of memory in kibibytes.  This is the default.<br>","like_count":0},{"had_liked":false,"id":320855,"user_name":"Jason Wong","can_delete":false,"product_type":"c1","uid":2790451,"ip_address":"","ucode":"0DA0D724B8F8D6","user_header":"https://static001.geekbang.org/account/avatar/00/2a/94/33/4becb05a.jpg","comment_is_top":false,"comment_ctime":1636531853,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1636531853","product_id":100020901,"comment_content":"内存紧张时会使用交换分区Swap，在内存不再紧张时，系统会自动把写在swap的内容放回内存吗？","like_count":0,"discussions":[{"author":{"id":1129668,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/c4/7c2bf312.jpg","nickname":"草根","note":"","ucode":"7C97CB09A4D8F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540517,"discussion_content":"当程序需要的时候就会将swap中的内容写回到内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640074144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317608,"user_name":"lewis99","can_delete":false,"product_type":"c1","uid":1645359,"ip_address":"","ucode":"C43227E3898480","user_header":"https://static001.geekbang.org/account/avatar/00/19/1b/2f/96cd2f51.jpg","comment_is_top":false,"comment_ctime":1634868510,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1634868510","product_id":100020901,"comment_content":"老师，下面这句没有太理解：<br>RES 是常驻内存的大小，也就是进程实际使用的物理内存大小，但不包括 Swap 和共享内存。<br>      --如果是你说的这种情况的话，为什么我有时候top 看进程内存的时候，RES比实际的物理内存大很多呢？我理解res不包括swap out，但包括共享内存；<br>","like_count":0},{"had_liked":false,"id":317604,"user_name":"lewis99","can_delete":false,"product_type":"c1","uid":1645359,"ip_address":"","ucode":"C43227E3898480","user_header":"https://static001.geekbang.org/account/avatar/00/19/1b/2f/96cd2f51.jpg","comment_is_top":false,"comment_ctime":1634868299,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1634868299","product_id":100020901,"comment_content":"老师，你好，这两个指标还没有太理解？","like_count":0},{"had_liked":false,"id":314857,"user_name":"谛听","can_delete":false,"product_type":"c1","uid":1228687,"ip_address":"","ucode":"7539D5B06662EA","user_header":"https://static001.geekbang.org/account/avatar/00/12/bf/8f/51f044dc.jpg","comment_is_top":false,"comment_ctime":1633507303,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633507303","product_id":100020901,"comment_content":"有的地方任务内存分为：代码区，全局初始化数据区，未初始化数据区，栈区，堆区，和本文稍有区别","like_count":0},{"had_liked":false,"id":314264,"user_name":"鹏","can_delete":false,"product_type":"c1","uid":2652281,"ip_address":"","ucode":"DA16A25111D0BE","user_header":"https://static001.geekbang.org/account/avatar/00/28/78/79/af1997e0.jpg","comment_is_top":false,"comment_ctime":1632922224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632922224","product_id":100020901,"comment_content":"[RES 是常驻内存的大小，也就是进程实际使用的物理内存大小，但不包括 Swap 和共享内存]<br><br>RES 不包括共享内存吗？这个似乎跟之前的认知和实践经验不太相符","like_count":0},{"had_liked":false,"id":308955,"user_name":"yudidi","can_delete":false,"product_type":"c1","uid":1202482,"ip_address":"","ucode":"70283DE39D86F5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ydFhHonicUQibGlAfsAYBibNOfSxpCG5cJNp9oRibTJm3TrxM7Hj4WPPCRE3vluZJb0TGQqpKCaBWLdmra5Su1KF5Q/132","comment_is_top":false,"comment_ctime":1629871900,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629871900","product_id":100020901,"comment_content":"问各位一个问题：4g服务器，一个进程最多可以申请多少物理内存（不是虚拟内存的寻址范围）？","like_count":0},{"had_liked":false,"id":300478,"user_name":"季伟滨","can_delete":false,"product_type":"c1","uid":1445103,"ip_address":"","ucode":"CBF84145CAA986","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/ef/4c8850de.jpg","comment_is_top":false,"comment_ctime":1625192198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625192198","product_id":100020901,"comment_content":"老师，请问缺页异常，进入内核态。占用的是sys cpu还是硬中断cpu啊","like_count":0},{"had_liked":false,"id":295023,"user_name":"奋斗","can_delete":false,"product_type":"c1","uid":2047392,"ip_address":"","ucode":"C84C2D030ACA51","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3d/a0/acf6b165.jpg","comment_is_top":false,"comment_ctime":1622188222,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1622188222","product_id":100020901,"comment_content":"虽然每个进程的地址空间都包含了内核空间，但这些内核空间，其实关联的都是相同的物理内存。这样，进程切换到内核态后，就可以很方便地访问内核空间内存。<br>请教老师一个问题：操作系统运行在内核态，每个进程都有一个内核态，不可能有多个操作系统！ <br>结合上面这句话，进程切换地时候内核态不变化吗？所以只有一个操作系统！不知道是否理解正确。","like_count":0,"discussions":[{"author":{"id":1129668,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/c4/7c2bf312.jpg","nickname":"草根","note":"","ucode":"7C97CB09A4D8F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540518,"discussion_content":"进程的切换时候将当前的寄存器和pc值保存就行了，并不是切换一个内核或者操作系统，切换回来的时候再从内存中取出保存的值继续执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640074314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293265,"user_name":"imsorry","can_delete":false,"product_type":"c1","uid":1316930,"ip_address":"","ucode":"7686DACC7B3356","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqSpE7I3EqGFuvHCGFa0YTOpPW9lWSm0qmcheJ4KwkLHUK5X2O13RBDPtEoYQe0WMialuSQAwQIichg/132","comment_is_top":false,"comment_ctime":1621314548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621314548","product_id":100020901,"comment_content":"当时是看linux内核完全剖析才看懂Linux的内存管理的。","like_count":0},{"had_liked":false,"id":284200,"user_name":"迷途小书童","can_delete":false,"product_type":"c1","uid":2087130,"ip_address":"","ucode":"570F896E5F75EB","user_header":"https://static001.geekbang.org/account/avatar/00/1f/d8/da/02c48a51.jpg","comment_is_top":false,"comment_ctime":1616120271,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616120271","product_id":100020901,"comment_content":"如何理解独立的虚拟地址空间？进程间不会重复吗？","like_count":0},{"had_liked":false,"id":277433,"user_name":"后知后觉","can_delete":false,"product_type":"c1","uid":1139322,"ip_address":"","ucode":"59C1C8197CBD61","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/7a/e4249d78.jpg","comment_is_top":false,"comment_ctime":1612410577,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1612410577","product_id":100020901,"comment_content":"现在碰到一个问题是available小于free值，java进程超过了启动进程限制的内存，查看日志GC也有在回收内存，但available和buff&#47;cache还是缓慢在减少，请问老师改如何去排查是否存在内存泄漏问题呢？","like_count":0},{"had_liked":false,"id":269396,"user_name":"Geek_065895","can_delete":false,"product_type":"c1","uid":2136069,"ip_address":"","ucode":"2E6FCCC78E5767","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rxz5aKicRkvqWmt6c6c7eayHvh577uibBTVQzcJKwSTqI9FaxZSRlx7NRVw4atWpqER8ncA5jErQb3wb4cPzZxlA/132","comment_is_top":false,"comment_ctime":1608632237,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608632237","product_id":100020901,"comment_content":"“而 mmap() 方式分配的内存，会在释放时直接归还系统，所以每次 mmap 都会发生缺页异常。”<br>这个因果关系成立吗？究竟是啥让mmap出现缺页中断","like_count":0},{"had_liked":false,"id":264573,"user_name":"Chen","can_delete":false,"product_type":"c1","uid":2066801,"ip_address":"","ucode":"5D0F3DF807706E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/W0VEO7Hxzd61mia6Ls2EpBmaZ0l9q7SFUAErbu4XKIjWLmlALr4ybpicDoI8SoXY8XJNKmk04Ep1ibTCuFvfCF8GQ/132","comment_is_top":false,"comment_ctime":1606528522,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606528522","product_id":100020901,"comment_content":"打卡：day1  内存--free  &amp;&amp;  top      <br>2020-11-28","like_count":0},{"had_liked":false,"id":261093,"user_name":"kimileonis","can_delete":false,"product_type":"c1","uid":1029518,"ip_address":"","ucode":"05ADDFDD31D9C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/8e/d91f87a2.jpg","comment_is_top":false,"comment_ctime":1605194490,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1605194490","product_id":100020901,"comment_content":"老师，请教两个问题：<br>1.每个进程的虚拟地址空间被分为内核空间和用户空间，我理解用户空间记录了进程的代码、常量、变量等信息，那内核空间的1GB地址空间（假设是32位系统）用来做什么呢？或者什么时候用到呢？<br>2. 假设用户空间的某个变量需要写入物理内存时，页表中存储的是用户空间的虚拟地址和物理内存中的地址映射吗？","like_count":0,"discussions":[{"author":{"id":1549032,"avatar":"","nickname":"Zzz","note":"","ucode":"9323254354868B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325945,"discussion_content":"你问的问题，文章中都有提到，仔细看吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605487177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255463,"user_name":"Geek_f702be","can_delete":false,"product_type":"c1","uid":1143067,"ip_address":"","ucode":"8E3B5F393C4266","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epumnXjMLYzHkGFhAraIiaAMXpotuUR9PCexBWl25tRLFAvpzs03Hfse4Y1lyeWuryz6z80Fd8AXiaw/132","comment_is_top":false,"comment_ctime":1603350832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603350832","product_id":100020901,"comment_content":"打卡<br>了解虚拟内存和物理内存之间的关系<br>虚拟内存的结构<br>内存的分配和回收<br>查看内存的工具top、free","like_count":0},{"had_liked":false,"id":246114,"user_name":"拉拉","can_delete":false,"product_type":"c1","uid":1064056,"ip_address":"","ucode":"D39F769ECB5623","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJtrrXAT1UfLicRWLQqoIIP3Gngs0uBwoduhxf6DezNnINxBgm9sZt2dpPMiaYB5rpCEiauXjmZSNIPA/132","comment_is_top":false,"comment_ctime":1599183310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599183310","product_id":100020901,"comment_content":"老师 ，&quot;既然每个进程都有一个这么大的地址空间，那么所有进程的虚拟内存加起来，自然要比实际的物理内存大得多&quot;这句话我有两个理解，那个理解是对的那？辛苦指正！！<br>1 虽然用户空间和实际内存对应但是内核空间进程共享，导致各个进程虚拟内存的内核空间被重复计算这样虚拟内存比实际内存大 <br>2 虚拟内存都是按进程要求配置的，待实际使用时分配实际内存，所以虚拟内存比实际的大<br>2 ","like_count":0},{"had_liked":false,"id":245359,"user_name":"ming","can_delete":false,"product_type":"c1","uid":2084718,"ip_address":"","ucode":"FF2C74CBA5E7BC","user_header":"https://static001.geekbang.org/account/avatar/00/1f/cf/6e/366a8247.jpg","comment_is_top":false,"comment_ctime":1598923539,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1598923539","product_id":100020901,"comment_content":"我的top，并没有VIRT、RES、SHR等信息，如何才能让top可以显示VIRT、RES、SHR这些信息呢？","like_count":0,"discussions":[{"author":{"id":2321649,"avatar":"","nickname":"Geek_76c30e","note":"","ucode":"EFA86960BDCB95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327799,"discussion_content":"不是说了按M吗，就是查看top的内存选项","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605954273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2214777,"avatar":"https://static001.geekbang.org/account/avatar/00/21/cb/79/1f5208d0.jpg","nickname":"耳机戴半边","note":"","ucode":"65235E8857F799","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327124,"discussion_content":"你应该给出操作系统版本，以及top版本；因为用了默认就有这些参数，所以你要给出执行环境别人才能帮你分析。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605750828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242967,"user_name":"hal","can_delete":false,"product_type":"c1","uid":1359844,"ip_address":"","ucode":"98E625F7327FD9","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/e4/45758517.jpg","comment_is_top":false,"comment_ctime":1597906581,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597906581","product_id":100020901,"comment_content":"老师好，在学习的过程中遇到一个 硬缺页中断和软缺页中断的概念，请问硬缺页中断会涉及到磁盘上取数据吗，还是指的是swap换出？","like_count":0},{"had_liked":false,"id":237919,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1596004945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596004945","product_id":100020901,"comment_content":"【笔记】<br>1. 只有内核才能直接访问物理内存，那么用户进程要怎么访问物理内存呢？<br>1.2 内存映射：内核为每个进程提供独立 且 地址连续的虚拟内存，通过内存映射机制访问物理内存。<br>1.3 虚拟内存 分为内核空间 和 用户空间。进程处于用户态时，只能访问用户空间；进入内核态后才可以访问内核空间<br>1.4 实际使用的虚拟内存才分配物理内存。为了实现内存映射，OS为每个进程维护一张页表，记录两者之间的映射关系<br>问：页表存储在哪里？答：页表存储在CPU的MMU中，MMU内存映射的最小单位是页，通常4KB；进程访问的虚拟地址在页表中查不到，则产生缺页异常<br>问：页表如何管理呢？答：为解决页表项过多问题，Linux提供两种机制：多级页表和大页（常见大小：2MB和1GB）<br>2. Linux进程怎么使用这些内存呢？<br>2.1 虚拟内存空间分布：只读段，数据段，堆（低-&gt;高），文件映射段（高-&gt;低），栈<br>3. 内存是如何分配和回收呢？<br>内存分配 在系统调用上，有两种实现方式：brk 和 mmap，两者区别：<br>a. brk：小块内存（小于128K）；在堆上分配；内存释放并不立刻归还系统，而是缓存起来，减少缺页异常的发生，提高内存访问效率；由于未归还OS，内存工作繁忙时，频繁分配和释放会造成内存碎片<br>b. mmap：大块内存（大于128K）；在文件映射段分配；内存释放直接归还系统，因此每次mmap都会发生缺页异常；内存工作繁忙时，频繁内存分配会导致大量的缺页异常，内核负担增大<br>注：真正的内存分配在首次访问时，即通过缺页异常进入内核中，再由内核分配内存<br>OS发现内存紧张时，通过一系列机制来完成内存回收：回收缓存，回收不常访问的内存，杀死进程<br>3. 如何查看内存使用情况？<br>free，top","like_count":0},{"had_liked":false,"id":237898,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1596000776,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596000776","product_id":100020901,"comment_content":"“malloc() 是 C 标准库提供的内存分配函数，对应到系统调用上，有两种实现方式，即 brk() 和 mmap()。”<br>对于其他语言，比如：go语言，java，对应相同的系统调用吗？","like_count":0},{"had_liked":false,"id":237032,"user_name":"yyl","can_delete":false,"product_type":"c1","uid":1170843,"ip_address":"","ucode":"1741DACDFCA9AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/9b/0bc44a78.jpg","comment_is_top":false,"comment_ctime":1595663240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595663240","product_id":100020901,"comment_content":"我最大的问题是无法真正理解各个指标的含义，应该是使用的较少，都是在工作交流学到一些新的用法","like_count":0},{"had_liked":false,"id":236803,"user_name":"liyong伽利略","can_delete":false,"product_type":"c1","uid":1079414,"ip_address":"","ucode":"94E593D39266F1","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/76/fac85be8.jpg","comment_is_top":false,"comment_ctime":1595553108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595553108","product_id":100020901,"comment_content":"内存碎片是上层应用的问题，跟brk和mmap没啥大关系吧，malloc 内部会管理brk和map出来的内存，再切割成chunk， 不管是mmap还是brk都会有碎片问题","like_count":0},{"had_liked":false,"id":229658,"user_name":"Dragon Totem","can_delete":false,"product_type":"c1","uid":2047758,"ip_address":"","ucode":"291B3F2F785534","user_header":"https://static001.geekbang.org/account/avatar/00/1f/3f/0e/87c4d9b7.jpg","comment_is_top":false,"comment_ctime":1593090130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593090130","product_id":100020901,"comment_content":"如果使用malloc(10)，死循环申请内存会造成，物理内存泄露吗？只无限分配，不使用！","like_count":0},{"had_liked":false,"id":228487,"user_name":"乐天","can_delete":false,"product_type":"c1","uid":1818225,"ip_address":"","ucode":"70D4B42AF73E5F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/be/71/e2d78b77.jpg","comment_is_top":false,"comment_ctime":1592710037,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592710037","product_id":100020901,"comment_content":"malloc分配的内存，在首次访问的时候才会实际分配物理内存是怎么做到的，对那个虚拟地址赋值会触发什么","like_count":0},{"had_liked":false,"id":220631,"user_name":"普罗米修斯","can_delete":false,"product_type":"c1","uid":1394030,"ip_address":"","ucode":"DDA7DE4DE371FC","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/6e/11cf22de.jpg","comment_is_top":false,"comment_ctime":1590300517,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590300517","product_id":100020901,"comment_content":"经常遇到系统不会回收内存的情况，需要手动回收内存","like_count":0},{"had_liked":false,"id":219802,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1590104086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590104086","product_id":100020901,"comment_content":"buffer和cache这种在内核空间分配的内存是不是不会计算在某个进程的内存中？比如top时，每个进程显示的那三列中会包括buffer,cache吗？","like_count":0},{"had_liked":false,"id":218182,"user_name":"Yong","can_delete":false,"product_type":"c1","uid":1912653,"ip_address":"","ucode":"0ADA75C5C68619","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL3OaibxsOia5ZET1iaBsPwDM6NS43lAUTdItqkwZ66fGaaXtjOQYL73IsvY0foscUZlkaZSQPPQNexA/132","comment_is_top":false,"comment_ctime":1589730825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589730825","product_id":100020901,"comment_content":"打卡:进程在用户态时，只能访问用户空间内存；只有进入内核态后，才可以访问内核空间内存。所以32位系统应用能使用的最大内存是3G。","like_count":0},{"had_liked":false,"id":212754,"user_name":"Geek_f24c45","can_delete":false,"product_type":"c1","uid":1074214,"ip_address":"","ucode":"966211ABBE96BD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwAgJAClnuTObeLf3WRkY6OhRhpSYPxDb1Tic6TG2uOG0icbibyPLBQAxhJM2RDlurQCsjJjvUpqZ9g/132","comment_is_top":false,"comment_ctime":1588207043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588207043","product_id":100020901,"comment_content":"top的RES是包括共享内存部分的吧……<br>","like_count":0},{"had_liked":false,"id":205742,"user_name":"雄鹰","can_delete":false,"product_type":"c1","uid":1786819,"ip_address":"","ucode":"67E0C4BDE7F6F2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/43/c3/2c53acd7.jpg","comment_is_top":false,"comment_ctime":1586728929,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1586728929","product_id":100020901,"comment_content":"老师你好：我通过top命令，发现有两个OnOutOfMemoryError信息，这是否意味着应用程序占用内存过多触发了系统的OOM？<br>   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                                                                                                                                                                                 <br>  8506 root      20   0   48.9g  13.4g  16348 S   0.3 10.7 277:57.96 &#47;usr&#47;java&#47;jdk1.8.0_112&#47;jre&#47;bin&#47;java -Djava.util.logging.config.file=&#47;opt&#47;sdc&#47;be&#47;csaly&#47;tomcat&#47;conf&#47;logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.epheme+<br>134617 root      20   0   21.3g   3.2g  19728 S  29.1  2.6   2573:56 java -Diname=ht12sMain -Xms1024M -Xmx2048M -XX:PermSize=1024M -XX:+UseConcMarkSweepGC -cp &#47;opt&#47;sdc&#47;be&#47;csaly&#47;hadoop&#47;ht12s-0.0.1&#47;conf::&#47;opt&#47;sdc&#47;be&#47;csaly&#47;hadoop&#47;ht12s-0.0.1&#47;libs&#47;aopalliance-1.0.jar:&#47;opt+<br> 73244 root      20   0   32.6g   2.5g  42396 S   0.3  2.0  44:24.50 &#47;opt&#47;sdc&#47;be&#47;jdk1.8.0_181&#47;bin&#47;java -Dproc_regionserver -XX:OnOutOfMemoryError=kill -9 %p -XX:+UseConcMarkSweepGC                                                                                                                                  <br> 31395 root      20   0   19.9g   1.3g  18756 S   1.3  1.0   1721:44 java -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -server -Xms512m -Xmx2g -Xmn1g -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m -Dspring.config.location=&#47;opt&#47;sdc&#47;bc&#47;ares-0.0.2-SNAPSHOT&#47;+<br> 73023 root      20   0   32.5g   1.2g  42380 S   0.0  1.0  31:03.89 &#47;opt&#47;sdc&#47;be&#47;jdk1.8.0_181&#47;bin&#47;java -Dproc_master -XX:OnOutOfMemoryError=kill -9 %p -XX:+UseConcMarkSweepGC -XX:PermSize=128m -XX:MaxPermSize=128m -Dhbase.log.dir=&#47;opt&#47;sdc&#47;be&#47;csaly&#47;hadoop&#47;hbase-1.1.2&#47;b+","like_count":0},{"had_liked":false,"id":191089,"user_name":"Bryan","can_delete":false,"product_type":"c1","uid":1037208,"ip_address":"","ucode":"BA9D6A278609F3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/98/60d13550.jpg","comment_is_top":false,"comment_ctime":1584733679,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584733679","product_id":100020901,"comment_content":"强烈建议把这个搭配趣谈 linux 操作系统一起看，两个一起看真的非常明白","like_count":0},{"had_liked":false,"id":190927,"user_name":"linker","can_delete":false,"product_type":"c1","uid":1803259,"ip_address":"","ucode":"6C5799F2FC2C82","user_header":"https://static001.geekbang.org/account/avatar/00/1b/83/fb/621adceb.jpg","comment_is_top":false,"comment_ctime":1584710050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584710050","product_id":100020901,"comment_content":"我遇到的内存问题，有oom导致系统复位，栈溢出，内存飞踩等，内存飞踩最不好定位。","like_count":0},{"had_liked":false,"id":186882,"user_name":"宋胖胖","can_delete":false,"product_type":"c1","uid":1857496,"ip_address":"","ucode":"AA828F49CCEABA","user_header":"https://static001.geekbang.org/account/avatar/00/1c/57/d8/e9c8b923.jpg","comment_is_top":false,"comment_ctime":1583943830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583943830","product_id":100020901,"comment_content":"打卡，又多学一次top命令","like_count":0},{"had_liked":false,"id":184686,"user_name":"墨田","can_delete":false,"product_type":"c1","uid":1194703,"ip_address":"","ucode":"A1BEAF01A0F5F5","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/cf/30510276.jpg","comment_is_top":false,"comment_ctime":1583382034,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583382034","product_id":100020901,"comment_content":"虽然每个进程的地址空间都包含了内核空间，但这些内核空间，其实关联的都是相同的物理内存。 请问一下老师， 这个是指所有进程的内核空间都总共用的固定的同一段物理内存吗？","like_count":0},{"had_liked":false,"id":184071,"user_name":"iam","can_delete":false,"product_type":"c1","uid":1890819,"ip_address":"","ucode":"77934E60C4FC0B","user_header":"https://static001.geekbang.org/account/avatar/00/1c/da/03/6348d464.jpg","comment_is_top":false,"comment_ctime":1583218275,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583218275","product_id":100020901,"comment_content":"弱弱问下，feee命令中看到的used是不是包括buffer&#47;cache？<br> total=used+free+buffer&#47;cache? ","like_count":0},{"had_liked":false,"id":181418,"user_name":"刘友淙","can_delete":false,"product_type":"c1","uid":1620058,"ip_address":"","ucode":"97F3A69A308313","user_header":"","comment_is_top":false,"comment_ctime":1582537295,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582537295","product_id":100020901,"comment_content":"D7 打卡","like_count":0},{"had_liked":false,"id":179936,"user_name":"Summer","can_delete":false,"product_type":"c1","uid":1793589,"ip_address":"","ucode":"DA2683248EA698","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epxppZUun6eqVDbbuyIzSZibcydqnDkdZ96NBDmNYHun484FUcdj3vdaJmuxia9wqEChMRkhj8IpfaA/132","comment_is_top":false,"comment_ctime":1582123874,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582123874","product_id":100020901,"comment_content":"打卡，D10","like_count":0},{"had_liked":false,"id":175083,"user_name":"salmonl","can_delete":false,"product_type":"c1","uid":1010160,"ip_address":"","ucode":"0F85E5AD2C52B2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/f0/714c2f83.jpg","comment_is_top":false,"comment_ctime":1580549380,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1580549380","product_id":100020901,"comment_content":"看有些资料虚拟内存空间布局中还有BSS段，这里没有","like_count":0,"discussions":[{"author":{"id":1448147,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/ueWNR1W4WibG9o7sa3Wv6by4VwM15rJCOGfxZ3nX0tj9ic8nTcofFUICBrXICgomJfRblVMHUQELFoKKMLUmPk0Q/132","nickname":"不懈前行","note":"","ucode":"237C22578E1AF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203951,"discussion_content":"BSS段属于数据段，是个子集；BSS段是静态数据段，存放未初始化的全局变量，且默认初始化为0；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584105761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173755,"user_name":"笑","can_delete":false,"product_type":"c1","uid":1741098,"ip_address":"","ucode":"689A435818403A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/91/2a/c0fb21fa.jpg","comment_is_top":false,"comment_ctime":1579679907,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579679907","product_id":100020901,"comment_content":"打卡，Day 14，内存工作原理","like_count":0},{"had_liked":false,"id":166668,"user_name":"花晨少年","can_delete":false,"product_type":"c1","uid":1098987,"ip_address":"","ucode":"6AA3537A6BA10E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/eb/2285a345.jpg","comment_is_top":false,"comment_ctime":1577540984,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577540984","product_id":100020901,"comment_content":"内存这一节讲的真好","like_count":0},{"had_liked":false,"id":150081,"user_name":"jingangyh","can_delete":false,"product_type":"c1","uid":1672546,"ip_address":"","ucode":"EC625BA0A95553","user_header":"","comment_is_top":false,"comment_ctime":1573459436,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573459436","product_id":100020901,"comment_content":"请问，虚拟内存这部分内核分配的是磁盘上的空间还是物理内存上的？虚拟内存和物理内存有映射，假如虚拟内存用满而物理内存不够会怎么样？","like_count":0},{"had_liked":false,"id":146000,"user_name":"hana","can_delete":false,"product_type":"c1","uid":1600146,"ip_address":"","ucode":"CC1368CC17BC4B","user_header":"https://static001.geekbang.org/account/avatar/00/18/6a/92/0877ed15.jpg","comment_is_top":false,"comment_ctime":1572415749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572415749","product_id":100020901,"comment_content":"慢慢的开始能看懂一些了，最开始这套资料从CPU 开始学的，学到第三篇就看不懂了，放弃了挺长时间，偶然的从内存部分开始学习，可以懂一些脑子里开始有些画面了，不错的资料，继续学习，反复理解。","like_count":0},{"had_liked":false,"id":143184,"user_name":"柏森森","can_delete":false,"product_type":"c1","uid":1285420,"ip_address":"","ucode":"F370AD99BA71B9","user_header":"https://static001.geekbang.org/account/avatar/00/13/9d/2c/6248ffbd.jpg","comment_is_top":false,"comment_ctime":1571643649,"is_pvip":false,"replies":[{"id":"55579","content":"1）都是内存<br>2）是的<br>3）一般是根目录挂载的磁盘","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1571840098,"ip_address":"","comment_id":143184,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571643649","product_id":100020901,"comment_content":"请教下buffer和cache的区别？有以下几个疑问：1）都是内存吗？2）是因为作用不同，划分的不同大小的区域吗？3）&#47;tmp目录默认是在内存中吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471412,"discussion_content":"1）都是内存\n2）是的\n3）一般是根目录挂载的磁盘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571840098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143170,"user_name":"Mark","can_delete":false,"product_type":"c1","uid":1350902,"ip_address":"","ucode":"D60E5269080BA9","user_header":"https://static001.geekbang.org/account/avatar/00/14/9c/f6/30dfdc9f.jpg","comment_is_top":false,"comment_ctime":1571642352,"is_pvip":false,"replies":[{"id":"55581","content":"内核空间中没有虚拟内存","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1571840149,"ip_address":"","comment_id":143170,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571642352","product_id":100020901,"comment_content":"请教，内核空间其实关联的都是相同的物理内存 怎么理解？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471405,"discussion_content":"内核空间中没有虚拟内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571840149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140946,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1571098215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571098215","product_id":100020901,"comment_content":"不是太明白老师文中提到的伙伴系统具体指哪些，可否举例说明","like_count":0},{"had_liked":false,"id":134027,"user_name":"kilu","can_delete":false,"product_type":"c1","uid":1603719,"ip_address":"","ucode":"850D77DF21DB39","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epaH1gHotWQugJsJuav3SNiaF76wyib15QKc8ZWMMRmLt9SK91ibYpI0atC6ibWibFYKNmQYo3eC0ojKlQ/132","comment_is_top":false,"comment_ctime":1568723312,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1568723312","product_id":100020901,"comment_content":"遇到过在64位的centos7，通过free -hl 命令，发现不太理解的情况，如下：<br>Mem 行中，total 31G，used 18G，free 只有108M<br>Low 行中，total 31G，used 30G，free 108M<br>High行 和 Swap行全0<br><br>这儿的low和high应该是指低位内存和高位内存，而在64位系统中应该没有高位内存的区分了。不太理解的是，为何Low的值与Mem的值并不一致。","like_count":0},{"had_liked":false,"id":125979,"user_name":"丁小疯","can_delete":false,"product_type":"c1","uid":1631373,"ip_address":"","ucode":"8FD320587FB63C","user_header":"https://static001.geekbang.org/account/avatar/00/18/e4/8d/1c49755d.jpg","comment_is_top":false,"comment_ctime":1566288786,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566288786","product_id":100020901,"comment_content":"请教一个问题，对于进程来说，占用的物理内存为RES 还是RES+SHR呢？ ","like_count":0},{"had_liked":false,"id":122392,"user_name":"Rachel Su","can_delete":false,"product_type":"c1","uid":1474855,"ip_address":"","ucode":"280BCE003700D6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKav1ib8qG43xxwVvicE3MdN7jhOtpV9OnNI3WFniaK2Wjc7uDraYUPCc1tAgPciaHYlyLHo5d7g7gGEg/132","comment_is_top":false,"comment_ctime":1565355452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565355452","product_id":100020901,"comment_content":"linux的VSZ可以理解成从虚拟文件系统获得的本进程可以使用的内存么？<br>既然一切都是文件，内存也是按照page由page table管理的，可以这样子么？<br>虚拟内存是特指硬盘上当做内存使用那部分么？<br>虚拟内存是由虚拟文件系统分配管理的么？","like_count":0},{"had_liked":false,"id":121809,"user_name":"巅","can_delete":false,"product_type":"c1","uid":1363244,"ip_address":"","ucode":"18239CFA501049","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/2c/a02a8372.jpg","comment_is_top":false,"comment_ctime":1565226670,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565226670","product_id":100020901,"comment_content":"free -h<br>              total        used        free      shared  buff&#47;cache   available<br>Mem:           3.7G        153M        3.1G        209M        428M        3.1G<br>Swap:            0B          0B          0B<br><br>老师，我这边的命令，used不包括shared，跟老师讲得有出入<br>“第二列，used 是已使用内存的大小，包含了共享内存”<br><br>","like_count":0},{"had_liked":false,"id":121803,"user_name":"afterdream","can_delete":false,"product_type":"c1","uid":1619795,"ip_address":"","ucode":"701AD039459191","user_header":"https://static001.geekbang.org/account/avatar/00/18/b7/53/823f647c.jpg","comment_is_top":false,"comment_ctime":1565226202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565226202","product_id":100020901,"comment_content":"【课后题】<br>内存=虚拟内存+物理内存，对于应用程序+驱动程序，我们直接操作的都是虚拟内存，虚拟内存通过MMU的页表映射到物理内存。<br>【遇到的问题】<br>之前在调试网卡驱动的时候，遇到一个问题，网卡刚开始正常运行，但是每次大概7h，系统就崩掉了。后来通过内核log，并通过free工具，发现内存越来越少，最终定位是内存泄漏问题，于是在一个合适的地方，释放了申请的内存。<br>【解决了之前的认知】<br>之前只知道交换分区是在内存不足的是否，使用硬盘的一块充当内存。<br>如今明白这是内存回收的范畴。<br>","like_count":0},{"had_liked":false,"id":119447,"user_name":"绀野木棉季","can_delete":false,"product_type":"c1","uid":1247617,"ip_address":"","ucode":"4DCA6991911741","user_header":"https://static001.geekbang.org/account/avatar/00/13/09/81/15d84fbb.jpg","comment_is_top":false,"comment_ctime":1564590159,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564590159","product_id":100020901,"comment_content":"配合评论能学到不少实用的东西","like_count":0},{"had_liked":false,"id":115370,"user_name":"格非","can_delete":false,"product_type":"c1","uid":1004569,"ip_address":"","ucode":"89FABFFC377131","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/19/95ff4cbd.jpg","comment_is_top":false,"comment_ctime":1563545329,"is_pvip":false,"replies":[{"id":"42491","content":"没有过时。因为现在系统的页表都很大，只靠寄存器是存不下的，所以只会通过TLB缓存一小部分页表的索引，大部分页表内容还是放在内存中。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1563806001,"ip_address":"","comment_id":115370,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563545329","product_id":100020901,"comment_content":"倪老师，在《深入理解计算机系统》第三版 Chapter9 虚拟内存章节，提到“CPU芯片上叫做内存管理单元（Memory Management Unit, MMU)的专用硬件，利用存放在主存中的查询表来动态翻译虚拟地址，该表的内容由操作系统管理”，&quot;同任何缓存一样，虚拟内存系统必须有某种方法来判定一个虚拟页是否缓存在DRAM中的某个地方；<br>这些功能是由软硬件联合提供的，包括操作系统软件、MMU(内存管理单元）中的地址翻译硬件和一个存放在物理内存中叫做页表（page table)的数据结构，页表将虚拟页映射到物理页。每次地址翻译硬件将一个虚拟地址转换为物理地址时，都会读取页表。操作系统负责维护页表的内容，以及在磁盘与DRAM之间来回传送页“，这里说的页表是存放在内存中，是不是书中的知识点过时了？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459078,"discussion_content":"没有过时。因为现在系统的页表都很大，只靠寄存器是存不下的，所以只会通过TLB缓存一小部分页表的索引，大部分页表内容还是放在内存中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563806001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111618,"user_name":"阿文","can_delete":false,"product_type":"c1","uid":1106209,"ip_address":"","ucode":"BB4DB62141971F","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/21/5f0bf9a0.jpg","comment_is_top":false,"comment_ctime":1562573350,"is_pvip":false,"replies":[{"id":"42002","content":"这两者是一样的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1563459293,"ip_address":"","comment_id":111618,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562573350","product_id":100020901,"comment_content":"RES和RSS有什么区分吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457389,"discussion_content":"这两者是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563459293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96696,"user_name":"nice","can_delete":false,"product_type":"c1","uid":1240611,"ip_address":"","ucode":"B0EF8D17C72A2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/23/b8d6546e.jpg","comment_is_top":false,"comment_ctime":1558488989,"is_pvip":false,"replies":[{"id":"34975","content":"本文内存分配和回收部分有对这问题的讲解","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1558794010,"ip_address":"","comment_id":96696,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558488989","product_id":100020901,"comment_content":"飞哥，请教一个问题，比如应用进程使用malloc申请1个字节的空间，然后OS会返回一个虚拟内存空间地址，当使用虚拟内存空间的时候，会对这个虚拟内存空间做映射，映射到物理空间！现在我不太清楚，OS返回虚拟内存空间是不是真的只有一个字节，因为映射的时候最小单位是一页(4k)，总感觉自己哪里理解错误！或者我应该看那些相关知识？谢谢飞哥！","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450976,"discussion_content":"本文内存分配和回收部分有对这问题的讲解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558794010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94194,"user_name":"witluo","can_delete":false,"product_type":"c1","uid":1443117,"ip_address":"","ucode":"3D9608C3DDDD95","user_header":"","comment_is_top":false,"comment_ctime":1557742800,"is_pvip":false,"replies":[{"id":"33782","content":"1. 部署服务时内存变化猜测是进城重启内存释放导致的，建议部署监控系统，观察一下系统和进程的内存变化趋势。<br>2. 是说平均负载吗？可以参考02篇","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1557835561,"ip_address":"","comment_id":94194,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557742800","product_id":100020901,"comment_content":"老师好，请教个问题<br>1.为什么部署服务的时候，通过命令看到，可用内存会变大，随时服务的运转可用内存会越来越少，最后会平衡，而不是一直在变大？<br>2.load这个指标怎么解读？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449949,"discussion_content":"1. 部署服务时内存变化猜测是进城重启内存释放导致的，建议部署监控系统，观察一下系统和进程的内存变化趋势。\n2. 是说平均负载吗？可以参考02篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557835561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91915,"user_name":"小松松","can_delete":false,"product_type":"c1","uid":1298152,"ip_address":"","ucode":"B9B5FFE7CAA548","user_header":"https://static001.geekbang.org/account/avatar/00/13/ce/e8/12cb8e99.jpg","comment_is_top":false,"comment_ctime":1557133687,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1557133687","product_id":100020901,"comment_content":"mmap的内存分配方式是在文件映射段一块空闲内存分配出去。 这个地方不理解 ，看书上说内存被划成每个区域（段）  如果是从文件映射段划分，那么不就是从别的区域划分内存到堆内存上了？ <br><br>","like_count":0},{"had_liked":false,"id":89658,"user_name":"bigzuo","can_delete":false,"product_type":"c1","uid":1224554,"ip_address":"","ucode":"448C258D31A8A6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/RQdib68D7dsoFlYXOweiaPqLrcyn2jD6DCGnz8nc2VFmhmX0bpGTeSrVM5M9Qs7ibIInAmt5MeLcpcNja5YjyZCIg/132","comment_is_top":false,"comment_ctime":1556240875,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556240875","product_id":100020901,"comment_content":"没有明白linux 内存页机制及替换查找的原理，没有看明白","like_count":0},{"had_liked":false,"id":89497,"user_name":"Cc°°","can_delete":false,"product_type":"c1","uid":1149143,"ip_address":"","ucode":"6C88E8D2C4622D","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/d7/43cf7b60.jpg","comment_is_top":false,"comment_ctime":1556185875,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1556185875","product_id":100020901,"comment_content":"## 问题<br>32位，页4K，每级页表需要占用多少存储空间？共占用多少存储空间？<br>## 回答<br>4B表示32位地址<br>### 一级(20)页表<br>2^20*4B=2^22B=2^12KB=2^2MB=4MB<br>### 四级(4-6-5-5)页表<br>(2^4 + 2^4*2^6 + 2^4*2^6*2^5 + 2^4*2^6*2^5 *2^5)*4B=(2^4+2^10+2^15+2^20)*4B=4.13MB","like_count":0},{"had_liked":false,"id":88059,"user_name":"老黄","can_delete":false,"product_type":"c1","uid":1299038,"ip_address":"","ucode":"6F32D6BAD9C220","user_header":"https://static001.geekbang.org/account/avatar/00/13/d2/5e/b5362ca9.jpg","comment_is_top":false,"comment_ctime":1555831370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555831370","product_id":100020901,"comment_content":"太硬了，内存首篇看了不下五边了，能勉强继续看下一篇了","like_count":0},{"had_liked":false,"id":87637,"user_name":"　","can_delete":false,"product_type":"c1","uid":1285138,"ip_address":"","ucode":"DA2B6E94E06207","user_header":"https://static001.geekbang.org/account/avatar/00/13/9c/12/664dde08.jpg","comment_is_top":false,"comment_ctime":1555646307,"is_pvip":false,"replies":[{"id":"31674","content":"不同版本的输出确实是不同，具体的含义要查看文档","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1555856098,"ip_address":"","comment_id":87637,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555646307","product_id":100020901,"comment_content":"想请教下，在有些版本的free命令查询的结果中有-&#47;+buffers&#47;cached的一行，那一行的free就是我们平时统计的真实free，但是并不是所有的buffer和cache都可以回收，所以我们看-&#47;+buffers&#47;cached那一行的free其实也是不准确的，对吗？<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447540,"discussion_content":"不同版本的输出确实是不同，具体的含义要查看文档","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555856098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80653,"user_name":"阿文","can_delete":false,"product_type":"c1","uid":1106209,"ip_address":"","ucode":"BB4DB62141971F","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/21/5f0bf9a0.jpg","comment_is_top":false,"comment_ctime":1553694136,"is_pvip":false,"replies":[{"id":"29330","content":"pidof sshd 是不是有多个输出？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553697564,"ip_address":"","comment_id":80653,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553694136","product_id":100020901,"comment_content":"# echo -16 &gt; &#47;proc&#47;$(pidof sshd)&#47;oom_adj<br>bash: &#47;proc&#47;$(pidof sshd)&#47;oom_adj: 模糊的重定向","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444932,"discussion_content":"pidof sshd 是不是有多个输出？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553697564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80022,"user_name":"东宇","can_delete":false,"product_type":"c1","uid":1118347,"ip_address":"","ucode":"2F0A8C67D55B5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/10/8b/7e84507c.jpg","comment_is_top":false,"comment_ctime":1553594178,"is_pvip":false,"replies":[{"id":"29201","content":"最好的方法去看文档和源码","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553610862,"ip_address":"","comment_id":80022,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553594178","product_id":100020901,"comment_content":"老师 问下 想详细了解下jemalloc工作原理 有什么好的讲解吗 感觉一直停留在表面 多谢！","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444726,"discussion_content":"最好的方法去看文档和源码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553610862,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77187,"user_name":"小小鸟","can_delete":false,"product_type":"c1","uid":1102550,"ip_address":"","ucode":"11C15D267DE457","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/d6/d393593d.jpg","comment_is_top":false,"comment_ctime":1552879771,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552879771","product_id":100020901,"comment_content":"打卡 今天了解的操作系统、进程的内存管理，物理内存，虚拟内存；通过工具查看内容情况","like_count":0},{"had_liked":false,"id":73089,"user_name":"蒋威","can_delete":false,"product_type":"c1","uid":1029200,"ip_address":"","ucode":"D57B6BB0A49A8C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/50/ea219145.jpg","comment_is_top":false,"comment_ctime":1551794924,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551794924","product_id":100020901,"comment_content":"这一节信息量很大，干活很多，有之前读CSAPP的时候的感觉","like_count":0},{"had_liked":false,"id":70200,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1551050438,"is_pvip":false,"replies":[{"id":"25347","content":"内核空间就一个，所有进程进入内核态时看到的都是一样的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551194681,"ip_address":"","comment_id":70200,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551050438","product_id":100020901,"comment_content":"老师请教一个问题，Linux的各个进程之间的用户态是隔离的，有各自的页表。32位系统下，内核占用最高1G的内存，也就是说各个进程的这最高1G是共享的，那么在内核态的时候，最高这1G的部分访问的时候还需要页表吗？也就是内核态访存时还经过mmu吗？如果需要页表的话，那是不是内核态只需要存在一份页表就可以了，所有的进程共享这一份最高1G地址的页表？还是说内核态的页表，也是每个进程各自保存一份？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440488,"discussion_content":"内核空间就一个，所有进程进入内核态时看到的都是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551194681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65154,"user_name":"blackpiglet","can_delete":false,"product_type":"c1","uid":1032928,"ip_address":"","ucode":"58AA8329C91767","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/e0/7188aa0a.jpg","comment_is_top":false,"comment_ctime":1549078740,"is_pvip":false,"replies":[{"id":"23137","content":"这是看错了吧，free 11G &lt; available 100G<br><br>数字比较大的时候，建议用 free -g","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1549161376,"ip_address":"","comment_id":65154,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549078740","product_id":100020901,"comment_content":"请问老师，用 free 命令查看系统内存，标记为 free 内存大于 available 的内存是什么原因呢？正常来讲，不应该是反过来吗？<br>这个物理机是用来跑 k8s 的，关闭了 swap，这有影响吗？<br><br>$ free<br>              total        used        free      shared  buff&#47;cache   available<br>Mem:      131932792    27384328    11655508     1454684    92892956   100732052<br>Swap:             0           0           0<br>k8s@ubuntu54:~$ <br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438337,"discussion_content":"这是看错了吧，free 11G &amp;lt; available 100G\n\n数字比较大的时候，建议用 free -g","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549161376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61453,"user_name":"Geek_41dcba","can_delete":false,"product_type":"c1","uid":1089626,"ip_address":"","ucode":"22F9180FBD74F5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wjK0unDiaUMZYGsl43dovmLWZS6WvDzpespydKfOQHDU55QPZQZvfKKYk4ZaITibGc3wwC3vqTTudWficcPhEia0Xw/132","comment_is_top":false,"comment_ctime":1547700900,"is_pvip":true,"replies":[{"id":"22321","content":"除了TLB，内存的动态分配和回收、缓存、Swap等都会影响性能。异常跟中断不一样，但可以类比理解","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548250426,"ip_address":"","comment_id":61453,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547700900","product_id":100020901,"comment_content":"刚在将内存性能几篇做一个总体的整理，在整理到对于内存页表管理感觉很像是它像是一个B+树的演变，空间占用小（如果是4级，每级表的大小是10就可以表示到一百多万），并且查询效率在O(logN)，log的底是页表的级数。如果页是大页分配时有一个说法是TLB中的命中率就提高，也就提高访问速度。那页的大小设置怎样设置才适合我们自己的应用场景，性能上除了TLB命中率以为还有那些影响了？同时在内存使用时才映射到物理内存页上，文中提到的缺页异常是不是一个中断？（我看了一遍&#47;proc下的两个中断文件内容感觉没一个有关系）","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436874,"discussion_content":"除了TLB，内存的动态分配和回收、缓存、Swap等都会影响性能。异常跟中断不一样，但可以类比理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548250426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60631,"user_name":"陈帅","can_delete":false,"product_type":"c1","uid":1316646,"ip_address":"","ucode":"F8EC28252B80EF","user_header":"","comment_is_top":false,"comment_ctime":1547520692,"is_pvip":false,"replies":[{"id":"22304","content":"除非有必要，绝大部分应用都不需要 Swap。<br><br>参考第19和20篇","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1548248940,"ip_address":"","comment_id":60631,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547520692","product_id":100020901,"comment_content":"能不能简单聊聊，哪些应用需要swap分区，哪些应用不需要swap分区的？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436566,"discussion_content":"除非有必要，绝大部分应用都不需要 Swap。\n\n参考第19和20篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548248940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59291,"user_name":"会飞的肥肥会飞","can_delete":false,"product_type":"c1","uid":1083983,"ip_address":"","ucode":"0B645F765CC505","user_header":"https://static001.geekbang.org/account/avatar/00/10/8a/4f/a3a78dde.jpg","comment_is_top":false,"comment_ctime":1547347184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547347184","product_id":100020901,"comment_content":"页表的存放位置不是mmu吧。<br>mmu中的寄存器只是存放了页表的位置，页表实际存放在主存中？","like_count":0},{"had_liked":false,"id":59092,"user_name":"魏峰","can_delete":false,"product_type":"c1","uid":1146412,"ip_address":"","ucode":"33F5D09C64D4C4","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/2c/54d68da4.jpg","comment_is_top":false,"comment_ctime":1547299600,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547299600","product_id":100020901,"comment_content":"老师，伙伴系统和mmu对内存的管理，如何理解哇","like_count":0},{"had_liked":false,"id":57732,"user_name":"licht","can_delete":false,"product_type":"c1","uid":1064030,"ip_address":"","ucode":"467270E57A7BF8","user_header":"https://static001.geekbang.org/account/avatar/00/10/3c/5e/6a26a8c4.jpg","comment_is_top":false,"comment_ctime":1546877245,"is_pvip":false,"replies":[{"id":"21000","content":"嗯嗯 是的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1547028852,"ip_address":"","comment_id":57732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546877245","product_id":100020901,"comment_content":"多级页表可以节省内存，实际上是以时间换空间。<br>而大页内存是以空间换时间。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435726,"discussion_content":"嗯嗯 是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547028852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57457,"user_name":"0.0","can_delete":false,"product_type":"c1","uid":1344624,"ip_address":"","ucode":"E497C5B0A8580C","user_header":"https://static001.geekbang.org/account/avatar/00/14/84/70/6573ec64.jpg","comment_is_top":false,"comment_ctime":1546796429,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1546796429","product_id":100020901,"comment_content":"很厉害哈","like_count":0},{"had_liked":false,"id":55082,"user_name":"zylv","can_delete":false,"product_type":"c1","uid":1210173,"ip_address":"","ucode":"D90E50E78B5B2D","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/3d/d998a34f.jpg","comment_is_top":false,"comment_ctime":1546040700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546040700","product_id":100020901,"comment_content":"老师，后面会讲cgroup吗，我遇到一个内存使用的问题，cgroup下的memory_in_usage_bytes跟free中used 内存差几倍，这是为啥","like_count":0},{"had_liked":false,"id":54745,"user_name":"React","can_delete":false,"product_type":"c1","uid":1100554,"ip_address":"","ucode":"A176EF0AA242B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/0a/6a9e6602.jpg","comment_is_top":false,"comment_ctime":1545958966,"is_pvip":false,"replies":[{"id":"19932","content":"实际上内存的占用需要做压力测试才能知道，因为繁忙进程一般会比空闲时占用更多的内存。在计算进程实际内存的时候，用PSS更准确。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546003971,"ip_address":"","comment_id":54745,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545958966","product_id":100020901,"comment_content":"老师好，phpfpm可以分配多个子进程，假设主机中只运行phpfpm.我在计算phpfpm能够分配最大进程数时需要知道单个phpfpm进程占用的内存大小，这个占用的内存大小，我只需要计算实际占用的物理内存，即top中的res即可吗？另外通过这篇文章，我知道了为什么系统中进程占用的virt会比res和shr的总和还要大了。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434550,"discussion_content":"实际上内存的占用需要做压力测试才能知道，因为繁忙进程一般会比空闲时占用更多的内存。在计算进程实际内存的时候，用PSS更准确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546003971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54656,"user_name":"Only now","can_delete":false,"product_type":"c1","uid":1038574,"ip_address":"","ucode":"C617473A03AE27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/ee/6e7c2264.jpg","comment_is_top":false,"comment_ctime":1545924076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545924076","product_id":100020901,"comment_content":"mark ","like_count":0},{"had_liked":false,"id":54616,"user_name":"魏峰","can_delete":false,"product_type":"c1","uid":1146412,"ip_address":"","ucode":"33F5D09C64D4C4","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/2c/54d68da4.jpg","comment_is_top":false,"comment_ctime":1545915118,"is_pvip":false,"replies":[{"id":"19950","content":"有的，篇幅限制，文中没有展开","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546006118,"ip_address":"","comment_id":54616,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545915118","product_id":100020901,"comment_content":"Linux没有段机制？我看有的文档上说有","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434512,"discussion_content":"有的，篇幅限制，文中没有展开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546006118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54459,"user_name":"13001236383","can_delete":false,"product_type":"c1","uid":1247035,"ip_address":"","ucode":"5A1213A1B2466D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLx1Jz78aibuoJEWdLTsDhucnVDTvkkeRX2w6ZJWXp0h7Zfe7GM6vKAx3jNhFhJJaElDCicyHpf1e9Q/132","comment_is_top":false,"comment_ctime":1545874572,"is_pvip":false,"replies":[{"id":"19957","content":"1. 内核保证内存的隔离<br>2. 内核中大部分是直接分配物理页，但是也可以通过vmalloc来分配不连续的物理内存，这时候必须通过页表才能知道映射关系","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1546007240,"ip_address":"","comment_id":54459,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545874572","product_id":100020901,"comment_content":"老师请教两个问题第1.每个用户进程在运行时都会在用户空间的各段空间内申请自己的空间，比如说每个进程都会在栈空间申请自己的栈，在堆空间申请自己的堆空间？各进程是怎么实现访问隔离的？<br>2.用户态内存和内核态内存是不是只从用户进程角度来看？内核使用内存是直接分配了，还是也是需要进行映射？多谢老师。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434459,"discussion_content":"1. 内核保证内存的隔离\n2. 内核中大部分是直接分配物理页，但是也可以通过vmalloc来分配不连续的物理内存，这时候必须通过页表才能知道映射关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546007240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54243,"user_name":"张挺","can_delete":false,"product_type":"c1","uid":1038954,"ip_address":"","ucode":"CDF8549440926D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/da/6a/91bd13de.jpg","comment_is_top":false,"comment_ctime":1545814789,"is_pvip":false,"replies":[{"id":"19695","content":"内存的影响更大，内存越多，分值越大；但CPU使用多了会减分。还有很多其他的减分项可以查询下man手册","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545833881,"ip_address":"","comment_id":54243,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545814789","product_id":100020901,"comment_content":"您好，如果一个进程既会消耗较多的内存，也会占用较多的CPU资源，那么oom_score的值是怎么变化的？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434404,"discussion_content":"内存的影响更大，内存越多，分值越大；但CPU使用多了会减分。还有很多其他的减分项可以查询下man手册","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545833881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54231,"user_name":"9527","can_delete":false,"product_type":"c1","uid":1032735,"ip_address":"","ucode":"04B51C09E3C7B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/1f/343f2dec.jpg","comment_is_top":false,"comment_ctime":1545811908,"is_pvip":false,"replies":[{"id":"19696","content":"1. 内核线程总是0<br>2. 像是分配失败了？有没有检查下errno？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545834677,"ip_address":"","comment_id":54231,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545811908","product_id":100020901,"comment_content":"老师好，我执行top，发现<br>[ksoftirqd&#47;0]，[rcu_bh]，[kswapd0]。。。。很多很多的内核进程他们的VIRT这一项都是0，这是怎么回事？<br><br>我自己了一个程序，测试内存分配的<br>第一次执行调用sbrk(10)，分配成功对应的地址是0xa8700b，然后看smap，0xa8700b这个地址在对应的[heap]中是能找到对应<br><br>再执行第二次，这次变成sbrk(8888888888)，返回的地址是0x1be9000，再查看进程的smap，发现没有对应的这种地址，而且更奇怪的是，smap中本来应该有一项是 [heap]的，现在居然没有了<br>strace看进程是分配成功了，再用pidstat -p 26530 -r 看，对应的VSZ和RSS都比较小<br>那么sbrk()分配的内存到哪里去了呢？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434399,"discussion_content":"1. 内核线程总是0\n2. 像是分配失败了？有没有检查下errno？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545834677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54162,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1545799306,"is_pvip":false,"replies":[{"id":"19704","content":"下一期讲","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545835692,"ip_address":"","comment_id":54162,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545799306","product_id":100020901,"comment_content":"Buffer与cache区别？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434376,"discussion_content":"下一期讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545835692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54070,"user_name":"holen","can_delete":false,"product_type":"c1","uid":1104199,"ip_address":"","ucode":"2C7D342AFE4DF0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/47/247fd305.jpg","comment_is_top":false,"comment_ctime":1545791004,"is_pvip":false,"replies":[{"id":"19719","content":"OOM还要从原始的进程开始分析，比如观察它的内存是不是只分配而不释放？后面还有一篇文章讲内存泄漏的分析方法","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545838407,"ip_address":"","comment_id":54070,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545791004","product_id":100020901,"comment_content":"最近服务器刚好出现了 OOM,  无从下手， 希望跟着老师学习整理 <br>[27078405.372496] php-fpm invoked oom-killer: gfp_mask=0x201da, order=0, oom_score_adj=0<br>[27078405.372501] php-fpm cpuset=&#47; mems_allowed=0<br>[27078405.372505] CPU: 2 PID: 3379 Comm: php-fpm Not tainted 3.10.0-693.2.2.el7.x86_64 #1<br>[27078405.372506] Hardware name: Alibaba Cloud Alibaba Cloud ECS, BIOS rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04&#47;01&#47;2014<br>[27078405.372508]  ffff88018b62cf10 0000000019644569 ffff88002697b8f8 ffffffff816a3db1<br>[27078405.372523]  ffff88002697b988 ffffffff8169f1a6 ffffffff810e939c ffff88021cf6bad0<br>[27078405.372524]  0000000000000001 ffff88002697b930 0000000000000206 ffff88002697b978<br>[27078405.372527] Call Trace:<br>[27078405.372538]  [&lt;ffffffff816a3db1&gt;] dump_stack+0x19&#47;0x1b<br>[27078405.372540]  [&lt;ffffffff8169f1a6&gt;] dump_header+0x90&#47;0x229<br>[27078405.372545]  [&lt;ffffffff810e939c&gt;] ? ktime_get_ts64+0x4c&#47;0xf0<br>[27078405.372549]  [&lt;ffffffff8113d36f&gt;] ? delayacct_end+0x8f&#47;0xb0<br>[27078405.372555]  [&lt;ffffffff81186394&gt;] oom_kill_process+0x254&#47;0x3d0<br>[27078405.372557]  [&lt;ffffffff81185e3d&gt;] ? oom_unkillable_task+0xcd&#47;0x120<br>[27078405.372560]  [&lt;ffffffff81185ee6&gt;] ? find_lock_task_mm+0x56&#47;0xc0<br>[27078405.372562]  [&lt;ffffffff81186bd6&gt;] out_of_memory+0x4b6&#47;0x4f0<br>[27078405.372564]  [&lt;ffffffff8169fcaa&gt;] __alloc_pages_slowpath+0x5d6&#47;0x724<br>[27078405.372566]  [&lt;ffffffff8118cd85&gt;] __alloc_pages_nodemask+0x405&#47;0x420<br>[27078405.372570]  [&lt;ffffffff811d1108&gt;] alloc_pages_current+0x98&#47;0x110<br>[27078405.372572]  [&lt;ffffffff81182917&gt;] __page_cache_alloc+0x97&#47;0xb0<br>[27078405.372574]  [&lt;ffffffff81184eb0&gt;] filemap_fault+0x170&#47;0x410<br>[27078405.372612]  [&lt;ffffffffc01d9156&gt;] ext4_filemap_fault+0x36&#47;0x50 [ext4]<br>[27078405.372615]  [&lt;ffffffff811ad162&gt;] __do_fault+0x52&#47;0xe0<br>[27078405.372617]  [&lt;ffffffff811ad60b&gt;] do_read_fault.isra.44+0x4b&#47;0x130<br>[27078405.372619]  [&lt;ffffffff811b1f11&gt;] handle_mm_fault+0x691&#47;0xfa0<br>[27078405.372625]  [&lt;ffffffff816afff4&gt;] __do_page_fault+0x154&#47;0x450<br><br><br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434346,"discussion_content":"OOM还要从原始的进程开始分析，比如观察它的内存是不是只分配而不释放？后面还有一篇文章讲内存泄漏的分析方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545838407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54010,"user_name":"VIC","can_delete":false,"product_type":"c1","uid":1343938,"ip_address":"","ucode":"805246B9ABE16C","user_header":"https://static001.geekbang.org/account/avatar/00/14/81/c2/314460b8.jpg","comment_is_top":false,"comment_ctime":1545785914,"is_pvip":false,"replies":[{"id":"19723","content":"这应该是说mmap吧，缺页异常是内存分配必要步骤：陷入内核态分配内存并完成内存映射的过程","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545839644,"ip_address":"","comment_id":54010,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545785914","product_id":100020901,"comment_content":"nmap为什么会缺页异常?","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434324,"discussion_content":"这应该是说mmap吧，缺页异常是内存分配必要步骤：陷入内核态分配内存并完成内存映射的过程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545839644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53890,"user_name":"allan","can_delete":false,"product_type":"c1","uid":1142819,"ip_address":"","ucode":"CA0BE868AA9FF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/23/972dcd30.jpg","comment_is_top":false,"comment_ctime":1545748970,"is_pvip":false,"replies":[{"id":"19761","content":"free只给出了个汇总值，具体的来源和计算要看proc下面的值","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545886285,"ip_address":"","comment_id":53890,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545748970","product_id":100020901,"comment_content":"老师，free 列出的这几个数据之间的关系是怎么样的？可不可以讲一下，比如 used 是其他哪几个指标之和？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434283,"discussion_content":"free只给出了个汇总值，具体的来源和计算要看proc下面的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545886285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53856,"user_name":"Vicky🐣🐣🐣","can_delete":false,"product_type":"c1","uid":1266840,"ip_address":"","ucode":"F659F178A2FF34","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/98/52ca7053.jpg","comment_is_top":false,"comment_ctime":1545742630,"is_pvip":false,"replies":[{"id":"19763","content":"是的，内存跟oom score正相关，但是CPU用多了会减分的，也就是说CPU用的越多也就不容易因OOM杀死","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545886454,"ip_address":"","comment_id":53856,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545742630","product_id":100020901,"comment_content":"老师，文中说<br>一个进程运行占用的CPU越多，oom_score就越小<br>这里不应该是 一个进程消耗的内存越少，oom_score就越小吗？<br>麻烦老师解答一下","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434269,"discussion_content":"是的，内存跟oom score正相关，但是CPU用多了会减分的，也就是说CPU用的越多也就不容易因OOM杀死","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545886454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53828,"user_name":"同心飞翔","can_delete":false,"product_type":"c1","uid":1351434,"ip_address":"","ucode":"01EE03B0DF81EF","user_header":"https://static001.geekbang.org/account/avatar/00/14/9f/0a/611030c3.jpg","comment_is_top":false,"comment_ctime":1545737857,"is_pvip":true,"replies":[{"id":"19764","content":"压测确实是容易引出资源瓶颈问题，不过windbg没用过，这是一个Windows上的工具？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545886544,"ip_address":"","comment_id":53828,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545737857","product_id":100020901,"comment_content":"最近性能测试，长时间压测负载机内存就很高，最后就over了，使用windbg没分析出来，期待实战篇","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434254,"discussion_content":"压测确实是容易引出资源瓶颈问题，不过windbg没用过，这是一个Windows上的工具？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545886544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53821,"user_name":"Vicky🐣🐣🐣","can_delete":false,"product_type":"c1","uid":1266840,"ip_address":"","ucode":"F659F178A2FF34","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/98/52ca7053.jpg","comment_is_top":false,"comment_ctime":1545735376,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545735376","product_id":100020901,"comment_content":"打卡，跟上进度了，加油<br>内存篇点点难，需要多看几遍","like_count":0},{"had_liked":false,"id":53473,"user_name":"唯美","can_delete":false,"product_type":"c1","uid":1263430,"ip_address":"","ucode":"9186A5B99DFBCA","user_header":"https://static001.geekbang.org/account/avatar/00/13/47/46/61f16147.jpg","comment_is_top":false,"comment_ctime":1545653036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545653036","product_id":100020901,"comment_content":"打开D14","like_count":0},{"had_liked":false,"id":53442,"user_name":"Schmilençé","can_delete":false,"product_type":"c1","uid":1257721,"ip_address":"","ucode":"4CD7341BD2F428","user_header":"https://static001.geekbang.org/account/avatar/00/13/30/f9/6dbf31a7.jpg","comment_is_top":false,"comment_ctime":1545645364,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1545645364","product_id":100020901,"comment_content":"终于基本跟上了，打卡，感觉内存部分会难一些。","like_count":0},{"had_liked":false,"id":53424,"user_name":"冷笑的花猫","can_delete":false,"product_type":"c1","uid":1119029,"ip_address":"","ucode":"6C368FBB577470","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/35/45391914.jpg","comment_is_top":false,"comment_ctime":1545641432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545641432","product_id":100020901,"comment_content":"这篇文章太干了，解决了好多疑难。感谢老师！","like_count":0},{"had_liked":false,"id":53364,"user_name":"十三","can_delete":false,"product_type":"c1","uid":1196791,"ip_address":"","ucode":"D3EFE8729DDE8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/42/f7/9dce9a7b.jpg","comment_is_top":false,"comment_ctime":1545633264,"is_pvip":false,"replies":[{"id":"19331","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545643768,"ip_address":"","comment_id":53364,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545633264","product_id":100020901,"comment_content":"今天内容确实很硬，需要多啃几遍","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434115,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545643768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53311,"user_name":"颜培攀","can_delete":false,"product_type":"c1","uid":1246561,"ip_address":"","ucode":"AC8839AB6C69F8","user_header":"https://static001.geekbang.org/account/avatar/00/13/05/61/fc303f93.jpg","comment_is_top":false,"comment_ctime":1545624996,"is_pvip":true,"replies":[{"id":"19443","content":"内核空间需要通过系统调用陷入内核态才可以访问。","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545695717,"ip_address":"","comment_id":53311,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545624996","product_id":100020901,"comment_content":"只有内核才可以访问物理内存。那么进程访问用户空间和系统空间的区别是什么？为什么访问用户空间消耗小一些？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434095,"discussion_content":"内核空间需要通过系统调用陷入内核态才可以访问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545695717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53275,"user_name":"LPY","can_delete":false,"product_type":"c1","uid":1318614,"ip_address":"","ucode":"4B91D7B7A0243F","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/d6/384bcfc7.jpg","comment_is_top":false,"comment_ctime":1545621407,"is_pvip":false,"replies":[{"id":"19333","content":"后面会讲内存问题的分析方法","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545643857,"ip_address":"","comment_id":53275,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545621407","product_id":100020901,"comment_content":"想请教老师，如果发现一个C++进程占用了大量内存，该如何分析该进程占用内存的原因？有工具可以看到C++进程的对象数量之类的参数吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434091,"discussion_content":"后面会讲内存问题的分析方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545643857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53247,"user_name":"湖湘志","can_delete":false,"product_type":"c1","uid":1285578,"ip_address":"","ucode":"C8B069B3AD4FEA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erJR5Kj0Xm6LykFHLaWqHjQiaroVxgdoGI7uHEGz2D3PfibWNkBYP23QLzFmcuicgKLbqUch0ZJ2ZNOA/132","comment_is_top":false,"comment_ctime":1545619094,"is_pvip":false,"replies":[{"id":"19337","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545643889,"ip_address":"","comment_id":53247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545619094","product_id":100020901,"comment_content":"D15","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434080,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545643889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53228,"user_name":"张振宇","can_delete":false,"product_type":"c1","uid":1130691,"ip_address":"","ucode":"7A6FD7294E65FF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/c3/e545ba80.jpg","comment_is_top":false,"comment_ctime":1545617485,"is_pvip":false,"replies":[{"id":"19340","content":"看应用，有的应用要求必须要有swap，不过大部分都不需要","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1545643995,"ip_address":"","comment_id":53228,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545617485","product_id":100020901,"comment_content":"老师，现在装机是否还需要预留swap分区？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434074,"discussion_content":"看应用，有的应用要求必须要有swap，不过大部分都不需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545643995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53203,"user_name":"一禅小和尚","can_delete":false,"product_type":"c1","uid":1182806,"ip_address":"","ucode":"5A2A0875DE062A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/56/02fba09b.jpg","comment_is_top":false,"comment_ctime":1545615792,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545615792","product_id":100020901,"comment_content":"打卡了","like_count":0},{"had_liked":false,"id":53161,"user_name":"风飘，吾独思","can_delete":false,"product_type":"c1","uid":1131032,"ip_address":"","ucode":"4DF0E7DC22EE53","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/18/edc1b373.jpg","comment_is_top":false,"comment_ctime":1545612861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545612861","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":53117,"user_name":"大青蛙","can_delete":false,"product_type":"c1","uid":1315713,"ip_address":"","ucode":"D0066C85F48515","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/81/f16a0401.jpg","comment_is_top":false,"comment_ctime":1545607961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545607961","product_id":100020901,"comment_content":"打卡","like_count":0}]}