{"id":83189,"title":"41 | 案例篇：如何优化 NAT 性能？（上）","content":"<p>你好，我是倪朋飞。</p><p>上一节，我们探究了网络延迟增大问题的分析方法，并通过一个案例，掌握了如何用 hping3、tcpdump、Wireshark、strace 等工具，来排查和定位问题的根源。</p><p>简单回顾一下，网络延迟是最核心的网络性能指标。由于网络传输、网络包处理等各种因素的影响，网络延迟不可避免。但过大的网络延迟，会直接影响用户的体验。</p><p>所以，在发现网络延迟增大的情况后，你可以先从路由、网络包的收发、网络包的处理，再到应用程序等，从各个层级分析网络延迟，等到找出网络延迟的来源层级后，再深入定位瓶颈所在。</p><p>今天，我再带你来看看，另一个可能导致网络延迟的因素，即网络地址转换（Network Address Translation），缩写为 NAT。</p><p>接下来，我们先来学习 NAT 的工作原理，并弄清楚如何优化 NAT 带来的潜在性能问题。</p><h2>NAT原理</h2><p>NAT 技术可以重写 IP 数据包的源 IP 或者目的 IP，被普遍地用来解决公网 IP 地址短缺的问题。它的主要原理就是，网络中的多台主机，通过共享同一个公网 IP 地址，来访问外网资源。同时，由于 NAT 屏蔽了内网网络，自然也就为局域网中的机器提供了安全隔离。</p><p>你既可以在支持网络地址转换的路由器（称为 NAT 网关）中配置 NAT，也可以在 Linux 服务器中配置 NAT。如果采用第二种方式，Linux 服务器实际上充当的是“软”路由器的角色。</p><!-- [[[read_end]]] --><p>NAT 的主要目的，是实现地址转换。根据实现方式的不同，NAT 可以分为三类：</p><ul>\n<li>\n<p>静态 NAT，即内网 IP 与公网 IP 是一对一的永久映射关系；</p>\n</li>\n<li>\n<p>动态 NAT，即内网 IP 从公网 IP 池中，动态选择一个进行映射；</p>\n</li>\n<li>\n<p>网络地址端口转换 NAPT（Network Address and Port Translation），即把内网 IP 映射到公网 IP 的不同端口上，让多个内网 IP 可以共享同一个公网 IP 地址。</p>\n</li>\n</ul><p>NAPT 是目前最流行的 NAT 类型，我们在 Linux 中配置的 NAT 也是这种类型。而根据转换方式的不同，我们又可以把 NAPT 分为三类。</p><p>第一类是源地址转换SNAT，即目的地址不变，只替换源 IP 或源端口。SNAT 主要用于，多个内网 IP 共享同一个公网 IP ，来访问外网资源的场景。</p><p>第二类是目的地址转换DNAT，即源 IP 保持不变，只替换目的 IP 或者目的端口。DNAT 主要通过公网 IP 的不同端口号，来访问内网的多种服务，同时会隐藏后端服务器的真实 IP 地址。</p><p>第三类是双向地址转换，即同时使用 SNAT 和 DNAT。当接收到网络包时，执行 DNAT，把目的 IP 转换为内网 IP；而在发送网络包时，执行 SNAT，把源 IP 替换为外部 IP。</p><p>双向地址转换，其实就是外网 IP 与内网 IP 的一对一映射关系，所以常用在虚拟化环境中，为虚拟机分配浮动的公网 IP 地址。</p><p>为了帮你理解 NAPT，我画了一张图。我们假设：</p><ul>\n<li>\n<p>本地服务器的内网 IP 地址为 192.168.0.2；</p>\n</li>\n<li>\n<p>NAT 网关中的公网 IP 地址为 100.100.100.100；</p>\n</li>\n<li>\n<p>要访问的目的服务器 baidu.com 的地址为 123.125.115.110。</p>\n</li>\n</ul><p>那么 SNAT 和 DNAT 的过程，就如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/c7/e4/c743105dc7bd955a4a300d6b55b7a0e4.png?wh=712*610\" alt=\"\"></p><p>从图中，你可以发现：</p><ul>\n<li>\n<p>当服务器访问 baidu.com 时，NAT 网关会把源地址，从服务器的内网 IP 192.168.0.2 替换成公网 IP 地址 100.100.100.100，然后才发送给 baidu.com；</p>\n</li>\n<li>\n<p>当 baidu.com 发回响应包时，NAT 网关又会把目的地址，从公网 IP 地址 100.100.100.100 替换成服务器内网 IP 192.168.0.2，然后再发送给内网中的服务器。</p>\n</li>\n</ul><p>了解了 NAT 的原理后，我们再来看看，如何在 Linux 中实现 NAT 的功能。</p><h2>iptables与NAT</h2><p>Linux 内核提供的 Netfilter 框架，允许对网络数据包进行修改（比如 NAT）和过滤（比如防火墙）。在这个基础上，iptables、ip6tables、ebtables 等工具，又提供了更易用的命令行接口，以便系统管理员配置和管理 NAT、防火墙的规则。</p><p>其中，iptables 就是最常用的一种配置工具。要掌握 iptables 的原理和使用方法，最核心的就是弄清楚，网络数据包通过 Netfilter 时的工作流向，下面这张图就展示了这一过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/c6/56/c6de40c5bd304132a1b508ba669e7b56.png?wh=1415*435\" alt=\"\"><br>\n（图片来自 <a href=\"https://en.wikipedia.org/wiki/Iptables\">Wikipedia</a>）</p><p>在这张图中，绿色背景的方框，表示表（table），用来管理链。Linux 支持 4 种表，包括 filter（用于过滤）、nat（用于NAT）、mangle（用于修改分组数据） 和 raw（用于原始数据包）等。</p><p>跟 table 一起的白色背景方框，则表示链（chain），用来管理具体的 iptables 规则。每个表中可以包含多条链，比如：</p><ul>\n<li>\n<p>filter 表中，内置 INPUT、OUTPUT 和 FORWARD 链；</p>\n</li>\n<li>\n<p>nat 表中，内置PREROUTING、POSTROUTING、OUTPUT 等。</p>\n</li>\n</ul><p>当然，你也可以根据需要，创建你自己的链。</p><p>灰色的 conntrack，表示连接跟踪模块。它通过内核中的连接跟踪表（也就是哈希表），记录网络连接的状态，是 iptables 状态过滤（-m state）和 NAT 的实现基础。</p><p>iptables 的所有规则，就会放到这些表和链中，并按照图中顺序和规则的优先级顺序来执行。</p><p>针对今天的主题，要实现 NAT 功能，主要是在 nat 表进行操作。而 nat 表内置了三个链：</p><ul>\n<li>\n<p>PREROUTING，用于路由判断前所执行的规则，比如，对接收到的数据包进行 DNAT。</p>\n</li>\n<li>\n<p>POSTROUTING，用于路由判断后所执行的规则，比如，对发送或转发的数据包进行 SNAT 或 MASQUERADE。</p>\n</li>\n<li>\n<p>OUTPUT，类似于 PREROUTING，但只处理从本机发送出去的包。</p>\n</li>\n</ul><p>熟悉 iptables 中的表和链后，相应的 NAT 规则就比较简单了。我们还以 NAPT 的三个分类为例，来具体解读一下。</p><h3><strong>SNAT</strong></h3><p>根据刚才内容，我们知道，SNAT 需要在 nat 表的 POSTROUTING 链中配置。我们常用两种方式来配置它。</p><p>第一种方法，是为一个子网统一配置 SNAT，并由 Linux 选择默认的出口 IP。这实际上就是经常说的 MASQUERADE：</p><pre><code>$ iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -j MASQUERADE\n</code></pre><p>第二种方法，是为具体的 IP 地址配置 SNAT，并指定转换后的源地址：</p><pre><code>$ iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100\n</code></pre><h3><strong>DNAT</strong></h3><p>再来看DNAT，显然，DNAT 需要在 nat 表的 PREROUTING 或者 OUTPUT 链中配置，其中， PREROUTING 链更常用一些（因为它还可以用于转发的包）。</p><pre><code>$ iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2\n</code></pre><h3><strong>双向地址转换</strong></h3><p>双向地址转换，就是同时添加 SNAT 和 DNAT 规则，为公网 IP 和内网 IP 实现一对一的映射关系，即：</p><pre><code>$ iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100\n$ iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2\n</code></pre><p>在使用 iptables 配置 NAT 规则时，Linux 需要转发来自其他 IP 的网络包，所以你千万不要忘记开启 Linux 的 IP 转发功能。</p><p>你可以执行下面的命令，查看这一功能是否开启。如果输出的结果是 1，就表示已经开启了 IP 转发：</p><pre><code>$ sysctl net.ipv4.ip_forward\nnet.ipv4.ip_forward = 1\n</code></pre><p>如果还没开启，你可以执行下面的命令，手动开启：</p><pre><code>$ sysctl -w net.ipv4.ip_forward=1\nnet.ipv4.ip_forward = 1\n</code></pre><p>当然，为了避免重启后配置丢失，不要忘记将配置写入 /etc/sysctl.conf 文件中：</p><pre><code>$ cat /etc/sysctl.conf | grep ip_forward\nnet.ipv4.ip_forward=1\n</code></pre><p>讲了这么多的原理，那当碰到 NAT 的性能问题时，又该怎么办呢？结合我们今天学过的 NAT 原理，你先自己想想，动手试试，下节课我们继续“分解”。</p><h2>小结</h2><p>今天，我们一起学习了 Linux 网络地址转换 NAT 的原理。</p><p>NAT 技术能够重写 IP 数据包的源 IP 或目的 IP，所以普遍用来解决公网 IP 地址短缺的问题。它可以让网络中的多台主机，通过共享同一个公网 IP 地址，来访问外网资源。同时，由于 NAT 屏蔽了内网网络，也为局域网中机器起到安全隔离的作用。</p><p>Linux 中的NAT ，基于内核的连接跟踪模块实现。所以，它维护每个连接状态的同时，也会带来很高的性能成本。具体 NAT 性能问题的分析方法，我们将在下节课继续学习。</p><h2>思考</h2><p>最后，给你留一个思考题。MASQUERADE 是最常用的一种 SNAT 规则，常用来为多个内网 IP 地址提供共享的出口 IP。</p><p>假设现在有一台 Linux 服务器，使用了 MASQUERADE 的方式，为内网的所有 IP 提供出口访问功能。那么，</p><ul>\n<li>\n<p>当多个内网 IP 地址的端口号相同时，MASQUERADE 还可以正常工作吗？</p>\n</li>\n<li>\n<p>如果内网 IP 地址数量或请求数比较多，这种方式有没有什么隐患呢？</p>\n</li>\n</ul><p>欢迎在留言区和我讨论，也欢迎你把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","comments":[{"had_liked":false,"id":77823,"user_name":"青石","can_delete":false,"product_type":"c1","uid":1215531,"ip_address":"","ucode":"B0056AD6453322","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/2b/3ab96998.jpg","comment_is_top":false,"comment_ctime":1553004666,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"267840977018","product_id":100020901,"comment_content":"问题1：Linux的NAT时给予内核的连接跟踪模块实现，保留了源IP、源端口、目的IP、目的端口之间的关系，多个内网IP地址的端口相同，但是IP不同，再nf_conntrack中对应不同的记录，所以MASQUERADE可以正常工作。<br><br>问题2：NAT方式所有流量都要经过NAT服务器，所以NAT服务器本身的软中断导致CPU负载、网络流量、文件句柄、端口号上限、nf_conntrack table full都可能是性能瓶颈。","like_count":63,"discussions":[{"author":{"id":1197912,"avatar":"https://static001.geekbang.org/account/avatar/00/12/47/58/9dfd822d.jpg","nickname":"爱吃鱼的猫","note":"","ucode":"F08E4D3F0C64B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364664,"discussion_content":"内存也影响","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617549045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2172434,"avatar":"https://static001.geekbang.org/account/avatar/00/21/26/12/b10dfa8b.jpg","nickname":"坚信光明就在远方！","note":"","ucode":"1723C129AB5871","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1197912,"avatar":"https://static001.geekbang.org/account/avatar/00/12/47/58/9dfd822d.jpg","nickname":"爱吃鱼的猫","note":"","ucode":"F08E4D3F0C64B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589956,"discussion_content":"内存不影响，nat网关只起转发，又不会解析数据包，拿出数据！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665410838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":364664,"ip_address":"北京"},"score":589956,"extra":""}]},{"author":{"id":1086319,"avatar":"https://static001.geekbang.org/account/avatar/00/10/93/6f/5ab3da19.jpg","nickname":"慕容","note":"","ucode":"BEE694935853E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283702,"discussion_content":"典型的课代表啊，666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592350315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70275,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1551062680,"is_pvip":false,"replies":[{"id":"25352","content":"👍两个回答都是正确的，第二个还不完整，可以再考虑深入一点（提示：还有其他很多内核资源限制）","user_name":"作者回复","comment_id":70275,"uid":"1001282","ip_address":"","utype":1,"ctime":1551194902,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"40205768344","product_id":100020901,"comment_content":"[D41打卡]<br>在已有的项目经验中,还未涉及到过NAT.<br>倒是本地的虚拟机环境下,或者路由器上,会看到nat相关选项.<br><br>问题一:当多个内网 IP 地址的端口号相同时，MASQUERADE 还可以正常工作吗？<br>我觉得是可以正常工作的,要不然就不会允许设置ip地址段了.😁[纯属猜测哈]<br>在路由器上做端口映射时,一个外网端口只能对应一个内网的IP.<br>但是反方向,nat在转换源地址时,应该会记录原来的连接信息吧.要不然收到包该给谁发呢.<br><br>问题二:如果内网 IP 地址数量或请求数比较多，这种方式有没有什么隐患呢？<br>根据之前的经验,在请求数过多时,会导致CPU软中断上升.<br>再谷歌了下,有看到说:<br>iptables的conntrack表满了导致访问网站很慢.[https:&#47;&#47;my.oschina.net&#47;jean&#47;blog&#47;189935]<br>    ```kernel 用 ip_conntrack 模块来记录 iptables 网络包的状态，并保存到 table 里（这个 table 在内存里），如果网络状况繁忙，比如高连接，高并发连接等会导致逐步占用这个 table 可用空间。```<br><br>优化Linux NAT网关[https:&#47;&#47;tech.youzan.com&#47;linux_nat&#47;]<br>    ```net.netfilter.nfconntrackbuckets 这个参数，默认有点小，连接数多了以后，势必造成“哈希冲突”增加，“哈希处理”性能下降。（ 是这样吗？）```<br><br>","like_count":10,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440536,"discussion_content":"👍两个回答都是正确的，第二个还不完整，可以再考虑深入一点（提示：还有其他很多内核资源限制）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551194902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543177,"discussion_content":"我在想如果一个公网共享IP,  那这个IP 的Port 都用完了呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640997175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205253,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","nickname":"我来也","note":"","ucode":"773D6104F56767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543181,"discussion_content":"连接是用不完的，但监听的端口确实只有6w+个，这个绕不过去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640998305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":543177,"ip_address":""},"score":543181,"extra":""}]}]},{"had_liked":false,"id":70451,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1551100788,"is_pvip":false,"replies":[{"id":"25358","content":"嗯，有深度的留言还是前面多一些","user_name":"作者回复","comment_id":70451,"uid":"1001282","ip_address":"","utype":1,"ctime":1551195139,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"27320904564","product_id":100020901,"comment_content":"大伙儿都掉队了吗？有深度的问题留言越来越少，有价值的问题回答也少了。","like_count":6,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440641,"discussion_content":"嗯，有深度的留言还是前面多一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551195139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131308,"user_name":"Geek_b04b12","can_delete":false,"product_type":"c1","uid":1112139,"ip_address":"","ucode":"F8705A21FCDF09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","comment_is_top":false,"comment_ctime":1567699351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23042535831","product_id":100020901,"comment_content":"1）iptalbes的三个表<br><br>filter 这个表主要用于过滤包的，是系统预设的表，这个表也是阿铭用的最多的。内建三个链INPUT、OUTPUT以及FORWARD。INPUT作用于进入本机的包；OUTPUT作用于本机送出的包；FORWARD作用于那些跟本机无关的包。<br><br>nat 主要用处是网络地址转换，也有三个链。PREROUTING 链的作用是在包刚刚到达防火墙时改变它的目的地址，如果需要的话。OUTPUT链改变本地产生的包的目的地址。POSTROUTING链在包就要离开防火墙之前改变其源地址。该表阿铭用的不多，但有时候会用到。<br><br>mangle 这个表主要是用于给数据包打标记，然后根据标记去操作哪些包。这个表几乎不怎么用。除非你想成为一个高级网络工程师，否则你就没有必要花费很多心思在它上面。","like_count":6},{"had_liked":false,"id":131310,"user_name":"Geek_b04b12","can_delete":false,"product_type":"c1","uid":1112139,"ip_address":"","ucode":"F8705A21FCDF09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","comment_is_top":false,"comment_ctime":1567699397,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18747568581","product_id":100020901,"comment_content":"http:&#47;&#47;www.apelearn.com&#47;study_v2&#47;chapter16.html#id3  这个链接是我初次接触linux的时候学习的课程，对小白蛮友好","like_count":5,"discussions":[{"author":{"id":1238051,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/23/ac13d916.jpg","nickname":"圆哥哥呐丶","note":"","ucode":"8E56E3E68A3836","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557913,"discussion_content":"蛮不错的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648022806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70759,"user_name":"李逍遥","can_delete":false,"product_type":"c1","uid":1109750,"ip_address":"","ucode":"DB74823527E203","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/xzHDjCSFicNY3MUMECtNz6sM8yDJhBoyGk5IRoOtUat6ZIkGzxjqEqwqKYWMD3GjehScKvMjicGOGDog5FF18oyg/132","comment_is_top":false,"comment_ctime":1551176562,"is_pvip":false,"replies":[{"id":"25365","content":"不是的，内核有连接跟踪，知道每个请求的来源和目的","user_name":"作者回复","comment_id":70759,"uid":"1001282","ip_address":"","utype":1,"ctime":1551195623,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"14436078450","product_id":100020901,"comment_content":"有个疑问， 看了访问baidu.com的例子，发包和收报都是需要NAT的，那是不是只配置SNAT或DNAT，就不能正常访问外网或被访问了呢？","like_count":3,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440815,"discussion_content":"不是的，内核有连接跟踪，知道每个请求的来源和目的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551195623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77375,"user_name":"honnkyou","can_delete":false,"product_type":"c1","uid":1026608,"ip_address":"","ucode":"FD5EC4120EE803","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/30/acc91f01.jpg","comment_is_top":false,"comment_ctime":1552914671,"is_pvip":false,"replies":[{"id":"28214","content":"嗯嗯，可以的，OUTPUT用于从本机发出的包","user_name":"作者回复","comment_id":77375,"uid":"1001282","ip_address":"","utype":1,"ctime":1552921909,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10142849263","product_id":100020901,"comment_content":"&quot;再来看 DNAT，显然，DNAT 需要在 nat 表的 PREROUTING 或者 OUTPUT 链中配置，其中， PREROUTING 链更常用一些（因为它还可以用于转发的包）。&quot;<br>DNAT不是转换到达包的目的地址吗？也可以在OUTPUT链中配置吗？","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443704,"discussion_content":"嗯嗯，可以的，OUTPUT用于从本机发出的包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552921909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71703,"user_name":"曾经的十字镐","can_delete":false,"product_type":"c1","uid":1083415,"ip_address":"","ucode":"EC9297BEC3085F","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/17/68aa48cb.jpg","comment_is_top":false,"comment_ctime":1551418419,"is_pvip":false,"replies":[{"id":"26313","content":"并不是这样的，通过NAT还是可以访问内部服务的，如果服务本身设计有问题，还是一样受到攻击","user_name":"作者回复","comment_id":71703,"uid":"1001282","ip_address":"","utype":1,"ctime":1551704446,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10141353011","product_id":100020901,"comment_content":"我们有部分业务需要向外同步数据，但又必须保证内网服务器的安全，所以我就使用了nat网络，单纯知道外网ip是无法攻击的","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441284,"discussion_content":"并不是这样的，通过NAT还是可以访问内部服务的，如果服务本身设计有问题，还是一样受到攻击","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1551704446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71367,"user_name":"wwj","can_delete":false,"product_type":"c1","uid":1053787,"ip_address":"","ucode":"B98AE5F5D85A87","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLzvaL724GwtzZ5mcldUnlicicSlI8BXL9icRZbUOB10qjRMlmog7UTvwxSBHXagnPGGR1BYdjWcGGSg/132","comment_is_top":false,"comment_ctime":1551328988,"is_pvip":false,"replies":[{"id":"26300","content":"主要是管理方式的区别，比如静态肯定比动态管理要简单的多；跟连接跟踪没有直接关系（只是Linux使用了连接跟踪）。","user_name":"作者回复","comment_id":71367,"uid":"1001282","ip_address":"","utype":1,"ctime":1551702767,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10141263580","product_id":100020901,"comment_content":"nat的三种类型有什么本质的区别、和链接追踪的联系有是什么","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441128,"discussion_content":"主要是管理方式的区别，比如静态肯定比动态管理要简单的多；跟连接跟踪没有直接关系（只是Linux使用了连接跟踪）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551702767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350662,"user_name":"Ethan","can_delete":false,"product_type":"c1","uid":1276373,"ip_address":"","ucode":"016F1DEBA895B8","user_header":"https://static001.geekbang.org/account/avatar/00/13/79/d5/4a7971fc.jpg","comment_is_top":false,"comment_ctime":1657078627,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"5952045923","product_id":100020901,"comment_content":"老师有两个问题，感觉需要重新讨论下：<br><br>第一个关于 SNAT 和 DNAT 的解释：<br><br>原文中说：<br><br>SNAT 主要用于，多个内网 IP 共享同一个公网 IP ，来访问外网资源的场景。<br>DNAT 主要通过公网 IP 的不同端口号，来访问内网的多种服务，同时会隐藏后端服务器的真实 IP 地址。<br><br>这里给人的感觉好像是 SNAT 和 DNAT 是两个不同的应用场景。但我理解，并不是这样。<br>首先内网的服务器想和外网通信，不可能是单方向的通信，必定涉及到一来一回。<br><br>如果单单做 SNAT，这里仅仅解决的是发送数据包时，把源地址进行替换和外网通信。<br>但外网想和内网的服务器通信，还涉及到回包的过程，将外网的目的地址（也就是发送的源地址）进行转换，也就是 DNAT。<br><br>所以通过 SNAT 和 DNAT 结合起来才能实现内网访问外网，以及隐藏后端服务器地址的作用。<br><br><br>第二个是关于一个同学的提问：<br><br>提问如下：<br>有个疑问， 看了访问baidu.com的例子，发包和收报都是需要NAT的，那是不是只配置SNAT或DNAT，就不能正常访问外网或被访问了呢？<br>老师回答：<br>作者回复: 不是的，内核有连接跟踪，知道每个请求的来源和目的<br><br>我和老师的看法不一样，我认为这个同学说的是对的，如果仅仅配置 SNAT 或者 DNAT 是无法通信的，原因就在于上面的解释，通信是一来一回的过程。<br>除非，我们隐含 SNAT 包含了 DNAT 的步骤，或者 DNAT 包含了 SNAT 的步骤。<br><br>并且这里做了实验验证：<br>使用 docker 以 run 的形式起了一个 nginx 容易，并暴露 80 端口给到外网。<br>这时外面是可以和 nginx 正常交互的。<br><br>并且查看 iptables 中 nat 表的，PREROUTING 和 POSTROUTING 链。<br>可以找到 PREROUTING 做了 DNAT。<br>POSTROUTING 做了MASQUERADE，就是动态的 snat.<br><br>当我手动把 DNAT 删除，光留下 snat 时，这时是无法正常通信的。<br>在容器内抓包后发现，流量根本进入不到容器内。","like_count":0},{"had_liked":false,"id":305729,"user_name":"ghostwritten","can_delete":false,"product_type":"c1","uid":1308196,"ip_address":"","ucode":"AE512F2E24A1A0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f6/24/5a9277f1.jpg","comment_is_top":false,"comment_ctime":1628134615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5923101911","product_id":100020901,"comment_content":"1. NAT 可以分为三类：<br>静态 NAT，即内网 IP 与公网 IP 是一对一的永久映射关系；<br>动态 NAT，即内网 IP 从公网 IP 池中，动态选择一个进行映射；<br>网络地址端口转换 NAPT（Network Address and Port Translation），即把内网 IP 映射到公网 IP 的不同端口上，让多个内网 IP 可以共享同一个公网 IP 地址。<br><br>2.  NAPT 分为三类：<br>第一类是源地址转换 SNAT，即目的地址不变，只替换源 IP 或源端口。SNAT 主要用于，多个内网 IP 共享同一个公网 IP来访问外网资源的场景。<br>第二类是目的地址转换 DNAT，即源 IP 保持不变，只替换目的 IP 或者目的端口。DNAT 主要通过公网 IP 的不同端口号，来访问内网的多种服务，同时会隐藏后端服务器的真实 IP 地址。<br>第三类是双向地址转换，即同时使用 SNAT 和 DNAT。当接收到网络包时，执行 DNAT，把目的 IP 转换为内网 IP；而在发送网络包时，执行 SNAT，把源 IP 替换为外部 IP。<br><br>3. nat 表内置了三个链<br>PREROUTING`，用于路由判断前所执行的规则，比如，对接收到的数据包进行 DNAT；<br>`POSTROUTING`，用于路由判断后所执行的规则，比如，对发送或转发的数据包进行 SNAT 或 MASQUERADE。<br> `OUTPUT`，类似于 PREROUTING，但只处理从本机发送出去的包。<br><br>4. SNAT<br>iptables -t nat -A POSTROUTING -s 192.168.0.0&#47;16 -j MASQUERADE<br>iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100<br><br>5. DNAT<br>iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2<br><br>6. 双向地址转换<br>$ iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100<br>$ iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2<br><br>","like_count":1},{"had_liked":false,"id":70902,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1551226152,"is_pvip":false,"replies":[{"id":"25712","content":"嗯","user_name":"作者回复","comment_id":70902,"uid":"1001282","ip_address":"","utype":1,"ctime":1551399293,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5846193448","product_id":100020901,"comment_content":"打卡day43<br>工作场景没用到nat，基本都是基于4层或7层的反代<br>针对第一个问题，是可以的，第二个问题不可以，我认为是有连接追踪表，文件数量，端口数量的限制","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440893,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551399293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70454,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1551101485,"is_pvip":false,"replies":[{"id":"25359","content":"👍","user_name":"作者回复","comment_id":70454,"uid":"1001282","ip_address":"","utype":1,"ctime":1551195147,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5846068781","product_id":100020901,"comment_content":"第一个问题：是可以正常工作的，是由（源地址：源端口   目的地址：目的端口 ）来标记的<br>第二个问题：会把这台linux主机撑爆了","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440642,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551195147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70282,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1551063817,"is_pvip":false,"replies":[{"id":"25353","content":"VM里面可以配置固定IP，或者也可以换其他模式","user_name":"作者回复","comment_id":70282,"uid":"1001282","ip_address":"","utype":1,"ctime":1551194932,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5846031113","product_id":100020901,"comment_content":"vmware中虚拟机网络选择NAT模式后，IP地址经常变动，有什么方法解决么？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440542,"discussion_content":"VM里面可以配置固定IP，或者也可以换其他模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551194932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296482,"user_name":"CHN-Lee-玉米","can_delete":false,"product_type":"c1","uid":2068721,"ip_address":"","ucode":"0A53080F38F229","user_header":"https://static001.geekbang.org/account/avatar/00/1f/90/f1/7f2b5e16.jpg","comment_is_top":false,"comment_ctime":1622994754,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622994754","product_id":100020901,"comment_content":"曾经遇过内网大量机器通过一个公网IP地址访问另一个公网IP，导致端口号用满的情况","like_count":0},{"had_liked":false,"id":271449,"user_name":"Wade_阿伟","can_delete":false,"product_type":"c1","uid":1688629,"ip_address":"","ucode":"5AE2E846A13443","user_header":"https://static001.geekbang.org/account/avatar/00/19/c4/35/2cc10d43.jpg","comment_is_top":false,"comment_ctime":1609645211,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609645211","product_id":100020901,"comment_content":"对于第一个问题：当多个内网 IP 地址的端口号相同时，MASQUERADE 还可以正常工作吗？答案是肯定可以工作的。因为netfilter_conntrack中记录的是五元组信息，包括源端口、源Ip、目的端口、目的ip等信息。即便源端口相等，也能组成不同的连接记录。<br>第二个问题：如果内网 IP 地址数量或请求数比较多，会导致服务器整体的性能下降，包括导致cpu的软中断过多，nf_conntrack连接跟踪表中记录过多，导致跟踪表溢出。导致服务器table over full，从而导致服务器出现响应延时并丢包等问题。","like_count":0},{"had_liked":false,"id":264902,"user_name":"兵临城下","can_delete":false,"product_type":"c1","uid":1316592,"ip_address":"","ucode":"88294A59484F17","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/f0/3051cc84.jpg","comment_is_top":false,"comment_ctime":1606703988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606703988","product_id":100020901,"comment_content":"老师，我想问一下。系统使用的，阿里云SLB（负载）+ECS，ECS上设置 iptables 禁用某个IP，如何能启作用？默认是内网的SLB的IP","like_count":0},{"had_liked":false,"id":175412,"user_name":"HunterYuan","can_delete":false,"product_type":"c1","uid":1015256,"ip_address":"","ucode":"F8900C33D29AA7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/d8/d7c77764.jpg","comment_is_top":false,"comment_ctime":1580712892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580712892","product_id":100020901,"comment_content":"对于问题1：可以工作，因为NAT转换是通过状态连接表的，状态连接表中会记录正向数据的状态的五元组和返现数据的五元组，通过查找此状态连接进行逆向转换（例如SNAT的反向转换），建立一一对应的关系。有了这些表示就可以进行完全转换，对于不同内网IP的相同端口数据包，进行MASQUERADE时，会随机选择一个出接口的IP，若此时不同内网IP访问的目的IP通过路由，都是从MASQUERADE设备的同一个口出去，那么他们做SNAT时会使用相同的IP，为了达到一一对应区别不同的内网IP，此时选择一个未被使用的端口进行SAPT，这样反向的数据访问相同的外网IP，通过不同目的端口，找到相应内网IP。<br>对于问题2，若是请求数量比较多，对于问题一中需要进行SAPT的被占用端口数将是其瓶颈，还需要考虑状态连接的总数最大值，是否为瓶颈。<br>对于两个问题，这是我的理解，若有错误，希望老师指正，不要因为我的错误回答，误导队友的理解。谢谢老师，不吝赐教。","like_count":0},{"had_liked":false,"id":131313,"user_name":"Geek_b04b12","can_delete":false,"product_type":"c1","uid":1112139,"ip_address":"","ucode":"F8705A21FCDF09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","comment_is_top":false,"comment_ctime":1567700193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567700193","product_id":100020901,"comment_content":"以前在学习linux的时候，自己搭建过linux的下的nginx的负载均衡， 内网的处理后的结果转发，记得好想负载均衡和高可用，具体哪一个忘记了，工作的时候用过一次，将内网服务器处理请求后转发给那个可以上外网的服务器，然后返回给外网。。。本节有有好几个陌生的名词。。","like_count":0},{"had_liked":false,"id":90535,"user_name":"陳先森","can_delete":false,"product_type":"c1","uid":1229006,"ip_address":"","ucode":"0F7AC617E3FE90","user_header":"https://static001.geekbang.org/account/avatar/00/12/c0/ce/fc41ad5e.jpg","comment_is_top":false,"comment_ctime":1556549744,"is_pvip":false,"replies":[{"id":"32529","content":"👍","user_name":"作者回复","comment_id":90535,"uid":"1001282","ip_address":"","utype":1,"ctime":1556634069,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"1556549744","product_id":100020901,"comment_content":"第一个问题是可以的，外网端口映射内网端口是一对多。就跟之前老师留言的一样，服务端对端口没有65535个端口限制但是客户端有。<br>第二个问题会有隐患，请求数量多的时候会导致软路由服务器的资源和性能下降，甚至延时和超时都有可能以至于达到系统资源的瓶颈系统的软连接数达到瓶颈或者无法正常工作","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448557,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556634069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85665,"user_name":"xierongfei","can_delete":false,"product_type":"c1","uid":1298910,"ip_address":"","ucode":"2B4F061FA93A76","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mnBC29lF1RibHdwkZdPdGM9QRAl7Y7Aicad8vpmIEialjia93IEVSAHibkKdwHwfZr6qedVHiafKUD8Yk1v2eiaibj8l0w/132","comment_is_top":false,"comment_ctime":1555167739,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1555167739","product_id":100020901,"comment_content":"问题1：<br>可以, MASQUERADE 主要用内部多个IP公用一个公网访问访问外部地址，发起连接的是本机的一个随机端口，并且是用在公网IP不固定情况下，比如拨号场景；<br>问题2：<br> 会有性能问题，比如访问缓慢。客户端过多，并且连接过多，iptables conntrack表会满，并发生空间溢出","like_count":0},{"had_liked":false,"id":84136,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1554791733,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554791733","product_id":100020901,"comment_content":"DAY41，打卡","like_count":0},{"had_liked":false,"id":70916,"user_name":"小庄.Jerry","can_delete":false,"product_type":"c1","uid":1222795,"ip_address":"","ucode":"72EECA77AAA1CA","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/8b/c5c234b6.jpg","comment_is_top":false,"comment_ctime":1551227930,"is_pvip":true,"replies":[{"id":"26298","content":"tcp_tw_recycle本身的实现就有问题，一定要禁止掉，并且在新的内核（4.1以后）里也被直接删除了","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551702476,"ip_address":"","comment_id":70916,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551227930","product_id":100020901,"comment_content":"最近我们的一个客户，遇到问题2的问题了。该公司很多用户同时加入我们的会议系统，一般来说，客户会访问我们部署在当地数据中心的服务器，结果很多用户访问到我们数据美国数据中心的服务器了，导致糟糕的体验。<br>我们的网络team给的解决方案:禁用了我们服务器的tcp_tw_recycle。<br>看了man tcp的介绍，对于NAT网络中，要求禁掉tcp_tw_recycle。但是对于个中的原理还不是很明白，希望老师可以帮忙解释下","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440898,"discussion_content":"tcp_tw_recycle本身的实现就有问题，一定要禁止掉，并且在新的内核（4.1以后）里也被直接删除了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551702476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70864,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1551196949,"is_pvip":false,"replies":[{"id":"25707","content":"👍","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1551399061,"ip_address":"","comment_id":70864,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551196949","product_id":100020901,"comment_content":"终于搞明白了iptables原理和写法","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440871,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551399061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70832,"user_name":"唯美","can_delete":false,"product_type":"c1","uid":1263430,"ip_address":"","ucode":"9186A5B99DFBCA","user_header":"https://static001.geekbang.org/account/avatar/00/13/47/46/61f16147.jpg","comment_is_top":false,"comment_ctime":1551191896,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551191896","product_id":100020901,"comment_content":"项目中还没有用到，学习中","like_count":0},{"had_liked":false,"id":70650,"user_name":"松花皮蛋me","can_delete":false,"product_type":"c1","uid":1000054,"ip_address":"","ucode":"B0846CEEF6B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/76/256bbd43.jpg","comment_is_top":false,"comment_ctime":1551156914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1551156914","product_id":100020901,"comment_content":"iptables性能还是有问题的","like_count":0}]}