{"id":91255,"title":"48 | 性能调优示例","content":"<h1>课件及源代码地址</h1><p><a href=\"https://gitee.com/geektime-geekbang/go_learning\">https://gitee.com/geektime-geekbang/go_learning</a></p><h2>书目推荐</h2><p><a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F1ycmk3uob0ryw\">《计算机程序的构造和解释》</a></p>","comments":[{"had_liked":false,"id":112825,"user_name":"Geek_b3928a","can_delete":false,"product_type":"c3","uid":1507428,"ip_address":"","ucode":"DB75EC0C29BAE1","user_header":"","comment_is_top":false,"comment_ctime":1562829261,"is_pvip":false,"replies":[{"id":41240,"content":"slice其实是一个包含了指向其数据连续存储空间指针的结构体，所以，即便你返回的不是指向slice的指针，结构体实例被复制了，其中里面的指向数据存储空间的指针也就被复制到新的结构体实例中，也会指向同一块数据存储空间。\n因此，由于大量数据没有被复制，复制仅发生在slice的结构上开销不大，两种方式对性能影响差别不大。","user_name":"作者回复","user_name_real":"ChaoCai2010","uid":1008262,"ctime":1562938737,"ip_address":"","comment_id":112825,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"老师，有个问题困扰了很久，向你请教，我在用golang开发后端业务是经常操作数据库，查询多条数据放在函数中创建好的结构体对象，通常是一个结构体的切片，如［］user｛｝，那么我需要返回这个结构体切片，这个时候函数应该返回带指针类型的＊［］user｛｝还是不带指针类型的，哪种方式对性能有很大的影响？貌似编译器都会将他们分配到堆上，请教了？","like_count":7,"discussions":[{"author":{"id":1008262,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/86/632ad029.jpg","nickname":"蔡超","note":"","ucode":"4C281BBF511238","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457922,"discussion_content":"slice其实是一个包含了指向其数据连续存储空间指针的结构体，所以，即便你返回的不是指向slice的指针，结构体实例被复制了，其中里面的指向数据存储空间的指针也就被复制到新的结构体实例中，也会指向同一块数据存储空间。\n因此，由于大量数据没有被复制，复制仅发生在slice的结构上开销不大，两种方式对性能影响差别不大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562938737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183663,"user_name":"CcczzZ","can_delete":false,"product_type":"c3","uid":1019568,"ip_address":"","ucode":"5F46DA5053D2BB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/b0/ef201991.jpg","comment_is_top":false,"comment_ctime":1583110769,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"json和字符串连接的优化，学习了","like_count":2},{"had_liked":false,"id":348292,"user_name":"早日退休","can_delete":false,"product_type":"c3","uid":2979860,"ip_address":"","ucode":"CC25E16FEE8189","user_header":"https://static001.geekbang.org/account/avatar/00/2d/78/14/cac6eab8.jpg","comment_is_top":false,"comment_ctime":1654941796,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"给老师点个赞，很有用","like_count":0},{"had_liked":false,"id":322980,"user_name":"文武木子","can_delete":false,"product_type":"c3","uid":1015986,"ip_address":"","ucode":"348752BDECD65F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/b2/2e9f442d.jpg","comment_is_top":false,"comment_ctime":1637678660,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":2,"product_id":100024001,"comment_content":"性能优化这块还是挺有用的","like_count":0},{"had_liked":false,"id":288187,"user_name":"escray","can_delete":false,"product_type":"c3","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1618353320,"is_pvip":true,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"性能调优还是挺有意思的，如果是在业务系统中，能看到优化前后的对比，很有成就感。两个调优点，一个是使用了更高效的 easyjson 类库，另一个是使用 string.Builder。\n\n找到系统或程序的瓶颈，以及知道如何调优是需要一定的经验积累的。前者可以通过性能分析工具完成，后者可能需要多了解一些 Go 语言的底层实现机制，以及 Go 相关开发生态。\n\n推荐 Dave Cheney 的 High Performance Go Workshop https:&#47;&#47;dave.cheney.net&#47;high-performance-go-workshop&#47;dotgo-paris.html#overview （我也还没看）\n\n不知道是不是有更好的性能调优工具？不需要每次修改代码然后以命令行的方式运行，另外，最好能够自动比较调优前后的性能数据。我猜 GoLand 也许可以。","like_count":0,"discussions":[{"author":{"id":1320510,"avatar":"https://static001.geekbang.org/account/avatar/00/14/26/3e/110ce115.jpg","nickname":"会飞的猪","note":"","ucode":"9B1C9715CBDA5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568925,"discussion_content":"插眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651252741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127380,"user_name":"虢國技醬","can_delete":false,"product_type":"c3","uid":1056807,"ip_address":"","ucode":"5A192262AA037E","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/27/a6932fbe.jpg","comment_is_top":false,"comment_ctime":1566673933,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"实用","like_count":0},{"had_liked":false,"id":91170,"user_name":"harry lee","can_delete":false,"product_type":"c3","uid":1448124,"ip_address":"","ucode":"EB731A4C05BFCE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ8JqUCcs7ibh8mYvB56mT3zs0w1tjNsia6D0AYzY0ia01RGA7M5PYyufTYhXrsvo7TMQbYdo4tXAYHA/132","comment_is_top":false,"comment_ctime":1556887424,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"通过课程学到不少知识，尤其是性能调优这块","like_count":0},{"had_liked":false,"id":88963,"user_name":"Vv张小生","can_delete":false,"product_type":"c3","uid":1449456,"ip_address":"","ucode":"AEB8939DBEDC73","user_header":"https://static001.geekbang.org/account/avatar/00/16/1d/f0/7f882c4c.jpg","comment_is_top":false,"comment_ctime":1556033862,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"来打卡。","like_count":0},{"had_liked":false,"id":88703,"user_name":"xueyuan","can_delete":false,"product_type":"c3","uid":1128121,"ip_address":"","ucode":"3DE20A723EBAFE","user_header":"https://static001.geekbang.org/account/avatar/00/11/36/b9/3b28f67c.jpg","comment_is_top":false,"comment_ctime":1555983677,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100024001,"comment_content":"学习了。","like_count":0}]}