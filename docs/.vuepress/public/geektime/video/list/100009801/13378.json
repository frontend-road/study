{"id":13378,"title":"50 | Android MVP 的 Kotlin 代码&结课测试","content":"<p>你好，我是张涛。</p><p>到这里，《快速上手 Kotlin 开发》这门课程就全部结束了。我给你准备了一个结课小测试，来帮助你检验自己的学习效果。</p><p>这套测试题共有 20 道题目，13 道单选题，7道多选题，满分 100 分，系统自动评分。</p><p>还等什么，点击下面按钮开始测试吧！</p><p><a href=\"http://time.geekbang.org/quiz/intro?act_id=111&exam_id=238\"><img src=\"https://static001.geekbang.org/resource/image/28/a4/28d1be62669b4f3cc01c36466bf811a4.png?wh=1142*201\" alt=\"\"></a></p><p>另外，一路走来，我非常想听听你对我和这个课程的看法，把你的反馈和建议写下来吧。</p><p><a href=\"https://jinshuju.net/f/lxI1xQ\"><img src=\"https://static001.geekbang.org/resource/image/12/77/120483a4a8c7d654f7e709e54afb9877.png?wh=1142*201\" alt=\"\"></a></p>","comments":[{"had_liked":false,"id":99360,"user_name":"遥远的救世主","can_delete":false,"product_type":"c3","uid":1181334,"ip_address":"","ucode":"4CC436479CAA21","user_header":"https://static001.geekbang.org/account/avatar/00/12/06/96/4273bb09.jpg","comment_is_top":false,"comment_ctime":1559199430,"is_pvip":false,"replies":[{"id":42503,"content":"额，主要是这堂课的定位是面向初级使用者的，毕竟一年多以前录的，那时候还很多人不会呢","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1563807371,"ip_address":"","comment_id":99360,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"这个我第一个从头认真学完（除了协程那一部分）的课程，感谢张哥的分享，让我们也有了这么多的收获，限于篇幅视频中有些东西无法提及，不过技术人不就是要自学能力要强一点吗，要是后续能讲一个完整的项目，用Kotlin+Rxjava2+Retrofit+RxBus....开发出一个高质量的就更好了。对于纯Kotlin项目，如何取舍一些第三方库，路漫漫其修远兮，吾将上下而求索！完结，撒花。","like_count":2,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452075,"discussion_content":"额，主要是这堂课的定位是面向初级使用者的，毕竟一年多以前录的，那时候还很多人不会呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563807371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77711,"user_name":"Geek__e1cb198fc23a","can_delete":false,"product_type":"c3","uid":1464583,"ip_address":"","ucode":"D072C5247C0489","user_header":"","comment_is_top":false,"comment_ctime":1552985810,"is_pvip":false,"replies":[{"id":28993,"content":"嗯，对的。👍","user_name":"作者回复","user_name_real":"kymjs张涛","uid":1009146,"ctime":1553513881,"ip_address":"","comment_id":77711,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100009801,"comment_content":"张哥，问下几个问题，如果可以通过构造将对象传给 BaseActivity 。\n\n`open class BaseActivity&lt;T&gt;(val clazz: Class&lt;T&gt;) : AppCompatActivity()` \n那么这里为什么不直接改成传一个 Presenter 对象过去呢？\n`open class BaseActivity&lt;P&gt;(val p: P) : AppCompatActivity()`\n\n\n\n————————\n```\n    inline fun &lt;reified T : IPresenter&gt; getPresenter(): T {\n        return T::class.java.newInstance()\n    }\n```\n这样个函数是会在每次调用`getPresenter()`的时候都会产生一个新的对象的吧？这样是不是不太合适。","like_count":1,"discussions":[{"author":{"id":1009146,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/fa/2b4d2f26.jpg","nickname":"kymjs张涛","note":"","ucode":"EFE7AF4C0D4FE8","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443818,"discussion_content":"嗯，对的。👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553513881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1177498,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLBemRWsNxJtibWvG31wQ7LN0DDYSz1EdDLIDSAEI7reKprvgD8ybxr0zqoFmwicr6lX2mYA0n5j8PQ/132","nickname":"HA","note":"","ucode":"8649DA5CD6D7DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592660,"discussion_content":"第一种使用val presenter by lazy(clazz::newInstance) 使用by lazy就挺好的，第二种写法不推荐。\n\n还有inline operator fun &lt;reified T&gt; invoke() = BaseActivity(T::class.java) 这种真泛型重载构造函数放这里感觉意义不大。\n在BaseActivity放点startActivity相关的函数倒是可以的：inline fun &lt;reified T&gt; startActivity(context: Context, block: Intent.() -&gt; Unit)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667568333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}