{"id":12959,"title":"01 | 工作区和GOPATH","content":"<blockquote>\n<p>这门课中Go语言的代码比较多，建议你配合文章收听音频。</p>\n</blockquote><p>你好，我是郝林。从今天开始，我将和你一起梳理Go语言的整个知识体系。</p><p>在过去的几年里，我与广大爱好者一起见证了Go语言的崛起。</p><p>从Go 1.5版本的自举（即用Go语言编写程序来实现Go语言自身），到Go 1.7版本的极速GC（也称垃圾回收器），再到2018年2月发布的Go 1.10版本对其自带工具的全面升级，以及可预见的后续版本关键特性（比如用来做程序依赖管理的<code>go mod</code>命令），这一切都令我们欢欣鼓舞。Go语言在一步步走向辉煌的同时，显然已经成为软件工程师们最喜爱的编程语言之一。</p><p>我开办这个专栏的主要目的，是要与你一起探索Go语言的奥秘，并帮助你在学习和实践的过程中获取更多。</p><p>我假设本专栏的读者已经具备了一定的计算机基础，比如，你要知道操作系统是什么、环境变量怎么设置、怎样正确使用命令行，等等。</p><p>当然了，如果你已经有了编程经验，尤其是一点点Go语言编程经验，那就更好了，毕竟我想教给你的，都是Go语言中非常核心的技术。</p><p>如果你对Go语言中最基本的概念和语法还不够了解，那么可能需要在学习本专栏的过程中去查阅<a href=\"https://golang.google.cn/ref/spec\">Go语言规范文档</a>，也可以把预习篇的基础知识图拿出来好好研究一下。</p><!-- [[[read_end]]] --><p>最后，我来说一下专栏的讲述模式。我总会以一道Go语言的面试题开始，针对它进行解答，我会告诉你为什么我要关注这道题，这道题的背后隐藏着哪些知识，并且，我会对这部分的内容，进行相关的知识扩展。</p><p>好了，准备就绪，我们一起开始。</p><hr><p>我们学习Go语言时，要做的第一件事，都是根据自己电脑的计算架构（比如，是32位的计算机还是64位的计算机）以及操作系统（比如，是Windows还是Linux），从<a href=\"https://golang.google.cn\">Go语言官网</a>下载对应的二进制包，也就是可以拿来即用的安装包。</p><p>随后，我们会解压缩安装包、放置到某个目录、配置环境变量，并通过在命令行中输入<code>go version</code>来验证是否安装成功。</p><p>在这个过程中，我们还需要配置3个环境变量，也就是GOROOT、GOPATH和GOBIN。这里我可以简单介绍一下。</p><ul>\n<li>GOROOT：Go语言安装根目录的路径，也就是GO语言的安装路径。</li>\n<li>GOPATH：若干工作区目录的路径。是我们自己定义的工作空间。</li>\n<li>GOBIN：GO程序生成的可执行文件（executable file）的路径。</li>\n</ul><p>其中，GOPATH背后的概念是最多的，也是最重要的。那么，<strong>今天我们的面试问题是：你知道设置GOPATH有什么意义吗？</strong></p><p>关于这个问题，它的<strong>典型回答</strong>是这样的：</p><p>你可以把GOPATH简单理解成Go语言的工作目录，它的值是一个目录的路径，也可以是多个目录路径，每个目录都代表Go语言的一个工作区（workspace）。</p><p>我们需要利用这些工作区，去放置Go语言的源码文件（source file），以及安装（install）后的归档文件（archive file，也就是以“.a”为扩展名的文件）和可执行文件（executable file）。</p><p>事实上，由于Go语言项目在其生命周期内的所有操作（编码、依赖管理、构建、测试、安装等）基本上都是围绕着GOPATH和工作区进行的。所以，它的背后至少有3个知识点，分别是：</p><p><strong>1. Go语言源码的组织方式是怎样的；</strong></p><p><strong>2.你是否了解源码安装后的结果（只有在安装后，Go语言源码才能被我们或其他代码使用）；</strong></p><p><strong>3.你是否理解构建和安装Go程序的过程（这在开发程序以及查找程序问题的时候都很有用，否则你很可能会走弯路）。</strong></p><p>下面我就重点来聊一聊这些内容。</p><h2>知识扩展</h2><h2>1. Go语言源码的组织方式</h2><p>与许多编程语言一样，Go语言的源码也是以代码包为基本组织单位的。在文件系统中，这些代码包其实是与目录一一对应的。由于目录可以有子目录，所以代码包也可以有子包。</p><p>一个代码包中可以包含任意个以.go为扩展名的源码文件，这些源码文件都需要被声明属于同一个代码包。</p><p>代码包的名称一般会与源码文件所在的目录同名。如果不同名，那么在构建、安装的过程中会以代码包名称为准。</p><p>每个代码包都会有导入路径。代码包的导入路径是其他代码在使用该包中的程序实体时，需要引入的路径。在实际使用程序实体之前，我们必须先导入其所在的代码包。具体的方式就是<code>import</code>该代码包的导入路径。就像这样：</p><pre><code>import &quot;github.com/labstack/echo&quot;\n</code></pre><p>在工作区中，一个代码包的导入路径实际上就是从src子目录，到该包的实际存储位置的相对路径。</p><p>所以说，Go语言源码的组织方式就是以环境变量GOPATH、工作区、src目录和代码包为主线的。一般情况下，Go语言的源码文件都需要被存放在环境变量GOPATH包含的某个工作区（目录）中的src目录下的某个代码包（目录）中。</p><h2>2. 了解源码安装后的结果</h2><p>了解了Go语言源码的组织方式后，我们很有必要知道Go语言源码在安装后会产生怎样的结果。</p><p>源码文件以及安装后的结果文件都会放到哪里呢？我们都知道，源码文件通常会被放在某个工作区的src子目录下。</p><p>那么在安装后如果产生了归档文件（以“.a”为扩展名的文件），就会放进该工作区的pkg子目录；如果产生了可执行文件，就可能会放进该工作区的bin子目录。</p><p>我再讲一下归档文件存放的具体位置和规则。</p><p>源码文件会以代码包的形式组织起来，一个代码包其实就对应一个目录。安装某个代码包而产生的归档文件是与这个代码包同名的。</p><p>放置它的相对目录就是该代码包的导入路径的直接父级。比如，一个已存在的代码包的导入路径是</p><pre><code>github.com/labstack/echo\n</code></pre><p>那么执行命令</p><pre><code>go install github.com/labstack/echo\n</code></pre><p>生成的归档文件的相对目录就是 github.com/labstack ，文件名为echo.a 。</p><p>顺便说一下，上面这个代码包导入路径还有另外一层含义，那就是：该代码包的源码文件存在于GitHub网站的labstack组的代码仓库echo中。</p><p>再说回来，归档文件的相对目录与pkg目录之间还有一级目录，叫做平台相关目录。平台相关目录的名称是由build（也称“构建”）的目标操作系统、下划线和目标计算架构的代号组成的。</p><p>比如，构建某个代码包时的目标操作系统是Linux，目标计算架构是64位的，那么对应的平台相关目录就是linux_amd64。</p><p>因此，上述代码包的归档文件就会被放置在当前工作区的子目录pkg/linux_amd64/github.com/labstack中。</p><p><img src=\"https://static001.geekbang.org/resource/image/2f/3c/2fdfb5620e072d864907870e61ae5f3c.png?wh=1472*797\" alt=\"\"><br>\n（GOPATH与工作区）</p><p>总之，你需要记住的是，某个工作区的src子目录下的源码文件在安装后一般会被放置到当前工作区的pkg子目录下对应的目录中，或者被直接放置到该工作区的bin子目录中。</p><h2>3. 理解构建和安装Go程序的过程</h2><p>我们再来说说构建和安装Go程序的过程都是怎样的，以及它们的异同点。</p><p>构建使用命令<code>go build</code>，安装使用命令<code>go install</code>。构建和安装代码包的时候都会执行编译、打包等操作，并且，这些操作生成的任何文件都会先被保存到某个临时的目录中。</p><p>如果构建的是库源码文件，那么操作后产生的结果文件只会存在于临时目录中。这里的构建的主要意义在于检查和验证。</p><p>如果构建的是命令源码文件，那么操作的结果文件会被搬运到源码文件所在的目录中。（这里讲到的两种源码文件我在<a href=\"https://time.geekbang.org/column/article/13540?utm_source=weibo&utm_medium=xuxiaoping&utm_campaign=promotion&utm_content=columns\">“预习篇”的基础知识图</a>中提到过，在后面的文章中我也会带你详细了解。）</p><p>安装操作会先执行构建，然后还会进行链接操作，并且把结果文件搬运到指定目录。</p><p>进一步说，如果安装的是库源码文件，那么结果文件会被搬运到它所在工作区的pkg目录下的某个子目录中。</p><p>如果安装的是命令源码文件，那么结果文件会被搬运到它所在工作区的bin目录中，或者环境变量<code>GOBIN</code>指向的目录中。</p><p>这里你需要记住的是，构建和安装的不同之处，以及执行相应命令后得到的结果文件都会出现在哪里。</p><h2>总结</h2><p>工作区和GOPATH的概念和含义是每个Go工程师都需要了解的。虽然它们都比较简单，但是说它们是Go程序开发的核心知识并不为过。</p><p>然而，我在招聘面试的过程中仍然发现有人忽略掉了它们。Go语言提供的很多工具都是在GOPATH和工作区的基础上运行的，比如上面提到的<code>go build</code>、<code>go install</code>和<code>go get</code>，这三个命令也是我们最常用到的。</p><h2>思考题</h2><p>说到Go程序中的依赖管理，其实还有很多问题值得我们探索。我在这里留下两个问题供你进一步思考。</p><ol>\n<li>Go语言在多个工作区中查找依赖包的时候是以怎样的顺序进行的？</li>\n<li>如果在多个工作区中都存在导入路径相同的代码包会产生冲突吗？</li>\n</ol><p>这两个问题之间其实是有一些关联的。答案并不复杂，你做几个试验几乎就可以找到它了。你也可以看一下Go语言标准库中<code>go build</code>包及其子包的源码。那里面的宝藏也很多，可以助你深刻理解Go程序的构建过程。</p><hr><h2>补充阅读</h2><h2>go build命令一些可选项的用途和用法</h2><p>在运行<code>go build</code>命令的时候，默认不会编译目标代码包所依赖的那些代码包。当然，如果被依赖的代码包的归档文件不存在，或者源码文件有了变化，那它还是会被编译。</p><p>如果要强制编译它们，可以在执行命令的时候加入标记<code>-a</code>。此时，不但目标代码包总是会被编译，它依赖的代码包也总会被编译，即使依赖的是标准库中的代码包也是如此。</p><p>另外，如果不但要编译依赖的代码包，还要安装它们的归档文件，那么可以加入标记<code>-i</code>。</p><p>那么我们怎么确定哪些代码包被编译了呢？有两种方法。</p><ol>\n<li>运行<code>go build</code>命令时加入标记<code>-x</code>，这样可以看到<code>go build</code>命令具体都执行了哪些操作。另外也可以加入标记<code>-n</code>，这样可以只查看具体操作而不执行它们。</li>\n<li>运行<code>go build</code>命令时加入标记<code>-v</code>，这样可以看到<code>go build</code>命令编译的代码包的名称。它在与<code>-a</code>标记搭配使用时很有用。</li>\n</ol><p>下面再说一说与Go源码的安装联系很紧密的一个命令：<code>go get</code>。</p><p>命令<code>go get</code>会自动从一些主流公用代码仓库（比如GitHub）下载目标代码包，并把它们安装到环境变量<code>GOPATH</code>包含的第1工作区的相应目录中。如果存在环境变量<code>GOBIN</code>，那么仅包含命令源码文件的代码包会被安装到<code>GOBIN</code>指向的那个目录。</p><p>最常用的几个标记有下面几种。</p><ul>\n<li><code>-u</code>：下载并安装代码包，不论工作区中是否已存在它们。</li>\n<li><code>-d</code>：只下载代码包，不安装代码包。</li>\n<li><code>-fix</code>：在下载代码包后先运行一个用于根据当前Go语言版本修正代码的工具，然后再安装代码包。</li>\n<li><code>-t</code>：同时下载测试所需的代码包。</li>\n<li><code>-insecure</code>：允许通过非安全的网络协议下载和安装代码包。HTTP就是这样的协议。</li>\n</ul><p>Go语言官方提供的<code>go get</code>命令是比较基础的，其中并没有提供依赖管理的功能。目前GitHub上有很多提供这类功能的第三方工具，比如<code>glide</code>、<code>gb</code>以及官方出品的<code>dep</code>、<code>vgo</code>等等，它们在内部大都会直接使用<code>go get</code>。</p><p>有时候，我们可能会出于某种目的变更存储源码的代码仓库或者代码包的相对路径。这时，为了让代码包的远程导入路径不受此类变更的影响，我们会使用自定义的代码包导入路径。</p><p>对代码包的远程导入路径进行自定义的方法是：在该代码包中的库源码文件的包声明语句的右边加入导入注释，像这样：</p><pre><code>package semaphore // import &quot;golang.org/x/sync/semaphore&quot;\n</code></pre><p>这个代码包原本的完整导入路径是<code>github.com/golang/sync/semaphore</code>。这与实际存储它的网络地址对应的。该代码包的源码实际存在GitHub网站的golang组的sync代码仓库的semaphore目录下。而加入导入注释之后，用以下命令即可下载并安装该代码包了：</p><pre><code>go get golang.org/x/sync/semaphore\n</code></pre><p>而Go语言官网golang.org下的路径/x/sync/semaphore并不是存放<code>semaphore</code>包的真实地址。我们称之为代码包的自定义导入路径。</p><p>不过，这还需要在golang.org这个域名背后的服务端程序上，添加一些支持才能使这条命令成功。</p><p>关于自定义代码包导入路径的完整说明可以参看<a href=\"https://github.com/hyper0x/go_command_tutorial/blob/master/0.3.md\">这里</a>。</p><p>好了，对于<code>go build</code>命令和<code>go get</code>命令的简短介绍就到这里。如果你想查阅更详细的文档，那么可以访问Go语言官方的<a href=\"https://golang.google.cn/cmd/go\">命令文档页面</a>，或者在命令行下输入诸如<code>go help build</code>这类的命令。</p><p><a href=\"https://github.com/hyper0x/Golang_Puzzlers\">戳此查看Go语言专栏文章配套详细代码。</a></p>","comments":[{"had_liked":false,"id":19547,"user_name":"郝林","can_delete":false,"product_type":"c1","uid":1026643,"ip_address":"","ucode":"F66BA62BA56FFA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","comment_is_top":true,"comment_ctime":1533872551,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"9.2233728329575997e+18","product_id":100013101,"comment_content":"有很多读写问归档文件是什么意思。归档文件在Linux下就是扩展名是.a的文件，也就是archive文件。写过C程序的朋友都知道，这是程序编译后生成的静态库文件。","like_count":186,"discussions":[{"author":{"id":1736297,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI9zRdkKuXMKh30ibeludlAsztmR4rD9iaiclPicOfIhbC4fWxGPz7iceb3o4hKx7qgX2dKwogYvT6VQ0g/132","nickname":"Initiative Thinker","note":"","ucode":"A884396A1581EF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312691,"discussion_content":"因此在调用的时候，只需要声明就可以连接静态库文件，那么声明是不是就是指import 路径下源码的声明呢？如果这样的话，源码不改动，在run的时候就不需要再编译一次，如果有改动，需要再编译一次。这就是可以解释在导入包的时候需要源码的路径，而不是和python导入包一样，仅需要导入包名字就可以直接使用！","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1602771372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1736813,"avatar":"","nickname":"von","note":"","ucode":"403C8CF955AFF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281511,"discussion_content":"归档文件的作用是什么?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1591754964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1505492,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/exfIUlVdCpicQPc7fOI6XezUuXd7rayRia7sB2GGHGP7IEBibI6TJbQS2R0bMNejzR1odAIDFP05cWjujrmbIzzwg/132","nickname":"AlexWillBeGood","note":"","ucode":"6D7BB91781E38C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349541,"discussion_content":"python的pyc C#的dll","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613298424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1673409,"avatar":"https://static001.geekbang.org/account/avatar/00/19/88/c1/d0136c63.jpg","nickname":"甜公子Timmy","note":"","ucode":"E6E90C518CDAC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347087,"discussion_content":"类似于java编译后的.class还是类似于.h文件？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612149362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2599361,"avatar":"https://static001.geekbang.org/account/avatar/00/27/a9/c1/b927bfa5.jpg","nickname":"阿白","note":"","ucode":"8D2D594A7FEA09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1673409,"avatar":"https://static001.geekbang.org/account/avatar/00/19/88/c1/d0136c63.jpg","nickname":"甜公子Timmy","note":"","ucode":"E6E90C518CDAC2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371846,"discussion_content":"我理解是类似Java的jar包","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1620018060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":347087,"ip_address":""},"score":371846,"extra":""}]}]},{"had_liked":false,"id":63824,"user_name":"Geek_1ed70f","can_delete":false,"product_type":"c1","uid":1394112,"ip_address":"","ucode":"B9A1928A6967B1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erNhKGpqicibpQO3tYvl9vwiatvBzn27ut9y5lZ8hPgofPCFC24HX3ko7LW5mNWJficgJncBCGKpGL2jw/132","comment_is_top":true,"comment_ctime":1548518855,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.223372235971799e+18","product_id":100013101,"comment_content":"下午上班时间随便读了一下,感觉有点讲的太散,只吸收了20%,晚上专门花了时间精读几遍 吸收了100%后真的干货满满,以前不懂得原理都能知道了 这是网上博客不会有的工匠级解说","like_count":47},{"had_liked":false,"id":19449,"user_name":"全干工程师","can_delete":false,"product_type":"c1","uid":1204155,"ip_address":"","ucode":"71861A210CAD7F","user_header":"https://static001.geekbang.org/account/avatar/00/12/5f/bb/cd23de6c.jpg","comment_is_top":true,"comment_ctime":1533833581,"is_pvip":false,"replies":[{"id":"6746","content":"请看我置顶的留言。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1533873193,"ip_address":"","comment_id":19449,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233721371728998e+18","product_id":100013101,"comment_content":"什么是归档文件，归档文件里都是什么？有什么作用。","like_count":23,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421847,"discussion_content":"请看我置顶的留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533873193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19617,"user_name":"千年孤独","can_delete":false,"product_type":"c1","uid":1037215,"ip_address":"","ucode":"282CA1A68E8774","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/9f/36ea3be4.jpg","comment_is_top":true,"comment_ctime":1533909320,"is_pvip":false,"replies":[{"id":"7092","content":"可以说，为了集中组织代码，以及代码互相引用。当然了，这么说后面试官可能还会让你具体解答。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534336018,"ip_address":"","comment_id":19617,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.223372124288e+18","product_id":100013101,"comment_content":"如果在面试中让老师来回答“设置&#39;GOPATH有什么意义？”这个问题，除去典型回答<br><br>老师会如何简要明了回答这个问题？","like_count":20,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421919,"discussion_content":"可以说，为了集中组织代码，以及代码互相引用。当然了，这么说后面试官可能还会让你具体解答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534336018,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1266698,"avatar":"https://static001.geekbang.org/account/avatar/00/13/54/0a/9a002ad5.jpg","nickname":"Adam Lau","note":"","ucode":"7E542D6E789500","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311561,"discussion_content":"这为啥是个事情，其它语言有这一说吗？这是说一个工程源码，依赖另一个工程源码吗？不然只描述依赖关系，编译后自动安装到自己工程中吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602401869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19630,"user_name":"许明","can_delete":false,"product_type":"c1","uid":1003067,"ip_address":"","ucode":"1DD7B45327ED35","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/3b/c5ae689a.jpg","comment_is_top":true,"comment_ctime":1533913024,"is_pvip":false,"replies":[{"id":"7091","content":"嗯，我也用这种组合。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534335884,"ip_address":"","comment_id":19630,"utype":1}],"discussion_count":3,"race_medal":0,"score":"9.2233721156981002e+18","product_id":100013101,"comment_content":"ide 我觉得vscode就很好用了，我现在是vscode + glide","like_count":18,"discussions":[{"author":{"id":2167037,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoktzQK57CSMwxf2aCbGEla9GPVGSWYp8HicUMQPteDlMuBWdZpjNwrOEGI1ZXESeq1piaoYd8oUCqA/132","nickname":"Geek_94813e","note":"","ucode":"CD944F203AF230","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375087,"discussion_content":"现在包管理用go mod了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1621478872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105148,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dc/fc/5c3ad841.jpg","nickname":"asura","note":"","ucode":"4AF66C19B4AE65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215017,"discussion_content":"GoLand也不错","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585272705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421922,"discussion_content":"嗯，我也用这种组合。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1534335884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19546,"user_name":"第五季节","can_delete":false,"product_type":"c1","uid":1200941,"ip_address":"","ucode":"94CAB74F29594A","user_header":"https://static001.geekbang.org/account/avatar/00/12/53/2d/8bc7a3a6.jpg","comment_is_top":true,"comment_ctime":1533872273,"is_pvip":false,"replies":[{"id":"6739","content":"前两个对，归档文件在Linux下就是.a文件，也就是archive文件，是程序编译成功后生成的静态库文件。这跟Java的jar包还不太一样，jar包相当于动态链接库了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1533873060,"ip_address":"","comment_id":19546,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.2233721028132004e+18","product_id":100013101,"comment_content":"工作区是指： 放go的源码目录。<br>gopath是指：指向工作区的路径。<br><br>归档文件： 相当于java的jar包。下载到本地私服<br><br><br>不知道对不对。纯属个人观点。","like_count":16,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421888,"discussion_content":"前两个对，归档文件在Linux下就是.a文件，也就是archive文件，是程序编译成功后生成的静态库文件。这跟Java的jar包还不太一样，jar包相当于动态链接库了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1533873060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1900192,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/fe/a0/9ae6db89.jpg","nickname":"新空气","note":"","ucode":"C98E953432F945","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240855,"discussion_content":"归档文件是否JAVA中的class文件一样？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587390043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20073,"user_name":"江山如画","can_delete":false,"product_type":"c1","uid":1188280,"ip_address":"","ucode":"BEB6228E6135B5","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/b8/aca814dd.jpg","comment_is_top":true,"comment_ctime":1534250282,"is_pvip":false,"replies":[{"id":"7083","content":"对你有帮助就好。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534335284,"ip_address":"","comment_id":20073,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720942235996e+18","product_id":100013101,"comment_content":"对于初学者第一次看确实有些难懂，但是多看几遍后就会发现其实干货满满，我读了好几遍，接触golang也快一年了，但是很多知识点是第一次接触到，感谢郝林老师！","like_count":13,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422093,"discussion_content":"对你有帮助就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534335284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19657,"user_name":"xyang","can_delete":false,"product_type":"c1","uid":1049729,"ip_address":"","ucode":"2811CAADCBE755","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/81/fe2797cf.jpg","comment_is_top":true,"comment_ctime":1533949829,"is_pvip":false,"replies":[{"id":"7090","content":"你好，我会在后边另写文章介绍。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534335826,"ip_address":"","comment_id":19657,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720813384008e+18","product_id":100013101,"comment_content":"go语言适合做什么业务，能概述性的罗列讲述下吗","like_count":10,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421930,"discussion_content":"你好，我会在后边另写文章介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534335826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19464,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":true,"comment_ctime":1533857457,"is_pvip":false,"replies":[{"id":"6744","content":"请看我置顶的留言。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1533873172,"ip_address":"","comment_id":19464,"utype":1}],"discussion_count":2,"race_medal":1,"score":"9.2233720727484006e+18","product_id":100013101,"comment_content":"一脸懵逼，并不知道归档文件是啥😄","like_count":8,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421853,"discussion_content":"请看我置顶的留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533873172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1197354,"avatar":"https://static001.geekbang.org/account/avatar/00/12/45/2a/a0154ed1.jpg","nickname":"金贵华","note":"","ucode":"BD384992A8E942","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6542,"discussion_content":"所谓归档文档，就是一些编译后的功能模块库，不可直接运行，\nbin 文件是一个可执行的程序 。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566962849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19592,"user_name":"jians","can_delete":false,"product_type":"c1","uid":1204386,"ip_address":"","ucode":"2600DC7CE1E5E1","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1iadgQFxhYdu7wIUf7n5XYZlchNicdGBsafY9GPX3hNq0313DfE7ia6CeRm7VZAmwGPsLI8icTJUqXg/132","comment_is_top":true,"comment_ctime":1533894559,"is_pvip":false,"replies":[{"id":"7093","content":"这就需要自己去放置了，或者临时把前面的工作区从gopath中去掉。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534336142,"ip_address":"","comment_id":19592,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.2233720641585009e+18","product_id":100013101,"comment_content":"看完再结合测试后的疑问：<br>在不同项目src中有同名包时，go build, install只会执行gopath中最早发现包的工作区，哪如何编译后面其他工作区中的同名包呢？","like_count":6,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421910,"discussion_content":"这就需要自己去放置了，或者临时把前面的工作区从gopath中去掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534336142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1589523,"avatar":"https://static001.geekbang.org/account/avatar/00/18/41/13/ab14ad25.jpg","nickname":"树心","note":"","ucode":"6C329F0FF798B9","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243959,"discussion_content":"在这一点上Go这么不智能吗？有人知道其他语言的情况吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587565622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19705,"user_name":"白宇","can_delete":false,"product_type":"c1","uid":1019484,"ip_address":"","ucode":"A285C8591D0F8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/5c/f34849ac.jpg","comment_is_top":true,"comment_ctime":1533981489,"is_pvip":false,"replies":[{"id":"7089","content":"你好，这属于是网络问题。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534335790,"ip_address":"","comment_id":19705,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.2233720598635991e+18","product_id":100013101,"comment_content":"请教一下，如何解决下载第三方包失败情况","like_count":5,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421948,"discussion_content":"你好，这属于是网络问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534335790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447496,"avatar":"https://static001.geekbang.org/account/avatar/00/16/16/48/01567df1.jpg","nickname":"郑泽洲","note":"","ucode":"EA1B540A040875","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371361,"discussion_content":"我也会碰到，国内网络的问题，用vpn可以解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619746825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19534,"user_name":"第五季节","can_delete":false,"product_type":"c1","uid":1200941,"ip_address":"","ucode":"94CAB74F29594A","user_header":"https://static001.geekbang.org/account/avatar/00/12/53/2d/8bc7a3a6.jpg","comment_is_top":true,"comment_ctime":1533869019,"is_pvip":false,"replies":[{"id":"6741","content":"归档文件的解释请看置顶的留言。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1533873150,"ip_address":"","comment_id":19534,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720555685007e+18","product_id":100013101,"comment_content":"gopath 的设计类似java  。<br>具体的用途是执行命令要用 例如：go run、go install、go get等。<br>允许设置多个路径。<br>在idea里面的多个project或工具组建都并列放在gopath的src下面。<br>例如：go install myProject1<br>            go install myProject2 <br>所以老师说的这个归档文件。可以理解成工作空间吗？<br>至于老师说的两个问题。<br>1:按照代码的执行顺序 从上往下 每个引入的初始化。<br>2:引入一下试试就知道了。","like_count":4,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421882,"discussion_content":"归档文件的解释请看置顶的留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533873150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19808,"user_name":"🄽🄸🅇🅄🅂","can_delete":false,"product_type":"c1","uid":1000060,"ip_address":"","ucode":"853763C229A5AA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/7c/8ef14715.jpg","comment_is_top":true,"comment_ctime":1534084798,"is_pvip":false,"replies":[{"id":"7086","content":"相当于静态链接文件。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534335625,"ip_address":"","comment_id":19808,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720512737997e+18","product_id":100013101,"comment_content":"归档文件，可以理解为程序的动态链接库文件吗？","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421991,"discussion_content":"相当于静态链接文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534335625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19772,"user_name":"有风的林子","can_delete":false,"product_type":"c1","uid":1073748,"ip_address":"","ucode":"134BF057F13D1C","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/54/cd487e91.jpg","comment_is_top":true,"comment_ctime":1534058054,"is_pvip":false,"replies":[{"id":"7087","content":"你好，这根据具体的操作系统而定。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534335663,"ip_address":"","comment_id":19772,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.2233720512736993e+18","product_id":100013101,"comment_content":"目前还没用到GOPATH包含多个工作区，不知多个目录间的分隔符是什么？空格、冒号、还是分号？如果作者顺便说一下就好了，至少增加一个知识点。😁","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421977,"discussion_content":"你好，这根据具体的操作系统而定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534335663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306092,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ61zTDmLk7IhLJn6seBPOwsVaKIWUWaxk5YmsdYBZUOYMQCsyl9iaQVSg9U5qJVLLOCFUoLUuYnRA/132","nickname":"fjpcode","note":"","ucode":"C32C5E3ECB9A90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323,"discussion_content":"go help gopath 第一段落就有你需要的答案。 Unix是冒号, Windows是分号，Plan 9是一个列表形式","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1561449921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134679,"user_name":"张珂","can_delete":false,"product_type":"c1","uid":1249512,"ip_address":"","ucode":"E0AFA940BEAC1C","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/e8/172b5915.jpg","comment_is_top":false,"comment_ctime":1568892338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"108943074738","product_id":100013101,"comment_content":"突然出现“库源码文件”和“命令源码文件”，只看名字不知道是什么。看了某个留言之后才知道“命令源码文件”是包含main入口函数的源码文件。虽说该专栏定位不是基础教学，但还是要照顾一下大家基础不一，阅读门槛太高也不好。<br><br>总体还感觉文字组织让人读起来很费劲，文字逻辑需要优化。<br><br>图好像也很少。文不如表，表不如图，图不如动画。有些东西一图胜千言。其他专栏都有很多图的，虽说音频很不方便，但我觉得音频对于方法论的讲述比较合适（比如架构的思想），不适合该专栏。大部分用户应该是用“阅读”来学习的。<br><br>个人观点","like_count":25},{"had_liked":false,"id":19452,"user_name":"咖啡色的羊驼","can_delete":false,"product_type":"c1","uid":1112900,"ip_address":"","ucode":"84E288A5665A3A","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/44/8b2600fd.jpg","comment_is_top":false,"comment_ctime":1533835885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"104613050989","product_id":100013101,"comment_content":"对于作者的两个问题。三个纬度延伸总结回答下:<br><br>1.总执行顺序的角度<br>引入的包 -&gt; 当前包的变量常量 -&gt; init()[多个同一包则按照顺序执行] -&gt; main函数<br><br>2.依赖包执行顺序<br>被依赖的总是优先执行初始化，一个包只会被初始化一次。<br>a引入b，b引入c，则执行顺序c -&gt; b -&gt; a<br><br>3.单个包执行顺序的角度<br>总的前提:按照包中源文件名的字典顺序来排序执行。<br>当前包排序后的变量常量 -&gt; 排序后的init()","like_count":24},{"had_liked":false,"id":19507,"user_name":"Bob.Chen","can_delete":false,"product_type":"c1","uid":1001405,"ip_address":"","ucode":"847875C64C6315","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/bd/8b3c7bcb.jpg","comment_is_top":false,"comment_ctime":1533864189,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"83138242813","product_id":100013101,"comment_content":"请问对于之前不太了解go的同学，是否有推荐的入门书可以和专栏配合着看？","like_count":19},{"had_liked":false,"id":22181,"user_name":"melon","can_delete":false,"product_type":"c1","uid":1023773,"ip_address":"","ucode":"7A80C20EBCAAA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/1d/ec173090.jpg","comment_is_top":false,"comment_ctime":1535533928,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"78844945256","product_id":100013101,"comment_content":"感觉一脸懵逼的，建议先看一下官网这篇深入浅出的文章:https:&#47;&#47;golang.org&#47;doc&#47;code.html，看完再回过头来看就了然了。","like_count":18},{"had_liked":false,"id":19701,"user_name":"乌慢","can_delete":false,"product_type":"c1","uid":1202372,"ip_address":"","ucode":"C9250C3ED3413C","user_header":"https://static001.geekbang.org/account/avatar/00/12/58/c4/b28bafc8.jpg","comment_is_top":false,"comment_ctime":1533978684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"74548422716","product_id":100013101,"comment_content":"对于新手来说看起来不是那么的通俗易懂，如果加上图解就更好了，希望以后更加好","like_count":17},{"had_liked":false,"id":68520,"user_name":"少年","can_delete":false,"product_type":"c1","uid":1075248,"ip_address":"","ucode":"05EF8E37434EAC","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/30/2de62b89.jpg","comment_is_top":false,"comment_ctime":1550538328,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"61680080472","product_id":100013101,"comment_content":"希望老师少用写陌生的概念，比如：命令源码文件。如果用，请加点解释和类比。用过javascript，php，python，感觉这篇看的还是一脸萌比。命令源码文件这词，还是在留言区看明白的。可以参照廖雪峰老师的文笔，傻比都能看明白。只是提供些反馈，希望老师的专栏越做越好。","like_count":14,"discussions":[{"author":{"id":2871611,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/d1/3b/729b8df9.jpg","nickname":"GhostGuest","note":"","ucode":"A6785E3304276B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572627,"discussion_content":"确实","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652878466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139040,"user_name":"Arno Fan","can_delete":false,"product_type":"c1","uid":1199335,"ip_address":"","ucode":"B58114F3A2B672","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/e7/226025f7.jpg","comment_is_top":false,"comment_ctime":1570531457,"is_pvip":false,"replies":[{"id":"53564","content":"👍","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1570537446,"ip_address":"","comment_id":139040,"utype":1}],"discussion_count":2,"race_medal":0,"score":"53110139009","product_id":100013101,"comment_content":"$ go env |grep -E &quot;GOPATH|GOROOT&quot;<br>GOPATH=&quot;&#47;Users&#47;arno&#47;go&quot;<br>GOROOT=&quot;&#47;usr&#47;local&#47;Cellar&#47;go&#47;1.12.9&#47;libexec&quot;<br><br>$ tree &#47;Users&#47;arno&#47;go<br>&#47;Users&#47;arno&#47;go<br>├── bin<br>│   ├── hello<br>│   └── hello_v2<br>├── pkg<br>└── src<br>    ├── github.com<br>    │   └── opsarno<br>    │       └── hello<br>    │           └── hello.go<br>    └── hello_v2<br>        └── hello.go<br><br>单纯的去读文字，确实不易理解，实际操作下就比较容易理解了。","like_count":12,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469763,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570537446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205376,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/80/61107e24.jpg","nickname":"快乐就好","note":"","ucode":"5F4806B050FA46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414126,"discussion_content":"请教一个问题，我这边设置了GOPATH，然后在GOPATH路径下下了一段代码，代码调用了自定义模块，然后go run执行的时间报我的自定义模块不在GOROOT中（package voile is not in GOROOT），详细细节是：GOPATH=/home/godev/go，/home/godev/go下的目录路径是$ ls\nbin  pkg  src；\nsrc下目录路径是：\n$ ls\nmain.go  voile\nvoile是作为自定义模块的，voile下有一个voile.go文件，内容如下：\n$ cat voile/voile.go \npackage voile\n\nimport &#34;fmt&#34;\n\nfunc init(){\n  fmt.Println(&#34;Is file Init.&#34;)\n}\n\nfunc Simple(){\n  fmt.Println(&#34;Hello world!&#34;)\n}\n原src目录下main.go文件内容如下：\npackage main\n\nimport (\n&#34;fmt&#34;\n&#34;log&#34;\n&#34;os&#34;\n&#34;voile&#34;\n)\n\nfunc init(){\n  log.SetOutput(os.Stdout) \n}\n\nfunc main(){\n  voile.Simple()\n}\n在src下执行go run main.go就是有问题（说我自定义模块voile找不到），请问这里是什么问题呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636672477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164753,"user_name":"Kevin Wang","can_delete":false,"product_type":"c1","uid":1042073,"ip_address":"","ucode":"D4BC9EFCB086EE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/99/276eaeaa.jpg","comment_is_top":false,"comment_ctime":1577086174,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"40231791838","product_id":100013101,"comment_content":"go mod是最新标准了。<br><br>我觉得这一块工程上最核心的东西反而没讲到，即build时查找依赖的优先级顺序：go mod，各种vender，gopath, goroot","like_count":10},{"had_liked":false,"id":102130,"user_name":"Lever","can_delete":false,"product_type":"c1","uid":1071921,"ip_address":"","ucode":"20C0D381677E1D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/31/b26b56bf.jpg","comment_is_top":false,"comment_ctime":1560146074,"is_pvip":false,"replies":[{"id":"36887","content":"从 Go 1.13 开始，module 模式才会成为默认配置。在 Go 1.11 中，默认情况下，只要项目存在于 $GOPATH&#47;src 中，它依然会按照原有的 GOPATH 模式运作，即使该项目包含了 go.mod 文件。另外，$GOPATH&#47;pkg&#47;mod 只是一个归档文件的缓存目录而已。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1560182876,"ip_address":"","comment_id":102130,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35919884442","product_id":100013101,"comment_content":"go v1.11 之后已经很不一样了，所有依赖包都放到 $GOPATH&#47;pkg&#47;mod 下了","like_count":8,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453274,"discussion_content":"从 Go 1.13 开始，module 模式才会成为默认配置。在 Go 1.11 中，默认情况下，只要项目存在于 $GOPATH/src 中，它依然会按照原有的 GOPATH 模式运作，即使该项目包含了 go.mod 文件。另外，$GOPATH/pkg/mod 只是一个归档文件的缓存目录而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560182876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51749,"user_name":"Q","can_delete":false,"product_type":"c1","uid":1300229,"ip_address":"","ucode":"D29423F4D3DBD5","user_header":"https://static001.geekbang.org/account/avatar/00/13/d7/05/d5e31bd3.jpg","comment_is_top":false,"comment_ctime":1545231437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35904969805","product_id":100013101,"comment_content":"包管理这块，最新的是go mod命令","like_count":9},{"had_liked":false,"id":19445,"user_name":"后端进阶","can_delete":false,"product_type":"c1","uid":1125656,"ip_address":"","ucode":"480F48F5378307","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/18/918eaecf.jpg","comment_is_top":false,"comment_ctime":1533832046,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35893570414","product_id":100013101,"comment_content":"go get 虽然简单粗暴，但是缺点是不能进行版本控制啊，虽然有很多第三方包管理工具，但我还是挺期待官方的dep工具完善后加入Go工具链中。","like_count":8},{"had_liked":false,"id":101173,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1146974,"ip_address":"","ucode":"5958BB67E9A8AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/80/5e/2d1c63b4.jpg","comment_is_top":false,"comment_ctime":1559734240,"is_pvip":false,"replies":[{"id":"36539","content":"虽然这两者存储的都是另一种形式的代码，但还是有很多不同的。主要的不同有：<br><br>1. Java 的 class 文件存储的一般是某一个 java 文件中代码的另一种形式；而 .a 文件存储的是多个源码文件内容的集合，也就是说它在转换代码形式之外还会在必要时把源自不同文件的代码链接在一起。<br><br>2. Java 的 class 文件存储的是一种字节码，这种字节码属于一种中间代码，仍然是抽象的；而 .a 文件中保存的是一种底层且具体的代码。这种代码可以直接由操作系统读取并理解。<br><br>3. Java 的 class 文件是可以跨平台的。它还需要由 JVM 再翻译一遍才能变成具体的机器代码；而 .a 文件并不能跨平台，其中已经包含针对目标操作系统（比如 LInux）和目标计算架构（比如 amd64）的具体代码了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1559790716,"ip_address":"","comment_id":101173,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31624505312","product_id":100013101,"comment_content":"归档文件是不是类似Java的class文件啊","like_count":7,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452836,"discussion_content":"虽然这两者存储的都是另一种形式的代码，但还是有很多不同的。主要的不同有：\n\n1. Java 的 class 文件存储的一般是某一个 java 文件中代码的另一种形式；而 .a 文件存储的是多个源码文件内容的集合，也就是说它在转换代码形式之外还会在必要时把源自不同文件的代码链接在一起。\n\n2. Java 的 class 文件存储的是一种字节码，这种字节码属于一种中间代码，仍然是抽象的；而 .a 文件中保存的是一种底层且具体的代码。这种代码可以直接由操作系统读取并理解。\n\n3. Java 的 class 文件是可以跨平台的。它还需要由 JVM 再翻译一遍才能变成具体的机器代码；而 .a 文件并不能跨平台，其中已经包含针对目标操作系统（比如 LInux）和目标计算架构（比如 amd64）的具体代码了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559790716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19665,"user_name":"费马","can_delete":false,"product_type":"c1","uid":1190201,"ip_address":"","ucode":"BCAAF9C16F0CC5","user_header":"https://static001.geekbang.org/account/avatar/00/12/29/39/0aec7827.jpg","comment_is_top":false,"comment_ctime":1533951289,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31598722361","product_id":100013101,"comment_content":"请问库源码文件和命令源码文件的区别是什么","like_count":7,"discussions":[{"author":{"id":1675882,"avatar":"https://static001.geekbang.org/account/avatar/00/19/92/6a/dd37a054.jpg","nickname":"张y .","note":"","ucode":"85918469492F4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304491,"discussion_content":"看哪个链接的文章里面有一个图有解释，命令源码库实际上就是有main函数，编译之后是个可执行文件，而命令源码库是没有main，只是有一些功能，类似util包。  个人理解是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599579455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19495,"user_name":"Jeremy King","can_delete":false,"product_type":"c1","uid":1152485,"ip_address":"","ucode":"0F89D352FC96ED","user_header":"https://static001.geekbang.org/account/avatar/00/11/95/e5/1ce27753.jpg","comment_is_top":false,"comment_ctime":1533862724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31598633796","product_id":100013101,"comment_content":"首先肯定文章很有内容，希望对一些基本概念比如归档文件做一些解释，希望与具体实例结合性更紧密，希望在编排上有改善，更好的呈现给读者。","like_count":7},{"had_liked":false,"id":98225,"user_name":"求知","can_delete":false,"product_type":"c1","uid":1544791,"ip_address":"","ucode":"3160DC44C9E0E9","user_header":"https://static001.geekbang.org/account/avatar/00/17/92/57/e75f41cf.jpg","comment_is_top":false,"comment_ctime":1558936948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18738806132","product_id":100013101,"comment_content":"推荐阅读：<br><br>如何组织代码 - https:&#47;&#47;golang.org&#47;doc&#47;code.html<br>常见环境变量 - https:&#47;&#47;golang.org&#47;cmd&#47;go&#47;#hdr-Environment_variables<br>","like_count":4},{"had_liked":false,"id":20604,"user_name":"来碗绿豆汤","can_delete":false,"product_type":"c1","uid":1070051,"ip_address":"","ucode":"B0AB63B8D9729F","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/e3/39dcfb11.jpg","comment_is_top":false,"comment_ctime":1534583172,"is_pvip":false,"replies":[{"id":"7245","content":"我记得windows得用个方式让环境变量生效吧，不记得是哪个方式了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534660183,"ip_address":"","comment_id":20604,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18714452356","product_id":100013101,"comment_content":"老师，我用的是windows系统。我将我的一个工作目录配置到了GOPATH。然后在该目录的src目录下面创建了一个package。执行go install.的时候报错，提示找不到这个包。然后错误信息显示，它只去go的安装目录小面找了，并没有去我新配置的GOPATH下面找。","like_count":4,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422328,"discussion_content":"我记得windows得用个方式让环境变量生效吧，不记得是哪个方式了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534660183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004859,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/3b/abb7bfe3.jpg","nickname":"tuuezzy","note":"","ucode":"FE1E0FF96D73AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":208619,"discussion_content":"可尝试打开一个dos窗口，set PATH=now  关闭这个窗口，再打开一个DOS窗口，echo %PATH%看一下是不是更新成刚才的PATH了。有时候我这么做还是不行呵呵。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584558755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19536,"user_name":"abeng","can_delete":false,"product_type":"c1","uid":1004232,"ip_address":"","ucode":"327D146A588324","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/c8/88cb1358.jpg","comment_is_top":false,"comment_ctime":1533869883,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18713739067","product_id":100013101,"comment_content":"还有，个人认为pkg中的归档文件，相当于动态链接库，主要用于go build时加快编译的。","like_count":4},{"had_liked":false,"id":19530,"user_name":"abeng","can_delete":false,"product_type":"c1","uid":1004232,"ip_address":"","ucode":"327D146A588324","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/c8/88cb1358.jpg","comment_is_top":false,"comment_ctime":1533867618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18713736802","product_id":100013101,"comment_content":"作为技术类的专题，语速还是偏快，因为一边听需要一边消化理解，不过问题不大，可以先预习下期内容或再听一遍。<br>最后交作业：<br>1、Go在多个工作区查找依赖包的顺序如何？<br>A：原先一直认为$GOPATH只能设置一个目录，复杂问题自动忽略😓，那么设置了多个工作区，go build时也应该默认第一个路径作为编译的当前工作区，在遇到import时递归查找编译，不这样实现就是坑，😂<br>2、如果在多个工作区中存在相同的包会不会冲突？<br>A：不会，原因同上！","like_count":4},{"had_liked":false,"id":169484,"user_name":"疯琴","can_delete":false,"product_type":"c1","uid":1099379,"ip_address":"","ucode":"82ACAA4A27753D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/73/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1578364287,"is_pvip":false,"replies":[{"id":"65823","content":"这并不矛盾，因为：<br><br>构建 = 编译 + 链接<br><br>1. 编译和链接是两个步骤。<br>2. 一个代码包在被安装（编译、链接并生成相应文件）完成之后，相应的静态链接库文件就会被go工具放到pkg目录里。<br>3. 在编译的时候，如果pkg目录里已经有了依赖代码包的静态链接库文件，那么在默认情况下go工具就不会再编译一遍了。<br>4. 在链接的时候，如果依赖包的静态链接库文件已经存在于pkg目录中了，那么go工具就会直接使用。这个链接的过程实际上就是把主包和依赖包链接在一起。<br><br>之所以Go程序这么方便，一部分原因就是它的工具对静态链接库的管理。<br>","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1578398841,"ip_address":"","comment_id":169484,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14463266175","product_id":100013101,"comment_content":"老师，请教一下：<br>您在补充阅读中说“在运行go build命令的时候，默认不会编译目标代码包所依赖的那些代码包。”而在回答同学问题中说“Go语言对可执行程序进行安装的时候，会把相关的静态链接库与之打包在一起。所以生成的可执行文件才可以独立运行的。这也是很明显的优势。“<br>有点不理解，这两个说法矛盾么？依赖的代码包和相关的静态链接库是什么区别？我每次在本地 build 完了就可以扔到服务器上执行了，Go 这个特性非常方便实用。","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480576,"discussion_content":"这并不矛盾，因为：\n\n构建 = 编译 + 链接\n\n1. 编译和链接是两个步骤。\n2. 一个代码包在被安装（编译、链接并生成相应文件）完成之后，相应的静态链接库文件就会被go工具放到pkg目录里。\n3. 在编译的时候，如果pkg目录里已经有了依赖代码包的静态链接库文件，那么在默认情况下go工具就不会再编译一遍了。\n4. 在链接的时候，如果依赖包的静态链接库文件已经存在于pkg目录中了，那么go工具就会直接使用。这个链接的过程实际上就是把主包和依赖包链接在一起。\n\n之所以Go程序这么方便，一部分原因就是它的工具对静态链接库的管理。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578398841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162111,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1576462873,"is_pvip":false,"replies":[{"id":"61747","content":"或许你可以先买一本我写的《Go并发编程实战》第一版看一看。这本书是在2015年由图灵出版社出版的。注意，一定是第一版啊。第二版砍掉了很多基础性的内容，不太适合零基础的人。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1576492928,"ip_address":"","comment_id":162111,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14461364761","product_id":100013101,"comment_content":"我有编码经验但从没接触过Go，这一篇更像是给学习过Go的人总结知识点一样，是不是入门选这个专栏有点不太合适？","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477956,"discussion_content":"或许你可以先买一本我写的《Go并发编程实战》第一版看一看。这本书是在2015年由图灵出版社出版的。注意，一定是第一版啊。第二版砍掉了很多基础性的内容，不太适合零基础的人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576492928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122036,"user_name":"Casper","can_delete":false,"product_type":"c1","uid":1022129,"ip_address":"","ucode":"69282EB175B48E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/98/b1/f89a84d0.jpg","comment_is_top":false,"comment_ctime":1565273742,"is_pvip":true,"replies":[{"id":"44934","content":"还用文章里的例子吧：<br><br>package semaphore &#47;&#47; import &quot;golang.org&#47;x&#47;sync&#47;semaphore&quot;<br><br>你加上这个注释之后，就不用在意这个代码包具体存放在哪个代码仓库上了（比如不用在意它存在 Github 还是 GitBucket）。当然，这需要这个代码包的作者在他的网站上（比如 golang.org）提供一个格式统一的路径格式（比如 &#47;x&#47;sync&#47;semaphore）。这样的话，只要这个网站还在，你就可以通过它中转并获取到在某个代码仓库上的代码包了。<br><br>不知道我说清楚没有。这其实不是一个大概率需求，主要是为了固化和统一化代码包的路径的。需要代码包的作者先做好准备，然后才能为使用者提供这样的方便。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1565353305,"ip_address":"","comment_id":122036,"utype":1}],"discussion_count":2,"race_medal":5,"score":"14450175630","product_id":100013101,"comment_content":"自定义代码包远程导入路径没有搞懂是如何使用的，烦请郝老师给个具体的示例，谢谢啦~","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462067,"discussion_content":"还用文章里的例子吧：\n\npackage semaphore // import &amp;quot;golang.org/x/sync/semaphore&amp;quot;\n\n你加上这个注释之后，就不用在意这个代码包具体存放在哪个代码仓库上了（比如不用在意它存在 Github 还是 GitBucket）。当然，这需要这个代码包的作者在他的网站上（比如 golang.org）提供一个格式统一的路径格式（比如 /x/sync/semaphore）。这样的话，只要这个网站还在，你就可以通过它中转并获取到在某个代码仓库上的代码包了。\n\n不知道我说清楚没有。这其实不是一个大概率需求，主要是为了固化和统一化代码包的路径的。需要代码包的作者先做好准备，然后才能为使用者提供这样的方便。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565353305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022129,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/b1/f89a84d0.jpg","nickname":"Casper","note":"","ucode":"69282EB175B48E","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4407,"discussion_content":"谢谢郝老师的回复，我先按照老师的说法，再试试~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565365159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114248,"user_name":"Krysta","can_delete":false,"product_type":"c1","uid":1343943,"ip_address":"","ucode":"4F8734401BDD4E","user_header":"https://static001.geekbang.org/account/avatar/00/14/81/c7/cf36f3cc.jpg","comment_is_top":false,"comment_ctime":1563261019,"is_pvip":false,"replies":[{"id":"41757","content":"对的。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1563321911,"ip_address":"","comment_id":114248,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14448162907","product_id":100013101,"comment_content":"你好，我的理解是。gopath之下的第一个目录是用来存放go get下载的一些第三方库，类似于Node的node_module ，可以新建其他的目录用来存放我们写的代码，通过Import就可以引入哪些库。不知道这样的理解是不是对的","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458578,"discussion_content":"对的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563321911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92969,"user_name":"Hurray","can_delete":false,"product_type":"c1","uid":1006421,"ip_address":"","ucode":"88ED3859A2736B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5b/55/2a465781.jpg","comment_is_top":false,"comment_ctime":1557370049,"is_pvip":false,"replies":[{"id":"33170","content":"你说的应该是两个代码包导入路径的最后一个元素相同时的情形。如果在同一个代码文件中同时导入这两个代码包的话，可以像你说的那样去解决。<br><br>而本文的问题2说的是：在 GOPATH 包含的两个工作区中如果存在两个代码包导入路径完全相同的项目（它们可能是同一个项目的两份拷贝）会怎么样？<br><br>答案是：不会冲突。因为 Go 语言在寻找代码包时是有顺序的。对于 GOPATH 中的工作区来说，它会按照你设置的顺序进行查找。所以它会找到并使用较靠前的那个工作区中的同路径项目。<br><br>利于这一特性，我们可以在不改动原项目代码的情况下进行依赖库的调试。至于怎么做你可能已经想到了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1557371549,"ip_address":"","comment_id":92969,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442271937","product_id":100013101,"comment_content":"问题2，会冲突，可以用别名来解决。","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449443,"discussion_content":"你说的应该是两个代码包导入路径的最后一个元素相同时的情形。如果在同一个代码文件中同时导入这两个代码包的话，可以像你说的那样去解决。\n\n而本文的问题2说的是：在 GOPATH 包含的两个工作区中如果存在两个代码包导入路径完全相同的项目（它们可能是同一个项目的两份拷贝）会怎么样？\n\n答案是：不会冲突。因为 Go 语言在寻找代码包时是有顺序的。对于 GOPATH 中的工作区来说，它会按照你设置的顺序进行查找。所以它会找到并使用较靠前的那个工作区中的同路径项目。\n\n利于这一特性，我们可以在不改动原项目代码的情况下进行依赖库的调试。至于怎么做你可能已经想到了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557371549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91727,"user_name":"直念去","can_delete":false,"product_type":"c1","uid":1052690,"ip_address":"","ucode":"816CD5BA8E6F86","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/12/9b00f4f2.jpg","comment_is_top":false,"comment_ctime":1557101772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442003660","product_id":100013101,"comment_content":"要多看几遍才可以看到作者的良苦用心， 干货满满！","like_count":3},{"had_liked":false,"id":35622,"user_name":"庄忠惠","can_delete":false,"product_type":"c1","uid":1071253,"ip_address":"","ucode":"C1FDB41FD8E729","user_header":"https://static001.geekbang.org/account/avatar/00/10/58/95/c1d937f6.jpg","comment_is_top":false,"comment_ctime":1540714090,"is_pvip":false,"replies":[{"id":"13307","content":"go算是有“虚拟机”，但是编译之后它与应用程序员的源码是集成在一起的，这跟Java那种传统意义上的虚拟机不同。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1541481669,"ip_address":"","comment_id":35622,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14425615978","product_id":100013101,"comment_content":"老师，go语言有没有虚拟机这样概念，runtime算吗，如果没有，他怎么做到内存自动回收","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427602,"discussion_content":"go算是有“虚拟机”，但是编译之后它与应用程序员的源码是集成在一起的，这跟Java那种传统意义上的虚拟机不同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541481669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21529,"user_name":"招耳","can_delete":false,"product_type":"c1","uid":1001825,"ip_address":"","ucode":"D163E1A6377CF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/61/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1535156827,"is_pvip":false,"replies":[{"id":"7735","content":"glide、gb。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535293636,"ip_address":"","comment_id":21529,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14420058715","product_id":100013101,"comment_content":"推荐一个比较好用的go包管理工具呗","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422724,"discussion_content":"glide、gb。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535293636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19734,"user_name":"李皮皮皮皮皮","can_delete":false,"product_type":"c1","uid":1200281,"ip_address":"","ucode":"3BF1DEE4A12359","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/99/44378317.jpg","comment_is_top":false,"comment_ctime":1534002699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14418904587","product_id":100013101,"comment_content":"宇宙最强，功能最丰富ide-goland<br>小巧玲珑-liteide<br>文本编辑器+插件-vs code或sublime<br><br>整个听下来感觉稍稍有点不清晰，什么都点到了，就是没点透的感觉。前面有个同学建议很好，最后总结是梳理一下大纲。<br><br>import自定义那边没听懂……","like_count":3},{"had_liked":false,"id":19722,"user_name":"小雨","can_delete":false,"product_type":"c1","uid":1007970,"ip_address":"","ucode":"A6332734063CC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/62/72296b09.jpg","comment_is_top":false,"comment_ctime":1533995712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14418897600","product_id":100013101,"comment_content":"1，包的导入有几种路径方式，文稿中给出了通俗的方式，但是还有根据相对路径导入的方式，所以在导入包时，应该是先从当前项目(不知道可否叫当前工作区)开始查找，在根据GOPATH从前往后查找<br>2，不冲突，因为按顺序找到所需要的包就不往后找了。<br><br>看其他就要中有提到启动顺序的，从init到main，应该不是这两题的要点了。","like_count":3},{"had_liked":false,"id":19679,"user_name":"游红宇☕","can_delete":false,"product_type":"c1","uid":1199513,"ip_address":"","ucode":"68842465D84E99","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/99/52a24902.jpg","comment_is_top":false,"comment_ctime":1533963630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14418865518","product_id":100013101,"comment_content":"首先抱怨一下，web端竟然不能留言！<br>其次，建议把官网那个项目结构的图示拿过来讲，也就是说，用具体案例来讲，更容易明白。","like_count":3},{"had_liked":false,"id":19484,"user_name":"(｡•́︿•̀｡)面团","can_delete":false,"product_type":"c1","uid":1199441,"ip_address":"","ucode":"10D6CF0B5ED4BD","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/51/b6833de8.jpg","comment_is_top":false,"comment_ctime":1533861757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14418763645","product_id":100013101,"comment_content":"什么是构建？什么是安装？归档文件有什么用？","like_count":3},{"had_liked":false,"id":321085,"user_name":"快乐就好","can_delete":false,"product_type":"c1","uid":1205376,"ip_address":"","ucode":"5F4806B050FA46","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/80/61107e24.jpg","comment_is_top":false,"comment_ctime":1636672495,"is_pvip":false,"replies":[{"id":"116622","content":"由于Go语言新版在模块管理方面有一些变动，所以这里需要手动修改一下。这里有两种解决方案。<br><br>第一种方案（对你这个场景来说最简单）：<br><br>执行命令 export GO111MODULE=auto; go run main.go<br><br>也就是说，先设置系统环境变量 GO111MODULE，把它的值设置为 auto 。<br><br>第二种方式（未来主流的方式）：<br><br>换用 go mod。<br><br>go mod 是Go语言新搞出来的模块管理工具（命令）。<br><br>具体步骤如下：<br><br>1. 保持系统环境变量 GO111MODULE 的值为 on 。<br>2. 在 main.go 文件的目录下运行 go mod init AAA ，其中的“AAA”需要替换为你自己命名的模块名称（自己想一个）。<br><br>这样一来，Go就会认定这个目录为“AAA”模块的根目录（go mod init 命令会在该目录下生成一个 go.mod 文件，之后 go 命令就会根据这个文件来识别模块）<br><br>3. 修改 main.go 文件，把导入语句中的 voile 改为 AAA&#47;voile ，也就是说，把先前设定的模块名称作为代码包 voile 的父级（注意，这里的“AAA”需要替换为你自己命名的模块名称）<br><br>这三个步骤都执行完成之后，你就可以在这个模块的根目录下正常执行 go run main.go 了。<br><br>顺便说一句，如果使用第二种方案的话，你的这个模块就没有必要放在 GOPATH 的目录里了，原则上该模块可以被放到任何地方。<br><br>更新：我整理了一下核心问题的答案，放到公众号了：https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;yk6iXZo_1jfG2LaCerXYXw ，你可以看一看，应该会认识更深刻一些。。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1636702074,"ip_address":"","comment_id":321085,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10226607087","product_id":100013101,"comment_content":"请教一个问题，我这边设置了GOPATH，然后在GOPATH路径下下了一段代码，代码调用了自定义模块，然后go run执行的时间报我的自定义模块不在GOROOT中（package voile is not in GOROOT），详细细节是：GOPATH=&#47;home&#47;godev&#47;go，&#47;home&#47;godev&#47;go下的目录路径是$ ls<br>bin  pkg  src；<br>src下目录路径是：<br>$ ls<br>main.go  voile<br>voile是作为自定义模块的，voile下有一个voile.go文件，内容如下：<br>$ cat voile&#47;voile.go <br>package voile<br><br>import &quot;fmt&quot;<br><br>func init(){<br>  fmt.Println(&quot;Is file Init.&quot;)<br>}<br><br>func Simple(){<br>  fmt.Println(&quot;Hello world!&quot;)<br>}<br>原src目录下main.go文件内容如下：<br>package main<br><br>import (<br>&quot;fmt&quot;<br>&quot;log&quot;<br>&quot;os&quot;<br>&quot;voile&quot;<br>)<br><br>func init(){<br>  log.SetOutput(os.Stdout) <br>}<br><br>func main(){<br>  voile.Simple()<br>}<br>在src下执行go run main.go就是有问题（说我自定义模块voile找不到），请问这里是什么问题呢？","like_count":3,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530213,"discussion_content":"由于Go语言新版在模块管理方面有一些变动，所以这里需要手动修改一下。这里有两种解决方案。\n\n第一种方案（对你这个场景来说最简单）：\n\n执行命令 export GO111MODULE=auto; go run main.go\n\n也就是说，先设置系统环境变量 GO111MODULE，把它的值设置为 auto 。\n\n第二种方式（未来主流的方式）：\n\n换用 go mod。\n\ngo mod 是Go语言新搞出来的模块管理工具（命令）。\n\n具体步骤如下：\n\n1. 保持系统环境变量 GO111MODULE 的值为 on 。\n2. 在 main.go 文件的目录下运行 go mod init AAA ，其中的“AAA”需要替换为你自己命名的模块名称（自己想一个）。\n\n这样一来，Go就会认定这个目录为“AAA”模块的根目录（go mod init 命令会在该目录下生成一个 go.mod 文件，之后 go 命令就会根据这个文件来识别模块）\n\n3. 修改 main.go 文件，把导入语句中的 voile 改为 AAA/voile ，也就是说，把先前设定的模块名称作为代码包 voile 的父级（注意，这里的“AAA”需要替换为你自己命名的模块名称）\n\n这三个步骤都执行完成之后，你就可以在这个模块的根目录下正常执行 go run main.go 了。\n\n顺便说一句，如果使用第二种方案的话，你的这个模块就没有必要放在 GOPATH 的目录里了，原则上该模块可以被放到任何地方。\n\n更新：我整理了一下核心问题的答案，放到公众号了：https://mp.weixin.qq.com/s/yk6iXZo_1jfG2LaCerXYXw ，你可以看一看，应该会认识更深刻一些。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636702074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205376,"avatar":"https://static001.geekbang.org/account/avatar/00/12/64/80/61107e24.jpg","nickname":"快乐就好","note":"","ucode":"5F4806B050FA46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414293,"discussion_content":"好的  可以了，就是没理解这块配置GO111MODULE=auto需要是auto，还是感谢老师了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636710811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290883,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1619832295,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"10209766887","product_id":100013101,"comment_content":"很久以前看过这一篇，现在再看还是有一点懵圈，也许应该先看隔壁的《Go 语言从入门到实战》。<br><br>…… 我是分割线，看完了隔壁的《Go 语言从入门到实战》然后又回到这里 ……<br>…… 其实我是从 Go 进阶训练营回到这里来的，因为那边有点难 ……<br><br>GOPATH 可以包括多个目录路径，每个目录都代表 Go 语言的一个工作区。<br><br>Go 语言的源码以代码包为基本组织单位（代码包与目录一一对应）。<br><br>命令源码文件：包含 main 入口函数的原码文件<br><br>src 源码文件<br>pkg 归档文件，程序编译后生成的静态库文件。<br>bin 可执行文件<br><br>go guild 构建，go install 安装，安装操作会先执行构建，然后链接，并且把结果文件搬运到指定目录。<br><br>go get 从代码仓库中下载代码包，并且安装到环境变量 GOPATH 包含的第 1 工作区的相应目录中。<br><br>我之前似乎就卡在这里，因为修改过 GOPATH 的定义，所以导致第 1 工作区的目录发生了变化，然后一些之前已经下载的代码包就找不到了。<br><br>对于思考题，不知道怎么去做实验，尝试着回答一下：<br><br>Go 语言在多个工作区中查找依赖包的顺序，应该是现在本地代码文件，然后是按照 GOPATH 的定义，从第 1 工作区一直找到最后一个工作区，如果没有的话再去 GOROOT 目录查找（也可能 GOROOT 的优先级在 GOPATH 之前？）。<br><br>多个工作区中存在导入路径相同的代码我觉得不会产生冲突，只要按照查找的优先级，优先使用最先找到的代码包即可。<br><br>学习专栏的时间晚了两年多，现在 GO 语言包管理又增加了 go mod，还需要进一步学习。<br><br>看了所有老师回复过的留言，从中也学到了不少内容。<br><br>很久不看，发现更新了插图，赞","like_count":2},{"had_liked":false,"id":167587,"user_name":"Geek_c227aa","can_delete":false,"product_type":"c1","uid":1351531,"ip_address":"","ucode":"360CBE202D01A4","user_header":"","comment_is_top":false,"comment_ctime":1577869684,"is_pvip":false,"replies":[{"id":"65047","content":"你问的是“为什么是基于 src 目录下的相对路径”吗？答案很简单，“乌龟的屁股”——规定。这是Go语言官方的规定，也是Go语言中很重要的约定。Go语言是一门重约定轻配置的编程语言。<br><br>所以，这里边有些东西就是约定，是Go语言的规矩，没有什么具体的原因。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1577887783,"ip_address":"","comment_id":167587,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10167804276","product_id":100013101,"comment_content":"说实话，讲的有点抽象，刚到新公司，已经用了三个月go开发业务。现在想系统的学习下go，但是三个环境变量还是看的模模糊糊的。<br><br>比如下面的：<br>在工作区中，一个代码包的导入路径实际上就是从 src 子目录，到该包的实际存储位置的相对路径。<br>这个为啥是src目录就没有说明白。建议郝老师说到类似这方面知识点到时候可以附上链接让人了解其原因<br>","like_count":2,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479908,"discussion_content":"你问的是“为什么是基于 src 目录下的相对路径”吗？答案很简单，“乌龟的屁股”——规定。这是Go语言官方的规定，也是Go语言中很重要的约定。Go语言是一门重约定轻配置的编程语言。\n\n所以，这里边有些东西就是约定，是Go语言的规矩，没有什么具体的原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577887783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77583,"user_name":"刘凯","can_delete":false,"product_type":"c1","uid":1350608,"ip_address":"","ucode":"EFDC932CAE61A6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9b/d0/86aee34c.jpg","comment_is_top":false,"comment_ctime":1552965377,"is_pvip":false,"replies":[{"id":"28875","content":".a文件代表的是某一个代码包中的程序。.文件是静态链接库，而.dll是动态链接库。在Go语言对可执行程序进行安装的时候，会把相关的静态链接库与之打包在一起。所以生成的可执行文件才可以独立运行的。这也是很明显的优势。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1553398846,"ip_address":"","comment_id":77583,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142899969","product_id":100013101,"comment_content":".a文件什么情况会用到，构建的exe文件我感觉直接包含了依赖，直接没有pkg文件夹就能运行啊<br>我的理解是.a文件相当于其它语言的.dll，了事实是没有.a文件，构建的.exe同样可以运行，有点慒<br>求解答","like_count":2,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443786,"discussion_content":".a文件代表的是某一个代码包中的程序。.文件是静态链接库，而.dll是动态链接库。在Go语言对可执行程序进行安装的时候，会把相关的静态链接库与之打包在一起。所以生成的可执行文件才可以独立运行的。这也是很明显的优势。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553398846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70546,"user_name":"守望","can_delete":false,"product_type":"c1","uid":1437287,"ip_address":"","ucode":"8EAF6C1921B08D","user_header":"https://static001.geekbang.org/account/avatar/00/15/ee/67/03c95ec2.jpg","comment_is_top":false,"comment_ctime":1551140142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10141074734","product_id":100013101,"comment_content":"感谢老师的分享。老师你好，建议在讲命令参数的时候对参数进行英文解释，个人认为这样有助于记忆。例如，-t  test代表测试，-d download，代表下载等等。","like_count":2},{"had_liked":false,"id":69351,"user_name":"RRR","can_delete":false,"product_type":"c1","uid":1014991,"ip_address":"","ucode":"F32A579D201EC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/cf/d5382404.jpg","comment_is_top":false,"comment_ctime":1550722614,"is_pvip":false,"replies":[{"id":"25264","content":"会在一段时间内共存。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1551184415,"ip_address":"","comment_id":69351,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10140657206","product_id":100013101,"comment_content":"go mod 出来之后，GOPATH 的意义就小了很多","like_count":2,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440075,"discussion_content":"会在一段时间内共存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551184415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350608,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9b/d0/86aee34c.jpg","nickname":"刘凯","note":"","ucode":"EFDC932CAE61A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321576,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604590749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65095,"user_name":"opwtryl","can_delete":false,"product_type":"c1","uid":1200572,"ip_address":"","ucode":"1F39EC13D103F1","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/bc/e558805c.jpg","comment_is_top":false,"comment_ctime":1549037969,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10138972561","product_id":100013101,"comment_content":"WINDOWS安装完go后，环境变量发生4个改变：<br>1. 用户变量添加了GOPATH， 默认值：%USERPROFILE%\\go (usually C:\\Users\\YourName\\go) ，自行添加WORKSPACE可以这样：C:\\Users\\YourName\\go;C:\\mygo，英文分号隔开。<br>2. 用户变量的 path 添加了：%USERPROFILE%\\go\\bin<br>3. 系统变量添加了GOROOT，默认值：C:\\Go\\<br>4. 系统变量的 Path 添加了：C:\\Go\\bin<br><br>结合 https:&#47;&#47;golang.org&#47;doc&#47;code.html 的代码，<br>1. go install github.com&#47;user&#47;hello 会在 bin 文件夹下生成hello.exe。<br>2. go build github.com&#47;user&#47;stringutil 看不出什么变化。（即文中的 如果构建的是库源码文件，那么操作后产生的结果文件只会存在于临时目录中。这里的构建的主要意义在于检查和验证。）","like_count":2},{"had_liked":false,"id":63873,"user_name":"火腿","can_delete":false,"product_type":"c1","uid":1308116,"ip_address":"","ucode":"40F17DBC18F5D5","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/d4/5a0a2f8d.jpg","comment_is_top":false,"comment_ctime":1548569521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10138504113","product_id":100013101,"comment_content":"go get -u 包含下载和更新两个含义","like_count":2},{"had_liked":false,"id":45053,"user_name":"竹真","can_delete":false,"product_type":"c1","uid":1333642,"ip_address":"","ucode":"451C7393CBCA80","user_header":"https://static001.geekbang.org/account/avatar/00/14/59/8a/82587883.jpg","comment_is_top":false,"comment_ctime":1543541567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133476159","product_id":100013101,"comment_content":"代码包的名称一般会与这些源码文件所在的目录同名。当不同的时候应该以目录为准吧","like_count":2},{"had_liked":false,"id":30479,"user_name":"乘坐Tornado的线程魔法师","can_delete":false,"product_type":"c1","uid":1132661,"ip_address":"","ucode":"C4C9915866E769","user_header":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","comment_is_top":false,"comment_ctime":1538882772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10128817364","product_id":100013101,"comment_content":"文中第一节写到“如果不同名，则在安装、构建的过程中以代码包的名字为准” 请作者帮忙再确认下，因为我查阅了中英文的资料，都显示go install和go build时都已实际文件目录的路径为准，而不是package name","like_count":2},{"had_liked":false,"id":22103,"user_name":"阿尔特纳晨风","can_delete":false,"product_type":"c1","uid":1045003,"ip_address":"","ucode":"64089C621B3B8E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/0b/810875aa.jpg","comment_is_top":false,"comment_ctime":1535500215,"is_pvip":false,"replies":[{"id":"7953","content":"你好，module什么时候会取代gopath现在还不好说，至少明年春节前gopath还会是主流。我也许会在专栏的最后说明一下module吧。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535514265,"ip_address":"","comment_id":22103,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10125434807","product_id":100013101,"comment_content":"老师您好，近日golang 1.11 正式发版了，有着两个重要的特性：modules 和 WebAssembly，请问modules是要取代GOPATH吗？专栏会涉及这些新特性吗？谢谢","like_count":2,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423001,"discussion_content":"你好，module什么时候会取代gopath现在还不好说，至少明年春节前gopath还会是主流。我也许会在专栏的最后说明一下module吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535514265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19652,"user_name":"信天游","can_delete":false,"product_type":"c1","uid":1046101,"ip_address":"","ucode":"4B46403E169499","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/55/1065fce8.jpg","comment_is_top":false,"comment_ctime":1533948052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10123882644","product_id":100013101,"comment_content":"我的理解是归档文件用来加速编译的，编译成二进制之后就用不上了。二进制的执行是不依赖归档文件的，","like_count":2},{"had_liked":false,"id":19650,"user_name":"信天游","can_delete":false,"product_type":"c1","uid":1046101,"ip_address":"","ucode":"4B46403E169499","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/55/1065fce8.jpg","comment_is_top":false,"comment_ctime":1533947301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10123881893","product_id":100013101,"comment_content":"归档文件内容是静态库的话，内容会包含在二进制文件里面吗？<br>二进制文件执行是不依赖归档文件。","like_count":2},{"had_liked":false,"id":19623,"user_name":"知夫","can_delete":false,"product_type":"c1","uid":1198257,"ip_address":"","ucode":"A99C470AC85D1E","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/b1/7214b986.jpg","comment_is_top":false,"comment_ctime":1533910315,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10123844907","product_id":100013101,"comment_content":"如果说有go build,go run,go clean等命令来构建，运行和清理，那有没有go creat之类的命令来创建一个工程目录呢？我看似乎好像没有","like_count":2,"discussions":[{"author":{"id":1020529,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/71/9fd7cd7a.jpg","nickname":"Daniel","note":"","ucode":"282E09B3146501","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":117442,"discussion_content":"Zookeeper 里面是用 create &#34;Nodename&#34; 来创建一个 znode 节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578116184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19539,"user_name":"Diviner.","can_delete":false,"product_type":"c1","uid":1118039,"ip_address":"","ucode":"C8AD1E696B42FA","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/57/f65f059f.jpg","comment_is_top":false,"comment_ctime":1533870658,"is_pvip":false,"replies":[{"id":"6740","content":"请置顶的留言。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1533873090,"ip_address":"","comment_id":19539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10123805250","product_id":100013101,"comment_content":"求解释什么叫归档文件","like_count":2,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421885,"discussion_content":"请置顶的留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533873090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19498,"user_name":"MagicPeng","can_delete":false,"product_type":"c1","uid":1205266,"ip_address":"","ucode":"4C0791B474FECA","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/12/d7385bb3.jpg","comment_is_top":false,"comment_ctime":1533863445,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10123798037","product_id":100013101,"comment_content":"同问归档文件","like_count":2},{"had_liked":false,"id":19492,"user_name":"saiyn","can_delete":false,"product_type":"c1","uid":1135770,"ip_address":"","ucode":"99D61992C3FF7D","user_header":"https://static001.geekbang.org/account/avatar/00/11/54/9a/5d8c349e.jpg","comment_is_top":false,"comment_ctime":1533862630,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10123797222","product_id":100013101,"comment_content":"归档文件就是archive文件，也就是常见的.a文件，实际上就是将多个源码文件编译生成的目标文件（.o）打包归档成一份.a文件","like_count":2},{"had_liked":false,"id":269016,"user_name":"风清扬","can_delete":false,"product_type":"c1","uid":1047043,"ip_address":"","ucode":"651F1390B64953","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/03/619e3e48.jpg","comment_is_top":false,"comment_ctime":1608473187,"is_pvip":true,"replies":[{"id":"97615","content":"这是哪位老师的？","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1608533290,"ip_address":"","comment_id":269016,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5903440483","product_id":100013101,"comment_content":"老师的这篇文章言简意赅，我看到一篇博客非常不错，有兴趣的朋友可以看下。<br>http:&#47;&#47;52coder.net&#47;post&#47;gopath","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512115,"discussion_content":"这是哪位老师的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608533290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253710,"user_name":"Fan","can_delete":false,"product_type":"c1","uid":1115232,"ip_address":"","ucode":"3BF28670FD9407","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","comment_is_top":false,"comment_ctime":1602839848,"is_pvip":false,"replies":[{"id":"92718","content":"在这里：src&#47;cmd","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1602905560,"ip_address":"","comment_id":253710,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5897807144","product_id":100013101,"comment_content":"Go 语言标准库中go build包及其子包的源码在哪个目录下，能给下路径说明。谢谢。","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507152,"discussion_content":"在这里：src/cmd","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602905560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209542,"user_name":"树心","can_delete":false,"product_type":"c1","uid":1589523,"ip_address":"","ucode":"6C329F0FF798B9","user_header":"https://static001.geekbang.org/account/avatar/00/18/41/13/ab14ad25.jpg","comment_is_top":false,"comment_ctime":1587565240,"is_pvip":true,"replies":[{"id":"78234","content":"是的。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1587610398,"ip_address":"","comment_id":209542,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5882532536","product_id":100013101,"comment_content":"请问老师“进一步说，如果安装的是库源码文件，那么结果文件会被搬运到它所在工作区的 pkg 目录下的某个子目录中。”这句话中的结果文件就是.a文件吗？安装库源码文件的意思就是go install+代码包路径？","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492827,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587610398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167816,"user_name":"Adam","can_delete":false,"product_type":"c1","uid":1305633,"ip_address":"","ucode":"338BA720880E4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/21/b0fe1bfd.jpg","comment_is_top":false,"comment_ctime":1577942005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872909301","product_id":100013101,"comment_content":"老师讲的内容是挺有深度，就是初学者看着会比较吃力。","like_count":1},{"had_liked":false,"id":166749,"user_name":"恒","can_delete":false,"product_type":"c1","uid":1225966,"ip_address":"","ucode":"68F64BF1460D8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/b4/ee/c3ff8615.jpg","comment_is_top":false,"comment_ctime":1577586312,"is_pvip":false,"replies":[{"id":"63867","content":"对，差不多。其实 .a 文件有时候就是多个 .o 文件的集合。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1577599504,"ip_address":"","comment_id":166749,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872553608","product_id":100013101,"comment_content":"老师，这个.a文件，是不是和c程序编译和汇编后的.o文件差不多？","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479614,"discussion_content":"对，差不多。其实 .a 文件有时候就是多个 .o 文件的集合。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577599504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165635,"user_name":"Ben","can_delete":false,"product_type":"c1","uid":1252353,"ip_address":"","ucode":"70351D4FAE47F7","user_header":"https://static001.geekbang.org/account/avatar/00/13/1c/01/5aaaf5b6.jpg","comment_is_top":false,"comment_ctime":1577274690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872241986","product_id":100013101,"comment_content":".net 为例, 库源码文件编译后产生的是.dll。命令源码文件编译得到的是.exe.<br>库就是lib, 是实现某项功能的代码的集合, 用来缩小程序的规模, 实现解耦和重用","like_count":1},{"had_liked":false,"id":143247,"user_name":"手ca口袋","can_delete":false,"product_type":"c1","uid":1647076,"ip_address":"","ucode":"5729887E8EF8C3","user_header":"","comment_is_top":false,"comment_ctime":1571655199,"is_pvip":false,"replies":[{"id":"55396","content":"对的。工作区目录的内部结构是固定的，src、pkg、bin。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1571718234,"ip_address":"","comment_id":143247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866622495","product_id":100013101,"comment_content":"go语言在查找GOPATH路径的时候，会自动加上src目录，比如设置的GOPATH是“&#47;Users&#47;username&#47;workspace&#47;go”, 那么在搜索包的时候，会自动变成“&#47;Users&#47;username&#47;workspace&#47;go&#47;src&#47;”, 然后在src目录下的各个目录中搜索对应的包，所以我们的工程只要是放在GOAPATH&#47;src目录下，那在工程中就能找到。不知道这个理解对吗？","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471446,"discussion_content":"对的。工作区目录的内部结构是固定的，src、pkg、bin。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571718234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":86877,"user_name":"浩","can_delete":false,"product_type":"c1","uid":1394346,"ip_address":"","ucode":"BD7FE280C83152","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKoGnC6068nQia1bOiaPxMRmkOQsaDsw5ib2drXic4gKOLzIFyZnnFm4uJ6KniboKG1nQD3J15y4d3QxLA/132","comment_is_top":false,"comment_ctime":1555469780,"is_pvip":false,"replies":[{"id":"31233","content":"这是操作系统和编程方面的基础知识。`.a`文件属于静态链接库文件。Go语言的链接器可以把相关的静态库链接在一起，从而生成最终的可执行文件。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1555470911,"ip_address":"","comment_id":86877,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5850437076","product_id":100013101,"comment_content":"研究了半天，这个归档文件有什么作用呢，安装之后产生.a文件，但是这个归档文件在程序中怎么使用呢<br>","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447225,"discussion_content":"这是操作系统和编程方面的基础知识。`.a`文件属于静态链接库文件。Go语言的链接器可以把相关的静态库链接在一起，从而生成最终的可执行文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555470911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78897,"user_name":"Braem","can_delete":false,"product_type":"c1","uid":1450434,"ip_address":"","ucode":"45DA88A9BACF6F","user_header":"https://static001.geekbang.org/account/avatar/00/16/21/c2/6daedc51.jpg","comment_is_top":false,"comment_ctime":1553271360,"is_pvip":false,"replies":[{"id":"28870","content":"你可以认为，静态文件是你编写的可执行程序的一部分，或者是你编写的程序库的一种形式。它可以被其他代码包中的代码调用，以形成更大的程序。程序其实就是靠这样一层一层的垒起来的，最终实现所有的既定功能。这么说你能理解么？","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1553397698,"ip_address":"","comment_id":78897,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848238656","product_id":100013101,"comment_content":"想知道你说的归档文件为静态库文件，想知道的是静态链接文件，整个工程中是发挥什么作用的，就是干吗用的","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444279,"discussion_content":"你可以认为，静态文件是你编写的可执行程序的一部分，或者是你编写的程序库的一种形式。它可以被其他代码包中的代码调用，以形成更大的程序。程序其实就是靠这样一层一层的垒起来的，最终实现所有的既定功能。这么说你能理解么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553397698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76651,"user_name":"佳","can_delete":false,"product_type":"c1","uid":1334190,"ip_address":"","ucode":"482C90C3DC17DB","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/ae/3d639ea4.jpg","comment_is_top":false,"comment_ctime":1552657130,"is_pvip":false,"replies":[{"id":"28878","content":"随着go modules的普及，公共镜像和私有镜像也很快会就位的。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1553399098,"ip_address":"","comment_id":76651,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5847624426","product_id":100013101,"comment_content":"Java,nodejs可以通过私有仓库加速度，golang自动化构建打镜像加速度，比较麻烦","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443390,"discussion_content":"随着go modules的普及，公共镜像和私有镜像也很快会就位的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553399098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350608,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9b/d0/86aee34c.jpg","nickname":"刘凯","note":"","ucode":"EFDC932CAE61A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321575,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604590735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63872,"user_name":"火腿","can_delete":false,"product_type":"c1","uid":1308116,"ip_address":"","ucode":"40F17DBC18F5D5","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/d4/5a0a2f8d.jpg","comment_is_top":false,"comment_ctime":1548568812,"is_pvip":false,"replies":[{"id":"25248","content":"工作区可以有多个，放不同类型的项目。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1551181270,"ip_address":"","comment_id":63872,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843536108","product_id":100013101,"comment_content":"另一个项目都有一个工作区对吧？","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437742,"discussion_content":"工作区可以有多个，放不同类型的项目。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551181270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61140,"user_name":"一梦三四年","can_delete":false,"product_type":"c1","uid":1309156,"ip_address":"","ucode":"BFFB84088E5E3C","user_header":"https://static001.geekbang.org/account/avatar/00/13/f9/e4/1bdea4b6.jpg","comment_is_top":false,"comment_ctime":1547626001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842593297","product_id":100013101,"comment_content":"问题1的执行顺序是 ： GOROOT+包地址 ----- 不同的GOPATH + 包地址 查找<br>问题2： 不会执行多次，只会在第一次引入<br>","like_count":1},{"had_liked":false,"id":20971,"user_name":"夏姬八起","can_delete":false,"product_type":"c1","uid":1201276,"ip_address":"","ucode":"9A18E769ACEB06","user_header":"https://static001.geekbang.org/account/avatar/00/12/54/7c/5e15008d.jpg","comment_is_top":false,"comment_ctime":1534845689,"is_pvip":false,"replies":[{"id":"7409","content":"只要设置了gobin，命令源码文件就会总安装到那里了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534909471,"ip_address":"","comment_id":20971,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829812985","product_id":100013101,"comment_content":"如果安装的是命令源码文件，那么结果文件会被搬运到它所在工作区的 bin 目录中，或者环境变量GOBIN指向的目录中。  老师为什么我的main.go每次install都在gobin的目录下 而不是在工作区的bin路径下","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422474,"discussion_content":"只要设置了gobin，命令源码文件就会总安装到那里了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534909471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20599,"user_name":"无限可能的报废龙","can_delete":false,"product_type":"c1","uid":1197679,"ip_address":"","ucode":"44FEBB74EA8FBE","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/6f/c72c6219.jpg","comment_is_top":false,"comment_ctime":1534577261,"is_pvip":false,"replies":[{"id":"7247","content":"对于命令，你构建完了不是一般还要运行下看看嘛，所以得放在你目录里便于你运行啊。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534660337,"ip_address":"","comment_id":20599,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5829544557","product_id":100013101,"comment_content":"构建的存在意义就是检查和校验吗，因为我看构建和安装都会生成一个可执行文件，只不过安装的可执行文件被搬运到了工作区bin下，然后库结果文件一个是临时目录，一个是pkg下","like_count":1,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422324,"discussion_content":"对于命令，你构建完了不是一般还要运行下看看嘛，所以得放在你目录里便于你运行啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534660337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19764,"user_name":"zjhiphop","can_delete":false,"product_type":"c1","uid":1007091,"ip_address":"","ucode":"F4B8FF50364214","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/f3/e12aee93.jpg","comment_is_top":false,"comment_ctime":1534048169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5829015465","product_id":100013101,"comment_content":"大概能够理解，如果能够加一些结构图流程图就更清晰了","like_count":1},{"had_liked":false,"id":19661,"user_name":"罗罗","can_delete":false,"product_type":"c1","uid":1202791,"ip_address":"","ucode":"43F3403300597A","user_header":"https://static001.geekbang.org/account/avatar/00/12/5a/67/b01d0f41.jpg","comment_is_top":false,"comment_ctime":1533950863,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5828918159","product_id":100013101,"comment_content":"如果能有视频最就好了","like_count":1},{"had_liked":false,"id":19476,"user_name":"阿神","can_delete":false,"product_type":"c1","uid":1014761,"ip_address":"","ucode":"E34BA27C101E9F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/e9/5955aa73.jpg","comment_is_top":false,"comment_ctime":1533861051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5828828347","product_id":100013101,"comment_content":"go用什么ide比较多","like_count":1},{"had_liked":false,"id":354067,"user_name":"thomas","can_delete":false,"product_type":"c1","uid":1016777,"ip_address":"广东","ucode":"9AB945308F1B50","user_header":"https://static001.geekbang.org/account/avatar/00/0f/83/c9/5d03981a.jpg","comment_is_top":false,"comment_ctime":1660055968,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660055968","product_id":100013101,"comment_content":"安装操作会先执行构建，然后还会进行链接操作，并且把结果文件搬运到指定目录。<br>------------------&gt;&gt;<br>构建的过程就是生产可执行目标文件，其中也包含链接操作呀。go build 和 go install都有链接的过程","like_count":0},{"had_liked":false,"id":351145,"user_name":"李刚","can_delete":false,"product_type":"c1","uid":1424487,"ip_address":"","ucode":"BFA253F932F01B","user_header":"https://static001.geekbang.org/account/avatar/00/15/bc/67/2e19e8ef.jpg","comment_is_top":false,"comment_ctime":1657548747,"is_pvip":false,"replies":[{"id":"127814","content":"运行 go build 的时候加 -x 看看它都干了什么","user_name":"作者回复","user_name_real":"编辑","uid":"1026643","ctime":1657777544,"ip_address":"","comment_id":351145,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657548747","product_id":100013101,"comment_content":"是用go.mod作为包管理工具。go1.18.3编译，默认没有开始泛型编译。确认go.mod所有依赖都下载到本地了。<br>但是公司网络下，突然编译会卡20多秒，持续了几个小时。。到了晚上又很快了。这是为啥呢。","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579928,"discussion_content":"运行 go build 的时候加 -x 看看它都干了什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657777544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349519,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1656038424,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656038424","product_id":100013101,"comment_content":"go mod init xxx<br>go get xxxx","like_count":0},{"had_liked":false,"id":346681,"user_name":"棒棒","can_delete":false,"product_type":"c1","uid":2907819,"ip_address":"","ucode":"8F11693C8DBB00","user_header":"https://static001.geekbang.org/account/avatar/00/2c/5e/ab/d474a089.jpg","comment_is_top":false,"comment_ctime":1653359586,"is_pvip":true,"replies":[{"id":"126629","content":"是的，谢谢纠正。","user_name":"作者回复","user_name_real":"编辑","uid":"1026643","ctime":1653891917,"ip_address":"","comment_id":346681,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1653359586","product_id":100013101,"comment_content":"“我们需要利于这些工作区，去放置 Go 语言的源码文件（source file），以及安装（install）后的归档文件（archive file，也就是以“.a”为扩展名的文件）和可执行文件（executable file）。”这里有个错字，应该是 利用 吧？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574186,"discussion_content":"是的，谢谢纠正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653891917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323704,"user_name":"jxs1211","can_delete":false,"product_type":"c1","uid":1101006,"ip_address":"","ucode":"B7F1F2D84389E7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKELX1Rd1vmLRWibHib8P95NA87F4zcj8GrHKYQL2RcLDVnxNy1ia2geTWgW6L2pWn2kazrPNZMRVrIg/132","comment_is_top":false,"comment_ctime":1638107956,"is_pvip":false,"replies":[{"id":"117516","content":"你这个包名明显有问题啊，不要与关键字和内置类型名称重复。","user_name":"作者回复","user_name_real":"编辑","uid":"1026643","ctime":1638165456,"ip_address":"","comment_id":323704,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1638107956","product_id":100013101,"comment_content":"请问使用go mod构建项目测试官网的教程，发现最后一行执行hello报错，检查了go mod构建项目的包依赖导入路径，好像没有问题，不知道为何原因：<br>root ➜ &#47;workspaces&#47;gocode&#47;github.com $ tree<br>.<br>└── nf<br>    ├── go.mod<br>    ├── hello<br>    │   └── hello.go<br>    └── string<br>        └── string.go<br><br>3 directories, 3 files<br>root ➜ &#47;workspaces&#47;gocode&#47;github.com $ ls -al<br>total 12<br>drwxr-xr-x 3 root root 4096 Nov 28 12:44 .<br>drwxr-xr-x 3 root root 4096 Nov 28 13:39 ..<br>drwxr-xr-x 4 root root 4096 Nov 28 13:40 nf<br><br>root ➜ &#47;workspaces&#47;gocode&#47;github.com $ cd nf&#47;<br>root ➜ &#47;workspaces&#47;gocode&#47;github.com&#47;nf $ cat go.mod <br>module github.com<br><br>go 1.17<br>root ➜ &#47;workspaces&#47;gocode&#47;github.com&#47;nf $ cat hello&#47;hello.go <br>package main<br><br>import (<br>        &quot;fmt&quot;<br>        &quot;github.com&#47;nf&#47;string&quot;<br>}<br><br>func main(){<br>        fmt.Println(string.Reverse(&quot;Hello, new gopher!&quot;))<br>}<br>root ➜ &#47;workspaces&#47;gocode&#47;github.com&#47;nf $ cat string&#47;string.go <br>package string<br><br>func Reverse(s string) string{<br>        b := []byte(s)<br>        for i :=0; i &lt; len(b)&#47;2; i++ {<br>                j := len(b)-i-1<br>                tmp := b[i]<br>                b[i] = b[j]<br>                b[j] = tmp<br>        }<br>        return string(b)<br>}<br><br>root ➜ &#47;workspaces&#47;gocode&#47;github.com&#47;nf $ cd hello&#47;<br>root ➜ ...&#47;gocode&#47;github.com&#47;nf&#47;hello $ go run hello.go <br>hello.go:6:1: expected &#39;STRING&#39;, found &#39;}&#39;<br>root ➜ ...&#47;gocode&#47;github.com&#47;nf&#47;hello $ ","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534331,"discussion_content":"你这个包名明显有问题啊，不要与关键字和内置类型名称重复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638165456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101006,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKELX1Rd1vmLRWibHib8P95NA87F4zcj8GrHKYQL2RcLDVnxNy1ia2geTWgW6L2pWn2kazrPNZMRVrIg/132","nickname":"jxs1211","note":"","ucode":"B7F1F2D84389E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534454,"discussion_content":"把string改成lib1问题仍旧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638193216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321288,"user_name":"鲲鹏飞九万里","can_delete":false,"product_type":"c1","uid":1093920,"ip_address":"","ucode":"82BD0C789DF612","user_header":"https://static001.geekbang.org/account/avatar/00/10/b1/20/8718252f.jpg","comment_is_top":false,"comment_ctime":1636756646,"is_pvip":false,"replies":[{"id":"116776","content":"代码包其实就是一个包含了若干源码文件的目录。<br><br>这种目录必须处在系统环境变量GOPATH所指定的目录的src子目录中，或者go命令可正确识别Go项目目录（也就是直接包含了有效的go.mod文件的目录）当中，才是算得上是Go代码包，才是有效的。<br><br>用一个代码包中的源码文件的package语句都必须相同（也就是它们都必须声明自己属于同一个代码包）。<br><br>文中的“Go的源码”通常指的是Go语言本身的源码。Go的安装包中一般会包含Go的源码。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1636946072,"ip_address":"","comment_id":321288,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636756646","product_id":100013101,"comment_content":"文中提到的代码包，是啥意思？Go的源码，指的是Go安装文件吗，还是指Go项目","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530263,"discussion_content":"代码包其实就是一个包含了若干源码文件的目录。\n\n这种目录必须处在系统环境变量GOPATH所指定的目录的src子目录中，或者go命令可正确识别Go项目目录（也就是直接包含了有效的go.mod文件的目录）当中，才是算得上是Go代码包，才是有效的。\n\n用一个代码包中的源码文件的package语句都必须相同（也就是它们都必须声明自己属于同一个代码包）。\n\n文中的“Go的源码”通常指的是Go语言本身的源码。Go的安装包中一般会包含Go的源码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636946072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321216,"user_name":"郝林","can_delete":false,"product_type":"c1","uid":1026643,"ip_address":"","ucode":"F66BA62BA56FFA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","comment_is_top":false,"comment_ctime":1636711495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636711495","product_id":100013101,"comment_content":"最近有些同学问了我关于“Go模块管理”和“代码执行失败”的问题，具体涉及到 GOPATH 和 go mod，我在这里统一地解答一下（公众号文章）：https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;yk6iXZo_1jfG2LaCerXYXw","like_count":0},{"had_liked":false,"id":319682,"user_name":"张晓梅","can_delete":false,"product_type":"c1","uid":2834541,"ip_address":"","ucode":"AD13E77EE969F2","user_header":"https://static001.geekbang.org/account/avatar/00/2b/40/6d/540e9a05.jpg","comment_is_top":false,"comment_ctime":1635908190,"is_pvip":false,"replies":[{"id":"115849","content":"简单了解一下就好了，没必要深究了。<br><br>这个专栏的示例项目前两天也适配了 go module 。如果你们也有遗留项目，可以参考这个示例项目的做法。<br><br>很简单，一个命令基本上就可以搞定：在原项目的 src 目录中执行 go mod init 命令。而且具体依赖问题一般也不难处理。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1635919617,"ip_address":"","comment_id":319682,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635908190","product_id":100013101,"comment_content":"老师，现在新版的go有了go module，是不是已经不需要了解GOPATH了。","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529722,"discussion_content":"简单了解一下就好了，没必要深究了。\n\n这个专栏的示例项目前两天也适配了 go module 。如果你们也有遗留项目，可以参考这个示例项目的做法。\n\n很简单，一个命令基本上就可以搞定：在原项目的 src 目录中执行 go mod init 命令。而且具体依赖问题一般也不难处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635919617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319564,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1635851089,"is_pvip":false,"replies":[{"id":"115850","content":"你在哪里听到的？怎么会没有子包的概念呢？看过Go语言规范了没有？a&#47;b&#47;c 难道不是 a&#47;b 的子包吗？那命令 go install a&#47;b&#47;... 又是什么意思呢？ ","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1635919786,"ip_address":"","comment_id":319564,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1635851089","product_id":100013101,"comment_content":"老师：“由于目录可以有子目录，所以代码包也可以有子包。”  这句话表述错了，Go中其实没有子包的概念，不知道什么时候可以删除这段话呢？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529674,"discussion_content":"你在哪里听到的？怎么会没有子包的概念呢？看过Go语言规范了没有？a/b/c 难道不是 a/b 的子包吗？那命令 go install a/b/... 又是什么意思呢？ ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635919786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411399,"discussion_content":"我在Tony bai 老师的极客时间go入门课中看到的这个说法，说go没有子包的概念。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635920868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1079495,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","nickname":"新世界","note":"","ucode":"4473DC1505F158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549232,"discussion_content":"哈哈😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643757503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411399,"ip_address":""},"score":549232,"extra":""}]}]},{"had_liked":false,"id":315185,"user_name":"郑子铭","can_delete":false,"product_type":"c1","uid":1522123,"ip_address":"","ucode":"850701A6286B24","user_header":"https://static001.geekbang.org/account/avatar/00/17/39/cb/5fad74b5.jpg","comment_is_top":false,"comment_ctime":1633745549,"is_pvip":false,"replies":[{"id":"114148","content":"收到，我已经通知极客时间的编辑进行修改，谢谢！","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1633771594,"ip_address":"","comment_id":315185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1633745549","product_id":100013101,"comment_content":"生成的归档文件的相对目录就是 github.com&#47;labstack， 文件名为 echo.a。链接多了一个逗号，会导致跳转到github返回404，找不到页面","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527895,"discussion_content":"收到，我已经通知极客时间的编辑进行修改，谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633771594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307268,"user_name":"本来是亚","can_delete":false,"product_type":"c1","uid":1073592,"ip_address":"","ucode":"14527E5BC3C2A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/b8/7b23f8cb.jpg","comment_is_top":false,"comment_ctime":1628996363,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1628996363","product_id":100013101,"comment_content":"1、应该是按照GOPATH的顺序查找<br>2、不会冲突，按顺序查找到第一个","like_count":0},{"had_liked":false,"id":306280,"user_name":"自由","can_delete":false,"product_type":"c1","uid":2576960,"ip_address":"","ucode":"4E3B53D29D86CA","user_header":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","comment_is_top":false,"comment_ctime":1628484376,"is_pvip":false,"replies":[{"id":"110939","content":"go mod 采用新的方式，相当于在 go.mod 文件所在的目录建立了“工作区”。其实这是一种更加灵活的方式没建议选择使用。因为每个Go项目实际上都需要独立的依赖管理。这比以单台计算机为单位进行依赖管理要好，因为各个Go项目的依赖会不同，可能会出现冲突的情况。<br><br>如果你想回归传统工作区的方式，那么可以设置一个环境变量：<br><br>go env -w GO111MODULE=auto<br><br>不过，这个环境变量预计会在 Go 1.17 以及之后的版本中废弃掉，届时传统工作区的方式也会被废弃。<br>","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1628563055,"ip_address":"","comment_id":306280,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1628484376","product_id":100013101,"comment_content":"老师您好，看了之后本章节内容后，我将我的工作区进行了区分，大致如下：<br>&#47;Users&#47;go<br>├── workspace1<br>│   ├── src<br>├── github.com<br>│   ├── bin<br>│   └── pkg<br>├── workspace2<br>│   ├── src<br>├── xxx.com<br>│   ├── bin<br>│   └── pkg<br><br>但是通过 go mod tidy 后，他在 worksapce 同级创建了 pkg&#47;mod&#47;，管理了依赖，并没有像我的预期，在 worksapce&#47;pkg&#47; 下完成每个工作区特定的依赖，请问问题在哪？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524701,"discussion_content":"go mod 采用新的方式，相当于在 go.mod 文件所在的目录建立了“工作区”。其实这是一种更加灵活的方式没建议选择使用。因为每个Go项目实际上都需要独立的依赖管理。这比以单台计算机为单位进行依赖管理要好，因为各个Go项目的依赖会不同，可能会出现冲突的情况。\n\n如果你想回归传统工作区的方式，那么可以设置一个环境变量：\n\ngo env -w GO111MODULE=auto\n\n不过，这个环境变量预计会在 Go 1.17 以及之后的版本中废弃掉，届时传统工作区的方式也会被废弃。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628563055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2576960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","nickname":"自由","note":"","ucode":"4E3B53D29D86CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388144,"discussion_content":"明白了，谢谢老师，我会继续实践与了解 go mod 的使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628608975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292926,"user_name":"Geek_be8042","can_delete":false,"product_type":"c1","uid":1750066,"ip_address":"","ucode":"030F3FC4861CC3","user_header":"","comment_is_top":false,"comment_ctime":1621083221,"is_pvip":false,"replies":[{"id":"106102","content":"你在gopath里是不是设置了多个目录？","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1621229619,"ip_address":"","comment_id":292926,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621083221","product_id":100013101,"comment_content":"配置了 gopath 还是找不见引用，报错是不能从goroot中找到包","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520014,"discussion_content":"你在gopath里是不是设置了多个目录？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621229619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273985,"user_name":"南琛一梦","can_delete":false,"product_type":"c1","uid":1030082,"ip_address":"","ucode":"6338D5428DB2B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/c2/196932c7.jpg","comment_is_top":false,"comment_ctime":1610779345,"is_pvip":false,"replies":[{"id":"99495","content":"如果完全是从0开始，向从头学习编程，那么可以看我写的新书《Julia编程基础》。如果是想从0开始学习Go语言，那么可以先看看Go语言官方的文档，或者看我写的书《Go并发编程实战》中的基础部分。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1610872034,"ip_address":"","comment_id":273985,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1610779345","product_id":100013101,"comment_content":"从0开始的小白，很多点体会不到，不是那么通俗易懂。","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513884,"discussion_content":"如果完全是从0开始，向从头学习编程，那么可以看我写的新书《Julia编程基础》。如果是想从0开始学习Go语言，那么可以先看看Go语言官方的文档，或者看我写的书《Go并发编程实战》中的基础部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610872034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":269656,"user_name":"诗翔","can_delete":false,"product_type":"c1","uid":2384450,"ip_address":"","ucode":"0B7D3FE93B7B3D","user_header":"https://static001.geekbang.org/account/avatar/00/24/62/42/a91bf9ca.jpg","comment_is_top":false,"comment_ctime":1608728767,"is_pvip":false,"replies":[{"id":"97845","content":"简单一点的话，可以用vendor目录来做。不过现在已经可以用go mod命令完美解决了，详见这篇文章：https:&#47;&#47;www.infoq.cn&#47;article&#47;CEoMOxgW4X7GCYr4eUEi （其中的一部分介绍了go mod）","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1608819188,"ip_address":"","comment_id":269656,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608728767","product_id":100013101,"comment_content":"如果多个工作区需要不同版本的依赖包怎么处理依赖的呢？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512347,"discussion_content":"简单一点的话，可以用vendor目录来做。不过现在已经可以用go mod命令完美解决了，详见这篇文章：https://www.infoq.cn/article/CEoMOxgW4X7GCYr4eUEi （其中的一部分介绍了go mod）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608819188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251560,"user_name":"Cha","can_delete":false,"product_type":"c1","uid":1080389,"ip_address":"","ucode":"BE28533F67F0F5","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/45/416fe519.jpg","comment_is_top":false,"comment_ctime":1601689060,"is_pvip":false,"replies":[{"id":"92078","content":"GO111MODULE 就不要用了。另外，go mod 已经很好用了吗？我没觉得已经足够好用了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1601997138,"ip_address":"","comment_id":251560,"utype":1}],"discussion_count":1,"race_medal":4,"score":"1601689060","product_id":100013101,"comment_content":"有了go mod之后，GOPATH这个是不是可以废弃了，然后go install之类的也不需要了。或者是开启了GO111MODULE=on，就与GOPATH冲突了。","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506542,"discussion_content":"GO111MODULE 就不要用了。另外，go mod 已经很好用了吗？我没觉得已经足够好用了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601997138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226483,"user_name":"Geek_b93edf","can_delete":false,"product_type":"c1","uid":2038856,"ip_address":"","ucode":"DD0C362D29C359","user_header":"","comment_is_top":false,"comment_ctime":1592119738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592119738","product_id":100013101,"comment_content":"怎么没有GC讲解","like_count":0},{"had_liked":false,"id":157546,"user_name":"犯二的哈士奇","can_delete":false,"product_type":"c1","uid":1001940,"ip_address":"","ucode":"F332A09CE2AE09","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/d4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1575191081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575191081","product_id":100013101,"comment_content":"golang 入门的重点讲得很好，虽然我写golang 一段时间了， 对于这些基础知识， 却没有关注过。 ","like_count":0},{"had_liked":false,"id":143243,"user_name":"手ca口袋","can_delete":false,"product_type":"c1","uid":1647076,"ip_address":"","ucode":"5729887E8EF8C3","user_header":"","comment_is_top":false,"comment_ctime":1571654805,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571654805","product_id":100013101,"comment_content":"“GOPATH 与工作区” 那张图是不是有点问题啊，我的工程目录结构：<br>gopath<br>    --mydemo1<br>        --src<br>    --mydemo2<br>        --src<br>如果是这种目录结构，在src中导入包发现找不到<br><br>所以我的理解是这样的目录结构才正确，不知道我是不是哪里理解错了：<br>gopath<br>    --src<br>        --mydemo1<br>        --mydemo2<br>","like_count":0,"discussions":[{"author":{"id":1281460,"avatar":"https://static001.geekbang.org/account/avatar/00/13/8d/b4/ff82483d.jpg","nickname":"邵俊达","note":"","ucode":"4B7DACE6DBCF95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260029,"discussion_content":"嗯，我也有相同的疑问。感觉顶层是 src 然后才是工程目录吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588841002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131933,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1567987155,"is_pvip":false,"replies":[{"id":"50624","content":"构建中包含了编译和链接。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1568095248,"ip_address":"","comment_id":131933,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567987155","product_id":100013101,"comment_content":"构建命令源码文件时不执行链接吗？也就是生成的相当于C语言中的目标文件而不是可执行文件？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466683,"discussion_content":"构建中包含了编译和链接。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568095248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124117,"user_name":"风无痕","can_delete":false,"product_type":"c1","uid":1205958,"ip_address":"","ucode":"C9C2E05A229043","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/c6/df252212.jpg","comment_is_top":false,"comment_ctime":1565828194,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565828194","product_id":100013101,"comment_content":"gopath相当于Java下IDE的工作空间，比如eclipse的workspace<br>工作空间相当于我们的项目名，<br>然后里面目录结构就跟各个语言以及构建工具相关了，基本上算是约定俗成，都有自己的目录结构样式，比如Java的maven项目","like_count":0},{"had_liked":false,"id":124116,"user_name":"风无痕","can_delete":false,"product_type":"c1","uid":1205958,"ip_address":"","ucode":"C9C2E05A229043","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/c6/df252212.jpg","comment_is_top":false,"comment_ctime":1565828193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565828193","product_id":100013101,"comment_content":"gopath相当于Java下IDE的工作空间，比如eclipse的workspace<br>工作空间相当于我们的项目名，<br>然后里面目录结构就跟各个语言以及构建工具相关了，基本上算是约定俗成，都有自己的目录结构样式，比如Java的maven项目","like_count":0},{"had_liked":false,"id":114499,"user_name":"Krysta","can_delete":false,"product_type":"c1","uid":1343943,"ip_address":"","ucode":"4F8734401BDD4E","user_header":"https://static001.geekbang.org/account/avatar/00/14/81/c7/cf36f3cc.jpg","comment_is_top":false,"comment_ctime":1563325536,"is_pvip":false,"replies":[{"id":"41926","content":"没有限制。<br><br>但是，如果你的版本是 Go 1.12，并且用了 go module 的话，情况会有所不同。也就是说，你在一个 go module 项目目录下 go get 的包不会下载到 GOPATH 的第一个工作区。如果你没有用 go module，可以忽略我这段话。<br><br>如果两个工作区中有相同的包，那么那个工作区在前就会用哪一个。我在文中是打个比方，有时候（复制或者工作区顺序变化或者工作区被单独设定过）会出现这种情况。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1563419567,"ip_address":"","comment_id":114499,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563325536","product_id":100013101,"comment_content":"我试了一下，go get 会将包下载到第一个工作区，但是我在第二个工作区import不到。是有什么限制吗？还有就是所有的go get都会把包下载到第一个工作区，那么其他工作区又怎么会有相同路径的包呢？是复制过去的吗","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458690,"discussion_content":"没有限制。\n\n但是，如果你的版本是 Go 1.12，并且用了 go module 的话，情况会有所不同。也就是说，你在一个 go module 项目目录下 go get 的包不会下载到 GOPATH 的第一个工作区。如果你没有用 go module，可以忽略我这段话。\n\n如果两个工作区中有相同的包，那么那个工作区在前就会用哪一个。我在文中是打个比方，有时候（复制或者工作区顺序变化或者工作区被单独设定过）会出现这种情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563419567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100651,"user_name":"macduan","can_delete":false,"product_type":"c1","uid":1285443,"ip_address":"","ucode":"ADD336188E0475","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITlNribaktBJVQceASiax0tfkGMYjnRybmBVouBv9JpWxQaj6cpLvsicLo3hltmEI9Vva0HMCaI68Ew/132","comment_is_top":false,"comment_ctime":1559610704,"is_pvip":false,"replies":[{"id":"36280","content":"在每个工作区中，源码都要放到它的 src 子目录下，跟你说的“基础库”没关系。另外，从 Go 1.13 开始，你可以用 go mod 命令在工作区之外建立项目了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1559616373,"ip_address":"","comment_id":100651,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1559610704","product_id":100013101,"comment_content":"每个工作目录都要有go的基础库的src吗 这个gopath感觉不好用","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452624,"discussion_content":"在每个工作区中，源码都要放到它的 src 子目录下，跟你说的“基础库”没关系。另外，从 Go 1.13 开始，你可以用 go mod 命令在工作区之外建立项目了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559616373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350608,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9b/d0/86aee34c.jpg","nickname":"刘凯","note":"","ucode":"EFDC932CAE61A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321573,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604590661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87996,"user_name":"chitanda","can_delete":false,"product_type":"c1","uid":1235077,"ip_address":"","ucode":"B3E28E1C8E410B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/85/21fd42fa.jpg","comment_is_top":false,"comment_ctime":1555804428,"is_pvip":false,"replies":[{"id":"31657","content":"你好，具体哪里不能理解？","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1555813172,"ip_address":"","comment_id":87996,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1555804428","product_id":100013101,"comment_content":"这里讲的有些东西理解起来很费劲，多看几遍才能理解，不知道是我没接触过go的原因（会c,python，），还是讲的方式有问题","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447676,"discussion_content":"你好，具体哪里不能理解？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555813172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69146,"user_name":"Geek_9eb16c","can_delete":false,"product_type":"c1","uid":1434001,"ip_address":"","ucode":"0F4EEBFA68B55E","user_header":"","comment_is_top":false,"comment_ctime":1550669747,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550669747","product_id":100013101,"comment_content":"为什么没有操作数据库的章节啊？这应该常用到啊！","like_count":0},{"had_liked":false,"id":68770,"user_name":"Devin","can_delete":false,"product_type":"c1","uid":1226753,"ip_address":"","ucode":"760F8937686FC0","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/01/247ae4a7.jpg","comment_is_top":false,"comment_ctime":1550596871,"is_pvip":false,"replies":[{"id":"25261","content":"Go语言目前是利用了第三方的代码仓库作为包仓库。这没什么问题吧。你也可以自己弄个GitLab作为包仓库中的一个。Java中基于maven的公共包仓库也不是唯一的啊。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1551184222,"ip_address":"","comment_id":68770,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550596871","product_id":100013101,"comment_content":"刚开始学golang，一直对它的包管理有疑问，它似乎没有像其他语言一样有一个官方统一的包仓库，而是可以从任何地方拉取，如果第三方作者把他的包直接删除了，那不是以后所有依赖它的软件或包都无法再次下载和编译？似乎都要get下来，并把这些大量的包的源码和归档都加入项目的git 中来管理？这会让代码库变得很大。官方刚出的go mod 似乎是让多个项目可以共享第三方包，这似乎也没解决这个问题。百思不得其解，望指教，谢谢！","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439840,"discussion_content":"Go语言目前是利用了第三方的代码仓库作为包仓库。这没什么问题吧。你也可以自己弄个GitLab作为包仓库中的一个。Java中基于maven的公共包仓库也不是唯一的啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551184222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60150,"user_name":"IOVE.-Minn","can_delete":false,"product_type":"c1","uid":1227784,"ip_address":"","ucode":"9C637EEEF64057","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/08/c43f85d9.jpg","comment_is_top":false,"comment_ctime":1547445077,"is_pvip":false,"replies":[{"id":"25236","content":"其实就是go get所做的事情，大致流程是：下载-&gt;编译-&gt;安装。另外可以参考这里：https:&#47;&#47;github.com&#47;hyper0x&#47;go_command_tutorial&#47;blob&#47;master&#47;0.3.md","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1551180540,"ip_address":"","comment_id":60150,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547445077","product_id":100013101,"comment_content":"有没有实际的例子能演示下  是大概怎么一个从获取代码到编译的一个流程呢？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436449,"discussion_content":"其实就是go get所做的事情，大致流程是：下载-&amp;gt;编译-&amp;gt;安装。另外可以参考这里：https://github.com/hyper0x/go_command_tutorial/blob/master/0.3.md","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551180540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58951,"user_name":"Max","can_delete":false,"product_type":"c1","uid":1184664,"ip_address":"","ucode":"5E9644DC00B7C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/98/e6240c55.jpg","comment_is_top":false,"comment_ctime":1547258768,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1547258768","product_id":100013101,"comment_content":"开始打卡，跟老师一起go……","like_count":0},{"had_liked":false,"id":55457,"user_name":"Roger Lee","can_delete":false,"product_type":"c1","uid":1231224,"ip_address":"","ucode":"66E26412A7FC8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/78/2532d3e5.jpg","comment_is_top":false,"comment_ctime":1546183550,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1546183550","product_id":100013101,"comment_content":"能否顺便说一下go get 国内网络使用的技巧呢？","like_count":0,"discussions":[{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79018,"discussion_content":"呵呵","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576046899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1231224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/78/2532d3e5.jpg","nickname":"Roger Lee","note":"","ucode":"66E26412A7FC8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79636,"discussion_content":"🙃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576079662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":79018,"ip_address":""},"score":79636,"extra":""}]}]},{"had_liked":false,"id":51750,"user_name":"Q","can_delete":false,"product_type":"c1","uid":1300229,"ip_address":"","ucode":"D29423F4D3DBD5","user_header":"https://static001.geekbang.org/account/avatar/00/13/d7/05/d5e31bd3.jpg","comment_is_top":false,"comment_ctime":1545231526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545231526","product_id":100013101,"comment_content":"还有最新的go mod","like_count":0},{"had_liked":false,"id":51746,"user_name":"Spiderspiders","can_delete":false,"product_type":"c1","uid":1053925,"ip_address":"","ucode":"96232A7E64A823","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/e5/181abc46.jpg","comment_is_top":false,"comment_ctime":1545231124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545231124","product_id":100013101,"comment_content":"文章中关于go get 的用法有一点过时，现在go get 已经支持依赖分析了。<br>$ go get -h<br>usage: get [-d] [-f] [-fix] [-insecure] [-t] [-u] [build flags] [packages]<br><br>Get downloads the packages named by the import paths, along with their<br>dependencies.","like_count":0},{"had_liked":false,"id":48750,"user_name":"大马猴","can_delete":false,"product_type":"c1","uid":1012528,"ip_address":"","ucode":"E3482CBDF43CDE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/73/30/fd602742.jpg","comment_is_top":false,"comment_ctime":1544529703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544529703","product_id":100013101,"comment_content":"import &quot;github.com&#47;labstack&#47;echo&quot;    src在哪？指的是github的上级还是它自身，感觉文章的衔接不太好，总会出现一个伺候，找不到解释","like_count":0},{"had_liked":false,"id":47019,"user_name":"吴浩","can_delete":false,"product_type":"c1","uid":1142224,"ip_address":"","ucode":"EA91647FF05EA7","user_header":"https://static001.geekbang.org/account/avatar/00/11/6d/d0/6c2b8877.jpg","comment_is_top":false,"comment_ctime":1544019642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544019642","product_id":100013101,"comment_content":"昨天开始看go,有编程基础，其实我对于这里的理解也很模糊，pkg  src bin三个目录可以讲多点，特别是src目录，对于多个项目，是否放在src下么？我尝试下载了您写的书得代码，编译一直出现问题，是导入包的问题，所以我也没理解到这个导入路径什么原因，后面用goland没啥问题，不过既然学习，还是从基本开始不能听太过于依赖工具","like_count":0},{"had_liked":false,"id":45504,"user_name":"18601611625","can_delete":false,"product_type":"c1","uid":1334444,"ip_address":"","ucode":"53D7412DCFD74C","user_header":"","comment_is_top":false,"comment_ctime":1543656529,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543656529","product_id":100013101,"comment_content":"建议多举例子，看完还是没懂","like_count":0},{"had_liked":false,"id":44764,"user_name":"700","can_delete":false,"product_type":"c1","uid":1072896,"ip_address":"","ucode":"E4BD0CBADAF951","user_header":"","comment_is_top":false,"comment_ctime":1543488040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543488040","product_id":100013101,"comment_content":"如果构建的是库源码文件，那么操作的结果文件只会存在于临时目录中。这里的构建的主要意义在于检查和验证。<br>--------------------<br>请教老师，这个临时目录是在哪？这个结果文件的命名方式是怎样的？怎么找到这个结果文件？<br><br>极客时间版权所有: https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;12959","like_count":0},{"had_liked":false,"id":40414,"user_name":"zavyscher","can_delete":false,"product_type":"c1","uid":1313778,"ip_address":"","ucode":"FF5AAD2ABD1649","user_header":"https://static001.geekbang.org/account/avatar/00/14/0b/f2/d1ee5223.jpg","comment_is_top":false,"comment_ctime":1542616353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542616353","product_id":100013101,"comment_content":"老师，想弱弱问一句GoHackers社区的官方网站是哪个啊？没搜出来，还是说自己没认出来。。。","like_count":0},{"had_liked":false,"id":32591,"user_name":"何方","can_delete":false,"product_type":"c1","uid":1074659,"ip_address":"","ucode":"57C0D44583FF9A","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/e3/6f8f6205.jpg","comment_is_top":false,"comment_ctime":1539617849,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539617849","product_id":100013101,"comment_content":"静态库文件，要怎么使用呢？","like_count":0},{"had_liked":false,"id":26412,"user_name":"sureingo","can_delete":false,"product_type":"c1","uid":1229792,"ip_address":"","ucode":"726A3098D0A783","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLncC9kniaC1FGaMTv9VGL9cAjyFreNl6Wkia4d6rjicbpsnso5oCLicpnHNBPVk5bnlogPWcV8Q9ovdA/132","comment_is_top":false,"comment_ctime":1537590034,"is_pvip":false,"replies":[{"id":"9674","content":"后边都会讲啊，往后看。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1537690996,"ip_address":"","comment_id":26412,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537590034","product_id":100013101,"comment_content":"老师您好，请问库源码文件和命令源码文件什么意思呢 有什么区别啊","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424624,"discussion_content":"后边都会讲啊，往后看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537690996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23266,"user_name":"乔巴","can_delete":false,"product_type":"c1","uid":1197951,"ip_address":"","ucode":"2472FB380E72C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/7f/2ad45da6.jpg","comment_is_top":false,"comment_ctime":1536241967,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536241967","product_id":100013101,"comment_content":"代码示例或者图能表达的很清楚，文字差一点儿。","like_count":0},{"had_liked":false,"id":22563,"user_name":"青山","can_delete":false,"product_type":"c1","uid":1131070,"ip_address":"","ucode":"749BAD1834AC0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/3e/c1f76202.jpg","comment_is_top":false,"comment_ctime":1535792232,"is_pvip":false,"replies":[{"id":"8140","content":"专栏有个预习篇你可以先看看。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535885986,"ip_address":"","comment_id":22563,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1535792232","product_id":100013101,"comment_content":"对于刚学go的我，可能因为是小白的缘故。你这章讲的一些库源码文件与命令源码文件在go build和install的过程看的很懵逼，因为我完全不知道何为库源码文件和命令源码文件的定义，然后去Google才知道，但是下两章就开始讲这两个源码文件，个人感觉讲的顺序有点乱。","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423162,"discussion_content":"专栏有个预习篇你可以先看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535885986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21901,"user_name":"My dream","can_delete":false,"product_type":"c1","uid":1077733,"ip_address":"","ucode":"2FEFB344230C17","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/e5/bcdc382a.jpg","comment_is_top":false,"comment_ctime":1535409677,"is_pvip":false,"replies":[{"id":"7961","content":"你可以先不关注module，成为主流最早也是明后年的事了。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535515313,"ip_address":"","comment_id":21901,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535409677","product_id":100013101,"comment_content":"老师，这个新增modules肯定有区别和作用，不然官方更新这个不就没有任何意义了么？新增的这个模块，要如何用，用在哪里！我们都是一脸懵","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422912,"discussion_content":"你可以先不关注module，成为主流最早也是明后年的事了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535515313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21680,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1535246798,"is_pvip":false,"replies":[{"id":"7736","content":"对，理解正确。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535293679,"ip_address":"","comment_id":21680,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535246798","product_id":100013101,"comment_content":"这个地方还是挺让人迷惑的，我理解gopath与工作区是一对多的关系，通过gopath引入各种第三方库。","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422802,"discussion_content":"对，理解正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535293679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21576,"user_name":"My dream","can_delete":false,"product_type":"c1","uid":1077733,"ip_address":"","ucode":"2FEFB344230C17","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/e5/bcdc382a.jpg","comment_is_top":false,"comment_ctime":1535173879,"is_pvip":false,"replies":[{"id":"7734","content":"你好，我看看是不是在最后的拾遗篇讲一下。不过如果没有什么让人迷惑之处的话也可能略过。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535293593,"ip_address":"","comment_id":21576,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535173879","product_id":100013101,"comment_content":"老师，你好，我看今天go的1.11版本出来了，新增了modules等特性的支持，请问你要重点讲一下不？","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422751,"discussion_content":"你好，我看看是不是在最后的拾遗篇讲一下。不过如果没有什么让人迷惑之处的话也可能略过。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535293593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21354,"user_name":"Yangjing","can_delete":false,"product_type":"c1","uid":1018061,"ip_address":"","ucode":"D88DFD4958D07C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/88/cd/2c3808ce.jpg","comment_is_top":false,"comment_ctime":1535038676,"is_pvip":true,"replies":[{"id":"7618","content":"赞！","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1535112271,"ip_address":"","comment_id":21354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1535038676","product_id":100013101,"comment_content":"终于感到全部看懂了✌️","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422644,"discussion_content":"赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535112271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21290,"user_name":"Femtoyue","can_delete":false,"product_type":"c1","uid":1203620,"ip_address":"","ucode":"521BE12B041CF7","user_header":"https://static001.geekbang.org/account/avatar/00/12/5d/a4/a69ebf75.jpg","comment_is_top":false,"comment_ctime":1534998026,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534998026","product_id":100013101,"comment_content":"命令源码文件和库源码文件怎么区分","like_count":0},{"had_liked":false,"id":20727,"user_name":"null","can_delete":false,"product_type":"c1","uid":1202428,"ip_address":"","ucode":"7378918947E949","user_header":"https://static001.geekbang.org/account/avatar/00/12/58/fc/088eab87.jpg","comment_is_top":false,"comment_ctime":1534697136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534697136","product_id":100013101,"comment_content":"希望可以有更多的图和具体实例做说明，这样更容易让人理解","like_count":0},{"had_liked":false,"id":20708,"user_name":"lcf枫","can_delete":false,"product_type":"c1","uid":1144171,"ip_address":"","ucode":"D51E8F68BD41CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/75/6b/fd685164.jpg","comment_is_top":false,"comment_ctime":1534686034,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534686034","product_id":100013101,"comment_content":"我觉得有时候图示表达很清晰，事半功倍。既然大伙都来学习，只要语音说有图想必都会看原文的。","like_count":0},{"had_liked":false,"id":20504,"user_name":"缘木求鱼","can_delete":false,"product_type":"c1","uid":1200198,"ip_address":"","ucode":"A9E047ECF9CB9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/50/46/3573d1d0.jpg","comment_is_top":false,"comment_ctime":1534490499,"is_pvip":false,"replies":[{"id":"7183","content":"比如，这个代码包的源码文件的存放路径是&lt;工作区目录&gt;&#47;src&#47;a&#47;b&#47;c，那么它的代码包导入路径就是a&#47;b&#47;c。你对比一下这两个路径，体会一下相对路径的意思。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534506948,"ip_address":"","comment_id":20504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534490499","product_id":100013101,"comment_content":"在工作区中，一个代码包的导入路径实际上就是从 src 子目录，到该包的实际存储位置的相对路径。 老师你好这句话有点不明白","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422279,"discussion_content":"比如，这个代码包的源码文件的存放路径是&amp;lt;工作区目录&amp;gt;/src/a/b/c，那么它的代码包导入路径就是a/b/c。你对比一下这两个路径，体会一下相对路径的意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534506948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20329,"user_name":"balancer","can_delete":false,"product_type":"c1","uid":1145758,"ip_address":"","ucode":"A865FAFF2FE1FA","user_header":"https://static001.geekbang.org/account/avatar/00/11/7b/9e/37d69ff0.jpg","comment_is_top":false,"comment_ctime":1534380498,"is_pvip":false,"replies":[{"id":"7134","content":"你好，这部分我会适当写一些，不过仍然以核心知识和面试题为主线。如果想深入了解可以看《Go并发编程实战》第二版。","user_name":"作者回复","user_name_real":"郝林","uid":"1026643","ctime":1534397284,"ip_address":"","comment_id":20329,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534380498","product_id":100013101,"comment_content":"期待：多一点深度刨析go内存 并发设计 gc ，工程中比较常遇到的问题","like_count":0,"discussions":[{"author":{"id":1026643,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/aa/53/768aec0a.jpg","nickname":"郝林","note":"","ucode":"F66BA62BA56FFA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422207,"discussion_content":"你好，这部分我会适当写一些，不过仍然以核心知识和面试题为主线。如果想深入了解可以看《Go并发编程实战》第二版。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534397284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20060,"user_name":"Yashin","can_delete":false,"product_type":"c1","uid":1088607,"ip_address":"","ucode":"2E35D1CBBCF544","user_header":"https://static001.geekbang.org/account/avatar/00/10/9c/5f/ad874537.jpg","comment_is_top":false,"comment_ctime":1534247329,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534247329","product_id":100013101,"comment_content":"说到gopath 是否可以补充说明一下当前项目下的vendor目录呢？已经常用的包管理工具基本原理","like_count":0},{"had_liked":false,"id":19899,"user_name":"Takky","can_delete":false,"product_type":"c1","uid":1034012,"ip_address":"","ucode":"8BCF03F4167E62","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/1c/a9d3aa77.jpg","comment_is_top":false,"comment_ctime":1534152872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534152872","product_id":100013101,"comment_content":"打包编译好的归档文件，在没有源码的情况下，能够给别的项目使用吗？能够像Java的jar文件或者.net的dll文件那样使用吗？","like_count":0},{"had_liked":false,"id":19877,"user_name":"星潮","can_delete":false,"product_type":"c1","uid":1201812,"ip_address":"","ucode":"B4080A9AEFF488","user_header":"https://static001.geekbang.org/account/avatar/00/12/56/94/9ca6839b.jpg","comment_is_top":false,"comment_ctime":1534132034,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534132034","product_id":100013101,"comment_content":"1.从编译的main文件的import倒叙开始寻找依赖层层递进到最后没有依赖的包开始编译，每一个包总是以import的倒叙进行，已经编译过的不再进行编译<br>2.不冲突","like_count":0},{"had_liked":false,"id":19815,"user_name":"孙要飞","can_delete":false,"product_type":"c1","uid":1198782,"ip_address":"","ucode":"82B0E9B4E7C8B4","user_header":"https://static001.geekbang.org/account/avatar/00/12/4a/be/95c162fa.jpg","comment_is_top":false,"comment_ctime":1534089745,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534089745","product_id":100013101,"comment_content":"什么情况下需要设置多个gopath。怎么设置多个gopath","like_count":0},{"had_liked":false,"id":19700,"user_name":"白宇","can_delete":false,"product_type":"c1","uid":1019484,"ip_address":"","ucode":"A285C8591D0F8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/5c/f34849ac.jpg","comment_is_top":false,"comment_ctime":1533977653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533977653","product_id":100013101,"comment_content":"请教一下，您是如何解决不能下载官网的包","like_count":0},{"had_liked":false,"id":19680,"user_name":"熊出没","can_delete":false,"product_type":"c1","uid":1145377,"ip_address":"","ucode":"6E39230CC87808","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/21/a33cc944.jpg","comment_is_top":false,"comment_ctime":1533963677,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1533963677","product_id":100013101,"comment_content":"新手 还是有许多不理解的 文章能否提供操作性支持","like_count":0},{"had_liked":false,"id":19674,"user_name":"深藏Blue","can_delete":false,"product_type":"c1","uid":1031616,"ip_address":"","ucode":"CBEBCBDA47281C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bd/c0/57b06721.jpg","comment_is_top":false,"comment_ctime":1533958609,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533958609","product_id":100013101,"comment_content":"请教老师：在实际工作中GOPATH通常设置几个路径？  我刚接触go两天。在jetbrains提供的ide中看到可以设置全局的GOPATH目录（默认读取系统的环境变量的值），也可以设置project级别的GOPATH。这种方式不禁让我类比到了maven,全局GOPATH可以理解成maven里面的本地仓库，project级别的可以理解成具体项目的depends吗？  如果可以这样理解的话  执行go  install的时候，结果是放入全局GOPATH还是项目自己的GOPATH里面？  纯粹go小白，如果有问错的，各位老鸟勿嘲笑","like_count":0},{"had_liked":false,"id":19673,"user_name":"原来你也在这里","can_delete":false,"product_type":"c1","uid":1200293,"ip_address":"","ucode":"98E5490D663BBA","user_header":"","comment_is_top":false,"comment_ctime":1533957563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533957563","product_id":100013101,"comment_content":"像这种环境配置，最好配上一些图进行讲解，因为很多人未必理解文中的术语，有时候反而是一些图更让人一目了然。其实我也不是很懂，只知道是这样子配置，但是为什么是这样子配置就不知道了","like_count":0},{"had_liked":false,"id":19658,"user_name":"Rover","can_delete":false,"product_type":"c1","uid":1153688,"ip_address":"","ucode":"8CC1B58CFC8A70","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/98/9ea0ed8c.jpg","comment_is_top":false,"comment_ctime":1533949924,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533949924","product_id":100013101,"comment_content":"如果归档文件相当于静态库，那go有动态库的概念吗？","like_count":0},{"had_liked":false,"id":19649,"user_name":"信天游","can_delete":false,"product_type":"c1","uid":1046101,"ip_address":"","ucode":"4B46403E169499","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/55/1065fce8.jpg","comment_is_top":false,"comment_ctime":1533947172,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533947172","product_id":100013101,"comment_content":"工作区和maven里面的project是类似的概念。","like_count":0},{"had_liked":false,"id":19648,"user_name":"董柏顺 ᵏᵉᵛⁱⁿ","can_delete":false,"product_type":"c1","uid":1200570,"ip_address":"","ucode":"3247E5E49B5C75","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/ba/efd1af29.jpg","comment_is_top":false,"comment_ctime":1533946263,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533946263","product_id":100013101,"comment_content":"讲的很清楚，不清楚的朋友可以查查基本概念🌚","like_count":0},{"had_liked":false,"id":19589,"user_name":"Jowin","can_delete":false,"product_type":"c1","uid":1114356,"ip_address":"","ucode":"19017F7D06C22A","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/f4/cc5f0896.jpg","comment_is_top":false,"comment_ctime":1533893717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533893717","product_id":100013101,"comment_content":"搜索顺序是GOROOT-&gt;GOPATH，先找到哪个用哪个","like_count":0},{"had_liked":false,"id":19578,"user_name":"用心","can_delete":false,"product_type":"c1","uid":1205371,"ip_address":"","ucode":"403C8BA340DE5F","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/7b/b3347f55.jpg","comment_is_top":false,"comment_ctime":1533887420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533887420","product_id":100013101,"comment_content":"明白了gopath goroot gobin 作用 <br>赞一个","like_count":0},{"had_liked":false,"id":19545,"user_name":"李小龙","can_delete":false,"product_type":"c1","uid":1158263,"ip_address":"","ucode":"1B64CB66AF0765","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/77/fbca9f8b.jpg","comment_is_top":false,"comment_ctime":1533872025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1533872025","product_id":100013101,"comment_content":"老师归档文件不是很理解，是指的workspace么","like_count":0}]}