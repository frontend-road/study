{"id":186414,"title":"34 | MongoDB索引机制（二）","content":"<p><strong>亲爱的学员：</strong><br>\n你好，在回答学员问题的过程中，我发现大家对于第二章的事务处理, 特别是隔离级别，以及第三章的分片集群有相对较多的问题。在这里我给大家推荐一些补充的学习材料可以从另外一个角度来加深一些这些概念的理解。<br>\nMongoDB事务的原子性<br>\n<a href=\"https://docs.mongodb.com/manual/core/write-operations-atomicity/\">https://docs.mongodb.com/manual/core/write-operations-atomicity/</a><br>\nMongoDB事务的隔离级别和一致性模型<br>\n<a href=\"https://docs.mongodb.com/manual/core/read-isolation-consistency-recency/\">https://docs.mongodb.com/manual/core/read-isolation-consistency-recency/</a><br>\n如果英文不太感冒，在MongoDB中文网站上有不少内容，比如分片相关的：<br>\n<a href=\"http://www.mongoing.com/?s=%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4\">http://www.mongoing.com/?s=分片集群</a></p><p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-mongodb-course\">https://gitee.com/geektime-geekbang/geektime-mongodb-course</a></p>","comments":[{"had_liked":false,"id":199774,"user_name":"cording","can_delete":false,"product_type":"c3","uid":1786385,"ip_address":"","ucode":"82063AEC231613","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlllSKrpQkhSXyNj0glDoCiaMKp23ey4Fw0nr54MKKhYAIxxU7toQuukJe2qZjwUC990ojdNmeicVQ/132","comment_is_top":false,"comment_ctime":1585495703,"is_pvip":false,"replies":[{"id":75810,"content":"如果3个字段分别有可能单独查询，并且频率都差不多，那你需要3个索引：\n\n\nABC:1\nB:  1\nC:  1\n","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1586081270,"ip_address":"","comment_id":199774,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，请教一下我有A B C三个字段，这三个字段可能单独查询，也可能ABC一起组合查询。这样我是三个字段单独建索引高效，还是建组合索引？","like_count":5,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489874,"discussion_content":"如果3个字段分别有可能单独查询，并且频率都差不多，那你需要3个索引：\n\n\nABC:1\nB:  1\nC:  1\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586081270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1525840,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUlVIL2Y7gVjfuubGmkKVXUv9LUlZURwK0fwnHz4xrzaqf2BjwwSXXNwLrTcxdRnnwhTlwnV1Xcg/132","nickname":"炎炎","note":"","ucode":"386E790507C66D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221783,"discussion_content":"前缀索引，组合索引ABC，只有B字段的搜索条件无法使用该索引的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586060829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174236,"user_name":"月迷津渡","can_delete":false,"product_type":"c3","uid":1264111,"ip_address":"","ucode":"2B18B2FE3DAC3B","user_header":"https://static001.geekbang.org/account/avatar/00/13/49/ef/02401473.jpg","comment_is_top":false,"comment_ctime":1580103880,"is_pvip":false,"replies":[{"id":67798,"content":"课程中看上去是多棵树，那个只是帮助逻辑上理解。物理上，多键索引只用一颗B树。通过把多个字段的值拼接（类似于字符串拼接），形成一个单值，然后放到B树里。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1580252729,"ip_address":"","comment_id":174236,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"TJ请问一下单个字段索引我可以理解用B树来构建查询，那多键索引按照你话的是个查询的一个工作方式，多键中的每个键是不是还是一颗B树，也就是B树挂B树 不知道我这么理解对不对。求教","like_count":4,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482344,"discussion_content":"课程中看上去是多棵树，那个只是帮助逻辑上理解。物理上，多键索引只用一颗B树。通过把多个字段的值拼接（类似于字符串拼接），形成一个单值，然后放到B树里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580252729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210620,"user_name":"沉醉寒风","can_delete":false,"product_type":"c3","uid":1053892,"ip_address":"","ucode":"7344F4F5F1F17C","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/c4/9ab2ee00.jpg","comment_is_top":false,"comment_ctime":1587797249,"is_pvip":false,"replies":[{"id":78486,"content":"这个很容易实现。比如说你是这样的文档：\n\n{\n   _id: ObjectId(),\n   customer_id: 101,\n   customer_name: &quot;Nina&quot;,\n   emergency_contacts: [\n     { contact_name: &#39;Nina mom&#39;, contact_phone: 12345},\n    { contact_name: &#39;Nina dad&#39;, contact_phone:12346} \n   ]\n}\n\n你可以建一个这样的唯一索引：\n  { customer_id: 1, &quot;emergency_contacts.contact_name&quot;:1, \n&quot;emergency_contacts.contact_phone&quot;:1}\n","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1587879371,"ip_address":"","comment_id":210620,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，有个内嵌文档的唯一性问题请教，因为是唯一性的组合索，保证的是内嵌文档跨文档唯一，但我需要的是跨文档可以重复，但当前文档内内嵌文档唯一（比如每个客户有多个联系地址，地址的姓名&#47;电话不能重复），MONGODB支持这种索引吗？还是说需要业务代码来实现？","like_count":3,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493066,"discussion_content":"这个很容易实现。比如说你是这样的文档：\n\n{\n   _id: ObjectId(),\n   customer_id: 101,\n   customer_name: &amp;quot;Nina&amp;quot;,\n   emergency_contacts: [\n     { contact_name: &amp;#39;Nina mom&amp;#39;, contact_phone: 12345},\n    { contact_name: &amp;#39;Nina dad&amp;#39;, contact_phone:12346} \n   ]\n}\n\n你可以建一个这样的唯一索引：\n  { customer_id: 1, &amp;quot;emergency_contacts.contact_name&amp;quot;:1, \n&amp;quot;emergency_contacts.contact_phone&amp;quot;:1}\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587879371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053892,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/c4/9ab2ee00.jpg","nickname":"沉醉寒风","note":"","ucode":"7344F4F5F1F17C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249070,"discussion_content":"db.cfg_customer.insert({_id:123})\ndb.cfg_customer.insert({_id:456})\n\ndb.cfg_customer.update({_id:123}, {$push:{receivers:{name:&#34;TEST&#34;, tel:&#34;654321&#34;}}})\ndb.cfg_customer.update({_id:456}, {$push:{receivers:{name:&#34;TEST&#34;, tel:&#34;654321&#34;}}})\ndb.cfg_customer.find().pretty()\n\ndb.cfg_customer.ensureIndex({_id:1, &#34;receivers.name&#34;:1, &#34;receivers.tel&#34;:1}, {unique:true})\ndb.cfg_customer.getIndexes()\n\n> db.cfg_customer.update({_id:123}, {$push:{receivers:{name:&#34;TEST&#34;, tel:&#34;654321&#34;}}})\nWriteResult({ &#34;nMatched&#34; : 1, &#34;nUpserted&#34; : 0, &#34;nModified&#34; : 1 })\n\n> db.cfg_customer.update({_id:123}, {$addToSet:{receivers:{name:&#34;TEST&#34;, tel:&#34;654321&#34;}}})\nWriteResult({ &#34;nMatched&#34; : 1, &#34;nUpserted&#34; : 0, &#34;nModified&#34; : 0 })\n\n> db.cfg_customer.update({_id:123}, {$addToSet:{receivers:{name:&#34;TEST&#34;, tel:&#34;654321&#34;, abc:1}}})\nWriteResult({ &#34;nMatched&#34; : 1, &#34;nUpserted&#34; : 0, &#34;nModified&#34; : 1 })\n\n> db.cfg_customer.find().pretty()\n{\n        &#34;_id&#34; : 123,\n        &#34;receivers&#34; : [\n                {\n                        &#34;name&#34; : &#34;TEST&#34;,\n                        &#34;tel&#34; : &#34;654321&#34;\n                },\n                {\n                        &#34;name&#34; : &#34;TEST&#34;,\n                        &#34;tel&#34; : &#34;654321&#34;\n                },\n                {\n                        &#34;name&#34; : &#34;TEST&#34;,\n                        &#34;tel&#34; : &#34;654321&#34;,\n                        &#34;abc&#34; : 1\n                }\n        ]\n}\n{\n        &#34;_id&#34; : 456,\n        &#34;receivers&#34; : [\n                {\n                        &#34;name&#34; : &#34;TEST&#34;,\n                        &#34;tel&#34; : &#34;654321&#34;\n                }\n        ]\n}\n\n操作下来还是实现不了，麻烦老师看看哪里错在哪里了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587909263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1277081,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7c/99/4dac6ce6.jpg","nickname":"lakeslove","note":"","ucode":"65E14D29D3C981","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053892,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/c4/9ab2ee00.jpg","nickname":"沉醉寒风","note":"","ucode":"7344F4F5F1F17C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328076,"discussion_content":"索引实现不了。我们以前是用内嵌map实现的，比如你这个可以用name+tel作为map的key。如果出现重复的，更新时自己就替换了，但是查询的时候很麻烦，如果不知道key，就要全查出来再过滤。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606050323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":249070,"ip_address":"","group_id":0},"score":328076,"extra":""},{"author":{"id":2354474,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/UNC7eWZWvRyAPWUpIJicgZBWLNpkljMbgeaFVWU3QNmWgaibchc8aGFfAG7gWh7eghHSrtSuSqMDp2ibVnvE2eLJg/132","nickname":"Geek_a88948","note":"","ucode":"C7FF3099A180D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053892,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/c4/9ab2ee00.jpg","nickname":"沉醉寒风","note":"","ucode":"7344F4F5F1F17C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354491,"discussion_content":"这个确实保证不了内嵌数组id的唯一性，我也试了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615296877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":249070,"ip_address":"","group_id":0},"score":354491,"extra":""}]},{"author":{"id":1053892,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/c4/9ab2ee00.jpg","nickname":"沉醉寒风","note":"","ucode":"7344F4F5F1F17C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248636,"discussion_content":"收到，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587883356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172393,"user_name":"Leo","can_delete":false,"product_type":"c3","uid":1779898,"ip_address":"","ucode":"4A8EA8CFE5BB8D","user_header":"https://static001.geekbang.org/account/avatar/00/1b/28/ba/35e4340e.jpg","comment_is_top":false,"comment_ctime":1579168153,"is_pvip":false,"replies":[{"id":66857,"content":"企业版都不支持。目前只在Atlas（MongoDB云托管版本）里面有这个功能。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1579171324,"ip_address":"","comment_id":172393,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"堂sir，你好，全文索引是不是只有企业版才支持中文？","like_count":2,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481726,"discussion_content":"企业版都不支持。目前只在Atlas（MongoDB云托管版本）里面有这个功能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579171324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1419723,"avatar":"https://static001.geekbang.org/account/avatar/00/15/a9/cb/a431bde5.jpg","nickname":"木头发芽","note":"","ucode":"657B381C5DA963","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320411,"discussion_content":"都支持，我们的就用上了，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604365314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257577,"user_name":"卡爸","can_delete":false,"product_type":"c3","uid":1015479,"ip_address":"","ucode":"C1FCE28615586C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/b7/7c48e00c.jpg","comment_is_top":false,"comment_ctime":1604030969,"is_pvip":false,"replies":[{"id":94296,"content":"你试试  mongod -vvvvv 参数 k额能会打印更多的日志","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1604709763,"ip_address":"","comment_id":257577,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师您好，请教一个建文本索引时遇到的错误。\n执行语句是“ db.mail.createIndex({ &quot;search.subject&quot;: &quot;text&quot; }, { &quot;weights&quot;: { &quot;search.subject&quot;: 1 }, &quot;name&quot;: &quot;INDEX-NO14&quot; }); ”，结果很快得到错误返回“ MongoError: text contains invalid UTF-8 ”。\n因为没有更多的信息无法定位到可能出错的文档位置。\n1. 请问 mongoshell 执行命令时返回的错误能设定某个环境变量，让信息更全面吗？\n2. mongo 的文档字段对于 utf-8 有无有效性检查的函数？\n3. 我从 mongo log 中找到了该语句执行的位置，没有具体报错文档的 ObjectId。只有一些类似 acquireCount 的信息，从日志中有办法定位错误文档的位置吗？","like_count":0,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508380,"discussion_content":"你试试  mongod -vvvvv 参数 k额能会打印更多的日志","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604709763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015479,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/b7/7c48e00c.jpg","nickname":"卡爸","note":"","ucode":"C1FCE28615586C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320516,"discussion_content":"临时解决案，go 语言的 strings 包中有个函数ToValidUTF8(原字符串, 替换文字)，返回值是将原文中的非 utf-8 内容替换后的文字。编了个命令行程序把所有文档的 search.subject 字段过了一遍，不到 39 万条文档，3分钟左右就完事了。再建全文索引就没问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604388470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248871,"user_name":"Geek_175bc2","can_delete":false,"product_type":"c3","uid":2131639,"ip_address":"","ucode":"D8D6F17C8D6B1D","user_header":"","comment_is_top":false,"comment_ctime":1600339950,"is_pvip":false,"replies":[{"id":91444,"content":"有压缩机制。一个是落盘压缩，一个是index prefix 压缩","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1600534691,"ip_address":"","comment_id":248871,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师想问下mongo索引大小的估算，把一个大小20字节的字段作为索引，数据量30万索引大小3M，平均每个只占10个字节。为什么会有差那么大呢","like_count":0,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505765,"discussion_content":"有压缩机制。一个是落盘压缩，一个是index prefix 压缩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600534691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247364,"user_name":"青丝成雪","can_delete":false,"product_type":"c3","uid":2094439,"ip_address":"","ucode":"27E67AC3AA31A0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJjTY9B9a8iaG4iaHiaqdXywEDa99XNx6ZqcIc2IHCqN35d8hWgsKgHF2icXC9N3BnbfEADR7K920we5w/132","comment_is_top":false,"comment_ctime":1599671225,"is_pvip":false,"replies":[{"id":91325,"content":"你需要这样的索引 {state:1, ts:1}，这就是个典型的ER。 这个索引不会需要扫描千万级。只会扫描满足你条件的文档。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1600309701,"ip_address":"","comment_id":247364,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师您好，感觉ESR并不适用于所有的场景，而且感觉索引并不能解决所有的慢查询。\n举个场景的例子：需要根据时间+结束状态来获取订单ID。这个场景下数据库中结束状态的订单可能千万级别以上，如果ER排列建索引的话，会扫描索引数可能千万条就很慢了，反倒是RE排列每次查询缩短时间范围效率更高一点呢\n请教老师对这种场景下的索引创建和优化有什么看到呢？","like_count":0,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505378,"discussion_content":"你需要这样的索引 {state:1, ts:1}，这就是个典型的ER。 这个索引不会需要扫描千万级。只会扫描满足你条件的文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600309701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235966,"user_name":"cording","can_delete":false,"product_type":"c3","uid":1786385,"ip_address":"","ucode":"82063AEC231613","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlllSKrpQkhSXyNj0glDoCiaMKp23ey4Fw0nr54MKKhYAIxxU7toQuukJe2qZjwUC990ojdNmeicVQ/132","comment_is_top":false,"comment_ctime":1595257467,"is_pvip":false,"replies":[{"id":88160,"content":"这个是正常的。删除需要删除数据和索引，是一个成本不低的操作。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1596277421,"ip_address":"","comment_id":235966,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，我这个删除方法1000万数据时，删除要60s，其中查询字段都建立了索引。代码如下：\n\n&#47;**\n * 删除该路径下所有记录,本对象及其子对象.适用于文档bd或文件夹bf\n *\n * @param collection MongoDB中的集合\n * @param objectPath 需删除的路径\n *&#47;\npublic static void deleteByPath(MongoCollection collection, String objectPath) {\n    long start = System.currentTimeMillis();\n    &#47;&#47;过滤条件：路径为当前路径或子路径\n    Bson currentPathFilter = Filters.eq(IAfSysObject.S_OBJECT_PATH, objectPath);\n    Bson subPathFilter = Filters.regex(IAfSysObject.S_OBJECT_PATH, &quot;^&quot; + objectPath + &quot;&#47;&quot;);\n    Bson pathsFilter = Filters.or(currentPathFilter, subPathFilter);\n    &#47;&#47;过滤条件：文档或文件夹\n    Bson sysObjectFilter = Filters.eq(IAfSysObject.S_COMMON_TAG, IAfSysObject.COMMON_TAG_VALUE);\n    &#47;&#47;组成最终过滤器\n    Bson filters = Filters.and(pathsFilter, sysObjectFilter);\n    DeleteResult deleteResult = collection.deleteMany(filters);\n    AfLoggerHelper.AFC.info(&quot;删除数量：&quot; + deleteResult.getDeletedCount());\n    long end = System.currentTimeMillis();\n    AfLoggerHelper.PERFORMANCE.warn(&quot;[删除mongodb中文档]，耗时：&quot; + (end - start) + &quot;ms&quot;);\n}\n","like_count":0,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501902,"discussion_content":"这个是正常的。删除需要删除数据和索引，是一个成本不低的操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596277421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206120,"user_name":"Sir","can_delete":false,"product_type":"c3","uid":1204383,"ip_address":"","ucode":"B79B31FC543700","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/9f/f939681f.jpg","comment_is_top":false,"comment_ctime":1586789619,"is_pvip":false,"replies":[{"id":77491,"content":"对。每个节点都会记住自己的同步信息和offset。","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1587096949,"ip_address":"","comment_id":206120,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"最后面改单机加索引的步骤，是因为副本集存储位点信息吗？不然他怎么知道从哪里继续同步呢？","like_count":0,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491679,"discussion_content":"对。每个节点都会记住自己的同步信息和offset。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587096949,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182098,"user_name":"密码123456","can_delete":false,"product_type":"c3","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1582708866,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"我觉得 ESR。不仅仅可以适用在mongo上。应该是使用B树创建索引的数据库。都可以","like_count":8},{"had_liked":false,"id":263912,"user_name":"Luke","can_delete":false,"product_type":"c3","uid":1590953,"ip_address":"","ucode":"2C8A1FAB8B6301","user_header":"https://static001.geekbang.org/account/avatar/00/18/46/a9/70fa676f.jpg","comment_is_top":false,"comment_ctime":1606293687,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"不同意ERS和ESR优劣的评估，举个极端的例子，如果匹配的Range非常小，比如100W行数据只有10行是符合条件的，如果采用ESR，需要扫描整个索引（当然E可以过滤一部分，但是如果E是类似gender这种，两个取值55开，则需要扫描半课索引树，并且据此回表去那数据再做匹配），这个代价显然会非常大，就算索引可以完全容纳在内存，这种回表取一般的数据行的代价也是非常昂贵的。反过来，ERS，只需要扫描10个索引记录，并据此回表取数据，再在内存排序，这个代价显然要小得多，所以简单的评价ESR优于ERS是不妥的，而且我认为恰恰相反，只要你最终取回的数据集不是非常巨大，巨大到无法对结果进行内存排序（需要外存排序），ERS都是要优于ESR的。","like_count":6,"discussions":[{"author":{"id":2653715,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKib3vNM6TPT1umvR3TictnLurJPKuQq4iblH5upgBB3kHL9hoN3Pgh3MaR2rjz6fWgMiaDpicd8R5wsAQ/132","nickname":"陈阳","note":"","ucode":"C8E676C967D23A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413717,"discussion_content":"我理解的回表次数应该是一样的， 因为在组合索引已经过滤掉了不满足索引的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636547583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386672,"user_name":"Ming","can_delete":false,"product_type":"c3","uid":2918756,"ip_address":"浙江","ucode":"8135C9BE40C17B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIATno6kI9Bb9B088vSkZDXicPwMFrKETJEzDtyvp9Lbn6icbLibLf2SicHuNzfIAvAtkFRg7ibOLQWkGQ/132","comment_is_top":false,"comment_ctime":1705310158,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":1,"score":3,"product_id":100040001,"comment_content":"老师，我有一个name，time的复合索引，查询条件为name：$in：a，b按时间排序的时候，查询计划是ixscan➡️sort_merge➡️fetch➡️limit。查询条件为name：$regex：^abc 按时间排序的时候，查询计划是ixscan➡️sort➡️fetch。导致模糊查询要搜索大量key性能会差很多。为什么会有这个差异啊","like_count":0},{"had_liked":false,"id":355194,"user_name":"人无远虑，必有近忧","can_delete":false,"product_type":"c3","uid":3099881,"ip_address":"浙江","ucode":"F1A91A187B0A31","user_header":"https://static001.geekbang.org/account/avatar/00/2f/4c/e9/a98a87af.jpg","comment_is_top":false,"comment_ctime":1661164043,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"模糊匹配查询不走索引了老师怎么办","like_count":0},{"had_liked":false,"id":329629,"user_name":"刘永臣","can_delete":false,"product_type":"c3","uid":2033098,"ip_address":"","ucode":"31426CE31CA514","user_header":"https://static001.geekbang.org/account/avatar/00/1f/05/ca/eefef69b.jpg","comment_is_top":false,"comment_ctime":1641452360,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"创建部分索引是即时性的操作么？也就是问题是：创建部分索引时，当旧索引已经不满足创建的条件时，旧索引是否会被移除？","like_count":0},{"had_liked":false,"id":291846,"user_name":"往日今朝","can_delete":false,"product_type":"c3","uid":1382714,"ip_address":"","ucode":"41A4BC35529FBF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhVVVVRDZMruKAtlCwH0VPiaGq9dyvexSnbAGEuWtBMlKOX61IEKrSib8YIEEO0Zibab7YxMk8zaGAQ/132","comment_is_top":false,"comment_ctime":1620549619,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"老师好，请教一下。对数组字段建的索引是什么结构？我需要用tags数组字段查询，用$all找出同时满足多个tag的数据，发现扫描文档数总是远大于返回文档数，请问改怎么优化？","like_count":0},{"had_liked":false,"id":273046,"user_name":"Echo","can_delete":false,"product_type":"c3","uid":1316554,"ip_address":"","ucode":"A2290F2690CC30","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/ca/114a5af9.jpg","comment_is_top":false,"comment_ctime":1610420227,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"你好，我们有一个这样的文档查询语句\ndb.core_match_future_2021_1.find({ &quot;$and&quot; : [{ &quot;$or&quot; : [{&#39;bid_user_id&#39;: 69177273}, {&#39;ask_user_id&#39;: 69177273}, {&#39;bid_user_id&#39;: 1069177273},{&#39;ask_user_id&#39;: 1069177273}]}, {&#39;contract_id&#39;: 100005}, {&#39;match_time&#39;: {&#39;$lt&#39;: 1609549206947000}}]}]})\n根据ESR创建索引原则，hint({ contract_id: 1,bid_user_id: 1, ask_user_id: 1,match_time: 1 })这种索引选择才是最优的，但由于历史原因，库中还有一个{ match_time: 1,contract_id: 1,bid_user_id: 1, ask_user_id: 1 }索引，不合理的创建，由于是第三方系统，还不清楚最初创建这个索引的意图，暂时不敢删。\n现发现上面那个查询语句，10次中偶尔会有1-2次选择match_time在前的那个索引，最后使用hint强制指定临时解决\n\n我的疑问：根据索引的执行计划，contract_id在前的索引应该是最优的，查询时间也是最短的，但为何还是会选错索引","like_count":0},{"had_liked":false,"id":260763,"user_name":"一颗大白菜","can_delete":false,"product_type":"c3","uid":1321226,"ip_address":"","ucode":"4A15D1CECD1853","user_header":"https://static001.geekbang.org/account/avatar/00/14/29/0a/0ba09c68.jpg","comment_is_top":false,"comment_ctime":1605100263,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"请教个问题，如果索引是EER模式，那么这两个E的顺序是否有影响？Selectivity高的排在前面吗？","like_count":0},{"had_liked":false,"id":228910,"user_name":"ward-wolf","can_delete":false,"product_type":"c3","uid":1031845,"ip_address":"","ucode":"BC41D01301263A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/a5/df917d18.jpg","comment_is_top":false,"comment_ctime":1592837626,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100040001,"comment_content":"老师，组合索引那个结构您是怎么推断出来？","like_count":0}]}