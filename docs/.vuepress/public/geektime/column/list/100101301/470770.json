{"id":470770,"title":"05 | 牛刀小试：如何搭建优惠券模板服务？","content":"<p>你好，我是姚秋辰。</p><p>今天我们来动手搭建优惠券平台的实战项目。为了让你体验从0到1的微服务改造过程，我们先使用Spring Boot搭建一个基础版的优惠券平台项目，等你学习到Spring Cloud的时候，我们就在这个项目之上做微服务化改造，将Spring Cloud的各个组件像添砖加瓦一样集成到项目里。</p><p>如果你没有太多Spring Boot的相关开发经验，通过今天的学习，你可以掌握如何通过Spring Boot组件快速落地一个项目。如果你之前了解过Spring Boot，那么今天的学习不仅可以起到温故知新的作用，你还可以从我分享的开发经验里得到一些启发。</p><p>在<a href=\"https://time.geekbang.org/column/article/468857\">03讲</a>中，我们介绍了优惠券平台的功能模块。我们说过，在用户领取优惠券的过程当中，优惠券是通过券模板来生成的，因此，优惠券模板服务是整个项目的底层基础服务。今天咱就直接上手搭建这个服务模块：coupon-template-serv。不过在此之前，我们先来看看整体的项目结构是怎样搭建的。</p><h2>搭建项目结构</h2><p>我把整个优惠券平台项目从Maven模块管理的角度划分为了多个模块。</p><p><img src=\"https://static001.geekbang.org/resource/image/30/b1/302c801d2a82e863a75af3b803ae2db1.jpg?wh=2000x1173\" alt=\"\"></p><p>在顶层项目geekbang-coupon之下有四个子模块，我先来分别解释下它们的功能：</p><ul>\n<li><strong>coupon-template-serv</strong>： 创建、查找、克隆、删除优惠券模板；</li>\n<li><strong>coupon-calculation-serv</strong>：计算优惠后的订单价格、试算每个优惠券的优惠幅度；</li>\n<li><strong>coupon-customer-serv</strong>：通过调用template和calculation服务，实现用户领取优惠券、模拟计算最优惠的券、删除优惠券、下订单等操作；</li>\n<li><strong>middleware</strong>：存放一些与业务无关的平台类组件。</li>\n</ul><!-- [[[read_end]]] --><p>在大型的微服务项目里，每一个子模块通常都存放在独立的Git仓库中，为了方便你下载代码，我把所有模块的代码都打包放到了这个<a href=\"https://gitee.com/banxian-yao/geekbang-coupon-center.git\">代码仓库</a>里，你可以在这里找到课程各阶段对应的源代码。</p><p>在每一个以“-serv”结尾的业务子模块中，我从内部分层的角度对其做了进一步拆分，以我们今天要搭建的coupon-template-serv为例，它内部包含了三个子模块：</p><ul>\n<li><strong>coupon-template-api</strong>：存放公共POJO类或者对外接口的子模块；</li>\n<li><strong>coupon-template-dao</strong>：存放数据库实体类和Dao层的子模块；</li>\n<li><strong>coupon-template-impl</strong>：核心业务逻辑的实现层，对外提供REST API。</li>\n</ul><p>你会发现，我把coupon-template-api作为一个单独的模块，这样做的好处是：<strong>当某个上游服务需要获取coupon-template-serv的接口参数时，只要导入轻量级的coupon-template-api模块，就能够获取接口中定义的Request和Response的类模板，不需要引入多余的依赖项（比如Dao层或者Service层）</strong>。</p><p>这就是开闭原则的应用，它使各个模块间的职责和边界划分更加清晰，降低耦合的同时也更加利于依赖管理。</p><p>搭建好项目的结构之后，接下来我们借助Maven工具将需要的依赖包导入到项目中。</p><h2>添加Maven依赖项</h2><p>这里你要注意一下，添加Maven依赖项需要遵循“从上到下”的原则，也就是从顶层项目geekbang-coupon开始，顺藤摸瓜直到coupon-template-serv下的子模块。首先，我们来看看顶层geekbang-coupon依赖项的编写。</p><h3>编写geekbang-coupon依赖项</h3><p>geekbang-coupon是整个实战项目的顶层项目，它不用操心具体的业务逻辑，只用完成一个任务：管理子模块和定义Maven依赖项的版本。这就像一个公司的大boss一样，只用制定方向战略，琐碎的业务就交给下面人（子模块）来办就好了。</p><p>那么顶层战略在哪里制定？其实就在pom.xml文件里，我们看一下geekbang-coupon的pom文件中都定义了哪些内容。</p><pre><code>&lt;!-- 已省略部分标签，完整内容请参考项目源代码 --&gt;\n&lt;parent&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n    &lt;version&gt;2.4.2&lt;/version&gt;\n&lt;/parent&gt;\n&lt;groupId&gt;com.geekbang&lt;/groupId&gt;\n&lt;artifactId&gt;geekbang-coupon&lt;/artifactId&gt;\n&lt;packaging&gt;pom&lt;/packaging&gt;\n&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n&lt;modules&gt;\n    &lt;module&gt;coupon-template-serv&lt;/module&gt;\n    &lt;module&gt;coupon-calculation-serv&lt;/module&gt;\n    &lt;module&gt;coupon-customer-serv&lt;/module&gt;\n    &lt;module&gt;middleware&lt;/module&gt;\n&lt;/modules&gt;\n&lt;dependencyManagement&gt;\n    &lt;dependencies&gt;\n       &lt;dependency&gt;\n          &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n          &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;\n          &lt;version&gt;3.0&lt;/version&gt;\n       &lt;/dependency&gt;\n    &lt;!-- 省略部分依赖项 --&gt;\n    &lt;/dependencies&gt;\n&lt;/dependencyManagement&gt;\n</code></pre><p>在pom文件里有以下三个重点标签。</p><ol>\n<li><strong>&lt; parent &gt;标签</strong></li>\n</ol><p>在parent标签中我们指定了geekbang-coupon项目的“父级依赖”为spring-boot-starter-parent，这样一来，spring-boot-starter-parent里定义的Spring Boot组件版本信息就会被自动带到子模块中。这种做法也是大多数Spring Boot项目的通用做法，不仅降低了依赖项管理的成本，也不需要担心各个组件间的兼容性问题。</p><ol start=\"2\">\n<li><strong>&lt; packaging &gt;标签</strong></li>\n</ol><p>maven的打包类型有三种：jar、war和pom。当我们指定packaging类型为pom时，意味着当前模块是一个“boss”，它只用关注顶层战略，即定义依赖项版本和整合子模块，不包含具体的业务实现。</p><ol start=\"3\">\n<li><strong>&lt; dependencymanagement &gt;标签</strong></li>\n</ol><p><strong>这个标签的作用和&lt; parent &gt;标签类似，两者都是将版本信息向下传递</strong>。dependencymanagement是boss们定义顶层战略的地方，我们可以在这里定义各个依赖项的版本，当子项目需要引入这些依赖项的时候，只用指定groupId和artifactId即可，不用管version里该写哪个版本。</p><p>完成了geekbang-coupon依赖项的编写，接下来我们看看coupon-template-serv依赖项的编写。</p><h3>编写coupon-template-serv依赖项</h3><p>coupon-template-serv是大boss下面的一个小头目，和geekbang-coupon一样，它的packaging类型也是pom。我们说过boss只用管顶层战略，因此coupon-temolate-serv的pom文件内容很简单，只是定义了父级项目和子模块。</p><pre><code>&lt;!-- 已省略部分标签，完整内容请参考项目源代码 --&gt;\n&lt;parent&gt;\n    &lt;artifactId&gt;geekbang-coupon&lt;/artifactId&gt;\n    &lt;groupId&gt;com.geekbang&lt;/groupId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n    &lt;relativePath&gt;../pom.xml&lt;/relativePath&gt;\n&lt;/parent&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n&lt;artifactId&gt;coupon-template-serv&lt;/artifactId&gt;\n&lt;packaging&gt;pom&lt;/packaging&gt;\n&lt;modules&gt;\n    &lt;module&gt;coupon-template-api&lt;/module&gt;\n    &lt;module&gt;coupon-template-dao&lt;/module&gt;\n    &lt;module&gt;coupon-template-impl&lt;/module&gt;\n&lt;/modules&gt;\n</code></pre><p>我们已经把geekbang-coupon和coupon-template-serv两个父级项目的依赖项添加完毕，接下来就去搭建coupon-template-serv下面的三个子模块。</p><p>coupon-template-api模块存放了接口Request和Response的类模板，是另两个子模块需要依赖的公共类库，所以我就先从coupon-template-api开始项目构建。</p><h2>搭建coupon-template-api模块</h2><p>coupon-template-api模块是专门用来存放公共类的仓库，我把REST API接口的服务请求和服务返回对象的POJO类放到了里面。在微服务领域，将外部依赖的POJO类或者API接口层单独打包是一种通用做法，这样就可以给外部依赖方提供一个“干净”（不包含非必要依赖）的接口包，为远程服务调用（RPC）提供支持。</p><p>在coupon-template-api项目的pom文件中，我只添加了少量的“工具类”依赖，比如lombok、guava和validation-api包等通用组件，这些工具类用来帮助我们自动生成代码并提供一些便捷的功能特性，具体的依赖项你可以参考项目源码。</p><p>首先，我们需要定义一个用来表示优惠券类型的enum对象，在com.geekbang.coupon.template.api.enum包下创建一个名为CouponType的枚举类。</p><pre><code>@Getter\n@AllArgsConstructor\npublic enum CouponType {\n    UNKNOWN(&quot;unknown&quot;, &quot;0&quot;),\n    MONEY_OFF(&quot;满减券&quot;, &quot;1&quot;),\n    DISCOUNT(&quot;打折&quot;, &quot;2&quot;),\n    RANDOM_DISCOUNT(&quot;随机减&quot;, &quot;3&quot;)\n    LONELY_NIGHT_MONEY_OFF(&quot;晚间双倍优惠券&quot;, &quot;4&quot;);\n    \n    private String description;\n    // 存在数据库里的最终code\n    private String code;\n    \n    public static CouponType convert(String code) {\n        return Stream.of(values())\n                .filter(bean -&gt; bean.code.equalsIgnoreCase(code))\n                .findFirst()\n                .orElse(UNKNOWN);\n    }\n}\n</code></pre><p>CouponType类定义了多个不同类型的优惠券，convert方法可以根据优惠券的编码返回对应的枚举对象。这里还有一个“Unknown”类型的券，它专门用来对付故意输错code的恶意请求。</p><p>作为一个骨灰级程序员，我会认为所有需要用户输入的信息都是不可靠的，并且需要对各种意外输入做拦截、防范，这就是“<strong>防御性编程</strong>”的思维。工作的时间越久，人往往会变得越怂（都是被各种故障吓大的）。</p><p>接下来，我们创建两个用来定义优惠券模板规则的类，分别是TemplateRule和Discount。我把它们放在com.geekbang.coupon.template.api.beans.rules包路径下。</p><p>TemplateRule包含了两个规则，一是领券规则，包括每个用户可领取的数量和券模板的过期时间；二是券模板的计算规则。</p><pre><code>@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class TemplateRule {\n\n\n    // 可以享受的折扣\n    private Discount discount;\n    \n    // 每个人最多可以领券数量\n    private Integer limitation;\n    \n    // 过期时间\n    private Long deadline;\n}\n</code></pre><p>这里我强烈推荐你<strong>使用一键三连的lombok注解自动生成基础代码</strong>，它们分别是Data、NoArgsConstructor和AllArgsConstructor。其中，Data注解自动生成getter、setter、toString等方法，后两个注解分别生成无参构造器和全参构造器，省时省力省地盘。</p><p>TemplateRule中的Discount成员变量定义了使用优惠券的规则，代码如下。</p><pre><code>public class Discount {\n\n\n    // 对于满减券 - quota是减掉的钱数，单位是分\n    // 对于打折券 - quota是折扣(以100表示原价)，90就是打9折,  95就是95折\n    // 对于随机立减券 - quota是最高的随机立减额\n    // 对于晚间特别优惠券 - quota是日间优惠额，晚间优惠翻倍\n    private Long quota;\n\n\n    // 订单最低要达到多少钱才能用优惠券，单位为分\n    private Long threshold;\n}\n</code></pre><p>从上面代码中可以看出，我使用Long来表示“金额”。对于境内电商行业来说，金额往往是以分为单位的，这样我们可以直接使用Long类型参与金额的计算，比如100就代表100分，也就是一块钱。这比使用Double到处转换BigDecimal省了很多事儿。</p><p>最后，我们在com.geekbang.coupon.template.api.beans包下创建一个名为CouponTemplateInfo的类，用来创建优惠券模板，代码如下：</p><pre><code>// 已省略部分内容，完整内容请参考项目源代码\npublic class CouponTemplateInfo {\n    private Long id;\n    @NotNull\n    private String name; // 优惠券名称\n    @NotNull\n    private String desc; // 优惠券描述\n    \n    @NotNull\n    private String type;  // 优惠券类型(引用CouponType里的code)\n    \n    private Long shopId; // 优惠券适用门店 - 若无则为全店通用券\n   \n    @NotNull\n    private TemplateRule rule; // 优惠券使用规则\n    \n    private Boolean available; // 当前模板是否为可用状态\n}\n</code></pre><p>在上面的代码中，我们应用了jakarta.validate-api组件的注解@NotNull，对参数是否为Null进行了校验。如果请求参数为空，那么接口会自动返回Bad Request异常。当然，jakarta组件还有很多可以用来做判定验证的注解，合理使用可以节省大量编码工作，提高代码可读性。</p><p>此外，你还会发现，CouponTemplateInfo内封装了优惠券模板的基本信息，我们可以把优惠券模板当做一个“模具”，每一张优惠券都经由模具来制造，被制造出来的优惠券则使用CouponInfo对象来封装。</p><p>CouponInfo对象包含了优惠券的模板信息、领券用户ID、适用门店ID等属性。除此之外，我还在源码中定义了用来实现分页查找的对象，如果你特别感兴趣，可以到项目源码中查看完整的类定义。</p><p>到这里我们就完成了coupon-template-api项目的搭建，下面我们开始搭建Dao层模块：coupon-template-dao。它主要负责和数据库的对接、读取。</p><h2>搭建coupon-template-dao模块</h2><p>首先，我们把必要的依赖项添加到coupon-template-dao项目中，比较关键的maven依赖项有以下几个。</p><ul>\n<li><strong>coupon-template-api:</strong> 引入api包下的公共类；</li>\n<li><strong>spring-boot-starter-data-jpa</strong>: 添加spring-data-jpa的功能进行CRUD操作；</li>\n<li><strong>mysql-connector-java</strong>: 引入mysql驱动包，驱动版本尽量与mysql版本保持一致。</li>\n</ul><p>接下来，我们在com.geekbang.coupon.template.dao.entity目录下创建了一个数据库实体对象的Java类：CouponTemplate。</p><pre><code>// 完整内容请参考源代码\n@Entity\n@Builder\n@EntityListeners(AuditingEntityListener.class)\n@Table(name = &quot;coupon_template&quot;)\npublic class CouponTemplate implements Serializable {\n\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Column(name = &quot;id&quot;, nullable = false)\n    private Long id;\n\n\n    // 状态是否可用\n    @Column(name = &quot;available&quot;, nullable = false)\n    private Boolean available;\n\n\n    @Column(name = &quot;name&quot;, nullable = false)\n    private String name;\n\n\n    @Column(name = &quot;description&quot;, nullable = false)\n    private String description;\n\n\n    // 适用门店-如果为空，则为全店满减券\n    @Column(name = &quot;shop_id&quot;)\n    private Long shopId;\n    \n    // 优惠券类型\n    @Column(name = &quot;type&quot;, nullable = false)\n    @Convert(converter = CouponTypeConverter.class)\n    private CouponType category;\n\n\n    // 创建时间，通过@CreateDate注解自动填值（需要配合@JpaAuditing注解在启动类上生效）\n    @CreatedDate\n    @Column(name = &quot;created_time&quot;, nullable = false)\n    private Date createdTime;\n\n\n    // 优惠券核算规则，平铺成JSON字段\n    @Column(name = &quot;rule&quot;, nullable = false)\n    @Convert(converter = RuleConverter.class)\n    private TemplateRule rule;\n\n\n}\n</code></pre><p>在CouponTemplate上，我们运用了javax.persistence包和Spring JPA包的标准注解，对数据库字段进行了映射，我挑几个关键注解说道一下。</p><ul>\n<li>Entity：声明了“数据库实体”对象，它是数据库Table在程序中的映射对象；</li>\n<li>Table：指定了CouponTemplate对应的数据库表的名称；</li>\n<li>ID/GeneratedValue：ID注解将某个字段定义为唯一主键，GeneratedValue注解指定了主键生成策略；</li>\n<li>Column：指定了每个类属性和数据库字段的对应关系，该注解还支持非空检测、对update和create语句进行限制等功能；</li>\n<li>CreatedDate：自动填充当前数据的创建时间；</li>\n<li>Convert：如果数据库中存放的是code、string、数字等等标记化对象，可以使用Convert注解指定一个继承自AttributeConverter的类，将DB里存的内容转化成一个Java对象。</li>\n</ul><p>这里我要补充一点，其实JPA也支持一对多、多对多的级联关系（ManyToOne、OneToOne等注解），但是你发现我并没有在项目中使用，原因是这些注解背后有很多隐患。<strong>过深的级联层级所带来的DB层压力可能会在洪峰流量下被急剧放大，而DB恰恰是最不抗压的一环。</strong>所以，我们很少在一些一二线大厂的超高并发项目中看到级联配置的身影。</p><p>我的经验是<strong>尽可能减少级联配置，用单表查询取而代之</strong>，如果一个查询需要join好几张表，最好的做法就通过重构业务逻辑来简化DB查询的复杂度。</p><p>最后，我们来到定义DAO的地方，借助Spring Data的强大功能，我们只通过接口名称就可以声明一系列的DB层操作。我们先来看一下CouponTemplateDao这个类的代码。</p><pre><code>public interface CouponTemplateDao\n        extends JpaRepository&lt;CouponTemplate, Long&gt; {\n        \n    // 根据Shop ID查询出所有券模板\n    List&lt;CouponTemplate&gt; findAllByShopId(Long shopId);\n    \n    // IN查询 + 分页支持的语法\n    Page&lt;CouponTemplate&gt; findAllByIdIn(List&lt;Long&gt; Id, Pageable page);\n    \n    // 根据shop ID + 可用状态查询店铺有多少券模板\n    Integer countByShopIdAndAvailable(Long shopId, Boolean available);\n\n\n    /**\n     * 将优惠券设置为不可用\n     */\n    @Modifying\n    @Query(&quot;update CouponTemplate c set c.available = 0 where c.id = :id&quot;)\n    int makeCouponUnavailable(@Param(&quot;id&quot;) Long id);\n    \n    // 完整方法请至源码查看\n}\n</code></pre><p>看了这段代码，你一定在想这里都是查询数据的场景，那么“增删改”的方法在哪里？</p><p>其实，这些方法都在CouponTemplateDao所继承的JpaRepository类中。这个父类就像一个百宝箱，内置了各种各样的数据操作方法。我们可以通过内置的save方法完成对象的创建和更新，也可以使用内置的delete方法删除数据。</p><p>此外，它还提供了对“查询场景”的丰富支持，除了通过ID查询以外，我们还可以使用三种不同的方式查询数据。</p><ul>\n<li><strong>通过接口名查询</strong>：将查询语句写到接口的名称中；</li>\n<li><strong>通过Example对象查询</strong>：构造一个模板对象，使用findAll方法来查询；</li>\n<li><strong>自定义查询</strong>：通过Query注解自定义复杂查询语句。</li>\n</ul><p>在CouponTemplateDao中，第一个方法findAllByShopId就是通过接口名查询的例子，jpa使用了一种约定大于配置的思想，你只需要把要查询的字段定义在接口的方法名中，在你发起调用时后台就会自动转化成可执行的SQL语句。构造方法名的过程需要遵循&lt;起手式&gt;By&lt;查询字段&gt;&lt;连接词&gt;的结构。</p><ul>\n<li><strong>起手式</strong>：以find开头表示查询，以count开头表示计数；</li>\n<li><strong>查询字段</strong>：字段名要保持和Entity类中定义的字段名称一致；</li>\n<li><strong>连接词</strong>：每个字段之间可以用And、Or、Before、After等一些列丰富的连词串成一个查询语句。</li>\n</ul><p>以接口名查询的方式虽然很省事儿，但它面对复杂查询却力不从心，一来容易导致接口名称过长，二来维护起来也挺吃力的。所以，<strong>对于复杂查询，我们可以使用自定义SQL、或者Example对象查找的方式。</strong></p><p>关于自定义SQL，你可以参考CouponTemplateDao中的makeCouponUnavailable方法，我将SQL语句定义在了Query注解中，通过参数绑定的方式从接口入参处获取查询参数，这种方式是最接近SQL编码的CRUD方式。</p><p>Example查询的方式也很简单，构造一个CouponTemplate的对象，将你想查询的字段值填入其中，做成一个查询模板，调用Dao层的findAll方法即可，这里留给你自己动手验证。</p><pre><code>couponTemplate.setName(&quot;查询名称&quot;);\ntemplateDao.findAll(Example.of(couponTemplate));\n</code></pre><p>现在，API和Dao层都已经准备就绪，万事俱备只差最后的业务逻辑层了，接下来我们去搭建coupon-template-impl模块。</p><h2>搭建coupon-template-impl模块</h2><p>coupon-template-impl是coupon-template-serv下的一个子模块，也是实现业务逻辑的地方。从依赖管理的角度，它引入了coupon-template-api和coupon-template-dao两个内部依赖项到pom.xml。</p><p>当然，我们也需要加入几个外部依赖项，你可以参考项目的pom.xml源代码获取完整的依赖项列表。</p><p>首先，我们先来定义Service层的接口类：CouponTemplateService。在这个接口中，我们定义了优惠券创建、查找优惠券和修改优惠券可用状态的方法。</p><pre><code>public interface CouponTemplateService {\n    // 创建优惠券模板\n    CouponTemplateInfo createTemplate(CouponTemplateInfo request);\n    \n    // 通过模板ID查询优惠券模板\n    CouponTemplateInfo loadTemplateInfo(Long id);\n    \n    // 克隆券模板\n    CouponTemplateInfo cloneTemplate(Long templateId);\n\n\n    // 模板查询（分页）\n    PagedCouponTemplateInfo search(TemplateSearchParams request);\n    \n    // 删除券模板\n    void deleteTemplate(Long id);\n    \n    //批量读取模板\n    Map&lt;Long, CouponTemplateInfo&gt; getTemplateInfoMap(Collection&lt;Long&gt; ids);\n     \n    // 完整方法列表请至源码查看    \n}\n</code></pre><p>由于这部分比较简单，就是通过CouponTemplateDao层来实现优惠券模板的增删改查，这里我就不展开介绍实现层代码了，你可以参考源码中的CouponTemplateServiceImpl类。</p><p>不过，我建议你不要直接copy源码，先尝试自己实现这几个Service方法，写完之后再和我的源码做比较，看一看有哪些可以改进的地方。</p><p>接下来，我们创建CouponTemplateController类对外暴露REST API，可以借助spring-web注解来完成，具体代码如下。</p><pre><code>@Slf4j\n@RestController\n@RequestMapping(&quot;/template&quot;)\npublic class CouponTemplateController {\n\n\n    @Autowired\n    private CouponTemplateService couponTemplateService;\n\n\n    // 创建优惠券\n    @PostMapping(&quot;/addTemplate&quot;)\n    public CouponTemplateInfo addTemplate(@Valid @RequestBody CouponTemplateInfo request) {\n        log.info(&quot;Create coupon template: data={}&quot;, request);\n        return couponTemplateService.createTemplate(request);\n    }\n    \n    // 克隆券模板\n    @PostMapping(&quot;/cloneTemplate&quot;)\n    public CouponTemplateInfo cloneTemplate(@RequestParam(&quot;id&quot;) Long templateId) {\n        log.info(&quot;Clone coupon template: data={}&quot;, templateId);\n        return couponTemplateService.cloneTemplate(templateId);\n    }\n\n\n    // 读取优惠券\n    @GetMapping(&quot;/getTemplate&quot;)\n    public CouponTemplateInfo getTemplate(@RequestParam(&quot;id&quot;) Long id){\n        log.info(&quot;Load template, id={}&quot;, id);\n        return couponTemplateService.loadTemplateInfo(id);\n    }\n    \n    // 搜索模板(支持分页查询)\n    @PostMapping(&quot;/search&quot;)\n    public PagedCouponTemplateInfo search(@Valid @RequestBody TemplateSearchParams request) {\n        log.info(&quot;search templates, payload={}&quot;, request);\n        return couponTemplateService.search(request);\n    }\n    \n    // ... 完整代码请至源码查看\n}\n</code></pre><p>在这里，Controller类中的注解来自spring-boot-starter-web依赖项，通过这些注解将服务以RESTful接口的方式对外暴露。现在，我们来了解下上述代码里，服务寻址过程中的三个重要注解：</p><ul>\n<li><strong>RestController</strong>：用来声明一个Controller类，加载到Spring Boot上下文；</li>\n<li><strong>RequestMapping</strong>：指定当前类中所有方法在URL中的访问路径的前缀；</li>\n<li><strong>Post/Get/PutMapping</strong>：定义当前方法的HTTP Method和访问路径。</li>\n</ul><p>项目启动类是最后的代码部分，我们在com.geekbang.coupon.template下创建一个Application类作为启动程序的入口，并在这个类的头上安上SpringBoot的启动注解。</p><pre><code>@SpringBootApplication\n@EnableJpaAuditing\n@ComponentScan(basePackages = {&quot;com.geekbang&quot;})\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n</code></pre><p>SpringBootApplication注解会自动开启包路径扫描，并启动一系列的自动装配流程（AutoConfig）。在默认情况下，Spring Boot框架会扫描启动类所在package下的所有类，并在上下文中创建受托管的Bean对象，如果我们想加载额外的扫包路径，只用添加ComponentScan注解并指定path即可。</p><p>所有代码环节全部完工后，我们还剩最后的画龙点睛之笔：<strong>创建配置文件application.yml</strong>，它位于src/main/resources文件夹下。Spring Boot支持多种格式的配置文件，这里我们顺应主流，使用yml格式。</p><pre><code># 项目的启动端口\nserver:\n  port: 20000\nspring:\n  application:\n    # 定义项目名称\n    name: coupon-template-serv\n  datasource:\n    # mysql数据源\n    username: root\n#    password: 这里写上你自己的密码\n    url: jdbc:mysql://127.0.0.1:3306/geekbang_coupon_db?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&amp;zeroDateTimeBehavior=convertToNull&amp;serverTimezone=UTC\n    # 指定数据源DataSource类型\n    type: com.zaxxer.hikari.HikariDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    # 数据库连接池参数配置，比如池子大小、超时时间、是否自动提交等等\n    hikari:\n      pool-name: GeekbangCouponHikari\n      connection-timeout: 5000\n      idle-timeout: 30000\n      maximum-pool-size: 10\n      minimum-idle: 5\n      max-lifetime: 60000\n      auto-commit: true\n  jpa:\n    show-sql: true\n    hibernate:\n      # 在生产环境全部为none，防止ddl结构被自动执行，破坏生产数据\n      ddl-auto: none\n    # 在日志中打印经过格式化的SQL语句\n    properties:\n      hibernate.format_sql: true\n      hibernate.show_sql: true\n    open-in-view: false\n</code></pre><p>在配置文件中，有一个地方需要你多加注意，那就是jdbc连接串（spring.datasource.url）。不同版本的MySQL对连接串中的参数有不同的要求。</p><p>如果你发现项目启动过程中抛出了MySQL连接报错，一定记得检查自己的MySQL版本，检查是否缺失了某些参数（比如MySQL 8.x版本下要求传入serverTimezone参数）。如果你本地安装的MySQL版本早于8.x系列，我推荐你重新安装和我一样的MySQL 8.0.27版本，这样就不会碰到兼容性问题了。</p><p>好，到这里，我们优惠券平台项目的第一个模块coupon-template-serv就搭建完成了，你可以在本地启动项目并通过Postman发起调用。我已经将Postman API集合上传到了这个<a href=\"https://gitee.com/banxian-yao/geekbang-coupon-center\">Gitee源码库</a>中的“资源文件”目录下，文件名为“Spring Boot阶段.postman_collection.json”，你可以导入到自己本地的Postman中使用。</p><p>现在，我们来回顾一下这节课的重点内容。</p><h2>总结</h2><p>今天我带你搭建了整个优惠券服务的整体项目结构，并且用Spring Boot快速落地了优惠券模板服务。如果你在自己的项目中还在使用繁琐的sql资源文件来操作数据库，不妨升级成coupon-template-dao中使用的spring-data-jpa来简化DB操作。<strong>spring-data-jpa的功能特性也折射出Spring框架的发展趋势：约定大于配置，且越来越轻量级。</strong></p><p>在学习这节课的时候，我希望你不要只满足于把项目跑起来就万事大吉了，你还要做一些思考和总结沉淀，想一想如何能把课程中的一些技术点应用在自己的项目中。我在这节课分享了很多开发小技巧，比如防御性编程、代码自动生成、金额计算、如何简化数据校验、级联关系的误区等，这些都可以作为你的开发素材。</p><p>希望你能够动起手来，顺着这节课程的内容动手搭建整个服务，不要直接照搬源码本地执行一下就完事儿了，只有上手实际搭建项目我们才能了解技术细节、积累排查问题的经验。要知道，纸上得来终觉浅，绝知此事要躬行。</p><p>在下一节课中，我会带你搭建coupon-calculation-ser和coupon-customer-serv，构建一个完整的优惠券平台Spring Boot项目。</p><h2>思考题</h2><p>最后，请你思考一个问题：</p><p>级联查询很容易引发性能问题，你在自己的项目中遇到最复杂的SQL是什么？然后，请你进一步做个思考：如果这条SQL的调用量激增，你该如何进行优化？欢迎你“显摆”出来，我在留言区等你。</p><p>好啦，这节课就结束啦。也欢迎你把这节课分享给更多对Spring Cloud感兴趣的朋友。我是姚秋辰，我们下节课再见！</p>","neighbors":{"left":{"article_title":"04 | 十八般兵器：如何搭建项目所需的开发环境？","id":469935},"right":{"article_title":"06 | 牛刀小试：如何搭建优惠券计算服务和用户服务？","id":471688}},"comments":[{"had_liked":false,"id":327528,"user_name":"暮雨yl晨曦","can_delete":false,"product_type":"c1","uid":1052785,"ip_address":"","ucode":"18E5D3A93E67FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/71/d6c2e3a0.jpg","comment_is_top":false,"comment_ctime":1640162701,"is_pvip":false,"replies":[{"id":"119234","content":"1. 对滴，同学太懂我了<br>2. 哈哈没错，确实推荐用jackson和gson来替代，像我从阿里出来的人都有职业病潜意识里就用了fastjson，中毒不轻。fastjson早期用了很多字节码技术提高性能，埋了不少坑，以前在集团也是bug不断，现在其他json组件的解析性能都上来了，确实没必要用fastjson.<br>3. 对的，我直接从老项目里copy出来的，多谢同学提醒<br>4. 是的分开命名确实在IDEA本地启动的时候会方便一些<br>5. 看出同学还是比较细节的，强迫症是程序员的一个很好的特质。一般我习惯不立即返回，方便以后打debug日志输出参数<br>6. 这是防御性编程的习惯，以防日后code refactor的时候更改属性名称后SQL挂掉<br>","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640192284,"ip_address":"","comment_id":327528,"utype":1}],"discussion_count":11,"race_medal":0,"score":"194913691021","product_id":100101301,"comment_content":"仔仔细细review了老师的coupon-template-serv下的代码，有几个问题请教老师。<br>1.@ComponentScan(basePackages = {&quot;com.geekbang&quot;})，我仔细核对了，所有子module的代码都是在包com.geekbang.coupon.template下，启动类也在这个包下，所以这个注解是可以去掉的。我猜测老师是为了演示，告诉大家这个注解是这么用的。<br>2.我们现在项目中都被强制要求不允许用fastjson，看到项目中用了这个。其实springboot是有jackson和gson的。我猜测老师也是为了方便项目演示而使用fastjson。jackson和gson上手比fastjson稍微麻烦点。<br>3.关于dependencyManagement中，lombok、commons-lang3、commons-codec、jakarta.validation-api，这些是可以去掉的，因为在SpringBoot中已经定义了。老师可以看spring-boot-dependencies-{version}.pom，里面都有。我估计老师是从老项目中copy出来的，springboot版本更新了，但是没关注到这些依赖也已经被springboot管理起来了。另外，guava 16的版本有点低，我自己换成最新的版本了。目前的代码中还没看到有使用的。<br>4.现在启动类都是类名Application，我还是喜欢分开，比如CouponTemplateApplication。为了方便我也是放到同一个git目录下。所以就会导致idea那边默认的类名：Application、Application(1)、Application(2)。。。。<br>5.一些细节性的代码，比如function能立即返回，但是还是先声明了变量，这是为了方便调试吗？我为了调试方便一些我也会这么写，但是调试完成会改成立即返回的形式。另外，一些import、无用的注释之类的并没有去掉、Long-&gt;可以使用long、一些属性可以声明成final等。强迫症看着难受。<br>6.entity中，当database column name和entity里的字段名一样的话，是可以不用特意加name=&quot;xxxx&quot;的。","like_count":45,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540913,"discussion_content":"1. 对滴，同学太懂我了\n2. 哈哈没错，确实推荐用jackson和gson来替代，像我从阿里出来的人都有职业病潜意识里就用了fastjson，中毒不轻。fastjson早期用了很多字节码技术提高性能，埋了不少坑，以前在集团也是bug不断，现在其他json组件的解析性能都上来了，确实没必要用fastjson.\n3. 对的，我直接从老项目里copy出来的，多谢同学提醒\n4. 是的分开命名确实在IDEA本地启动的时候会方便一些\n5. 看出同学还是比较细节的，强迫症是程序员的一个很好的特质。一般我习惯不立即返回，方便以后打debug日志输出参数\n6. 这是防御性编程的习惯，以防日后code refactor的时候更改属性名称后SQL挂掉\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1640192284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2415448,"avatar":"https://static001.geekbang.org/account/avatar/00/24/db/58/a7a0a85b.jpg","nickname":"二饼","note":"","ucode":"48120565D135F7","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575410,"discussion_content":"学习了👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654813303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2917449,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/3icaaUibVCz5gYiaj5gZ4wV8ick5RhEMpe47XKkdK1nAhA9qic6rwhSrpiasDSQYAwfiaIulhE4YKsbwoOXUfvL76EPSw/132","nickname":"Geek_f76b23","note":"","ucode":"0300CD137BA854","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551961,"discussion_content":"那这样我也要来补充一下，既然引入了lombok就可以不用@Autowired 直接用全参那个注解使用构造函数注入，降低入侵性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645193143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609051,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","nickname":"charmsongo","note":"","ucode":"4FBEE716E93A1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545920,"discussion_content":"大佬，能分享下写的这块的代码吗，交流学习下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642083824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1283066,"avatar":"https://static001.geekbang.org/account/avatar/00/13/93/fa/5f8d06fc.jpg","nickname":"远征","note":"","ucode":"433501AB70964B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544915,"discussion_content":"你好，您说的第四条启动类名Application，没明白。您意思是说需要把文件名改成CouponTemplateApplication?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641780767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1609051,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","nickname":"charmsongo","note":"","ucode":"4FBEE716E93A1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1283066,"avatar":"https://static001.geekbang.org/account/avatar/00/13/93/fa/5f8d06fc.jpg","nickname":"远征","note":"","ucode":"433501AB70964B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545919,"discussion_content":"对，如果你本地启动多个app，你就会发现会出现好多app(1)，app(2)，之类的服务，容易混淆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642083795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544915,"ip_address":""},"score":545919,"extra":""}]},{"author":{"id":1045577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","nickname":"北极的大企鹅","note":"","ucode":"8935346D08E109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543461,"discussion_content":"嗯嗯好细节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641168113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169900,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d9/ec/cf350d07.jpg","nickname":"黎明","note":"","ucode":"7C5D7708B1457B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541339,"discussion_content":"@EntityScan(basePackages = {&#34;com.geekbang.coupon.template.dao.entity&#34;})\n@EnableJpaRepositories(basePackages = {&#34;com.geekbang.coupon.template.dao&#34;})","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640334836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIazKm4Qa7JVu2ZRibhz8ibzKUiaJQXwpDx0QN3rMgSgFia9jn0bprEh696SUkdDjVnjauAkrM1q9YexQ/132","nickname":"zviolet","note":"","ucode":"4891511622DA8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540877,"discussion_content":"细节👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640186771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006030,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/59/ce/abb7bfe3.jpg","nickname":"卟卟熊","note":"","ucode":"017B762191BC65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540792,"discussion_content":"独秀坐下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640171460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169900,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d9/ec/cf350d07.jpg","nickname":"黎明","note":"","ucode":"7C5D7708B1457B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540790,"discussion_content":"不错👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640170469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327426,"user_name":"李峰","can_delete":false,"product_type":"c1","uid":1107209,"ip_address":"","ucode":"3DA3574DB432A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/09/ddabec76.jpg","comment_is_top":false,"comment_ctime":1640133773,"is_pvip":false,"replies":[{"id":"119230","content":"JPA才是orm框架标准，mybatis只能算是半自动。跟着spring的方向走，把手动挡的mybatis换成自动挡spring-data-jpa，简化轻量级和快速开发是主方向，在微服务的领域模型拆分下，不太需要从前那种复杂sql扮演跨多domain查询的角色","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640190711,"ip_address":"","comment_id":327426,"utype":1}],"discussion_count":10,"race_medal":0,"score":"57474708621","product_id":100101301,"comment_content":"orm框架，我建议换成mybatis，现在很多企业实现中都是mybatis","like_count":13,"discussions":[{"author":{"id":1178294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIazKm4Qa7JVu2ZRibhz8ibzKUiaJQXwpDx0QN3rMgSgFia9jn0bprEh696SUkdDjVnjauAkrM1q9YexQ/132","nickname":"zviolet","note":"","ucode":"4891511622DA8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540874,"discussion_content":"1、课程主要讲微服务，不用太纠结用什么orm框架。\n2、根据作者观点，超高并发项目中的sql都会避免级联查询，尽量使用单表查询。MyBatis的优势就是在xml中灵活的写复杂sql，既然项目中都是针对单表的简单查询，那MyBatis优势就不明显了，所以用spring-data-jpa来简化DB操作。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1640186537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540908,"discussion_content":"JPA才是orm框架标准，mybatis只能算是半自动。跟着spring的方向走，把手动挡的mybatis换成自动挡spring-data-jpa，简化轻量级和快速开发是主方向，在微服务的领域模型拆分下，不太需要从前那种复杂sql扮演跨多domain查询的角色","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1640190711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042354,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e7/b2/334bc992.jpg","nickname":"AlfredLover","note":"","ucode":"A3A998F362CC37","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540728,"discussion_content":"是的，大部分是mybatis。不过想知道作者用 spring-data-jpa 是原因是什么？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1640143443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1784474,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3a/9a/8b6aaa39.jpg","nickname":"黑","note":"","ucode":"96D0F91F8A6FCA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543644,"discussion_content":"mybatis确实不如jpa。问题是jpa不好用。。。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641258268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1887261,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/cc/1d/3c0272a1.jpg","nickname":"abc🙂","note":"","ucode":"FCF2B9091D161B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542924,"discussion_content":"Jpa的问题在查询性能，如果读写分离，其实复杂查询可以使用任何框架甚至异构数据库。jpa的优势就是orm，让我们更好的面向业务编程，也符合DDD大趋势","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1640880842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1031930,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/be/fa/2c5cb1e6.jpg","nickname":"martin","note":"","ucode":"F2CA8F9976AC43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540817,"discussion_content":"jpa相对来说更便捷一些，1.使用注解就可以完成映射；2.jpaRepository提供了crud","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1640176730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1823222,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/r1nMYwPq7f2bsIkXuDGM8qvLrX2gOdV8LoosAe8E15xeDbrDtNDiaH3UAcy742ibh8sZ06fUibqdgiccqVhCNUscyg/132","nickname":"小格子","note":"","ucode":"0841936B4A4CEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541400,"discussion_content":"可以使用 Mybatis plus","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640355770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2019534,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d0/ce/a81126ea.jpg","nickname":"代先生。","note":"","ucode":"1CBFB13D7FD3B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1823222,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/r1nMYwPq7f2bsIkXuDGM8qvLrX2gOdV8LoosAe8E15xeDbrDtNDiaH3UAcy742ibh8sZ06fUibqdgiccqVhCNUscyg/132","nickname":"小格子","note":"","ucode":"0841936B4A4CEC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576828,"discussion_content":"对，个人还是不推荐jpa，推荐Mybatis plus /Mybatis","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655801133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":541400,"ip_address":""},"score":576828,"extra":""}]},{"author":{"id":1130726,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/e6/2cd0f52b.jpg","nickname":"Mr.x","note":"","ucode":"FDA144380DB9AE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543914,"discussion_content":"有项目用过SpringDataJPA，复杂SQL 拼接的痛苦！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641351440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1006789,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","nickname":"梁中华","note":"","ucode":"52FE40242CBAD0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1130726,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/e6/2cd0f52b.jpg","nickname":"Mr.x","note":"","ucode":"FDA144380DB9AE","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":550713,"discussion_content":"有复杂查询还是mybatis的动态SQL给力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644681111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":543914,"ip_address":""},"score":550713,"extra":""}]}]},{"had_liked":false,"id":327440,"user_name":"gevin","can_delete":false,"product_type":"c1","uid":1005862,"ip_address":"","ucode":"B5AD68F1884A1F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/26/1015d573.jpg","comment_is_top":false,"comment_ctime":1640136534,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"44589809494","product_id":100101301,"comment_content":"Lombok的@Data 注解，我一般只用在VO和DO对象上，BO上会刻意绕开在类上加@Setter 注解。<br>使用@Data，主要是出于写代码偷懒，VO和DO上业务逻辑少，主要是数据载体的作用，放弃对象一定的封装性问题不大；而BO中要包含较多的业务逻辑，我通常会比较严格的遵守面向对象的要求","like_count":10,"discussions":[{"author":{"id":2631749,"avatar":"https://static001.geekbang.org/account/avatar/00/28/28/45/8dc28ef6.jpg","nickname":"槐安","note":"","ucode":"7A7A925B57955C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541869,"discussion_content":"有道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640588877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327463,"user_name":"卟卟熊","can_delete":false,"product_type":"c1","uid":1006030,"ip_address":"","ucode":"017B762191BC65","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/ce/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1640140461,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"40294846125","product_id":100101301,"comment_content":"就像作者说的那样，我们不相信任何的代码，我们必须亲眼看到执行的每一句sql，hibernate就因为全自动，造成对用户完全的黑盒是一种很可怕的事情。","like_count":9,"discussions":[{"author":{"id":1031930,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/be/fa/2c5cb1e6.jpg","nickname":"martin","note":"","ucode":"F2CA8F9976AC43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540816,"discussion_content":"配置日志的级别为DEBUG时，jpa的sql是会输出的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640176617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1031930,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/be/fa/2c5cb1e6.jpg","nickname":"martin","note":"","ucode":"F2CA8F9976AC43","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557847,"discussion_content":"多人协作开发的时候真是恐怖 你需要仔细观察对方写的所有的坑，要不然在hibernate中就无限放大了  近期重构的项目就是越久远 改动越大的 性能越弱。。恩 有感慨于 hibernate 套了jpa 的壳诈尸了。。没想到在13 14年就被抛弃的hibernate 又回来了。。我们继续在观察1 2年会咋样。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647999233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":540816,"ip_address":""},"score":557847,"extra":""}]}]},{"had_liked":false,"id":327740,"user_name":"C","can_delete":false,"product_type":"c1","uid":2063863,"ip_address":"","ucode":"D8F2E418489690","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7d/f7/91ef60a5.jpg","comment_is_top":false,"comment_ctime":1640259634,"is_pvip":false,"replies":[{"id":"119317","content":"像join，还有笛卡尔积之类的运算都是很消耗DB资源的，调出sql执行计划看选择的索引策略和时间指标，对一些低效步骤进行拆分，将一个大sql拆成若干个子sql，用代码逻辑替换sql逻辑。 - 这是单体应用下的拆分思路，至于微服务架构，如果领域划分合理的话，不太会出现跨一串表的查询，取而代之是跨服务api调用。报表类需求需要跨domain的场景，通常由数据团队，用各种EDL、data lake等等一堆大数据技术来搭建。<br><br>","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640263487,"ip_address":"","comment_id":327740,"utype":1}],"discussion_count":5,"race_medal":0,"score":"35999998002","product_id":100101301,"comment_content":"我的经验是尽可能减少级联配置，用单表查询取而代之，如果一个查询需要 join 好几张表，最好的做法就通过重构业务逻辑来简化 DB 查询的复杂度。<br><br><br>这个能详细解说下吗？","like_count":8,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541132,"discussion_content":"像join，还有笛卡尔积之类的运算都是很消耗DB资源的，调出sql执行计划看选择的索引策略和时间指标，对一些低效步骤进行拆分，将一个大sql拆成若干个子sql，用代码逻辑替换sql逻辑。 - 这是单体应用下的拆分思路，至于微服务架构，如果领域划分合理的话，不太会出现跨一串表的查询，取而代之是跨服务api调用。报表类需求需要跨domain的场景，通常由数据团队，用各种EDL、data lake等等一堆大数据技术来搭建。\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640263487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2063863,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/7d/f7/91ef60a5.jpg","nickname":"C","note":"","ucode":"D8F2E418489690","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":541776,"discussion_content":"谢谢，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640565889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":541132,"ip_address":""},"score":541776,"extra":""},{"author":{"id":1591962,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4a/9a/ac4ae803.jpg","nickname":"Nydia","note":"","ucode":"52B08829B95FFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":581721,"discussion_content":"我也确实很纠结，究竟是一个sql简单地写完逻辑，还是用代码逻辑实现。一个sql减少工作量但也确实影响性能。不过，以代码逻辑多次查询数据库不是也很影响性能吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658937369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":541132,"ip_address":""},"score":581721,"extra":""}]},{"author":{"id":1654976,"avatar":"https://static001.geekbang.org/account/avatar/00/19/40/c0/18066d53.jpg","nickname":"早睡早起","note":"","ucode":"A2120D7984FDF0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575092,"discussion_content":"fix：用各种EDL -&gt; 用各种ETL","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654591022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1637228,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fb/6c/12fdc372.jpg","nickname":"迈向架构师","note":"","ucode":"2476594CF76001","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1654976,"avatar":"https://static001.geekbang.org/account/avatar/00/19/40/c0/18066d53.jpg","nickname":"早睡早起","note":"","ucode":"A2120D7984FDF0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":575712,"discussion_content":"可能老师想说的EDL是指数据湖？ETL应该是指数仓抽数吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655046103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":575092,"ip_address":""},"score":575712,"extra":""}]}]},{"had_liked":false,"id":327583,"user_name":"前行","can_delete":false,"product_type":"c1","uid":1530657,"ip_address":"","ucode":"B8B703C1F919F3","user_header":"https://static001.geekbang.org/account/avatar/00/17/5b/21/02a8d30f.jpg","comment_is_top":false,"comment_ctime":1640182719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31704953791","product_id":100101301,"comment_content":"用不习惯 jpa 的，可以使用 mybatis-plus","like_count":7},{"had_liked":false,"id":329492,"user_name":"~","can_delete":false,"product_type":"c1","uid":2495621,"ip_address":"","ucode":"BE5E3BD6EE3665","user_header":"https://static001.geekbang.org/account/avatar/00/26/14/85/73e55be5.jpg","comment_is_top":false,"comment_ctime":1641369863,"is_pvip":false,"replies":[{"id":"120018","content":"1和2完全正确，克隆是比如有些券模板已经被设置成unavailable了，我想创建个一模一样的新的券，可以clone一个状态是avaiable的新模板。真实情况下券模板和券都要有一个单独的过期时间，模板的过期时间控制整体券活动的时间（比如双11所有券结束的时间是某日0点），券的过期时间控制个人领券后的有效使用时间，我这里对业务做了简化了没有添加券的过期时间","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641399402,"ip_address":"","comment_id":329492,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23116206343","product_id":100101301,"comment_content":"老师你好，经过一遍 review 本章以及下一章的代码后，我还是犯迷糊，想要请教一下老师。先讲一下我的看法。<br> 1. CouponTemplateInfo 作为券模板封装了「一类」券的特征信息。比如某类券是叫做「满减券」，通过 type 属性与 CouponType 对应，这是「这一类」券的共同特征，所以一并存放到 CouponTemplateInfo 中；<br> 2. CouponInfo 这个类就是具体某个券，他除了要关注券模板的信息以外，还要关注自身券对应的使用者、自身使用情况等等具象化的信息。以上两点我的理解。<br> 3. 既然有了 CouponTemplateInfo，为何还需clone 模板这个方法？以我的理解，一个类型的券模板只需要一个就可以了，如果克隆就不是重复了吗？我又注意到， TemplateRule 是属于 CouponTemplateInfo 的属性，「过期时间」和「可享受折扣」两个属性其是一个具体的券应该关注的地方，而「每人领券上限」对应的券模版。尽管之后的 customer 模块代码中都是以这个模板过期时间为准，我感觉还是有些不理解，总觉得应该是每个券对应自己的过期时间，麻烦老师详细解答一下。<br> 因为我自己在模型设计上，还有很多欠缺，所以在跟源码时候就特别着重这个地方，还请老师多多指教。","like_count":5,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544125,"discussion_content":"1和2完全正确，克隆是比如有些券模板已经被设置成unavailable了，我想创建个一模一样的新的券，可以clone一个状态是avaiable的新模板。真实情况下券模板和券都要有一个单独的过期时间，模板的过期时间控制整体券活动的时间（比如双11所有券结束的时间是某日0点），券的过期时间控制个人领券后的有效使用时间，我这里对业务做了简化了没有添加券的过期时间","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641399402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2495621,"avatar":"https://static001.geekbang.org/account/avatar/00/26/14/85/73e55be5.jpg","nickname":"~","note":"","ucode":"BE5E3BD6EE3665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":544471,"discussion_content":"感谢老师的指点！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641535900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544125,"ip_address":""},"score":544471,"extra":""}]}]},{"had_liked":false,"id":329881,"user_name":"咬尖月牙儿","can_delete":false,"product_type":"c1","uid":1325661,"ip_address":"","ucode":"A6223A6B713109","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/5d/c5dc789a.jpg","comment_is_top":false,"comment_ctime":1641622696,"is_pvip":false,"replies":[{"id":"120205","content":"这类聚合查询的业务，不能硬拉DB，在高并发量下需要做数据异构方案，把DB数据异构到主搜服务里，比如opensearch之类的非结构化数据库。只有实时性要求很高的查询再考虑DB，其他查询场景尽量不要直接查DB，很多成熟公司都有慢SQL线上监控，多个join的语句只要上线并发量稍微一高就会触发报警被下掉","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641727872,"ip_address":"","comment_id":329881,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18821491880","product_id":100101301,"comment_content":"针对管理后台那种需要查看多个维度信息的列表和导出的业务，不去join 好像很难做到啊","like_count":4,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544836,"discussion_content":"这类聚合查询的业务，不能硬拉DB，在高并发量下需要做数据异构方案，把DB数据异构到主搜服务里，比如opensearch之类的非结构化数据库。只有实时性要求很高的查询再考虑DB，其他查询场景尽量不要直接查DB，很多成熟公司都有慢SQL线上监控，多个join的语句只要上线并发量稍微一高就会触发报警被下掉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641727872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1138821,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","nickname":"与路同飞","note":"","ucode":"2985F1440A1962","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":551791,"discussion_content":"但是他这是管理后台内部用的，并发又不高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645112863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544836,"ip_address":""},"score":551791,"extra":""}]}]},{"had_liked":false,"id":327764,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1640274111,"is_pvip":false,"replies":[{"id":"119407","content":"是的，我没有严格按照REST规范来起名字，主要是帮助大家通过url理解接口干了什么事儿，并没有将接口语义放到HTTP method中来提现。<br><br>而且REST规范太过于教课书化，如果严格遵循会给开发带来很多麻烦，尤其是用作修改场景的PUT接口，严格的PUT接口不管从实现还是接口定义上来说，都非常限制生产力","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640362731,"ip_address":"","comment_id":327764,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18820143295","product_id":100101301,"comment_content":"老师，你这URL的设计不是很规范啊。<br>POST &#47;template&#47;addTemplate -&gt; POST &#47;template","like_count":4,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541443,"discussion_content":"是的，我没有严格按照REST规范来起名字，主要是帮助大家通过url理解接口干了什么事儿，并没有将接口语义放到HTTP method中来提现。\n\n而且REST规范太过于教课书化，如果严格遵循会给开发带来很多麻烦，尤其是用作修改场景的PUT接口，严格的PUT接口不管从实现还是接口定义上来说，都非常限制生产力","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640362731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327445,"user_name":"Layne","can_delete":false,"product_type":"c1","uid":1479934,"ip_address":"","ucode":"1FEAACD900AB39","user_header":"https://static001.geekbang.org/account/avatar/00/16/94/fe/5fbf1bdc.jpg","comment_is_top":false,"comment_ctime":1640137591,"is_pvip":true,"replies":[{"id":"119233","content":"很赞，这两个调整都是很正确的改进方向！而且这里提到了执行计划，sql调优的重点。同学这条经验总结很到位","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640191841,"ip_address":"","comment_id":327445,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18820006775","product_id":100101301,"comment_content":"遇到这样一个场景：将两张表中的数据进行union all 然后按照指定字段排序，然后分页返回。而且两张表分别需要关联很多表来带出一些附属字段信息。本来单纯两张表里总共数据库也就十几万的量，后面经过一些join和union all，查看了一下SQL的explain，统计数据量到了几百万。后面做了下调整：<br>1.将两张表的数据提前整合并排序，然后缓存起来；<br>2.将关联查询放到业务代码里来拼接，也就是分开几条SQL来查，不用全量join，只需要按分页数量的大小来查相应数量的关联信息。","like_count":4,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540912,"discussion_content":"很赞，这两个调整都是很正确的改进方向！而且这里提到了执行计划，sql调优的重点。同学这条经验总结很到位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640191841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2415448,"avatar":"https://static001.geekbang.org/account/avatar/00/24/db/58/a7a0a85b.jpg","nickname":"二饼","note":"","ucode":"48120565D135F7","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575414,"discussion_content":"学习了👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654815021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557849,"discussion_content":"再来一个需要导出的可以 开多线程 读从库。。从库数量多性能暴增。。这个在14 15年就开始这么玩了。。几百行的sql 原来导出个excel基本都要按照10几分钟 降低为几十秒搞定。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647999476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329320,"user_name":"奔跑的蚂蚁","can_delete":false,"product_type":"c1","uid":2379253,"ip_address":"","ucode":"7348CA436144CB","user_header":"https://static001.geekbang.org/account/avatar/00/24/4d/f5/2e80aca6.jpg","comment_is_top":false,"comment_ctime":1641283778,"is_pvip":false,"replies":[{"id":"119939","content":"不同微服务是在不同的git仓库里，这样比较方便配置CICD也就是持续集成环境，也可以降低高频提交时候的代码冲突","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641297088,"ip_address":"","comment_id":329320,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14526185666","product_id":100101301,"comment_content":"我想问下：在大型的微服务项目中，建项目的时候子模块是在同一个大项目吗？然后存在不同的git仓库中吗","like_count":3,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543771,"discussion_content":"不同微服务是在不同的git仓库里，这样比较方便配置CICD也就是持续集成环境，也可以降低高频提交时候的代码冲突","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641297088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327956,"user_name":"张立华","can_delete":false,"product_type":"c1","uid":1231713,"ip_address":"","ucode":"173B938DD9478A","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/61/b62d8a3b.jpg","comment_is_top":false,"comment_ctime":1640421040,"is_pvip":false,"replies":[{"id":"119420","content":"我在教学项目里简化了值传递的分层，对于商业大型项目应该把vo和dto分别做定义。不过实践里往往不会遵循100%不越界，像enum之类的简单枚举，在api里定义一个之后分享给dao层引用是很常见的","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640441827,"ip_address":"","comment_id":327956,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14525322928","product_id":100101301,"comment_content":"老师，你好。 我觉coupon-template-dao依赖coupon-template-api 不太好吧。 <br><br>coupon-template-dao中应该定义数据。 coupon-template-api 中则是api 请求和返回的数据。 ","like_count":3,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541551,"discussion_content":"我在教学项目里简化了值传递的分层，对于商业大型项目应该把vo和dto分别做定义。不过实践里往往不会遵循100%不越界，像enum之类的简单枚举，在api里定义一个之后分享给dao层引用是很常见的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640441827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327453,"user_name":"卟卟熊","can_delete":false,"product_type":"c1","uid":1006030,"ip_address":"","ucode":"017B762191BC65","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/ce/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1640138558,"is_pvip":false,"replies":[{"id":"119227","content":"mybatis是开手动挡，spring-data-jpa是开自动挡，大家先体验一下自动挡的快感","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640190175,"ip_address":"","comment_id":327453,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14525040446","product_id":100101301,"comment_content":"虽然作者说的是hibernate是趋势，也秉承了约定大于配置，可是想法太超前了，毕竟其他开发人员没有这种超前的意识啊，还是希望用mybatis，老师这个怎么说服组员呢？","like_count":3,"discussions":[{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557848,"discussion_content":"13 14年那会ssh 中 h就是hibernate 已经开过自动挡了。。后果很惨重。。不碰了。。微服务拆分以后，整个开发期间其实sql开发并不是占据主要精力，但是及其关键，手动挡可以让你性能到极致。。这才是mybatis的生命所在。。。除非你的项目就是一个纯运营类的，否则还是继续写也并不是特别多数量的sql，但是要注意每一条sql都尽量优化到极致","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647999362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540905,"discussion_content":"mybatis是开手动挡，spring-data-jpa是开自动挡，大家先体验一下自动挡的快感","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640190175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2845977,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/6d/19/204b0900.jpg","nickname":"Black Jack","note":"","ucode":"CB16C8F44EF422","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":572396,"discussion_content":"导师派的开发任务，没啥要求，使用自动挡确实舒服啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652769601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":540905,"ip_address":""},"score":572396,"extra":""},{"author":{"id":2019534,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/d0/ce/a81126ea.jpg","nickname":"代先生。","note":"","ucode":"1CBFB13D7FD3B1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2845977,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/6d/19/204b0900.jpg","nickname":"Black Jack","note":"","ucode":"CB16C8F44EF422","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":576829,"discussion_content":"spring-data-jpa跟mybatis-plus有什么比较大的区别吗    毕竟项目mybatis-plus用的多吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655801554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":572396,"ip_address":""},"score":576829,"extra":""}]}]},{"had_liked":false,"id":334977,"user_name":"Geek_f76b23","can_delete":false,"product_type":"c1","uid":2917449,"ip_address":"","ucode":"0300CD137BA854","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/3icaaUibVCz5gYiaj5gZ4wV8ick5RhEMpe47XKkdK1nAhA9qic6rwhSrpiasDSQYAwfiaIulhE4YKsbwoOXUfvL76EPSw/132","comment_is_top":false,"comment_ctime":1645235723,"is_pvip":false,"replies":[{"id":"122393","content":"starter通常是作为auto-configurable组件的封装，用来在启动过程中做初始化和加载，api包下是pojo类只要用简单依赖就可以了，starter语义有点“重”。以后如果底层不用feign，改成rpc风格，api层也可以直接作为rpc接口","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1645369389,"ip_address":"","comment_id":334977,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10235170315","product_id":100101301,"comment_content":"开始跟着搭建遇到一个问题，作者把实体类，枚举放到coupon-template-api， 那假如后续有个库存或者其他服务需要用到实体类，就必然要引入coupon-template-api这个服务？把实体类单独抽离一个start会不会好点<br>","like_count":2,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552252,"discussion_content":"starter通常是作为auto-configurable组件的封装，用来在启动过程中做初始化和加载，api包下是pojo类只要用简单依赖就可以了，starter语义有点“重”。以后如果底层不用feign，改成rpc风格，api层也可以直接作为rpc接口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645369389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327960,"user_name":"201","can_delete":false,"product_type":"c1","uid":1048264,"ip_address":"","ucode":"C49ABFCDBDB93C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/c8/715ce68f.jpg","comment_is_top":false,"comment_ctime":1640421378,"is_pvip":true,"replies":[{"id":"119421","content":"男人不能太快呀:-)","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1640443107,"ip_address":"","comment_id":327960,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10230355970","product_id":100101301,"comment_content":"哎，快更新呀。","like_count":2,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541556,"discussion_content":"男人不能太快呀:-)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640443108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327606,"user_name":"PueC","can_delete":false,"product_type":"c1","uid":1400170,"ip_address":"","ucode":"6CE6B22DA69416","user_header":"https://static001.geekbang.org/account/avatar/00/15/5d/6a/83f7eb7f.jpg","comment_is_top":false,"comment_ctime":1640186684,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10230121276","product_id":100101301,"comment_content":"有人知道微服务从小白到专家的GitHub地址？","like_count":2,"discussions":[{"author":{"id":2415448,"avatar":"https://static001.geekbang.org/account/avatar/00/24/db/58/a7a0a85b.jpg","nickname":"二饼","note":"","ucode":"48120565D135F7","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575413,"discussion_content":"半仙老师好像没有在 Github 上传，只有 Gitee：https://gitee.com/banxian-yao/geekbang-coupon-center","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654814980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352437,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"上海","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1658670718,"is_pvip":true,"replies":[{"id":"128729","content":"这个经验非常值得其他同学学习一下","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1659942217,"ip_address":"上海","comment_id":352437,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5953638014","product_id":100101301,"comment_content":"之前做的最复杂的SQL，是在有赞的时候弄的，为了解决深度分页的问题，使用延迟关联的写法。入下所示，第二条要远快于第一条：<br>select * from table where xxx limit a,b;<br><br>select * from table where id in (select id from table where xxx limit a,b);<br>","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583184,"discussion_content":"这个经验非常值得其他同学学习一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659942218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333646,"user_name":"Unknown","can_delete":false,"product_type":"c1","uid":1736715,"ip_address":"","ucode":"E43137A064CAD8","user_header":"https://static001.geekbang.org/account/avatar/00/1a/80/0b/7ae52ac0.jpg","comment_is_top":false,"comment_ctime":1644458957,"is_pvip":true,"replies":[{"id":"122047","content":"还是看个人口味和习惯了，随着屎山堆得越来越高，还是编译期convert检查更安全一些","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1644749213,"ip_address":"","comment_id":333646,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5939426253","product_id":100101301,"comment_content":"mapperstruct 和项目中的转化方式 老师感觉哪个会更好一点","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550821,"discussion_content":"还是看个人口味和习惯了，随着屎山堆得越来越高，还是编译期convert检查更安全一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644749213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332519,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1643289498,"is_pvip":true,"replies":[{"id":"121473","content":"比如说PATCH接口，内部定义 [{&quot;path&quot;:&quot;xxx&quot;, &quot;op&quot;:&quot;ADD&quot;, &quot;value&quot;:xxx}, ...] 这种方式实现增量修改，定义的特别generic，底层实现起来极其麻烦。我现在的公司就是一个极其严格REST规范的地方，一个接口review能搞好几星期。还是国内互联网糙快猛来的爽哇","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1643301069,"ip_address":"","comment_id":332519,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5938256794","product_id":100101301,"comment_content":"而且REST规范太过于教课书化，尤其是用作修改场景的PUT接口，严格的Restful style的PUT接口不管从实现还是接口定义上来说，都非常限制生产力，如果严格遵循规范开发PUT接口会给开发带来很多麻烦。<br>老师，能否再具体解释一下怎么限制的生产力，带来了哪些麻烦？这个没理解。","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548671,"discussion_content":"比如说PATCH接口，内部定义 [{&#34;path&#34;:&#34;xxx&#34;, &#34;op&#34;:&#34;ADD&#34;, &#34;value&#34;:xxx}, ...] 这种方式实现增量修改，定义的特别generic，底层实现起来极其麻烦。我现在的公司就是一个极其严格REST规范的地方，一个接口review能搞好几星期。还是国内互联网糙快猛来的爽哇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643301069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331276,"user_name":"Geek_039a5c","can_delete":false,"product_type":"c1","uid":1651848,"ip_address":"","ucode":"08F4FA864D4B65","user_header":"","comment_is_top":false,"comment_ctime":1642514450,"is_pvip":true,"replies":[{"id":"121036","content":"同学可以从浏览器里打开这个gitee地址，然后直接下载源码zip包解压也成","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1642522356,"ip_address":"","comment_id":331276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5937481746","product_id":100101301,"comment_content":"老师  不是我不想学  是gitee  不让我学。。<br>F:\\learn\\springcloud&gt;git clone https:&#47;&#47;gitee.com&#47;banxian-yao&#47;geekbang-coupon-center.git<br>Cloning into &#39;geekbang-coupon-center&#39;...<br>fatal: unable to access &#39;https:&#47;&#47;gitee.com&#47;banxian-yao&#47;geekbang-coupon-center.git&#47;&#39;: Failed to connect to gitee.com port 443: Timed out","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547097,"discussion_content":"同学可以从浏览器里打开这个gitee地址，然后直接下载源码zip包解压也成","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642522356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331273,"user_name":"Geek_039a5c","can_delete":false,"product_type":"c1","uid":1651848,"ip_address":"","ucode":"08F4FA864D4B65","user_header":"","comment_is_top":false,"comment_ctime":1642514173,"is_pvip":true,"replies":[{"id":"121040","content":"gitee估计今天抽风了，同学改天再试试，换个姿势再来一次","user_name":"作者回复","comment_id":331273,"uid":"2819998","ip_address":"","utype":1,"ctime":1642523361,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5937481469","product_id":100101301,"comment_content":"好不容易闯过 环境搭建那一关。 此时此刻  gitee 打不开了。。  掐指一算，今天不适合学习。。。<br><br>嗯… 无法访问此页面gitee.com <br>花了太长时间进行响应","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547104,"discussion_content":"gitee估计今天抽风了，同学改天再试试，换个姿势再来一次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642523361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331036,"user_name":"杨松","can_delete":false,"product_type":"c1","uid":1512517,"ip_address":"","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1642389703,"is_pvip":false,"replies":[{"id":"120933","content":"可以把这些文件添加到.gitignore文件里，这样提交git的时候就不用带上这些文件了。这类由ide创建的本地文件一般不需要提交到代码仓库，只在本地开发机器上存在就好了","user_name":"作者回复","comment_id":331036,"uid":"2819998","ip_address":"","utype":1,"ctime":1642426513,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5937356999","product_id":100101301,"comment_content":"老师请教下，idea创建的springboot项目中自带的.mvn,mvn.cmd，mvn，.iml文件这些文件是直接删除掉吗？还是就放在那里不动它们","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546801,"discussion_content":"可以把这些文件添加到.gitignore文件里，这样提交git的时候就不用带上这些文件了。这类由ide创建的本地文件一般不需要提交到代码仓库，只在本地开发机器上存在就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642426513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2851662,"avatar":"","nickname":"Geek_62b378","note":"","ucode":"ADD8722DF2F060","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548938,"discussion_content":"mvn相关的还是可以留下的，这个可以让任何clone这个项目的人通过maven wrapper使用到相同的maven","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643451903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330537,"user_name":"BigSpinach","can_delete":false,"product_type":"c1","uid":1320917,"ip_address":"","ucode":"81B3D9AD100B2B","user_header":"https://static001.geekbang.org/account/avatar/00/14/27/d5/fa654422.jpg","comment_is_top":false,"comment_ctime":1642034165,"is_pvip":false,"replies":[{"id":"120588","content":"前者封装tempalte信息，后者封装用户领到手的coupon信息（包含template）","user_name":"作者回复","comment_id":330537,"uid":"2819998","ip_address":"","utype":1,"ctime":1642092388,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5937001461","product_id":100101301,"comment_content":"有没有人帮忙解释一下为啥有了CouponTemplateInfo类还需要再设计一个CouponInfo类？","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545959,"discussion_content":"前者封装tempalte信息，后者封装用户领到手的coupon信息（包含template）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642092388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329606,"user_name":"Hello world","can_delete":false,"product_type":"c1","uid":2624435,"ip_address":"","ucode":"9DCB5899DC5FE2","user_header":"https://static001.geekbang.org/account/avatar/00/28/0b/b3/c3a26c76.jpg","comment_is_top":false,"comment_ctime":1641443682,"is_pvip":false,"replies":[{"id":"120090","content":"服务拆分就涉及到领域建模DDD了，这部分我没有太多涉及，不过后面我会分享一个“主链路规划”，是一个比较直观糙快猛的服务拆分方案。<br><br>公共模块其实不用担心啦，因为你想我们微服务的代码库都是独立的，每个微服务所要依赖的“公共模块”其实也是在其它repo里，比如说每个公司都有的DB连接池的封装啦，各种公司内部的工具类拉，这些一般都是由infra&#47;framework团队在独立repo里编写的，对你的微服务来说就是引入依赖就可以了。至于服务之间公共的request、response这些，通常做法就是抽取一个api层，把这一层丢给各个上下游依赖方来去引用","user_name":"作者回复","comment_id":329606,"uid":"2819998","ip_address":"","utype":1,"ctime":1641486927,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5936410978","product_id":100101301,"comment_content":"老师后面会讲一讲，微服务中各个模块之间应该如何划分吗，常见的公共模块应该包含哪些东西吗？我自己在做springcloud项目的时候踩了不少坑，感觉自己每个模块里放的东西都很乱","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544383,"discussion_content":"服务拆分就涉及到领域建模DDD了，这部分我没有太多涉及，不过后面我会分享一个“主链路规划”，是一个比较直观糙快猛的服务拆分方案。\n\n公共模块其实不用担心啦，因为你想我们微服务的代码库都是独立的，每个微服务所要依赖的“公共模块”其实也是在其它repo里，比如说每个公司都有的DB连接池的封装啦，各种公司内部的工具类拉，这些一般都是由infra/framework团队在独立repo里编写的，对你的微服务来说就是引入依赖就可以了。至于服务之间公共的request、response这些，通常做法就是抽取一个api层，把这一层丢给各个上下游依赖方来去引用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641486927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329530,"user_name":"放梦。Life◥","can_delete":false,"product_type":"c1","uid":1344277,"ip_address":"","ucode":"2C381BCBAAD217","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/15/ca826ca9.jpg","comment_is_top":false,"comment_ctime":1641388934,"is_pvip":false,"replies":[{"id":"120022","content":"从报错看是dao没有被加入到上下文，不过看起来好像只有包名改了一下，同学看下你的dao层依赖项和JPA依赖是否都添加到了项目里。我这里省了一些默认配置，我猜想是你更改包名的时候移动了一些类的位置导致加载不上，如果是这样的话，你在启动类头上显示声明jpa repo和entity scan试下<br><br>@EnableJpaRepositories(basePackages = {&quot;com. smile&quot;})<br>@EntityScan(basePackages = {&quot;com. smile&quot;})","user_name":"作者回复","comment_id":329530,"uid":"2819998","ip_address":"","utype":1,"ctime":1641401041,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5936356230","product_id":100101301,"comment_content":"老师您好！我按照课程自己搭建了一下项目，启动总是报错，找了很久也没找到原因，希望老师能够指点一下，报错如下：<br>***************************<br>APPLICATION FAILED TO START<br>***************************<br><br>Description:<br><br>Field templateDao in com.smile.coupon.template.impl.service.CouponTemplateServiceImpl required a bean of type &#39;com.smile.coupon.template.dao.CouponTemplateDao&#39; that could not be found.<br><br>The injection point has the following annotations:<br>\t- @org.springframework.beans.factory.annotation.Autowired(required=true)<br><br><br>Action:<br><br>Consider defining a bean of type &#39;com.smile.coupon.template.dao.CouponTemplateDao&#39; in your configuration.<br><br>这个接口CouponTemplateDao按照要求也定义了，启动类包扫描也配置了@ComponentScan(basePackages = {&quot;com.smile&quot;})，不知道问题出在哪了，我clone老师的源代码就可以启动成功。自己搭建的却一直卡在这。<br>","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544134,"discussion_content":"从报错看是dao没有被加入到上下文，不过看起来好像只有包名改了一下，同学看下你的dao层依赖项和JPA依赖是否都添加到了项目里。我这里省了一些默认配置，我猜想是你更改包名的时候移动了一些类的位置导致加载不上，如果是这样的话，你在启动类头上显示声明jpa repo和entity scan试下\n\n@EnableJpaRepositories(basePackages = {&#34;com. smile&#34;})\n@EntityScan(basePackages = {&#34;com. smile&#34;})","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1641401041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344277,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/15/ca826ca9.jpg","nickname":"放梦。Life◥","note":"","ucode":"2C381BCBAAD217","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544340,"discussion_content":"谢谢老师，按照老师的指点果然好了，应该是我不小心移动了类的位置导致的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641476206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329371,"user_name":"Rorchachl","can_delete":false,"product_type":"c1","uid":1895320,"ip_address":"","ucode":"7AABFF65A0033C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/KiaBJsepm9fHHicfPxiahhR3RqRaR4QH6YFibIHV5o5VspTIXmH72iaiaotb4cRpWtRvLC7mnh5KH1KlSNLGWlI7wUicQ/132","comment_is_top":false,"comment_ctime":1641303484,"is_pvip":false,"replies":[{"id":"119951","content":"如果是使用IDEA的话，可以点击Maven面板上面的re-import按钮，强制重新导入一把依赖项，再试试看是否报红。如果是依赖包下载不下来，那么可以在顶层pom里或者在本地settings文件中添加阿里云的镜像，可以大幅增加下载依赖的速度。","user_name":"作者回复","comment_id":329371,"uid":"2819998","ip_address":"","utype":1,"ctime":1641312044,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5936270780","product_id":100101301,"comment_content":"老师你好 就是我在maven的pom文件中加入了依赖 也刷新了maven 但是在依赖的libraries中并没有找到 现象就是 导入第三方的类却 时报红 找不到这个类","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543855,"discussion_content":"如果是使用IDEA的话，可以点击Maven面板上面的re-import按钮，强制重新导入一把依赖项，再试试看是否报红。如果是依赖包下载不下来，那么可以在顶层pom里或者在本地settings文件中添加阿里云的镜像，可以大幅增加下载依赖的速度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641312044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329306,"user_name":"小仙","can_delete":false,"product_type":"c1","uid":1866677,"ip_address":"","ucode":"9F94043DFCEC3A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq6pWvKsV4rzQ62z5MDEjaEU5MbDfmzbA62kUgoqia2tgKIIxw4ibkDhF7W48iat5dT8UB9Adky2NuzQ/132","comment_is_top":false,"comment_ctime":1641280752,"is_pvip":false,"replies":[{"id":"119934","content":"英雄所见略同哈哈哈","user_name":"作者回复","comment_id":329306,"uid":"2819998","ip_address":"","utype":1,"ctime":1641294753,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5936248048","product_id":100101301,"comment_content":"老听到小马哥讲这句话 “纸上得来终觉浅，绝知此事要躬行” 哈哈 ","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543758,"discussion_content":"英雄所见略同哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641294753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329251,"user_name":"黑","can_delete":false,"product_type":"c1","uid":1784474,"ip_address":"","ucode":"96D0F91F8A6FCA","user_header":"https://static001.geekbang.org/account/avatar/00/1b/3a/9a/8b6aaa39.jpg","comment_is_top":false,"comment_ctime":1641258228,"is_pvip":false,"replies":[{"id":"119937","content":"虽然jpa也能执行自定义sql，但是对于报表功能不建议使用DB层的sql查找，这种跨很多张表的查询对db层也是一个很大的资源消耗。一般公司会使用专门的数据报表团队来实现这类业务，比如EDL、hadoop hive等等，DB层只用来处理实时性较高的场景，报表类业务所需要的数据，一定要从DB层里异构过去","user_name":"作者回复","comment_id":329251,"uid":"2819998","ip_address":"","utype":1,"ctime":1641295667,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5936225524","product_id":100101301,"comment_content":"想问个问题，如果项目中使用jpa然后被要求搞出一个报表的功能。这个功能需要涉及到7-8张表。jpa需要怎么切换成主动些sql的方式又能保证使用jpa的统一格式呢","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543767,"discussion_content":"虽然jpa也能执行自定义sql，但是对于报表功能不建议使用DB层的sql查找，这种跨很多张表的查询对db层也是一个很大的资源消耗。一般公司会使用专门的数据报表团队来实现这类业务，比如EDL、hadoop hive等等，DB层只用来处理实时性较高的场景，报表类业务所需要的数据，一定要从DB层里异构过去","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1641295667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328880,"user_name":"OperaX","can_delete":false,"product_type":"c1","uid":1510551,"ip_address":"","ucode":"66947CD04E3B3E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia3yumk409E65JIlGoreva1Q25icTks0XB0EDC7WJ5V0z6zuvgGkI2Zrh5cBXGS5Hea8A/132","comment_is_top":false,"comment_ctime":1640923356,"is_pvip":true,"replies":[{"id":"119804","content":"同学在install template-dao模块的时候，是不是把dao加到dao模块自己的pom.xml里了? 可以和我的源代码对比一下，看看是否pom.xml里的依赖项没有添加正确。<br><br>也可以试一下直接从顶层pom根目录下执行mvn clean install命令","user_name":"作者回复","comment_id":328880,"uid":"2819998","ip_address":"","utype":1,"ctime":1640928369,"user_name_real":"编辑"}],"discussion_count":4,"race_medal":0,"score":"5935890652","product_id":100101301,"comment_content":"template 模块写完了, 想用 maven 打包项目, 先 install api 模块, install dao 模块的时候, Could not resolve dependencies for project com.geekbang:coupon-template-dao:jar:1.0-SNAPSHOT. 应该怎么解决这种问题","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542997,"discussion_content":"同学在install template-dao模块的时候，是不是把dao加到dao模块自己的pom.xml里了? 可以和我的源代码对比一下，看看是否pom.xml里的依赖项没有添加正确。\n\n也可以试一下直接从顶层pom根目录下执行mvn clean install命令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640928369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1510551,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia3yumk409E65JIlGoreva1Q25icTks0XB0EDC7WJ5V0z6zuvgGkI2Zrh5cBXGS5Hea8A/132","nickname":"OperaX","note":"","ucode":"66947CD04E3B3E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":543011,"discussion_content":"我可能复制错了， 是 coupon-api 找不到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640931580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":542997,"ip_address":""},"score":543011,"extra":""},{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1510551,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia3yumk409E65JIlGoreva1Q25icTks0XB0EDC7WJ5V0z6zuvgGkI2Zrh5cBXGS5Hea8A/132","nickname":"OperaX","note":"","ucode":"66947CD04E3B3E","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":543067,"discussion_content":"同学这样试一下，到系统的命令行里，走到顶层项目执行mvn clean install然后把error发到这里我们来看一下。如果还是报同样的问题，看一下本地maven下载依赖路径的.m2文件夹，走到coupon-api的打包路径下看jar文件是否打包成功 - coupon-template-api-1.0-SNAPSHOT.jar","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640943807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":543011,"ip_address":""},"score":543067,"extra":""}]},{"author":{"id":1510551,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia3yumk409E65JIlGoreva1Q25icTks0XB0EDC7WJ5V0z6zuvgGkI2Zrh5cBXGS5Hea8A/132","nickname":"OperaX","note":"","ucode":"66947CD04E3B3E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543015,"discussion_content":"&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; 这个影响打包了..","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640933060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328565,"user_name":"小小思","can_delete":false,"product_type":"c1","uid":2115360,"ip_address":"","ucode":"29943ED4750368","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqKC9EEeKuKQ896kUEZxFqpahKoNZrlia92Q5r35FN1yMp77ibBySUULlH329ChcAywichWAo45RlQqA/132","comment_is_top":false,"comment_ctime":1640773900,"is_pvip":false,"replies":[{"id":"119674","content":"使用枚举对上层业务更加友好，也不会误塞错误的值","user_name":"作者回复","comment_id":328565,"uid":"2819998","ip_address":"","utype":1,"ctime":1640784588,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5935741196","product_id":100101301,"comment_content":"为什么 CouponTemplate 类中 category 和 rule 字段的类型不选择和数据库中的字段保持一致的类型, 而且通过转换来到达一致呢?<br>","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542551,"discussion_content":"使用枚举对上层业务更加友好，也不会误塞错误的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640784588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328246,"user_name":"杨逸林","can_delete":false,"product_type":"c1","uid":1167233,"ip_address":"","ucode":"4BF3CF3E2F1AC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/cf/81/96f656ef.jpg","comment_is_top":false,"comment_ctime":1640619178,"is_pvip":false,"replies":[{"id":"119569","content":"每个公司对项目分层都有不同的理解和规范，同学选用一种顺手的命名方式就可以","user_name":"作者回复","comment_id":328246,"uid":"2819998","ip_address":"","utype":1,"ctime":1640673184,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5935586474","product_id":100101301,"comment_content":"老师，其实这个 Service 接口大可不必写，而且不用拆那么多模块。<br><br>在欧创新老师的 DDD 实战课中，这些基础设施应该是在 infrastructure 包下面的。并且在 Service 层中，只传领域对象，在其他层中，需要进行不同层的转换，这个用 MapStructure 最合适。<br><br>不同领域的内容，就放在不同领域中，这样微服务化后很容易拆分。","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542155,"discussion_content":"每个公司对项目分层都有不同的理解和规范，同学选用一种顺手的命名方式就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640673184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1167233,"avatar":"https://static001.geekbang.org/account/avatar/00/11/cf/81/96f656ef.jpg","nickname":"杨逸林","note":"","ucode":"4BF3CF3E2F1AC7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":542311,"discussion_content":"如果没有按照 DDD 那样严格分层，这个不是会腐化吗？牵一发而动全身那种，所以要防腐层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640706148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":542155,"ip_address":""},"score":542311,"extra":""}]}]},{"had_liked":false,"id":327874,"user_name":"黎明","can_delete":false,"product_type":"c1","uid":1169900,"ip_address":"","ucode":"7C5D7708B1457B","user_header":"https://static001.geekbang.org/account/avatar/00/11/d9/ec/cf350d07.jpg","comment_is_top":false,"comment_ctime":1640335346,"is_pvip":false,"replies":[{"id":"119398","content":"微服务甚至可以把controller去掉，服务层挂上@ResponseBody直接对外暴露service，controller是mvc时代的产物，现在必要性不大了。看个人习惯，如果偏向分一个独立的controller module也可以","user_name":"作者回复","comment_id":327874,"uid":"2819998","ip_address":"","utype":1,"ctime":1640360208,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5935302642","product_id":100101301,"comment_content":"controller 层为什么放到 impl 层呢？","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541430,"discussion_content":"微服务甚至可以把controller去掉，服务层挂上@ResponseBody直接对外暴露service，controller是mvc时代的产物，现在必要性不大了。看个人习惯，如果偏向分一个独立的controller module也可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640360208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1169900,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d9/ec/cf350d07.jpg","nickname":"黎明","note":"","ucode":"7C5D7708B1457B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541506,"discussion_content":"哦哦。那可以推荐一些规范化 微服务 项目分层吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640416154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327871,"user_name":"黎明","can_delete":false,"product_type":"c1","uid":1169900,"ip_address":"","ucode":"7C5D7708B1457B","user_header":"https://static001.geekbang.org/account/avatar/00/11/d9/ec/cf350d07.jpg","comment_is_top":false,"comment_ctime":1640334914,"is_pvip":false,"replies":[{"id":"119399","content":"只要注意默认扫包路径和jpa类在一块就行，如果不在一个base目录下，像customer服务这种三合一应用，就配置一个更上层的base packages","user_name":"作者回复","comment_id":327871,"uid":"2819998","ip_address":"","utype":1,"ctime":1640360353,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5935302210","product_id":100101301,"comment_content":"还是埋下一些坑的，很久没用jpa 了，maven 多模块了，@EntityScan(basePackages = {&quot;com.geekbang.coupon.template.dao.entity&quot;})<br>@EnableJpaRepositories(basePackages = {&quot;com.geekbang.coupon.template.dao&quot;})","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541431,"discussion_content":"只要注意默认扫包路径和jpa类在一块就行，如果不在一个base目录下，像customer服务这种三合一应用，就配置一个更上层的base packages","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640360353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1169900,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d9/ec/cf350d07.jpg","nickname":"黎明","note":"","ucode":"7C5D7708B1457B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":541505,"discussion_content":"多分出start模块。所以就要指定包路径了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640415872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":541431,"ip_address":""},"score":541505,"extra":""}]}]},{"had_liked":false,"id":327809,"user_name":"Avalon","can_delete":false,"product_type":"c1","uid":1908872,"ip_address":"","ucode":"820523E3C519F0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/20/88/41212eb9.jpg","comment_is_top":false,"comment_ctime":1640312902,"is_pvip":false,"replies":[{"id":"119401","content":"我们在实践里面一般还是要看各个公司的标准，每个微服务是要使用独立的repo来管理的，我课程里是为了大家下载代码方便所以才把几个服务放到了同一个repo。<br><br>我建议如果领域划分已经比较细粒度了，每个微服务的复杂度已经控制在一个相对合理的范围内，那么同一个微服务的dao层和service层可以放在一个repo里管理，API层我建议单独可以分成一个独立的repo来管理","user_name":"作者回复","comment_id":327809,"uid":"2819998","ip_address":"","utype":1,"ctime":1640360753,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5935280198","product_id":100101301,"comment_content":"老师，现在coupon项目一层套一层，请问用git应该怎么分仓库管理合适？","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541435,"discussion_content":"我们在实践里面一般还是要看各个公司的标准，每个微服务是要使用独立的repo来管理的，我课程里是为了大家下载代码方便所以才把几个服务放到了同一个repo。\n\n我建议如果领域划分已经比较细粒度了，每个微服务的复杂度已经控制在一个相对合理的范围内，那么同一个微服务的dao层和service层可以放在一个repo里管理，API层我建议单独可以分成一个独立的repo来管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640360753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327766,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1640274309,"is_pvip":false,"replies":[{"id":"119408","content":"是的这个是更规范的path name，我没有严格按照REST规范来起名字，主要是帮助大家通过url理解接口干了什么事儿，并没有将接口语义放到HTTP method中来提现。<br><br>如果更加严格的话，往往以一个大的domain方式开头，比如说优惠券和营销规则在大的domain划分下属于marketing domain，那么会以&#47;marketing&#47;v1&#47;template&#47;search-template (通常最后的url不是非动词，而是要有完整语义)。像我现在的公司就是极其严格遵循restful API规范的公司，每次定义API起名字要经过半个月审核。<br><br>而且REST规范太过于教课书化，尤其是用作修改场景的PUT接口，严格的Restful style的PUT接口不管从实现还是接口定义上来说，都非常限制生产力，如果严格遵循规范开发PUT接口会给开发带来很多麻烦。","user_name":"作者回复","comment_id":327766,"uid":"2819998","ip_address":"","utype":1,"ctime":1640363298,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5935241605","product_id":100101301,"comment_content":"GET &#47;template&#47;{id}<br>POST &#47;template&#47;{id}&#47;clone<br>GET &#47;template&#47;search<br>我觉得这样设计是不是更符合RESTful的定义一些","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541445,"discussion_content":"是的这个是更规范的path name，我没有严格按照REST规范来起名字，主要是帮助大家通过url理解接口干了什么事儿，并没有将接口语义放到HTTP method中来提现。\n\n如果更加严格的话，往往以一个大的domain方式开头，比如说优惠券和营销规则在大的domain划分下属于marketing domain，那么会以/marketing/v1/template/search-template (通常最后的url不是非动词，而是要有完整语义)。像我现在的公司就是极其严格遵循restful API规范的公司，每次定义API起名字要经过半个月审核。\n\n而且REST规范太过于教课书化，尤其是用作修改场景的PUT接口，严格的Restful style的PUT接口不管从实现还是接口定义上来说，都非常限制生产力，如果严格遵循规范开发PUT接口会给开发带来很多麻烦。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1640363298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327529,"user_name":"kimoti","can_delete":false,"product_type":"c1","uid":1897671,"ip_address":"","ucode":"0A78077408C2B1","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f4/c7/037235c9.jpg","comment_is_top":false,"comment_ctime":1640162726,"is_pvip":false,"replies":[{"id":"119231","content":"这个目前还办不到哈，新增类型是需要写一些具体代码实现的","user_name":"作者回复","comment_id":327529,"uid":"2819998","ip_address":"","utype":1,"ctime":1640190905,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5935130022","product_id":100101301,"comment_content":"请问老师假如我新增一种优惠券类型,能做到只在枚举类里新增而不用修改其他任何代码吗？","like_count":1,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540910,"discussion_content":"这个目前还办不到哈，新增类型是需要写一些具体代码实现的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640190905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360766,"user_name":"楚翔style","can_delete":false,"product_type":"c1","uid":1174846,"ip_address":"内蒙古","ucode":"E715F82C34A9AA","user_header":"https://static001.geekbang.org/account/avatar/00/11/ed/3e/c1725237.jpg","comment_is_top":false,"comment_ctime":1666834831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666834831","product_id":100101301,"comment_content":"老师,有github链接吗","like_count":0},{"had_liked":false,"id":355719,"user_name":"小豪","can_delete":false,"product_type":"c1","uid":1050412,"ip_address":"上海","ucode":"70C75B9E5BD19E","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/2c/180075e0.jpg","comment_is_top":false,"comment_ctime":1661689684,"is_pvip":true,"replies":[{"id":"130680","content":"CouponTemplatInfo相当于大杂烩，聚合各种信息的类，可以放进去","user_name":"作者回复","comment_id":355719,"uid":"2819998","ip_address":"上海","utype":1,"ctime":1665410325,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1661689684","product_id":100101301,"comment_content":"如果某一种券有数量限制，那么这个总量字段应该放在CouponTemplateInfo类里吗","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589952,"discussion_content":"CouponTemplatInfo相当于大杂烩，聚合各种信息的类，可以放进去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665410325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352125,"user_name":"任健伟","can_delete":false,"product_type":"c1","uid":2868517,"ip_address":"上海","ucode":"ADCF9E408096C2","user_header":"https://static001.geekbang.org/account/avatar/00/2b/c5/25/2bea15c1.jpg","comment_is_top":false,"comment_ctime":1658393257,"is_pvip":false,"replies":[{"id":"128727","content":"我怀疑是编译环境启动的类加载问题，同学先确保代码版本和我们一致，试一下通过mvn clean install编译然后直接在命令行用jar命令来启动","user_name":"作者回复","comment_id":352125,"uid":"2819998","ip_address":"上海","utype":1,"ctime":1659936152,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1658393257","product_id":100101301,"comment_content":"启动报：Could not configure Spring Data JPA auditing-feature because spring-aspects.jar is not on the classpath!","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583166,"discussion_content":"我怀疑是编译环境启动的类加载问题，同学先确保代码版本和我们一致，试一下通过mvn clean install编译然后直接在命令行用jar命令来启动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659936152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351117,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":2112229,"ip_address":"上海","ucode":"D25976CDD1D39B","user_header":"https://static001.geekbang.org/account/avatar/00/20/3a/e5/1a1b08ad.jpg","comment_is_top":false,"comment_ctime":1657532070,"is_pvip":true,"replies":[{"id":"128717","content":"哈哈哈谢谢同学，其实有很多细节的点还可以优化的不少，我是那种得过且过的类型，以前code review经常被人拿出来批斗哈哈","user_name":"作者回复","comment_id":351117,"uid":"2819998","ip_address":"上海","utype":1,"ctime":1659935174,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1657532070","product_id":100101301,"comment_content":"看了还想再评论一条 对于刚毕业的应届生 感觉代码质量真的很高  这套代码会是我以后写代码的模板了 姚老师 牛逼！","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583155,"discussion_content":"哈哈哈谢谢同学，其实有很多细节的点还可以优化的不少，我是那种得过且过的类型，以前code review经常被人拿出来批斗哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659935174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351113,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":2112229,"ip_address":"上海","ucode":"D25976CDD1D39B","user_header":"https://static001.geekbang.org/account/avatar/00/20/3a/e5/1a1b08ad.jpg","comment_is_top":false,"comment_ctime":1657530656,"is_pvip":true,"replies":[{"id":"128719","content":"定义一套VO是更好的方式，屏蔽底层的变动","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1659935233,"ip_address":"上海","comment_id":351113,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657530656","product_id":100101301,"comment_content":"另外还有一点就是对于Controller的接口 返回给前端的返回值应该包装一下 更贴近企业级开发嘛","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583157,"discussion_content":"定义一套VO是更好的方式，屏蔽底层的变动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659935233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351106,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":2112229,"ip_address":"上海","ucode":"D25976CDD1D39B","user_header":"https://static001.geekbang.org/account/avatar/00/20/3a/e5/1a1b08ad.jpg","comment_is_top":false,"comment_ctime":1657529162,"is_pvip":true,"replies":[{"id":"128720","content":"嗯大部分公司都有aop的框架做一些简单埋点，有些业务强相关的带有语义的log还是在代码里log下","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1659935295,"ip_address":"上海","comment_id":351106,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657529162","product_id":100101301,"comment_content":"姚老师，对于日志这方面，为什么不适用aop去做呢，非入侵式，正好还可以帮助大家温馨一下springaop","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583158,"discussion_content":"嗯大部分公司都有aop的框架做一些简单埋点，有些业务强相关的带有语义的log还是在代码里log下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659935295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351103,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":2112229,"ip_address":"上海","ucode":"D25976CDD1D39B","user_header":"https://static001.geekbang.org/account/avatar/00/20/3a/e5/1a1b08ad.jpg","comment_is_top":false,"comment_ctime":1657528739,"is_pvip":true,"replies":[{"id":"128721","content":"同学全局搜索下这个文件，或者全局搜“create”关键字，建表文件里一定能搜到","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1659935388,"ip_address":"上海","comment_id":351103,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657528739","product_id":100101301,"comment_content":"是我阅读不仔细吗 我为什么没有找到.sql文件 没有数据库 跑步起来呀","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583159,"discussion_content":"同学全局搜索下这个文件，或者全局搜“create”关键字，建表文件里一定能搜到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659935388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351095,"user_name":"stars","can_delete":false,"product_type":"c1","uid":1055100,"ip_address":"上海","ucode":"8A75D9E1909729","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/7c/25abe455.jpg","comment_is_top":false,"comment_ctime":1657525539,"is_pvip":true,"replies":[{"id":"128722","content":"entity是底层数据库对象，在业务层里我们通常会抽一层BO，屏蔽底层数据对象的改动，也是一种开闭原则的应用","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1659935460,"ip_address":"上海","comment_id":351095,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657525539","product_id":100101301,"comment_content":"有个疑问，在api模块中创建了一个CouponTemplateInfo, 在dao的entity里创建了一个CouponTemplate, 是不是多余了，用entity里这个类就可以了？","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583160,"discussion_content":"entity是底层数据库对象，在业务层里我们通常会抽一层BO，屏蔽底层数据对象的改动，也是一种开闭原则的应用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659935460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348173,"user_name":"二饼","can_delete":false,"product_type":"c1","uid":2415448,"ip_address":"","ucode":"48120565D135F7","user_header":"https://static001.geekbang.org/account/avatar/00/24/db/58/a7a0a85b.jpg","comment_is_top":false,"comment_ctime":1654814719,"is_pvip":true,"replies":[{"id":"127575","content":"同学你这哪是菜狗啊，分明是高手好不。<br><br>你说的没错，调用量上来了，尤其是UI可视化展示这种，凡是涉及搜索的而且对实时性要求不高的业务，都建议用no sql之类的搜索引擎做数据异构，打个比方opensearch，oceanbase，ES之类的承接这种主搜服务。然后oneToMany我们一般关闭级联，或者只在一端开级联（比如在many端开放getOne端的级联），这样只有显示.getXXX才触发query，但对于大结果集查询来说一般就定制sql不走级联，或者走数据异构了","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1657104781,"ip_address":"","comment_id":348173,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1654814719","product_id":100101301,"comment_content":"菜狗，大佬看了图个乐。公司现在在使用 Spring Data Jpa + QueryDsl，简单业务，没有遇到过很复杂的 SQL（单纯用上面两个工具就可以解决业务的水平），不过在级联查询中确实遇到过坑。<br><br>我们前端是通过 OpenApi 直接获取后端Dto，可以直接通过获取的 Dto 对象生成 CRUD 界面，序列化工具使用的 Jackson，这是背景。<br><br>容易遇到级联查询性能问题的，比如说 OneToMany 中的 One 实体，一下子会将 Many 实体所有和 One 实体相关联的数据都查询出来。并且级联关联的时候，OneToMany 容易引起 Jackson 的循环引用问题，会导致序列化失败...<br><br>而优化 Jpa SQL 这个问题，最容易想到的还是 1+N SQL 问题吧，尤其是像我们这种直接使用实体关系的（当然现在业务量很小）。还有就是只局部更新几个字段的时候，没有必要再 save 一遍，可以使用 update 方法每次只更新指定的字段，避免每次都是行刷新。另一个就是如果 SQL 调用量激增，就应该分析到底是什么原因了，如果是业务量上来了，且这种只是查询方面的调用，比如说可视化展示这种，可以考虑再加一个数据源。","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578972,"discussion_content":"同学你这哪是菜狗啊，分明是高手好不。\n\n你说的没错，调用量上来了，尤其是UI可视化展示这种，凡是涉及搜索的而且对实时性要求不高的业务，都建议用no sql之类的搜索引擎做数据异构，打个比方opensearch，oceanbase，ES之类的承接这种主搜服务。然后oneToMany我们一般关闭级联，或者只在一端开级联（比如在many端开放getOne端的级联），这样只有显示.getXXX才触发query，但对于大结果集查询来说一般就定制sql不走级联，或者走数据异构了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657104781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2415448,"avatar":"https://static001.geekbang.org/account/avatar/00/24/db/58/a7a0a85b.jpg","nickname":"二饼","note":"","ucode":"48120565D135F7","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575412,"discussion_content":"级联查询那个，又因为需要这样数据，所以还不能懒加载。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654814814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347723,"user_name":"沈","can_delete":false,"product_type":"c1","uid":1045368,"ip_address":"","ucode":"6BB452D97C50A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/78/258fdd1f.jpg","comment_is_top":false,"comment_ctime":1654351309,"is_pvip":false,"replies":[{"id":"127573","content":"在这一讲还没有讲到Nacos哈，这里搭建的是一个单体应用。同学先往后看到第七讲就会看到怎么改造这个单体应用的了，里面有相关介绍","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1657104443,"ip_address":"","comment_id":347723,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1654351309","product_id":100101301,"comment_content":"coupon-customer-serv有点复杂，有依赖nacos，但是文章没有提到，还不是太理解这部分注册实例的原理","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578969,"discussion_content":"在这一讲还没有讲到Nacos哈，这里搭建的是一个单体应用。同学先往后看到第七讲就会看到怎么改造这个单体应用的了，里面有相关介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657104443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346564,"user_name":"迈向架构师","can_delete":false,"product_type":"c1","uid":1637228,"ip_address":"","ucode":"2476594CF76001","user_header":"https://static001.geekbang.org/account/avatar/00/18/fb/6c/12fdc372.jpg","comment_is_top":false,"comment_ctime":1653231500,"is_pvip":true,"replies":[{"id":"126727","content":"1. 这一步是微服务改造的过程，就是把单体应用的各种复杂join，或者是存储过程，通过微服务拆分来下沉到各个微服务中。同学可以读一下领域建模DDD相关的内容，可以帮助理解服务拆分<br>2. 还是看个人喜好，mockmvc一般我用来写集成测试的时候会用，本地调试也是很方便的。我比较喜欢用postman+环境变量的方式来做测试，切换evn就能用一套postman collection测试不同环境（开发，预发，生产）的接口<br>3. 这一部分暂时没包含在课程中哈","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1654237730,"ip_address":"","comment_id":346564,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653231500","product_id":100101301,"comment_content":"有几个问题想请教下老师：<br>1.尽可能减少级联配置，用单表查询取而代之：一般要怎么做呢，有相关文章推荐吗<br>2.老师最后说到用Postman，我以前写一些服务的时候比较喜欢直接写mockmvc，感觉更方便点，能省去每次手动点postman测试的时间，而且还能当成集成测试，老师您怎么看呢<br>3.后续会讲到微服务怎么做集成测试的问题吗，这一块对我来说好像挺复杂的，没怎么了解过","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574664,"discussion_content":"1. 这一步是微服务改造的过程，就是把单体应用的各种复杂join，或者是存储过程，通过微服务拆分来下沉到各个微服务中。同学可以读一下领域建模DDD相关的内容，可以帮助理解服务拆分\n2. 还是看个人喜好，mockmvc一般我用来写集成测试的时候会用，本地调试也是很方便的。我比较喜欢用postman+环境变量的方式来做测试，切换evn就能用一套postman collection测试不同环境（开发，预发，生产）的接口\n3. 这一部分暂时没包含在课程中哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654237730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345144,"user_name":"hhhhhh","can_delete":false,"product_type":"c1","uid":2990074,"ip_address":"","ucode":"16CFD7C70A45AD","user_header":"","comment_is_top":false,"comment_ctime":1652076720,"is_pvip":false,"replies":[{"id":"126172","content":"同学看这里<br><br>https:&#47;&#47;gitee.com&#47;banxian-yao&#47;geekbang-coupon-center&#47;tree&#47;master&#47;资源文件","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1652585113,"ip_address":"","comment_id":345144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1652076720","product_id":100101301,"comment_content":"老师你的db文件放在了哪里","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572057,"discussion_content":"同学看这里\n\nhttps://gitee.com/banxian-yao/geekbang-coupon-center/tree/master/资源文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652585113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340911,"user_name":"牛年榴莲","can_delete":false,"product_type":"c1","uid":1183703,"ip_address":"","ucode":"230C076193C6C0","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/d7/31d07471.jpg","comment_is_top":false,"comment_ctime":1649227732,"is_pvip":false,"replies":[{"id":"125181","content":"直接忽略就可以了，IDEA判定spring context是否存在可注入对象的方式比较傻","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1650416599,"ip_address":"","comment_id":340911,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1649227732","product_id":100101301,"comment_content":"@Autowired 注解在IDEA中有警告，大家都是怎么处理的？","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":565185,"discussion_content":"直接忽略就可以了，IDEA判定spring context是否存在可注入对象的方式比较傻","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650416600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3213072,"avatar":"","nickname":"Geek_d2fa12","note":"","ucode":"A0884F010468CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592515,"discussion_content":"构造器注入比较推荐吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667458438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336202,"user_name":"杨松","can_delete":false,"product_type":"c1","uid":1512517,"ip_address":"","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1646009320,"is_pvip":false,"replies":[{"id":"122902","content":"看个人口味了，一个是手动挡一个是自动挡，我比较喜欢手动挡的操作感，所以平时使用maven直接创建。在很多公司里都要求你的项目依赖本公司特有的parent pom，再加上一些plugins之类的特殊配置，直接用mvn会更方便定制一些","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1646052303,"ip_address":"","comment_id":336202,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646009320","product_id":100101301,"comment_content":"老师请教下，在创建工程的时候，什么时候用 sring Initializr,什么时候用maven，感觉前者更方面些，但在创建顶层工程时有没有什么弊端？","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553754,"discussion_content":"看个人口味了，一个是手动挡一个是自动挡，我比较喜欢手动挡的操作感，所以平时使用maven直接创建。在很多公司里都要求你的项目依赖本公司特有的parent pom，再加上一些plugins之类的特殊配置，直接用mvn会更方便定制一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646052303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334137,"user_name":"bye_bug","can_delete":false,"product_type":"c1","uid":2729490,"ip_address":"","ucode":"0DB208C7F8C29C","user_header":"https://static001.geekbang.org/account/avatar/00/29/a6/12/aa5ec251.jpg","comment_is_top":false,"comment_ctime":1644760713,"is_pvip":false,"replies":[{"id":"122101","content":"这个类上层有一个controller类，引用了service类","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1644856921,"ip_address":"","comment_id":334137,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644760713","product_id":100101301,"comment_content":"下载了最新源码，优惠券模版这块没有地方引入 CouponTemplateServiceImpl 类，这个类的代码是如何生效的呢？","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551040,"discussion_content":"这个类上层有一个controller类，引用了service类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644856921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331482,"user_name":"未聞花名","can_delete":false,"product_type":"c1","uid":2142672,"ip_address":"","ucode":"8BE87AC2CEA286","user_header":"https://static001.geekbang.org/account/avatar/00/20/b1/d0/8c94d49e.jpg","comment_is_top":false,"comment_ctime":1642599186,"is_pvip":false,"replies":[{"id":"121194","content":"我可能是手滑加上了，我加早了哈。因为后面会拆分成微服务，所以基于当前应用上下文的事务就不行咯，后面我会通过seata框架引入分布式事务，实现跨服务之间的事务一致性","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1642777238,"ip_address":"","comment_id":331482,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642599186","product_id":100101301,"comment_content":"老师仅在这个类中 CouponTemplateServiceImpl.java<br>deleteTemplate方法加了事务注解，其他的不需要吗","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547634,"discussion_content":"我可能是手滑加上了，我加早了哈。因为后面会拆分成微服务，所以基于当前应用上下文的事务就不行咯，后面我会通过seata框架引入分布式事务，实现跨服务之间的事务一致性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642777239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330500,"user_name":"努力努力再努力","can_delete":false,"product_type":"c1","uid":1493907,"ip_address":"","ucode":"0C6EEA28FCE8C7","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/93/4adea49a.jpg","comment_is_top":false,"comment_ctime":1641998717,"is_pvip":true,"replies":[{"id":"120451","content":"一定是那天喝多了手抖了，多复制了一行","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1642005764,"ip_address":"","comment_id":330500,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641998717","product_id":100101301,"comment_content":"老师，template-serv-impl 里的 search 方法，这里是不是重复了：<br><br>       Pageable page = PageRequest.of(request.getPage(), request.getPageSize());<br>        templateDao.findAll(Example.of(example), page);<br><br>        Page&lt;CouponTemplate&gt; result = templateDao.findAll(Example.of(example), page);<br><br>执行了两次 findAll 的吗","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545637,"discussion_content":"一定是那天喝多了手抖了，多复制了一行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642005764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329860,"user_name":"努力努力再努力","can_delete":false,"product_type":"c1","uid":1493907,"ip_address":"","ucode":"0C6EEA28FCE8C7","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/93/4adea49a.jpg","comment_is_top":false,"comment_ctime":1641607223,"is_pvip":true,"replies":[{"id":"120207","content":"考虑到“折扣计算”相比“TemplateRule”是一个未来极有可能做花式扩展的结构，所以单独拉出来了一个Discount封装这种不确定性。放到TemplateRule里把字段平铺开也没什么问题，选一种自己喜欢的口味就可以","user_name":"作者回复","user_name_real":"编辑","uid":"2819998","ctime":1641728221,"ip_address":"","comment_id":329860,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1641607223","product_id":100101301,"comment_content":"老师，想不太明白，threshold 和 quote为什么要单独抽出去一个折扣实体，直接放在 templateRule 里不行吗，它们都是相关的属性，还是说这是享元模式的一种实现方式","like_count":0,"discussions":[{"author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544838,"discussion_content":"考虑到“折扣计算”相比“TemplateRule”是一个未来极有可能做花式扩展的结构，所以单独拉出来了一个Discount封装这种不确定性。放到TemplateRule里把字段平铺开也没什么问题，选一种自己喜欢的口味就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641728221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1493907,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cb/93/4adea49a.jpg","nickname":"努力努力再努力","note":"","ucode":"0C6EEA28FCE8C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2819998,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/07/9e/d2de2832.jpg","nickname":"姚半仙","note":"","ucode":"4C86AA5D6D8C39","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":545321,"discussion_content":"老师能举例子说一下花式扩展吗，我个人极其缺乏这种思维能力😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641905359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544838,"ip_address":""},"score":545321,"extra":""}]}]}]}