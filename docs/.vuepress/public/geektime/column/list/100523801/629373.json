{"id":629373,"title":"期中周｜扩展现有协程框架，实现高级任务调度","content":"<p>你好，我是卢誉声。</p><p>时间过得真快，从 1 月 16 日上线到现在，我们的学习之旅已经走过了将近1个月，不知道你的收获如何呢？</p><p>之前我说过，如何在实际工程项目中通过C++20的新特性解决问题，将是我们学习的重点。从我的经验看，想要从初步了解到熟练应用这些新特性，也确实需要多花些功夫，而且不光要多看，更要多练，这样才能形成“手感”。</p><p>所以，我特意安排了这次期中周。从 2 月 13 日开始到 2 月 19 日结束，这期间我们会暂停更新正文内容，你可以好好利用这一周的时间，回顾一下前面学过的知识，查漏补缺。</p><p>在实际工作里，新的挑战通常是我们学习锻炼的良机。所以，期中周我还给你准备了一道测试题，一起来挑战一下吧！</p><p>C++ Coroutines是C++20标准带来的最令人兴奋和激动的全新核心语言特性之一。课程第七讲至第十讲，用了不少篇幅详细讲解C++ Coroutines。不过，正如我们所见的，C++20中提供的协程仅提供了语言层面的支持，缺乏标准库的支持。因此，在标准得到进一步演化之前，我们不得不实现绝大多数接口约定。</p><p>这让我们使用C++ Coroutines的成本提高了。我在课程中已经给出了基于接口约定的实战案例。但是，这个案例还有不少可以提升的空间。请你在现有代码的基础上，尝试实现后面的功能。</p><!-- [[[read_end]]] --><p>现有代码地址：<a href=\"https://github.com/samblg/cpp20-plus-indepth/tree/main/09_and_10/Asyncpp\">https://github.com/samblg/cpp20-plus-indepth/tree/main/09_and_10/Asyncpp</a></p><p>首先，在Windows上，通过 CMake 编译出课程里提供的 asyncpp 代码。</p><p>在目前的设计中，只支持简单的、耗时较短的异步I/O任务。那么，当遇到耗时的异步计算时，我们还是需要一种更智能的任务分发机制来处理耗时任务。</p><p>所以要实现的功能就是：请你使用专有线程、线程优先级来处理这种特殊情况。具体包括两个方面。</p><p>首先，通过参数，判断一个异步函数是否需要通过高优先级的线程上执行。</p><p>另外，请你使用std::thread::native_handle，实现在Windows系统上的优先级线程调度。</p><p><strong>实时设置线程优先级的示例代码</strong>是后面这样。</p><pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;chrono&gt;\n#include &lt;cstdint&gt;\n#include &lt;string&gt;\n#include &lt;Windows.h&gt;\n\nvoid simpleSleep() {\n    using namespace std::literals::chrono_literals;\n\n    std::cout &lt;&lt; \"[SIMPLE] Before simple sleep\" &lt;&lt; std::endl;\n    std::this_thread::sleep_for(2000ms);\n    std::cout &lt;&lt; \"[SIMPLE] After simple sleep\" &lt;&lt; std::endl;\n}\n\nint main() {\n    std::cout &lt;&lt; \"[MAIN] Before create simple thread\" &lt;&lt; std::endl;\n    std::thread simpleWorker(simpleSleep);\n\n    // 获取native handle\n    auto nativeWorkerHandle = simpleWorker.native_handle();\n\n    // 设置线程优先级\n    std::cout &lt;&lt; \"THREAD_PRIORITY_HIGHEST: \" &lt;&lt; THREAD_PRIORITY_HIGHEST &lt;&lt; std::endl;\n    ::SetThreadPriority(nativeWorkerHandle, THREAD_PRIORITY_HIGHEST);\n    std::cout &lt;&lt; \"Thread Priority: \" &lt;&lt; ::GetThreadPriority(nativeWorkerHandle) &lt;&lt; std::endl;\n\n    simpleWorker.join();\n\n    std::cout &lt;&lt; \"[MAIN] Main function exited\" &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre><p>你可以考虑使用以下开发环境和工具。</p><ul>\n<li>Windows 10 或更高</li>\n<li>Visual Studio 2022: <a href=\"https://visualstudio.microsoft.com/zh-hans/vs/\">https://visualstudio.microsoft.com/zh-hans/vs/</a></li>\n<li>CMake 3.16 或更高：<a href=\"https://cmake.org/download/\">https://cmake.org/download/</a></li>\n</ul><p>期待你的作业！</p>","neighbors":{"left":{"article_title":"10｜Coroutines实战（二）：异步文件操作库","id":626599},"right":{"article_title":"期中周｜期中测试题，你做对了么？","id":631120}},"comments":[{"had_liked":false,"id":386290,"user_name":"李云龙","can_delete":false,"product_type":"c1","uid":3201926,"ip_address":"北京","ucode":"785924B16BE788","user_header":"https://static001.geekbang.org/account/avatar/00/30/db/86/51ec4c41.jpg","comment_is_top":false,"comment_ctime":1704446337,"is_pvip":false,"replies":[{"id":140885,"content":"基本思路是没有问题的，核心就是另加一个高优先级的任务异步循环线程，然后把任务分派到这个线程","user_name":"作者回复","user_name_real":"编辑","uid":1006976,"ctime":1704988767,"ip_address":"上海","comment_id":386290,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100523801,"comment_content":"由于不能上传图片，我就描述一下我的思路：我在老师的代码基础上增加了一个Awaitable类型，用于专门处理有优先级的任务。同样地，我也增加了一个处理高优先级任务的任务队列、一个专门处理高优先级任务的任务循环的异步线程。需要高优先级任务处理的任务首先需要使用AsyncifyPriority转换为新增的AwaitablePriority类型，这个类型中使用一个可以处理任务优先级的suspender函数，将高优先级任务插入到高优先级任务队列中，将其他优先级任务插入到原有的任务队列中，并将协程唤醒的函数对象都放入主线程的任务队列中。\n具体的代码请查阅：https:&#47;&#47;gitee.com&#47;devin21&#47;midTermAssignment&#47;tree&#47;master&#47;\n欢迎大家批评指正。","like_count":1,"discussions":[{"author":{"id":1006976,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/80/0c52be53.jpg","nickname":"卢誉声","note":"","ucode":"93C5EFC39EB9C6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635630,"discussion_content":"基本思路是没有问题的，核心就是另加一个高优先级的任务异步循环线程，然后把任务分派到这个线程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704988767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368351,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1676246911,"is_pvip":false,"replies":[{"id":134149,"content":"Q1：满足需求。\n\nQ2：安装时可勾选安装 CMake。\n\nQ3：需要 Visual Studio 2022 及其包含的 Visual C++以支持最新的C++标准。","user_name":"作者回复","user_name_real":"编辑","uid":1006976,"ctime":1676253593,"ip_address":"上海","comment_id":368351,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100523801,"comment_content":"准备搭建环境试试编译代码：\nQ1：老师给出的链接中，VS22有三个版本：community、Professional、Enterprise。Community估计是最低版本了，能满足需要吗？\nQ2：VS22自身没有CMake吗？如果有，为什么老师又提供了一个CMake的链接？（需要下载此CMake，然后安装到VS22吗？）\nQ3：记得有VS2015，盗版的，不记得放在哪里了，也许可以找到。VS2015或VS2018可以吗？","like_count":0,"discussions":[{"author":{"id":1006976,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/80/0c52be53.jpg","nickname":"卢誉声","note":"","ucode":"93C5EFC39EB9C6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":603492,"discussion_content":"Q1：满足需求。\n\nQ2：安装时可勾选安装 CMake。\n\nQ3：需要 Visual Studio 2022 及其包含的 Visual C++以支持最新的C++标准。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676253593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}