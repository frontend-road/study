{"id":195503,"title":"05 | 案例：测试框架如何才能支持RESTful风格的接口？","content":"<p>你好，我是陈磊。</p><p>在前面的课程中，我们一起学习了如何把流程化的测试脚本，一步一步抽象成你自己的测试框架。无论你用的是什么编程语言，封装和抽象自己的测试框架都会让你的接口测试任务事半功倍。</p><p>我相信你在平时生活或工作中，一定会接触到各式各样的软件系统，而现在的软件系统和5年前相比，最大差别就在于结构不同。</p><p>在我读大学的时候，绝大部分系统还都是用一个Tomcat来搞定的；但现在的系统更加复杂，它们已经无法只用一个Web中间件独立对外提供服务，它们之间都也是通过相互调用来完成业务逻辑的，这里面既包含了服务端和服务端的调用，也包含了前端和服务端的调用，这就催生了RESTful风格的HTTP接口。</p><p>所以，这节课我就来和你讲讲，如何让你的测试框架完美支持RESTful风格的接口测试。这里我希望你能不断强化封装测试框架的三个流程，不断为自己的接口测试框架添砖加瓦。</p><p>不过，我不会将RESTful的规则一条一条念给你听，我想让你知道的重点是作为测试工程师，你要学会从测试工程师的角度观察RESTful接口，要学会怎么分析和验证这类接口，这也是今天我们今天这节课的主要内容。</p><h2>RESTful风格接口关我什么事？</h2><p>看到这里，你是不是一脸困惑：<strong>RESTful是一个接口的封装风格，和我们测试人员有什么关系呢？</strong></p><!-- [[[read_end]]] --><p>要想理解它和我们测试工程师的关系，你就要先知道RESTful风格的接口到底有什么好。</p><p>如果你用螺丝、钉子和板材等一系列原材料组装过家具，那么你肯定见到过各种千奇百怪的螺丝，比如一字的、十字的、三角形的、六角形的和海星形的等等，为了加固这些各式各样的螺丝，你就要准备各式各样的螺丝刀，因此，你的工具箱就会被不同规格和大小的螺丝刀填满。</p><p>不知道你是不是也和我一样，面对塞满螺丝刀的、乱七八糟的工具箱，心里非常急躁。但后来我在宜家看到一款螺丝刀，它只有一个刀柄，但给你提供了一整套各种形状、各种大小的螺丝刀刀头。</p><p>这样你在使用时，只要根据螺丝规格的不同，选择替换同形状的刀头就可以了；与此同时，它们放在工具箱里面又会显得很整齐，而不会七零八落。而且，如果你后续需要使用其它特殊形状的螺丝刀，你只要买和刀柄连接口一样的刀头就可以了，而不用再买一个完整的螺丝刀了。</p><p>如果你理解了上面这个场景，也就能很好地理解RESTful风格的接口了。<strong>它主要就是一组设计原则和约束条件，本质上就是让消费者依据URI就可以找到资源，并通过简单的服务输入输出完成服务的交互。</strong></p><p>它所约束的每一个URI，都是独一无二的一个资源，通过HTTP的方法进行资源操作，实现表现层的状态转化。这就和螺丝刀刀头一样，待解决的问题就像螺丝，每一个接口只面向一种特定的资源，而不需要关心其他接口的处理方式，这样，你就能够一目了然地知道，该用哪种螺丝刀头拧哪种螺丝了，这就降低了接口开发的复杂度。</p><p>软件开发人员只要遵循RESTful的实践标准，按照一定的内部定义开发外接口，就会形成类似螺丝刀刀头一样轻便的接口，对外提供服务。现在的很多项目，无论是服务端和服务端的调用，还是前端和服务端的调用，都采用了这一种方式来设计接口。</p><p>对于我们测试工程师来说，RESTful风格的接口还是之前的访问模式，它同样是一种HTTP协议的接口，同样可以使用我们上节课一起封装的框架完成接口测试的任务。</p><p>但是，它和我们之前讲过的HTTP协议的接口测试还是有一些区别，这些区别导致了你现在的框架还需要做一些修改，这样才能让它支持RESTful风格的接口测试。</p><h2>让你的框架可以测试一个RESTful风格接口</h2><p>现在，你知道RESTful接口和你的接口测试有很大关系了，那么，RESTful接口的测试和原始的HTTP协议接口的测试，又有什么区别呢？</p><p>这里面有两部分需要你特别关注：<strong>数据交换的承载方式和操作方式</strong>。</p><p>我先说说数据交换的承载方式，RESTful风格的接口主要是以JSON格式来进行数据交换，如果你还记得我之前提过的“Battle”这个系统（你可以回到<a href=\"https://time.geekbang.org/column/article/193912\">03</a>中查看它），那么你一定在它的Readme.md中，看到了Request和Response对数据部分的一些定义，那就是JSON。虽然“战场”不能算是一个严格的RESTful接口的系统，但是，在数据交接的承载方式上，它模仿了RESTful的样子。</p><p>另外一个部分是操作方式，在“战场”系统中，我们用了HTTP协议的Get和Post，其实HTTP协议有很多方法，但是我们仅仅用了这两种，而RESTful的规定，使HTTP的很多方法都被利用到了，比如说，Get方法用来获取资源，Post方法用来新建资源（或者更新资源）；再比如说，Put方法用来更新资源、Delete方法用来删除资源等等。</p><p>在明白RESTful风格的接口和普通的HTTP协议接口的区别后，我们现在来想一想，你自己的框架需要添加什么内容，才能支持RESTful风格的接口呢？<strong>这里我总结了两个方法：借助外力和自己封装。</strong></p><h3>借助外力</h3><p>这里，我们RESTful的第一个数据交换的承载方式是JSON，我们的框架在之前的“战场”系统中就已经使用了它，虽然全部的操作都是参数拼凑的过程，但这已经满足了我们的需求。</p><p>这时如果你仍要拼凑很多复杂的数据，就需要使用JSON字符串和代码对象实体的转换，它有一个专业的叫法：<strong>序列化和反序列化</strong>。这个词语听着就很难理解，所以现在，我用一个生活中的小例子来告诉你，这个晦涩难懂的概念到底是什么意思。</p><p>如果你在商场看中了一款衣柜，但它很大，为了方便运输，就必须要先把它拆掉，运到家后再重新组装。你和商家协商好了，由他们为你把这个衣柜拆成可重组的零件运到家里，然后由你自己把这些零件重新组装成一个衣柜。</p><p>那么在这里，商家把衣柜拆成各个零件、然后打包的这个过程就是“序列化”，在代码中，就是将一些程序对象转换成JSON等格式的字符串的过程。接下来，你用这些零件再重新组装成一个衣柜，这个过程就是“反序列化”，在代码中，就是JSON等格式的字符串转换成程序的对象的过程。</p><p>为了能让你的框架可以快速完成序列化和反序列化，我建议你在代码中引入一个外部支持的库，就像Python有JSON库、Java有Fastjson库。这些公开的库其实都不需要做任何的修改，就可以拿来使用，所以，无论你使用哪种技术栈，这样的基础库都是存在的，你只需要在网上找一下，然后花几分钟看一下怎么使用，就可以拿到自己的框架里使用了。</p><h3>自己封装</h3><p>现在，我们已经可以借助开源库，解决数据交换的事情了，但是，RESTful风格接口和普通HTTP接口相比，还有一个明显的区别，那就是RESTful规定了HTTP的每一个方法都做固定的事情，可我们原来框架中的Common类却只支持Get和Post方法，因此，你需要在Common类中加入Delete和Put方法的支持。具体的操作你可以依据下面这个代码段来完成：</p><pre><code>  def put(self,uri,params=None):\n    '''\n    封装你自己的put方法，uri是访问路由，params是put请求需要传递的参数，如果没有参数这里为空\n    :param uri: 访问路由    \n    :param params: 传递参数，string类型，默认为None    \n    :return: 此次访问的response\n    '''    \n    url = self.url_root+uri\n    if params is not None:\n      # 如果有参数，那么通过put方式访问对应的url，并将参数赋值给requests.put默认参数data \n      # 返回request的Response结果，类型为requests的Response类型\n      res = requests.put(url, data=params)\n   else:\n  \n      # 如果无参数，访问方式如下\n      \n      # 返回request的Response结果，类型为requests的Response类型\n      \n      res = requests.put(url)\n  \n   return res\n\n\ndef delete(self,uri,params=None):\n  '''\n  封装你自己的delete方法，uri是访问路由，params是delete请求需要传递的参数，如果没有参数这里为空\n  :param uri: 访问路由\n  :param params: 传递参数，string类型，默认为None\n  :return: 此次访问的response\n  '''\n  url = self.url_root + uri\n  if params is not None:\n    # 如果有参数，那么通过delete方式访问对应的url，并将参数赋值给requests.delete默认参数data\n    # 返回request的Response结果，类型为requests的Response类型\n    res = requests.delete(url, data=params)\n  else:\n    # 如果无参数，访问方式如下\n    # 返回request的Response结果，类型为requests的Response类型\n    res = requests.delete(url)\n  return res\n</code></pre><p>在上面的代码中，你可以看到，我们为了实现HTTP协议的Put和Delete方法，自己封装了put()函数和delete()函数。其实，要实现RESTful风格的接口测试，你只要封装HTTP协议对应的Method方法就可以了，这样，你的框架就能完美的支持RESTful风格的接口了。完成了这个操作后，我们的Common类就既可以完成HTTP协议接口的测试，也可以完成RESTful接口的测试了。</p><h2>总结</h2><p>到这里，我们已经结束了今天的课程了。我们今天主要完成了RESTful风格接口的测试，对比之前的例子以及你自己的测试框架，针对框架中RESTful里缺失的部分，我为你提供了对应的解决方法。</p><p>在文中我讲了很多内容，但是完成RESTful风格接口测试，主要是通过两步操作，来为你的测试框架添加对应接口的测试能力的：</p><ol>\n<li>借助外力。目前网上已经有很多成熟的、各式各样的支持库，你要尽量拿来为己所用，而不要从零建设，这样，既弥补了我们开发能力不强的短板，也能提高我们的研发效率。</li>\n<li>自己封装。你要注意的是，自己封装和借助外力并不互相冲突，你要借助外力，然后将它封装到你自己的框架中，这是一个借力打力的好方法。</li>\n</ol><p>随着我们的课程的不断深入以及内容的不断丰富，我相信，你最终会获得一个完全适合你自己，又可以解决实际工作任务的测试框架，这也是你自己的接口测试武器仓库，里面有解决各种接口测试问题的方法。它会是一个私有仓库，里面每一个武器都是为你自己量身定制的，因此，每一件武器你用起来都会更得心应手。</p><h2>思考题</h2><p>我今天讲了RESTful接口测试，并为你的私有测试框架添加了各式各样的新武器，那么，你能用你现在的新武器，解决一个你负责的RESTful的接口测试吗？在今天的框架中，随着你实际工作的使用，你又有了什么样的新设计呢？</p><p>我是陈磊，欢迎你在留言区留言分享你的观点，如果这篇文章让你有新的启发，也欢迎你把文章分享给你的朋友，我们一起探讨和学习。</p>","neighbors":{"left":{"article_title":"04 | 案例：如何把流程化的测试脚本抽象为测试框架？","id":195483},"right":{"article_title":"06 | 接口测试平台：工具和框架不可以兼容？","id":197309}},"comments":[{"had_liked":false,"id":177567,"user_name":"我","can_delete":false,"product_type":"c1","uid":1819136,"ip_address":"","ucode":"DACA3F0B171E95","user_header":"https://static001.geekbang.org/account/avatar/00/1b/c2/00/5d59b46c.jpg","comment_is_top":false,"comment_ctime":1581425560,"is_pvip":false,"replies":[{"id":"68932","content":"谢谢支持","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581427358,"ip_address":"","comment_id":177567,"utype":1}],"discussion_count":1,"race_medal":0,"score":"104660640664","product_id":100045801,"comment_content":"万能螺丝刀柄比喻restful接口，家具拆装必须序列化和反序列化，很好理解。","like_count":24,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483469,"discussion_content":"谢谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581427358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179430,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1297869,"ip_address":"","ucode":"7FE5B2382858DF","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/cd/3b4aadf8.jpg","comment_is_top":false,"comment_ctime":1582002277,"is_pvip":true,"replies":[{"id":"69723","content":"您好，对目前成熟的平台类如Yapi，httprunner我都是看看实现思路并没有实际应用过，如果你感兴趣可以就上面两个平台进行对比选择。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1582029528,"ip_address":"","comment_id":179430,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18761871461","product_id":100045801,"comment_content":"老师，有没有推荐的测试平台，支持web方式展示测试用例，用例的执行是调用背后开发的代码，支持定义测试集，支持多个测试环境，生成测试报告，提供restful接口集成CI流水线等？","like_count":4,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484258,"discussion_content":"您好，对目前成熟的平台类如Yapi，httprunner我都是看看实现思路并没有实际应用过，如果你感兴趣可以就上面两个平台进行对比选择。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582029528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1436601,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erHVQYic6jiaiaqXzrkjYiclibhf315CNshiaECer8ib4B1ot1HMGEDlgqm49gfsicQibrowDdfibLhH5ecGjvg/132","nickname":"橘子🍊","note":"","ucode":"0CFA16F5BBBB8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209484,"discussion_content":"httprunner可以实现你所说的 web方式展示测试用例，比较好用 上手也简单  ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584632333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297869,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cd/cd/3b4aadf8.jpg","nickname":"Leo","note":"","ucode":"7FE5B2382858DF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":176260,"discussion_content":"好的，谢谢老师指导！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582031729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178839,"user_name":"AllWin","can_delete":false,"product_type":"c1","uid":1701678,"ip_address":"","ucode":"BF1C3AC5EA1BCE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuRNfbtL5Skq3m4JW9CZv3dyicUibPXbrS0mugoVbXDB0nicdbaQuxBicGxVPf5jIeOCbzYwiccInhV9w/132","comment_is_top":false,"comment_ctime":1581839046,"is_pvip":false,"replies":[{"id":"69461","content":"银行的很多技术问题都是由于长时间维护跨越多种技术栈儿导致的结果，我曾经也遇见过，没风格可讲，但是目前看了存在即合理了。只能随着时间的推移慢慢走向优化","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581860990,"ip_address":"","comment_id":178839,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14466740934","product_id":100045801,"comment_content":"银行业中有些单个接口就有几百个参数，这几百个参数也不是都有联系的，会按场景分成很多参数组合，请问这样的设计是什么风格，我不理解银行为什么会有这样高复杂度的接口设计","like_count":3,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483989,"discussion_content":"银行的很多技术问题都是由于长时间维护跨越多种技术栈儿导致的结果，我曾经也遇见过，没风格可讲，但是目前看了存在即合理了。只能随着时间的推移慢慢走向优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581860990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1701678,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIuRNfbtL5Skq3m4JW9CZv3dyicUibPXbrS0mugoVbXDB0nicdbaQuxBicGxVPf5jIeOCbzYwiccInhV9w/132","nickname":"AllWin","note":"","ucode":"BF1C3AC5EA1BCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":173784,"discussion_content":"对这种几百个参数的接口有什么好的测试策略？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581864249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178486,"user_name":"沛野","can_delete":false,"product_type":"c1","uid":1159216,"ip_address":"","ucode":"435D2F5AB9BB32","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/30/1343b0c3.jpg","comment_is_top":false,"comment_ctime":1581700582,"is_pvip":false,"replies":[{"id":"69334","content":"RESTful是一种设计风格，目前最流行的就只有这一种了，这不是一种分类方法，是一种实践风格，因此它是指让混乱的HTTP接口设计更加的成熟、优越。目前应该您只关注这一种就可以了。谢谢您","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581770622,"ip_address":"","comment_id":178486,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14466602470","product_id":100045801,"comment_content":"RESTful 风格的 HTTP 接口是什么意思呀？ 还有什么其他的接口么？这个是按什么分类的呀","like_count":3,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483843,"discussion_content":"RESTful是一种设计风格，目前最流行的就只有这一种了，这不是一种分类方法，是一种实践风格，因此它是指让混乱的HTTP接口设计更加的成熟、优越。目前应该您只关注这一种就可以了。谢谢您","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581770622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177787,"user_name":"陈磊@Criss","can_delete":false,"product_type":"c1","uid":1064280,"ip_address":"","ucode":"AF0A1CEA749698","user_header":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","comment_is_top":false,"comment_ctime":1581499618,"is_pvip":true,"replies":[{"id":"69027","content":"就是为了方便程序处理和方便网络传输而做的两种互斥的转换。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581515270,"ip_address":"","comment_id":177787,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14466401506","product_id":100045801,"comment_content":"序列化是指把对象转换为字节序列的过程，而反序列化是指把字节序列恢复为对象的过程。","like_count":3,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483543,"discussion_content":"就是为了方便程序处理和方便网络传输而做的两种互斥的转换。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581515270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181933,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1582682254,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10172616846","product_id":100045801,"comment_content":"过，迭代抽象封装。","like_count":2,"discussions":[{"author":{"id":1163974,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c2/c6/88d0c7b2.jpg","nickname":"一默","note":"","ucode":"F23A6E42DFD0C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200613,"discussion_content":"过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583689778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271829,"user_name":"Watermelon","can_delete":false,"product_type":"c1","uid":1527550,"ip_address":"","ucode":"1BF292085CE727","user_header":"https://static001.geekbang.org/account/avatar/00/17/4e/fe/838a5835.jpg","comment_is_top":false,"comment_ctime":1609830301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5904797597","product_id":100045801,"comment_content":"还是不懂RESTful风格接口跟普通HTTP接口有什么区别。。。传输数据的话，普通接口也用json传啊","like_count":2},{"had_liked":false,"id":345800,"user_name":"IT小村","can_delete":false,"product_type":"c1","uid":1330357,"ip_address":"","ucode":"BDFEE0D821CB6E","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/b5/fcede1a9.jpg","comment_is_top":false,"comment_ctime":1652602017,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652602017","product_id":100045801,"comment_content":"restful其实就是更好区分接口方法的用途","like_count":0},{"had_liked":false,"id":340609,"user_name":"Chaos","can_delete":false,"product_type":"c1","uid":1669010,"ip_address":"","ucode":"ACA37E62429C1A","user_header":"https://static001.geekbang.org/account/avatar/00/19/77/92/65f2b654.jpg","comment_is_top":false,"comment_ctime":1648972895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648972895","product_id":100045801,"comment_content":"https:&#47;&#47;www.xinzhiweike.com&#47;wenda&#47;1630979493140646","like_count":0},{"had_liked":false,"id":282636,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1615344917,"is_pvip":false,"replies":[{"id":"103483","content":"谢谢","user_name":"作者回复","user_name_real":"陈磊@Criss","uid":"1064280","ctime":1616681139,"ip_address":"","comment_id":282636,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615344917","product_id":100045801,"comment_content":"百度了一下RESTful风格HTTP协议接口的详细介绍，发现自己之前对HTTP协议的接口的认知就是RESTful风格的……<br><br>老师总能找到生活中的例子来讲一些晦涩的概念，厉害厉害","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516800,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616681139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264607,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1606543915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606543915","product_id":100045801,"comment_content":"RESTful 风格 HTTP 接口的产生<br>简单系统可以使用单体结构，用一个 Tomcat 来做中间件就可搞定。随着系统急剧扩大，已经无法只用一个 Web 中间件独立对外提供服务，它们之间都也是通过相互调用来完成业务逻辑的，这里面既包含了服务端和服务端的调用，也包含了前端和服务端的调用，这就催生了 RESTful 风格的 HTTP 接口。<br><br><br>RESTful 风格 HTTP 接口的特点<br>每一个接口只面向一种特定的资源，而不需要关心其他接口的处理方式，接口简单、轻便。<br>ESTful 风格接口同样是一种 HTTP 协议的接口，而主要是以 JSON 格式来进行数据交换，且不只会使用get、post方法，还会使用put、detele方法。<br><br><br>封装可以测试RESTful风格接口地测试框架<br>引入JSON库，拼凑参数已经无法满足需求，需要使用 JSON 字符串和代码对象实体的转换，也就是序列化和反序列化。<br>加入 Delete 和 Put 方法的支持。<br>","like_count":1},{"had_liked":false,"id":238163,"user_name":"-_-","can_delete":false,"product_type":"c1","uid":1304884,"ip_address":"","ucode":"6B70C4BB44D391","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/34/83025564.jpg","comment_is_top":false,"comment_ctime":1596083608,"is_pvip":false,"replies":[{"id":"89145","content":"data=是对的","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1597242140,"ip_address":"","comment_id":238163,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1596083608","product_id":100045801,"comment_content":"使用json格式的数据，post请求的参数要改为json=xxx吗，还是data=json格式的数据也可。<br>如果是用json=是要再写一个post方法吧","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502663,"discussion_content":"data=是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597242140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1712419,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Rccaya3zw31Pxu1fRSiakK7Jw9JJyZphXLvGUpqSicFRPsCt3EbziaibvkCibgIjXBonEMrjZpe08HRgxYzsyvia2hxg/132","nickname":"Geek_d49601","note":"","ucode":"ADE36F59BB740A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306697,"discussion_content":"你把数据可以存储在excel里面，取回来是字符串，用eval干掉引号，在python里面，纯字典形式的参数，你用json=XXX就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600350877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208221,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1587303857,"is_pvip":false,"replies":[{"id":"83420","content":"是的","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1592148212,"ip_address":"","comment_id":208221,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587303857","product_id":100045801,"comment_content":"RestFul中的delete、put.…等用的就是http协议中的delete、put⋯方法吧？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492379,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592148212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205541,"user_name":"彦鋆","can_delete":false,"product_type":"c1","uid":1819500,"ip_address":"","ucode":"400A12A6ADD7C3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/c3/6c/d24a23a7.jpg","comment_is_top":false,"comment_ctime":1586667818,"is_pvip":false,"replies":[{"id":"76955","content":"这个要看业务要求了，不过绝大部分情况我们更加推崇关键value做断言","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1586780644,"ip_address":"","comment_id":205541,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586667818","product_id":100045801,"comment_content":"老师，rest风格的接口我们在设计测试用例和断言的时候预期返回要和接口返回的内容完全一样还是判断返回值中的某些重要的key-value一样就行了？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491507,"discussion_content":"这个要看业务要求了，不过绝大部分情况我们更加推崇关键value做断言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586780644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201248,"user_name":"深瞳","can_delete":false,"product_type":"c1","uid":1938877,"ip_address":"","ucode":"5A13C3582B87E3","user_header":"https://static001.geekbang.org/account/avatar/00/1d/95/bd/20ec9f4c.jpg","comment_is_top":false,"comment_ctime":1585739962,"is_pvip":false,"replies":[{"id":"75265","content":"加油，每一次努力都能得到更多的回报","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1585749366,"ip_address":"","comment_id":201248,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585739962","product_id":100045801,"comment_content":"思路有了，但是需要填充的内容还需要大量的学习","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490274,"discussion_content":"加油，每一次努力都能得到更多的回报","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585749366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195059,"user_name":"Past","can_delete":false,"product_type":"c1","uid":1852206,"ip_address":"","ucode":"AE1C44D49A83E3","user_header":"https://static001.geekbang.org/account/avatar/00/1c/43/2e/2a5d0f3e.jpg","comment_is_top":false,"comment_ctime":1585132245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585132245","product_id":100045801,"comment_content":"原文：商家把衣柜拆成各个零件、然后打包的这个过程就是“序列化”，在代码中，就是将一些程序对象转换成 JSON 等格式的字符串的过程。接下来，你用这些零件再重新组装成一个衣柜，这个过程就是“反序列化”，在代码中，就是 JSON 等格式的字符串转换成程序的对象的过程。<br><br>序列化和反序列化的例子挺有意思的，和Modrem调制解调器原理有点类似，调制(数字信号--&gt;模拟信号)和解调原理(模拟信号--&gt;数字信号)，同时也让我想起了老师一个搞笑的解释，把整条萝卜切割成小块处理，是处理调制的过程，那么解调原理是再把小块小块的萝卜组合成完整的萝卜，保持原特性。<br>","like_count":0},{"had_liked":false,"id":181629,"user_name":"Hy","can_delete":false,"product_type":"c1","uid":1742549,"ip_address":"","ucode":"F912E8A8D97591","user_header":"https://static001.geekbang.org/account/avatar/00/1a/96/d5/23fecf33.jpg","comment_is_top":false,"comment_ctime":1582600441,"is_pvip":false,"replies":[{"id":"70363","content":"您好，谢谢您，这是我在代码调整过程中复制错了代码，我马上修正谢谢","user_name":"作者回复","user_name_real":"CrissChan","uid":"1064280","ctime":1582611528,"ip_address":"","comment_id":181629,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582600441","product_id":100045801,"comment_content":"最后delete函数的注解好像有问题，if params is not None，后面提示用Put方法，另外如果delete方法没参数请问为什么写成了res = requests.put(url)，请老师赐教","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485057,"discussion_content":"您好，谢谢您，这是我在代码调整过程中复制错了代码，我马上修正谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582611528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180329,"user_name":"Map","can_delete":false,"product_type":"c1","uid":1694449,"ip_address":"","ucode":"0C7617D9748901","user_header":"https://static001.geekbang.org/account/avatar/00/19/da/f1/bf74a792.jpg","comment_is_top":false,"comment_ctime":1582257622,"is_pvip":false,"replies":[{"id":"70016","content":"正在整理","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1582262021,"ip_address":"","comment_id":180329,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1582257622","product_id":100045801,"comment_content":"老师这个框架源码有项目地址可以下载么<br>","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484611,"discussion_content":"正在整理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582262021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1598654,"avatar":"https://static001.geekbang.org/account/avatar/00/18/64/be/db7de0e0.jpg","nickname":"RZ","note":"","ucode":"F556A6EEFAF6BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556134,"discussion_content":"同样需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647227819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179518,"user_name":"王德发","can_delete":false,"product_type":"c1","uid":1167827,"ip_address":"","ucode":"823DFABC56CEB5","user_header":"https://static001.geekbang.org/account/avatar/00/11/d1/d3/5dfc36c0.jpg","comment_is_top":false,"comment_ctime":1582019740,"is_pvip":true,"replies":[{"id":"69722","content":"可以通过类似java的处理方法，使用配置区分环境，但是接口测试在生产上几乎不允许直接测试，因此我们课上没有讲解类似区分环境的处理，也可以通过数据层进行区分，这个你可以自行选择一种你喜欢的方式。","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1582029442,"ip_address":"","comment_id":179518,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582019740","product_id":100045801,"comment_content":"老师，这个python的测试框架，怎么做的切换环境，比如说，我现在有三个环境测试、仿真、预发布，不同的环境数据库、redis等这些配置都不一样，如何在测试框架运行的时候能动态切换不同的配置文件呢？比如像java里，可以用maven的插件来做。","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484291,"discussion_content":"可以通过类似java的处理方法，使用配置区分环境，但是接口测试在生产上几乎不允许直接测试，因此我们课上没有讲解类似区分环境的处理，也可以通过数据层进行区分，这个你可以自行选择一种你喜欢的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582029442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178527,"user_name":"Geek_f644f9","can_delete":false,"product_type":"c1","uid":1451948,"ip_address":"","ucode":"2B7E1748B6E137","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJXlflPMj9Ct9ia5G8ia51YZpdAuvSokWZoJlXPpk0rkwVrRQ1LzZIlNMBqRaTibAH09JBIeEysDwLQ/132","comment_is_top":false,"comment_ctime":1581735043,"is_pvip":false,"replies":[{"id":"69272","content":"is not是python原生支持的，我也不太知道为什么您的ide有问题，您要不尝试修改成！=试一下","user_name":"作者回复","user_name_real":"Criss@陈磊","uid":"1064280","ctime":1581747007,"ip_address":"","comment_id":178527,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581735043","product_id":100045801,"comment_content":"复制代码段存在语法错误，不能识别is not<br>","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483863,"discussion_content":"is not是python原生支持的，我也不太知道为什么您的ide有问题，您要不尝试修改成！=试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581747007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177513,"user_name":"Angela","can_delete":false,"product_type":"c1","uid":1297509,"ip_address":"","ucode":"D25FB18CAE95F9","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/65/4e4e376e.jpg","comment_is_top":false,"comment_ctime":1581408269,"is_pvip":false,"replies":[{"id":"68912","content":"谢谢，协议不同会在规定的连接方式，参数方式有区别。这个有可能要是具体参数而定了","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581415291,"ip_address":"","comment_id":177513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581408269","product_id":100045801,"comment_content":"还比如 socket、udp TCP 接口与restful接口有啥区别","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483449,"discussion_content":"谢谢，协议不同会在规定的连接方式，参数方式有区别。这个有可能要是具体参数而定了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581415291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177510,"user_name":"Angela","can_delete":false,"product_type":"c1","uid":1297509,"ip_address":"","ucode":"D25FB18CAE95F9","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/65/4e4e376e.jpg","comment_is_top":false,"comment_ctime":1581408102,"is_pvip":false,"replies":[{"id":"68913","content":"RESTful是一种风格定义，也是HTTP协议传输的。谢谢","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581415335,"ip_address":"","comment_id":177510,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581408102","product_id":100045801,"comment_content":"还是不太懂 restful Api 和http API的关系和区别 能再详述一下么","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483448,"discussion_content":"RESTful是一种风格定义，也是HTTP协议传输的。谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581415335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177155,"user_name":"张胜坡","can_delete":false,"product_type":"c1","uid":1811562,"ip_address":"","ucode":"735392BF103119","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/6a/7e7bf408.jpg","comment_is_top":false,"comment_ctime":1581305159,"is_pvip":false,"replies":[{"id":"68793","content":"代码示例中有使用例子，框架中引入json即可完成。谢谢留言。","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581319040,"ip_address":"","comment_id":177155,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581305159","product_id":100045801,"comment_content":"可以写一个测试的实例吗？参数是data或者json 格式，如何在测试框架中怎么兼容？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483323,"discussion_content":"代码示例中有使用例子，框架中引入json即可完成。谢谢留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581319040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177148,"user_name":"roychris","can_delete":false,"product_type":"c1","uid":1171260,"ip_address":"","ucode":"B0E239FB11A006","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/etbNBmR5PEicra7jbaV9pRsCaibXZ3ichB6JicMOnYowP65W5QMKb8Zicud19jicmEGAGh8ylwDXoYM3SHVU6hf6dFpQ/132","comment_is_top":false,"comment_ctime":1581303064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581303064","product_id":100045801,"comment_content":"序列化和反序列化的具体例子后面有例子讲解吗？","like_count":0},{"had_liked":false,"id":177135,"user_name":"7F","can_delete":false,"product_type":"c1","uid":1163540,"ip_address":"","ucode":"4A98A6979CDE58","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/14/659c8ca2.jpg","comment_is_top":false,"comment_ctime":1581299764,"is_pvip":false,"replies":[{"id":"68715","content":"参数还是写的只是写的方式一些变化，HTTP的Method定义了操作方法而不在随开发习惯乱用","user_name":"作者回复","user_name_real":"Criss Chan","uid":"1064280","ctime":1581301262,"ip_address":"","comment_id":177135,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1581299764","product_id":100045801,"comment_content":"这里的风格是指入参全部定义成json格式？然后不需要在代码中在去写入参了么？","like_count":0,"discussions":[{"author":{"id":1064280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/58/377289a8.jpg","nickname":"陈磊@Criss","note":"","ucode":"AF0A1CEA749698","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483316,"discussion_content":"参数还是写的只是写的方式一些变化，HTTP的Method定义了操作方法而不在随开发习惯乱用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581301262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1908225,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q02yeejica3LoIHJxXlYwtcCUqj2g1ribBYbGH1BcuGl7CV6YOxQwQ1YGQMXObtN1a6llPiaTG8Szt8U1o394Zptg/132","nickname":"Geek_ba6f43","note":"","ucode":"1DC20A302BC2E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221759,"discussion_content":"老师讲的很好，很清晰，之前的工作中接触过json格式的文件，结合老师讲的序列化和反序列化的处理过程，一下子就明白了，也在反思以前的测试方式可能不准确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586057292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}