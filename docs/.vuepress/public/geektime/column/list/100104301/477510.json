{"id":477510,"title":"01 | 网络模型和工具：网络为什么要分层？","content":"<p>你好，我是胜辉。</p><p>今天是咱们的第一节正课，就像我在开篇词里介绍的，在预习篇这里，我们的目标是搞清楚网络分层的概念，还有初步学习抓包分析的技术。所以接下来，我会先从一些基础的网络知识说起，为你重点讲解网络分层模型以及各层之间的区别和联系。</p><p>因为咱们是以案例实战为导向的课程，所以我除了会在网络的每一层，给你介绍相关的技术细节以外，还会带你认识相应的排查工具。学完这节课，哪怕你原本是网络方面的小白，你也可以在网络排查方面“一试身手”了，是不是有点期待了呢？好，让我们开始吧。</p><h2>网络是七层、五层还是四层？</h2><p>学习网络排查，可能首先要搞清楚的，就是网络的分层模型了。工作中，我们也时常会听到这些术语，比如三层交换机、七层规则等等。网络分层的概念，可谓深入人心。</p><p>可是你有没有想过，网络为什么要分层呢？难道是非分不可吗？回答这个问题之前，我们先做个有趣的假设：这会儿是在网络诞生的前夜，什么IP协议、TCP协议都还不存在，而你是网络的缔造者，面临设计网络这个伟大的任务。面对这么好的机会，你会选择做怎样的设计呢？</p><p>你大体上有这么两种选择：</p><ul>\n<li><strong>应用程序包办一切。</strong>程序把应用层的数据，按某种编码转化为二进制数据，然后程序去操控网卡，把二进制数据发送到网络上。这期间，通信的连接方式、传输的可靠性、速度和效率的保证等等，都需要这个程序去实现。然后下次开发另外一个应用的时候，就把上面这些活，再干一遍。</li>\n<li><strong>应用程序、操作系统、网络设备等环节各自分工。</strong>应用程序只负责实现应用层的业务逻辑，操作系统负责连接的建立、处理网络拥塞和丢包乱序、优化网络读写速度等等，然后把数据交给网卡，后者和交换机等设备做好联动，负责二进制数据在物理线路上的传送和接收。</li>\n</ul><!-- [[[read_end]]] --><p>那么显然，第一种大包大揽的方式，实现难度太大、耦合度太高，怎么看都是一个“反面典型”。所以，我们应该选择第二种，也就是分层的方式去实现。</p><p>你有没有发现，其实这个思路，跟编程的思想是类似的。在编程中，我们需要把一些逻辑抽象为函数或者对象，以实现更好的解耦和复用。在网络世界里也是如此，每一层干好自己的分内事，那么所有的层次配合起来工作的时候，就显得有条不紊了。</p><p>说到具体的分层模型，你应该会想到两种比较有名的方案。对，它们就是<strong>OSI的七层模型</strong>，和<strong>TCP/IP的四层/五层模型</strong>。这两种模型的最大区别，就是前者在传输层和应用层之间，还有会话层和表示层，而后者没有。</p><p>我们来看一下示意图：</p><p><img src=\"https://static001.geekbang.org/resource/image/83/73/83bde3e930ea80c4cf1a3ae30868f973.jpg?wh=1920x1080\" alt=\"图片\"></p><p>那在这里，你可能还会想：这两种模型哪种用得最多，或者说，哪种更合理呢？</p><p>其实我觉得倒不用过于纠结在“谁比谁更好”这个点上，如果我们理解了每一层的作用，那么就不会被表象上的层级所束缚了。事实上，两种分法都有可取之处。</p><p>一般来说，七层模型在我们工作当中谈论得更多些。比如，我的同事会找过来说“你帮我建一个七层规则吧”。这里的七层，就是指应用层，他说的“七层规则”呢，可能是HTTP路由规则，比如把符合某种条件的HTTP请求，分流到某个特定的后端集群。</p><p>还有一些场景，也是比较适合用七层模型来解释的。比如，TLS虽然在TCP之上，按TCP/IP模型就要被归入应用层。但事实上，在HTTPS的场景下，HTTP协议就是运行在TLS协议之上的，那么是不是把HTTP和TLS分到不同的层次更合适呢？正好在七层模型里，第五层和第六层，可以分别代表TLS的会话保持功能和数据加解密这种表示层的功能。</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/d5/e9f4b3258ec7c621b780db18be32d7d5.jpg?wh=1920x1080\" alt=\"图片\"></p><p>不过，会话层和表示层的协议确实比较少。从控制模型复杂度的角度来看，如果把这两层都合并到应用层，那么模型倒是比较简单，也适合入门学习的。所以从这一点上看，TCP/IP模型也有可取之处。</p><p>这里你可能稍有疑问，为什么TCP/IP还有四层和五层模型这两种说法呢？其实五层模型就是OSI的前四层，加上一个应用层。这样的话，这个五层模型跟OSI七层模型，差异就比四层模型又缩小了一点。</p><p>所以，你现在应该明白了，<strong>两种分层模型的最大差异，其实还是在会话层和表示层上面。</strong>第一到第四层，已经基本统一了。而它们的最高层，虽然一个叫第七层，一个叫第四层或者第五层，表面上虽然并不一致，但实际上都可以用“应用层”来代替。这样既避免了可能的误解，也更加准确地表示了这一层的具体用途。</p><h2>什么是TCP流？</h2><p>在一些技术文档，特别是Wireshark相关的文档中，“TCP流”是一个很常见的词汇。它是什么意思呢？为什么叫“流”，难道跟水有关吗？</p><p>其实，这里的TCP流，就是英文的TCP Stream。Stream这个词有“流”的意思，也有“连续的事件”这样一个含义，所以它是有前后、有顺序的，这也正对应了TCP的特性。</p><p>跟Stream相对的一个词是Datagram，它是指没有前后关系的数据单元，比如UDP和IP都属于Datagram。在Linux网络编程里面，TCP对应的socket类型是SOCK_STREAM，而UDP对应的，就是SOCK_DGRAM了。显然，DGRAM就是Datagram的简写。</p><p>在具体的网络报文层面，一个TCP流，对应的就是一个五元组：<strong>传输协议类型、源IP、源端口、目的IP、目的端口</strong>。比如，今天你访问了极客时间网站，那么你这次的TCP流就可能就是这样一个五元组：</p><pre><code class=\"language-java\">(TCP, your_ip, your_port, geekbang_ip, 443)\n</code></pre><p>一个IP报文，包含了所有这五个元素，所以Wireshark在解析抓包文件时，自然就能通过五元组知道每个报文所属的TCP流了。这也是为什么我们可以在Wireshark里，用Follow TCP Stream的方法，找到报文所在的TCP流。</p><p>不过有时候，也会有四元组的说法。其实它跟五元组大体上是一致的，只是四元组没有区分传输层协议类型（TCP或者UDP）。但是如果我们都清楚地知道应用类型，比如知道应用是HTTP协议的，那它的传输层协议默认就是TCP，这一元是否算在里面，已经不重要了。</p><h2>报文、帧、分组、段、数据包，这些术语是同一个东西吗？</h2><p><strong>报文（packet）</strong>，是一种相对宽泛和通用的说法，基本上每一层都可以用。比如，在应用层，你可以说“HTTP报文”；在传输层，你可以说“TCP报文”；同样的，在网络层，当然就是“IP报文”了。事实上，网络层也是“报文”一词被使用最多的场景了。<strong>数据包</strong>也是类似的，可以在很多场景下通用。</p><p>我们再稍微考究一下语法。packet这个词的后缀是et。而在英文中，以et结尾的很多词表示某一个小小的东西。比如功能完备的一小段代码，叫code snippet，一小段内嵌在HTML中的Java前端代码，叫applet。自然的，packet就是一个小的pack（包裹）。</p><p>然而，另外几个术语在用的时候，就需要讲究一点了，因为它们并不是通用词，而是特定层的专有词汇。</p><p><strong>帧（frame）</strong>是二层也就是数据链路层的概念，代表了二层报文，它包含帧头、载荷、帧尾。注意，帧是有尾部的，而其他像IP、TCP、HTTP等层级的报文，都没有尾部。我们不可以说“TCP帧”或者“IP帧”，虽然也许对方也明白你的意思，但我们都想做得专业一点，不是嘛。这里还有个小知识点：HTTP/2实现了多路复用，其中也有帧的概念，不过那个帧，跟这里网络二层的帧，除了名称相同以外，就没有别的联系了。</p><p><strong>分组</strong>是IP层报文，也就是狭义的packet。</p><p><strong>段特指TCP segment</strong>，也就是TCP报文。既然segment是“部分”的意思，那这个“整体”又是什么呢？它就是在应用层交付给传输层的消息（message）。当message被交付给传输层时，如果这个message的原始尺寸，超出了传输层数据单元的限制（比如超出了TCP的MSS），它就会被划分为多个segment。这个过程就是<strong>分段</strong>（segmentation），也是TCP层的一个很重要的职责。</p><p>说到segmentation，你可能也会想到fragmentation（分片）。这俩是同一个东西吗？这方面的知识点也不少，我在这里就不具体展开了。不过别着急，我会在第8讲里，帮你把这两个东西梳理清楚。</p><p>另外，这里还要提一下，Datagram的中文叫<strong>“数据报”</strong>，但不是“数据包”。读音类似，但意思并不完全相同。前面说过，“数据包”是一个通用词，所以用“UDP数据包”指代“UDP数据报”并没有问题。但反过来，非UDP协议的数据包，比如TCP段，就不能叫“TCP数据报”了，因为TCP不是Datagram。</p><p>最后，你可以再来看下这张层级和术语对应关系的示意图：</p><p><img src=\"https://static001.geekbang.org/resource/image/21/06/210167875fb87016a6c4a52fbafc0006.jpg?wh=1920x1080\" alt=\"图片\"></p><h2>网络各层都有哪些排查工具呢？</h2><p>通过上面的内容，你应该对于网络为什么要做分层、为什么那样做分层，已经有了比较清晰地认识了，我也带你探讨了每个层级的名词概念。所谓“名不正则言不顺”，咱们把这些术语搞清楚了，是不是感觉自己的技术“格调”也有那么点提升了呢？</p><p>接下来，我们进入干货部分，也就是每个层级的排查工具，用大白话说就是：“这可是我们吃饭的家伙儿”。</p><h3>应用层</h3><p>应用层的排查工具就太多了，相信做应用的同学，对自己的应用排查，应该是比我要更加熟悉。那我这里呢，就选一个主要的应用来展开吧，我们来谈谈 <strong>HTTP应用的排查工具</strong>。</p><p>现在主流的浏览器是Google的Chrome，它本身就<strong>内置了一个开发者工具</strong>。在Chrome界面里按下F12，或者你是苹果系统的话，还可以按下组合键option + command + I，启动开发者工具。</p><p>其实在其他的浏览器上，都有类似这样的工具，比如<strong>Firefox和Edge</strong>。而且因为Edge基于Chromium浏览器内核，它的开发者工具跟Chrome的开发者工具很相似。</p><p>在更老的IE浏览器时代，并没有原生的开发者工具。当时有一个叫<strong>HttpWatch</strong>的工具，可以在IE上实现类似的功能，但需要另外安装。</p><p>借助开发者工具，我们可以非常方便地做很多事，比如以下这些。</p><ul>\n<li><strong>找到有问题的服务端IP</strong></li>\n</ul><p>比如有用户报告死活访问不了你的网站，但是你很清楚这个网站的域名对应了很多IP地址，你怎么知道用户连的是哪个IP呢？</p><p>你可以这样做：让客户启用开发者工具，在Network页找到主页对象，在它的Headers部分，就能看到Remote address，这里的IP就是当前连接的IP，比如下面这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/96/49/969a3674269b60593e83f623c310c749.jpg?wh=2572x1072\" alt=\"\"></p><p>不过有句成语叫“刻舟求剑”，因为DNS解析的关系，你很可能下次重连就不是这个IP了，所以每次都应该重新确认一下这个信息。</p><p>这个技巧，在<strong>排查公网的访问问题</strong>的时候特别有用。要知道，现在流量大一点的网站都已经上了CDN，那就必然在全国乃至全球各地，有少则数十个、多则数百个CDN终端节点，在给访问者提供就近的服务。如果有人说他访问不了某个站点了，那么请一定让他用开发者工具，找到他连的远程IP，然后你再根据这个信息展开排查工作。</p><ul>\n<li><strong>辅助排查网页慢的问题</strong></li>\n</ul><p>访问页面感觉很慢，那么可以借助开发者工具的<strong>时间统计功能</strong>，找到耗时较高的HTTP资源对象，再针对性排查。比如我觉得访问<a href=\"https://github.com\">https://github.com</a>很慢，那么可以先打开开发者工具，然后访问站点，等全部加载完成后，到Network页查看这些HTTP对象的加载时间。</p><p><img src=\"https://static001.geekbang.org/resource/image/52/ba/529e907d52d11c95d26dd8a8681428ba.jpg?wh=2668x1074\" alt=\"\"></p><p>不过，这个办法只能排查到是哪个资源对象耗时比较长，但更进一步的排查，比如“为什么这个对象的加载时间比别的对象长”这个问题，开发者工具就难以回答了。关于这个问题，我会在后续的课程里深入展开，我们会用到抓包分析这把“手术刀”，来根本性地排查这类问题。</p><ul>\n<li><strong>解决失效Cookie带来的问题</strong></li>\n</ul><p>有时候我们的Cookie过期了，导致无法正常登录站点，那么可以打开开发者工具，到Application页，找到Storage -&gt; Cookie，把对应的条目清除。这样下次你再访问这个站点，就已经“洗心革面”了。对站点来说，你就是一次新的访问，可以生成一次新的Cookie了。</p><p>当然，你通过删除浏览器缓存的方式，也是可以做到这一点的。但开发者工具的优点是，可以<strong>细粒度</strong>到这个网站级别，而删除缓存的方式，删除的就是所有站点的Cookie了，这未必是你想要的。</p><h3>表示层和会话层</h3><p>在前面的网络分层部分，我提到过，其实表示层和会话层的协议并不多，TLS可以归入这两个层级。为了对TLS的问题进行排查，我推荐你两种工具。</p><p><strong>第一种，还是基于浏览器做初步的检查，主要是围绕证书本身做检查。</strong>在浏览器的地址栏那里，有一个按钮，点开后就可以查看TLS证书等信息：</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/3c/ff2324fa28934951c39b6e65b8d5833c.jpg?wh=593x408\" alt=\"图片\"></p><p>在上面的菜单中，继续点开Connection is secure按钮，进而点击Certificate is valid按钮，就能查看证书了。</p><p>另外，使用开发者工具的Security菜单，还可以查看更为详细的TLS信息，包括协议版本、密钥交换算法、证书有效期等等。</p><p><img src=\"https://static001.geekbang.org/resource/image/59/88/59c05ec8a3c287036d4b286f749eb188.jpg?wh=779x676\" alt=\"图片\"></p><p><strong>第二种，关于TLS握手、密钥交换、密文传输等方面的排查，还是需要用tcpdump和Wireshark来做。</strong>在Wireshark中，可以更加全面地查看TLS细节。</p><p>比如，我们可以直接看到TLS握手阶段里，双方协商<strong>过程中</strong>各自展示的Cipher suite，而在开发者工具里，我们只能看到协商<strong>完成后</strong>的选择。</p><p><img src=\"https://static001.geekbang.org/resource/image/a4/b3/a4153e0a5c4be0e520ab00bb44b0fab3.jpg?wh=671x611\" alt=\"图片\"></p><h3>传输层</h3><p>传输层毫无疑问是重中之重，工具也很多。我们就按排查场景来介绍工具。</p><ul>\n<li><strong>路径可达性测试</strong></li>\n</ul><p>如果我们要测试TCP握手，我们有<strong>telnet、nc</strong>这两个常规工具。比如telnet：</p><pre><code class=\"language-plain\">$ telnet www.baidu.com 443\nTrying 180.101.49.12...\nConnected to www.a.shifen.com.\nEscape character is '^]'.\n\n</code></pre><p>用nc呢，可以这样：</p><pre><code class=\"language-plain\">$ nc -w 2 -zv www.baidu.com 443\nConnection to www.baidu.com 443 port [tcp/https] succeeded!\n</code></pre><ul>\n<li><strong>查看当前连接状况</strong></li>\n</ul><p><strong>netstat</strong> 命令是一个经典命令了，很多同学都会使用它来获取当前的TCP、UDP等的连接信息，比如：</p><pre><code class=\"language-plain\">$ netstat -ant\nActive Internet connections (servers and established)\nProto Recv-Q Send-Q Local Address&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Foreign Address&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;State\ntcp&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0 127.0.0.53:53&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0.0.0.0:*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;LISTEN\ntcp&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0 0.0.0.0:22&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0.0.0.0:*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;LISTEN\ntcp&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0 0.0.0.0:80&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0.0.0.0:*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;LISTEN\ntcp&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; 280 10.0.2.15:22&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 10.0.2.2:56669&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ESTABLISHED\ntcp6&nbsp; &nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; 0 :::22&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;:::*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LISTEN\n</code></pre><ul>\n<li><strong>查看当前连接的传输速率</strong></li>\n</ul><p>有时候，你的网络跑得挺繁忙的，但你却不知道哪个连接占用了大量的带宽？你可以用 <strong>iftop</strong>。这个工具不是系统默认自带的，需要你安装一下，然后执行iftop就好了。对了，你需要有sudo权限，也就是执行sudo iftop，然后就能看到不同连接的传输速率，把祸害你带宽的连接给找到。比如下面这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/36/a2/367d7286ecc1bf97c6f8bcd5709df1a2.jpg?wh=927x227\" alt=\"图片\"></p><ul>\n<li><strong>查看丢包和乱序等的统计</strong></li>\n</ul><p>其实，用netstat除了可以获取实时连接状况，还可以获取历史统计信息。比如，你怀疑一台机器的网络很不稳定，除了用ping做简单的测试，你还可以用 <strong>netstat -s</strong> 来获取更加详细的统计信息。比如，其中的TCP丢包和乱序计数值，就能帮助你判断传输层的状况。下面是我截取的某一次netstat -s命令的输出：</p><pre><code class=\"language-plain\">$ netstat -s\n......\nTcp:\n&nbsp; &nbsp; 16 active connection openings\n&nbsp; &nbsp; 1 passive connection openings\n&nbsp; &nbsp; 8 failed connection attempts\n&nbsp; &nbsp; 1 connection resets received\n&nbsp; &nbsp; 1 connections established\n&nbsp; &nbsp; 6254 segments received\n&nbsp; &nbsp; 4035 segments sent out\n&nbsp; &nbsp; 1 segments retransmitted\n&nbsp; &nbsp; 0 bad segments received\n&nbsp; &nbsp; 3 resets sent\n......\nTcpExt:\n&nbsp; &nbsp; 1 ICMP packets dropped because socket was locked\n&nbsp; &nbsp; 3 TCP sockets finished time wait in fast timer\n&nbsp; &nbsp; 8 delayed acks sent\n&nbsp; &nbsp; 4674 packet headers predicted\n&nbsp; &nbsp; 10 acknowledgments not containing data payload received\n&nbsp; &nbsp; 1008 predicted acknowledgments\n&nbsp; &nbsp; TCPTimeouts: 1\n&nbsp; &nbsp; TCPBacklogCoalesce: 140\n&nbsp; &nbsp; 1 connections reset due to early user close\n&nbsp; &nbsp; TCPRcvCoalesce: 2187\n&nbsp; &nbsp; TCPAutoCorking: 110\n&nbsp; &nbsp; TCPSynRetrans: 1\n&nbsp; &nbsp; TCPOrigDataSent: 1041\n&nbsp; &nbsp; TCPDelivered: 1049\n</code></pre><p>你可能会问：这些不是静态值吗，我想知道当前情况啊？这个也很好解决，你可以这样做：</p><pre><code class=\"language-plain\">watch --diff netstat -s\n</code></pre><p>这个命令会把发生变化的数值进行高亮，方便我们查看：</p><p><img src=\"https://static001.geekbang.org/resource/image/1c/be/1c67a7092ac84aff78360fyy9af7cabe.jpg?wh=606x418\" alt=\"\"></p><p>当然，上面这个算运维“青铜”版。你也可以写一个简单的脚本，在两次netstat -s命令之间执行sleep，然后计算两个读数之间的差值，并除以sleep的时间，得到大致的变化速度。这样就又升级了一点。</p><p>如果你想做得再到位一点，你可以把netstat -s的输出值写入到TSDB，然后用Grafana之类的Dashboard进行展示，这样不仅有视图，也有历史值，可以算运维“王者”了。</p><ul>\n<li><strong>还有ss？</strong></li>\n</ul><p><strong>ss</strong> 命令是Iproute2包里的命令，也是netstat的“取代者”。它提供了对socket的丰富的统计信息。比如下面这条命令我也经常用，可以查看到当前连接的统计信息：</p><pre><code class=\"language-plain\">$ ss -s\nTotal: 164\nTCP:&nbsp; &nbsp;5 (estab 1, closed 0, orphaned 0, timewait 0)\n\nTransport Total&nbsp; &nbsp; &nbsp;IP&nbsp; &nbsp; &nbsp; &nbsp; IPv6\nRAW\t&nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1\nUDP\t&nbsp; 2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0\nTCP\t&nbsp; 5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1\nINET\t&nbsp; 8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2\nFRAG\t&nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0\n</code></pre><p>当然，也不能完全说“ss等于netstat”，因为事实上netstat命令的功能，被拆分到了ss和ip这两个命令里，并分别得到了丰富和加强。具体的细节，我们在课程中还会陆续提到。</p><h3>网络层</h3><p>在这一层，除了可以直接用ping这个非常简便的工具以外，你还应该掌握另外两个命令，它们能提供更为强大的排查能力，它们就是<strong>traceroute和mtr</strong>。</p><ul>\n<li><strong>查看网络路径状况</strong></li>\n</ul><p>下面这个，是我用自己的Mac笔记本做一个简单的traceroute的典型输出：</p><pre><code class=\"language-plain\">$ traceroute&nbsp; www.baidu.com\ntraceroute to www.a.shifen.com (180.101.49.12), 64 hops max\n&nbsp; 1&nbsp; &nbsp;10.0.2.2&nbsp; 0.133ms&nbsp; 0.131ms&nbsp; 0.087ms\n&nbsp; 2&nbsp; &nbsp;192.168.1.1&nbsp; 3.048ms&nbsp; 1.466ms&nbsp; 1.574ms\n&nbsp; 3&nbsp; &nbsp;100.65.0.1&nbsp; 8.975ms&nbsp; 3.067ms&nbsp; 6.472ms\n&nbsp; 4&nbsp; &nbsp;61.152.53.149&nbsp; 5.644ms&nbsp; 3.691ms&nbsp; 4.624ms\n&nbsp; 5&nbsp; &nbsp;61.152.24.226&nbsp; 5.357ms&nbsp; 4.393ms&nbsp; 4.244ms\n&nbsp; 6&nbsp; &nbsp;202.97.29.122&nbsp; 10.171ms&nbsp; 10.403ms&nbsp; 8.755ms\n&nbsp; 7&nbsp; &nbsp;58.213.94.118&nbsp; 10.707ms&nbsp; 11.880ms&nbsp; 11.441ms\n&nbsp; 8&nbsp; &nbsp;58.213.94.90&nbsp; 9.644ms&nbsp; *&nbsp; *\n&nbsp; 9&nbsp; &nbsp;58.213.96.110&nbsp; 12.758ms&nbsp; 12.095ms&nbsp; 11.842ms\n&nbsp;10&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;11&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;12&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;13&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;14&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;15&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;16&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;17&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;18&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;19&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;20&nbsp; &nbsp;*&nbsp; *&nbsp; *\n</code></pre><p>哦，等等，为什么从第10跳开始就没有IP，只有星号了？你是不是也遇到过这种情况呢？其实，你稍微改一下命令，也就是加上<strong>-I</strong>参数（I代表ICMP），就可以正常跑到底了：</p><pre><code class=\"language-plain\">$ traceroute&nbsp; www.baidu.com -I\ntraceroute to www.a.shifen.com (180.101.49.12), 64 hops max\n&nbsp; 1&nbsp; &nbsp;10.0.2.2&nbsp; 0.099ms&nbsp; 2.363ms&nbsp; 0.078ms\n&nbsp; 2&nbsp; &nbsp;192.168.1.1&nbsp; 3.320ms&nbsp; 1.220ms&nbsp; 1.204ms\n&nbsp; 3&nbsp; &nbsp;100.65.0.1&nbsp; 8.737ms&nbsp; 4.872ms&nbsp; 6.403ms\n&nbsp; 4&nbsp; &nbsp;61.152.54.125&nbsp; 5.035ms&nbsp; 3.397ms&nbsp; 4.288ms\n&nbsp; 5&nbsp; &nbsp;*&nbsp; 61.152.25.110&nbsp; 4.176ms&nbsp; *\n&nbsp; 6&nbsp; &nbsp;202.97.101.30&nbsp; 7.447ms&nbsp; 6.399ms&nbsp; 5.936ms\n&nbsp; 7&nbsp; &nbsp;58.213.95.110&nbsp; 10.488ms&nbsp; *&nbsp; 9.014ms\n&nbsp; 8&nbsp; &nbsp;*&nbsp; 58.213.95.134&nbsp; 11.064ms&nbsp; *\n&nbsp; 9&nbsp; &nbsp;58.213.96.74&nbsp; 10.997ms&nbsp; 10.042ms&nbsp; 10.592ms\n&nbsp;10&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;11&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;12&nbsp; &nbsp;*&nbsp; *&nbsp; *\n&nbsp;13&nbsp; &nbsp;180.101.49.12&nbsp; 11.269ms&nbsp; 9.518ms&nbsp; 8.779ms\n</code></pre><p>背后的原理，就是traceroute默认是用UDP作为探测协议的，但是很多网络设备并不会对UDP作出回应。所以我们改成ICMP协议做探测后，网络设备就有回应了。其实，Windows上的tracert，就是默认用ICMP，这一点跟Linux正好是反过来的。两个操作系统，真是“相爱相杀”啊。</p><p>但是，traceroute也有一个明显的不足：<strong>它不能对这个路径做连续多次的探测</strong>。</p><p>于是，mtr出现了，它可以说是traceroute的超集，除了类似traceroute的功能之外，mtr还能实现丰富的探测报告。尤其是它对每一跳的丢包率的百分比，是用来定位路径中节点问题的重要指标。所以，当你在遇到<strong>“连接状况时好时坏的问题”</strong>的时候，单纯用一次性的traceroute恐怕难以看清楚，那就可以用mtr，来获取更加全面和动态的链路状态信息了。</p><pre><code class=\"language-plain\">$ mtr www.baidu.com -r -c 10\nStart: 2022-01-07T04:05:02+0000\nHOST: victorebpf&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Loss%&nbsp; &nbsp;Snt&nbsp; &nbsp;Last&nbsp; &nbsp;Avg&nbsp; Best&nbsp; Wrst StDev\n&nbsp; 1.|-- _gateway&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0.0%&nbsp; &nbsp; 10&nbsp; &nbsp; 0.3&nbsp; &nbsp;0.4&nbsp; &nbsp;0.2&nbsp; &nbsp;1.2&nbsp; &nbsp;0.3\n&nbsp; 2.|-- 192.168.1.1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0.0%&nbsp; &nbsp; 10&nbsp; &nbsp; 1.6&nbsp; &nbsp;1.8&nbsp; &nbsp;1.4&nbsp; &nbsp;3.2&nbsp; &nbsp;0.5\n&nbsp; 3.|-- 100.65.0.1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0.0%&nbsp; &nbsp; 10&nbsp; &nbsp; 3.8&nbsp; &nbsp;7.0&nbsp; &nbsp;3.8&nbsp; 10.3&nbsp; &nbsp;2.0\n&nbsp; 4.|-- 61.152.54.125&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0.0%&nbsp; &nbsp; 10&nbsp; &nbsp; 4.0&nbsp; &nbsp;4.3&nbsp; &nbsp;3.6&nbsp; &nbsp;5.1&nbsp; &nbsp;0.5\n&nbsp; 5.|-- 61.152.25.110&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;30.0%&nbsp; &nbsp; 10&nbsp; &nbsp; 5.0&nbsp; &nbsp;6.8&nbsp; &nbsp;4.4&nbsp; 18.9&nbsp; &nbsp;5.4\n&nbsp; 6.|-- 202.97.101.30&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;20.0%&nbsp; &nbsp; 10&nbsp; &nbsp; 7.8&nbsp; &nbsp;6.6&nbsp; &nbsp;5.4&nbsp; &nbsp;7.8&nbsp; &nbsp;0.8\n&nbsp; 7.|-- 58.213.95.110&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;80.0%&nbsp; &nbsp; 10&nbsp; &nbsp;10.0&nbsp; &nbsp;9.8&nbsp; &nbsp;9.6&nbsp; 10.0&nbsp; &nbsp;0.3\n&nbsp; 8.|-- ???&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;100.0&nbsp; &nbsp; 10&nbsp; &nbsp; 0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0\n&nbsp; 9.|-- 58.213.96.74&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0.0%&nbsp; &nbsp; 10&nbsp; &nbsp;10.5&nbsp; 12.7&nbsp; &nbsp;9.9&nbsp; 24.7&nbsp; &nbsp;4.9\n&nbsp;10.|-- ???&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;100.0&nbsp; &nbsp; 10&nbsp; &nbsp; 0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0\n&nbsp;11.|-- ???&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;100.0&nbsp; &nbsp; 10&nbsp; &nbsp; 0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0\n&nbsp;12.|-- ???&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;100.0&nbsp; &nbsp; 10&nbsp; &nbsp; 0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0&nbsp; &nbsp;0.0\n&nbsp;13.|-- 180.101.49.12&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0.0%&nbsp; &nbsp; 10&nbsp; &nbsp; 9.4&nbsp; &nbsp;9.1&nbsp; &nbsp;8.3&nbsp; &nbsp;9.7&nbsp; &nbsp;0.5\n</code></pre><ul>\n<li><strong>查看路由</strong></li>\n</ul><p>命令 <strong>route</strong> 可以查看路由表，不过这个命令比较老一点：</p><pre><code class=\"language-plain\"># route -n\nKernel IP routing table\nDestination&nbsp; &nbsp; &nbsp;Gateway&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Genmask&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Flags Metric Ref&nbsp; &nbsp; Use Iface\n0.0.0.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;10.0.2.2&nbsp; &nbsp; &nbsp; &nbsp; 0.0.0.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;UG&nbsp; &nbsp; 100&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; 0 enp0s3\n10.0.2.0&nbsp; &nbsp; &nbsp; &nbsp; 0.0.0.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;255.255.255.0&nbsp; &nbsp;U&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; 0 enp0s3\n10.0.2.2&nbsp; &nbsp; &nbsp; &nbsp; 0.0.0.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;255.255.255.255 UH&nbsp; &nbsp; 100&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; 0 enp0s3\n172.17.0.0&nbsp; &nbsp; &nbsp; 0.0.0.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;255.255.0.0&nbsp; &nbsp; &nbsp;U&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; 0 docker0\n</code></pre><p>传输层工具里介绍的 <strong>netstat</strong>，其实也能帮我们查看路由，只要加上 <strong>-r</strong> 参数：</p><pre><code class=\"language-plain\">$ netstat -r\nKernel IP routing table\nDestination&nbsp; &nbsp; &nbsp;Gateway&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Genmask&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Flags&nbsp; &nbsp;MSS Window&nbsp; irtt Iface\ndefault&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;_gateway&nbsp; &nbsp; &nbsp; &nbsp; 0.0.0.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;UG&nbsp; &nbsp; &nbsp; &nbsp; 0 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 enp0s3\n10.0.2.0&nbsp; &nbsp; &nbsp; &nbsp; 0.0.0.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;255.255.255.0&nbsp; &nbsp;U&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 enp0s3\n_gateway&nbsp; &nbsp; &nbsp; &nbsp; 0.0.0.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;255.255.255.255 UH&nbsp; &nbsp; &nbsp; &nbsp; 0 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 enp0s3\n172.17.0.0&nbsp; &nbsp; &nbsp; 0.0.0.0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;255.255.0.0&nbsp; &nbsp; &nbsp;U&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 docker0\n</code></pre><p>我前面说过，netstat是被ss和ip这两个命令替代了。所以我们同样可以用 <strong>ip命令</strong>查看路由。比如这样：</p><pre><code class=\"language-plain\">$ ip route\ndefault via 10.0.2.2 dev enp0s3 proto dhcp src 10.0.2.15 metric 100\n10.0.2.0/24 dev enp0s3 proto kernel scope link src 10.0.2.15\n10.0.2.2 dev enp0s3 proto dhcp scope link src 10.0.2.15 metric 100\n172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1 linkdown\n</code></pre><h3>数据链路层和物理层</h3><p>这一层离应用层已经很远了，一般来说是专职的网络团队在负责。如果这一层有问题，就会直接体现在网络层表现上面，比如IP会有丢包和延迟等现象，然后会引发传输层异常（如丢包、乱序、重传等）。所以，<strong>一个稳定的数据链路层乃至物理层，是网络可靠性的基石。</strong></p><p>你可能会奇怪：既然底下这两层的稳定性如此重要，那上层的TCP不是号称还有传输可靠性的保障吗？难道这种保障形同虚设？</p><p>其实，这两点并不矛盾。TCP的传输可靠性是通过序列号、确认号、重传机制等来保证的，通过这种机制，TCP可以在<strong>一定程度</strong>的网络不稳定场景下，依然保证传输可靠，但不等于TCP可以无限容忍底层的不稳定，因为各种TCP拥塞控制算法都会由于这种问题，而极大地降低传输性能。</p><p>如果你想查看这两层的状况，可以用 <strong>ethtool</strong> 这个工具。比如这样：</p><pre><code class=\"language-plain\"># ethtool -S enp0s3\nNIC statistics:\n&nbsp; &nbsp; &nbsp;rx_packets: 45897\n&nbsp; &nbsp; &nbsp;tx_packets: 9457\n&nbsp; &nbsp; &nbsp;rx_bytes: 59125524\n&nbsp; &nbsp; &nbsp;tx_bytes: 834625\n&nbsp; &nbsp; &nbsp;rx_broadcast: 0\n&nbsp; &nbsp; &nbsp;tx_broadcast: 17\n&nbsp; &nbsp; &nbsp;rx_multicast: 0\n&nbsp; &nbsp; &nbsp;tx_multicast: 59\n&nbsp; &nbsp; &nbsp;rx_errors: 0\n&nbsp; &nbsp; &nbsp;tx_errors: 0\n&nbsp; &nbsp; &nbsp;tx_dropped: 0\n</code></pre><p>它的原理，是网卡驱动会到内核中注册ethtool回调函数，然后我们用ethtool命令就可以查看这些信息了。由于信息是由网卡驱动提供的，所以十分“接地气”。</p><p>如果你在传输层和网络层的排查工具上，已经看到明确的链路不稳定的信息，那就直接找网络团队去处理吧。</p><h2>小结</h2><p>这节课，我们回顾了网络分层模型，也了解了OSI模型和TCP/IP模型的区别和联系。通过“抠字眼”的方式，我们把每层的术语搞清楚，由此对分层模型有了更加深入的理解，这个对我们开展网络排查工作，有很强的指导性意义。</p><p>然后，我们逐一学习了各层的常用排查工具。我来给你再梳理一下：</p><ol>\n<li>应用层以HTTP为例，可以用<strong>浏览器开发者工具</strong>，实现远程IP识别、耗时分析、Cookie删除等需求。</li>\n<li>会话层和表示层以TLS为主，我们还是用<strong>浏览器开发者工具</strong>，可以查看证书细节、协商后使用的Cipher suite等信息，属于静态信息。然后学习了<strong>用tcpdump和Wireshark</strong> 查看更详细的TLS握手细节的方法。这些信息是动态的，也只有用抓包分析的手段才能做到。</li>\n<li>在传输层，我们学到了 <strong>telnet、nc、netstat、ss</strong> 等命令，通过它们，我们可以测试连通性，也可以获取连接状况和统计信息，对于传输问题的排查都很有帮助。</li>\n<li>在网络层及以下的部分，我们学习了 <strong>traceroute、mtr、ip</strong> 等工具，可以检测网络路径状况。</li>\n<li>在数据链路层和物理层，我们可以做的不多，主要依靠网络层观察到的链路质量来推断这两层的情况。当然，也可以用 <strong>ethtool</strong> 这个工具查看这两层的详情。</li>\n</ol><p>最后，为了方便你复习，我也给你画了一张思维导图，让你能一目了然：</p><p><img src=\"https://static001.geekbang.org/resource/image/17/d2/179d2da5c5cc67a9b0f07af2cbc668d2.jpg?wh=1630x1107\" alt=\"\"></p><p>如果对这些命令的更多细节或者原理很感兴趣，在实战三模块里，我也会专门讨论这些工具相关的案例和使用技巧，相信会让你的网络排查技能变得更加丰富多元。</p><h2>思考题</h2><p>感谢你认真学完了这节课的内容，不过在结束之前，给你留几道思考题：</p><ol>\n<li>traceroute默认是用UDP来做探测的，那这个又是基于什么原理呢？通和不通，我们会收到怎样的回复？</li>\n<li>有时候运行telnet后命令就挂起，没有响应了，这说明了什么问题呢？</li>\n</ol><p>欢迎你把答案写到留言区，我们一起交流讨论。也欢迎你把今天的内容分享给更多的朋友，一同成长和进步。</p>","neighbors":{"left":{"article_title":"开篇词 | 网络排查是工程师的必备能力","id":477459},"right":{"article_title":"02 | 抓包分析技术初探：你会用tcpdump和Wireshark吗？","id":478189}},"comments":[{"had_liked":false,"id":330479,"user_name":"webmin","can_delete":false,"product_type":"c1","uid":1047014,"ip_address":"","ucode":"98B0CA882454E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/e6/47742988.jpg","comment_is_top":false,"comment_ctime":1641991547,"is_pvip":true,"replies":[{"id":"120409","content":"1. 是的，TTL的操控是traceroute之类工具的核心，通过它实现了“逐跳”的探测。你这里提到了TTL为0时，路由器回复ICMP超时消息，这个补充非常好。<br>另外，文稿里的例子用默认UDP的方式遇到了“黑洞”，也就是对端并没有对这个UDP探测包回复IMCP port unreachable消息，但是它会对ICMP echo request探测包回复IMCP port unreachable消息，所以通过traceroute -I就可以看到完整的路径了。一般来说，对端要么对UDP模式有响应，要么对ICMP模式有响应，所以我们可以两个分别试一下。<br>2. 是的，telnet的握手SYN包发出去，但对端一直没回复SYN+ACK，导致telnet的connect()无法成功返回，造成了挂起。","user_name":"作者回复","user_name_real":"作者","uid":"1662117","ctime":1641995912,"ip_address":"","comment_id":330479,"utype":1}],"discussion_count":1,"race_medal":0,"score":"186325585275","product_id":100104301,"comment_content":"1. traceroute 使用UDP探测时 初始时把TTL设置为1，经过路由器时TTL会被减1，当TTL变为0时，包被丢弃，路由器向源地址发回一个ICMP超时通知（ICMP Time Exceeded Message），源收到这个通知就会把下一次发送的包的TTL在原来的基础加1，这样就可以多前进一步，探测时使用了一个大于30000的端口号去连接，随着TTL的增加端口也会加1，目地服务器在收到这个数据包的时候会返回一个端口不可达的ICMP错误信息（ICMP Port Unreachable），当源地址收到ICMP Port Unreachable包时停止traceroute。<br>2. telnet挂起，连接请求还在服务端排队没有被accept()，进入到处理阶段，表现在Client就是挂起的现象。","like_count":44,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545561,"discussion_content":"1. 是的，TTL的操控是traceroute之类工具的核心，通过它实现了“逐跳”的探测。你这里提到了TTL为0时，路由器回复ICMP超时消息，这个补充非常好。\n另外，文稿里的例子用默认UDP的方式遇到了“黑洞”，也就是对端并没有对这个UDP探测包回复IMCP port unreachable消息，但是它会对ICMP echo request探测包回复IMCP port unreachable消息，所以通过traceroute -I就可以看到完整的路径了。一般来说，对端要么对UDP模式有响应，要么对ICMP模式有响应，所以我们可以两个分别试一下。\n2. 是的，telnet的握手SYN包发出去，但对端一直没回复SYN+ACK，导致telnet的connect()无法成功返回，造成了挂起。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641995912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334879,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1645166796,"is_pvip":false,"replies":[{"id":"122336","content":"笔记挺好的：）","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1645198214,"ip_address":"","comment_id":334879,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31709937868","product_id":100104301,"comment_content":"应用层：  http message<br>会话 表示层 TLS<br>传输层   TCP segment, UDP datagram<br>网络层： IP packet <br>数据链路层  ethnet frame<br>物理层 ： 0 ，1 比特流","like_count":7,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551990,"discussion_content":"笔记挺好的：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645198214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330783,"user_name":"罗辑思维","can_delete":false,"product_type":"c1","uid":1318941,"ip_address":"","ucode":"D257A06EDE928E","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/1d/0c1a184c.jpg","comment_is_top":false,"comment_ctime":1642159128,"is_pvip":false,"replies":[{"id":"120638","content":"嗯，这个要结合客户端和服务端的抓包，对比来分析：<br>1. 客户端抓包中有发出SYN，但在服务端抓包中没收到SYN，一般是客户端去往服务端的问题，检查这个方向上的网络设备；虚拟化情况下，也可能是客户端或者服务端VM&#47;pod所在的hypervisor上的virtual switch等环节做了“手脚”，这些也在广义的网络设备范畴内，也要查；<br>2. 在服务端抓包中，发现SYN包进来了，但服务端没回SYN+ACK，那就检查本地是否有拦截（比如iptables）、端口监听是否正常、系统资源是否正常、应用的网络部分的代码是否正常、应用层的network syscall的返回是否正常；<br>3. 在服务端抓包中，发现SYN包进来了，自己也回了SYN+ACK，但客户端抓包中没收到SYN+ACK，推进方法跟1类似。<br><br>在1的服务端的入方向，tcpdump抓包发生在iptables规则起作用之前，所以如果SYN&#47;SYN+ACK已经来了，tcpdump就能看到SYN，但iptables接着做拦截的话，这个连接也还是无法建立（跟网络上丢失的效果一致），这时候虽然见着了SYN但协议栈没回复SYN+ACK，却并不是协议栈的问题（而是iptables拦截导致）。这个分析也适用于3的客户端入方向。<br><br><br>可能没有涵盖所有情况，先想到这些：） 防火墙的话，会引起1和3，当然防火墙也会引起别的问题。关于防火墙的内容，下周上第5和第6课就可以学习到了。<br>","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642173170,"ip_address":"","comment_id":330783,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27411962904","product_id":100104301,"comment_content":"telnet的握手SYN包发出去，但对端一直没回复SYN+ACK，导致telnet的connect()无法成功返回，造成了挂起。<br><br>这个一般会是什么原因呢？<br>是对端繁忙，还是防火墙呢？","like_count":7,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546132,"discussion_content":"嗯，这个要结合客户端和服务端的抓包，对比来分析：\n1. 客户端抓包中有发出SYN，但在服务端抓包中没收到SYN，一般是客户端去往服务端的问题，检查这个方向上的网络设备；虚拟化情况下，也可能是客户端或者服务端VM/pod所在的hypervisor上的virtual switch等环节做了“手脚”，这些也在广义的网络设备范畴内，也要查；\n2. 在服务端抓包中，发现SYN包进来了，但服务端没回SYN+ACK，那就检查本地是否有拦截（比如iptables）、端口监听是否正常、系统资源是否正常、应用的网络部分的代码是否正常、应用层的network syscall的返回是否正常；\n3. 在服务端抓包中，发现SYN包进来了，自己也回了SYN+ACK，但客户端抓包中没收到SYN+ACK，推进方法跟1类似。\n\n在1的服务端的入方向，tcpdump抓包发生在iptables规则起作用之前，所以如果SYN/SYN+ACK已经来了，tcpdump就能看到SYN，但iptables接着做拦截的话，这个连接也还是无法建立（跟网络上丢失的效果一致），这时候虽然见着了SYN但协议栈没回复SYN+ACK，却并不是协议栈的问题（而是iptables拦截导致）。这个分析也适用于3的客户端入方向。\n\n\n可能没有涵盖所有情况，先想到这些：） 防火墙的话，会引起1和3，当然防火墙也会引起别的问题。关于防火墙的内容，下周上第5和第6课就可以学习到了。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642173170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330615,"user_name":"Alex_Shen","can_delete":false,"product_type":"c1","uid":1198156,"ip_address":"","ucode":"2B6AC79A2971A5","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/4c/29b0d5ae.jpg","comment_is_top":false,"comment_ctime":1642070727,"is_pvip":true,"replies":[{"id":"120581","content":"回复100分：）<br><br>对于问题一，稍作补充：如果udp端口号不是递增，会有个问题是无法判断返回的time-to-live exceeded报文是代表了哪一跳。由于这个ttl exceeded报文携带了这次探测的udp端口号信息，比如是34440，减去base number33434，就是6，那么就是第6跳回复的。<br><br>问题二，抱歉可能大家对“挂起”的理解不完全一致，我原意是指telnet没有失败退出，也没有成功到提示符，而是处在尝试连接状态中。<br>telnet成功后，表示握手成功，这时，我们可以继续发送文本，比如GET &#47; HTTP&#47;1.1<br>Host: www.baidu.com<br><br>这就是一次模拟的HTTP请求。<br>可以参考我这边的实验结果：<br><br>$ telnet www.baidu.com 80<br>Trying 180.101.49.11...<br>Connected to www.a.shifen.com.<br>Escape character is &#39;^]&#39;.<br>GET &#47; HTTP&#47;1.1<br>Host: www.baidu.com<br><br>HTTP&#47;1.1 200 OK<br>Accept-Ranges: bytes<br>Cache-Control: no-cache<br>Connection: keep-alive<br>Content-Length: 9508<br>Content-Type: text&#47;html<br>Date: Thu, 13 Jan 2022 13:19:58 GMT<br>P3p: CP=&quot; OTI DSP COR IVA OUR IND COM &quot;<br>P3p: CP=&quot; OTI DSP COR IVA OUR IND COM &quot;","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642080052,"ip_address":"","comment_id":330615,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23116907207","product_id":100104301,"comment_content":"一. 原理 程序是利用增长存活时间（TTL）值来实现其功能的。每当数据包通过一个路由器，其存活时间就会减1。当其存活时间是0时，主机便取消数据包，并发送一个ICMP TTL数据包给原数据包的发出者。程序发出的首3个数据包TTL值是1，以后3个是2，如此类推，它便获得一连串数据包路径。注意IP不保证每一个数据包走的路径都同样。<br> 1. Linux和Mac OS等系统使用UDP包进行探测，目标端口号默认为33434，每次探测目标端口号加1。Traceroute故意使用了一个大于 30000 的目标端口号，以保证目标地址收到数据包后能够返回一个“端口不可达”的 ICMP 报文，于是源地址就可将端口不可达报文当作跟踪结束的标志。<br><br> 2.Traceroute每跳默认发送3个探测包（发包的数量可通过-q进行设置），探测包的返回会受到网络情况的影响。如果防火墙封掉了ICMP的返回信息，那么相应的延时位置会以*显示。如果某台网关阻塞或者某台DNS出现问题，那么相应行的延时会变长。可以加-n 参数来避免DNS解析，以IP格式输出数据。<br><br> 3.每个探测包都有唯一的标识号，使得Traceroute能够识别返回的包。UDP数据包使用递增的目标端口号进行标识。<br><br>二. alex@alex-HVM-domU:~$ telnet www.baidu.com 443<br>Trying 180.101.49.11...<br>Connected to www.a.shifen.com.<br>Escape character is &#39;^]&#39;.<br>ddddd<br>Connection closed by foreign host.<br><br>telnet百度是不是就是一个挂起的状态   不做任务操作就是一直是三次握手的状态，输入东西后就退出了  抓包后看不懂是不是没有正常的四次挥手退出，看到好像是两次挥手","like_count":5,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545910,"discussion_content":"回复100分：）\n\n对于问题一，稍作补充：如果udp端口号不是递增，会有个问题是无法判断返回的time-to-live exceeded报文是代表了哪一跳。由于这个ttl exceeded报文携带了这次探测的udp端口号信息，比如是34440，减去base number33434，就是6，那么就是第6跳回复的。\n\n问题二，抱歉可能大家对“挂起”的理解不完全一致，我原意是指telnet没有失败退出，也没有成功到提示符，而是处在尝试连接状态中。\ntelnet成功后，表示握手成功，这时，我们可以继续发送文本，比如GET / HTTP/1.1\nHost: www.baidu.com\n\n这就是一次模拟的HTTP请求。\n可以参考我这边的实验结果：\n\n$ telnet www.baidu.com 80\nTrying 180.101.49.11...\nConnected to www.a.shifen.com.\nEscape character is &#39;^]&#39;.\nGET / HTTP/1.1\nHost: www.baidu.com\n\nHTTP/1.1 200 OK\nAccept-Ranges: bytes\nCache-Control: no-cache\nConnection: keep-alive\nContent-Length: 9508\nContent-Type: text/html\nDate: Thu, 13 Jan 2022 13:19:58 GMT\nP3p: CP=&#34; OTI DSP COR IVA OUR IND COM &#34;\nP3p: CP=&#34; OTI DSP COR IVA OUR IND COM &#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642080052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2894784,"avatar":"","nickname":"Geek_4996c9","note":"","ucode":"98F65C1722D354","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561142,"discussion_content":"Traceroute故意使用了一个大于 30000 的目标端口号，以保证目标地址收到数据包后能够返回一个“端口不可达”的 ICMP 报文，于是源地址就可将端口不可达报文当作跟踪结束的标志。\n\n为什么大于30000就保证了端口不可达呢 端口的访问是0到65535呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649560663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":2894784,"avatar":"","nickname":"Geek_4996c9","note":"","ucode":"98F65C1722D354","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":574715,"discussion_content":"因为一般服务端不太会用30000以上的端口，这就极大的降低了“撞车”（也就是正巧服务端监听在这个测试端口的概率）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654275744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":561142,"ip_address":""},"score":574715,"extra":""}]}]},{"had_liked":false,"id":331568,"user_name":"宝仔","can_delete":false,"product_type":"c1","uid":1013493,"ip_address":"","ucode":"A0F17DFF99DB21","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/f5/e3f5bd8d.jpg","comment_is_top":false,"comment_ctime":1642658099,"is_pvip":true,"replies":[{"id":"121215","content":"恩蛮常见的现象，原因就是中间节点没有对icmp类型的消息做回复，但终点是做了。所以建议icmp和udp都做一遍，这样两张拼图互相缺失的部分就补起来了","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642826127,"ip_address":"","comment_id":331568,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10232592691","product_id":100104301,"comment_content":"老师，加了-i之后，traceroute能跑完了，但是中间还有* 这个代表什么？<br>traceroute to www.baidu.com (180.101.49.11), 30 hops max, 60 byte packets<br> 1  10.4.16.74 (10.4.16.74)  2.567 ms  2.563 ms  2.561 ms<br> 2  10.4.16.5 (10.4.16.5)  2.259 ms  2.535 ms  2.801 ms<br> 3  11.168.161.18 (11.168.161.18)  2.108 ms  2.115 ms  2.115 ms<br> 4  11.94.128.58 (11.94.128.58)  5.217 ms  5.196 ms  5.214 ms<br> 5  10.102.41.85 (10.102.41.85)  4.932 ms  4.949 ms  5.020 ms<br> 6  115.238.21.126 (115.238.21.126)  4.374 ms  6.067 ms  6.086 ms<br> 7  220.191.200.209 (220.191.200.209)  8.263 ms  8.184 ms  8.224 ms<br> 8  202.97.22.6 (202.97.22.6)  14.642 ms  14.650 ms *<br> 9  * * *<br>10  * * *<br>11  * * *<br>12  * * *<br>13  * * *<br>14  * * *<br>15  * * *<br>16  180.101.49.11 (180.101.49.11)  15.283 ms  15.292 ms  15.289 ms","like_count":2,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547689,"discussion_content":"恩蛮常见的现象，原因就是中间节点没有对icmp类型的消息做回复，但终点是做了。所以建议icmp和udp都做一遍，这样两张拼图互相缺失的部分就补起来了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642826127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330574,"user_name":"webmin","can_delete":false,"product_type":"c1","uid":1047014,"ip_address":"","ucode":"98B0CA882454E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/e6/47742988.jpg","comment_is_top":false,"comment_ctime":1642052744,"is_pvip":true,"replies":[{"id":"120582","content":"很赞~<br>是的，我观察到traceroute不是“挨个”探测的，而是一把发出多个不同TTL（和不同UDP端口）的探测报文，然后根据返回的情况，再判断的","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642080149,"ip_address":"","comment_id":330574,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10231987336","product_id":100104301,"comment_content":"看到有同学问：“为什么udp port需要增加？”<br>我的理解是traceroute是探测，有可能会遇到有的路由器在TTL减为0时不做回应，traceroute在等超时以后还会努力去再去尝试探测下一跳，traceroute每次用的端口是Base Port + TLL，这样如果有回应包，traceroute就可以通过回应包中的目的地Port - BasePort就可以得知TTL是多少。<br>另这种机制也有利于traceroute可以并发发出多个UDP，每个包的TTL和端口不一样，只要根据回应包就可以得知TTL的信息。","like_count":2,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545911,"discussion_content":"很赞~\n是的，我观察到traceroute不是“挨个”探测的，而是一把发出多个不同TTL（和不同UDP端口）的探测报文，然后根据返回的情况，再判断的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642080149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546897,"discussion_content":"不错，这些细节都扣清楚了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642461305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352228,"user_name":"柒小一","can_delete":false,"product_type":"c1","uid":2665218,"ip_address":"","ucode":"8BB0D1C46C84E1","user_header":"https://static001.geekbang.org/account/avatar/00/28/ab/02/a1047d53.jpg","comment_is_top":false,"comment_ctime":1658465694,"is_pvip":false,"replies":[{"id":"128172","content":"是的：）<br>TCP的报文叫segment<br>IP的报文叫datagram，其实UDP的也叫datagram<br>二层的叫frame<br><br>segment是指“属于一个大块信息中的一部分”的报文，datagram是前后没有关系的相对独立的报文。<br>说到这里，你也可以联想一下VXLAN这个协议。作为overlay网络，为什么把UDP当做底层传输协议，而不是用TCP呢？我们可以对比一下普通网络和overlay网络：<br>普通网络（相对而言就是underlay网络）：frame ( IP ( UDP&#47;TCP ) )<br>overlay网络：outer frame ( outer IP ( outer UDP ( inner frame ( inner IP (inner UDP&#47;TCP ) ) ) )<br>一个建立在overlay网络上的传输层（也就是上面的inner UDP&#47;TCP)，本身已经完成了传输功能（比如TCP的话就是传输可靠性的保证等等特性），所以不需要在底层underlay网络再浪费资源做一次传输层保证了。而因为UDP跟IP都是datagram，不需要维护复杂的状态，所以被选为VXLAN的underlay协议。<br>","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1658551312,"ip_address":"","comment_id":352228,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5953432990","product_id":100104301,"comment_content":"TCP&#47;IP Illusrated里强调了 TCP segment ,IP dategrame , frame来说明三层不同的叫法，这里有点糊涂了。","like_count":1,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581149,"discussion_content":"是的：）\nTCP的报文叫segment\nIP的报文叫datagram，其实UDP的也叫datagram\n二层的叫frame\n\nsegment是指“属于一个大块信息中的一部分”的报文，datagram是前后没有关系的相对独立的报文。\n说到这里，你也可以联想一下VXLAN这个协议。作为overlay网络，为什么把UDP当做底层传输协议，而不是用TCP呢？我们可以对比一下普通网络和overlay网络：\n普通网络（相对而言就是underlay网络）：frame ( IP ( UDP/TCP ) )\noverlay网络：outer frame ( outer IP ( outer UDP ( inner frame ( inner IP (inner UDP/TCP ) ) ) )\n一个建立在overlay网络上的传输层（也就是上面的inner UDP/TCP)，本身已经完成了传输功能（比如TCP的话就是传输可靠性的保证等等特性），所以不需要在底层underlay网络再浪费资源做一次传输层保证了。而因为UDP跟IP都是datagram，不需要维护复杂的状态，所以被选为VXLAN的underlay协议。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658551312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335498,"user_name":"King-ZJ","can_delete":false,"product_type":"c1","uid":1915385,"ip_address":"","ucode":"7448A4BBB5A118","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/f9/b946719a.jpg","comment_is_top":false,"comment_ctime":1645540880,"is_pvip":false,"replies":[{"id":"122655","content":"赞，你的基础应该很好了，希望我的实际案例对你有补充和帮助~","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1645637452,"ip_address":"","comment_id":335498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5940508176","product_id":100104301,"comment_content":"作为一个网络工程师，日常也会参与运维工作。对于文中提到的排查命令，有一些也会用到，但是原理不是那么清晰，通过此次学习，再次复习这些知识点，温故而知新。","like_count":1,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552924,"discussion_content":"赞，你的基础应该很好了，希望我的实际案例对你有补充和帮助~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645637452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332000,"user_name":"困到清醒","can_delete":false,"product_type":"c1","uid":1384381,"ip_address":"","ucode":"1CD20C408C0BC9","user_header":"https://static001.geekbang.org/account/avatar/00/15/1f/bd/04100cb4.jpg","comment_is_top":false,"comment_ctime":1642954761,"is_pvip":true,"replies":[{"id":"121336","content":"没事，都是一点点学起来的，加油，有疑问可以留言：）","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1643033177,"ip_address":"","comment_id":332000,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5937922057","product_id":100104301,"comment_content":"打卡学习！除了ping就是telnet的我，努力跟上节奏","like_count":1,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548116,"discussion_content":"没事，都是一点点学起来的，加油，有疑问可以留言：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643033177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331501,"user_name":"Geek_cad238","can_delete":false,"product_type":"c1","uid":2897882,"ip_address":"","ucode":"E0B3979565886F","user_header":"","comment_is_top":false,"comment_ctime":1642609086,"is_pvip":false,"replies":[{"id":"121127","content":"你的补充很好。确实，在业界用的多的还是OSI的模型","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642650618,"ip_address":"","comment_id":331501,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5937576382","product_id":100104301,"comment_content":"关于TCP&#47;IP五层模型和OSI的七层模型，最新版的CCNA官方教材有说明：https:&#47;&#47;note.youdao.com&#47;s&#47;F10GcERR","like_count":1,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547371,"discussion_content":"你的补充很好。确实，在业界用的多的还是OSI的模型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642650618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1635932,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKSEVQdSoW2SwDic2U3uIibsa1bH3qSSzCvYTN5xHC5ppGDS2DBxL1KcbuxZ6Ez6kyOGj1F4toiaiazBA/132","nickname":"PeiHongbing","note":"","ucode":"F115AD8740B0DC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554992,"discussion_content":"请问CCNA官方教材在哪能下载？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646710903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330502,"user_name":"Dexter","can_delete":false,"product_type":"c1","uid":2608728,"ip_address":"","ucode":"909CABC4AC4AC9","user_header":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","comment_is_top":false,"comment_ctime":1641999093,"is_pvip":true,"replies":[{"id":"120445","content":"看明白你的问题了，是指traceroute udp模式（也就是默认模式）下，为什么每次发送的udp探测包，其目的端口是递增的对吧？这样可以通过返回的ICMP消息里面携带的payload（这是一个“内嵌”的udp数据包），识别到这个ICMP是呼应了哪个udp探测包。如果每次端口号都相同，那所有的ICMP回复，就没有区别了，这并不是我们想要的。","user_name":"作者回复","user_name_real":"作者","uid":"1662117","ctime":1642004858,"ip_address":"","comment_id":330502,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5936966389","product_id":100104301,"comment_content":"为什么udp port需要增加？没什么意义吧","like_count":2,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545631,"discussion_content":"看明白你的问题了，是指traceroute udp模式（也就是默认模式）下，为什么每次发送的udp探测包，其目的端口是递增的对吧？这样可以通过返回的ICMP消息里面携带的payload（这是一个“内嵌”的udp数据包），识别到这个ICMP是呼应了哪个udp探测包。如果每次端口号都相同，那所有的ICMP回复，就没有区别了，这并不是我们想要的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642004858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545658,"discussion_content":"因为我们只关心路径，为什么Ip层协议无法达到这个效果而一定要UDP? UDP 已经是传输层需要输入端口信息了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642030503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":1033219,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","nickname":"JianXu","note":"","ucode":"2A61BDBB573BDC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546153,"discussion_content":"路径的中间跳，其实用icmp和udp，都各有覆盖面。对于目的端，因为有些只支持icmp模式的回复，有些是只支持udp模式的回复（虽然两种回复消息都是ICMP），所以需要换着用，以获取到完整的路径：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642177981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545658,"ip_address":""},"score":546153,"extra":""}]}]},{"had_liked":false,"id":330493,"user_name":"includestdio.h","can_delete":false,"product_type":"c1","uid":2314854,"ip_address":"","ucode":"5027BACE9319CD","user_header":"https://static001.geekbang.org/account/avatar/00/23/52/66/3e4d4846.jpg","comment_is_top":false,"comment_ctime":1641995083,"is_pvip":true,"replies":[{"id":"120447","content":"回答很不错，给你点👍<br>“挂起”就是程序暂时没有响应，既不前进（成功）也不后退（报错失败）。telnet如果握手成功，是会进入正常提示符的，而挂起则不会，也意味着连接不成功（持续等待服务端的回应）。","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642005056,"ip_address":"","comment_id":330493,"utype":1}],"discussion_count":3,"race_medal":1,"score":"5936962379","product_id":100104301,"comment_content":"1.traceroute UDP探测时，使用一个大于30000的端口号，服务器在收到这个数据包的时候会返回一个端口不可达的ICMP错误信息，客户端通过判断收到的错误信息是TTL超时，还是端口不可达来判断数据包是否到达目标主机。如收到超时则表示未得到对端主机应答，属于不通，收到端口不可达，则得到了对端主机的错误应答，属于通过<br><br>2.没太理解这里的“挂起”具体是指，猜测可能是对端对应端口无法直接处理TCP请求，需要再次追加应用层面请求，比如WEB服务需要再次追加GET POST等HTTP层请求？","like_count":1,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545633,"discussion_content":"回答很不错，给你点👍\n“挂起”就是程序暂时没有响应，既不前进（成功）也不后退（报错失败）。telnet如果握手成功，是会进入正常提示符的，而挂起则不会，也意味着连接不成功（持续等待服务端的回应）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642005056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2314854,"avatar":"https://static001.geekbang.org/account/avatar/00/23/52/66/3e4d4846.jpg","nickname":"includestdio.h","note":"","ucode":"5027BACE9319CD","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545578,"discussion_content":"看来是我想多了，如果是指TCP连接没有成功的话，说明对端端口不可达，无法正常响应客户端Syn包，不可达可能是对端监听问题，也可能是链路中防火墙阻断问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641996773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":2314854,"avatar":"https://static001.geekbang.org/account/avatar/00/23/52/66/3e4d4846.jpg","nickname":"includestdio.h","note":"","ucode":"5027BACE9319CD","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":546154,"discussion_content":"没错：）\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642178012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545578,"ip_address":""},"score":546154,"extra":""}]}]},{"had_liked":false,"id":330492,"user_name":"Christopher","can_delete":false,"product_type":"c1","uid":1757265,"ip_address":"","ucode":"1AC6035DFA4ECB","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d0/51/f1c9ae2d.jpg","comment_is_top":false,"comment_ctime":1641994373,"is_pvip":false,"replies":[{"id":"120441","content":"谢谢支持：）","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642003821,"ip_address":"","comment_id":330492,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5936961669","product_id":100104301,"comment_content":"这种课真是运维同学最爱","like_count":1,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545626,"discussion_content":"谢谢支持：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642003821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2232313,"avatar":"https://static001.geekbang.org/account/avatar/00/22/0f/f9/95d1537d.jpg","nickname":"氢气球","note":"","ucode":"C77BD2A02F3794","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545980,"discussion_content":"希望老师后面的课程能把一些专有名词的缩写展开！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642121208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":2232313,"avatar":"https://static001.geekbang.org/account/avatar/00/22/0f/f9/95d1537d.jpg","nickname":"氢气球","note":"","ucode":"C77BD2A02F3794","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":546149,"discussion_content":"好的，谢谢你的提醒。如果有没明白的，留言区我也会回复：）\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642177750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545980,"ip_address":""},"score":546149,"extra":""}]},{"author":{"id":1161543,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b9/47/d3d965f9.jpg","nickname":"MonkeyDVoid","note":"","ucode":"5AF49F15FC3323","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545732,"discussion_content":"没有运维的公司开发很需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642046299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":1161543,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b9/47/d3d965f9.jpg","nickname":"MonkeyDVoid","note":"","ucode":"5AF49F15FC3323","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546150,"discussion_content":"开发+运维，你不是最强还有谁！加油：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642177855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545732,"ip_address":""},"score":546150,"extra":""}]}]},{"had_liked":false,"id":355956,"user_name":"浅醉","can_delete":false,"product_type":"c1","uid":1522672,"ip_address":"上海","ucode":"5E6EE05F0E732F","user_header":"https://static001.geekbang.org/account/avatar/00/17/3b/f0/4bd5234f.jpg","comment_is_top":false,"comment_ctime":1661868247,"is_pvip":false,"replies":[{"id":"129661","content":"有可能是运营商网络互通的问题，比如你客户的宽带是A运营商的线路，你说的公网服务器是B运营商的线路。当A和B之间不能互通的时候，客户去向这个公网服务器发ping或者TCP连接就失败了。为什么客户依然可以连通百度呢？因为百度肯定是用BGP线路的（这里不是单指BGP协议，而是特指它跟几大运营商都有BGP互通互连），也就是百度即可以从A运营商一路连通，也可以从B运营商一路连通，客户到百度的路径上可能不存在跳转运营商的情况。<br>至于你在公司可以ping那个公网服务器，可能你公司的出口线路跟那个公网服务器是同一个运营商，或者至少是当时可以互通的两个运营商。<br>所以我的建议是可以查一下这个公网服务器是否用的是BGP线路？","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1662080685,"ip_address":"上海","comment_id":355956,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1661868247","product_id":100104301,"comment_content":"老师，请教个问题，问题就是：一批设备在客户的家里，通过家宽连上公网的服务器IP：端口（TCP连接）；突然下午大批设备离线，发现设备网络是正常的，能ping通百度，但是ping不通公网服务器的IP，但是我在公司电脑是可以ping通公网服务器IP的，请问这个是什么问题呢？有通过设备linux用traceroute来做路由跟踪，发现设备出了家宽的外网后就一直丢包","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586249,"discussion_content":"有可能是运营商网络互通的问题，比如你客户的宽带是A运营商的线路，你说的公网服务器是B运营商的线路。当A和B之间不能互通的时候，客户去向这个公网服务器发ping或者TCP连接就失败了。为什么客户依然可以连通百度呢？因为百度肯定是用BGP线路的（这里不是单指BGP协议，而是特指它跟几大运营商都有BGP互通互连），也就是百度即可以从A运营商一路连通，也可以从B运营商一路连通，客户到百度的路径上可能不存在跳转运营商的情况。\n至于你在公司可以ping那个公网服务器，可能你公司的出口线路跟那个公网服务器是同一个运营商，或者至少是当时可以互通的两个运营商。\n所以我的建议是可以查一下这个公网服务器是否用的是BGP线路？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662080685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1522672,"avatar":"https://static001.geekbang.org/account/avatar/00/17/3b/f0/4bd5234f.jpg","nickname":"浅醉","note":"","ucode":"5E6EE05F0E732F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"discussion":{"id":587333,"discussion_content":"好的，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662982102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":586249,"ip_address":"广东"},"score":587333,"extra":""}]}]},{"had_liked":false,"id":354278,"user_name":"Rico","can_delete":false,"product_type":"c1","uid":2040512,"ip_address":"上海","ucode":"9EFA5A95F78CCB","user_header":"https://static001.geekbang.org/account/avatar/00/1f/22/c0/177d6750.jpg","comment_is_top":false,"comment_ctime":1660239575,"is_pvip":false,"replies":[{"id":"129342","content":"赞！","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1661361054,"ip_address":"上海","comment_id":354278,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1660239575","product_id":100104301,"comment_content":"打卡学习","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585173,"discussion_content":"赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661361054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352372,"user_name":"walker","can_delete":false,"product_type":"c1","uid":1324219,"ip_address":"","ucode":"FA5B2400A53730","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/bb/0b971fca.jpg","comment_is_top":false,"comment_ctime":1658591433,"is_pvip":false,"replies":[{"id":"128188","content":"嗯这里没有描述的十分清楚，我指的是telnet没有响应的那种阻塞的状态。本质是背后的connect()系统调用没有及时返回导致的~","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1658630232,"ip_address":"","comment_id":352372,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1658591433","product_id":100104301,"comment_content":"挂起是指什么呢？sleep吗？是处于连接状态，还是断开，能恢复连接吗","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581212,"discussion_content":"嗯这里没有描述的十分清楚，我指的是telnet没有响应的那种阻塞的状态。本质是背后的connect()系统调用没有及时返回导致的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658630232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352225,"user_name":"有识之士","can_delete":false,"product_type":"c1","uid":1120024,"ip_address":"","ucode":"23F5594193D200","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/18/e4382a8e.jpg","comment_is_top":false,"comment_ctime":1658464240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658464240","product_id":100104301,"comment_content":"打卡学习。","like_count":0},{"had_liked":false,"id":347404,"user_name":"Geek_fc1f9a","can_delete":false,"product_type":"c1","uid":3007561,"ip_address":"","ucode":"68E2FB8B859C22","user_header":"","comment_is_top":false,"comment_ctime":1653993392,"is_pvip":true,"replies":[{"id":"126742","content":"1. 是traceroute命令，它是linux上的。windows上对等的命令是tracert<br>2. 是的，端口连接不通，发起的socket连接没有得到回应，telnet程序也会“卡”在那里~","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1654274819,"ip_address":"","comment_id":347404,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653993392","product_id":100104301,"comment_content":"1、tracerount是linux命令？<br>2|、访问主机端口未打开","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574713,"discussion_content":"1. 是traceroute命令，它是linux上的。windows上对等的命令是tracert\n2. 是的，端口连接不通，发起的socket连接没有得到回应，telnet程序也会“卡”在那里~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654274819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345838,"user_name":"theo.zhou","can_delete":false,"product_type":"c1","uid":2893427,"ip_address":"","ucode":"48C72C525EDFB2","user_header":"","comment_is_top":false,"comment_ctime":1652624444,"is_pvip":false,"replies":[{"id":"126743","content":"不急，这一节是基础知识，把专栏涉及的知识点大致先预览一遍，你可以“各个击破”去了解一下：）","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1654274877,"ip_address":"","comment_id":345838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1652624444","product_id":100104301,"comment_content":"一个前端开发，看这个，一脸懵逼","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574714,"discussion_content":"不急，这一节是基础知识，把专栏涉及的知识点大致先预览一遍，你可以“各个击破”去了解一下：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654274878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344763,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":2763179,"ip_address":"","ucode":"3588850B3370C8","user_header":"https://static001.geekbang.org/account/avatar/00/2a/29/ab/59a6e437.jpg","comment_is_top":false,"comment_ctime":1651757081,"is_pvip":true,"replies":[{"id":"125834","content":"哈没关系，可以把这篇里的名词和知识点去学习一下，这篇提及的知识点都熟悉的话，后面的课程进行起来就更加顺利了，有疑问就留言：）","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1651766885,"ip_address":"","comment_id":344763,"utype":1}],"discussion_count":1,"race_medal":5,"score":"1651757081","product_id":100104301,"comment_content":"老师最后给的图很棒！不过两个问题，我一个都答不上来，网络小白实锤了。","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570455,"discussion_content":"哈没关系，可以把这篇里的名词和知识点去学习一下，这篇提及的知识点都熟悉的话，后面的课程进行起来就更加顺利了，有疑问就留言：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651766885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343294,"user_name":"web","can_delete":false,"product_type":"c1","uid":2295037,"ip_address":"","ucode":"0FA494C7B6E069","user_header":"","comment_is_top":false,"comment_ctime":1650769368,"is_pvip":false,"replies":[{"id":"125373","content":"tcp流是指同个五元组的报文，互相之间连续有顺序，所以叫流。你说的“流之间相互有关系”，应该是指“同个流里的前后的报文互有关系”。比如：<br>tcp流1（cip:10000 -&gt;vip:80 at tcp)：报文1，报文2，报文3， 这几个报文都属于同一个tcp流。<br>tcp流2（cip:100001 -&gt; vip:80 at tcp)：报文a, 报文b，报文c。这时候，报文1和报文a是没有关系的，因为属于不同的tcp流。<br>同一个应用层消息是发给同一个tcp流的。<br>udp的话，宽泛来说也是可以用“流”这个词的，比如cip:10000 -&gt; vip:1000 at udp，这也可以称为一个udp流。基于udp的应用，它的同一个消息也会发给同一个udp流，而不是出现同一个消息的多个部分，分别用不同的udp流来发送的情况。","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1650812334,"ip_address":"","comment_id":343294,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650769368","product_id":100104301,"comment_content":"tcp是将应用层消息拆分成一个个流传输的，流之间相互有关系，udp呢？也是拆层一个个数据报，数据报之间没有关系？","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567016,"discussion_content":"tcp流是指同个五元组的报文，互相之间连续有顺序，所以叫流。你说的“流之间相互有关系”，应该是指“同个流里的前后的报文互有关系”。比如：\ntcp流1（cip:10000 -&gt;vip:80 at tcp)：报文1，报文2，报文3， 这几个报文都属于同一个tcp流。\ntcp流2（cip:100001 -&gt; vip:80 at tcp)：报文a, 报文b，报文c。这时候，报文1和报文a是没有关系的，因为属于不同的tcp流。\n同一个应用层消息是发给同一个tcp流的。\nudp的话，宽泛来说也是可以用“流”这个词的，比如cip:10000 -&gt; vip:1000 at udp，这也可以称为一个udp流。基于udp的应用，它的同一个消息也会发给同一个udp流，而不是出现同一个消息的多个部分，分别用不同的udp流来发送的情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650812334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337936,"user_name":"loris","can_delete":false,"product_type":"c1","uid":1179312,"ip_address":"","ucode":"00842745CF4B31","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","comment_is_top":false,"comment_ctime":1647165037,"is_pvip":true,"replies":[{"id":"123646","content":"你好，windows里的命令也有类似的：<br>netstat这个命令在*nix和windows里都有<br>mtr也有windows版本，它带图形界面，用法类似<br>ss是linux的命令，windows上没有<br>telnet也是*nix和windows里都有的<br>traceroute在windows上是tracert（拼写不同），windows的tracert默认用icmp模式，linux的traceroute默认用udp模式<br>ip route是linux中查看路由表的命令，windows可以用route print<br>ethtool是linux的命令，windows要配置一些网络特性的话用netsh<br>iftop在linux上可以查看网络流量，windows上用task manager的network部分（不过印象中可能看不到IP级别的流量数据）<br>抓包的话，windows上安装wireshark，一些老的windows上也许还带network monitor，都可以抓包~<br>","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1647401663,"ip_address":"","comment_id":337936,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647165037","product_id":100104301,"comment_content":"老师，文章里大部分网络各层的命令是在UNIX系统里提供<br>请问对应的WINDOWS 系统中的命令又是什么？<br>比如SS ，mtr等命令","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556496,"discussion_content":"你好，windows里的命令也有类似的：\nnetstat这个命令在*nix和windows里都有\nmtr也有windows版本，它带图形界面，用法类似\nss是linux的命令，windows上没有\ntelnet也是*nix和windows里都有的\ntraceroute在windows上是tracert（拼写不同），windows的tracert默认用icmp模式，linux的traceroute默认用udp模式\nip route是linux中查看路由表的命令，windows可以用route print\nethtool是linux的命令，windows要配置一些网络特性的话用netsh\niftop在linux上可以查看网络流量，windows上用task manager的network部分（不过印象中可能看不到IP级别的流量数据）\n抓包的话，windows上安装wireshark，一些老的windows上也许还带network monitor，都可以抓包~\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647401664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337249,"user_name":"PeiHongbing","can_delete":false,"product_type":"c1","uid":1635932,"ip_address":"","ucode":"F115AD8740B0DC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKSEVQdSoW2SwDic2U3uIibsa1bH3qSSzCvYTN5xHC5ppGDS2DBxL1KcbuxZ6Ez6kyOGj1F4toiaiazBA/132","comment_is_top":false,"comment_ctime":1646718067,"is_pvip":false,"replies":[{"id":"123363","content":"挺好的，你愿意花一年，相信你一定可以有所成绩的！我的课程想照顾到尽量多的同学，所以有些基础知识没有展开，你可能要辛苦一下，如果遇到不懂的先搜索一下相关的知识，如果确实还没搞明白，留言提问我都会回答的~<br>关于你问的nc的输出的问题。我用的是ubuntu 20.04，可能是我们用的系统不同导致的。你试试去掉z，就运行nc -w 2 -v www.baidu.com 443看看呢？<br>","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1646926987,"ip_address":"","comment_id":337249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646718067","product_id":100104301,"comment_content":"谢谢老师提供的课程，辛苦了。<br>非科班出身，计算机基础知识几乎为零，希望跟着老师入门计算机网络基础知识，哪怕用一整年时间去学懂这个课程也行。<br>遇到了个问题：nc命令输出的结果和老师的不一样，详情如下：<br># nc -w 2 -zv www.baidu.com 443<br>Ncat: Version 7.50 ( https:&#47;&#47;nmap.org&#47;ncat )<br>Ncat: Connected to 110.242.68.3:443.<br>Ncat: 0 bytes sent, 0 bytes received in 0.03 seconds.<br><br>---<br># cat &#47;etc&#47;redhat-release <br>CentOS Linux release 7.9.2009 (Core)<br><br>---<br># uname -r<br>3.10.0-1160.45.1.el7.x86_64<br>","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555500,"discussion_content":"挺好的，你愿意花一年，相信你一定可以有所成绩的！我的课程想照顾到尽量多的同学，所以有些基础知识没有展开，你可能要辛苦一下，如果遇到不懂的先搜索一下相关的知识，如果确实还没搞明白，留言提问我都会回答的~\n关于你问的nc的输出的问题。我用的是ubuntu 20.04，可能是我们用的系统不同导致的。你试试去掉z，就运行nc -w 2 -v www.baidu.com 443看看呢？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646926987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336448,"user_name":"三三","can_delete":false,"product_type":"c1","uid":1189553,"ip_address":"","ucode":"EF2991CAAB2FA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/26/b1/cc902a24.jpg","comment_is_top":false,"comment_ctime":1646148150,"is_pvip":false,"replies":[{"id":"123000","content":"评论也是很好的学习资料，很多同学提了非常有质量的问题，我一般也会查证后再回复，你翻阅评论确实是很好的学习方法：）","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1646228549,"ip_address":"","comment_id":336448,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646148150","product_id":100104301,"comment_content":"啊啊啊依旧不知道问题的答案，只能看评论","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554145,"discussion_content":"评论也是很好的学习资料，很多同学提了非常有质量的问题，我一般也会查证后再回复，你翻阅评论确实是很好的学习方法：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646228549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335702,"user_name":"FL","can_delete":false,"product_type":"c1","uid":1928368,"ip_address":"","ucode":"C82D077D6C2277","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCKzC0IPq9HSaMiaySKyviaBftvz2EjgqKNCwia9C0xIfYnuE7qntQ6fQ9oL2sEyJGWu0Mmj7EbWicrg/132","comment_is_top":false,"comment_ctime":1645634065,"is_pvip":true,"replies":[{"id":"122700","content":"没关系，没有人生来就会。这里的两篇预习篇的内容比较浓缩，如果有很多知识还不熟悉，建议先搜索一些资料，把预习篇的内容理解到80%以上，这样的话后面的课程学习起来会效果好很多：）","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1645712111,"ip_address":"","comment_id":335702,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645634065","product_id":100104301,"comment_content":"好多基础的都不太会，坚持学习 先给自己加个油","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553085,"discussion_content":"没关系，没有人生来就会。这里的两篇预习篇的内容比较浓缩，如果有很多知识还不熟悉，建议先搜索一些资料，把预习篇的内容理解到80%以上，这样的话后面的课程学习起来会效果好很多：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645712111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335669,"user_name":"风早","can_delete":false,"product_type":"c1","uid":1069713,"ip_address":"","ucode":"A4D046C90F832E","user_header":"https://static001.geekbang.org/account/avatar/00/10/52/91/d07baf7e.jpg","comment_is_top":false,"comment_ctime":1645620610,"is_pvip":false,"replies":[{"id":"122652","content":"ss是linux的命令，mac可能无法安装。不过你可以试试安装一个ubuntu docker或者VM","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1645637131,"ip_address":"","comment_id":335669,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645620610","product_id":100104301,"comment_content":"mac电脑上没有ss命令怎么办，需要安装什么","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552920,"discussion_content":"ss是linux的命令，mac可能无法安装。不过你可以试试安装一个ubuntu docker或者VM","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645637131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334880,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1645166909,"is_pvip":false,"replies":[{"id":"122815","content":"都正确，也看到你认真回复了，一定可以学好这门课，加油：）","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1645886650,"ip_address":"","comment_id":334880,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645166909","product_id":100104301,"comment_content":"1.程序是利用增长存活时间（TTL）值来实现其功能的。经过路由器时， TTL -1, TTL=0时候 数据包被丢弃<br>2.当前端 已经处于syn-sent 状态， 对端没有返回syn+ack 数据包","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553439,"discussion_content":"都正确，也看到你认真回复了，一定可以学好这门课，加油：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645886650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334878,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1645166644,"is_pvip":false,"replies":[{"id":"122386","content":"很好的打卡，坚持学习，一定有进步～","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1645363056,"ip_address":"","comment_id":334878,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645166644","product_id":100104301,"comment_content":"应用层以 HTTP 为例，可以用浏览器开发者工具，实现远程 IP 识别、耗时分析、Cookie 删除等需求。<br>会话层和表示层以 TLS 为主，我们还是用浏览器开发者工具，可以查看证书细节、协商后使用的 Cipher suite 等信息，属于静态信息。然后学习了用 tcpdump 和 Wireshark 查看更详细的 TLS 握手细节的方法。这些信息是动态的，也只有用抓包分析的手段才能做到。<br>在传输层，我们学到了 telnet、nc、netstat、ss 等命令，通过它们，我们可以测试连通性，也可以获取连接状况和统计信息，对于传输问题的排查都很有帮助。<br>在网络层及以下的部分，我们学习了 traceroute、mtr、ip 等工具，可以检测网络路径状况。<br>在数据链路层和物理层，我们可以做得不多，主要依靠网络层观察到的链路质量来推断这两次的情况。当然，也可以用 ethtool 这个工具查看这两层的详情。","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552234,"discussion_content":"很好的打卡，坚持学习，一定有进步～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645363056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332269,"user_name":"Ruge🤫","can_delete":false,"product_type":"c1","uid":2404629,"ip_address":"","ucode":"466733353D586B","user_header":"https://static001.geekbang.org/account/avatar/00/24/b1/15/8778e9df.jpg","comment_is_top":false,"comment_ctime":1643130848,"is_pvip":false,"replies":[{"id":"121432","content":"很开心你喜欢这门课，欢迎提问、留言~","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1643213399,"ip_address":"","comment_id":332269,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643130848","product_id":100104301,"comment_content":"从听课，再到看评论，自己的一些思考和疑问都得到了对应的解答。这门课的氛围真好","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548494,"discussion_content":"很开心你喜欢这门课，欢迎提问、留言~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643213399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332148,"user_name":"陈年人","can_delete":false,"product_type":"c1","uid":2901211,"ip_address":"","ucode":"BDDDB6A2B10C4C","user_header":"https://static001.geekbang.org/account/avatar/00/2c/44/db/bd08e769.jpg","comment_is_top":false,"comment_ctime":1643067605,"is_pvip":false,"replies":[{"id":"121434","content":"欢迎，学完课程你应该会成为OSI全栈（1到7层）高手了：）","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1643213696,"ip_address":"","comment_id":332148,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1643067605","product_id":100104301,"comment_content":"我是负责网络的，从上三层的角度来学习学习处理网络问题嘿嘿","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548497,"discussion_content":"欢迎，学完课程你应该会成为OSI全栈（1到7层）高手了：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643213696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331859,"user_name":"Newbie","can_delete":false,"product_type":"c1","uid":1757812,"ip_address":"","ucode":"CA0FEE2DF82003","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d2/74/dcd97033.jpg","comment_is_top":false,"comment_ctime":1642837050,"is_pvip":true,"replies":[{"id":"121255","content":"哈哈 好~","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642864149,"ip_address":"","comment_id":331859,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642837050","product_id":100104301,"comment_content":"打卡,期待后面详细学习wireshark 和tcpdump","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547804,"discussion_content":"哈哈 好~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642864149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331196,"user_name":"幕星max","can_delete":false,"product_type":"c1","uid":1394033,"ip_address":"","ucode":"C5AFB8C8F84CA5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rckFBwVhjsF63kn2vvrYSiczHMib7SqR647FNXvjY8EgH0dHdHo38j3d7pwbUW4H9tMxN8LlOSgIia8adeo2ILzTg/132","comment_is_top":false,"comment_ctime":1642481425,"is_pvip":true,"replies":[{"id":"121028","content":"你应该是配置了本地代理吧，这个127.0.0.1:7890估计是你的代理服务器（就在本地）？","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642510574,"ip_address":"","comment_id":331196,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1642481425","product_id":100104301,"comment_content":"浏览器打开 F12, 有的网站 http header 那里, remote address 是 127.0.0.1:7890 这种本地地址, 这是为什么呢?我预期应该是公网地址才对啊","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547058,"discussion_content":"你应该是配置了本地代理吧，这个127.0.0.1:7890估计是你的代理服务器（就在本地）？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642510574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1394033,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/rckFBwVhjsF63kn2vvrYSiczHMib7SqR647FNXvjY8EgH0dHdHo38j3d7pwbUW4H9tMxN8LlOSgIia8adeo2ILzTg/132","nickname":"幕星max","note":"","ucode":"C5AFB8C8F84CA5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547093,"discussion_content":"对的, 一言点醒, 感谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642520280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1271745,"avatar":"https://static001.geekbang.org/account/avatar/00/13/67/c1/12fc72f9.jpg","nickname":"王旭","note":"","ucode":"B3A429BCDAD579","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1394033,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/rckFBwVhjsF63kn2vvrYSiczHMib7SqR647FNXvjY8EgH0dHdHo38j3d7pwbUW4H9tMxN8LlOSgIia8adeo2ILzTg/132","nickname":"幕星max","note":"","ucode":"C5AFB8C8F84CA5","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":548132,"discussion_content":"是不是ClashX，我电脑上也是。嘿嘿～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643036087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":547093,"ip_address":""},"score":548132,"extra":""}]}]},{"had_liked":false,"id":331131,"user_name":"幕星max","can_delete":false,"product_type":"c1","uid":1394033,"ip_address":"","ucode":"C5AFB8C8F84CA5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rckFBwVhjsF63kn2vvrYSiczHMib7SqR647FNXvjY8EgH0dHdHo38j3d7pwbUW4H9tMxN8LlOSgIia8adeo2ILzTg/132","comment_is_top":false,"comment_ctime":1642436845,"is_pvip":true,"replies":[{"id":"121100","content":"坚持学习，一定会有收获！","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642601869,"ip_address":"","comment_id":331131,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642436845","product_id":100104301,"comment_content":"内存很丰富, 学习了.","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547276,"discussion_content":"坚持学习，一定会有收获！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642601869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330625,"user_name":"Middleware","can_delete":false,"product_type":"c1","uid":1072015,"ip_address":"","ucode":"C0028293ECDD47","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg","comment_is_top":false,"comment_ctime":1642074141,"is_pvip":true,"replies":[{"id":"120577","content":"三层交换机是有路由功能的交换机。一般来说交换机是工作在二层的，所以这里强调“三层”交换机，就是突出了它带有三层（路由）功能。","user_name":"作者回复","user_name_real":"编辑","uid":"1662117","ctime":1642077577,"ip_address":"","comment_id":330625,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642074141","product_id":100104301,"comment_content":"三层交互机是个什么意思？","like_count":0,"discussions":[{"author":{"id":1662117,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7zuDYFIutbSPc4eEtcMhdNBTI1FRR7q0xrGh2X1QdiaNxvAV31HcRUsjPWLaaWftqgwTnVoiaica8Nw/132","nickname":"胜辉（大V）","note":"","ucode":"3C13BFCD82D4EC","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545899,"discussion_content":"三层交换机是有路由功能的交换机。一般来说交换机是工作在二层的，所以这里强调“三层”交换机，就是突出了它带有三层（路由）功能。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642077577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}