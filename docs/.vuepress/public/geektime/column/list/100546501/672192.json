{"id":672192,"title":"31｜项目实战与部署：如何实现接口部署与访问？","content":"<p>你好，我是Barry。</p><p>前面我们已经完成了后端的功能接口开发。从技术的角度出发，我们作为研发还应具备项目部署的能力。在企业应用当中，把项目部署到服务器上，不但能让前端访问接口，也能供更多用户使用我们的平台。</p><p>这节课的操作代码非常多，学完今天的内容之后，建议你在课后自己多多练习，巩固学习效果。要实现项目的部署，首先要确保服务器环境以及相关组件是完备的。除去基本的Python环境、MySQL之外，还有服务部署时用到的Nginx、Gunicorn、Supervisor库等。所以部署的第一步，我们先来完成服务器相关环境配置。</p><h2>配置Python环境与虚拟环境</h2><p>第一步，我们要配置Python环境。在安装之前，可以登录服务器检查一下上面是否安装了Python。方法就是直接在终端中运行后面的命令。</p><pre><code class=\"language-plain\">python --version\n</code></pre><p>如果已安装，你会看到对应的版本号，否则就需要你在服务器上重新安装。对于Ubuntu系统，安装命令如下。</p><pre><code class=\"language-plain\">sudo apt-get update  \nsudo apt-get install python3\n</code></pre><p>对于CentOS或RHEL系统，安装命令如下。</p><pre><code class=\"language-plain\">sudo yum install python3\n</code></pre><p>为了隔离项目依赖和环境，我们还需要在服务器上使用虚拟环境，为每个项目提供独立的Python环境。接下来，我们来安装虚拟环境工具virtualenv。</p><!-- [[[read_end]]] --><pre><code class=\"language-plain\">pip install virtualenv\n</code></pre><p>在安装成功之后，我们要去项目目录下激活虚拟环境方可使用。</p><pre><code class=\"language-plain\">virtualenv venv\nsource venv/bin/activate\n</code></pre><p>搞定虚拟环境以后，下一步就是在虚拟环境中安装项目所需的依赖包。通过所需的依赖包，可以确保项目使用的包版本与开发环境中一致，并且不会与其他项目或全局环境中的包冲突。</p><p>具体的安装命令是后面这样。其中，requirements.txt表示包含项目依赖的文本文件。</p><pre><code class=\"language-plain\">pip install -r requirements.txt\n</code></pre><p>到这里，我们就成功完成了服务器Python环境和虚拟环境的配置。</p><h2>MySQL配置</h2><p>通过前面的学习，我们确定了项目里要用到数据库MySQL。同样为了保证后端能够访问数据库，我们还要在服务器上安装MySQL数据库。</p><p>这里的思路和前面Python环境安装类似，还是先查看一下服务器上是否安装了MySQL。我们还是在登录服务器之后，运行后面的命令。</p><pre><code class=\"language-plain\">mysql --version\n</code></pre><p>如果能看到版本号，那证明已经安装过了，否则就需要重新安装。如果是Ubuntu环境，直接运行后面的命令即可。</p><pre><code class=\"language-plain\">sudo apt-get update\nsudo apt-get install mysql-server\n</code></pre><p>之后我们还要对MySQL做一些基本的配置，输入后面的命令即可启动服务。</p><pre><code class=\"language-plain\">sudo service mysql start\n</code></pre><p>启动服务以后，你可以通过下面的命令完成数据库的安全配置，mysql_secure_installation&nbsp;脚本可以提高 MySQL 数据库的安全性，减少潜在的攻击风险。具体执行代码如下。</p><pre><code class=\"language-plain\">sudo mysql_secure_installation\n</code></pre><p>输入前面的命令后，我们还要按照提示来设置，包括设置MySQL的root密码和其他相关选项。</p><p>接下来，我们要在服务器上创建一个空的数据库。</p><pre><code class=\"language-plain\">mysql -u root -p\n</code></pre><p>下一步就是创建数据库和用户，同时完成权限设置。具体操作代码如下所示。</p><pre><code class=\"language-plain\">CREATE DATABASE database;\nCREATE USER 'username'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON database.* TO 'username'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre><p>请注意，上面这段配置你需要替换username、database、password，换成你自己的用户名、数据库名、密码。对应配置中关联的就是我们项目中的数据库，数据库的信息如下所示，这里相信你也非常熟悉了。</p><pre><code class=\"language-python\">class Config:\n&nbsp; &nbsp; DEBUG = True\n&nbsp; &nbsp; LEVEL_LOG = logging.INFO\n&nbsp; &nbsp; SECRET_KEY = 'slajfasfjkajfj'\n&nbsp; &nbsp; SQL_HOST = '127.0.0.1'\n&nbsp; &nbsp; SQL_USERNAME = 'root'\n&nbsp; &nbsp; SQL_PASSWORD = 'root'\n&nbsp; &nbsp; SQL_PORT = 3306\n&nbsp; &nbsp; SQL_DB = 'my_project'\n&nbsp; &nbsp; JSON_AS_ASCII = False\n&nbsp; &nbsp; # 数据库的配置\n&nbsp; &nbsp; SQLALCHEMY_DATABASE_URI = f\"mysql+pymysql://{SQL_USERNAME}:{SQL_PASSWORD}@{SQL_HOST}:{SQL_PORT}/{SQL_DB}\"\n&nbsp; &nbsp; SQLALCHEMY_TRACK_MODIFICATIONS = False\n</code></pre><p>创建数据库之后，我们需要使用Flask-Migrate（Flask-Migrate是一个基于Flask框架的数据库迁移工具）来实现数据库迁移，并且集成到Flask-Script中。</p><p>每次我们需要对数据库进行更改时，都需要创建一个新的迁移文件，并使用migrate命令将其应用到数据库中。</p><p>安装命令如下所示。</p><pre><code class=\"language-plain\">pip install flask-migrate\n</code></pre><p>在项目中，我们需要实例化Flask_Migrate提供的Migrate类，进行初始化操作。对应的文件就是项目中的manager.py，文件中具体的代码是后面这样。</p><pre><code class=\"language-plain\">from flask_script import Manager\nfrom flask_migrate import Migrate, MigrateCommand\nfrom api.models.user import UserInfo\nfrom api.models.video import VideoInfo\nfrom api.models.content import ContentMain\nfrom api.models.gitinfo import GithubInfo\nfrom flask_cors import CORS\nfrom api import db, create_app\n\napp = create_app('dev')\n\nCORS(app, supports_credentials=True)\n\nmanager = Manager(app)\nMigrate(app, db)\nmanager.add_command('db', MigrateCommand)\n\nif __name__ == '__main__':\n    manager.run()\n</code></pre><p>我来为你解释一下前面这段代码。首先，我们从Flask-Script库中导入了一个Manager对象，用于管理命令行脚本。然后，从Flask-Migrate库中导入了Migrate和MigrateCommand对象，用于数据库迁移。</p><p>紧接着，我们导入了相关的模型类，包括UserInfo、VideoInfo、ContentMain等，这些模型类定义了数据库中的表结构和操作。</p><p>在这里，我们创建了一个Flask应用实例app，并使用Flask-Cors库来处理跨域资源共享问题。</p><p>代码的14-16行，我们创建了一个Manager对象manager，并将app和db对象传递给它。然后，使用Migrate对象来绑定app和db对象，以便进行数据库迁移。</p><p>最后，我们将MigrateCommand对象添加到manager中，以便可以通过命令行运行迁移命令。</p><p>我们主要分三步来完成数据库迁移。第一步我们先来创建迁移数据库，直接在我们的PyCharm中执行命令。</p><pre><code class=\"language-plain\">python manage.py db init\n</code></pre><p>这里的db是迁移命令的对象，它可以执行各种数据库操作，包括初始化数据库、迁移数据库等操作，名字可以自己命名，但是<strong>相关应用要保持命名一致。</strong></p><p>这个命令用来在我们的项目目录下创建migrations文件夹，把所有迁移文件都放在里面。后面是文件截图，供你参考。</p><p><img src=\"https://static001.geekbang.org/resource/image/e6/2c/e6c6642e5ebf1bfd1ae4f009a2d2312c.jpg?wh=2886x1066\" alt=\"\"></p><p>第二步，我们需要创建迁移脚本，对应脚本的文件位置在migrations / versions文件，自动创建迁移脚本需要用到两个函数。upgrade()函数用来把迁移中的改动应用到数据库中，downgrade()函数则用于删除改动。</p><p>为了让你进一步理解这两个函数的具体用法，我们结合案例来看看。</p><pre><code class=\"language-plain\">def upgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('user_login', sa.Column('last_login_stamp', sa.Integer(), nullable=True))\n    # ### end Alembic commands ###\n\ndef downgrade():\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('user_login', 'last_login_stamp')\n    # ### end Alembic commands ###\n</code></pre><p>结合代码可以看到，upgrade函数通过op.add_column()方法添加了一个名为last_login_stamp的列，该列的数据类型是整数。downgrade函数则是通过op.drop_column()方法，删除了名为last_login_stamp的列。</p><p>在数据库迁移过程中，我们可以通过upgrade函数来添加新的列、修改表结构等，而通过downgrade函数可以撤销这些更改。你需要注意，<strong>这些函数中的代码是根据数据库的版本控制自动生成的，并非是我们自己编写的</strong>，可以根据数据操作需求来调整和修改。</p><p>创建迁移脚本的执行命令如下所示。</p><pre><code class=\"language-plain\">python manage.py db migrate -m 'initial migration\n</code></pre><p>不过，运行命令之后，只是在migrations文件夹中新增了数据库迁移的版本文件，这时候还并没有生成对应的表。还需要我们完成第三步——更新数据库，代码如下所示。</p><pre><code class=\"language-plain\">python manage.py db upgrade\n</code></pre><p>更新之后，我们会发现数据表就能够实现创建了。到这里我们就完成了数据库的迁移，恭喜你一路坚持到这里。</p><h2>Gunicorn部署</h2><p>搞定了服务器相关环境配置，我们就可以部署项目了。在这里，我们选用最常用的Flask应用部署方案 Flask+Gunicorn+Nginx+Supervisor。</p><p>我们先来认识并安装Gunicorn。Gunicorn是一个基于Python的Web服务器，使用Pre-forking模型来处理请求。它的主要目的是在生产环境中作为主流Web服务器，并提供与Python Web应用程序的集成。</p><p>那我们在项目部署中为什么需要用到Gunicorn呢？</p><p>这是因为，Gunicorn可以处理HTTP请求并返回响应。它可以使用不同的配置来适应不同的应用场景，例如处理高并发的请求、提供静态文件服务等。</p><p>Gunicorn还可以作为预热服务器使用，它在启动时会加载一些应用程序代码，并预先创建工作进程。这样可以减少请求的等待时间，提高服务器的响应速度。这也是它非常突出的一大优势。</p><p>Gunicorn也可以作为反向代理服务器使用，将请求转发到其他服务器。它可以将请求转发到多个工作进程，从而实现负载均衡和缓存。</p><p>在认识了Gunicorn之后，我们这就来看看项目部署中如何使用它。首先我们需要安装Gunicorn，直接使用pip命令安装即可。</p><pre><code class=\"language-plain\">pip install gunicorn\n</code></pre><p>安装成功之后，我们要在项目目录下创建一个名为<code>gunicorn.conf.py</code>的配置文件，其中包含以下内容。</p><pre><code class=\"language-plain\">bind =\"%s:%s\" % (\"0.0.0.0\", 8000)\nworkers = 8\nworker_class = \"sync\"\n</code></pre><p>在上面的配置中有三个核心参数：bind指定了服务器监听的IP地址和端口号，workers指定了进程数，worker_class指定了工作进程的类型。至于整体的配置文件，你可以参考Gitee里的完整代码，到时你直接拉取使用就可以。</p><p>在配置完成之后，我们在终端中进入项目目录，并使用以下命令启动Gunicorn。</p><pre><code class=\"language-plain\">gunicorn -c gun_conf.py manager:app\n</code></pre><p>这里同样有三个参数。-c 用来指定gunicorn配置文件，manager则是Flask项目启动的文件名，而app&nbsp;代表脚本中创建的Flask对象名。</p><p>不过在项目部署中，仅有Gunicorn还是不够的，我们仍然需要使用Nginx作为反向代理服务器来实现更高的可用性、提升性能，我们为什么需要使用Nginx呢？主要有三点考虑。</p><p>第一，Nginx可以将请求转发到Gunicorn服务器，实现负载均衡和缓存。这将带来的好处是可以帮助提高系统的性能和可靠性。</p><p>第二，它可以解决跨域问题，在项目中，经常需要跨域访问资源。我们在Nginx里设置适当的响应头，即可允许跨域请求。这也是我们在处理跨域问题中比较经典的方法，也是面试中的高频考点。</p><p>第三，Nginx是一个高度可扩展和稳定的服务器，能提供高效的网络连接管理和安全防护。同时它也支持丰富的配置选项，可以根据实际需求进行灵活配置。</p><h2>Nginx安装</h2><p>接下来，我们就看看如何配置安装Nginx。我们依然在链接服务器之后，使用后面的命令更新软件包列表，并安装Nginx服务器。</p><pre><code class=\"language-plain\">sudo apt-get update  \nsudo apt-get install nginx\n</code></pre><p>然后，我们需要编辑配置文件/etc/nginx/sites-available/default，修改location /，具体的配置项如下所示。</p><pre><code class=\"language-plain\"># 注意下这里的监听端口，访问的时候会用到\nlisten 80 default_server;\nlisten [::]:80 default_server;\n\nlocation / {\n&nbsp; &nbsp; proxy_pass http://localhost:8000/;\n&nbsp; &nbsp; proxy_redirect off;\n&nbsp; &nbsp; proxy_set_header Host $http_post;\n&nbsp; &nbsp; proxy_set_header X-Real-IP $remote_addr;\n&nbsp; &nbsp; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n}\n\n</code></pre><p>在上述配置中，listen 80表示监听80端口，server_name example.com表示域名，可以根据实际情况进行修改。location / 表示将所有请求都转发到Gunicorn服务器上，Gunicorn的监听端口为8000。</p><p>配置完成之后，我们要通过后面的执行命令重新启动Nginx服务。</p><pre><code class=\"language-plain\">sudo service nginx reload\n</code></pre><p>到这里，Flask项目部署的准备工作告一段落，我们安装并配置了Nginx服务器，还让它与Gunicorn服务器配合使用。现在你就可以直接在外网IP地址80端口下，访问你的Flask项目了。</p><p>到了这一步，我们就完成了部署和启动。但是这个过程中需要我们通过手动命令操作，还不够灵活。我们还需要使用Supervisor，这是一个进程管理工具。</p><p>它的优势有以下三个方面。</p><p>首先，Supervisor可以负责启动、停止、重启和查看Flask应用的进程。这样，当项目出现问题或需要重启时，Supervisor可以自动处理这些问题，而无需手动干预。</p><p>其次，Supervisor可以捕获和处理Flask项目中的异常。如果项目发生崩溃或出现故障，Supervisor可以自动重新启动应用，以保证服务的可用性。</p><p>最后，Supervisor的配置非常灵活，可以根据需求进行定制。我们可以设置应用的工作目录、环境变量、用户权限等，以确保应用在最佳环境下运行。</p><p>接下来，我们就看看如何应用Supervisor实现进程管理。</p><h2>Supervisor配置</h2><p>首先要安装Supervisor。</p><pre><code class=\"language-plain\">sudo apt-get install supervisor\n</code></pre><p>安装完成后，在/etc/supervisor/conf.d/目录下创建我们控制进程的配置文件，并以.conf结尾，这样将会自动应用到主配置文件当中，具体的配置内容如下所示。</p><pre><code class=\"language-plain\">[program:myproject]\ncommand=gunicorn -c $(项目路径)/gun_conf.py manager:app\nuser Barry\nautostart true; 设置为随 supervisord 启动而启动\nautorestart=true; 设置为随 supervisord 重启而重启\nstartretires:5; supervisord尝试启动一个程序时尝试的次数。默认是3\nstartsecs 3; 自动重启时间间隔,以秒为单位\nstderr_logfile=/var/log/myproject.err.log ;错误日志文件\nstdout logfile=/var/log/myproject.out.log ;输出日志文件\n</code></pre><p>在上面的配置项中，[program:myproject] 是配置文件的名称，可以根据实际应用名称进行修改。command是启动应用程序的命令，这里使用了Gunicorn服务器。user是运行应用程序的用户，可以根据实际情况来修改。autostart和autorestart表示自动启动和自动重启应用程序。stdout_logfile和stderr_logfile是应用程序的输出日志文件路径。</p><p>保存并退出配置文件之后，我们需要重新加载Supervisor的配置，shell命令是后面这样。</p><pre><code class=\"language-plain\">sudo supervisorctl reload\n</code></pre><p>最后，我们就可以运行后面的命令，启动我们的项目了。</p><pre><code class=\"language-plain\">sudo supervisorctl start myapp\n</code></pre><p>有没有感觉到，在Flask项目里引入Supervisor并不复杂。之后，Supervisor将会监控应用程序的进程并自动重启应用程序，为我们应用程序的稳定运行保驾护航。</p><h2>总结</h2><p>这节课，我们完成了Flask后端接口的部署工作，其实前端部署也是一样的逻辑。估计你也体会到了，操作项比较多，需要你足够耐心和细心。现在，我再为你梳理下整个部署过程里的重难点。</p><p>服务器环境配置方面，要注意在虚拟环境里构建，目的是确保项目使用的包版本与开发环境中一致，并且不会与其他项目或全局环境中的包冲突。数据库创建环节的重点是熟练掌握Flask-Migrate，你可以课后再回味一下相关代码。</p><p>项目部署的核心是Gunicorn和Nginx组合应用，你可以参考后面的表格回顾一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/5e/c9/5ebd9afdf509a6341a3118c8b6721ac9.jpg?wh=3481x1135\" alt=\"\"></p><p>为了提高效率，告别手动操作，我们还需要用到Supervisor来管理进程，此外，Supervisor更核心的作用是及时帮我们捕获一些进程问题，保证系统的稳定性和安全性。</p><p>后端实战内容告一段落，下节课开始，我们即将开启直播模块的学习，敬请期待。</p><h2>思考题</h2><p>在课程中我们提到了跨域问题，你知道引发跨域问题的主要原因是什么？</p><p>欢迎你在留言区和我交流互动，如果这节课对你有启发，也推荐你分享给身边的朋友。</p>","comments":[{"had_liked":false,"id":393262,"user_name":"Rongfan Leo","can_delete":false,"product_type":"c1","uid":1738062,"ip_address":"安徽","ucode":"9E65C1AA80CE2C","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/4e/1cecdfba.jpg","comment_is_top":false,"comment_ctime":1723298628,"is_pvip":false,"replies":[{"id":143263,"content":"这是所有的版本，Vue 2.7（大部分企业应用中的稳定版本）、Python 3.8、Flask 1.1.2、Node 10.13、NPM 6.4.1、Element 2.8.2、Echarts 4.9.0","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1727424658,"ip_address":"北京","comment_id":393262,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"哥哥，你flask 版本是啥，有requirements.txt吗？\n","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":651788,"discussion_content":"这是所有的版本，Vue 2.7（大部分企业应用中的稳定版本）、Python 3.8、Flask 1.1.2、Node 10.13、NPM 6.4.1、Element 2.8.2、Echarts 4.9.0","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1727424658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386250,"user_name":"Geek_9d0de4","can_delete":false,"product_type":"c1","uid":3031731,"ip_address":"乌克兰","ucode":"6692B89D125E9B","user_header":"","comment_is_top":false,"comment_ctime":1704383727,"is_pvip":false,"replies":[{"id":140883,"content":"可以 完全可以的，把依赖install之后 直接启动命令即可！\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1704972530,"ip_address":"北京","comment_id":386250,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"gitee上给的前后端代码能跑起来吗？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635615,"discussion_content":"可以 完全可以的，把依赖install之后 直接启动命令即可！\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704972530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1151675,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/bb/f6e3cdba.jpg","nickname":"过河卒","note":"","ucode":"B0E49555A3B161","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640718,"discussion_content":"老师你好，这里说的“依赖install”具体指哪些？可以给个操作命令吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1711769921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386249,"user_name":"Geek_9d0de4","can_delete":false,"product_type":"c1","uid":3031731,"ip_address":"乌克兰","ucode":"6692B89D125E9B","user_header":"","comment_is_top":false,"comment_ctime":1704383683,"is_pvip":false,"replies":[{"id":140882,"content":"在git上已经上传了\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1704972505,"ip_address":"北京","comment_id":386249,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"使用的requirements.txt文件可以上传下吗？好多依赖错误flask_uploads ImportError: cannot import name &#39;secure_filename&#39; from &#39;werkzeug\n\nflask_sqlalchemy cannot import name &#39;app_ctx&#39; from &#39;flask.globals&#39;","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635614,"discussion_content":"在git上已经上传了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704972505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2663531,"avatar":"https://static001.geekbang.org/account/avatar/00/28/a4/6b/c87bbaf7.jpg","nickname":"赵小勇","note":"","ucode":"372A5CAD8EAC29","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637515,"discussion_content":"老师，gitee上面好像还是没有看到requirements.txt文件，能麻烦上传下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708585152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385231,"user_name":"Geek_in7j5o","can_delete":false,"product_type":"c1","uid":1337670,"ip_address":"河南","ucode":"1F20D50F20B0C1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/XxMiatkEbd8CrMgKk3NHzEhA2rQvNq2TgnOey35DOWLPpRh39MugzzE4M324pEsmg2JbGiazhVBt9rNZZvapgnicg/132","comment_is_top":false,"comment_ctime":1702298677,"is_pvip":false,"replies":[{"id":140505,"content":"这个错误信息是来自Faiss库，错误原因是在尝试读取一个索引时报错。你可以尝试通过下面的方法进行调整优化一下：\n首先、确保&#47;opt&#47;cili&#47;data&#47;faiss-movie.index这个文件存在并且可读。\n其次，确保你的程序有足够的权限来读取这个文件。如果这个索引文件是外部创建的，可能需要检查创建索引时的版本和你的Faiss库版本是否兼容。\n最后，尝试重新创建索引或使用不同的索引文件路径。如果可能，查看是否有任何与设备相关的操作或配置需要调整。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1702958497,"ip_address":"北京","comment_id":385231,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师，RuntimeError: Error in faiss::Index* faiss::read_index(faiss::IOReader*, int) at &#47;opt&#47;conda&#47;conda-bld&#47;faiss-pkg_1623024438023&#47;work&#47;faiss&#47;impl&#47;index_read.cpp:414: Error: &#39;ret == (1)&#39; failed: read error in &#47;opt&#47;cili&#47;data&#47;faiss-movie.index: 0 != 1 (Inappropriate ioctl for device)","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":634057,"discussion_content":"这个错误信息是来自Faiss库，错误原因是在尝试读取一个索引时报错。你可以尝试通过下面的方法进行调整优化一下：\n首先、确保/opt/cili/data/faiss-movie.index这个文件存在并且可读。\n其次，确保你的程序有足够的权限来读取这个文件。如果这个索引文件是外部创建的，可能需要检查创建索引时的版本和你的Faiss库版本是否兼容。\n最后，尝试重新创建索引或使用不同的索引文件路径。如果可能，查看是否有任何与设备相关的操作或配置需要调整。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702958497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379131,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1060230,"ip_address":"美国","ucode":"357C3D2F33B325","user_header":"https://static001.geekbang.org/account/avatar/00/10/2d/86/07a10be2.jpg","comment_is_top":false,"comment_ctime":1691395029,"is_pvip":false,"replies":[{"id":138196,"content":"hello，同学，requirements.txt文件通常是由项目本身生成的。在Python项目中，使用pip工具来管理项目的依赖包。当你安装一个包时，pip会记录安装的包及其版本信息。这些信息可以用来创建一个requirements.txt文件。\n\n创建requirements.txt文件的目的是确保在不同开发环境和平台上运行项目时，所需的依赖包能够被正确地安装和配置。这样可以避免因不同环境导致的差异和错误。\n\n在虚拟环境中安装项目依赖包时，可以使用以下命令从requirements.txt文件中安装指定的依赖包，这个是命令：\npip install -r requirements.txt\n\n这条命令告诉pip工具从requirements.txt文件中读取依赖项列表，并按照指定的版本要求安装这些依赖包。\n\n确保在虚拟环境中执行该命令，以便在隔离的环境中安装项目所需的依赖包，而不影响全局环境或其他项目。\n\n你根据课程的操作命令就可以生成文件了。","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1691647516,"ip_address":"北京","comment_id":379131,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师，项目代码里没发现requirements.txt","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625403,"discussion_content":"hello，同学，requirements.txt文件通常是由项目本身生成的。在Python项目中，使用pip工具来管理项目的依赖包。当你安装一个包时，pip会记录安装的包及其版本信息。这些信息可以用来创建一个requirements.txt文件。\n\n创建requirements.txt文件的目的是确保在不同开发环境和平台上运行项目时，所需的依赖包能够被正确地安装和配置。这样可以避免因不同环境导致的差异和错误。\n\n在虚拟环境中安装项目依赖包时，可以使用以下命令从requirements.txt文件中安装指定的依赖包，这个是命令：\npip install -r requirements.txt\n\n这条命令告诉pip工具从requirements.txt文件中读取依赖项列表，并按照指定的版本要求安装这些依赖包。\n\n确保在虚拟环境中执行该命令，以便在隔离的环境中安装项目所需的依赖包，而不影响全局环境或其他项目。\n\n你根据课程的操作命令就可以生成文件了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691647516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377690,"user_name":"🌀Pick Monster 🌀","can_delete":false,"product_type":"c1","uid":1141196,"ip_address":"陕西","ucode":"EE67F41B360460","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/cc/747c7629.jpg","comment_is_top":false,"comment_ctime":1689043580,"is_pvip":true,"replies":[{"id":137664,"content":"你好同学，fcntl是一个用于控制文件的函数库，它提供了一系列用于文件控制的函数，fcntl模块提供了接口，可以使用这些函数来控制文件。\nWindows下使用gunicorn出现&quot;ModuleNotFoundError: No module named &#39;fcntl&#39;&quot;错误，你可以使用pip安装fcntl模块，可以在命令行中使用以下命令：pip install fcntl\n如果你使用的是Linux子系统，可以尝试在Windows子系统中运行gunicorn。在Windows子系统中，你可以使用以下命令来安装fcntl模块：\nsudo apt-get install python3-dev  \npip install fcntl\n无论你选择哪种方法，确保你的Python环境正确配置，并且已经安装了必要的依赖项。如果还不能解决可以追评","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1689172591,"ip_address":"北京","comment_id":377690,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"老师文章中的gunicorn在windows下不可用，会报ModuleNotFoundError: No module named &#39;fcntl&#39;错误","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623218,"discussion_content":"你好同学，fcntl是一个用于控制文件的函数库，它提供了一系列用于文件控制的函数，fcntl模块提供了接口，可以使用这些函数来控制文件。\nWindows下使用gunicorn出现&#34;ModuleNotFoundError: No module named &#39;fcntl&#39;&#34;错误，你可以使用pip安装fcntl模块，可以在命令行中使用以下命令：pip install fcntl\n如果你使用的是Linux子系统，可以尝试在Windows子系统中运行gunicorn。在Windows子系统中，你可以使用以下命令来安装fcntl模块：\nsudo apt-get install python3-dev  \npip install fcntl\n无论你选择哪种方法，确保你的Python环境正确配置，并且已经安装了必要的依赖项。如果还不能解决可以追评","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1689172591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1151675,"avatar":"https://static001.geekbang.org/account/avatar/00/11/92/bb/f6e3cdba.jpg","nickname":"过河卒","note":"","ucode":"B0E49555A3B161","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640763,"discussion_content":"关于老师最后提到的“安装了必要的依赖项”，依赖项的安装有哪些操作命令？有什么方式可以确认依赖项安装是完整的呢？并且相关的版本也是兼容的，谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1711809989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377391,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1688435087,"is_pvip":false,"replies":[{"id":137554,"content":"1、收集日志、解析日志、分析日志、存储和备份、清理日志差不多分为这几步来完成，重点我们通过日志来快速定位问题，还有就是能够记录一些平台用户的操作。\n2、网站运营是指对一个网站进行维护、优化、推广和营销的一系列活动，目的是为了吸引更多的用户和客户，提高网站的流量和收益。网站运营和运维是密切相关的。运维是指对一个网站进行技术上的维护和管理，包括服务器、网络、安全等方面的管理和维护工作。而运营则更侧重于对网站的内容、用户、营销等方面进行管理和推广。\n\n\n\n","user_name":"作者回复","user_name_real":"编辑","uid":3050845,"ctime":1688550255,"ip_address":"北京","comment_id":377391,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100546501,"comment_content":"Q1：网站后端日志一般是怎么处理的？\nQ2：网站“运营”具体做什么？推广网站吗？和运维是什么关系？","like_count":0,"discussions":[{"author":{"id":3050845,"avatar":"https://static001.geekbang.org/account/avatar/00/2e/8d/5d/9a86007c.jpg","nickname":"Barry","note":"","ucode":"82175C78B4CAED","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622695,"discussion_content":"1、收集日志、解析日志、分析日志、存储和备份、清理日志差不多分为这几步来完成，重点我们通过日志来快速定位问题，还有就是能够记录一些平台用户的操作。\n2、网站运营是指对一个网站进行维护、优化、推广和营销的一系列活动，目的是为了吸引更多的用户和客户，提高网站的流量和收益。网站运营和运维是密切相关的。运维是指对一个网站进行技术上的维护和管理，包括服务器、网络、安全等方面的管理和维护工作。而运营则更侧重于对网站的内容、用户、营销等方面进行管理和推广。\n\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688550255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1809855,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/bf/8785c879.jpg","nickname":"苏 远 兴","note":"","ucode":"7FF387AF01E05C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":626870,"discussion_content":"是视频教程还是就图文？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1693458886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}