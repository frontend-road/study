{"id":95897,"title":"05 | 深入浅出字符串","content":"<p>你好，我是景霄。</p><p>Python的程序中充满了字符串（string），在平常阅读代码时也屡见不鲜。字符串同样是Python中很常见的一种数据类型，比如日志的打印、程序中函数的注释、数据库的访问、变量的基本操作等等，都用到了字符串。</p><p>当然，我相信你本身对字符串已经有所了解。今天这节课，我主要带你回顾一下字符串的常用操作，并对其中的一些小tricks详细地加以解释。</p><h2>字符串基础</h2><p>什么是字符串呢？字符串是由独立字符组成的一个序列，通常包含在单引号（<code>''</code>）双引号（<code>\"\"</code>）或者三引号之中（<code>''' '''</code>或<code>\"\"\" \"\"\"</code>，两者一样），比如下面几种写法。</p><pre><code>name = 'jason'\ncity = 'beijing'\ntext = &quot;welcome to jike shijian&quot;\n</code></pre><p>这里定义了name、city和text三个变量，都是字符串类型。我们知道，Python中单引号、双引号和三引号的字符串是一模一样的，没有区别，比如下面这个例子中的s1、s2、s3完全一样。</p><pre><code>s1 = 'hello'\ns2 = &quot;hello&quot;\ns3 = &quot;&quot;&quot;hello&quot;&quot;&quot;\ns1 == s2 == s3\nTrue\n</code></pre><p>Python同时支持这三种表达方式，很重要的一个原因就是，这样方便你在字符串中，内嵌带引号的字符串。比如：</p><pre><code>&quot;I'm a student&quot;\n</code></pre><p>Python的三引号字符串，则主要应用于多行字符串的情境，比如函数的注释等等。</p><pre><code>def calculate_similarity(item1, item2):\n    &quot;&quot;&quot;\n    Calculate similarity between two items\n    Args:\n        item1: 1st item\n        item2: 2nd item\n    Returns:\n      similarity score between item1 and item2\n    &quot;&quot;&quot;\n</code></pre><p>同时，Python也支持转义字符。所谓的转义字符，就是用反斜杠开头的字符串，来表示一些特定意义的字符。我把常见的的转义字符，总结成了下面这张表格。</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/b7/52/b7a296ab8d26664e03a076fa50d5b152.png?wh=1108*498\" alt=\"\"></p><p>为了方便你理解，我举一个例子来说明。</p><pre><code>s = 'a\\nb\\tc'\nprint(s)\na\nb\tc\n</code></pre><p>这段代码中的<code>'\\n'</code>，表示一个字符——换行符；<code>'\\t'</code>也表示一个字符——横向制表符。所以，最后打印出来的输出，就是字符a，换行，字符b，然后制表符，最后打印字符c。不过要注意，虽然最后打印的输出横跨了两行，但是整个字符串s仍然只有5个元素。</p><pre><code>len(s)\n5\n</code></pre><p>在转义字符的应用中，最常见的就是换行符<code>'\\n'</code>的使用。比如文件读取，如果我们一行行地读取，那么每一行字符串的末尾，都会包含换行符<code>'\\n'</code>。而最后做数据处理时，我们往往会丢掉每一行的换行符。</p><h2>字符串的常用操作</h2><p>讲完了字符串的基本原理，下面我们一起来看看字符串的常用操作。你可以把字符串想象成一个由单个字符组成的数组，所以，Python的字符串同样支持索引，切片和遍历等等操作。</p><pre><code>name = 'jason'\nname[0]\n'j'\nname[1:3]\n'as'\n</code></pre><p>和其他数据结构，如列表、元组一样，字符串的索引同样从0开始，index=0表示第一个元素（字符），[index:index+2]则表示第index个元素到index+1个元素组成的子字符串。</p><p>遍历字符串同样很简单，相当于遍历字符串中的每个字符。</p><pre><code>for char in name:\n    print(char)   \nj\na\ns\no\nn\n</code></pre><p>特别要注意，Python的字符串是不可变的（immutable）。因此，用下面的操作，来改变一个字符串内部的字符是错误的，不允许的。</p><pre><code>s = 'hello'\ns[0] = 'H'\nTraceback (most recent call last):\n  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;\nTypeError: 'str' object does not support item assignment\n</code></pre><p>Python中字符串的改变，通常只能通过创建新的字符串来完成。比如上述例子中，想把<code>'hello'</code>的第一个字符<code>'h'</code>，改为大写的<code>'H'</code>，我们可以采用下面的做法：</p><pre><code>s = 'H' + s[1:]\ns = s.replace('h', 'H')\n</code></pre><ul>\n<li>\n<p>第一种方法，是直接用大写的<code>'H'</code>，通过加号<code>'+'</code>操作符，与原字符串切片操作的子字符串拼接而成新的字符串。</p>\n</li>\n<li>\n<p>第二种方法，是直接扫描原字符串，把小写的<code>'h'</code>替换成大写的<code>'H'</code>，得到新的字符串。</p>\n</li>\n</ul><p>你可能了解到，在其他语言中，如Java，有可变的字符串类型，比如StringBuilder，每次添加、改变或删除字符（串），无需创建新的字符串，时间复杂度仅为O(1)。这样就大大提高了程序的运行效率。</p><p>但可惜的是，Python中并没有相关的数据类型，我们还是得老老实实创建新的字符串。因此，每次想要改变字符串，往往需要O(n)的时间复杂度，其中，n为新字符串的长度。</p><p>你可能注意到了，上述例子的说明中，我用的是“往往”、“通常”这样的字眼，并没有说“一定”。这是为什么呢？显然，随着版本的更新，Python也越来越聪明，性能优化得越来越好了。</p><p>这里，我着重讲解一下，使用加法操作符<code>'+='</code>的字符串拼接方法。因为它是一个例外，打破了字符串不可变的特性。</p><p>操作方法如下所示：</p><pre><code>str1 += str2  # 表示str1 = str1 + str2\n</code></pre><p>我们来看下面这个例子：</p><pre><code>s = ''\nfor n in range(0, 100000):\n    s += str(n)\n</code></pre><p>你觉得这个例子的时间复杂度是多少呢？</p><p>每次循环，似乎都得创建一个新的字符串；而每次创建一个新的字符串，都需要O(n)的时间复杂度。因此，总的时间复杂度就为O(1) + O(2) + … + O(n) = O(n^2)。这样到底对不对呢？</p><p>乍一看，这样分析确实很有道理，但是必须说明，这个结论只适用于老版本的Python了。自从Python2.5开始，每次处理字符串的拼接操作时（str1 += str2），Python首先会检测str1还有没有其他的引用。如果没有的话，就会尝试原地扩充字符串buffer的大小，而不是重新分配一块内存来创建新的字符串并拷贝。这样的话，上述例子中的时间复杂度就仅为O(n)了。</p><p>因此，以后你在写程序遇到字符串拼接时，如果使用’+='更方便，就放心地去用吧，不用过分担心效率问题了。</p><p>另外，对于字符串拼接问题，除了使用加法操作符，我们还可以使用字符串内置的join函数。string.join(iterable)，表示把每个元素都按照指定的格式连接起来。</p><pre><code>l = []\nfor n in range(0, 100000):\n    l.append(str(n))\nl = ' '.join(l) \n</code></pre><p>由于列表的append操作是O(1)复杂度，字符串同理。因此，这个含有for循环例子的时间复杂度为n*O(1)=O(n)。</p><p>接下来，我们看一下字符串的分割函数split()。string.split(separator)，表示把字符串按照separator分割成子字符串，并返回一个分割后子字符串组合的列表。它常常应用于对数据的解析处理，比如我们读取了某个文件的路径，想要调用数据库的API，去读取对应的数据，我们通常会写成下面这样：</p><pre><code>def query_data(namespace, table):\n    &quot;&quot;&quot;\n    given namespace and table, query database to get corresponding\n    data         \n    &quot;&quot;&quot;\n\npath = 'hive://ads/training_table'\nnamespace = path.split('//')[1].split('/')[0] # 返回'ads'\ntable = path.split('//')[1].split('/')[1] # 返回 'training_table'\ndata = query_data(namespace, table) \n</code></pre><p>此外，常见的函数还有：</p><ul>\n<li>\n<p>string.strip(str)，表示去掉首尾的str字符串；</p>\n</li>\n<li>\n<p>string.lstrip(str)，表示只去掉开头的str字符串；</p>\n</li>\n<li>\n<p>string.rstrip(str)，表示只去掉尾部的str字符串。</p>\n</li>\n</ul><p>这些在数据的解析处理中同样很常见。比如很多时候，从文件读进来的字符串中，开头和结尾都含有空字符，我们需要去掉它们，就可以用strip()函数：</p><pre><code>s = ' my name is jason '\ns.strip()\n'my name is jason'\n</code></pre><p>当然，Python中字符串还有很多常用操作，比如，string.find(sub, start, end)，表示从start到end查找字符串中子字符串sub的位置等等。这里，我只强调了最常用并且容易出错的几个函数，其他内容你可以自行查找相应的文档、范例加以了解，我就不一一赘述了。</p><h2>字符串的格式化</h2><p>最后，我们一起来看看字符串的格式化。什么是字符串的格式化呢？</p><p>通常，我们使用一个字符串作为模板，模板中会有格式符。这些格式符为后续真实值预留位置，以呈现出真实值应该呈现的格式。字符串的格式化，通常会用在程序的输出、logging等场景。</p><p>举一个常见的例子。比如我们有一个任务，给定一个用户的userid，要去数据库中查询该用户的一些信息，并返回。而如果数据库中没有此人的信息，我们通常会记录下来，这样有利于往后的日志分析，或者是线上bug的调试等等。</p><p>我们通常会用下面的方法来表示：</p><pre><code>print('no data available for person with id: {}, name: {}'.format(id, name))\n</code></pre><p>其中的string.format()，就是所谓的格式化函数；而大括号{}就是所谓的格式符，用来为后面的真实值——变量name预留位置。如果<code>id = '123'</code>、<code>name='jason'</code>，那么输出便是：</p><pre><code>'no data available for person with id: 123, name: jason'\n</code></pre><p>这样看来，是不是非常简单呢？</p><p>不过要注意，string.format()是最新的字符串格式函数与规范。自然，我们还有其他的表示方法，比如在Python之前版本中，字符串格式化通常用%来表示，那么上述的例子，就可以写成下面这样：</p><pre><code>print('no data available for person with id: %s, name: %s' % (id, name))\n</code></pre><p>其中%s表示字符串型，%d表示整型等等，这些属于常识，你应该都了解。</p><p>当然，现在你写程序时，我还是推荐使用format函数，毕竟这是最新规范，也是官方文档推荐的规范。</p><p>也许有人会问，为什么非要使用格式化函数，上述例子用字符串的拼接不也能完成吗？没错，在很多情况下，字符串拼接确实能满足格式化函数的需求。但是使用格式化函数，更加清晰、易读，并且更加规范，不易出错。</p><h2>总结</h2><p>这节课，我们主要学习了Python字符串的一些基本知识和常用操作，并且结合具体的例子与场景加以说明，特别需要注意下面几点。</p><ul>\n<li>\n<p>Python中字符串使用单引号、双引号或三引号表示，三者意义相同，并没有什么区别。其中，三引号的字符串通常用在多行字符串的场景。</p>\n</li>\n<li>\n<p>Python中字符串是不可变的（前面所讲的新版本Python中拼接操作’+='是个例外）。因此，随意改变字符串中字符的值，是不被允许的。</p>\n</li>\n<li>\n<p>Python新版本（2.5+）中，字符串的拼接变得比以前高效了许多，你可以放心使用。</p>\n</li>\n<li>\n<p>Python中字符串的格式化（string.format）常常用在输出、日志的记录等场景。</p>\n</li>\n</ul><h2>思考题</h2><p>最后，给你留一道思考题。在新版本的Python（2.5+）中，下面的两个字符串拼接操作，你觉得哪个更优呢？欢迎留言和我分享你的观点，也欢迎你把这篇文章分享给你的同事、朋友。</p><pre><code>s = ''\nfor n in range(0, 100000):\n    s += str(n)\n</code></pre><pre><code>l = []\nfor n in range(0, 100000):\n    l.append(str(n))\n    \ns = ' '.join(l)\n</code></pre><p></p>","comments":[{"had_liked":false,"id":96126,"user_name":"Jingxiao","can_delete":false,"product_type":"c1","uid":1259521,"ip_address":"","ucode":"EB966BB87132F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","comment_is_top":true,"comment_ctime":1558338541,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"9.2233725280393994e+18","product_id":100026901,"comment_content":"关于思考题，如果字符串拼接的次数较少，比如range(100)，那么方法一更优，因为时间复杂度精确的来说第一种是O(n)，第二种是O(2n)，如果拼接的次数较多，比如range(1000000)，方法二稍快一些，虽然方法二会遍历两次，但是join的速度其实很快，列表append和join的开销要比字符串+=小一些。","like_count":115,"discussions":[{"author":{"id":1199968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4f/60/049a20e9.jpg","nickname":"吴宇晨","note":"","ucode":"F8F45B7067DF6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":71391,"discussion_content":"大佬解释下为什么join速度很快","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1575418743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1051873,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0c/e1/f663213e.jpg","nickname":"拾掇拾掇","note":"","ucode":"D775F374C2A1D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1199968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4f/60/049a20e9.jpg","nickname":"吴宇晨","note":"","ucode":"F8F45B7067DF6D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167253,"discussion_content":"应该类似于append操作，O(1)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581471710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":71391,"ip_address":""},"score":167253,"extra":""}]},{"author":{"id":1146983,"avatar":"https://static001.geekbang.org/account/avatar/00/11/80/67/4e381da5.jpg","nickname":"Derek","note":"","ucode":"A4D5DED1E00F60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213565,"discussion_content":"涨知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585105924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1799961,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJF2gTFBleTUPacX8LuR7ibYnev4tW49rlZ70nfS8lTFojcpsz3Q3MG5GYpEpvpeYYxz8HA0iavibwCA/132","nickname":"乐在其中","note":"","ucode":"A5906A544B2B6C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":116660,"discussion_content":"老师好，能推荐一些Python的练习题集吗？俗话说熟能生巧，想找个习题集，每天练一练","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578064669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96066,"user_name":"不瘦到140不改名","can_delete":false,"product_type":"c1","uid":1528298,"ip_address":"","ucode":"31DA063A17FC27","user_header":"https://static001.geekbang.org/account/avatar/00/17/51/ea/2ce84d5a.jpg","comment_is_top":false,"comment_ctime":1558319718,"is_pvip":false,"replies":[{"id":"34378","content":"👍","user_name":"作者回复","comment_id":96066,"uid":"1259521","ip_address":"","utype":1,"ctime":1558336164,"user_name_real":"Jingxiao"}],"discussion_count":7,"race_medal":0,"score":"989400797798","product_id":100026901,"comment_content":"思考题：个人提一个更加pythonic，更加高效的办法<br>s = &quot; &quot;.join(map(str, range(0, 10000)))","like_count":231,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450705,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558336164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1056982,"avatar":"https://static001.geekbang.org/account/avatar/00/10/20/d6/b9513db0.jpg","nickname":"kingcall","note":"","ucode":"508884DC684B5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378252,"discussion_content":"map(lambda x: str(x),range(1,10)) 这样就看的懂了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1623126471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344070,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c4/86/0658e993.jpg","nickname":"涼白开","note":"","ucode":"D25A9C84CABB8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346325,"discussion_content":"我把map改成列表解析式行不行","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611908472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1986553,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/4f/f9/e221e254.jpg","nickname":"Aiden Y","note":"","ucode":"159371CC3AF3FE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2344070,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c4/86/0658e993.jpg","nickname":"涼白开","note":"","ucode":"D25A9C84CABB8D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383784,"discussion_content":"在effective python中推荐的就是能用列表推导式就不用map，列表推导式性能要比map函数好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626237472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":346325,"ip_address":""},"score":383784,"extra":""}]},{"author":{"id":1140565,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkfZpMx6JDjRiaa51DWRtncfQOy8Lblia1XkeIsXiccTG1nIKyaSic01H0IXgHM3KPSYJ1x51avblJAg/132","nickname":"Geek_8a0a23","note":"","ucode":"605C1750C59918","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289397,"discussion_content":"这个能解释下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594088057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2087309,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/d9/8d/78dd472a.jpg","nickname":"知止。","note":"","ucode":"5D56DD062B1A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1140565,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkfZpMx6JDjRiaa51DWRtncfQOy8Lblia1XkeIsXiccTG1nIKyaSic01H0IXgHM3KPSYJ1x51avblJAg/132","nickname":"Geek_8a0a23","note":"","ucode":"605C1750C59918","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298715,"discussion_content":"map( )函数，第一个参数的值就是第二个参数迭代的值，第一个参数每迭代一次，就把相应的值传给第一个。例子中的map（str, range(0,10000))，第一个值就是str=0，第二个值为1，第三个值为2,.....最后一个值为9999，因为range每次迭代的值就是0, 1, 2,....9998,9999","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1597386729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289397,"ip_address":""},"score":298715,"extra":""}]},{"author":{"id":1146983,"avatar":"https://static001.geekbang.org/account/avatar/00/11/80/67/4e381da5.jpg","nickname":"Derek","note":"","ucode":"A4D5DED1E00F60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213564,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585105906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96186,"user_name":"刘朋","can_delete":false,"product_type":"c1","uid":1075141,"ip_address":"","ucode":"7B7B8E4776C22E","user_header":"https://static001.geekbang.org/account/avatar/00/10/67/c5/63b09189.jpg","comment_is_top":false,"comment_ctime":1558353266,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"912091420018","product_id":100026901,"comment_content":"# 测试 1000 条数据，方式一<br>import time<br>start_time = time.perf_counter()<br>s = &#39;&#39;<br>for n in range(0, 1000):<br>    s += str(n)<br>end_time = time.perf_counter()<br>print(&#39;Time elapse: {}&#39;.format(end_time - start_time))<br>返回结果: Time elapse: 0.0004374515265226364<br><br># 测试 1000 条数据，方式二<br>import time<br>start_time = time.perf_counter()<br>s = []<br>for n in range(0, 1000):<br>    s.append(str(n))<br>&#39;&#39;.join(s)<br>end_time = time.perf_counter()<br>print(&#39;Time elapse: {}&#39;.format(end_time - start_time))<br>返回结果: Time elapse: 0.0004917513579130173<br><br># 测试 1000 条数据，方式三<br>import time<br>start_time = time.perf_counter()<br>s = &#39;&#39;.join(map(str, range(0, 1000)))<br>end_time = time.perf_counter()<br>print(&#39;Time elapse: {}&#39;.format(end_time - start_time))<br>返回结果：Time elapse: 0.00021015387028455734<br><br>分别测试一百万和一千万条数据，结果如下：<br>100万:<br>方式一：Time elapse: 0.3384760869666934<br>方式二：Time elapse: 0.34538754168897867<br>方式三：Time elapse: 0.2445415174588561<br><br>1000万：<br>方式一：Time elapse: 4.24716751743108<br>方式二：Time elapse: 3.1754934675991535<br>方式三：Time elapse: 2.2939002392813563<br><br>综上，方式三性能最优，其次是在超过1000万条数据以上时，方式二优于方式一，相反，方式一优于方式二。","like_count":213,"discussions":[{"author":{"id":2344070,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c4/86/0658e993.jpg","nickname":"涼白开","note":"","ucode":"D25A9C84CABB8D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":346326,"discussion_content":"有一个timeit模块专门用来测试运行时间的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611908521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1922661,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/56/65/fa4437d7.jpg","nickname":"Wonderfulpeng","note":"","ucode":"1BA9AB30B52159","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212429,"discussion_content":"我发现在不同机器上测试有不同的结果，甚至在我自己台式机器上第1种方法花时非常长！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584971063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1305783,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ec/b7/e214c620.jpg","nickname":"王刚","note":"","ucode":"3C0D7D55CE61DF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1922661,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/56/65/fa4437d7.jpg","nickname":"Wonderfulpeng","note":"","ucode":"1BA9AB30B52159","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291716,"discussion_content":"我测试一直是 第二种优于第一种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594914542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212429,"ip_address":""},"score":291716,"extra":""},{"author":{"id":1710643,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/vwv0qiaibQzcTP6yIDJXOJLdh64CnBSaOceFFuWArVHQcwicIsebwYbKJ69OSJrxeXJyawtNIINcjo3V3hgg5BW1A/132","nickname":"MuBo","note":"","ucode":"46402B9B7D7B1E","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1922661,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/56/65/fa4437d7.jpg","nickname":"Wonderfulpeng","note":"","ucode":"1BA9AB30B52159","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326993,"discussion_content":"我跑一千万数据，第一种方法几分钟都出不来","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605711621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212429,"ip_address":""},"score":326993,"extra":""}]}]},{"had_liked":false,"id":95991,"user_name":"LJK","can_delete":false,"product_type":"c1","uid":1199213,"ip_address":"","ucode":"12B2441099FF1D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/6d/c20f2d5a.jpg","comment_is_top":false,"comment_ctime":1558292502,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"237781493782","product_id":100026901,"comment_content":"最新的f&quot;&quot;用法了解一下？","like_count":56,"discussions":[{"author":{"id":1078506,"avatar":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","nickname":"kevinsu","note":"","ucode":"BAD46B815D6A5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":99,"discussion_content":"挺好用的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561098228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1562980,"avatar":"","nickname":"周剑辉~","note":"","ucode":"93E2EB4C32C560","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285528,"discussion_content":"超级好用，从此%和format说拜拜了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592872110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1698320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ea/10/e28c4fd5.jpg","nickname":"偏执症患者 叶开","note":"","ucode":"EBC0B29E0C4FFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74104,"discussion_content":"能讲讲嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575630897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1044785,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f1/31/5001390b.jpg","nickname":"Lonely绿豆蛙","note":"","ucode":"0862179B614974","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1698320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ea/10/e28c4fd5.jpg","nickname":"偏执症患者 叶开","note":"","ucode":"EBC0B29E0C4FFE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":150029,"discussion_content":"f-strings是python3.6的新特性，一种新的字符串格式化方法，可以用{}引用程序中的变量或表达式来为字符串赋值。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579786699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74104,"ip_address":""},"score":150029,"extra":""},{"author":{"id":2388846,"avatar":"https://static001.geekbang.org/account/avatar/00/24/73/6e/5ba988a6.jpg","nickname":"泡泡跑吧","note":"","ucode":"FFFBB1E2B7C73A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1698320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ea/10/e28c4fd5.jpg","nickname":"偏执症患者 叶开","note":"","ucode":"EBC0B29E0C4FFE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337471,"discussion_content":"print(f&#34;hello{变量1} world｛变量2｝&#34;)类似Linux的变量写法","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1608933627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":74104,"ip_address":""},"score":337471,"extra":""}]}]},{"had_liked":false,"id":96029,"user_name":"Geek_morty137","can_delete":false,"product_type":"c1","uid":1535663,"ip_address":"","ucode":"AEA766652BAB22","user_header":"https://static001.geekbang.org/account/avatar/00/17/6e/af/21cb4426.jpg","comment_is_top":false,"comment_ctime":1558314143,"is_pvip":false,"replies":[{"id":"34380","content":"👍","user_name":"作者回复","comment_id":96029,"uid":"1259521","ip_address":"","utype":1,"ctime":1558336241,"user_name_real":"Jingxiao"}],"discussion_count":2,"race_medal":0,"score":"130407333023","product_id":100026901,"comment_content":"%format形式在东西多了以后比较费事，结构冗长，会导致错误，比如不能正确显示元组或字典。幸运的是，未来有更光明的日子。<br>str.format格式相对好一些，但参数多了或者处理更长字符串时还是冗长。<br>f-string这种方式可以更加简化表达过程。还支持大小写（f.或者F.） ","like_count":31,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450684,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558336241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2642341,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epd5nINR78huW7KQbGS6C9iaFZT5CkibhDJib9IXpBicplI6p5BNrBwInMPkCL7JqABeK1t0TMuMFziahA/132","nickname":"Geek_04affd","note":"","ucode":"0D86B0B2587000","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571918,"discussion_content":"effective python中也是讲的更推荐使用fstring","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652491769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96386,"user_name":"ssikiki","can_delete":false,"product_type":"c1","uid":1157472,"ip_address":"","ucode":"3C092E1C0C8753","user_header":"https://static001.geekbang.org/account/avatar/00/11/a9/60/c4700e74.jpg","comment_is_top":false,"comment_ctime":1558407225,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"104637622329","product_id":100026901,"comment_content":"使用加法操作符&#39;+=&#39;的字符串拼接方法。因为它是一个例外 ...  可是<br>x = &#39;a&#39;<br>id(x)  # 4345659208<br>x += &#39;b&#39;<br>id(x)  # 4376614424<br>做完+=操作后， x的内存地址变了， 说明新生成了字符串，请问老师这为什么说是例外？","like_count":25,"discussions":[{"author":{"id":1076254,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6c/1e/00470b6d.jpg","nickname":"万岩","note":"","ucode":"3E2897FF78C7AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327226,"discussion_content":"感觉似乎是&#39;a&#39;这个字符串太简单导致别处有引用, 于是只能创建一个新的了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605771701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1620171,"avatar":"","nickname":"Geek_ca9c59","note":"","ucode":"AF31496816974D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212705,"discussion_content":"我也有疑问，流畅的python 中说过，+= 是就地操作符，只有在对象可变的情况下才能优化效率，否则依然会创建新的对象，字符串是不可变的，不太理解“原地扩充字符串 buffer 的大小”","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585010214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140565,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkfZpMx6JDjRiaa51DWRtncfQOy8Lblia1XkeIsXiccTG1nIKyaSic01H0IXgHM3KPSYJ1x51avblJAg/132","nickname":"Geek_8a0a23","note":"","ucode":"605C1750C59918","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289394,"discussion_content":"同问","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1594087715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2690105,"avatar":"https://static001.geekbang.org/account/avatar/00/29/0c/39/d69bc473.jpg","nickname":"搭搭里满是糖","note":"","ucode":"7FBEE6118380CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582798,"discussion_content":"同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659678504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2915328,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/7c/00/7553d316.jpg","nickname":"嗯","note":"","ucode":"876EABA15B591D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551954,"discussion_content":"你用id(‘a’)就会发现它的地址和x = ‘a’, id(x)的地址相同。\n合理的猜测是python内部一开始就有‘a’这个字符串，x=‘a&#39;不过是取了一个对它的引用，但x加上’b‘变成’ab‘这个相对没那么常见的字符串时它会重新开辟一块空间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645187825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970660,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/pTD8nS0SsORKiaRD3wB0NK2hcYF9YPt17GaicvtIehxNc8cdtIibiaA7VDxGrwI5iavC7aHwZyqOFFjT9WZg5hCFzAg/132","nickname":"Geek_83edf2","note":"","ucode":"975FD85FAF6078","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":238791,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587234653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148368,"avatar":"https://static001.geekbang.org/account/avatar/00/11/85/d0/8adf3b26.jpg","nickname":"Yang","note":"","ucode":"E4B3FB8B4581D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19962,"discussion_content":"同样的疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569243545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004569,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/19/95ff4cbd.jpg","nickname":"格非","note":"","ucode":"89FABFFC377131","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2819,"discussion_content":"同样有这个疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563956316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96072,"user_name":"Wing·三金","can_delete":false,"product_type":"c1","uid":1341402,"ip_address":"","ucode":"6B9F5822C3717F","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/da/54c663f3.jpg","comment_is_top":false,"comment_ctime":1558320906,"is_pvip":false,"replies":[{"id":"34376","content":"哈哈，对的。<br>如果字符串拼接的次数较少时，用+=更快，但是如果次数很大时，join稍快一些","user_name":"作者回复","comment_id":96072,"uid":"1259521","ip_address":"","utype":1,"ctime":1558336050,"user_name_real":"Jingxiao"}],"discussion_count":5,"race_medal":0,"score":"100342568714","product_id":100026901,"comment_content":"直观上看似乎第二种方法的复杂度高一倍，但实际运行了下，第二种方法效率略高，当调高到50万的时候第二种的效率比第一种高出两倍以上。","like_count":24,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450710,"discussion_content":"哈哈，对的。\n如果字符串拼接的次数较少时，用+=更快，但是如果次数很大时，join稍快一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558336050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550136,"discussion_content":"我的服务器配置：8c32g 云主机","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644392153,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550133,"discussion_content":"root@zabbix-001:/server/scripts/python_learn# cat str-test.py \n#!/usr/bin/python3\n# _*_ enconding:utf-8 _*_\n\ns = &#39;&#39;\nfor n in range(0,10000000):\n    s += str(n)    \n\n#print(s)\n\n\nroot@zabbix-001:/server/scripts/python_learn# time ./str-test.py \n\nreal\t0m2.769s\nuser\t0m2.748s\nsys\t0m0.016s\n\n\nroot@zabbix-001:/server/scripts/python_learn# cat join-test.py \n#!/usr/bin/python3\n# _*_ enconding:utf-8 _*_\n\nl = []\nfor char in range(0,10000000):\n    l.append(str(char))\n\ns = &#39; &#39;.join(l)\n\nroot@zabbix-001:/server/scripts/python_learn# time ./join-test.py \n\nreal\t0m2.892s\nuser\t0m2.652s\nsys\t0m0.236s","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644392063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692320,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d2/a0/c8714628.jpg","nickname":"独一无二","note":"","ucode":"A7DE0EA2BD8FE3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550132,"discussion_content":"不知道能否得到回复，我测试的结果正好是相反的，第一种方法更快一些（n是100万和1000万）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644391968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054598,"avatar":"https://static001.geekbang.org/account/avatar/00/10/17/86/416f772e.jpg","nickname":"shelldon","note":"","ucode":"BF8FE102D6DD1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312515,"discussion_content":"第二种方法先生成列表需要额外的空间复杂度，n太大的话空间消耗峰值大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602726556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96010,"user_name":"Python高效编程","can_delete":false,"product_type":"c1","uid":1325271,"ip_address":"","ucode":"B12B5F43B4335E","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/d7/de6832df.jpg","comment_is_top":false,"comment_ctime":1558311985,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"91752625201","product_id":100026901,"comment_content":"新版本的 f-string性能更好，但容易把环境变量写进字符串。","like_count":22},{"had_liked":false,"id":96194,"user_name":"路伴友行","can_delete":false,"product_type":"c1","uid":1506974,"ip_address":"","ucode":"96B54B7EEAEDAD","user_header":"https://static001.geekbang.org/account/avatar/00/16/fe/9e/8165b0a0.jpg","comment_is_top":false,"comment_ctime":1558355205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"70277831941","product_id":100026901,"comment_content":"哦，+= 每次都会扩容，而 [] 不会每次扩容","like_count":17},{"had_liked":false,"id":95990,"user_name":"farFlight","can_delete":false,"product_type":"c1","uid":1245211,"ip_address":"","ucode":"B0872D3ECBEC38","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epbRibsic15KXfGEN3SSjnLhXGyhK2Uyrj5ibBJsKAjicNqtafDaQOLH4xpSJRZD1vmibFPJER1ySmwP9A/132","comment_is_top":false,"comment_ctime":1558290886,"is_pvip":false,"replies":[{"id":"34374","content":"第一个例子中，&#39;string&#39;这个字符串对象只创建了一次，并同时被变量a和b指向，因此a is b返回True。<br><br>第二个例子中刚开始初始化的时候a和b的id就是不一样的，a is b就是False啊<br>","user_name":"作者回复","comment_id":95990,"uid":"1259521","ip_address":"","utype":1,"ctime":1558335989,"user_name_real":"Jingxiao"}],"discussion_count":3,"race_medal":0,"score":"70277767622","product_id":100026901,"comment_content":"这两个操作实际上时间相差无几，我把循环次数提高到一百万次还是伯仲之间。<br>另外请问老师python中对字符串采用 is 对比的问题。<br>比如代码：<br>a = &#39;string&#39;<br>b = &#39;string&#39;<br>a is b<br>将返回True<br>而<br>a = &#39;string&#39;<br>a += &#39;1&#39;<br>b = &#39;string1&#39;<br>a is b<br>则返回False<br>这个怎么解释比较好呢？为何第一个例子中a,b会指向同一个object呢？","like_count":16,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450671,"discussion_content":"第一个例子中，&amp;#39;string&amp;#39;这个字符串对象只创建了一次，并同时被变量a和b指向，因此a is b返回True。\n\n第二个例子中刚开始初始化的时候a和b的id就是不一样的，a is b就是False啊\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558335989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1017161,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/85/49/585c69c4.jpg","nickname":"皮特尔","note":"","ucode":"313862C91DD325","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280439,"discussion_content":"这是编程语言的内部实现的“享元模式”，在 《设计模式之美》里有讲到","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591540349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1056536,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1f/18/588ad801.jpg","nickname":"fangfang","note":"","ucode":"4B8A6371D5F656","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376291,"discussion_content":"=比较的是值，is比较的是内存地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622072858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96075,"user_name":"铁皮","can_delete":false,"product_type":"c1","uid":1013200,"ip_address":"","ucode":"E20FB02D9ABD20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/d0/0053c9ba.jpg","comment_is_top":false,"comment_ctime":1558321270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44507994230","product_id":100026901,"comment_content":"import time<br><br><br>start_time = time.perf_counter()<br>s = &#39;&#39;<br>for n in range(0, 100000):<br>    s += str(n)<br>end_time = time.perf_counter()<br><br>print(&#39;time elapse: {}&#39;.format(end_time - start_time))<br><br>start_time = time.perf_counter()<br>l = []<br>for n in range(0, 100000):<br>    l.append(str(n))<br><br>l = &#39; &#39;.join(l)<br>end_time = time.perf_counter()<br>print(&#39;join time elapse: {}&#39;.format(end_time - start_time))<br><br><br>start_time = time.perf_counter()<br>s = &quot; &quot;.join(map(str, range(0, 100000)))<br>end_time = time.perf_counter()<br>print(&#39;map time elapse: {}&#39;.format(end_time - start_time))<br><br>结果：<br>time elapse: 0.12365277000000008<br>join time elapse: 0.10721922699999997<br>map time elapse: 0.053512809999999966<br><br>看有人留言说s = &quot; &quot;.join(map(str, range(0, 100000))) 更高效。确实是","like_count":10},{"had_liked":false,"id":96362,"user_name":"夜路破晓","can_delete":false,"product_type":"c1","uid":1353577,"ip_address":"","ucode":"9B875F94B759B9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3hZfficKPGCq2kjFBu9SgaMjibJTEl7iaW1ta6pZNyiaWP8XEsNpunlnsiaOtBpWTXfT5BvRP3qNByml6p9rtBvqewg/132","comment_is_top":false,"comment_ctime":1558404076,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40213109740","product_id":100026901,"comment_content":"想问下目前有没有建群，因为想通过多了解些，比如读完这篇关于字符串的介绍，我想跟小伙伴们讨论下关于新版本f-string。<br>作为一个刚入门半年的新手来说，其实采用格式化方式其实区别不大，但就我个人而言，在学习理解的过程中，新版本更加高效易懂。","like_count":9,"discussions":[{"author":{"id":1680791,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a5/97/00c5157b.jpg","nickname":"雪格格一*","note":"","ucode":"35189608411FBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298462,"discussion_content":"请问同学，现在有群聊了么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597303480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96050,"user_name":"黑铁打野王","can_delete":false,"product_type":"c1","uid":1189836,"ip_address":"","ucode":"09FCB9DB732177","user_header":"https://static001.geekbang.org/account/avatar/00/12/27/cc/99349a54.jpg","comment_is_top":false,"comment_ctime":1558316495,"is_pvip":false,"replies":[{"id":"34371","content":"你好！这方面的内容你有兴趣可以自己去了解一下（google或者源码）。我的想法是专栏的内容还是实用为主，这种知识属于比较偏的了，工程当中用的很少，所以这里可能会省略","user_name":"作者回复","comment_id":96050,"uid":"1259521","ip_address":"","utype":1,"ctime":1558334887,"user_name_real":"Jingxiao"}],"discussion_count":2,"race_medal":0,"score":"23033152975","product_id":100026901,"comment_content":"既然是提升，能不能讲一下Python解释器对于String类型内存分配的知识？","like_count":5,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450695,"discussion_content":"你好！这方面的内容你有兴趣可以自己去了解一下（google或者源码）。我的想法是专栏的内容还是实用为主，这种知识属于比较偏的了，工程当中用的很少，所以这里可能会省略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558334887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453609,"avatar":"","nickname":"Geek__2ecb7d93cc04","note":"","ucode":"77A3791D0F28FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111016,"discussion_content":"有关这些内容可以直接去看python的官方文档，讲的比较细，如果要在这里讲的话估计能讲个七八章呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577772271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256942,"user_name":"满心","can_delete":false,"product_type":"c1","uid":2078544,"ip_address":"","ucode":"CDBC39F0344C8B","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b7/50/0628cac8.jpg","comment_is_top":false,"comment_ctime":1603789997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18783659181","product_id":100026901,"comment_content":"关于思考题，我的理解。方法1的复杂度是O(N)，方法二的复杂度是2O(N)。数据量小的情况下，根据复杂度，方法1的效率高一些；数据量大的情况下，方法2的效率高一些。原因是join可以预先计算出字符串的大小，只需要分配一次内存；使用+=每次都会先尝试原地扩容，如果不能原地扩容就需要重新分配内存，这在数据量大的情况下会造成性能降低。那么问题来了，方法2中也有数组的append操作，这在数据量大情况下也会有内存分配的问题。但是数组每次分配内存都会在原来的容量基础上*2，但是字符串的+=操作每次只会按需扩容，所以数组的内存分配次数要比字符串的少好多。<br><br>以上是我的理解，希望得到老师的指点，谢谢","like_count":4},{"had_liked":false,"id":96047,"user_name":"TKbook","can_delete":false,"product_type":"c1","uid":1073829,"ip_address":"","ucode":"F6E0E99CC79059","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/a5/43aa0c27.jpg","comment_is_top":false,"comment_ctime":1558316202,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18738185386","product_id":100026901,"comment_content":"第一个更优。另外python3.6以后还有一个新的字符串格式化用法更高效。。print(&#39;no data available for person with id: {id}, name: {name}&#39;)","like_count":4,"discussions":[{"author":{"id":1056536,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1f/18/588ad801.jpg","nickname":"fangfang","note":"","ucode":"4B8A6371D5F656","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376293,"discussion_content":"少加了一个f","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622072973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1224652,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/HfhA18icBO1IeTssuwucMJm8JskCkhCGIfYicvST2iaGXIvP5bsKVKzyP6TuBWGVLKsnQ3s4yVUs0pDRWQ8F7icC4g/132","nickname":"whatfucking","note":"","ucode":"67195C81800B98","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":773,"discussion_content":"这种吧，感觉在长代码里面不好找变量！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562052016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149303,"user_name":"Ryan","can_delete":false,"product_type":"c1","uid":1705772,"ip_address":"","ucode":"D3174038A12163","user_header":"https://static001.geekbang.org/account/avatar/00/1a/07/2c/d2f48330.jpg","comment_is_top":false,"comment_ctime":1573185912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14458087800","product_id":100026901,"comment_content":"实际测试：<br>import time<br><br>time1 = time.perf_counter()<br>s = &#39;&#39;<br>for n in range(0, 100000):<br>    s += str(n)<br>print(time.perf_counter()-time1)<br>    <br>time2 = time.perf_counter()<br>l = []<br>for n in range(0, 100000):<br>    l.append(str(n))    <br>s = &#39; &#39;.join(l)   <br>print(time.perf_counter()-time2)<br><br>time3 = time.perf_counter()<br>s = &quot; &quot;.join(map(str, range(0, 10000)))<br>print(time.perf_counter()-time3)<br><br>=&gt;<br>0.055303414000036355<br>0.033053977999998096<br>0.0020310749998770916<br><br>Why? 想看看老师解析下","like_count":3},{"had_liked":false,"id":97701,"user_name":"hysyeah","can_delete":false,"product_type":"c1","uid":1528266,"ip_address":"","ucode":"40D26CCEABE800","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKumMwlVcElxga0hrFHMJpjnPaSIyGOvjuuyP96akTz2uMIt5WQVnJtricSXfKdLSnVMSORxibSU7vA/132","comment_is_top":false,"comment_ctime":1558751223,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"14443653111","product_id":100026901,"comment_content":"老师好，我对于下面这段话有些疑问。<br>自从 Python2.5 开始，每次处理字符串的拼接操作时（str1 += str2），Python 首先会检测 str1 还有没有其他的引用。如果没有的话，就会尝试原地扩充字符串 buffer 的大小，而不是重新分配一块内存来创建新的字符串并拷贝。<br><br><br>我看python的源码对ci此并没有原地扩充的操作，而是每次都会新建一个string 对象。能详细解释下吗？谢谢。","like_count":3,"discussions":[{"author":{"id":1103933,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d8/3d/33c0979f.jpg","nickname":"ZH.F","note":"","ucode":"5D1F78533E8068","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133734,"discussion_content":"同问。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578984892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2463488,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/OrfXQWvE0jIuibibw0dnicPMicygSnwcebSMKzwfIESL90iatS4QGEr8Ew9PjPGVNIptoSq6BL6UpiccKPf8WRuPMdaw/132","nickname":"Geek_13d1ac","note":"","ucode":"DB4EE174F44FE1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540902,"discussion_content":"&gt;&gt;&gt; xxx = &#39;123&#39;\n&gt;&gt;&gt; xxx = &#39;123$#@&#39;\n&gt;&gt;&gt; id(xxx)\n2997368795056\n&gt;&gt;&gt; xxx += &#39;0&#39;\n&gt;&gt;&gt; id(xxx)\n2997368794992\n&gt;&gt;&gt; xxx += &#39;1&#39;\n&gt;&gt;&gt; id(xxx)\n2997368794992\n&gt;&gt;&gt; xxx += &#39;2&#39;\n&gt;&gt;&gt; id(xxx)\n2997368794992\n&gt;&gt;&gt; xxx += &#39;3&#39;\n&gt;&gt;&gt; id(xxx)\n2997368794992\n&gt;&gt;&gt; xxx += &#39;4&#39;\n&gt;&gt;&gt; id(xxx)\n2997368794992\n&gt;&gt;&gt; xxx += &#39;5&#39;\n&gt;&gt;&gt; id(xxx)\n2997368794992\n&gt;&gt;&gt; xxx += &#39;6&#39;\n&gt;&gt;&gt; id(xxx)\n2997368794992\n&gt;&gt;&gt; xxx += &#39;7&#39;\n&gt;&gt;&gt; id(xxx)\n2997368794992\n&gt;&gt;&gt; xxx += &#39;8&#39;\n&gt;&gt;&gt; id(xxx)\n2997368794992\n&gt;&gt;&gt; xxx += &#39;99999999&#39;\n&gt;&gt;&gt; id(xxx)\n2997368716064","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640189627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2463488,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/OrfXQWvE0jIuibibw0dnicPMicygSnwcebSMKzwfIESL90iatS4QGEr8Ew9PjPGVNIptoSq6BL6UpiccKPf8WRuPMdaw/132","nickname":"Geek_13d1ac","note":"","ucode":"DB4EE174F44FE1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540901,"discussion_content":"&gt;&gt;&gt; fff = &#39;fdslf;ejkwl;4r3280fjdsaf&#39;\n&gt;&gt;&gt; id(fff)\n2997368361968\n&gt;&gt;&gt; fff += &#39;&#39;\n&gt;&gt;&gt; id(fff)\n2997368361968\n&gt;&gt;&gt; fff += &#39;0&#39;\n&gt;&gt;&gt; id(fff)\n2997368715824\n&gt;&gt;&gt; fff += &#39;1&#39;\n&gt;&gt;&gt; id(fff)\n2997368715824\n&gt;&gt;&gt; fff += &#39;2&#39;\n&gt;&gt;&gt; id(fff)\n2997368715824","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640189445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96038,"user_name":"豊","can_delete":false,"product_type":"c1","uid":1069119,"ip_address":"","ucode":"2610D927B456CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/3f/ddd032bb.jpg","comment_is_top":false,"comment_ctime":1558315011,"is_pvip":true,"replies":[{"id":"34379","content":"试试同时比较range(1000)和range(10000000)两种情况的结果","user_name":"作者回复","comment_id":96038,"uid":"1259521","ip_address":"","utype":1,"ctime":1558336228,"user_name_real":"Jingxiao"}],"discussion_count":1,"race_medal":0,"score":"14443216899","product_id":100026901,"comment_content":"代码1复杂度：O（1）×n，即O（n）；代码2复杂度：O（1）×n+ O（1）×n=o（2n）,因此代码1效率更高？","like_count":3,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450689,"discussion_content":"试试同时比较range(1000)和range(10000000)两种情况的结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558336228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96017,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1558313062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14443214950","product_id":100026901,"comment_content":"join的效率要比拼接效率高，因为拼接会生成新的字符串对象","like_count":3},{"had_liked":false,"id":98875,"user_name":"Aspirin","can_delete":false,"product_type":"c1","uid":1141751,"ip_address":"","ucode":"858B551CF0C2F4","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/f7/3a3b82c2.jpg","comment_is_top":false,"comment_ctime":1559111843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10149046435","product_id":100026901,"comment_content":"&#39;&#39;.join(map(str, range(N)))最高效是不是因为map取代了str(n)的遍历，所以差距是在map上。回归到字符串本身，则是join()比+=快。","like_count":2},{"had_liked":false,"id":97879,"user_name":"Geek_1ea0d3","can_delete":false,"product_type":"c1","uid":1529651,"ip_address":"","ucode":"88E735B462458C","user_header":"","comment_is_top":false,"comment_ctime":1558809962,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10148744554","product_id":100026901,"comment_content":".split()方法的例子那里，如果splitor是&#39;&#47;&#47;&#39;，不应该是按照单斜线&#47;来分割嘛？","like_count":2,"discussions":[{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410297,"discussion_content":"转义字符是&#34;\\&#34;，不是&#34;/&#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635653370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96488,"user_name":"taoist","can_delete":false,"product_type":"c1","uid":1195004,"ip_address":"","ucode":"D70AFE25CD8F10","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/fc/04a75cd0.jpg","comment_is_top":false,"comment_ctime":1558433058,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10148367650","product_id":100026901,"comment_content":"def test1(n):<br>    s = &#39;&#39;<br>    for i in range(0, n):<br>        s += str(i)<br><br>def test2(n):<br>    l = [str(i) for i in range(0,n)]<br>    s = &#39;&#39;.join(l)<br><br>def test3(n):<br>    l = []<br>    for i in range(n):<br>        l.append(str(i))<br>    s = &#39;&#39;.join(l)<br><br>def test4(n):<br>    s = &quot; &quot;.join(map(str, range(0, n)))<br><br>if __name__ == &#39;__main__&#39;:<br>    import timeit<br>    print(timeit.timeit(&#39;test1(100000)&#39;, setup=&#39;from __main__ import test1&#39;, number=1000))<br>    print(timeit.timeit(&#39;test2(100000)&#39;, setup=&#39;from __main__ import test2&#39;, number=1000))<br>    print(timeit.timeit(&#39;test3(100000)&#39;, setup=&#39;from __main__ import test3&#39;, number=1000))<br>    print(timeit.timeit(&#39;test4(100000)&#39;, setup=&#39;from __main__ import test4&#39;, number=1000))<br><br>环境: Python3.7  Linux<br>用时短到长 test4 &lt; test2 &lt; test 1 &lt; test3<br>join map 具有最好的 性能,   列表生成器 + join 次之,   += 慢一些，　append + join 最慢，可能是append 影响了 join 的性能开销。","like_count":2},{"had_liked":false,"id":96070,"user_name":"kevinsu","can_delete":false,"product_type":"c1","uid":1078506,"ip_address":"","ucode":"BAD46B815D6A5C","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","comment_is_top":false,"comment_ctime":1558320697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10148255289","product_id":100026901,"comment_content":"老师我试了试这样去测，看着像是“+=”更好一些。<br>import timeit<br>   ...: print(timeit.timeit(&quot;s =&#39;&#39;;s += str(n for n in range(0,100000))&quot;,number=100000))<br>   ...: print(timeit.timeit(&quot;l =[];l.append(str(n for n in range(0, 100000)));s=&#39;&#39;.join(l)&quot;,number=100000))<br>   ...:<br>0.12783753898111172<br>0.14433829998597503<br>","like_count":2},{"had_liked":false,"id":96067,"user_name":"carpe_diem","can_delete":false,"product_type":"c1","uid":1085804,"ip_address":"","ucode":"25A77D8D146A4F","user_header":"https://static001.geekbang.org/account/avatar/00/10/91/6c/054a0745.jpg","comment_is_top":false,"comment_ctime":1558319986,"is_pvip":true,"replies":[{"id":"34377","content":"你同时测试一下<br>range(0, 100)<br>和<br>range(0, 1000000)的情况比较一下，看看两者的结果有什么不同？","user_name":"作者回复","comment_id":96067,"uid":"1259521","ip_address":"","utype":1,"ctime":1558336108,"user_name_real":"Jingxiao"}],"discussion_count":1,"race_medal":0,"score":"10148254578","product_id":100026901,"comment_content":"第一种更优，虽然在时间复杂度上，两种方式都是O(n)，但是第一种方法的空间复杂度优于第二种方式，第一种方法的空间复杂度为O(1)，第二种方法的空间复杂度为O(n)。另外，第一种写法显然也更简洁一些","like_count":2,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450706,"discussion_content":"你同时测试一下\nrange(0, 100)\n和\nrange(0, 1000000)的情况比较一下，看看两者的结果有什么不同？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558336108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150549,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1573553929,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5868521225","product_id":100026901,"comment_content":"感觉字符串拼接，f&#39;Hello, {name}!&#39; 这样最直观。","like_count":1,"discussions":[{"author":{"id":2060655,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/71/6f/1bc7c1a9.jpg","nickname":"唐家星","note":"","ucode":"30861324CDDE9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293891,"discussion_content":"但不是每个值都有变量吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595717447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111233,"user_name":"以马内利","can_delete":false,"product_type":"c1","uid":1544109,"ip_address":"","ucode":"50A96FCD843015","user_header":"https://static001.geekbang.org/account/avatar/00/17/8f/ad/f8a31449.jpg","comment_is_top":false,"comment_ctime":1562515955,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5857483251","product_id":100026901,"comment_content":"案例里<br>l = []<br>for n in range(0, 100000):<br>    l.append(str(n))<br>l = &#39; &#39;.join(l) <br>在这个案例里只考虑到了列表append 操作时间复杂度，join时是不是也应该先统计字符串的长度，也就是O(n)，那整体的时间复杂度为什么不是O(2n)?<br>","like_count":1,"discussions":[{"author":{"id":1995257,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/71/f9/85329b42.jpg","nickname":"做一个可靠的UDP","note":"","ucode":"2428ED20AD3398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261818,"discussion_content":"没有O（2n)这种东西，O本来表示的就是数量级，省略系数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589009031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239546,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKWiaZb7a2JAcIVlXYuZ3iaPfSF6vBbg3yUps6LKpsZarftyXufMHYKJmMKzH3bIpVkDAVNXE9q0oOw/132","nickname":"Mr_scx","note":"","ucode":"28B5CE68A5A339","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":168444,"discussion_content":"大O计法通过会省略系数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581581948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96490,"user_name":"Joe","can_delete":false,"product_type":"c1","uid":1525880,"ip_address":"","ucode":"19F3F2F53549A4","user_header":"https://static001.geekbang.org/account/avatar/00/17/48/78/dc3bb94f.jpg","comment_is_top":false,"comment_ctime":1558433508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853400804","product_id":100026901,"comment_content":"景老师，您好。我想请教个问题，用python写的脚本，执行linux带sudo的命令后，怎样去判断是否要输入密码，如果需要输入，用什么方法进行交互输入。能给我简单点拨一下吗？","like_count":1},{"had_liked":false,"id":96197,"user_name":"小胖","can_delete":false,"product_type":"c1","uid":1022958,"ip_address":"","ucode":"1B8D884D254070","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/ee/8950c240.jpg","comment_is_top":false,"comment_ctime":1558355698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853322994","product_id":100026901,"comment_content":"根据老师讲的，应该是差不多，自己分别在不同版本的python2.7  3.7   ，消耗的时间差不多，所以效率两者差不多","like_count":1},{"had_liked":false,"id":96123,"user_name":"水木刀","can_delete":false,"product_type":"c1","uid":1500427,"ip_address":"","ucode":"942093B000C41E","user_header":"https://static001.geekbang.org/account/avatar/00/16/e5/0b/e4e2c0b1.jpg","comment_is_top":false,"comment_ctime":1558337938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853305234","product_id":100026901,"comment_content":"import  time<br>start_using_dict = time.perf_counter()<br>s1 = &#39;&#39;<br>for n in range(0, 1000000):<br>    s1 += str(n)<br># print(s1)<br>end_using_dict = time.perf_counter()<br><br>print(&quot;time elapse using str1_test: {}&quot;.format(end_using_dict - start_using_dict))<br># Option B<br>start_using_dict1 = time.perf_counter()<br>l = []<br>for n in range(0, 1000000):<br>    l.append(str(n))<br>s2 = &#39; &#39;.join(l)<br># print(s2)<br>end_using_dict1 = time.perf_counter()<br>print(&quot;time elapse using str2_test: {}&quot;.format(end_using_dict1 - start_using_dict1))<br><br>time elapse using str1_test: 2.2049805037465817<br>time elapse using str2_test: 0.45808027547064256<br>调到100万后明显第二种快","like_count":1},{"had_liked":false,"id":96065,"user_name":"大斌","can_delete":false,"product_type":"c1","uid":1002183,"ip_address":"","ucode":"1434C2B0A29135","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/c7/ec18673b.jpg","comment_is_top":false,"comment_ctime":1558319702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853286998","product_id":100026901,"comment_content":"-----------------代码区-----------------<br>import time<br><br>start_time = time.time()<br>s = &#39;&#39;<br>for n in range(0, 1000000):<br>    s += str(n)<br><br>end_time = time.time()<br>print(end_time-start_time)<br><br><br>start_time1 = time.time()<br>l = []<br>for n in range(0, 1000000):<br>    l.append(str(n))<br><br>s = &#39; &#39;.join(l)<br>end_time1 = time.time()<br>print(end_time1-start_time1)<br><br>-----------------结果区-----------------<br>0.4459269046783447<br>0.39172983169555664<br>看结果所示，join()函数的效率比+=操作符的效率要高","like_count":1},{"had_liked":false,"id":347406,"user_name":"Soyoger","can_delete":false,"product_type":"c1","uid":2967576,"ip_address":"","ucode":"D4D7BD0ABC4491","user_header":"https://static001.geekbang.org/account/avatar/00/2d/48/18/e524f344.jpg","comment_is_top":false,"comment_ctime":1653994104,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653994104","product_id":100026901,"comment_content":"现在python格式化都推荐插值法，如 f&#39;This is a {target}&#39;.  {}里面填动态变量。","like_count":0},{"had_liked":false,"id":344699,"user_name":"技术架构师","can_delete":false,"product_type":"c1","uid":2858900,"ip_address":"","ucode":"3E8DBDF61F77B2","user_header":"https://static001.geekbang.org/account/avatar/00/2b/9f/94/b999c594.jpg","comment_is_top":false,"comment_ctime":1651730051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651730051","product_id":100026901,"comment_content":"第一个，因为时空复杂度更小","like_count":0},{"had_liked":false,"id":344228,"user_name":"陌上桑","can_delete":false,"product_type":"c1","uid":1232369,"ip_address":"","ucode":"E29A2D298BFE09","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/f1/9616295e.jpg","comment_is_top":false,"comment_ctime":1651379843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651379843","product_id":100026901,"comment_content":"方式二会快一些，因为方式一每次都会分配内存，方式二只会分配一次大的内存","like_count":0},{"had_liked":false,"id":294294,"user_name":"徐尧罡","can_delete":false,"product_type":"c1","uid":2372416,"ip_address":"","ucode":"55DFC14CBB33DD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq6LGLtCCNoIf8S09fxcvk1VZslOUQWdz8kRrXy4tCDVdbrJgFpriaLA3nI2fQnoENXwdS9Jia6PmGA/132","comment_is_top":false,"comment_ctime":1621866613,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621866613","product_id":100026901,"comment_content":"时间复杂度一直不理解，感觉很抽象","like_count":1},{"had_liked":false,"id":289897,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":1476450,"ip_address":"","ucode":"04D65BF7F19845","user_header":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","comment_is_top":false,"comment_ctime":1619256540,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619256540","product_id":100026901,"comment_content":"思考题，数据量大时，方法二的效率更高，因为方法一会多次检查buff大小并扩容，但方法二的列表大小是已知的，所以一次性申请空间。<br>python底层了解的少，感觉string是数组，列表是支持扩容的数组。python 2.5优化了，但string本质还是有长度限制的数组，可能预留的长度大一点，不可能像链表一样无限扩容。","like_count":0},{"had_liked":false,"id":282010,"user_name":"einslssac","can_delete":false,"product_type":"c1","uid":2467189,"ip_address":"","ucode":"BE4D19B6F30E9A","user_header":"https://static001.geekbang.org/account/avatar/00/25/a5/75/123bab9e.jpg","comment_is_top":false,"comment_ctime":1615013576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615013576","product_id":100026901,"comment_content":"当range为（0，5000000）时，主要原因是啥？要看底层源码逻辑么？<br>第一种方法耗时61s<br>第二种方法耗时2.5s<br>","like_count":0},{"had_liked":false,"id":269745,"user_name":"非同凡想","can_delete":false,"product_type":"c1","uid":1934969,"ip_address":"","ucode":"713FD449A49D5A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/86/79/066a062a.jpg","comment_is_top":false,"comment_ctime":1608775775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608775775","product_id":100026901,"comment_content":"<br>def str_append_test1():<br>    for cnt in [100, 1000000]:<br>        start_time = time.perf_counter()<br>        s= &quot;&quot;<br>        for i in range(cnt):<br>            s += str(i)<br>        end_time = time.perf_counter()<br>        print(&quot;{} str += time elapse :{}&quot;.format(cnt,end_time- start_time))<br><br>def str_append_test3():<br><br>    for cnt in [100, 1000000]:<br>        start_time = time.perf_counter()<br>        l = []<br>        for i in range(cnt):<br>            l.append(str(i))<br>        s = &quot; &quot;.join(l)<br>        end_time = time.perf_counter()<br>        print(&quot;{} &#39; &#39;.join(l)  ,time elapse :{}&quot;.format(cnt, end_time- start_time))<br><br>def str_append_test5():<br>    for cnt in [100, 1000000]:<br>        start_time = time.perf_counter()<br>        s = &quot; &quot;.join(map(str, range(0, cnt)))<br>        end_time = time.perf_counter()<br>        print(&quot;s = &#39; &#39;.join(map(str, range(0, {}))) ,time elapse :{}&quot; .format(cnt, end_time- start_time))<br><br>100 str += time elapse :2.3500000000009624e-05<br>1000000 str += time elapse :2.4966692000000004<br>100 &#39; &#39;.join(l)  ,time elapse :3.16999999996348e-05<br>1000000 &#39; &#39;.join(l)  ,time elapse :0.2920830999999997<br>s = &#39; &#39;.join(map(str, range(0, 100))) ,time elapse :2.8799999999939985e-05<br>s = &#39; &#39;.join(map(str, range(0, 1000000))) ,time elapse :0.22893410000000003<br>","like_count":0},{"had_liked":false,"id":256881,"user_name":"Geek_Crystal","can_delete":false,"product_type":"c1","uid":1953741,"ip_address":"","ucode":"EC86F75319EE8E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/6rGMZEbo2qLpUa1Ou37lrGyd5ToKjPeZIDS6gnRxTdXRBpAVia7nxddzsTqSUqCFW1LafdFcVKOSicjJbJdFPxtA/132","comment_is_top":false,"comment_ctime":1603774430,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603774430","product_id":100026901,"comment_content":"“新版本 Python 中拼接操作’+=&#39;是个例外”，这里有点问题，使用+=操作后，字符串id变了，说明不是原有基础上的更改","like_count":0},{"had_liked":false,"id":237842,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1007267,"ip_address":"","ucode":"80594B4B056A53","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/a3/9670d4b4.jpg","comment_is_top":false,"comment_ctime":1595985912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595985912","product_id":100026901,"comment_content":"怎么证明 += 是原地拓展空间，通过 id 查看 s 的地址是变化的.","like_count":0},{"had_liked":false,"id":226788,"user_name":"Kevin","can_delete":false,"product_type":"c1","uid":1923859,"ip_address":"","ucode":"89EA5FCF036C42","user_header":"https://static001.geekbang.org/account/avatar/00/1d/5b/13/6db9ba58.jpg","comment_is_top":false,"comment_ctime":1592205098,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592205098","product_id":100026901,"comment_content":"方法2更高效：<br>分析大概是方法1中，多次调用 字符串的 += 方法，时间复杂度是O(n) * n<br>方法2中的使用列表append方法时间复制度是O(1)*n = O(n)<br><br>代码计算时间如下：<br>import time<br><br># 字符串拼接方法 A<br>start_time_a = time.perf_counter()<br>s_a = &#39;&#39;<br>for n in range(0, 1000000):<br>    s_a += str(n)<br>end_time_a = time.perf_counter()<br>print(&quot;time cost {}&quot;.format(end_time_a - start_time_a))<br><br># 字符串拼接方法 B<br>start_time_b = time.perf_counter()<br>l = []<br>for n in range(0, 1000000):<br>    l.append(str(n))<br><br>s_b = &#39; &#39;.join(l)<br>end_time_b = time.perf_counter()<br>print(&#39;time cost {}&#39;.format(end_time_b - end_time_a))<br><br>输出：<br>time cost 2.6492795<br>time cost 0.3483613000000001","like_count":0},{"had_liked":false,"id":225795,"user_name":"daowuli_chihai","can_delete":false,"product_type":"c1","uid":2017371,"ip_address":"","ucode":"13E5DD278D8E95","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIiaeebUYxl7e1b8DhQGz7v6uibGcytfL8iaTke1S6NwSVxicOy5iaLGbRn2aZtxZy8vVnF6j3fjtxDEbQ/132","comment_is_top":false,"comment_ctime":1591859821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591859821","product_id":100026901,"comment_content":"python旧版本 新版本 都需要学吧","like_count":0},{"had_liked":false,"id":225784,"user_name":"daowuli_chihai","can_delete":false,"product_type":"c1","uid":2017371,"ip_address":"","ucode":"13E5DD278D8E95","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIiaeebUYxl7e1b8DhQGz7v6uibGcytfL8iaTke1S6NwSVxicOy5iaLGbRn2aZtxZy8vVnF6j3fjtxDEbQ/132","comment_is_top":false,"comment_ctime":1591856513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591856513","product_id":100026901,"comment_content":"转义字符\\newline运行的时候，编程 \\n和字符串ewline<br>第二，\\v不理解","like_count":0},{"had_liked":false,"id":220443,"user_name":"ShmilyVidian","can_delete":false,"product_type":"c1","uid":1177103,"ip_address":"","ucode":"2B2485B48B8D33","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/0f/0499db2c.jpg","comment_is_top":false,"comment_ctime":1590243559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590243559","product_id":100026901,"comment_content":"字符串笔记：<br>1、应用场景：日志打印、注释、变量基本操作等<br>2、字符串可用单引号（&#39;&#39;）双引号（&quot;&quot;）三引号（&quot;&quot;&quot;&quot;&quot;&quot;或&#39;&#39;&#39;&#39;&#39;&#39;）<br>3、字符串的常用操作：索引、切片、遍历<br>3-1：<br>name = &#39;vidian&#39; <br>name[0]<br>name[0:2]<br>for m in name:<br>print(m)<br>3-2：字符串是不可变的，改变字符串的方式通过创建新的字符串来完成，第一种方法：字符串+拼接；第二种方法：字符串replace完成;<br>常见函数：strip、lstrip、rstrip<br>3-3：字符串格式化<br>format，通过参数传入替换{}","like_count":0},{"had_liked":false,"id":209321,"user_name":"轻风悠扬","can_delete":false,"product_type":"c1","uid":1319215,"ip_address":"","ucode":"F2276CE113BED1","user_header":"https://static001.geekbang.org/account/avatar/00/14/21/2f/b29e8af8.jpg","comment_is_top":false,"comment_ctime":1587535099,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1587535099","product_id":100026901,"comment_content":"老师，我对+=操作原地扩充buffer有点不理解，既然是原地扩充是不是可以理解成还是的那个string？我试着执行 str1 = &#39;abc&#39;, 然后用id(str1) 去查看，再执行str1 += &#39;ef&#39; 再用id(str1)去查看，前后打印出来的id是不同的。","like_count":0,"discussions":[{"author":{"id":1995257,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/71/f9/85329b42.jpg","nickname":"做一个可靠的UDP","note":"","ucode":"2428ED20AD3398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261819,"discussion_content":"真的耶，是不是虽然原地扩容但也不再是同一个对象了，只不过移动的元素少些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589009149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201729,"user_name":"🌻","can_delete":false,"product_type":"c1","uid":1509651,"ip_address":"","ucode":"9B4D8CA8C09A70","user_header":"https://static001.geekbang.org/account/avatar/00/17/09/13/d762ce74.jpg","comment_is_top":false,"comment_ctime":1585827002,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585827002","product_id":100026901,"comment_content":"老师的声音实在是太好听了！！！","like_count":0,"discussions":[{"author":{"id":1039464,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/dc/68/006ba72c.jpg","nickname":"Untitled","note":"","ucode":"8DD6ABA3E81A2E","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336604,"discussion_content":"这个不是别人的录音吗？都不是老师本人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608631874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199795,"user_name":"方扬波","can_delete":false,"product_type":"c1","uid":1855749,"ip_address":"","ucode":"94DEAD0C27350B","user_header":"","comment_is_top":false,"comment_ctime":1585496021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585496021","product_id":100026901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":198702,"user_name":"Geek.S.","can_delete":false,"product_type":"c1","uid":1899087,"ip_address":"","ucode":"FC8A9FE3300B94","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fa/4f/4252911a.jpg","comment_is_top":false,"comment_ctime":1585464760,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585464760","product_id":100026901,"comment_content":"思考题: 用实际测试结果解答<br><br>测试对象:<br>1. +=<br>2. list.append, join<br>3. join, map<br><br>测试数据量: 从 1万 到 1千万<br><br>测试结果如下:<br>------------------------------------------------------------<br>num: 10000<br>            STR PLUS Time elapse(s): 0.0034306309999998508<br>         LIST APPEND Time elapse(s): 0.0036034029999998385<br>        JOIN AND MAP Time elapse(s): 0.0021630679999999902<br>------------------------------------------------------------<br>num: 100000<br>            STR PLUS Time elapse(s): 0.03593139600000006<br>         LIST APPEND Time elapse(s): 0.033052437000000046<br>        JOIN AND MAP Time elapse(s): 0.024135019000000035<br>------------------------------------------------------------<br>num: 1000000<br>            STR PLUS Time elapse(s): 3.357951884<br>         LIST APPEND Time elapse(s): 0.38063544999999976<br>        JOIN AND MAP Time elapse(s): 0.2802191289999998<br>------------------------------------------------------------<br>num: 10000000<br>            STR PLUS Time elapse(s): 437.487017527<br>         LIST APPEND Time elapse(s): 3.893988269000033<br>        JOIN AND MAP Time elapse(s): 2.966607151000005<br>------------------------------------------------------------<br><br>从测试结果可以看出:<br>1. 当数据量在十万量级之内, 他们之间效率没有明显差异;<br>2. 当数据量达到在百万量级以上, += 的效率已经慢了 8 倍以上;<br>3. 第三种方案性能更优<br><br>最后说明以下, 上述测试结果运行环境: Python 3.7.1","like_count":0},{"had_liked":false,"id":196462,"user_name":"创","can_delete":false,"product_type":"c1","uid":1634069,"ip_address":"","ucode":"109126EA88A9BF","user_header":"https://static001.geekbang.org/account/avatar/00/18/ef/15/3e55f756.jpg","comment_is_top":false,"comment_ctime":1585283787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585283787","product_id":100026901,"comment_content":"各有千秋啊，按需使用","like_count":0},{"had_liked":false,"id":196376,"user_name":"恬恬","can_delete":false,"product_type":"c1","uid":1237977,"ip_address":"","ucode":"12335280B53040","user_header":"https://static001.geekbang.org/account/avatar/00/12/e3/d9/bda5e991.jpg","comment_is_top":false,"comment_ctime":1585276920,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585276920","product_id":100026901,"comment_content":"现在好像字符串的输出用print(f&quot;no data available for person with id: {id}, name: {name}&quot;)更方便","like_count":0},{"had_liked":false,"id":194300,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":1914504,"ip_address":"","ucode":"A8A2E3E57BD029","user_header":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","comment_is_top":false,"comment_ctime":1585047351,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585047351","product_id":100026901,"comment_content":"“推荐使用format函数”。个性推荐，我喜欢。不要说这也行，那也行，我要听主观看法。","like_count":0},{"had_liked":false,"id":173613,"user_name":"bbbi","can_delete":false,"product_type":"c1","uid":1682175,"ip_address":"","ucode":"9A539AEF791428","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/ff/e2c331e0.jpg","comment_is_top":false,"comment_ctime":1579616237,"is_pvip":false,"replies":[{"id":"67329","content":"这个本专栏并没有涉及，考虑到没什么实用性。你如果感兴趣，可以都google一下这方面的资料","user_name":"作者回复","comment_id":173613,"uid":"1259521","ip_address":"","utype":1,"ctime":1579677930,"user_name_real":"Jingxiao"}],"discussion_count":1,"race_medal":0,"score":"1579616237","product_id":100026901,"comment_content":"老师能够讲字符串稍微底层一点的东西吗? 例如字符串的内存分配回收，常量啥的？","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482136,"discussion_content":"这个本专栏并没有涉及，考虑到没什么实用性。你如果感兴趣，可以都google一下这方面的资料","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579677930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149293,"user_name":"Ryan","can_delete":false,"product_type":"c1","uid":1705772,"ip_address":"","ucode":"D3174038A12163","user_header":"https://static001.geekbang.org/account/avatar/00/1a/07/2c/d2f48330.jpg","comment_is_top":false,"comment_ctime":1573184283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573184283","product_id":100026901,"comment_content":"s = &#39;hello&#39;<br>s.title() =&gt; ‘Hello’<br>更方便","like_count":0},{"had_liked":false,"id":143481,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1571715012,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571715012","product_id":100026901,"comment_content":"import time<br>start_time=time.perf_counter()<br>s1=&#39;&#39;<br>for i in range(0,100000):<br>    s1+=str(i)<br><br>#print(s1)<br>end_time=time.perf_counter();<br>print(&#39;time1:{}&#39;.format(end_time-start_time))<br><br>start=time.perf_counter()<br>l = []<br>for n in range(0, 100000):<br>    l.append(str(n))<br>s = &#39; &#39;.join(l)<br>end=time.perf_counter();<br>print(&#39;time2:{}&#39;.format(end-start))<br><br>start=time.perf_counter()<br><br>s = &#39;&#39;.join(map(str,range(0,100000)))<br>end=time.perf_counter();<br>print(&#39;time3:{}&#39;.format(end-start))<br><br># time1:0.047960300000000004<br># time2:0.035124600000000006<br># time3:0.022670600000000013","like_count":0},{"had_liked":false,"id":143475,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1571714564,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571714564","product_id":100026901,"comment_content":"第2个更优<br>import time<br>start_time=time.perf_counter()<br>s1=&#39;&#39;<br>for i in range(0,100000):<br>    s1+=str(i)<br><br>#print(s1)<br>end_time=time.perf_counter();<br>print(&#39;time1:{}&#39;.format(end_time-start_time))<br><br>start=time.perf_counter()<br>l = []<br>for n in range(0, 100000):<br>    l.append(str(n))<br><br>s = &#39; &#39;.join(l)<br>end=time.perf_counter();<br>print(&#39;time2:{}&#39;.format(end-start))<br><br><br># time1:0.0475965<br># time2:0.0348889","like_count":0},{"had_liked":false,"id":134705,"user_name":"自由民","can_delete":false,"product_type":"c1","uid":1346236,"ip_address":"","ucode":"435C67531697F1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/bc/cb39ed38.jpg","comment_is_top":false,"comment_ctime":1568899796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568899796","product_id":100026901,"comment_content":"思考题<br>第一种更好，时间效率为O(N)，第二种时间效率为O(N²)。<br>总结:字符串的一些基础知识。单引号，双引号和三引号是一样的，字符串的拼接，在python中已进行了优化，可以放心使用。split，join，strip等函数，以前都是用到了现搜，甚至复制粘贴搞定，并没有深究。还是应该弄清楚用法的。<br>课程的练习代码: https:&#47;&#47;github.com&#47;zwdnet&#47;PythonPractice","like_count":0},{"had_liked":false,"id":134390,"user_name":"Freshman","can_delete":false,"product_type":"c1","uid":1662439,"ip_address":"","ucode":"5F4709AF68795C","user_header":"https://static001.geekbang.org/account/avatar/00/19/5d/e7/c72fb013.jpg","comment_is_top":false,"comment_ctime":1568817635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568817635","product_id":100026901,"comment_content":"代码:<br>num = 1000<br>def splice1():<br>    s = &#39;&#39;<br>    for n in range(0, num):<br>        s += str(n)<br>    return s<br><br><br>def splice2():<br>    l = []<br>    for n in range(0, num):<br>        l.append(str(n))<br><br>    s = &#39; &#39;.join(l)<br>    return s<br><br>def splice3():<br>    s = &quot; &quot;.join(map(str, range(0, num)))<br>    return s<br><br>if __name__ == &#39;__main__&#39;:<br>    from timeit import Timer<br>    t1 = Timer(&#39;splice1()&#39;, &#39;from __main__ import splice1&#39;)<br>    t2 = Timer(&#39;splice2()&#39;, &#39;from __main__ import splice2&#39;)<br>    t3 = Timer(&#39;splice3()&#39;, &#39;from __main__ import splice3&#39;)<br>    print(t1.timeit(10000))<br>    print(t2.timeit(10000))<br>    print(t3.timeit(10000))<br>    print(t1.repeat(3, 10000))<br>    print(t2.repeat(3, 10000))<br>    print(t3.repeat(3, 10000))<br><br>结果：<br>3.4761613<br>2.151304<br>1.4258275999999999<br>[3.3471703, 3.3295017, 3.330456500000002]<br>[2.1222102000000014, 2.1164439, 2.1111174000000013]<br>[1.4194540000000018, 1.4226576000000009, 1.420928700000001]","like_count":0},{"had_liked":false,"id":130583,"user_name":"拉拉","can_delete":false,"product_type":"c1","uid":1064056,"ip_address":"","ucode":"D39F769ECB5623","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJtrrXAT1UfLicRWLQqoIIP3Gngs0uBwoduhxf6DezNnINxBgm9sZt2dpPMiaYB5rpCEiauXjmZSNIPA/132","comment_is_top":false,"comment_ctime":1567488178,"is_pvip":false,"replies":[{"id":"48985","content":"可以这么理解，不过一般没这个说法","user_name":"作者回复","comment_id":130583,"uid":"1259521","ip_address":"","utype":1,"ctime":1567565523,"user_name_real":"Jingxiao"}],"discussion_count":1,"race_medal":0,"score":"1567488178","product_id":100026901,"comment_content":"老师，可不可以认为字符串是一个由字符组成的特殊元祖","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466017,"discussion_content":"可以这么理解，不过一般没这个说法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567565523,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127945,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1566813211,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566813211","product_id":100026901,"comment_content":"方法二的空间复杂度应该比方法一高","like_count":0},{"had_liked":false,"id":122664,"user_name":"欧阳寂岚","can_delete":false,"product_type":"c1","uid":1573136,"ip_address":"","ucode":"E22C2893FAF545","user_header":"https://static001.geekbang.org/account/avatar/00/18/01/10/8c3a7ca6.jpg","comment_is_top":false,"comment_ctime":1565465315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565465315","product_id":100026901,"comment_content":"str.format格式化{}中好像可以传入索引或key，用法同函数的位置参数和关键字参数，字符串格式化还有一种用法%(variable)s，可以通过字典的方式进行格式化","like_count":0},{"had_liked":false,"id":121413,"user_name":"米雄雄","can_delete":false,"product_type":"c1","uid":1197009,"ip_address":"","ucode":"FBDF8D3D4BF8FA","user_header":"https://static001.geekbang.org/account/avatar/00/12/43/d1/3dd582a8.jpg","comment_is_top":false,"comment_ctime":1565137790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565137790","product_id":100026901,"comment_content":"老师，str的  join方法实现原理是？","like_count":0},{"had_liked":false,"id":119742,"user_name":"NO.9","can_delete":false,"product_type":"c1","uid":1336970,"ip_address":"","ucode":"B92F14B493406F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/fUDCLLob6DFS8kZcMUfxOc4qQHeQfW4rIMK5Ty2u2AqLemcdhVRw7byx85HrVicSvy5AiabE0YGMj5gVt8ibgrusA/132","comment_is_top":false,"comment_ctime":1564670196,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564670196","product_id":100026901,"comment_content":"import time<br><br>def fun1():<br>    x = time.time()<br>    s = &#39;&#39;<br>    for n in range(0, 20000):<br>        s += str(n)<br>    print(time.time() - x)<br><br>def fun2():<br>    x = time.time()<br>    l = []<br>    for n in range(0, 20000):<br>        l.append(str(n))<br>    s = &#39;&#39;.join(l)<br>    print(time.time() - x)<br>fun1()<br>fun2()<br>-------result-------------<br>0.007762908935546875<br>0.007363080978393555","like_count":0},{"had_liked":false,"id":119272,"user_name":"new","can_delete":false,"product_type":"c1","uid":1081910,"ip_address":"","ucode":"D02D595CDB9805","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/36/3c2d4416.jpg","comment_is_top":false,"comment_ctime":1564547665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564547665","product_id":100026901,"comment_content":"为什么我把上面两种方法用def方法封装起来，然后用timeit去计算时间，感觉join慢了很多啊，我用的python2.7的板本，而且前面的list和[]初始化方式我计算出来是前面的比较快，这个跟编译器和版本有关吗","like_count":0},{"had_liked":false,"id":117947,"user_name":"jxs1211","can_delete":false,"product_type":"c1","uid":1101006,"ip_address":"","ucode":"B7F1F2D84389E7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKELX1Rd1vmLRWibHib8P95NA87F4zcj8GrHKYQL2RcLDVnxNy1ia2geTWgW6L2pWn2kazrPNZMRVrIg/132","comment_is_top":false,"comment_ctime":1564197094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564197094","product_id":100026901,"comment_content":"我实测1000万的数据，还是方法三最优，为什么？<br>import time<br>start_time = time.perf_counter()<br>s = &#39;&#39;<br>for n in range(0, 10000000):<br>    s += str(n)<br>end_time = time.perf_counter()<br>print(&#39;Time elapse: {}&#39;.format(end_time - start_time))<br>Time elapse: 312.56297010000003<br><br>import time<br>start_time = time.perf_counter()<br>s = []<br>for n in range(0, 10000000):<br>    s.append(str(n))<br>&#39;&#39;.join(s)<br>end_time = time.perf_counter()<br>print(&#39;Time elapse: {}&#39;.format(end_time - start_time))<br>Time elapse: 4.801774399999999<br><br>import time<br>start_time = time.perf_counter()<br>s = &#39;&#39;.join(map(str, range(0, 10000000)))<br>end_time = time.perf_counter()<br>print(&#39;Time elapse: {}&#39;.format(end_time - start_time))<br>Time elapse: 3.0341564999999946<br>","like_count":0},{"had_liked":false,"id":108720,"user_name":"小铁匠","can_delete":false,"product_type":"c1","uid":1020626,"ip_address":"","ucode":"FB36F69CAF8936","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/d2/9da57d1b.jpg","comment_is_top":false,"comment_ctime":1561864354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561864354","product_id":100026901,"comment_content":"方法1得出的字符串没空格，方法2得出的字符串有空格，这样对比不公平吧？","like_count":0},{"had_liked":false,"id":108573,"user_name":"羊小看","can_delete":false,"product_type":"c1","uid":1488453,"ip_address":"","ucode":"90F58F80A75520","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJYEdMwBDUC6gYrUoI7092ocWJPyw1aP8xNOFXxOv7LEw1xj5a4icDibV7pd9vN45lXicXYjB7oYXVqg/132","comment_is_top":false,"comment_ctime":1561806642,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561806642","product_id":100026901,"comment_content":"试了下，10万条，map最优，其次是list，其次是string。是因为string每次都需要判断下是否有其他引用吗？","like_count":0},{"had_liked":false,"id":108012,"user_name":"Luove","can_delete":false,"product_type":"c1","uid":1545251,"ip_address":"","ucode":"73CD4D2C731B47","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7adYZoHGic7ZS6cp9OmBjh1C4ajCCpciblR3ib3jDtiaKrFdbT9J7sl2B9eNoCQicfx5QWgVVZQB74pfQ/132","comment_is_top":false,"comment_ctime":1561647590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561647590","product_id":100026901,"comment_content":"10万测，1优于2；100万测，2优于1；1000万测，2优于1。差别并不是非常大","like_count":0},{"had_liked":false,"id":106995,"user_name":"magician","can_delete":false,"product_type":"c1","uid":1483968,"ip_address":"","ucode":"1BD1125C7C907A","user_header":"https://static001.geekbang.org/account/avatar/00/16/a4/c0/c6880c07.jpg","comment_is_top":false,"comment_ctime":1561434624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561434624","product_id":100026901,"comment_content":"数据量大第二个更优","like_count":0},{"had_liked":false,"id":106150,"user_name":"nker","can_delete":false,"product_type":"c1","uid":1579743,"ip_address":"","ucode":"0F091CA4A6448E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLkwhBHmxviappKpsyLrooD47wHk9KgkVm2f1DzI2w86l3ibIK2iaHIz0gwcmWT9icNL1UMom6nqKyuBQ/132","comment_is_top":false,"comment_ctime":1561189742,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561189742","product_id":100026901,"comment_content":"print(&#39;no data available for person with id: {}, name: {}&#39;.format(id, name))<br>其实最新是用fstring更直观：print(f&#39;no data available for person with id: {id}, name: {name}&#39;)","like_count":0},{"had_liked":false,"id":103346,"user_name":"风中拾遗","can_delete":false,"product_type":"c1","uid":1122111,"ip_address":"","ucode":"C51CBB6454EDC3","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/3f/c9f7e73c.jpg","comment_is_top":false,"comment_ctime":1560417775,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560417775","product_id":100026901,"comment_content":"老师，这段话，“自从 Python2.5 开始，每次处理字符串的拼接操作时（str1 += str2），Python 首先会检测 str1 还有没有其他的引用。”，str1被引用是什么意思，是指str1被其它对象引用吗？还是指str1指向的内存，有其它对象也指向它？","like_count":0,"discussions":[{"author":{"id":2463488,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/OrfXQWvE0jIuibibw0dnicPMicygSnwcebSMKzwfIESL90iatS4QGEr8Ew9PjPGVNIptoSq6BL6UpiccKPf8WRuPMdaw/132","nickname":"Geek_13d1ac","note":"","ucode":"DB4EE174F44FE1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540900,"discussion_content":"str1 = &#39;0000&#39;\nls = [str1, 999, 222, 333]\nstr1 就被 ls 引用了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640189261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101923,"user_name":"当世界下起了雨","can_delete":false,"product_type":"c1","uid":1159252,"ip_address":"","ucode":"AE9D53920CAC3C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/54/1e3bd721.jpg","comment_is_top":false,"comment_ctime":1560056611,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560056611","product_id":100026901,"comment_content":"字符串格式化方面，f-string更方便啊。","like_count":0},{"had_liked":false,"id":100698,"user_name":"超","can_delete":false,"product_type":"c1","uid":1019528,"ip_address":"","ucode":"84165555837698","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8e/88/8cbf2527.jpg","comment_is_top":false,"comment_ctime":1559618409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559618409","product_id":100026901,"comment_content":"老师 我在项目开发过程中遇到一个问题想无处求助 想请教一下：<br>我通过python多进程的方式提供grpc服务 多个进程共享同一个端口号，但实际测试的时候 总是路由到第一个进程上去 想问下老师能否帮忙看下 我把代码上传到github上了 麻烦老师了啊<br>https:&#47;&#47;github.com&#47;sunxianchao&#47;python-grpc-multiprocessing","like_count":0},{"had_liked":false,"id":97891,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1495454,"ip_address":"","ucode":"BC5B33911FEC46","user_header":"https://static001.geekbang.org/account/avatar/00/16/d1/9e/fe7bc8df.jpg","comment_is_top":false,"comment_ctime":1558834856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558834856","product_id":100026901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":97853,"user_name":"倔强的潇洒小姐","can_delete":false,"product_type":"c1","uid":1167484,"ip_address":"","ucode":"A1CB6588A352E9","user_header":"https://static001.geekbang.org/account/avatar/00/11/d0/7c/868ccb4a.jpg","comment_is_top":false,"comment_ctime":1558795350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558795350","product_id":100026901,"comment_content":"import time<br><br># A<br>start_time1 = time.perf_counter()<br>s1 = &#39;&#39;<br>for n in range(0, 1000000):<br>    s1 += str(n)<br>end_time1 = time.perf_counter()<br>print(f&#39;time elapse1: {end_time1 - start_time1}&#39;)<br><br># B<br>start_time2 =time.perf_counter()<br>s2 = []<br>for n in range(0, 1000000):<br>    s2.append(str(n))<br>end_time2 = time.perf_counter()<br>print(f&#39;time elapse2: {end_time2 - start_time2}&#39;)<br><br># C<br>start_time3 = time.perf_counter()<br>s3 = &#39;&#39;.join(map(str, range(0, 1000000)))<br>end_time3 = time.perf_counter()<br>print(f&#39;time elapse3: {end_time3 - start_time3}&#39;)<br><br># D<br>start_time4 = time.perf_counter()<br>l = [str(i) for i in range(0, 1000000)]<br>s4 = &#39;&#39;.join(l)<br>end_time4 = time.perf_counter()<br>print(f&#39;time elapse4: {end_time4 - start_time4}&#39;)<br><br>时间输出：<br>time elapse1: 2.5405207<br>time elapse2: 0.38024557800000025<br>time elapse3: 0.256282659<br>time elapse4: 0.28742126300000015","like_count":0},{"had_liked":false,"id":97790,"user_name":"Primus","can_delete":false,"product_type":"c1","uid":1542798,"ip_address":"","ucode":"2DEB6FB6A29137","user_header":"https://static001.geekbang.org/account/avatar/00/17/8a/8e/7e735d8d.jpg","comment_is_top":false,"comment_ctime":1558774882,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558774882","product_id":100026901,"comment_content":"大牛凯👍 ，最新的f太邪气了","like_count":0},{"had_liked":false,"id":97673,"user_name":"小侠龙旋风","can_delete":false,"product_type":"c1","uid":1126441,"ip_address":"","ucode":"073F3924A99835","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/29/d6816ebf.jpg","comment_is_top":false,"comment_ctime":1558747209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558747209","product_id":100026901,"comment_content":"&gt;&gt;&gt; name = &#39;Eric&#39;<br>&gt;&gt;&gt; f&#39;Hello, my name is {name}&#39;<br>&#39;Hello, my name is Eric&#39;<br><br>&gt;&gt;&gt; number = 7<br>&gt;&gt;&gt; f&#39;My lucky number is {number}&#39;<br>&#39;My lucky number is 7&#39;<br><br>&gt;&gt;&gt; price = 19.99<br>&gt;&gt;&gt; f&#39;The price of this book is {price}&#39;<br>&#39;The price of this book is 19.99&#39;","like_count":0},{"had_liked":false,"id":97670,"user_name":"小侠龙旋风","can_delete":false,"product_type":"c1","uid":1126441,"ip_address":"","ucode":"073F3924A99835","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/29/d6816ebf.jpg","comment_is_top":false,"comment_ctime":1558746877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558746877","product_id":100026901,"comment_content":"import time<br><br>start = time.perf_counter()<br>s = &#39;&#39;<br>for n in range(0,100000):<br>\ts += str(n)<br>end = time.perf_counter()<br>print(&#39;方法一:{}&#39;.format(end-start))<br><br>start = time.perf_counter()<br>l = []<br>for n in range(0,100000):<br>\tl.append(str(n))<br>s = &#39; &#39;.join(l)<br>end = time.perf_counter()<br>print(&#39;方法二:{}&#39;.format(end-start))<br><br>start = time.perf_counter()<br>s = &#39; &#39;.join(map(str,range(0,100000)))<br>end = time.perf_counter()<br>print(&#39;方法三:{}&#39;.format(end-start))<br><br>执行结果：<br>方法一:0.091438522<br>方法二:0.079284917<br>方法三:0.045303374","like_count":0},{"had_liked":false,"id":97504,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1558686021,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1558686021","product_id":100026901,"comment_content":"Python原地扩充时，操作系统是否要检查后面的内存地址是否空闲？这种能力是C语言实现的吗","like_count":0},{"had_liked":false,"id":97466,"user_name":"小豹子","can_delete":false,"product_type":"c1","uid":1346267,"ip_address":"","ucode":"972F3E6BF0FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","comment_is_top":false,"comment_ctime":1558677396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558677396","product_id":100026901,"comment_content":"这课程哪是什么0基础学的课程啊，感觉学的都是些python老鸟，嘿嘿","like_count":0},{"had_liked":false,"id":97224,"user_name":"郭杰","can_delete":false,"product_type":"c1","uid":1139077,"ip_address":"","ucode":"8A14FC047A679B","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/85/6accd013.jpg","comment_is_top":false,"comment_ctime":1558614838,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558614838","product_id":100026901,"comment_content":"python的两个demo第一个比第二个运行时间长一些。第一个不停的要找最新的连接，跟第二个运行特性不一样","like_count":0},{"had_liked":false,"id":96947,"user_name":"Fergus","can_delete":false,"product_type":"c1","uid":1277066,"ip_address":"","ucode":"3A8AC741C49CEB","user_header":"https://static001.geekbang.org/account/avatar/00/13/7c/8a/bdeb76ac.jpg","comment_is_top":false,"comment_ctime":1558544949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558544949","product_id":100026901,"comment_content":"测试完对了楼1(jingxiao)和楼2(不瘦)的答案，很赞，Pythonic👍","like_count":0},{"had_liked":false,"id":96768,"user_name":"kilien","can_delete":false,"product_type":"c1","uid":1019714,"ip_address":"","ucode":"916416398CABD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/42/2e660674.jpg","comment_is_top":false,"comment_ctime":1558502314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558502314","product_id":100026901,"comment_content":"s = &#39;&#39;<br>for n in range(0, 100000):<br>    s += str(n)<br><br>这个例子其实不太好，确定了循环的次数，哪怕是循环100000次，时间复杂度也算O(1)，不能说是O(n)吧","like_count":0},{"had_liked":false,"id":96709,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1111985,"ip_address":"","ucode":"9DADD72C193296","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/b1/982ea185.jpg","comment_is_top":false,"comment_ctime":1558490316,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558490316","product_id":100026901,"comment_content":"老师，请问在上面例子中，L 列表 进行 str.join()  操作后，得到了什么数据格式。不太明白？","like_count":0},{"had_liked":false,"id":96678,"user_name":"zx钟 💤","can_delete":false,"product_type":"c1","uid":1398032,"ip_address":"","ucode":"193DF60890BE88","user_header":"https://static001.geekbang.org/account/avatar/00/15/55/10/f2f81983.jpg","comment_is_top":false,"comment_ctime":1558487321,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558487321","product_id":100026901,"comment_content":"python3.6支持 「f’{}’」","like_count":0},{"had_liked":false,"id":96666,"user_name":"TechDP","can_delete":false,"product_type":"c1","uid":1140137,"ip_address":"","ucode":"51842BE9C94A12","user_header":"","comment_is_top":false,"comment_ctime":1558486138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558486138","product_id":100026901,"comment_content":"自从 Python2.5 开始，每次处理字符串的拼接操作时（str1 += str2），Python 首先会检测 str1 还有没有其他的引用。如果没有的话，就会尝试原地扩充字符串 buffer 的大小，而不是重新分配一块内存来创建新的字符串并拷贝。<br><br>如果有其他引用，该如何处理？难道其他引用的值不变？","like_count":0},{"had_liked":false,"id":96578,"user_name":"noodles","can_delete":false,"product_type":"c1","uid":1525221,"ip_address":"","ucode":"12AFBB93BBCA44","user_header":"https://static001.geekbang.org/account/avatar/00/17/45/e5/4c7e6dfd.jpg","comment_is_top":false,"comment_ctime":1558451684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558451684","product_id":100026901,"comment_content":"%%timeit<br><br>s = &#39;&#39;<br><br>for i in range(0, 10*6):<br><br>    s += str(i)<br><br>20 µs ± 746 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)<br><br>%%timeit<br><br>s = &#39;&#39;.join([str(i) for i in range(0, 10*6)])<br><br>17.7 µs ± 687 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)<br><br>%%timeit<br><br>s = &#39;&#39;.join(map(str, range(0, 10*6)))<br><br>13.7 µs ± 567 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)<br>","like_count":0},{"had_liked":false,"id":96423,"user_name":"Carpe Diem","can_delete":false,"product_type":"c1","uid":1475369,"ip_address":"","ucode":"111129BB2DC67E","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/29/b41b475e.jpg","comment_is_top":false,"comment_ctime":1558418391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558418391","product_id":100026901,"comment_content":"个人觉得python课程的重点更多应该在代码高效简化而不是运行效率上吧","like_count":0},{"had_liked":false,"id":96419,"user_name":"汪zZ","can_delete":false,"product_type":"c1","uid":1234757,"ip_address":"","ucode":"8B93062A683902","user_header":"https://static001.geekbang.org/account/avatar/00/12/d7/45/d1621188.jpg","comment_is_top":false,"comment_ctime":1558417805,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1558417805","product_id":100026901,"comment_content":"当然是第一种，<br>第一种是在字符串上增加，类型是固定的。<br>第二种相当于列表增加，python的[]可以放入不同类型的数据，所以速度会慢一些。","like_count":0},{"had_liked":false,"id":96331,"user_name":"康康妈妈-luli","can_delete":false,"product_type":"c1","uid":1164392,"ip_address":"","ucode":"BFB1BFEC610580","user_header":"https://static001.geekbang.org/account/avatar/00/11/c4/68/591a6189.jpg","comment_is_top":false,"comment_ctime":1558399969,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558399969","product_id":100026901,"comment_content":"我想问下map函数和for循环的效率问题？","like_count":0},{"had_liked":false,"id":96219,"user_name":"rogerr","can_delete":false,"product_type":"c1","uid":1538280,"ip_address":"","ucode":"735EE845D4560F","user_header":"https://static001.geekbang.org/account/avatar/00/17/78/e8/b79240e8.jpg","comment_is_top":false,"comment_ctime":1558359598,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558359598","product_id":100026901,"comment_content":"老师你好，请教一个问题，对一个文本进行关键词查找替换，大概有20多个不同关键词，先用re模块的compile方法的正则表达式匹配出来，再用findall方法提取出这个关键词变量，最后用sub方法替换之，这样每执行一次替换操作，需要把上面步骤重复一次，有没有可能实现一次性全部替换呢？","like_count":0},{"had_liked":false,"id":96150,"user_name":"Geek_6210136","can_delete":false,"product_type":"c1","uid":1528699,"ip_address":"","ucode":"82F5BDF9F14F2E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJQicDg3XUa0r4g9faibicUjsf4KbWiaqgUibltKIibv0xsFbkDcYPBcpZ2biaicQpBqZQhnD4IhaaH8tk7hw/132","comment_is_top":false,"comment_ctime":1558345398,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558345398","product_id":100026901,"comment_content":"找到组织了，真好，催稿，等着看！","like_count":0},{"had_liked":false,"id":96108,"user_name":"Hoo-Ah","can_delete":false,"product_type":"c1","uid":1306913,"ip_address":"","ucode":"823093A6C7DEE7","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/21/52e8267b.jpg","comment_is_top":false,"comment_ctime":1558333414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558333414","product_id":100026901,"comment_content":"第一种更优，第二种需要进行两次迭代。使用map高级函数原来更快，学到了。","like_count":0},{"had_liked":false,"id":96104,"user_name":"乔克","can_delete":false,"product_type":"c1","uid":1315273,"ip_address":"","ucode":"28A797A4235B78","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/c9/c3eae895.jpg","comment_is_top":false,"comment_ctime":1558331512,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558331512","product_id":100026901,"comment_content":"测试：<br>import time<br>start_time = time.time()<br>s = &#39;&#39;<br>for n in range(0, 100000):<br>    s += str(n)<br>stop_time = time.time()<br>print(&quot;string: {}&quot;.format(stop_time - start_time))<br><br>start_time = time.time()<br>l = []<br>for n in range(0, 100000):<br>    l.append(str(n))<br>    <br>s = &#39; &#39;.join(l)<br>stop_time = time.time()<br>print(&quot;list: {}&quot;.format(stop_time - start_time))<br>输出：<br>string: 0.13813471794128418<br>list: 0.241349458694458<br><br>按测试输出来看，第一种更优，但是更多情况下，我习惯于使用第二种。","like_count":0},{"had_liked":false,"id":96102,"user_name":"Mr.L","can_delete":false,"product_type":"c1","uid":1486770,"ip_address":"","ucode":"0E7AD06356771A","user_header":"https://static001.geekbang.org/account/avatar/00/16/af/b2/2aaa36d5.jpg","comment_is_top":false,"comment_ctime":1558331220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558331220","product_id":100026901,"comment_content":"实际执行两段代码后 ，第二段代码使用实际比第一段使用实际略短，但是按文中所说，两段代码的时间复杂度应该都是O(n)才对的吧，不理解为什么会产生这样的差别","like_count":0},{"had_liked":false,"id":96089,"user_name":"栾~龟虽寿！","can_delete":false,"product_type":"c1","uid":1504671,"ip_address":"","ucode":"219B38C08979FE","user_header":"https://static001.geekbang.org/account/avatar/00/16/f5/9f/1509d389.jpg","comment_is_top":false,"comment_ctime":1558326373,"is_pvip":false,"replies":[{"id":"34370","content":"谢谢！","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1558334663,"ip_address":"","comment_id":96089,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558326373","product_id":100026901,"comment_content":"感谢一切，说了更优方法的，感谢写了代码，并写了结果的，咱进步。你们是怎么把代码写进留言的？手机上写代码？请指教","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450716,"discussion_content":"谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558334663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96083,"user_name":"hlz-123","can_delete":false,"product_type":"c1","uid":1433586,"ip_address":"","ucode":"B7E5EF0C260BD2","user_header":"","comment_is_top":false,"comment_ctime":1558324025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558324025","product_id":100026901,"comment_content":"通过下面程序运行发现，第二种方法运行时间更短，猜测原因：数组每次分配的空间比较大，空间不够再扩充，扩充次数相对较少，而字符串每次分配空间较小，空间扩充频繁，因此时间较长。<br>import time<br>start=time.perf_counter()<br>s = &#39;&#39;<br>for n in range(0, 100000):<br>    s += str(n)<br>end=time.perf_counter()<br>print(&#39;time elapse={}&#39;.format(end-start))<br>time elapse=0.11685118600000001<br><br>start=time.perf_counter()<br>l = []<br>for n in range(0, 100000):<br>    l.append(str(n))<br>s = &#39; &#39;.join(l)<br>end=time.perf_counter()<br>print(&#39;time elapse={}&#39;.format(end-start))<br>time elapse=0.08097620599999997","like_count":0},{"had_liked":false,"id":96074,"user_name":"Wing·三金","can_delete":false,"product_type":"c1","uid":1341402,"ip_address":"","ucode":"6B9F5822C3717F","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/da/54c663f3.jpg","comment_is_top":false,"comment_ctime":1558321231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558321231","product_id":100026901,"comment_content":"补充：join的运行时间只占了很小一部分，不到10%，复杂度推测大致是O(logn)。综上，list的扩充速度优于str，且join的速度在大数面前可忽略。","like_count":0},{"had_liked":false,"id":96061,"user_name":"jkhcw","can_delete":false,"product_type":"c1","uid":1324237,"ip_address":"","ucode":"300F1FEAEA9EB4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/EvqrQ1wMs4SzC8dSBjAfVdEZ3yDT0bDUMicfRLq6BOSzjGFhCownt3S5MERXLpOpLmyJXCuyWbeOQG3ibzy0b4ibA/132","comment_is_top":false,"comment_ctime":1558318374,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558318374","product_id":100026901,"comment_content":"+=更优，因为少了参数复制和函数调用的栈消耗","like_count":0},{"had_liked":false,"id":96051,"user_name":"知行","can_delete":false,"product_type":"c1","uid":1088922,"ip_address":"","ucode":"395093B476FA11","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/9a/dd0be774.jpg","comment_is_top":false,"comment_ctime":1558316613,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558316613","product_id":100026901,"comment_content":"第一种更高效","like_count":0},{"had_liked":false,"id":96030,"user_name":"林松","can_delete":false,"product_type":"c1","uid":1164127,"ip_address":"","ucode":"9A48F890D74252","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erwib5whv3NLYeAicibgceC0eC7J3pkqEKf4DUEUh8xcnDhv4djAZTbSIoh7WEIuJTqNsjbtaribde5ag/132","comment_is_top":false,"comment_ctime":1558314348,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558314348","product_id":100026901,"comment_content":"老师好。个人更偏向第一种实现，但两者的时间复杂度应该都是O(n)吧，效率应该差不多。","like_count":0},{"had_liked":false,"id":96024,"user_name":"陈柏林","can_delete":false,"product_type":"c1","uid":1282562,"ip_address":"","ucode":"2636649821FAB9","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/02/288a6b8c.jpg","comment_is_top":false,"comment_ctime":1558313560,"is_pvip":false,"replies":[{"id":"34373","content":"意思是str1如果在其他地方没有引用，当执行str1 += str2时，就会in place的将str2 append到字符串str1的尾部，而不会重新创建新的字符串并拷贝所有内容","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1558335110,"ip_address":"","comment_id":96024,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1558313560","product_id":100026901,"comment_content":"老师这段话的意思不是跟理解，不是应该str1有引用了就扩张吗（自从 Python2.5 开始，每次处理字符串的拼接操作时（str1 += str2），Python 首先会检测 str1 还有没有其他的引用。如果没有的话，就会尝试原地扩充字符串 buffer 的大小，而不是重新分配一块内存来创建新的字符串并拷贝。）","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450681,"discussion_content":"意思是str1如果在其他地方没有引用，当执行str1 += str2时，就会in place的将str2 append到字符串str1的尾部，而不会重新创建新的字符串并拷贝所有内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558335110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2682218,"avatar":"","nickname":"Geek_aca341","note":"","ucode":"639D865A8D5ACD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":540211,"discussion_content":"这里如果由于内存碎片不够用，是不是会重新开辟一块更大的内存去重新分配？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639989860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":450681,"ip_address":""},"score":540211,"extra":""}]}]},{"had_liked":false,"id":96021,"user_name":"西红柿牛腩","can_delete":false,"product_type":"c1","uid":1152898,"ip_address":"","ucode":"DEC94B4A647A92","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/82/394c88ad.jpg","comment_is_top":false,"comment_ctime":1558313240,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558313240","product_id":100026901,"comment_content":"f-strings没得姓名？","like_count":0},{"had_liked":false,"id":96018,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1558313120,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558313120","product_id":100026901,"comment_content":"现在一直在用f-string,听说性能比format更好","like_count":0},{"had_liked":false,"id":96011,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1558311988,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558311988","product_id":100026901,"comment_content":"+=更优，第二个还需要二次遍历","like_count":0},{"had_liked":false,"id":96001,"user_name":"IT蜗壳-Tango","can_delete":false,"product_type":"c1","uid":1000612,"ip_address":"","ucode":"92330844C1EF9C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/a4/7a45d979.jpg","comment_is_top":false,"comment_ctime":1558309221,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1558309221","product_id":100026901,"comment_content":"第六天打卡。","like_count":0},{"had_liked":false,"id":95997,"user_name":"阿杰","can_delete":false,"product_type":"c1","uid":1258218,"ip_address":"","ucode":"F9DFA1CE265912","user_header":"https://static001.geekbang.org/account/avatar/00/13/32/ea/2c50e4a0.jpg","comment_is_top":false,"comment_ctime":1558306033,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558306033","product_id":100026901,"comment_content":"感觉是第一种方法更优（即s += str(n)）<br> ","like_count":0},{"had_liked":false,"id":95995,"user_name":"voc","can_delete":false,"product_type":"c1","uid":1526888,"ip_address":"","ucode":"EDAFFBA02550FF","user_header":"https://static001.geekbang.org/account/avatar/00/17/4c/68/77a0ac2d.jpg","comment_is_top":false,"comment_ctime":1558305345,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558305345","product_id":100026901,"comment_content":"高版本的f字符串似乎更加好用，不知和format是否有性能差异？","like_count":0},{"had_liked":false,"id":95993,"user_name":"Vokey","can_delete":false,"product_type":"c1","uid":1311158,"ip_address":"","ucode":"6F248223FF0885","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/b6/e2184e3c.jpg","comment_is_top":false,"comment_ctime":1558293425,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558293425","product_id":100026901,"comment_content":"s = &#39;&#39;<br>for n in range(0, 100000):<br>    s += str(n)<br>这种写法性能应该略优，省去了列表操作","like_count":0},{"had_liked":false,"id":95986,"user_name":"yshan","can_delete":false,"product_type":"c1","uid":1136788,"ip_address":"","ucode":"A2ECDCDA52B8EE","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/94/c8bc2b59.jpg","comment_is_top":false,"comment_ctime":1558285876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558285876","product_id":100026901,"comment_content":"每晚打卡。个人觉得+=更优","like_count":0},{"had_liked":false,"id":95981,"user_name":"Xs.Ten","can_delete":false,"product_type":"c1","uid":1128376,"ip_address":"","ucode":"2368B9BDDDEE2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/37/b8/c887a5ea.jpg","comment_is_top":false,"comment_ctime":1558283380,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1558283380","product_id":100026901,"comment_content":"先打卡，再学习。老师节奏厉害，点赞！","like_count":0}]}