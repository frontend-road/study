{"id":714249,"title":"18｜CAMEL：通过角色扮演脑暴一个鲜花营销方案","content":"<p>你好，我是黄佳，欢迎来到LangChain实战课！</p><p>大模型的成功，在很大程度上依赖于用户的输入来引导对话生成。如果用户能够详细描述他们的任务和需求，并与ChatGPT建立一个连贯的聊天上下文，那么ChatGPT往往能提供更精确和高质量的答案。但是，为模型提供这种引导是一项既费时又费力的任务。</p><p>这就引出了一个有趣的问题：<strong>能否让ChatGPT自己生成这些引导文本呢？</strong></p><p>基于这个想法，KAUST（阿卜杜拉国王大学）的研究团队提出了一个名为CAMEL的框架。CAMEL采用了一种基于“角色扮演”方式的大模型交互策略。在这种策略中，不同的AI代理扮演不同的角色，通过互相交流来完成任务。</p><h2>CAMEL 交流式代理框架</h2><p>下面我们一起来看看CAMEL——这个多AI通过角色扮演进行交互的框架，以及它在LangChain中的具体实现。</p><p><img src=\"https://static001.geekbang.org/resource/image/57/c3/578c7a5a91ffe7007c0fe4cea3d20bc3.png?wh=694x290\" alt=\"\"></p><p>CAMEL，字面意思是骆驼。这个框架来自于论文《<a href=\"https://arxiv.org/pdf/2303.17760.pdf\">CAMEL: Communicative Agents for “Mind” Exploration of Large Scale Language Model Society</a>》（CAMEL：用于大规模语言模型社会的“心智”探索的交流式代理）。这里面所谓的CAMEL，实际上来自<strong>沟通（也就是交流）</strong>、<strong>代理</strong>、<strong>心智</strong>、<strong>探索</strong>以及 <strong>LLM</strong> 这五个单词的英文首字母。</p><!-- [[[read_end]]] --><p>CAMEL框架旨在通过角色扮演来促进交流代理之间的自主合作，并为其“认知”过程提供洞察。这种方法涉及使用启示式提示来指导聊天代理完成任务，同时保持与人类意图的一致性。这个框架为研究多代理系统的合作行为和能力提供了一种可扩展的方法。</p><p>上面这段介绍里面新名词不少，我们要一个个解释一下。</p><ul>\n<li><strong>交流式代理</strong> Communicative Agents，是一种可以与人类或其他代理进行交流的计算机程序。这些代理可以是聊天机器人、智能助手或任何其他需要与人类交流的软件。为了使这些代理能够更好地与人类交流，研究人员一直在寻找方法来提高它们的交流能力。</li>\n<li><strong>角色扮演</strong> role-playing，则是这篇论文提出的主要思路，它允许交流代理扮演不同的角色，以更好地与人类或其他代理交流。这意味着代理可以模仿人类的行为，理解人类的意图，并据此做出反应。</li>\n<li><strong>启示式提示</strong> inception prompting，是一种指导代理完成任务的方法。通过给代理提供一系列的提示或指示，代理可以更好地理解它应该如何行动。这种方法可以帮助代理更好地与人类交流，并完成与人类的合作任务。</li>\n</ul><p>这里的核心创新点是，通过角色扮演和启示式提示的框架来引导代理的交流过程。</p><h2>股票交易场景设计</h2><p>论文中还提出了下面的目标场景和角色扮演设置。</p><p><img src=\"https://static001.geekbang.org/resource/image/ee/16/ee865a375320fc2e9e3e690e24766e16.png?wh=2676x1528\" alt=\"\"></p><h3>场景和角色设置</h3><p><strong>人类用户角色</strong>：负责提供要实现的想法，如为股票市场开发一个交易机器人。</p><p>人类可能不知道如何实现这个想法，但我们需要指定可能实现这个想法的角色，例如Python程序员和股票交易员。</p><p><strong>任务指定代理</strong>（Task Specifier Agent）：负责根据输入的想法为AI助手和AI用户确定一个具体的任务。因为人类用户的想法可能比较模糊，所以任务指定代理将提供详细描述，以使想法具体化。</p><p>描述：<strong>开发一个具有情感分析能力的交易机器人，该机器人可以监控社交媒体平台上特定股票的正面或负面评论，并根据情感分析结果执行交易。</strong></p><p>这样，就为AI助手提供了一个明确的任务来解决。</p><p>这里多说一句，之所以引入任务指定代理，是因为对话代理通常需要一个具体的任务提示来实现任务，对于非领域专家来说，创建这样一个具体的任务提示可能是具有挑战性或耗时的。</p><p>那么，参与此任务的 AI 角色就包括：</p><ul>\n<li>一个以Python程序员为身份的 <strong>AI</strong> <strong>助手</strong>代理</li>\n<li>一个以股票交易员为身份的 <strong>AI</strong> <strong>用户</strong>代理</li>\n</ul><p>接收到初步想法和角色分配后，AI用户和AI助手通过指令跟随的方式互相聊天，他们将通过多轮对话合作完成指定任务，直到 AI 用户确定任务已完成。</p><p>其中，AI 用户是任务规划者，负责向 AI 助手发出以完成任务为导向的指令。另一方面，AI 助手是任务执行者，被设计为遵循 AI 用户指令并提供具体的解决方案，在这里他将给出设计股票交易系统的具体Python代码。</p><h3>提示模板设计</h3><p>在CAMEL这个角色扮演框架中，Prompt Engineering非常关键。与其他对话语言模型技术有所不同，这种提示工程只在角色扮演的初始阶段进行，主要用于明确任务和分配角色。当会话开始后，AI助手和AI用户会自动地相互给出提示，直到对话结束。这种方法被称为 “Inception Prompting”。</p><p>Inception Prompting 包括三种类型的提示：任务明确提示、AI助手提示和AI用户提示。在论文中，给出了两个提示模板作为示例。</p><p>在论文中，AI Society和AI Code是两种不同的提示模板。这些提示模板被设计用来指导AI助手与AI用户之间的交互。</p><p>AI Society：这个提示模板主要关注AI助手在多种不同角色中的表现。例如，AI助手可能扮演会计师、演员、设计师、医生、工程师等多种角色，而用户也可能有各种不同的角色，如博主、厨师、游戏玩家、音乐家等。这种设置是为了研究AI助手如何与不同角色的用户合作以完成各种任务。</p><p>AI Code：这个提示模板主要关注与编程相关的任务。它涉及到多种编程语言，如Java、Python、JavaScript等，以及多个领域，如会计、农业、生物学等。这种设置是为了研究AI助手如何在特定的编程语言和领域中帮助用户完成任务。</p><p><img src=\"https://static001.geekbang.org/resource/image/82/f4/8258bbe76e664b41ce636bfa8655c4f4.png?wh=1444x1595\" alt=\"\" title=\"AI Society（社会）场景的提示模板\"></p><p><img src=\"https://static001.geekbang.org/resource/image/d8/e2/d824e74e324556232d86f20a3ab6e6e2.png?wh=1439x1631\" alt=\"\" title=\"AI Code（编码）场景的提示模板\"></p><p>以AI Society为例，这个提示模板是为AI助手系统和AI用户系统设计的，它在角色扮演的开始时就给出了初始提示。以下是对这个模板的详细解释。</p><p><img src=\"https://static001.geekbang.org/resource/image/cc/a5/cc725b0b74f2a066acdefc7c9a3c7da5.jpg?wh=1668x1008\" alt=\"\"></p><p>这个提示模板为AI助手和AI用户提供了一个明确的框架，确保它们在对话中的行为是有序、一致和有效的。可以看出，与之前传统的提示设计不同，这种提示的设计更加复杂和细致，更像是一种交互协议或规范。这种设计在一定程度上提高了AI与AI之间自主合作的能力，并能更好地模拟人类之间的交互过程。</p><h2>易速鲜花营销方案</h2><p>好，看完了论文的思路和论文中给出的示例，我们就要开始以“易速鲜花”为背景进行自己的CAMEL实战了。</p><h3>准备工作</h3><p>先导入API密钥和所需要的库。</p><pre><code class=\"language-plain\"># 设置OpenAI API密钥\nimport os\nos.environ[\"OPENAI_API_KEY\"] = 'Your Key'\n\n# 导入所需的库\nfrom typing import List\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.prompts.chat import (\n&nbsp; &nbsp; SystemMessagePromptTemplate,\n&nbsp; &nbsp; HumanMessagePromptTemplate,\n)\nfrom langchain.schema import (\n&nbsp; &nbsp; AIMessage,\n&nbsp; &nbsp; HumanMessage,\n&nbsp; &nbsp; SystemMessage,\n&nbsp; &nbsp; BaseMessage,\n)\n</code></pre><h3>定义 CAMELAgent 类</h3><p>下面，定义CAMELAgent类。这是一个核心类，用于管理与语言模型的交互。它包含了初始化消息、更新消息和与模型进行交互的方法。</p><pre><code class=\"language-plain\"># 定义CAMELAgent类，用于管理与语言模型的交互\nclass CAMELAgent:\n&nbsp; &nbsp; def __init__(\n&nbsp; &nbsp; &nbsp; &nbsp; self,\n&nbsp; &nbsp; &nbsp; &nbsp; system_message: SystemMessage,\n&nbsp; &nbsp; &nbsp; &nbsp; model: ChatOpenAI,\n&nbsp; &nbsp; ) -&gt; None:\n&nbsp; &nbsp; &nbsp; &nbsp; self.system_message = system_message\n&nbsp; &nbsp; &nbsp; &nbsp; self.model = model\n&nbsp; &nbsp; &nbsp; &nbsp; self.init_messages()\n\n&nbsp; &nbsp; def reset(self) -&gt; None:\n&nbsp; &nbsp; &nbsp; &nbsp; \"\"\"重置对话消息\"\"\"\n&nbsp; &nbsp; &nbsp; &nbsp; self.init_messages()\n&nbsp; &nbsp; &nbsp; &nbsp; return self.stored_messages\n\n&nbsp; &nbsp; def init_messages(self) -&gt; None:\n&nbsp; &nbsp; &nbsp; &nbsp; \"\"\"初始化对话消息\"\"\"\n&nbsp; &nbsp; &nbsp; &nbsp; self.stored_messages = [self.system_message]\n\n&nbsp; &nbsp; def update_messages(self, message: BaseMessage) -&gt; List[BaseMessage]:\n&nbsp; &nbsp; &nbsp; &nbsp; \"\"\"更新对话消息列表\"\"\"\n&nbsp; &nbsp; &nbsp; &nbsp; self.stored_messages.append(message)\n&nbsp; &nbsp; &nbsp; &nbsp; return self.stored_messages\n\n&nbsp; &nbsp; def step(self, input_message: HumanMessage) -&gt; AIMessage:\n&nbsp; &nbsp; &nbsp; &nbsp; \"\"\"进行一步交互，并获取模型的响应\"\"\"\n&nbsp; &nbsp; &nbsp; &nbsp; messages = self.update_messages(input_message)\n\n&nbsp; &nbsp; &nbsp; &nbsp; output_message = self.model(messages)\n&nbsp; &nbsp; &nbsp; &nbsp; self.update_messages(output_message)\n\n&nbsp; &nbsp; &nbsp; &nbsp; return output_message\n</code></pre><h3>预设角色和任务提示</h3><p>预设的角色和任务提示，这部分定义了AI助手和用户的角色名称、任务描述以及每次讨论的字数限制。</p><pre><code class=\"language-plain\"># 设置一些预设的角色和任务提示\nassistant_role_name = \"花店营销专员\"\nuser_role_name = \"花店老板\"\ntask = \"整理出一个夏季玫瑰之夜的营销活动的策略\"\nword_limit = 50 &nbsp;# 每次讨论的字数限制\n</code></pre><p>这里，assistant_role_name 和 user_role_name 是用来定义代理的角色。这两个角色在后续的对话中扮演着不同的功能，具体设定如下。</p><ul>\n<li><code>assistant_role_name = \"花店营销专员\"</code>：这是定义助手的角色。在此设定中，助手被视为一名花店营销专员，主要职责是为花店老板（即用户）提供关于营销活动的建议和策略。</li>\n<li><code>user_role_name = \"花店老板\"</code>：这是定义用户的角色。用户在这里是花店的老板，他们可能会向营销专员（即助手）提出关于花店推广活动的需求或询问，然后由营销专员来答复和提供建议。</li>\n</ul><p>这种角色设定，主要是为了模拟现实中的交互场景，使得聊天代理能够更好地理解任务，并为实现这些任务提供有效的解决方案。通过为每个聊天代理设定一个特定的角色，可以使聊天的过程更加有目的性和效率，同时也能提供更为真实的人类对话体验。</p><h3>任务指定代理</h3><p>然后，使用任务指定代理（Task Specifier）来明确任务描述。这是CAMEL框架的一个关键步骤，它确保了任务描述的具体性和清晰性。</p><pre><code class=\"language-plain\"># 定义与指定任务相关的系统提示\ntask_specifier_sys_msg = SystemMessage(content=\"你可以让任务更具体。\")\ntask_specifier_prompt = \"\"\"这是一个{assistant_role_name}将帮助{user_role_name}完成的任务：{task}。\n请使其更具体化。请发挥你的创意和想象力。\n请用{word_limit}个或更少的词回复具体的任务。不要添加其他任何内容。\"\"\"\n\ntask_specifier_template = HumanMessagePromptTemplate.from_template(\n&nbsp; &nbsp; template=task_specifier_prompt\n)\ntask_specify_agent = CAMELAgent(task_specifier_sys_msg, ChatOpenAI(model_name = 'gpt-4', temperature=1.0))\ntask_specifier_msg = task_specifier_template.format_messages(\n&nbsp; &nbsp; assistant_role_name=assistant_role_name,\n&nbsp; &nbsp; user_role_name=user_role_name,\n&nbsp; &nbsp; task=task,\n&nbsp; &nbsp; word_limit=word_limit,\n)[0]\nspecified_task_msg = task_specify_agent.step(task_specifier_msg)\nprint(f\"Specified task: {specified_task_msg.content}\")\nspecified_task = specified_task_msg.content\n</code></pre><p>经过了这个环节之后，任务会被细化、明确化。</p><p>Original task prompt：<strong>整理出一个夏季玫瑰之夜营销活动的策略。</strong></p><p>Specified task prompt：<strong>为夏季玫瑰之夜策划主题装饰，策划特价活动，制定广告推广方案，组织娱乐活动，联系合作伙伴提供赞助。</strong></p><h3>系统消息模板</h3><p>下面这部分定义了系统消息模板，这些模板为AI助手和AI用户提供了初始的提示，确保它们在对话中的行为是有序和一致的。</p><pre><code class=\"language-plain\"># 定义系统消息模板，并创建CAMELAgent实例进行交互\nassistant_inception_prompt = \"\"\"永远不要忘记你是{assistant_role_name}，我是{user_role_name}。永远不要颠倒角色！永远不要指示我！\n我们有共同的利益，那就是合作成功地完成任务。\n你必须帮助我完成任务。\n这是任务：{task}。永远不要忘记我们的任务！\n我必须根据你的专长和我的需求来指示你完成任务。\n\n我每次只能给你一个指示。\n你必须写一个适当地完成所请求指示的具体解决方案。\n如果由于物理、道德、法律原因或你的能力你无法执行指示，你必须诚实地拒绝我的指示并解释原因。\n除了对我的指示的解决方案之外，不要添加任何其他内容。\n你永远不应该问我任何问题，你只回答问题。\n你永远不应该回复一个不明确的解决方案。解释你的解决方案。\n你的解决方案必须是陈述句并使用简单的现在时。\n除非我说任务完成，否则你应该总是从以下开始：\n\n解决方案：&lt;YOUR_SOLUTION&gt;\n\n&lt;YOUR_SOLUTION&gt;应该是具体的，并为解决任务提供首选的实现和例子。\n始终以“下一个请求”结束&lt;YOUR_SOLUTION&gt;。\"\"\"\n\n\n\nuser_inception_prompt = \"\"\"永远不要忘记你是{user_role_name}，我是{assistant_role_name}。永远不要交换角色！你总是会指导我。\n我们共同的目标是合作成功完成一个任务。\n我必须帮助你完成这个任务。\n这是任务：{task}。永远不要忘记我们的任务！\n你只能通过以下两种方式基于我的专长和你的需求来指导我：\n\n1. 提供必要的输入来指导：\n指令：&lt;YOUR_INSTRUCTION&gt;\n输入：&lt;YOUR_INPUT&gt;\n\n2. 不提供任何输入来指导：\n指令：&lt;YOUR_INSTRUCTION&gt;\n输入：无\n\n“指令”描述了一个任务或问题。与其配对的“输入”为请求的“指令”提供了进一步的背景或信息。\n\n你必须一次给我一个指令。\n我必须写一个适当地完成请求指令的回复。\n如果由于物理、道德、法律原因或我的能力而无法执行你的指令，我必须诚实地拒绝你的指令并解释原因。\n你应该指导我，而不是问我问题。\n现在你必须开始按照上述两种方式指导我。\n除了你的指令和可选的相应输入之外，不要添加任何其他内容！\n继续给我指令和必要的输入，直到你认为任务已经完成。\n当任务完成时，你只需回复一个单词&lt;CAMEL_TASK_DONE&gt;。\n除非我的回答已经解决了你的任务，否则永远不要说&lt;CAMEL_TASK_DONE&gt;。\"\"\"\n</code></pre><p>之后，根据预设的角色和任务提示生成系统消息。</p><pre><code class=\"language-plain\"># 根据预设的角色和任务提示生成系统消息\ndef get_sys_msgs(assistant_role_name: str, user_role_name: str, task: str):\n&nbsp; &nbsp; assistant_sys_template = SystemMessagePromptTemplate.from_template(\n&nbsp; &nbsp; &nbsp; &nbsp; template=assistant_inception_prompt\n&nbsp; &nbsp; )\n&nbsp; &nbsp; assistant_sys_msg = assistant_sys_template.format_messages(\n&nbsp; &nbsp; &nbsp; &nbsp; assistant_role_name=assistant_role_name,\n&nbsp; &nbsp; &nbsp; &nbsp; user_role_name=user_role_name,\n&nbsp; &nbsp; &nbsp; &nbsp; task=task,\n&nbsp; &nbsp; )[0]\n\n&nbsp; &nbsp; user_sys_template = SystemMessagePromptTemplate.from_template(\n&nbsp; &nbsp; &nbsp; &nbsp; template=user_inception_prompt\n&nbsp; &nbsp; )\n&nbsp; &nbsp; user_sys_msg = user_sys_template.format_messages(\n&nbsp; &nbsp; &nbsp; &nbsp; assistant_role_name=assistant_role_name,\n&nbsp; &nbsp; &nbsp; &nbsp; user_role_name=user_role_name,\n&nbsp; &nbsp; &nbsp; &nbsp; task=task,\n&nbsp; &nbsp; )[0]\n\n&nbsp; &nbsp; return assistant_sys_msg, user_sys_msg\n\nassistant_sys_msg, user_sys_msg = get_sys_msgs(\n&nbsp; &nbsp; assistant_role_name, user_role_name, specified_task\n)\n</code></pre><h3>创建 Agent 实例</h3><p>创建助手和用户的CAMELAgent实例，并初始化对话互动，使用CAMELAgent类的实例来模拟助手和用户之间的对话交互。</p><pre><code class=\"language-plain\"># 创建助手和用户的CAMELAgent实例\nassistant_agent = CAMELAgent(assistant_sys_msg, ChatOpenAI(temperature=0.2))\nuser_agent = CAMELAgent(user_sys_msg, ChatOpenAI(temperature=0.2))\n\n# 重置两个agent\nassistant_agent.reset()\nuser_agent.reset()\n\n# 初始化对话互动\nassistant_msg = HumanMessage(\n&nbsp; &nbsp; content=(\n&nbsp; &nbsp; &nbsp; &nbsp; f\"{user_sys_msg.content}。\"\n&nbsp; &nbsp; &nbsp; &nbsp; \"现在开始逐一给我介绍。\"\n&nbsp; &nbsp; &nbsp; &nbsp; \"只回复指令和输入。\"\n&nbsp; &nbsp; )\n)\n\nuser_msg = HumanMessage(content=f\"{assistant_sys_msg.content}\")\nuser_msg = assistant_agent.step(user_msg)\n\nprint(f\"Original task prompt:\\n{task}\\n\")\nprint(f\"Specified task prompt:\\n{specified_task}\\n\")\n</code></pre><p>这里，assistant_inception_prompt 和 user_inception_prompt 是两个关键的提示，用于引导聊天代理的行为和交流方式。关于这两个提示，让我们一起来深入理解一下它们的设计和目标。</p><ol>\n<li><strong>assistant_inception_prompt：</strong>这个提示是为了引导助手（即营销专员）如何响应用户（即花店老板）的指示。它明确指出助手的角色和职责，强调了在完成任务的过程中需要遵循的一些基本规则和原则。例如，助手需要针对用户的每一个指示提供一个明确的解决方案，而且这个解决方案必须是具体、易于理解的，并且只有在遇到物理、道德、法律的限制或自身能力的限制时，才能拒绝用户的指示。这个提示的设计目标是引导助手在一次有目标的对话中，有效地对用户的指示做出响应。</li>\n<li><strong>user_inception_prompt：</strong>这个提示是为了引导用户（即花店老板）如何给助手（即营销专员）下达指示。它明确指出了用户的角色和职责，强调了在提出任务指示时需要遵循的一些基本规则和原则。例如，用户需要一次只给出一个指示，并且必须清楚地提供相关的输入（如果有的话）。而且用户在给出指示的同时，不能向助手提问。这个提示的设计目标是引导用户在一次有目标的对话中，有效地给出指示，以便助手能够更好地理解和完成任务。</li>\n</ol><p>这两个提示的设计都体现了一种“角色扮演”的机制，即通过赋予聊天代理具体的角色和职责，以帮助它们更好地理解和完成任务。这种机制可以有效地引导聊天代理的交流行为，使得对话更加有目的性和效率，同时也能提供更为真实的人类对话体验。</p><h3>头脑风暴开始</h3><p>接下来，模拟助手和用户之间的多轮对话，直到达到对话轮次上限或任务完成。</p><pre><code class=\"language-plain\"># 模拟对话交互，直到达到对话轮次上限或任务完成\nchat_turn_limit, n = 30, 0\nwhile n &lt; chat_turn_limit:\n&nbsp; &nbsp; n += 1\n&nbsp; &nbsp; user_ai_msg = user_agent.step(assistant_msg)\n&nbsp; &nbsp; user_msg = HumanMessage(content=user_ai_msg.content)\n&nbsp; &nbsp; print(f\"AI User ({user_role_name}):\\n\\n{user_msg.content}\\n\\n\")\n\n&nbsp; &nbsp; assistant_ai_msg = assistant_agent.step(user_msg)\n&nbsp; &nbsp; assistant_msg = HumanMessage(content=assistant_ai_msg.content)\n&nbsp; &nbsp; print(f\"AI Assistant ({assistant_role_name}):\\n\\n{assistant_msg.content}\\n\\n\")\n&nbsp; &nbsp; if \"&lt;CAMEL_TASK_DONE&gt;\" in user_msg.content:\n&nbsp; &nbsp; &nbsp; &nbsp; break\n</code></pre><p>运行程序，营销策划头脑风暴开始！</p><p><img src=\"https://static001.geekbang.org/resource/image/45/90/453054aabe9d816ff88e05bb6ca03390.jpg?wh=1414x600\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/df/01/dff9cdf1f992756a3a02e48f63e96d01.jpg?wh=1412x830\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/21/5c/219851d4806bd8fa01f7ee09ac0f715c.jpg?wh=1438x875\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/dc/6f/dc6fb40781a2e53017e7d48d18f96a6f.jpg?wh=1418x848\" alt=\"\"></p><p><img src=\"https://static001.geekbang.org/resource/image/7c/87/7c01866d547f9517787cf25cd4a65587.jpg?wh=1419x666\" alt=\"\"></p><p>怎么样，看到这样的策划水准，是否觉得CAMEL框架趋动的AI助理完全不输给一个专业的营销策划专员呢？</p><p>讲到这里，我冒出了两个想法。是不是只有我们想不到，没有AI做不到的？一大批人可能真的要失业了。所以，赶快学习吧！继续卷起来。</p><h2>总结时刻</h2><p>智能代理在未来世界中将扮演越来越重要的角色。为了使这些代理能够更好地为人类服务，我们需要找到方法来提高它们的交流能力。CAMEL这篇论文提供了一个全新的视角来看待交流代理的发展。通过使用“角色扮演”框架，可以开发出更加智能和人性化的交流代理，这将为我们的日常生活带来更多的便利。</p><p>同时，我们也回顾一下CAMEL框架的实现，以及在这个实现中提示设计的特别之处。</p><ol>\n<li>角色扮演：每个代理都被赋予了一个角色，且每个角色都有清晰的责任和行为准则。比如，Python程序员（助手）的角色是根据股票交易员（用户）的指示提供具体的解决方案，而股票交易员的角色是提供详细的任务指示。这种角色扮演机制有助于模拟人类之间的交互过程，更加真实地完成任务。</li>\n<li>任务的具体化：为了使AI更好地理解和执行任务，提出了将抽象任务具体化的步骤。这可以帮助AI更清晰地理解任务需求，更准确地给出解决方案。</li>\n<li>初始提示的设定：为了启动会话并提供合适的引导，系统初始化时会提供两个初始提示，一条是助手角色的提示，另一条是用户角色的提示。这两条提示分别描述了各自角色的行为准则和任务细节，为整个对话过程提供了框架和指引。</li>\n<li>交互规范：该代码实现中有明确的交互规范，如一次只能给出一个指令，解决方案必须具有详细的解释，使用 “Solution: ” 开始输出解决方案，等等。这些规范有助于保持对话的清晰性和高效性。</li>\n</ol><p>与传统的提示设计不同，CAMEL中提示的设计更加复杂和细致，更像是一种交互协议或规范。这种设计在一定程度上提高了AI与AI之间自主合作的能力，并能更好地模拟人类之间的交互过程。</p><h2>思考题</h2><ol>\n<li>在你的业务需求中，有什么需要细化、具体化的业务场景吗？不妨套用这里的CAMEL代码模板，做一次头脑风暴。</li>\n<li>对于这个AI交流代理指导框架和提示模板的设计，你能否说说其优劣之处？有没有能进一步改进的地方？</li>\n</ol><p>期待在留言区看到你的思考，如果觉得内容对你有帮助，也欢迎分享给有需要的朋友！最后如果你学有余力，可以进一步学习下面的延伸阅读。</p><h2>延伸阅读</h2><ol>\n<li>CAMEL 项目<a href=\"https://www.camel-ai.org/\">官网</a> <a href=\"https://github.com/camel-ai/camel\">GitHub</a> 论文</li>\n<li>新闻<a href=\"https://mp.weixin.qq.com/s/GKHD6M74rqC42u2w8EFjJw\">「零人工含量」的「游戏公司」</a>- Chen, Q., Cong, X., Yang, C., Chen, W., Su, Y., Xu, J., Liu, Z., & Sun, M. (2023). <a href=\"https://arxiv.org/abs/2307.07924\">Communicative Agents for Software Development.</a> arXiv preprint arXiv:2307.07924 [cs.SE].</li>\n</ol>","comments":[{"had_liked":false,"id":382594,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"上海","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1697622905,"is_pvip":false,"replies":[{"id":139455,"content":"好滴，很棒的思考！","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698142290,"ip_address":"瑞士","comment_id":382594,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"一、感觉可以再增加一个方案评价的角色，每一轮对结果进行挑战和质疑，帮助AI进一步进行优化，这样方案是不是就可以用于实操了。\n以鲜花营销方案为例，可以这样调整一下：\n1、营销要求进一步具体化，给出期望达到的目标\n2、每一轮营销专员给出方案后，花店老板对给出的方案进行评价，并进一步给出优化要求\n3、营销专员根据评价和进一步的要求，改进自己的方案\n4、当花店老板评价方案达标时，结束循环\n最后应该可以形成一个完善、可行的方案。\n\n二、此外，花店老板、营销专员可以交叉使用不同的大模型，相互碰撞，将碰撞结果进行评分，最终由GPT给出评分最高的三个方案，可以得到更好的结果。","like_count":6,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630161,"discussion_content":"好滴，很棒的思考！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698142290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382646,"user_name":"棟","can_delete":false,"product_type":"c1","uid":2050798,"ip_address":"广东","ucode":"D85800A3BA3CF8","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4a/ee/fe035424.jpg","comment_is_top":false,"comment_ctime":1697723703,"is_pvip":false,"replies":[{"id":139450,"content":"可以在提示语中告诉模型，把答案限制在XXX字以内，同时要给出完整回答。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1698141486,"ip_address":"瑞士","comment_id":382646,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"您好，老师，请教一个疑惑，怎么限制这个对话达到某个token数值前停止，防止超出token限制，而且要得出答案。","like_count":2,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630156,"discussion_content":"可以在提示语中告诉模型，把答案限制在XXX字以内，同时要给出完整回答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698141486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383787,"user_name":"鲸鱼","can_delete":false,"product_type":"c1","uid":1052643,"ip_address":"北京","ucode":"71437C1C601040","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/e3/c49aa508.jpg","comment_is_top":false,"comment_ctime":1699616547,"is_pvip":false,"replies":[{"id":140187,"content":"1. 调整一下Temperature？\n2. 调整一下Prompt？","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700582161,"ip_address":"瑞士","comment_id":383787,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师，我运行您的demo，输出的结果不是很理想。总是花店老板自己就开始给方案了，然后营销专员就简单重复花店老板的方案；对话到后面花店老板开始问营销专员下一个请求了。重复了好几次都是这样\n\n开头的对话==================\nAI User (花店老板):\n\n指令：确定目标人群。\n输入：夏季玫瑰之夜的目标人群是年龄在25-45岁的城市居民，对浪漫活动和花卉有兴趣的人群。他们可能是情侣、夫妻或单身人士，他们喜欢参加社交活动并寻求独特的体验。他们有一定的消费能力，愿意为特殊的活动支付适当的费用。\n\n\nAI Assistant (花店营销专员):\n\n解决方案：夏季玫瑰之夜的目标人群是年龄在25-45岁的城市居民，对浪漫活动和花卉有兴趣的人群。他们可能是情侣、夫妻或单身人士，他们喜欢参加社交活动并寻求独特的体验。他们有一定的消费能力，愿意为特殊的活动支付适当的费用。下一个请求。\n\n\n最后的对话==================\n\nAI User (花店老板):\n\n指令：设计广告和社交媒体推广计划。\n输入：设计夏季玫瑰之夜的广告和社交媒体推广计划需要考虑以下方面：\n1. 广告渠道：选择适合目标人群的广告渠道，如报纸、杂志、户外广告牌等。\n2. 广告内容：设计吸引人的广告内容，包括活动主题、时间、地点和参与方式等信息。\n3. 社交媒体平台：选择适合目标人群的社交媒体平台，如Facebook、Instagram、微信等。\n4. 社交媒体内容：制作有吸引力的社交媒体内容，包括活动海报、短视频、活动介绍等。\n5. 广告预算：确定广告投放的预算，并根据预算选择合适的广告形式和频率。\n6. 推广策略：制定推广策略，如合作推广、优惠活动、分享抽奖等，以吸引更多参与者。\n请提供下一个请求。\n\n\nAI Assistant (花店营销专员):\n\n解决方案：设计夏季玫瑰之夜的广告和社交媒体推广计划如下：\n1. 广告渠道：选择适合目标人群的广告渠道，如在当地报纸和杂志上发布广告，租用户外广告牌等。\n2. 广告内容：xxx字数超限以xxx代替\n3. 社交媒体平台：xxx\n4. 社交媒体内容：xxx\n5. 广告预算：xxx\n6. 推广策略：xxx\n下一个请求。\n\n\nAI User (花店老板):\n\n&lt;CAMEL_TASK_DONE&gt;\n\n\nAI Assistant (花店营销专员):\n\n任务完成。\n\n","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632235,"discussion_content":"1. 调整一下Temperature？\n2. 调整一下Prompt？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700582161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052643,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0f/e3/c49aa508.jpg","nickname":"鲸鱼","note":"","ucode":"71437C1C601040","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631569,"discussion_content":"原来是默认的3.5turbo不够聪明，我换成最新出的gpt4-turbo就可以完美执行指令了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699761236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387192,"user_name":"徐冰","can_delete":false,"product_type":"c1","uid":1208569,"ip_address":"上海","ucode":"BAC1B611CF58ED","user_header":"https://static001.geekbang.org/account/avatar/00/12/70/f9/352365e3.jpg","comment_is_top":false,"comment_ctime":1706688417,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"貌似这种模式对大模型本身要求还有一点高。实测下来，3.5turbo会逐步变成老板自己给方案，但是格式起码还一直对的。换成通义千问qwen-max测试，结果聊着聊着连格式都不跟随了，两个代理最后 相互加油变成死循环。尝试调整了pompt也效果不大。o(╥﹏╥)o","like_count":3,"discussions":[{"author":{"id":3600600,"avatar":"https://static001.geekbang.org/account/avatar/00/36/f0/d8/c344594a.jpg","nickname":"🇾.🇨.","note":"","ucode":"C033E961553EA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641689,"discussion_content":"是这样的，通义还好点，文心之前章节就开始自问自答了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712889139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393850,"user_name":"yanyu-xin","can_delete":false,"product_type":"c1","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1725095865,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"将课程代码的大模型修订为国产通义千问模型qwen-turbo，测试结果理想。\n\n## 新代码1\n在from 代码后，增加：\nllm = ChatOpenAI(\n        model_name=&quot;qwen-turbo&quot;, #用通义模型\n        api_key=“API_KEY”, #填写你自己的DASHSCOPE_API_KEY\n        base_url=&quot;https:&#47;&#47;dashscope.aliyuncs.com&#47;compatible-mode&#47;v1&quot;\n\t）\n\n## 旧代码2\nmodel: ChatOpenAI,\ntask_specify_agent = CAMELAgent(task_specifier_sys_msg, ChatOpenAI(model_name = &#39;gpt-4&#39;, temperature=1.0))\nassistant_agent = CAMELAgent(assistant_sys_msg, ChatOpenAI(temperature=0.2))\nuser_agent = CAMELAgent(user_sys_msg, ChatOpenAI(temperature=0.2))\n## 新代码2\nmodel: llm,\ntask_specify_agent = CAMELAgent(task_specifier_sys_msg, llm)\nassistant_agent = CAMELAgent(assistant_sys_msg, llm)\nuser_agent = CAMELAgent(user_sys_msg, llm)\n\n","like_count":1},{"had_liked":false,"id":388411,"user_name":"账号已注销...","can_delete":false,"product_type":"c1","uid":1374898,"ip_address":"广东","ucode":"D80E2A435946E3","user_header":"https://static001.geekbang.org/account/avatar/00/14/fa/b2/d637b234.jpg","comment_is_top":false,"comment_ctime":1710148515,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师，有可运行的jupyter代码吗？这样看起来比较直观","like_count":1},{"had_liked":false,"id":392719,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1721618174,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":2,"score":2,"product_id":100617601,"comment_content":"第18讲打卡~","like_count":0},{"had_liked":false,"id":383212,"user_name":"colvin.zhang","can_delete":false,"product_type":"c1","uid":3571690,"ip_address":"上海","ucode":"3157DF0E47E74B","user_header":"https://static001.geekbang.org/account/avatar/00/36/7f/ea/b33596d1.jpg","comment_is_top":false,"comment_ctime":1698681921,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"ask_specifier_prompt = &quot;&quot;&quot;这是一个{assistant_role_name}将帮助{user_role_name}完成的任务：{task}。请使其更具体化。请发挥你的创意和想象力。请用{word_limit}个或更少的词回复具体的任务。不要添加其他任何内容。&quot;&quot;&quot;\ntask_specifier_template = HumanMessagePromptTemplate.from_template( template=task_specifier_prompt)\n\n老师demo程序本身没啥问题，变量命令建议交换一下\n\nask_specifier_template= &quot;&quot;&quot;这是一个{assistant_role_name}将帮助{user_role_name}完成的任务：{task}。请使其更具体化。请发挥你的创意和想象力。请用{word_limit}个或更少的词回复具体的任务。不要添加其他任何内容。&quot;&quot;&quot;\ntask_specifier_prompt = HumanMessagePromptTemplate.from_template( template=task_specifier_prompt)","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630682,"discussion_content":"谢谢同学的建议，这个我思考思考哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1698771869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}