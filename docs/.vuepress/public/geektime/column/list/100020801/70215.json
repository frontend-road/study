{"id":70215,"title":"07 | 行锁功过：怎么减少行锁对性能的影响？","content":"<p>在上一篇文章中，我跟你介绍了MySQL的全局锁和表级锁，今天我们就来讲讲MySQL的行锁。</p><p>MySQL的行锁是在引擎层由各个引擎自己实现的。但并不是所有的引擎都支持行锁，比如MyISAM引擎就不支持行锁。不支持行锁意味着并发控制只能使用表锁，对于这种引擎的表，同一张表上任何时刻只能有一个更新在执行，这就会影响到业务并发度。InnoDB是支持行锁的，这也是MyISAM被InnoDB替代的重要原因之一。</p><p>我们今天就主要来聊聊InnoDB的行锁，以及如何通过减少锁冲突来提升业务并发度。</p><p>顾名思义，行锁就是针对数据表中行记录的锁。这很好理解，比如事务A更新了一行，而这时候事务B也要更新同一行，则必须等事务A的操作完成后才能进行更新。</p><p>当然，数据库中还有一些没那么一目了然的概念和设计，这些概念如果理解和使用不当，容易导致程序出现非预期行为，比如两阶段锁。</p><h1>从两阶段锁说起</h1><p>我先给你举个例子。在下面的操作序列中，事务B的update语句执行时会是什么现象呢？假设字段id是表t的主键。<br>\n<img src=\"https://static001.geekbang.org/resource/image/51/10/51f501f718e420244b0a2ec2ce858710.jpg?wh=1142*856\" alt=\"\"></p><p>这个问题的结论取决于事务A在执行完两条update语句后，持有哪些锁，以及在什么时候释放。你可以验证一下：实际上事务B的update语句会被阻塞，直到事务A执行commit之后，事务B才能继续执行。</p><!-- [[[read_end]]] --><p>知道了这个答案，你一定知道了事务A持有的两个记录的行锁，都是在commit的时候才释放的。</p><p>也就是说，<strong>在InnoDB事务中，行锁是在需要的时候才加上的，但并不是不需要了就立刻释放，而是要等到事务结束时才释放。这个就是两阶段锁协议。</strong></p><p>知道了这个设定，对我们使用事务有什么帮助呢？那就是，<span class=\"orange\">如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁尽量往后放。</span>我给你举个例子。</p><p>假设你负责实现一个电影票在线交易业务，顾客A要在影院B购买电影票。我们简化一点，这个业务需要涉及到以下操作：</p><ol>\n<li>\n<p>从顾客A账户余额中扣除电影票价；</p>\n</li>\n<li>\n<p>给影院B的账户余额增加这张电影票价；</p>\n</li>\n<li>\n<p>记录一条交易日志。</p>\n</li>\n</ol><p>也就是说，要完成这个交易，我们需要update两条记录，并insert一条记录。当然，为了保证交易的原子性，我们要把这三个操作放在一个事务中。那么，你会怎样安排这三个语句在事务中的顺序呢？</p><p>试想如果同时有另外一个顾客C要在影院B买票，那么这两个事务冲突的部分就是语句2了。因为它们要更新同一个影院账户的余额，需要修改同一行数据。</p><p>根据两阶段锁协议，不论你怎样安排语句顺序，所有的操作需要的行锁都是在事务提交的时候才释放的。所以，如果你把语句2安排在最后，比如按照3、1、2这样的顺序，那么影院账户余额这一行的锁时间就最少。这就最大程度地减少了事务之间的锁等待，提升了并发度。</p><p>好了，现在由于你的正确设计，影院余额这一行的行锁在一个事务中不会停留很长时间。但是，这并没有完全解决你的困扰。</p><p>如果这个影院做活动，可以低价预售一年内所有的电影票，而且这个活动只做一天。于是在活动时间开始的时候，你的MySQL就挂了。你登上服务器一看，CPU消耗接近100%，但整个数据库每秒就执行不到100个事务。这是什么原因呢？</p><p>这里，我就要说到死锁和死锁检测了。</p><h1>死锁和死锁检测</h1><p>当并发系统中不同线程出现循环资源依赖，涉及的线程都在等待别的线程释放资源时，就会导致这几个线程都进入无限等待的状态，称为死锁。这里我用数据库中的行锁举个例子。<br>\n<img src=\"https://static001.geekbang.org/resource/image/4d/52/4d0eeec7b136371b79248a0aed005a52.jpg?wh=1142*856\" alt=\"\"></p><p>这时候，事务A在等待事务B释放id=2的行锁，而事务B在等待事务A释放id=1的行锁。 事务A和事务B在互相等待对方的资源释放，就是进入了死锁状态。当出现死锁以后，有两种策略：</p><ul>\n<li>一种策略是，直接进入等待，直到超时。这个超时时间可以通过参数innodb_lock_wait_timeout来设置。</li>\n<li>另一种策略是，发起死锁检测，发现死锁后，主动回滚死锁链条中的某一个事务，让其他事务得以继续执行。将参数innodb_deadlock_detect设置为on，表示开启这个逻辑。</li>\n</ul><p>在InnoDB中，innodb_lock_wait_timeout的默认值是50s，意味着如果采用第一个策略，当出现死锁以后，第一个被锁住的线程要过50s才会超时退出，然后其他线程才有可能继续执行。对于在线服务来说，这个等待时间往往是无法接受的。</p><p>但是，我们又不可能直接把这个时间设置成一个很小的值，比如1s。这样当出现死锁的时候，确实很快就可以解开，但如果不是死锁，而是简单的锁等待呢？所以，超时时间设置太短的话，会出现很多误伤。</p><p>所以，正常情况下我们还是要采用第二种策略，即：主动死锁检测，而且innodb_deadlock_detect的默认值本身就是on。主动死锁检测在发生死锁的时候，是能够快速发现并进行处理的，但是它也是有额外负担的。</p><p>你可以想象一下这个过程：每当一个事务被锁的时候，就要看看它所依赖的线程有没有被别人锁住，如此循环，最后判断是否出现了循环等待，也就是死锁。</p><p>那如果是我们上面说到的所有事务都要更新同一行的场景呢？</p><p>每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是O(n)的操作。假设有1000个并发线程要同时更新同一行，那么死锁检测操作就是100万这个量级的。虽然最终检测的结果是没有死锁，但是这期间要消耗大量的CPU资源。因此，你就会看到CPU利用率很高，但是每秒却执行不了几个事务。</p><p>根据上面的分析，我们来讨论一下，<span class=\"orange\">怎么解决由这种热点行更新导致的性能问题呢？</span>问题的症结在于，死锁检测要耗费大量的CPU资源。</p><p><strong>一种头痛医头的方法，就是如果你能确保这个业务一定不会出现死锁，可以临时把死锁检测关掉。</strong>但是这种操作本身带有一定的风险，因为业务设计的时候一般不会把死锁当做一个严重错误，毕竟出现死锁了，就回滚，然后通过业务重试一般就没问题了，这是业务无损的。而关掉死锁检测意味着可能会出现大量的超时，这是业务有损的。</p><p><strong>另一个思路是控制并发度。</strong>根据上面的分析，你会发现如果并发能够控制住，比如同一行同时最多只有10个线程在更新，那么死锁检测的成本很低，就不会出现这个问题。一个直接的想法就是，在客户端做并发控制。但是，你会很快发现这个方法不太可行，因为客户端很多。我见过一个应用，有600个客户端，这样即使每个客户端控制到只有5个并发线程，汇总到数据库服务端以后，峰值并发数也可能要达到3000。</p><p>因此，这个并发控制要做在数据库服务端。如果你有中间件，可以考虑在中间件实现；如果你的团队有能修改MySQL源码的人，也可以做在MySQL里面。基本思路就是，对于相同行的更新，在进入引擎之前排队。这样在InnoDB内部就不会有大量的死锁检测工作了。</p><p>可能你会问，<strong>如果团队里暂时没有数据库方面的专家，不能实现这样的方案，能不能从设计上优化这个问题呢？</strong></p><p>你可以考虑通过将一行改成逻辑上的多行来减少锁冲突。还是以影院账户为例，可以考虑放在多条记录上，比如10个记录，影院的账户总额等于这10个记录的值的总和。这样每次要给影院账户加金额的时候，随机选其中一条记录来加。这样每次冲突概率变成原来的1/10，可以减少锁等待个数，也就减少了死锁检测的CPU消耗。</p><p>这个方案看上去是无损的，但其实这类方案需要根据业务逻辑做详细设计。如果账户余额可能会减少，比如退票逻辑，那么这时候就需要考虑当一部分行记录变成0的时候，代码要有特殊处理。</p><h1>小结</h1><p>今天，我和你介绍了MySQL的行锁，涉及了两阶段锁协议、死锁和死锁检测这两大部分内容。</p><p>其中，我以两阶段协议为起点，和你一起讨论了在开发的时候如何安排正确的事务语句。这里的原则/我给你的建议是：如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁的申请时机尽量往后放。</p><p>但是，调整语句顺序并不能完全避免死锁。所以我们引入了死锁和死锁检测的概念，以及提供了三个方案，来减少死锁对数据库的影响。减少死锁的主要方向，就是控制访问相同资源的并发事务量。</p><p>最后，我给你留下一个问题吧。如果你要删除一个表里面的前10000行数据，有以下三种方法可以做到：</p><ul>\n<li>第一种，直接执行delete from T limit 10000;</li>\n<li>第二种，在一个连接中循环执行20次 delete from T limit 500;</li>\n<li>第三种，在20个连接中同时执行delete from T limit 500。</li>\n</ul><p>你会选择哪一种方法呢？为什么呢？</p><p>你可以把你的思考和观点写在留言区里，我会在下一篇文章的末尾和你讨论这个问题。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h1>上期问题时间</h1><p>上期我给你留的问题是：当备库用–single-transaction做逻辑备份的时候，如果从主库的binlog传来一个DDL语句会怎么样？</p><p>假设这个DDL是针对表t1的， 这里我把备份过程中几个关键的语句列出来：</p><pre><code>Q1:SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;\nQ2:START TRANSACTION  WITH CONSISTENT SNAPSHOT；\n/* other tables */\nQ3:SAVEPOINT sp;\n/* 时刻 1 */\nQ4:show create table `t1`;\n/* 时刻 2 */\nQ5:SELECT * FROM `t1`;\n/* 时刻 3 */\nQ6:ROLLBACK TO SAVEPOINT sp;\n/* 时刻 4 */\n/* other tables */\n</code></pre><p>在备份开始的时候，为了确保RR（可重复读）隔离级别，再设置一次RR隔离级别(Q1);</p><p>启动事务，这里用 WITH CONSISTENT SNAPSHOT确保这个语句执行完就可以得到一个一致性视图（Q2)；</p><p>设置一个保存点，这个很重要（Q3）；</p><p>show create 是为了拿到表结构(Q4)，然后正式导数据 （Q5），回滚到SAVEPOINT sp，在这里的作用是释放 t1的MDL锁 （Q6）。当然这部分属于“超纲”，上文正文里面都没提到。</p><p>DDL从主库传过来的时间按照效果不同，我打了四个时刻。题目设定为小表，我们假定到达后，如果开始执行，则很快能够执行完成。</p><p>参考答案如下：</p><ol>\n<li>\n<p>如果在Q4语句执行之前到达，现象：没有影响，备份拿到的是DDL后的表结构。</p>\n</li>\n<li>\n<p>如果在“时刻 2”到达，则表结构被改过，Q5执行的时候，报 Table definition has changed, please retry transaction，现象：mysqldump终止；</p>\n</li>\n<li>\n<p>如果在“时刻2”和“时刻3”之间到达，mysqldump占着t1的MDL读锁，binlog被阻塞，现象：主从延迟，直到Q6执行完成。</p>\n</li>\n<li>\n<p>从“时刻4”开始，mysqldump释放了MDL读锁，现象：没有影响，备份拿到的是DDL前的表结构。</p>\n</li>\n</ol><p>评论区留言点赞板：</p><blockquote>\n<p>@Aurora 给了最接近的答案；<br>\n@echo＿陈 问了一个好问题；<br>\n@壹笙☞漂泊 做了很好的总结。</p>\n</blockquote><p></p>","neighbors":{"left":{"article_title":"06 | 全局锁和表锁 ：给表加个字段怎么有这么多阻碍？","id":69862},"right":{"article_title":"08 | 事务到底是隔离的还是不隔离的？","id":70562}},"comments":[{"had_liked":false,"id":45919,"user_name":"会玩code","can_delete":false,"product_type":"c1","uid":1325282,"ip_address":"","ucode":"9220B072AF68C7","user_header":"https://static001.geekbang.org/account/avatar/00/14/38/e2/28aa8e6c.jpg","comment_is_top":true,"comment_ctime":1543818487,"is_pvip":false,"replies":[{"id":"16394","content":"是个好问题<br>如果他要加锁访问的行上有锁，他才要检测。<br><br>这里面我担心你有两个误解，说明下：<br>1.   一致性读不会加锁，就不需要做死锁检测；<br><br>2. 并不是每次死锁检测都都要扫所有事务。比如某个时刻，事务等待状态是这样的：<br><br>   B在等A，<br>   D在等C，<br>   现在来了一个E，发现E需要等D，那么E就判断跟D、C是否会形成死锁，这个检测不用管B和A","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543820272,"ip_address":"","comment_id":45919,"utype":1}],"discussion_count":24,"race_medal":0,"score":"9.223374112867799e+18","product_id":100020801,"comment_content":"老师，关于死锁检测innodb_deadlock_detect我想请教一下，是每条事务执行前都会进行检测吗？如果是这样，即使简单的更新单个表的语句，当每秒的并发量达到上千的话，岂不是也会消耗大量资源用于死锁检测吗？","like_count":483,"discussions":[{"author":{"id":1512642,"avatar":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","nickname":"侧耳倾听","note":"","ucode":"5BF2A2440B54F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245845,"discussion_content":"死锁检测其实就是算法，环的检测，不必每次遍历一遍当前事务，只需要判断事务链表中，每加入一个新事物后是否有环的生成，有就形成死锁。","likes_number":53,"is_delete":false,"is_hidden":false,"ctime":1587704955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1512642,"avatar":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","nickname":"侧耳倾听","note":"","ucode":"5BF2A2440B54F0","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":373054,"discussion_content":"判断有环不得遍历么","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1620581750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":245845,"ip_address":""},"score":373054,"extra":""},{"author":{"id":1404773,"avatar":"https://static001.geekbang.org/account/avatar/00/15/6f/65/26f998b2.jpg","nickname":"zheng","note":"","ucode":"D61E7182921DD8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380120,"discussion_content":"不用吧，就并查集就不用。把等待链的节点存到map里面，新延展的节点不在map里面不就没有环路吗，，判断过程接近O(1)的吧","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1624349193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373054,"ip_address":""},"score":380120,"extra":""}]},{"author":{"id":1250397,"avatar":"https://static001.geekbang.org/account/avatar/00/13/14/5d/f4d789cc.jpg","nickname":"极客童","note":"","ucode":"D92EA8CA293B93","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224007,"discussion_content":"deadlock detect，只有在一个事务更新一条记录时发现被阻塞了，才会去检测死锁","likes_number":32,"is_delete":false,"is_hidden":false,"ctime":1586266575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431269,"discussion_content":"是个好问题\n如果他要加锁访问的行上有锁，他才要检测。\n\n这里面我担心你有两个误解，说明下：\n1.   一致性读不会加锁，就不需要做死锁检测；\n\n2. 并不是每次死锁检测都都要扫所有事务。比如某个时刻，事务等待状态是这样的：\n\n   B在等A，\n   D在等C，\n   现在来了一个E，发现E需要等D，那么E就判断跟D、C是否会形成死锁，这个检测不用管B和A","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1543820272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2711249,"avatar":"","nickname":"Geek_60bcde","note":"","ucode":"AD7792E790373F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387837,"discussion_content":"事物更新等待时，循环所有依赖，检查是否为闭环。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1628441933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2132323,"avatar":"https://static001.geekbang.org/account/avatar/00/20/89/63/ca423855.jpg","nickname":"JabinLi","note":"","ucode":"FA75D74418DBEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391411,"discussion_content":"读操作基于某个时间点得到一份那时的数据快照，而不管同时其他事务对数据的修改。查询过程中，若其他事务修改了数据，那么就需要从 undo log中获取旧版本的数据。这么做可以有效避免因为需要加锁（来阻止其他事务同时对这些数据的修改）而导致事务并行度下降的问题。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1630456618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2649276,"avatar":"https://static001.geekbang.org/account/avatar/00/28/6c/bc/f751786b.jpg","nickname":"Leo","note":"","ucode":"CEBAD9CDCFC2A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379940,"discussion_content":"简单来说 影响到相关行数据就检测，八竿子打不着的不会检测。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624256983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1139524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/63/44/171f5250.jpg","nickname":"Mjh","note":"","ucode":"842345E2940FD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2649276,"avatar":"https://static001.geekbang.org/account/avatar/00/28/6c/bc/f751786b.jpg","nickname":"Leo","note":"","ucode":"CEBAD9CDCFC2A3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389929,"discussion_content":"怎么检测八杆子打不着的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629518348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379940,"ip_address":""},"score":389929,"extra":""},{"author":{"id":1019610,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8e/da/58066080.jpg","nickname":"张辉","note":"","ucode":"CFBD4F1BEAC70B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1139524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/63/44/171f5250.jpg","nickname":"Mjh","note":"","ucode":"842345E2940FD5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390621,"discussion_content":"没有等待关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629943085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389929,"ip_address":""},"score":390621,"extra":""},{"author":{"id":1314800,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/f0/37feaa1d.jpg","nickname":"马林","note":"","ucode":"38AA3E2EB1CC5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1139524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/63/44/171f5250.jpg","nickname":"Mjh","note":"","ucode":"842345E2940FD5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392563,"discussion_content":"锁申请的排队队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631061362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389929,"ip_address":""},"score":392563,"extra":""}]},{"author":{"id":1189114,"avatar":"https://static001.geekbang.org/account/avatar/00/12/24/fa/e71d2093.jpg","nickname":"蔡振盛","note":"","ucode":"9AF4FE366369A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379512,"discussion_content":"死锁检测是一个环路检测","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623933591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367135,"discussion_content":"发现待加锁和已加锁冲突时，才会去执行死锁检测。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618276435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554658,"discussion_content":"应该是获取不到锁就需要进行死锁检测","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646538713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1874999,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/9c/37/253ea895.jpg","nickname":"我不是码农","note":"","ucode":"EB4BB711CC54B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548911,"discussion_content":"应该就是执行不下去了才会发起检测","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643443236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2633486,"avatar":"https://static001.geekbang.org/account/avatar/00/28/2f/0e/d61a9a47.jpg","nickname":"2Years","note":"","ucode":"9CC611009FCA4E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541094,"discussion_content":"那如果是update、delete不加锁呢， 遇到有锁的数据，会进行检测吗？ 这种情况update/delete是不是直接抛错？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640252681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2120690,"avatar":"","nickname":"风间","note":"","ucode":"2DA14C209AD31F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":398920,"discussion_content":"新加入的事务跟已存在的事务更新相同的行，则会发起死锁检测","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632876624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397069,"discussion_content":"死锁检测是一个是检测一个等待图，如果形成环就表示死锁了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632555887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139524,"avatar":"https://static001.geekbang.org/account/avatar/00/11/63/44/171f5250.jpg","nickname":"Mjh","note":"","ucode":"842345E2940FD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389930,"discussion_content":"得出等待不是也需要等待吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629518393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1519205,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/65/1386d411.jpg","nickname":"xiaowei123456","note":"","ucode":"7ADFDBE234C936","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349217,"discussion_content":"一致性读不会加锁，就不需要做死锁检测； 这个怎么理解呐？？？求教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612971032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1543162,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/fa/103e6900.jpg","nickname":"山鬼谣","note":"","ucode":"E25F498B85A01B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1519205,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/65/1386d411.jpg","nickname":"xiaowei123456","note":"","ucode":"7ADFDBE234C936","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365977,"discussion_content":"一致性读  应该读的是视图，是一个历史状态，锁 应该是锁当前状态","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1617935416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349217,"ip_address":""},"score":365977,"extra":""},{"author":{"id":1333649,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/91/fa2d8bb2.jpg","nickname":"不吃辣👾","note":"","ucode":"B25E0725B5E85F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1519205,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/65/1386d411.jpg","nickname":"xiaowei123456","note":"","ucode":"7ADFDBE234C936","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381167,"discussion_content":"普通的select不加锁不做检测，如果你update，delete，select  ...for update ,select ... lock in share mode 就要做死锁检测","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1624935871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349217,"ip_address":""},"score":381167,"extra":""},{"author":{"id":2457860,"avatar":"https://static001.geekbang.org/account/avatar/00/25/81/04/853bc40f.jpg","nickname":"岑寂","note":"","ucode":"C602B1D7F45D32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1333649,"avatar":"https://static001.geekbang.org/account/avatar/00/14/59/91/fa2d8bb2.jpg","nickname":"不吃辣👾","note":"","ucode":"B25E0725B5E85F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":398954,"discussion_content":"快照读不做死锁检测，当前读需要检测，可以这样理解么","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1632880104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":381167,"ip_address":""},"score":398954,"extra":""}]}]},{"had_liked":false,"id":44003,"user_name":"bluefantasy3","can_delete":false,"product_type":"c1","uid":1299930,"ip_address":"","ucode":"9D6FF2811F7465","user_header":"","comment_is_top":true,"comment_ctime":1543364253,"is_pvip":false,"replies":[{"id":"15728","content":"第一个问题是好问题，我加到答疑文章中。简单的回答：是的。但是你可以再往前考虑一下，如果是 你的update 语句后面加个limit 1, 会怎么锁？<br><br><br>Innodb支持行锁，没有支持“列锁” 哈😄<br><br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543371957,"ip_address":"","comment_id":44003,"utype":1}],"discussion_count":72,"race_medal":0,"score":"9.2233730090607002e+18","product_id":100020801,"comment_content":"请教老师一个问题：<br>innodb行级锁是通过锁索引记录实现的。如果update的列没建索引，即使只update一条记录也会锁定整张表吗？比如update t set t.name=&#39;abc&#39; where t.name=&#39;cde&#39;;   name字段无索引。为何innodb不优化一下，只锁定name=&#39;cde&#39;的列？","like_count":226,"discussions":[{"author":{"id":1115702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","nickname":"张诚","note":"","ucode":"F623703194769B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329359,"discussion_content":"如果列上没有索引，更新就是走主键索引树，逐行扫描满足条件的行，等于将主键索引所有的行上了锁，假如加上limit 1,扫描 主键索引树，直到找到第一条满足条件的行，扫描过的行都会被加上行锁。","likes_number":66,"is_delete":false,"is_hidden":false,"ctime":1606371595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":11,"child_discussions":[{"author":{"id":1608757,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZO3Xkicd9Cy5FicXibjwnAgVChLZh6zxqAQtOhcYocG81gicm40gSa6PKVmqJXMiaFz5niasPwNkf5ibug/132","nickname":"欧小文","note":"","ucode":"1B41057F097AA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","nickname":"张诚","note":"","ucode":"F623703194769B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":363375,"discussion_content":"自己做了实验确实如此","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1617183209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329359,"ip_address":""},"score":363375,"extra":""},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","nickname":"张诚","note":"","ucode":"F623703194769B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":369575,"discussion_content":"limit 1 是找到第一条满足条件的就不向后找了吗？limit 1 是在server层实现的吧，引擎层是怎么处理的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619084656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329359,"ip_address":""},"score":369575,"extra":""},{"author":{"id":1675716,"avatar":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","nickname":"明月几时","note":"","ucode":"E46C844EAB2CD0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1115702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/06/36/d288bcc7.jpg","nickname":"张诚","note":"","ucode":"F623703194769B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":377994,"discussion_content":"是这样的，前段时间生产线上就出现过这样的问题。并发更新一张表的数据，但是where 的列没有加索引（表又很大），导致出现行锁，其他的更新都需要等待（相当于串行了），然后数据库连接爆满......","likes_number":20,"is_delete":false,"is_hidden":false,"ctime":1622989284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329359,"ip_address":""},"score":377994,"extra":""}]},{"author":{"id":1008582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/c6/d6ea3df3.jpg","nickname":"林肯","note":"","ucode":"D2C97220230DE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301173,"discussion_content":"如果update的列没建索引，即使只update一条记录也会锁定整张表——知识点扫盲了","likes_number":41,"is_delete":false,"is_hidden":false,"ctime":1598432653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2820240,"avatar":"","nickname":"Geek_6f17f2","note":"","ucode":"C3ADCB4648FC27","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1008582,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/63/c6/d6ea3df3.jpg","nickname":"林肯","note":"","ucode":"D2C97220230DE5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547193,"discussion_content":"应该是update时，where查询的列没建索引，才会全表锁定吧（和update的列是否建了索引无关）。比如，update name = ? where id = 10，id是主键，这种情况只会锁住一条记录。","likes_number":20,"is_delete":false,"is_hidden":false,"ctime":1642576017,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301173,"ip_address":""},"score":547193,"extra":""},{"author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2820240,"avatar":"","nickname":"Geek_6f17f2","note":"","ucode":"C3ADCB4648FC27","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":585974,"discussion_content":"是的，和更新的列没关系，和where后面的列才有关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661922580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":547193,"ip_address":"广东"},"score":585974,"extra":""}]},{"author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404782,"discussion_content":"这个问题，我研究了下，应该是这样的： 如果隔离级别是rr的话，那就说明你不能出现不可重复读，所以当你在用没有索引的字段当where条件更新的话，并且没有加limit，那么mysql会扫描主键然后锁住所有的行，因为他就是要保证他在更新的时候，别的事务不能搞事情啊，要别人插入一条，或者更新了一条，恰好又满足我刚才那个where条件 ，那就违反了当前的隔离级别了，当然rc条件下，就无所谓了，反正我的隔离级别下会出现不可重复读，别人要要更新那请便，只要不搞我当前扫描到这行就行了（因为他加了行锁）。加了limit 亦然，rr下，我扫描到的这前多少行你不能给我搞事情，搞了就违反我的隔离级别，所以他锁住了前多少行，后面爱咋搞咋搞。rc也无所谓，也只是行锁，锁住那几行。 ","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1634398709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1874999,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/9c/37/253ea895.jpg","nickname":"我不是码农","note":"","ucode":"EB4BB711CC54B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554333,"discussion_content":"实验了一下，rr下，一个事务走没有索引的更新，再开一个新事务，可以插入，但不能更新，且自己插入的数据也不能更新，不知道为什么。。。8.0版本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646321345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":404782,"ip_address":""},"score":554333,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576213,"discussion_content":"最后面  rc的话就锁它where的那几行吧 或者一行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655353332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":404782,"ip_address":""},"score":576213,"extra":""}]},{"author":{"id":1009098,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/ca/38dcd55a.jpg","nickname":"lupguo","note":"","ucode":"1B55A01DF78647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52393,"discussion_content":"我在Mysql8中测试了下，无索引情况，在两个不同事务中，更新同一列加不加limit 1，效果都是锁互斥；原因是没有索引的话，会导致全表扫描(表锁)，同时还会涉及回表(行锁)；mysql> select THREAD_ID,EVENT_ID,OBJECT_NAME,INDEX_NAME,LOCK_TYPE,LOCK_MODE,LOCK_DATA from performance_schema.data_locks;\n+-----------+----------+-------------+------------+-----------+-----------+-----------+\n| THREAD_ID | EVENT_ID | OBJECT_NAME | INDEX_NAME | LOCK_TYPE | LOCK_MODE | LOCK_DATA |\n+-----------+----------+-------------+------------+-----------+-----------+-----------+\n|        49 |      104 | t_a         | NULL       | TABLE     | IX        | NULL      |\n|        49 |      104 | t_a         | PRIMARY    | RECORD    | X         | 1         |\n|        48 |      122 | t_a         | NULL       | TABLE     | IX        | NULL      |\n|        48 |      122 | t_a         | PRIMARY    | RECORD    | X         | 1         |\n+-----------+----------+-------------+------------+-----------+-----------+-----------+","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1574046985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":16,"child_discussions":[{"author":{"id":1721168,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/43/50/abb4ca1e.jpg","nickname":"凡","note":"","ucode":"80C2A6452AB9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009098,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/ca/38dcd55a.jpg","nickname":"lupguo","note":"","ucode":"1B55A01DF78647","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165387,"discussion_content":"我试验的结果是在没有创建索引的列上更新两个事物不能同时更新。但是一条更新，一条插入语句，可以插入成功","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581270185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":52393,"ip_address":""},"score":165387,"extra":""},{"author":{"id":1181206,"avatar":"https://static001.geekbang.org/account/avatar/00/12/06/16/e85c1fa8.jpg","nickname":"滴答丶滴","note":"","ucode":"2093C2948B4327","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009098,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/65/ca/38dcd55a.jpg","nickname":"lupguo","note":"","ucode":"1B55A01DF78647","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":168441,"discussion_content":"你好，请问全表扫描的时候会表锁，回表的时候会行锁是嘛？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581581633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":52393,"ip_address":""},"score":168441,"extra":""},{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181206,"avatar":"https://static001.geekbang.org/account/avatar/00/12/06/16/e85c1fa8.jpg","nickname":"滴答丶滴","note":"","ucode":"2093C2948B4327","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179819,"discussion_content":"1.可以自己实践一下,当加上limit1之后 更新语句的执行流程是先去查询在去更新,也就是查询sql为 select * from t where name = &#34;abc&#34; limit 1 for update,相当于扫描主键索引找到第一个满足name=&#34;abc&#34;的条件为止,此时锁的区间为(负无穷,当前行的id],如果在这个id之后的更新和插入时都不会锁住的,在这个id之前的更新和插入会阻塞,之后则不会阻塞\n\n2.如果不加limit 1的话,因为此时是整个主键索引全表扫描则整个表锁住了\n\n3.你说的回表的行锁,比如字段name有普通索引,在更新操作时普通索引会锁住的同时,如果更新操作需要回表的话对应的主键索引也会存在锁(主键索引锁临界锁会退化为行锁),普通索引(间隙锁和行锁)","likes_number":85,"is_delete":false,"is_hidden":false,"ctime":1582254960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":168441,"ip_address":""},"score":179819,"extra":""}]},{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337502,"discussion_content":"对老师的更新没有用到索引会锁全表 持怀疑态度 我自己的实验：mysql 版本是 5.7.17，当隔离级别是 RR级别时 更新没有用到索引会锁全表，当隔离级别是 RC级别时 更新没有用到索引并没有锁全表 依然可以更新其他行","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1608951674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":10,"child_discussions":[{"author":{"id":2218814,"avatar":"https://static001.geekbang.org/account/avatar/00/21/db/3e/ae276dfe.jpg","nickname":"YoLo","note":"","ucode":"DBED5344BC5BFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351834,"discussion_content":"mqsql做了优化，会调用unlock_row把不满足条件的解锁,这也是为啥mysql常用隔离级别是RC不是RR，因为没有命中索引情况下，RR会锁表，RC会锁行","likes_number":25,"is_delete":false,"is_hidden":false,"ctime":1614484891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337502,"ip_address":""},"score":351834,"extra":""},{"author":{"id":1272723,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/93/5ff6b668.jpg","nickname":"ori","note":"","ucode":"5F66BFF8C2AFC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2218814,"avatar":"https://static001.geekbang.org/account/avatar/00/21/db/3e/ae276dfe.jpg","nickname":"YoLo","note":"","ucode":"DBED5344BC5BFD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361330,"discussion_content":"mysql常用隔离级别是RC?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616643137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":351834,"ip_address":""},"score":361330,"extra":""},{"author":{"id":1609160,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epcWSa7jLORKLmqMEVhFrEdMycMicB0wIpRjYgfciahUbhRwWXD174MGicdOXC0aDKNIzGiaMvKm535fA/132","nickname":"Joesky","note":"","ucode":"B79D8A14014141","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1272723,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/93/5ff6b668.jpg","nickname":"ori","note":"","ucode":"5F66BFF8C2AFC5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363042,"discussion_content":"MySQL不是默认RR吗","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1617103410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":361330,"ip_address":""},"score":363042,"extra":""}]},{"author":{"id":1807895,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/96/17/feba59cb.jpg","nickname":"chris","note":"","ucode":"9A7E70AF646276","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391361,"discussion_content":"我就说为啥我们的sql都加的limit 1，解开了我的疑惑。。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1630418150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1807895,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/96/17/feba59cb.jpg","nickname":"chris","note":"","ucode":"9A7E70AF646276","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590003,"discussion_content":"你这里有点误导到我了。。RR级别下，where条件的字段如果没有索引，即使加limit 1，也是锁的全表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665458207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391361,"ip_address":"湖南"},"score":590003,"extra":""},{"author":{"id":2705752,"avatar":"https://static001.geekbang.org/account/avatar/00/29/49/58/9b56e567.jpg","nickname":"lllkk","note":"","ucode":"26BC0A474F145C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590209,"discussion_content":"MYSQL5.7 RR级别下 我试了一下 避开间隙锁 还是能更新的 不是锁全表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665622089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":590003,"ip_address":"福建"},"score":590209,"extra":""}]},{"author":{"id":2198841,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erF9Aia2NyP3csEIDhhxj14PicBhgccbEVFIiaBE7WfOCqw751TsKxZZyuZZ260SxIvGq1Fxnib7CPaIw/132","nickname":"Geek_166f3a","note":"","ucode":"9D149C6ADDCF69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309390,"discussion_content":"版本5.7.13 ，加没加limit，update其他行数据都会失败，但是，加了limit，自增insert成功，但是，在行锁数据的前面加一条数据会被阻塞。没加limit，insert会阻塞，等待其他事务提交","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1601277951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1403980,"avatar":"https://static001.geekbang.org/account/avatar/00/15/6c/4c/be735cc5.jpg","nickname":"自己争取","note":"","ucode":"90821BF6E6B85E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2198841,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erF9Aia2NyP3csEIDhhxj14PicBhgccbEVFIiaBE7WfOCqw751TsKxZZyuZZ260SxIvGq1Fxnib7CPaIw/132","nickname":"Geek_166f3a","note":"","ucode":"9D149C6ADDCF69","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335324,"discussion_content":"根据 答案分析，加limit 1应该加了间隙性锁，没加就全表锁\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608168331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309390,"ip_address":""},"score":335324,"extra":""},{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2198841,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erF9Aia2NyP3csEIDhhxj14PicBhgccbEVFIiaBE7WfOCqw751TsKxZZyuZZ260SxIvGq1Fxnib7CPaIw/132","nickname":"Geek_166f3a","note":"","ucode":"9D149C6ADDCF69","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336720,"discussion_content":"这个不仅仅要给出版本 还要给出事务的隔离级别吧  没有事务的隔离级别怎么能分析是哪种锁呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608687613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":309390,"ip_address":""},"score":336720,"extra":""},{"author":{"id":2218814,"avatar":"https://static001.geekbang.org/account/avatar/00/21/db/3e/ae276dfe.jpg","nickname":"YoLo","note":"","ucode":"DBED5344BC5BFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1403980,"avatar":"https://static001.geekbang.org/account/avatar/00/15/6c/4c/be735cc5.jpg","nickname":"自己争取","note":"","ucode":"90821BF6E6B85E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351835,"discussion_content":"间隙锁只在RR下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614484974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":335324,"ip_address":""},"score":351835,"extra":""}]},{"author":{"id":2650951,"avatar":"https://static001.geekbang.org/account/avatar/00/28/73/47/0dc38e56.jpg","nickname":"ᴢʜᴜʏɪǫɪɴɢ","note":"","ucode":"CD093C6FA7B871","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572912,"discussion_content":"RR级别，有索引锁行，无索引锁表\nRC级别，有没有索引都是只锁行","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1653038932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1311484,"avatar":"https://static001.geekbang.org/account/avatar/00/14/02/fc/f18b97c3.jpg","nickname":"王大英","note":"","ucode":"38C751FBBE8D4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6423,"discussion_content":"呜呜呜丁老师在评论里提的这个问题有人回答一下吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566893946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":1284444,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/5c/88613615.jpg","nickname":"持续学习","note":"","ucode":"1C2F81D9C23139","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1311484,"avatar":"https://static001.geekbang.org/account/avatar/00/14/02/fc/f18b97c3.jpg","nickname":"王大英","note":"","ucode":"38C751FBBE8D4D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6582,"discussion_content":"试试就知道了，加了limit 1 就只会锁一行了。 不加limit 锁表是因为必须阻止别的事务同时插入name为cde的行，造成binlog记录错误。","likes_number":26,"is_delete":false,"is_hidden":false,"ctime":1566984612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6423,"ip_address":""},"score":6582,"extra":""},{"author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1284444,"avatar":"https://static001.geekbang.org/account/avatar/00/13/99/5c/88613615.jpg","nickname":"持续学习","note":"","ucode":"1C2F81D9C23139","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25302,"discussion_content":"锁了多行也不能阻止插入呢,不加limit1是因为他想要更新多行呀","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570499016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6582,"ip_address":""},"score":25302,"extra":""},{"author":{"id":1371593,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ed/c9/9abdd4c6.jpg","nickname":"大雄","note":"","ucode":"4AF29A183AB495","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38679,"discussion_content":"他说的是阻止插入name为cde的行，插入别的值是可以的。以下摘自mysql官方文档：A record lock is a lock on an index record. For example, SELECT c1 FROM t WHERE c1 = 10 FOR UPDATE; prevents any other transaction from inserting, updating, or deleting rows where the value of t.c1 is 10.           ","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1571816964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":25302,"ip_address":""},"score":38679,"extra":""}]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430589,"discussion_content":"第一个问题是好问题，我加到答疑文章中。简单的回答：是的。但是你可以再往前考虑一下，如果是 你的update 语句后面加个limit 1, 会怎么锁？\n\n\nInnodb支持行锁，没有支持“列锁” 哈😄\n\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1543371957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306492,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ef/7c/8352f538.jpg","nickname":"迦蓝城下","note":"","ucode":"D8E80ECBFA9ED5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382795,"discussion_content":"行锁可以理解为是一种特殊化的表锁，name不在索引树中维护，走的就是全表锁。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625727851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2034451,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpk1UiawIpPeZ0Ew0L20EJzbricxrMLibKHJXODbjPJqbHAKO6OT0pib1q25myucmdeqibjcvZFR1pshg/132","nickname":"Geek_46b429","note":"","ucode":"7BC56E4CDF9405","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283964,"discussion_content":"这小哥哥真是太可爱了 ，怎么没有列锁哇","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592407479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585972,"discussion_content":"太厉害了，有触到了我的知识盲区","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661921614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1451509,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5EIPG3R01lW2MG1HfcPUDLKajMy7BGg8rKn5dKDbdrCreIwabwJ1RqWOJMVKqAusLaf7Y0Utomibp6ibxajflvQ/132","nickname":"我要放大🐂","note":"","ucode":"B280A95E02E7C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287396,"discussion_content":"老师，我刚刚试了一下update 语句后面加个limit 1,还是会锁表啊，我修改它之前的数据是不行的，我新增一条数据是可以的，但是我修改刚刚新增的数据是不行的，是这样吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593434393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1575571,"avatar":"https://static001.geekbang.org/account/avatar/00/18/0a/93/a189ec16.jpg","nickname":"Eric","note":"","ucode":"7EB511C384BD7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1451509,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5EIPG3R01lW2MG1HfcPUDLKajMy7BGg8rKn5dKDbdrCreIwabwJ1RqWOJMVKqAusLaf7Y0Utomibp6ibxajflvQ/132","nickname":"我要放大🐂","note":"","ucode":"B280A95E02E7C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392898,"discussion_content":"我碰到和你一样的问题。。后来自己想通了，加了limit 1并没有锁后面的行，你认为锁了后面的行是因为你执行的更新语句where条件后面还是跟着一个没有索引的字段吧，这种update语句还是会全表扫描，但是前面的行已经被锁了，所以wait，把where后面换成id就行了","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1631171864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287396,"ip_address":""},"score":392898,"extra":""},{"author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1575571,"avatar":"https://static001.geekbang.org/account/avatar/00/18/0a/93/a189ec16.jpg","nickname":"Eric","note":"","ucode":"7EB511C384BD7B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404785,"discussion_content":"是的，我也被这个忽悠住了，我想了好久。。。wc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634399109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":392898,"ip_address":""},"score":404785,"extra":""}]},{"author":{"id":1971269,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/oltLEqTrmHm2aJP99BK6tHu5h7hp4aj08wR5Wt6H31iadFduDAVvjYKmhQ2nvGbLV3lkVdiat2GRasgWXoJeTibUg/132","nickname":"杨","note":"","ucode":"7EFEFE285975C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240105,"discussion_content":"我要去实验一下  原来这么多道道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587340177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44306,"user_name":"荒漠甘泉","can_delete":false,"product_type":"c1","uid":1311894,"ip_address":"","ucode":"AD409201934C79","user_header":"https://static001.geekbang.org/account/avatar/00/14/04/96/dcb9504b.jpg","comment_is_top":true,"comment_ctime":1543404591,"is_pvip":false,"replies":[{"id":"15827","content":"不矛盾，MDL锁和表锁是两个不同的结构。<br><br>比如：<br>你要在myisam 表上更新一行，那么会加MDL读锁和表的写锁；<br>然后同时另外一个线程要更新这个表上另外一行，也要加MDL读锁和表写锁。<br><br>第二个线程的*MDL读锁是能成功加上*的，但是被表写锁堵住了。从语句现象上看，就是第二个线程要等第一个线程执行完成。<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543409690,"ip_address":"","comment_id":44306,"utype":1}],"discussion_count":32,"race_medal":0,"score":"9.2233728157873009e+18","product_id":100020801,"comment_content":"老师，本节课讲的不支持行锁的引擎，只能使用表锁，而表锁同一张表在同一时刻只能有一个更新。但是上节课讲的表级锁中的MDL锁，dml语句会产生MDL读锁，而MDL读锁不是互斥的，也就是说一张表可以同时有多个dml语句操作。感觉这两种说法有点矛盾，请老师解惑！","like_count":181,"discussions":[{"author":{"id":1002658,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4c/a2/00241866.jpg","nickname":"skyun","note":"","ucode":"38097F3FF1045C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218111,"discussion_content":"metadata lock 是用于区别ddl和dml的，增删改查的时候上读锁，修改表结构相关的语句的时候上写锁，而表锁是用于增删改上的锁，表锁和mdl锁是两个不同维度上的锁\n","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1585620807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1002658,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4c/a2/00241866.jpg","nickname":"skyun","note":"","ucode":"38097F3FF1045C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249175,"discussion_content":"表锁也分为读锁和写锁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587911863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218111,"ip_address":""},"score":249175,"extra":""}]},{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249178,"discussion_content":"表级锁包括表锁和MDL锁，这是两种，我们平常的叫法都有问题，把表锁和表级锁划上了等号","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1587911977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305374,"discussion_content":"其实表锁和表级锁(MDL) 不是一个锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599898222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":249178,"ip_address":""},"score":305374,"extra":""},{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":317962,"discussion_content":"你的说法有问题，正确来说，应该是这样：\n表级别锁包含\n1，表锁；\n2，MDL锁，即元数据锁；\n3，意向锁（InnoDB）；\n这三种表级别锁的机制都是独立的","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1603623281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305374,"ip_address":""},"score":317962,"extra":""}]},{"author":{"id":1621789,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/djAZwFHFWrjZgM22hCOKw8qweicSvWGjj0ExbM521pfMtufATMNzG4tdK89m6wUJZzxXtbXFkianIJdaMzW0qPDQ/132","nickname":"later","note":"","ucode":"1F7844D991C26F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4156,"discussion_content":"DML锁锁的是表的结构，表锁锁的是表中数据","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1565172547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1267678,"avatar":"https://static001.geekbang.org/account/avatar/00/13/57/de/1d24b93d.jpg","nickname":"LYOGA","note":"","ucode":"1FA142A2F94639","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1621789,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/djAZwFHFWrjZgM22hCOKw8qweicSvWGjj0ExbM521pfMtufATMNzG4tdK89m6wUJZzxXtbXFkianIJdaMzW0qPDQ/132","nickname":"later","note":"","ucode":"1F7844D991C26F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52561,"discussion_content":"MDL锁","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574067271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4156,"ip_address":""},"score":52561,"extra":""},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1621789,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/djAZwFHFWrjZgM22hCOKw8qweicSvWGjj0ExbM521pfMtufATMNzG4tdK89m6wUJZzxXtbXFkianIJdaMzW0qPDQ/132","nickname":"later","note":"","ucode":"1F7844D991C26F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301752,"discussion_content":"不对哦，MDL锁不仅仅是锁了表的结构，还有表的数据呢。你看MDL的写锁，会导致表数据的CRUD也无法进行的，显然就锁了表中的数据了呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598624359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4156,"ip_address":""},"score":301752,"extra":""},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315035,"discussion_content":"因为CRUD要加MDL读锁。如果有别的线程先拿到了MDL写锁（DDL），则CRUD线程阻塞","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1603238622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301752,"ip_address":""},"score":315035,"extra":""}]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397072,"discussion_content":"突然想到一个解释不知对否：\n锁是为了对竞争资源达到互斥作用；\n\n1、MDS锁的是表的结构，也就是竞争资源是表结构数据\n\n2、DML做数据增删改查，可以通过表锁来互斥，是为了数据本身资源的互斥；\n\n3、当你做DML的时候，比如查询数据的时候，首先知道你要查询的表结构，然后再查数据，查表结构的时候需要MDL读锁了，因为结构可能有变化；然后再查询具体的数据，这个时候查询操作如果需要全表互斥就需要表锁了；因此表锁和MDL锁不一样\n\n4、当你做DDL变更表数据结构的时候，这个时候肯定要首先获取MDL写锁了，这个时候不光其它线程不能更新表结构，而且其它线程也不能查询数据，因为表结构都变化了，查询的数据肯定是不准的\n\n表锁是server层的\n\n\nMDL锁也是server层的\n\n两个锁互斥资源不一样，但是有先后，首先得获取MDL锁，然后才能获取表结构\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1632556817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":13874,"discussion_content":"DML锁是用来隔离ddl和dml操作的。表锁是用来隔离表数据操作的，只针对dml操作","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1568710652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1536066,"avatar":"https://static001.geekbang.org/account/avatar/00/17/70/42/82c2947a.jpg","nickname":"悉数沉淀","note":"","ucode":"D84136FC8889BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":86914,"discussion_content":"是MDL锁\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576632313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":13874,"ip_address":""},"score":86914,"extra":""},{"author":{"id":1228424,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/88/8d15796f.jpg","nickname":"John","note":"","ucode":"A46AF2906C38C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1536066,"avatar":"https://static001.geekbang.org/account/avatar/00/17/70/42/82c2947a.jpg","nickname":"悉数沉淀","note":"","ucode":"D84136FC8889BA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310084,"discussion_content":"...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601609785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":86914,"ip_address":""},"score":310084,"extra":""}]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430719,"discussion_content":"不矛盾，MDL锁和表锁是两个不同的结构。\n\n比如：\n你要在myisam 表上更新一行，那么会加MDL读锁和表的写锁；\n然后同时另外一个线程要更新这个表上另外一行，也要加MDL读锁和表写锁。\n\n第二个线程的*MDL读锁是能成功加上*的，但是被表写锁堵住了。从语句现象上看，就是第二个线程要等第一个线程执行完成。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1543409690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1611886,"avatar":"https://static001.geekbang.org/account/avatar/00/18/98/6e/38b4a4ce.jpg","nickname":"渊鱼","note":"","ucode":"EC52C7F6863FA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366202,"discussion_content":"对于行数据修改的同步是表锁和行锁来保证的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617979992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1611886,"avatar":"https://static001.geekbang.org/account/avatar/00/18/98/6e/38b4a4ce.jpg","nickname":"渊鱼","note":"","ucode":"EC52C7F6863FA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366201,"discussion_content":"上MDL元数据读锁为了在这期间不要让表发生变化.","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617979914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2350043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","nickname":"Geek_7794e2","note":"","ucode":"2F749554FEA20D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359191,"discussion_content":"那么说innodb 只有行锁和 mdl (表级锁了)？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616134518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2350043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","nickname":"Geek_7794e2","note":"","ucode":"2F749554FEA20D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":369579,"discussion_content":"支持表锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619085107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":359191,"ip_address":""},"score":369579,"extra":""},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2350043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","nickname":"Geek_7794e2","note":"","ucode":"2F749554FEA20D","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":543072,"discussion_content":"表级锁其实还有意向锁，当然行锁里面还有一堆不同算法实现的锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640944491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":359191,"ip_address":""},"score":543072,"extra":""}]},{"author":{"id":2846365,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/6e/9d/a25fd7aa.jpg","nickname":"西出阳关无故人。","note":"","ucode":"313CB207438AE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575096,"discussion_content":"在innodb引擎出现之前，同一时刻都只有一个线程对表操作，所以理论上可以用一种锁来实现，即不管是对表dml还是ddl操作，用一种锁来实现读读不互斥，读写互斥，写写互斥不就行了吗？还要再搞出MDL锁和表锁这两种锁，确实有点迷。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654592241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2604432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/bd/90/99ab3369.jpg","nickname":"局外人","note":"","ucode":"B8E2ED7A8ABE11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392070,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630811314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2671226,"avatar":"","nickname":"Geek_6a3c4b","note":"","ucode":"94E5A47FEA78BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383360,"discussion_content":"好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626068376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2034632,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","nickname":"图灵机","note":"","ucode":"EB02DB653AD591","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281994,"discussion_content":"意思是在myisam上对一张表执行update操作时必须手动的加表的写锁吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591858193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518793,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/c9/462afe28.jpg","nickname":"小白","note":"","ucode":"11FC209D9ED65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217132,"discussion_content":"好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585500287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1908392,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/1e/a8/225e715b.jpg","nickname":"华振宇","note":"","ucode":"2962084A13FE57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209867,"discussion_content":"meta data lock","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584683100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177331,"discussion_content":"MDL,DDL,DML傻傻分不清楚。。。专业名词也太多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582095264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301757,"discussion_content":"MDL（metadata lock）、DDL（data definition Language）、DML（da ta Manipulation language）","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1598624614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":177331,"ip_address":""},"score":301757,"extra":""}]},{"author":{"id":1160593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/91/8750709f.jpg","nickname":"Y%...............Y%","note":"","ucode":"94089F09378F07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73990,"discussion_content":"MDL锁是针对于ddl语句吧。针对于表结构发生变化产生的锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575620542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1324986,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/sj5FNib6wGL6lZoS9ZlhCyWehRmByToksrJicgJia05iaGEcSp9uthmJKlXuMGn1CUBicfdpj4XoMsgyJibquAGwIqIw/132","nickname":"艾瑞克","note":"","ucode":"3886599F102FE7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1160593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/91/8750709f.jpg","nickname":"Y%...............Y%","note":"","ucode":"94089F09378F07","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211932,"discussion_content":"个人认为，MDL锁，分读锁和写锁。DML操作时加MDL读锁，DDL操作时加MDL写锁或读写锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584893911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":73990,"ip_address":""},"score":211932,"extra":""},{"author":{"id":1518793,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2c/c9/462afe28.jpg","nickname":"小白","note":"","ucode":"11FC209D9ED65F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1324986,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/sj5FNib6wGL6lZoS9ZlhCyWehRmByToksrJicgJia05iaGEcSp9uthmJKlXuMGn1CUBicfdpj4XoMsgyJibquAGwIqIw/132","nickname":"艾瑞克","note":"","ucode":"3886599F102FE7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217138,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585500682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211932,"ip_address":""},"score":217138,"extra":""}]}]},{"had_liked":false,"id":58290,"user_name":"蓝天","can_delete":false,"product_type":"c1","uid":1318702,"ip_address":"","ucode":"E17EFE8FA5D5B0","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/2e/27d8b06d.jpg","comment_is_top":true,"comment_ctime":1547027502,"is_pvip":false,"replies":[{"id":"21014","content":"不是“以粒度最小为准”<br>而是如果有多种锁，必须得“全部不互斥”才能并行，只要有一个互斥，就得等。<br><br>好问题<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547043131,"ip_address":"","comment_id":58290,"utype":1}],"discussion_count":9,"race_medal":0,"score":"9.2233725280281006e+18","product_id":100020801,"comment_content":"老师：上一节讲的dml时会产生读MDL锁（表锁），也就是update会持有读MDL。读和读不互斥。但是对于行锁来说。两个update同时更新一条数据是互斥的。这个是因为多种锁同时存在时，以粒度最小的锁为准的原因么？","like_count":114,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139750,"discussion_content":"你提的两个update同时更新一条数据，在innodb引擎下，其实与mdl读锁没关系，和表锁也没关系，主要是行锁引发的等待。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1579315054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249197,"discussion_content":"不是没关系，是锁不互斥，所以现象上来看感觉是没关系","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1587912446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":139750,"ip_address":""},"score":249197,"extra":""},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1183518,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","nickname":"我们在路上","note":"","ucode":"0DB77DB7C64C47","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301758,"discussion_content":"锁不互斥 不就代表没关系吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598624764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":249197,"ip_address":""},"score":301758,"extra":""},{"author":{"id":2287841,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e8/e1/6045b299.jpg","nickname":"LPF","note":"","ucode":"036C552D7251E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324717,"discussion_content":"行锁互斥，行锁与表锁不互斥，因此行锁不用等表锁，行锁之间需要等待。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1605158839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":301758,"ip_address":""},"score":324717,"extra":""}]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397078,"discussion_content":"把之前的评论删除了，更新如下：\n\n两个update同时更新，数据结构没变化,首先是获取MDL读锁，MDL是servier层得锁\n\n但是两个update同时更新的如果是一行，第一个更新给数据上了行锁，第二个更新拿到了MDL读锁，拿数据的行锁得时候阻塞了；\n\n注意：\n行锁是InnoDB引擎层的锁\n\n获取锁的顺序是先server层的锁获取成功，然后再获取引擎层的锁，也就是需要逐个关卡通过\n","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1632557624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435990,"discussion_content":"不是“以粒度最小为准”\n而是如果有多种锁，必须得“全部不互斥”才能并行，只要有一个互斥，就得等。\n\n好问题\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1547043131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2006342,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/9d/46/ce8f7a26.jpg","nickname":"I LOVE DM","note":"","ucode":"6EA297D5A0E4C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389860,"discussion_content":"mdl是server层的锁 ，行锁是Innodb的锁 ，个人理解这是两种不同层面的锁，各有个的机制，互不干涉","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629453830,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3021110,"avatar":"","nickname":"Geek_eca226","note":"","ucode":"E738A5618F3218","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583827,"discussion_content":"select获取的是mdl读锁，要获取写锁必须是ddl语句才行，比如alter","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660409601,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2299422,"avatar":"","nickname":"Geek_be5590","note":"","ucode":"15772BD6CA7955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385195,"discussion_content":"DML锁和行锁不会同时存在且冲突吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626940769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49598,"user_name":"三木禾","can_delete":false,"product_type":"c1","uid":1109458,"ip_address":"","ucode":"39C37228236860","user_header":"https://static001.geekbang.org/account/avatar/00/10/ed/d2/e3ae7ddd.jpg","comment_is_top":true,"comment_ctime":1544745412,"is_pvip":false,"replies":[{"id":"17864","content":"好问题<br><br>理论上说，之前没死锁，现在A加进来，出现了死锁，那么死锁的环里面肯定包含A，<br>因此只要从A出发去扫就好了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544749802,"ip_address":"","comment_id":49598,"utype":1}],"discussion_count":3,"race_medal":0,"score":"9.2233723433422008e+18","product_id":100020801,"comment_content":"老师，如果开启事务，然后进行死锁检测，如果发现有其它线程因为这个线程的加入，导致其它线程的死锁，这个流程能帮着分析一下么","like_count":71,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432679,"discussion_content":"好问题\n\n理论上说，之前没死锁，现在A加进来，出现了死锁，那么死锁的环里面肯定包含A，\n因此只要从A出发去扫就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544749802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066229,"avatar":"https://static001.geekbang.org/account/avatar/00/10/44/f5/486d696c.jpg","nickname":"ethan","note":"","ucode":"DA70975A40ABE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359938,"discussion_content":"问题是怎么知道A加入进来之后出现的是普通等待还是死锁呢？所以还是要完整的检测所有相关事务持有的锁是否形成了循环依赖才行，那么这就是先有鸡还是现有蛋的问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616330637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1066229,"avatar":"https://static001.geekbang.org/account/avatar/00/10/44/f5/486d696c.jpg","nickname":"ethan","note":"","ucode":"DA70975A40ABE2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576215,"discussion_content":"不是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655354503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":359938,"ip_address":""},"score":576215,"extra":""}]}]},{"had_liked":false,"id":44388,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":true,"comment_ctime":1543418157,"is_pvip":false,"replies":[{"id":"15873","content":"1. 就是持续监控，发现新的就存起来<br><br>2. 不会，reset_connection只是复位状态，恢复到连接和权限验证之后的状态，没有重连","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543427988,"ip_address":"","comment_id":44388,"utype":1}],"discussion_count":3,"race_medal":0,"score":"9.2233722144918999e+18","product_id":100020801,"comment_content":"老师，针对我的第一个问题。我就是想问怎么能拿到比较全得死锁信息以及把这些信息保存到文件里。<br>第二个问题，如果reset以后，是不是就失去了长连接的意义了呢？相当于再次进行连接。","like_count":41,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430746,"discussion_content":"1. 就是持续监控，发现新的就存起来\n\n2. 不会，reset_connection只是复位状态，恢复到连接和权限验证之后的状态，没有重连","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543427988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063308,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/8c/089525aa.jpg","nickname":"小乙哥","note":"","ucode":"C77E79BEA0C325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395550,"discussion_content":"show engine innodb status; 可以用这个命令看死锁日志","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632313947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317965,"discussion_content":"采用等待图（wait-for graph）算法检测","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603623571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44752,"user_name":"武者","can_delete":false,"product_type":"c1","uid":1313648,"ip_address":"","ucode":"C3FF2AB69F5C31","user_header":"https://static001.geekbang.org/account/avatar/00/14/0b/70/a2c1723c.jpg","comment_is_top":true,"comment_ctime":1543486451,"is_pvip":false,"replies":[{"id":"15972","content":"这个你得同时贴表结构。<br><br>还有，会不会锁，不是验证一下就可以吗，两个都用begin + 语句，<br><br>两阶段锁协议会帮助你😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543497735,"ip_address":"","comment_id":44752,"utype":1}],"discussion_count":8,"race_medal":0,"score":"9.2233721157076992e+18","product_id":100020801,"comment_content":"老师 你好 <br>有以下情况 帮忙分析下会锁表不<br><br>update a，b set a.name = b.name  where a.uid=b.uid and b.group=1；<br>update c，b set c.age=b.age where c.uid=b.uid and b.group = 1；<br><br>如果两个语句同时执行期间 是不是有个执行不了 要等b解锁。还是说没有更新b的字段b不会锁，两个可并行执行<br>请老师指导下<br><br>","like_count":18,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430828,"discussion_content":"这个你得同时贴表结构。\n\n还有，会不会锁，不是验证一下就可以吗，两个都用begin + 语句，\n\n两阶段锁协议会帮助你😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543497735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1602420,"avatar":"https://static001.geekbang.org/account/avatar/00/18/73/74/3bf4b74e.jpg","nickname":"阿德","note":"","ucode":"186D5E19E3CB6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163929,"discussion_content":"对于b表应该加的是读锁，读读不互斥，读写互斥，所以现在更新b表需要加写锁，需要等待读锁释放","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1581128473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1692713,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d4/29/5f52a82c.jpg","nickname":"萝卜条","note":"","ucode":"4BC975BBFE50A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39371,"discussion_content":"刚才在MySQL5.7下测试了一下，表结构为：\nCREATE TABLE `a` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `uid` int(10) unsigned NOT NULL DEFAULT &#39;0&#39;,\n  `name` varchar(30) NOT NULL DEFAULT &#39;&#39;,\n  `age` tinyint(3) unsigned NOT NULL DEFAULT &#39;0&#39;,\n  `group` tinyint(2) unsigned NOT NULL DEFAULT &#39;0&#39;,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4;\n\nbegin 对a,c的两个事务，执行并不需要等待，可以同时执行。\n但是b表是锁定的，对b表数据的更新是需要等待a,c事务的提交后，对b表解锁后才可以。\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1571918886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1284659,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/33/de01b796.jpg","nickname":"胖狐狸","note":"","ucode":"810DFA27C80837","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1692713,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d4/29/5f52a82c.jpg","nickname":"萝卜条","note":"","ucode":"4BC975BBFE50A7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215488,"discussion_content":"是的，我测试也是这个样子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585325036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39371,"ip_address":""},"score":215488,"extra":""},{"author":{"id":1675716,"avatar":"https://static001.geekbang.org/account/avatar/00/19/91/c4/bcdcda65.jpg","nickname":"明月几时","note":"","ucode":"E46C844EAB2CD0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1284659,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/33/de01b796.jpg","nickname":"胖狐狸","note":"","ucode":"810DFA27C80837","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":221967,"discussion_content":"所以就是对b表添加了读锁，ac两个事务可以并行，如果更新的话就需要添加写锁，就得等ac两个事务执行完，释放读锁后才能更新对吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586089610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":215488,"ip_address":""},"score":221967,"extra":""}]},{"author":{"id":1284659,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9a/33/de01b796.jpg","nickname":"胖狐狸","note":"","ucode":"810DFA27C80837","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215492,"discussion_content":"begin;update a,b set a.name=b.name where a.uid=b.uid;\nbegin;update c,b set c.age=b.age where c.uid=b.uid;\n并不需要等待，可以直接执行","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585325112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543608,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8d/b8/b245d22c.jpg","nickname":"shoe","note":"","ucode":"297117CE5C80C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7627,"discussion_content":"不更新的表也会锁，但我不知道为什么。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567589946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1529909,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo7yEJ1jD54Sk6EZGg9fXZNCZHfuJYzp6Z1N7kgbtb6JZeHvNo3nhicvGgy3f6EbIqibYKunicZZHgOQ/132","nickname":"Geek_1485e9","note":"","ucode":"0214BDC7DF379C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1543608,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8d/b8/b245d22c.jpg","nickname":"shoe","note":"","ucode":"297117CE5C80C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243397,"discussion_content":"个人理解是：虽然b表没有更新操作，但是由于两条update语句都没有触发索引（前提是b表和a表一样，只是主键索引），所以对b表的读操作仍会导致对b表加表级锁的读锁，则此时如果在两个事务执行完成之前还相对b表进行更新操作，是需要申请表级锁的写锁的，所以需要等待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587537777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7627,"ip_address":""},"score":243397,"extra":""}]}]},{"had_liked":false,"id":44160,"user_name":"Tony Du","can_delete":false,"product_type":"c1","uid":1001661,"ip_address":"","ucode":"F5FCC400E615EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/bd/6c7d4230.jpg","comment_is_top":false,"comment_ctime":1543375910,"is_pvip":false,"replies":[{"id":"15734","content":"分析得很好。<br><br>嗯嗯索引和锁的内容很多，也是需要慢慢安排😄<br>突然上概念怕大家看得不开心😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543379784,"ip_address":"","comment_id":44160,"utype":1}],"discussion_count":6,"race_medal":0,"score":"740277750822","product_id":100020801,"comment_content":"方案一，事务相对较长，则占用锁的时间较长，会导致其他客户端等待资源时间较长。<br>方案二，串行化执行，将相对长的事务分成多次相对短的事务，则每次事务占用锁的时间相对较短，其他客户端在等待相应资源的时间也较短。这样的操作，同时也意味着将资源分片使用（每次执行使用不同片段的资源），可以提高并发性。<br>方案三，人为自己制造锁竞争，加剧并发量。<br>方案二相对比较好，具体还要结合实际业务场景。<br><br>另，对于innodb的行锁，我觉得可以增加一讲，如何加锁（依赖于具体的隔离级别，是否有索引，是否是唯一索引，SQL的执行计划），特别是在RR隔离级别下的GAP锁，对于innodb，RR级别是可以防止幻读的。","like_count":172,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430658,"discussion_content":"分析得很好。\n\n嗯嗯索引和锁的内容很多，也是需要慢慢安排😄\n突然上概念怕大家看得不开心😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543379784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":404798,"discussion_content":"看到兄弟问的问题，其实我就知道兄弟对锁的理解很到位了，因为我也理解到位了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1634399909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406558,"discussion_content":"凡尔赛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634794663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":404798,"ip_address":""},"score":406558,"extra":""},{"author":{"id":2667912,"avatar":"https://static001.geekbang.org/account/avatar/00/28/b5/88/9b65e31c.jpg","nickname":"Y          X","note":"","ucode":"C9926CA7510F3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1601661,"avatar":"","nickname":"GEEKBANG_8559966","note":"","ucode":"C3C87C3D7164FD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409984,"discussion_content":"属实是到位了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635563744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":404798,"ip_address":""},"score":409984,"extra":""}]},{"author":{"id":1064247,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/37/bbe5f958.jpg","nickname":"王晨","note":"","ucode":"942D9BD67A3418","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369518,"discussion_content":"实际使用也是分批删除，比如要删除 1 亿条，也是要分批慢慢删，肯定不能一下子删除 1 亿条。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619063999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289882,"discussion_content":"第一行：长事务占据行锁不释放阻塞其它事务执行\n第二行：将一个大删除拆分多个小删除串行执行，减少了对资源锁定时间，可以提高并发度\n第三行：将一个大删除拆分多个小删除并行执行，导致锁竞争激烈，加剧并发量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594257918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45417,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543635378,"is_pvip":false,"replies":[{"id":"16171","content":"继续手动👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543638579,"ip_address":"","comment_id":45417,"utype":1}],"discussion_count":6,"race_medal":0,"score":"650083697074","product_id":100020801,"comment_content":"继续把该讲内容总结为几个问题, 大家复习的时候可以先尝试回答这些问题检查自己的掌握程度:<br>\t1. <br>两阶段锁的概念是什么? 对事务使用有什么帮助?<br>\t2. <br>死锁的概念是什么? 举例说明出现死锁的情况.<br>\t3. <br>死锁的处理策略有哪两种? <br>\t4. <br>等待超时处理死锁的机制什么?有什么局限?<br>\t5. <br>死锁检测处理死锁的机制是什么? 有什么局限?<br>\t6. <br>有哪些思路可以解决热点更新导致的并发问题?<br><br>","like_count":151,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431027,"discussion_content":"继续手动👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543638579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1352618,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a3/aa/8b475aa5.jpg","nickname":"冰点","note":"","ucode":"700E0590046D15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385989,"discussion_content":"我猜这个是大佬王磊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627373511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289884,"discussion_content":"优秀啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594258035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1518795,"avatar":"","nickname":"Geek_2ac804","note":"","ucode":"EDF69B20030BB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288594,"discussion_content":"带着问题去阅读，效率更高，谢谢总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593819748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073487,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/4f/e0b71e72.jpg","nickname":"我是谁","note":"","ucode":"D6C67E29D62EA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261606,"discussion_content":"大佬，这些问题你都是怎么总结出来的，想学习下方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588986188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2052476,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Qq6oLfOTgKzjiculoUDicdv7WoY1iabPfOTumibWeInVP2Mnod9XVPrNSClvIiaLbvtDlIjRnWUNaXcYwREGzlcaDog/132","nickname":"Geek_在下蟑螂王","note":"","ucode":"E1F5BBB5BC5962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1073487,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/4f/e0b71e72.jpg","nickname":"我是谁","note":"","ucode":"D6C67E29D62EA9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298021,"discussion_content":"怕是个小面试官","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1597146319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":261606,"ip_address":""},"score":298021,"extra":""}]}]},{"had_liked":false,"id":44590,"user_name":"岁月安然","can_delete":false,"product_type":"c1","uid":1258557,"ip_address":"","ucode":"4538C24B67B513","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/3d/51762e76.jpg","comment_is_top":false,"comment_ctime":1543460704,"is_pvip":false,"replies":[{"id":"15900","content":"👍🏿这个总结","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543464588,"ip_address":"","comment_id":44590,"utype":1}],"discussion_count":9,"race_medal":0,"score":"529824438112","product_id":100020801,"comment_content":"总结：<br>两阶段锁：在 InnoDB 事务中，行锁是在需要的时候才加上的，但并不是不需要了就立刻释放， 而是要等到事务结束时才释放。<br>建议：如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁尽量往后放。<br>死锁：当并发系统中不同线程出现循环资源依赖，涉及的线程都在等待别的线程释放资源时，就会导致这几个线程都进入无限等待的状态。<br>解决方案：<br>1、通过参数 innodb_lock_wait_timeout 根据实际业务场景来设置超时时间，InnoDB引擎默认值是50s。<br>2、发起死锁检测，发现死锁后，主动回滚死锁链条中的某一个事务，让其他事务得以继续执行。将参数 innodb_deadlock_detect 设置为 on，表示开启这个逻辑（默认是开启状态）。<br>如何解决热点行更新导致的性能问题？<br>1、如果你能确保这个业务一定不会出现死锁，可以临时把死锁检测关闭掉。一般不建议采用<br>2、控制并发度，对应相同行的更新，在进入引擎之前排队。这样在InnoDB内部就不会有大量的死锁检测工作了。<br>3、将热更新的行数据拆分成逻辑上的多行来减少锁冲突，但是业务复杂度可能会大大提高。<br><br>innodb行级锁是通过锁索引记录实现的，如果更新的列没建索引是会锁住整个表的。","like_count":123,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430801,"discussion_content":"👍🏿这个总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543464588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289886,"discussion_content":"最后一句话有问题的，更新的时候如果不是根据主键索引或者唯一二级索引都会锁住整个表","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1594258384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1641319,"avatar":"https://static001.geekbang.org/account/avatar/00/19/0b/67/dc49a1a8.jpg","nickname":"在路上","note":"","ucode":"E1184E76B14431","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578876,"discussion_content":"最后一句话有问题，应该是更新的语句后面的where条件没有索引，会锁住整个表；或者说：更新的时候如果不是根据主键索引或者唯一二级索引都会锁住整个表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1657074931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292365,"discussion_content":"其实林老师还说过用中间件解决这个问题。。例如rocketmq 的分布式事物解决这个问题，相对而言比第三条更简单一些，可以业务拆分且最重的一个动作，放到mq中，可以使用全局顺序队列，就实现了更新之前排队，也可以默认多个队列对应数据库的多个记录。也可以尽量减少业务代码实现。没有mysql高手，业务上自己想办法。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595206687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345592,"discussion_content":"目前业界解决的办法有两个：1是减小行锁的密度，最多的方案就是拆分成多个行。问题在于电商这类场景减到1时，要锁临界资源。如果是一个个减，问题不大。2是做一定次数的自旋，但是在数据库场景里，不推荐。宁可尽快释放连接，下次再重试。对于业务是幂等的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611750935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b9/19/f4ef2c9a.jpg","nickname":"秦穆之","note":"","ucode":"709C49BFCBB776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211019,"discussion_content":"innodb行级锁是通过锁索引记录实现的，如果更新的列没建索引是会锁住整个表的。  这句话要怎么理解？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584799649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2044977,"avatar":"","nickname":"Geeker_Lee","note":"","ucode":"36D87F994C3E2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1489177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b9/19/f4ef2c9a.jpg","nickname":"秦穆之","note":"","ucode":"709C49BFCBB776","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316290,"discussion_content":"同问，有点疑惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603381112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211019,"ip_address":""},"score":316290,"extra":""},{"author":{"id":2367735,"avatar":"","nickname":"Geek_e1987e","note":"","ucode":"B44F9EE148409B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2044977,"avatar":"","nickname":"Geeker_Lee","note":"","ucode":"36D87F994C3E2C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336395,"discussion_content":"没有用到索引的写操作会锁住整张表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608562647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":316290,"ip_address":""},"score":336395,"extra":""},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1489177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b9/19/f4ef2c9a.jpg","nickname":"秦穆之","note":"","ucode":"709C49BFCBB776","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369742,"discussion_content":"更新没有索引的列会导致整张表都被锁住。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619146516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":211019,"ip_address":""},"score":369742,"extra":""}]}]},{"had_liked":false,"id":73343,"user_name":"suynan","can_delete":false,"product_type":"c1","uid":1023214,"ip_address":"","ucode":"0AAD1BA9D22D2C","user_header":"","comment_is_top":false,"comment_ctime":1551863779,"is_pvip":false,"replies":[{"id":"27152","content":"感谢鼓励🤝","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552147257,"ip_address":"","comment_id":73343,"utype":1}],"discussion_count":4,"race_medal":0,"score":"400983822307","product_id":100020801,"comment_content":"系列课程看到现在，我能说，这是我看过的最好的mysql课程吗。网上的文章要么漏洞百出小学生水平，要么浅尝辄止并赠送一堆废话，要么千篇一律copy加转载。<br>说实话，真的被误导过，可怕的不是误导我一人，而是千千万万的菜鸟开发者。<br>文章很用心，感谢作者，超值！","like_count":93,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442033,"discussion_content":"感谢鼓励🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552147257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301764,"discussion_content":"哈哈，看书是枯燥，最好是有一定基础再看书，查漏补缺，对应需要深入了解的知识点去看，不要从头看到尾，这样不仅会打击积极性，而且看完后留在大脑中的东西不多，还费时间。专栏 最大的好处就是有很多人可以根据内容畅所欲言的交流想法，其实可能是专栏篇幅有限，很多地方不能讲到尽善尽美，多亏了下面的评论和文章中公开的注释，才能解答很多心中的疑问。我觉得能在这个平台写专栏的，内容质量都不会差，好专栏和次专栏的区别就是，用户对知识讨论的深度和激烈程度吧。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1598625295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1146163,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7d/33/e9246dfc.jpg","nickname":"磊娃子","note":"","ucode":"74352134F37064","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204976,"discussion_content":"点赞一个，买了好几本市面上的mysql书，看的是云里雾里的，不仅没学到知识反而信心全无。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584243705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064247,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3d/37/bbe5f958.jpg","nickname":"王晨","note":"","ucode":"942D9BD67A3418","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369520,"discussion_content":"看书也到了需要选大牌的阶段了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619064172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43981,"user_name":"泉","can_delete":false,"product_type":"c1","uid":1027355,"ip_address":"","ucode":"F3447D3D5D5197","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ad/1b/0c558e7e.jpg","comment_is_top":false,"comment_ctime":1543361134,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"293601137262","product_id":100020801,"comment_content":"我选第二种。<br>第一种，需要锁资源多，事务较大，持有锁时间最长。<br>第三种，多个事务会对同一行产生锁竞争，消耗cpu资源。<br>请指正。","like_count":68,"discussions":[{"author":{"id":1327421,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIia6JywZv309u4PQHYlYIKccZpwhxjbsLYCpzibMAKv1FF1eESnwIficE9obQDobd97ibdASRDDfG9IA/132","nickname":"HELLBOY","note":"","ucode":"99B34C30726248","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266575,"discussion_content":"删除的时候不加条件吗 例如 id从几开始，这样的话 第三种的效率最高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589534466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44319,"user_name":"Aurora","can_delete":false,"product_type":"c1","uid":1302157,"ip_address":"","ucode":"84CB75BC2D7680","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/8d/99536c5b.jpg","comment_is_top":false,"comment_ctime":1543407230,"is_pvip":false,"replies":[{"id":"15814","content":"逐行加锁，<br><br>事务提交的时候统一释放。— 记得两阶段锁哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543409044,"ip_address":"","comment_id":44319,"utype":1}],"discussion_count":15,"race_medal":0,"score":"276421314174","product_id":100020801,"comment_content":"针对第一层楼主提到的问题，我记得是，如果update 没有走索引，innodb内部是全表根据主键索引逐行扫描 逐行加锁，释放锁。","like_count":64,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430723,"discussion_content":"逐行加锁，\n\n事务提交的时候统一释放。— 记得两阶段锁哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543409044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1604511,"avatar":"https://static001.geekbang.org/account/avatar/00/18/7b/9f/7825b97c.jpg","nickname":"竹荀","note":"","ucode":"3380C18DCAD203","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2071,"discussion_content":"还好你提醒了，否则我就以为事直接锁表了，逐行加锁跟锁表差别还是有的","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1563244202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1107606,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/96/eb143e46.jpg","nickname":"别天神","note":"","ucode":"42A08D6EF5C59A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1604511,"avatar":"https://static001.geekbang.org/account/avatar/00/18/7b/9f/7825b97c.jpg","nickname":"竹荀","note":"","ucode":"3380C18DCAD203","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51065,"discussion_content":"我还以为update不走索引是表锁，这里记录下","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573806574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2071,"ip_address":""},"score":51065,"extra":""},{"author":{"id":1207854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/2e/008b5481.jpg","nickname":"路过的猪","note":"","ucode":"5CC5FEB7977289","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1107606,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e6/96/eb143e46.jpg","nickname":"别天神","note":"","ucode":"42A08D6EF5C59A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178723,"discussion_content":"锁的是所有行和间隙，只是功能上等同于表锁。RR级别下是不会逐行释放锁的（事务结束后才一起释放所有行）；RC级别下给某一行加锁后，如果不满足where条件才会释放该行（逐行释放）。","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1582192479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":51065,"ip_address":""},"score":178723,"extra":""},{"author":{"id":1556722,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c0/f2/1b2ed786.jpg","nickname":"巴萨巴萨！！！","note":"","ucode":"C204AD44347738","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207854,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6e/2e/008b5481.jpg","nickname":"路过的猪","note":"","ucode":"5CC5FEB7977289","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293489,"discussion_content":"是锁的某一行吧，而不是所有行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595557405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":178723,"ip_address":""},"score":293489,"extra":""}]},{"author":{"id":2542376,"avatar":"https://static001.geekbang.org/account/avatar/00/26/cb/28/21a8a29e.jpg","nickname":"夏天","note":"","ucode":"5F224DDAC94DFF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587393,"discussion_content":"5.7已经优化了，不符合就释放锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663031389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2650951,"avatar":"https://static001.geekbang.org/account/avatar/00/28/73/47/0dc38e56.jpg","nickname":"ᴢʜᴜʏɪǫɪɴɢ","note":"","ucode":"CD093C6FA7B871","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572913,"discussion_content":"如果是RC/RU隔离级别，其实没索引也不会锁表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653038990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337529,"discussion_content":"那既然是给每一行加锁 为什么不是找到了数据所在的那一行 直接给那一行加锁就行了  为什么要把每行都锁住呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608963844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369743,"discussion_content":"因为没有索引，不确定满足条件的行在什么地方，且为了阻止其他线程有新的满足条件的值插入，所以要把扫描过的记录和记录之间的间隙都加锁","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1619146791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337529,"ip_address":""},"score":369743,"extra":""},{"author":{"id":2874237,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/db/7d/a3510ae3.jpg","nickname":"凯林","note":"","ucode":"20A1024A7ECE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551764,"discussion_content":"但是可以在逐行扫描的时候，判断这一行是否满足条件，不满足就不加锁，满足才加锁，这样不可以吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645104909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":369743,"ip_address":""},"score":551764,"extra":""}]},{"author":{"id":1242467,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/63/53639bb7.jpg","nickname":"Tulane","note":"","ucode":"E1F5108B9E738F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310813,"discussion_content":"插眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602055041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1101454,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ce/8e/204736bb.jpg","nickname":"adrian_xia","note":"","ucode":"957C329EAFD31C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291327,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594781555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117597,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0d/9d/58d09086.jpg","nickname":"达达队长","note":"","ucode":"1C3F2E4F6B7637","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244481,"discussion_content":"插眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587605697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188176,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/50/265671fd.jpg","nickname":"LGY001","note":"","ucode":"29CA0F9501D3EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204944,"discussion_content":"顶你上去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584241583,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69249,"user_name":"京南游子","can_delete":false,"product_type":"c1","uid":1154608,"ip_address":"","ucode":"0DBAC24EDDA9CA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJjbYMNwhsazDAUyxNkEFkcCs3ics3RetwSn92aquTwczx6ej4FPpANpZWSCich32UND3xMhGHv5ODg/132","comment_is_top":false,"comment_ctime":1550706703,"is_pvip":false,"replies":[{"id":"24588","content":"不会出现死锁，就是普通的单向锁等待<br><br>但是我们知道不会死锁，InnoDB可不知道，所以它得做死锁检测才能得到“没有死锁”这个结论，<br>我们说吃CPU的就是死锁检测这个逻辑","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550711485,"ip_address":"","comment_id":69249,"utype":1}],"discussion_count":1,"race_medal":0,"score":"160464496655","product_id":100020801,"comment_content":"请问老师，本课举的例子，预售一年电影票导致CPU占用率100%，这怎么可能是死锁导致的呢？这种场景会出现互等锁的情景吗？","like_count":38,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440023,"discussion_content":"不会出现死锁，就是普通的单向锁等待\n\n但是我们知道不会死锁，InnoDB可不知道，所以它得做死锁检测才能得到“没有死锁”这个结论，\n我们说吃CPU的就是死锁检测这个逻辑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550711485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44359,"user_name":"bing","can_delete":false,"product_type":"c1","uid":1067589,"ip_address":"","ucode":"6ADAA36B2B732C","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/45/04a13bf9.jpg","comment_is_top":false,"comment_ctime":1543414082,"is_pvip":false,"replies":[{"id":"15999","content":"是个好的实践经验👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543537200,"ip_address":"","comment_id":44359,"utype":1}],"discussion_count":3,"race_medal":0,"score":"156162236738","product_id":100020801,"comment_content":"在开发时一般都是按照顺序加锁来避免死锁。比如都是按照先拿t1,再拿t2.","like_count":37,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430738,"discussion_content":"是个好的实践经验👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543537200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2710334,"avatar":"","nickname":"Geek_ee1dc7","note":"","ucode":"3CC626AF1B3EF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385225,"discussion_content":"请问可以如何做到顺序加锁呢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1626946381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2691274,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJSmTXA1QV3OwjMI7s1uTbwdiasWicV2OZpOOwMFgFfaCs99s609lxyIs3fsGAXox89CFnCxiczarPSg/132","nickname":"Geek_e69687","note":"","ucode":"2F67C8D284364C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2710334,"avatar":"","nickname":"Geek_ee1dc7","note":"","ucode":"3CC626AF1B3EF2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386520,"discussion_content":"就是 order by，比如 Django 中加行锁时排序的使用示例：\nUser.objects.select_for_update().filter(age=18).order_by(&#39;-id&#39;)\n两个或多个事务都使用这种查询方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627626113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":385225,"ip_address":""},"score":386520,"extra":""}]}]},{"had_liked":false,"id":54383,"user_name":"～嗡嗡","can_delete":false,"product_type":"c1","uid":1045271,"ip_address":"","ucode":"CED7A6FD512AA9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/17/76b9d2e5.jpg","comment_is_top":false,"comment_ctime":1545839172,"is_pvip":false,"replies":[{"id":"19749","content":"对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545875470,"ip_address":"","comment_id":54383,"utype":1}],"discussion_count":6,"race_medal":0,"score":"147574727236","product_id":100020801,"comment_content":"个人理解，选择第二种<br>1.直接delete 10000可能使得执行事务时间过长<br>2.效率慢点每次循环都是新的短事务，并且不会锁同一条记录<br>3.效率虽高，但容易锁住同一条记录，发生死锁的可能性比较高<br><br>","like_count":34,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434441,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545875470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4498,"discussion_content":"第三种情况，如果提前按照id将数据分为互不重复的20组，怎么会锁住同一条记录了？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1565493744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":30147,"discussion_content":"这种就不会呀。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570801795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4498,"ip_address":""},"score":30147,"extra":""}]},{"author":{"id":1581878,"avatar":"https://static001.geekbang.org/account/avatar/00/18/23/36/8bc95dca.jpg","nickname":"Lee","note":"","ucode":"5A232B7388EB2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559714,"discussion_content":"‘’新的短事务‘，怎么确定是新的事务？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648893086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030449,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b9/31/636e9007.jpg","nickname":"melo","note":"","ucode":"BF381B18E75867","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221077,"discussion_content":"少量多次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585971628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165775,"discussion_content":"是的，分段处理数据是不会锁住同一条记录的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581325904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44333,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1543409913,"is_pvip":false,"replies":[{"id":"15868","content":"1. show engine innodb status 里面有信息，不过不是很全…<br>2. 5.7的reset_connection接口可以考虑一下<br>3. 用redis的话，为了避免超卖需要增加了很多机制来保证。修改都在数据库里执行就方便点。前提是要解决热点问题<br>4. 我认识几位处理问题和分析问题经验非常丰富的专家，不用懂源码，但是原理还是要很清楚的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543419814,"ip_address":"","comment_id":44333,"utype":1}],"discussion_count":4,"race_medal":0,"score":"117507526905","product_id":100020801,"comment_content":"老师我有几个问题:<br>1.如何在死锁发生时,就把发生的sql语句抓出来？<br>2.在使用连接池的情况下,连接会复用.比如一个业务使用连接set sql_select_limit=1,释放掉以后.其他业务复用该连接时,这个参数也生效.请问怎么避免这种情况,或者怎么禁止业务set session？<br>3.很好奇双11的成交额,是通过redis累加的嘛？<br>4.不会改源码能成为专家嘛？😄<br>","like_count":27,"discussions":[{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289897,"discussion_content":"在业务里，比如使用mybatis使用数据库的连接池，一个事务获取一个连接时，另一个事务这时是获取不到这个连接的，只有一个事务执行完释放连接到连接池，其它事务才能获取到，而释放后的连接已经被恢复到获取时的状态，包括自动提交等设置","likes_number":10,"is_delete":false,"is_hidden":false,"ctime":1594261218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345595,"discussion_content":"一般中间件每次执行事务时，都会重置状态。比方说spring托管的事务会有重置代码，最明显的就是在spring事务切面的代码里，从getConnection()时就有类似的代码。对于发生死锁如何排查，一般是dba去做，其实mysql库表里是有的，开发一般是不给权限查的，这里只贴下自己写的，做抛砖引玉\nSELECT r.trx_id              waiting_trx_id, \n            r.trx_mysql_thread_id waiting_thread, \n            r.trx_query           waiting_query, \n            b.trx_id              blocking_trx_id, \n            b.trx_mysql_thread_id blocking_thread, \n            b.trx_query           blocking_query \n     FROM   information_schema.innodb_lock_waits w \n            INNER JOIN information_schema.innodb_trx b \n                    ON b.trx_id = w.blocking_trx_id \n            INNER JOIN information_schema.innodb_trx r \n                    ON r.trx_id = w.requesting_trx_id; ","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1611751258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430730,"discussion_content":"1. show engine innodb status 里面有信息，不过不是很全…\n2. 5.7的reset_connection接口可以考虑一下\n3. 用redis的话，为了避免超卖需要增加了很多机制来保证。修改都在数据库里执行就方便点。前提是要解决热点问题\n4. 我认识几位处理问题和分析问题经验非常丰富的专家，不用懂源码，但是原理还是要很清楚的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1543419814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1117597,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0d/9d/58d09086.jpg","nickname":"达达队长","note":"","ucode":"1C3F2E4F6B7637","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":244483,"discussion_content":"插眼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587605802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44439,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1053716,"ip_address":"","ucode":"8F7CE170AE1F57","user_header":"","comment_is_top":false,"comment_ctime":1543449715,"is_pvip":false,"replies":[{"id":"15889","content":"不错的实践方法","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543459469,"ip_address":"","comment_id":44439,"utype":1}],"discussion_count":11,"race_medal":0,"score":"100327697523","product_id":100020801,"comment_content":"其实关于电影院总额的并发问题，之前我们的系统中遇到了，也需要限制退款是否会成负数;<br>当时的解决方案是异步队列处理，线程池线程数为4，5个节点也就20个并发请求<br>更新余额时增加条件updateTime&lt;now()，如果更新数目等于0就回滚事务，再把请求入队重试(限制了重入队次数防止死循环)<br>客户端提交后即刻返回，然后等服务端通知<br>感觉刚好对应了老师讲的死锁检测限制并发的思路 <br><br>","like_count":23,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430759,"discussion_content":"不错的实践方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543459469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043499,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/2b/1e059a0f.jpg","nickname":"nul","note":"","ucode":"2DBF03B2193B76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":69052,"discussion_content":"为啥是增加 updateTIme < now() 这个条件？ 并发场景能具体说下么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575255073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1161200,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/f0/a570f68a.jpg","nickname":"wang","note":"","ucode":"5D569805C6A923","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1043499,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/2b/1e059a0f.jpg","nickname":"nul","note":"","ucode":"2DBF03B2193B76","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":108903,"discussion_content":"我觉得应该是,now()是在server层，就算出了时间，然后等到发送到引擎层时，在并发高时，可能后边的语句已经发送到引擎层，并执行完毕了，如果没有这个条件，就会进入死锁检查，加大cpu消耗，（到我查了一now()是在于开始执行时就确定了,感觉是这样，仅供参考，也可能误导  ）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577635200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":69052,"ip_address":""},"score":108903,"extra":""},{"author":{"id":1354727,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ab/e7/316d8fc1.jpg","nickname":"火中冰激凌","note":"","ucode":"3124BF1D847B6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1043499,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/2b/1e059a0f.jpg","nickname":"nul","note":"","ucode":"2DBF03B2193B76","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109242,"discussion_content":"不是为了控制一条数据在一秒内只更新一次，减少并发吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577676435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":69052,"ip_address":""},"score":109242,"extra":""},{"author":{"id":1073487,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/4f/e0b71e72.jpg","nickname":"我是谁","note":"","ucode":"D6C67E29D62EA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1354727,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ab/e7/316d8fc1.jpg","nickname":"火中冰激凌","note":"","ucode":"3124BF1D847B6E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261626,"discussion_content":"应该是这样的，控制并发。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588987330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":109242,"ip_address":""},"score":261626,"extra":""}]},{"author":{"id":2306281,"avatar":"","nickname":"Geek_1cdc2a","note":"","ucode":"D255430981DB67","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584889,"discussion_content":"另外一种方案是商家余额可以异步加，最终一致性即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661185388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337532,"discussion_content":"我觉得这里是乐观锁的概念吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608964694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257043,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","nickname":"狼的诱惑","note":"","ucode":"AE89DFC5963C42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311254,"discussion_content":"为什么用updatetime 而不用一个版本号字段控制，时间能行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602291768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257043,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","nickname":"狼的诱惑","note":"","ucode":"AE89DFC5963C42","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349795,"discussion_content":"同不懂，希望有路过的大佬解答一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613551673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311254,"ip_address":""},"score":349795,"extra":""}]}]},{"had_liked":false,"id":44103,"user_name":"锅子","can_delete":false,"product_type":"c1","uid":1323048,"ip_address":"","ucode":"4A9143AFB07FF2","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/28/6e019a7a.jpg","comment_is_top":false,"comment_ctime":1543369299,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"83147747923","product_id":100020801,"comment_content":"老师好，关于上一期的问题我有2疑问：<br>1.Q2，WITH CONSISTENT SNAPSHOT语句执行完可以确保得到一个一致性视图，为什么还会备份到Q2时间点之后更改的表结构啊？如果这样那是不是意味着如果有一个数据库一直有数据在写入的话，备份会一直都无法完成。<br>2.Q3设置了保存点，之后读到主库的DDL语句，那Q6又回滚到了Q3设置的保存点，那是不是就主从不一致了啊？","like_count":19,"discussions":[{"author":{"id":1685847,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b9/57/e3067929.jpg","nickname":"曹根源","note":"","ucode":"A7DD9A410D9C56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24953,"discussion_content":"Q2是启动了一致性视图，但一致性视图不包含表结构哦 (下面的回答中有提到)","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1570343595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1001518,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/2e/5c4e7eab.jpg","nickname":"欧阳华","note":"","ucode":"67802EB254DE1E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1685847,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b9/57/e3067929.jpg","nickname":"曹根源","note":"","ucode":"A7DD9A410D9C56","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230183,"discussion_content":"哪里写了这句话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586733203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":24953,"ip_address":""},"score":230183,"extra":""}]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369754,"discussion_content":"一致性视图是通过mvcc来实现的，说的是记录上面有版本，这个是不包含表结构的，你想下修改表结构是不支持回滚的一样。因为有了一致性视图，索引读到的数据是不会发生变化的，即使有新的数据插入。\n你的第二个问题也不会不一致，一致性视图是在Q2 时刻生成的，Q6回滚了保存点，但是一致性视图不受影响。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619148719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2624886,"avatar":"","nickname":"Geek_1e1e6b","note":"","ucode":"1A66F4259EB88C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387048,"discussion_content":"感觉RR是在第一次select的时候才会生成read view 所以Q5前都不会有read view\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627961304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1685847,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b9/57/e3067929.jpg","nickname":"曹根源","note":"","ucode":"A7DD9A410D9C56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24952,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570343307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1606426,"avatar":"","nickname":"Geek_b579d2","note":"","ucode":"8BF0176CAE3DE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3557,"discussion_content":"为什么没人回复一下这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564577671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1589132,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eryic4oRa23cibiaFgZ9hPsLibficchpoGm6sQsTCOibibibibQAibQpcHpAQTrYB11foHRq3ZAoVav6BPkrr5A/132","nickname":"koala","note":"","ucode":"7FFC217D390D17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1606426,"avatar":"","nickname":"Geek_b579d2","note":"","ucode":"8BF0176CAE3DE2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4034,"discussion_content":"您好，您现在懂了吗，我也不明白在可重复读的情况下为什么会select到表结构更改后的内容呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565073462,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3557,"ip_address":""},"score":4034,"extra":""},{"author":{"id":1536066,"avatar":"https://static001.geekbang.org/account/avatar/00/17/70/42/82c2947a.jpg","nickname":"悉数沉淀","note":"","ucode":"D84136FC8889BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1589132,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eryic4oRa23cibiaFgZ9hPsLibficchpoGm6sQsTCOibibibibQAibQpcHpAQTrYB11foHRq3ZAoVav6BPkrr5A/132","nickname":"koala","note":"","ucode":"7FFC217D390D17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":113618,"discussion_content":"看下一讲就知道了表结构是当前读","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577925722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4034,"ip_address":""},"score":113618,"extra":""}]}]},{"had_liked":false,"id":73173,"user_name":"郑健😠💢","can_delete":false,"product_type":"c1","uid":1049995,"ip_address":"","ucode":"0BFE11338A7216","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/8b/e0205b50.jpg","comment_is_top":false,"comment_ctime":1551835100,"is_pvip":false,"replies":[{"id":"27041","content":"哈哈 “你锁我我锁你。检测来检测去” 👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552094062,"ip_address":"","comment_id":73173,"utype":1}],"discussion_count":2,"race_medal":0,"score":"70271311836","product_id":100020801,"comment_content":"如果只执行删除1万行的delete 选择方案1。（减少server层的各种操作）<br><br>正常情况下，选择方案2。（分段执行）<br><br>方案3万万不可，你锁我我锁你。检测来检测去。","like_count":16,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441950,"discussion_content":"哈哈 “你锁我我锁你。检测来检测去” 👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552094062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018972,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","nickname":"亚林","note":"","ucode":"4A5A6D24314B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560141,"discussion_content":"蜜雪冰城广告语","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649210989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47742,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1544189873,"is_pvip":false,"replies":[{"id":"17002","content":"手动点赞","user_name":"作者回复","comment_id":47742,"uid":"1264162","ip_address":"","utype":1,"ctime":1544191845,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"70263666609","product_id":100020801,"comment_content":"昨天和今天学习了锁相关的知识，对锁有了一定的认识。锁分为全局锁，表锁，行锁三类。全局锁在有事物支持的情况下，使用Mysqldump的single  -  transaction的方法进行备份时的更新。昨天晚上也问了老师一个关于表锁的疑问，通过老师的解答，理解了write比read的权限高。在今天的学习中，学习了行锁，顾名思义，行锁就是在进行行字段操作时，其他操作不能同时对行进行操作。根据这一问题，提出了两阶段锁协议，并发的锁尽量往后排，这样可以提升并发度。在锁中，还有两种情况，一是死锁，就是事物相互等待，直到等待结束可以通过设置innodb_lock_wait_timed的等待时间来控制。另一种情况是死锁检测，正常情况下是开的，可以对锁进行检测，但老师举了一个1000个并发请求，这样相互等待就是1000的平方量级，导致CPU消耗100%的性能，秒执行不到100行的例子。针对这种问题，老师给予了三个解决方法，把锁关了，不一定是最好，，第二是控制并发度，但有可能有几百个客户端并发并发进行，第三是在逻辑上的多行，当然也需要在程序上对特殊情况下的处理。学习到今天，数据库的核心有难度，但我相信自己可以搞定它，这就是我坚持它的理由。","like_count":16,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431876,"discussion_content":"手动点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544191845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2285540,"avatar":"https://static001.geekbang.org/account/avatar/00/22/df/e4/b74ed92f.jpg","nickname":"青青","note":"","ucode":"76428A3195CD37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325429,"discussion_content":"wewewewewewewewewewewewewewewewewewewewewewewe","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605314478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61760,"user_name":"Geek_034f00","can_delete":false,"product_type":"c1","uid":1284193,"ip_address":"","ucode":"66C4979828809E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erSiaI4iaNYNTicEuSkX2Ue54dWmRIqmUwbic66PibgKiaTVFibLIzvj7Sib1708EAiaFw9z5uRuQK4Nyq1fPA/132","comment_is_top":false,"comment_ctime":1547793933,"is_pvip":false,"replies":[{"id":"21915","content":"是的，好问题，加个order by id 😆 （假设id是这个表的自增主键）","user_name":"作者回复","comment_id":61760,"uid":"1264162","ip_address":"","utype":1,"ctime":1547802765,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"65972303373","product_id":100020801,"comment_content":"关于课后作业题：<br>第二种方法难道不会引起数据一致性问题吗？如果在innodb中开启了自动事务并且没有显式用begin, commit来做的话，在上一次循环结束和下一次循环开始之间如果有其他事务插入了新数据，而且正好位置也在前面500条，那不就不一致了么。。。。","like_count":15,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436980,"discussion_content":"是的，好问题，加个order by id 😆 （假设id是这个表的自增主键）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547802765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2306194,"avatar":"","nickname":"Geek_6b9ecc","note":"","ucode":"25421F0FD129B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330252,"discussion_content":"老师 为啥加排序可以解决这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606550353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1304761,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e8/b9/582a01d4.jpg","nickname":"laulee","note":"","ucode":"76AC7E6CC15319","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2306194,"avatar":"","nickname":"Geek_6b9ecc","note":"","ucode":"25421F0FD129B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348524,"discussion_content":"排序后新增的ID肯定大于要删除的最大ID","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1612612336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":330252,"ip_address":""},"score":348524,"extra":""},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1304761,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e8/b9/582a01d4.jpg","nickname":"laulee","note":"","ucode":"76AC7E6CC15319","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385696,"discussion_content":"如果不是自增id，可以order by creattime","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627213075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":348524,"ip_address":""},"score":385696,"extra":""}]}]},{"had_liked":false,"id":44031,"user_name":"Tan","can_delete":false,"product_type":"c1","uid":1134688,"ip_address":"","ucode":"D261A69A889696","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/60/7c954c92.jpg","comment_is_top":false,"comment_ctime":1543365690,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"65967875130","product_id":100020801,"comment_content":"不考虑数据表的访问并发量，单纯从这个三个方案来对比的话。<br>第一个方案，一次占用的锁时间较长，可能会导致其他客户端一直在等待资源。<br>第二个方案，分成多次占用锁，串行执行，不占有锁的间隙其他客户端可以工作，类似于现在多任务操作系统的时间分片调度，大家分片使用资源，不直接影响使用。<br>第三个方案，自己制造了锁竞争，加剧并发。<br>至于选哪一种方案要结合实际场景，综合考虑各个因素吧，比如表的大小，并发量，业务对此表的依赖程度等。","like_count":15,"discussions":[{"author":{"id":1581878,"avatar":"https://static001.geekbang.org/account/avatar/00/18/23/36/8bc95dca.jpg","nickname":"Lee","note":"","ucode":"5A232B7388EB2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559715,"discussion_content":"锁不是在事务提交才释放吗？为啥第二个方案有优势？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648893329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52802,"user_name":"Mr.钧👻","can_delete":false,"product_type":"c1","uid":1249939,"ip_address":"","ucode":"D781E030E79245","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/93/3470fc43.jpg","comment_is_top":false,"comment_ctime":1545532787,"is_pvip":false,"replies":[{"id":"19198","content":"😄你这个问题问得很及时，今晚要发布的这篇说的就是这个问题😄","user_name":"作者回复","comment_id":52802,"uid":"1264162","ip_address":"","utype":1,"ctime":1545538593,"user_name_real":"林晓斌"}],"discussion_count":6,"race_medal":0,"score":"53085140339","product_id":100020801,"comment_content":"老师您好，我前天在开发中，还遇到过一次死锁，是在一个批处理中，要删除1000条数据，5个线程，200条数据commit一次，<br>sol：delete from 表A where id =15426169754750004759008 STORAGEDB <br>(id是主键)<br>我同事解决了，说原因是id 是char 类型，但是没有加单引号，所以没有进入id索引中，然后锁表了，所以导致死锁。<br><br>这个问题的出现，应该是人为只要并发导致锁冲突吧？但是为什么不加单引号会死锁，加了单引号就能正常跑呢？求老师指导！<br>","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433984,"discussion_content":"😄你这个问题问得很及时，今晚要发布的这篇说的就是这个问题😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545538593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554671,"discussion_content":"你这个应该不是死锁吧。应该是锁超时吧？只操作一个表且发生表锁且是有序获取锁怎么会死锁呢？\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646544519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3007210,"avatar":"","nickname":"Geek_a1699c","note":"","ucode":"CF7DB00BE36B77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574985,"discussion_content":"+1，我也感觉像","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654508519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":554671,"ip_address":""},"score":574985,"extra":""}]},{"author":{"id":1048367,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ff/2f/172b942b.jpg","nickname":"扬帆起航","note":"","ucode":"708B686F19B8DE","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387006,"discussion_content":"会出现隐式转换函数, ID索引会失效, 走全表扫描","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627951209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337533,"discussion_content":"类型转换会使索引失效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608964923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1875922,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/9f/d2/54578161.jpg","nickname":"菲茨杰拉德","note":"","ucode":"4EB29359F39862","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317475,"discussion_content":"发布 的这个文章在哪儿啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603550858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50960,"user_name":"leon","can_delete":false,"product_type":"c1","uid":1141763,"ip_address":"","ucode":"E2479B1AC25B43","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/03/75c65e8f.jpg","comment_is_top":false,"comment_ctime":1545093694,"is_pvip":false,"replies":[{"id":"18520","content":"Q2是启动了一致性视图，但一致性视图不包含表结构哦","user_name":"作者回复","comment_id":50960,"uid":"1264162","ip_address":"","utype":1,"ctime":1545158412,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"53084701246","product_id":100020801,"comment_content":"老师，第6期留的问题，第7期答案里，有一点很困惑！！！<br><br>“如果在 Q4 语句执行之前到达，现象：没有影响，备份拿到的是 DDL 后的表结构。”<br>其他的都能理解，就是这点很困惑：Q2已经建立了快照，为什么还能备份快照后，对表结构修改后的表呢？不应该备份快照时的表结构吗？不然备份不就乱了吗？<br>","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433201,"discussion_content":"Q2是启动了一致性视图，但一致性视图不包含表结构哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545158412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1346267,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","nickname":"小豹子","note":"","ucode":"972F3E6BF0FDEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":124990,"discussion_content":"我在做实验时，发现是可以拿到表结构修改后的数据，但是去查行时就报错，跟老师讲的不一样嘛。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578465695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1346267,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","nickname":"小豹子","note":"","ucode":"972F3E6BF0FDEA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325282,"discussion_content":"某个行记录里没有表结构对应的列所以导致不一致？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605262177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":124990,"ip_address":""},"score":325282,"extra":""},{"author":{"id":1314800,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/f0/37feaa1d.jpg","nickname":"马林","note":"","ucode":"38AA3E2EB1CC5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1346267,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","nickname":"小豹子","note":"","ucode":"972F3E6BF0FDEA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393457,"discussion_content":"同样的情况，不知道是不是受版本的影响。这块还是没搞懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631440320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":124990,"ip_address":""},"score":393457,"extra":""}]}]},{"had_liked":false,"id":44455,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1053716,"ip_address":"","ucode":"8F7CE170AE1F57","user_header":"","comment_is_top":false,"comment_ctime":1543450866,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"44493123826","product_id":100020801,"comment_content":"话说留言系统打不出大于小于号是为了防止xss攻击吧，推荐下，能不能用作转义的方式解决呢，留言里小于now()整个没有之后语句不通了<br>技术向的服务自己的技术得过关吧(手动滑稽)","like_count":10,"discussions":[{"author":{"id":1138821,"avatar":"https://static001.geekbang.org/account/avatar/00/11/60/85/f72f1d94.jpg","nickname":"与路同飞","note":"","ucode":"2985F1440A1962","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296727,"discussion_content":"人家是18年的评论。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596633481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2123257,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhqDU299SMLoEGMpJYFXtuwiadG0Friaia4fyu2ZJBokpTsTIpibouicaz9JItEYS1EAhLCqB0S3HWA3A/132","nickname":"Geek_1bd897","note":"","ucode":"5EE4879CA5E35D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361678,"discussion_content":"<","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616726603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2126253,"avatar":"https://static001.geekbang.org/account/avatar/00/20/71/ad/2feaa333.jpg","nickname":"韩宁宁","note":"","ucode":"551BB5FDA1C4D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332334,"discussion_content":"> < =.   <now()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607160145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298504,"discussion_content":"而且参与讨论回复留言，之后就和自己完全没关系了。。。。。根本没地回顾啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597313387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2034632,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","nickname":"图灵机","note":"","ucode":"EB02DB653AD591","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281996,"discussion_content":"<now()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591858717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1691258,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/7a/3eabbfd4.jpg","nickname":"DirtyLiar จุ๊บ","note":"","ucode":"ADBBBA41E63B8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245799,"discussion_content":"<","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587700226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030449,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b9/31/636e9007.jpg","nickname":"melo","note":"","ucode":"BF381B18E75867","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221076,"discussion_content":"<>?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585971548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70882,"user_name":"发芽的紫菜","can_delete":false,"product_type":"c1","uid":1055836,"ip_address":"","ucode":"49450F3287DF28","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/5c/f5f24221.jpg","comment_is_top":false,"comment_ctime":1551201849,"is_pvip":false,"replies":[{"id":"25414","content":"主要是不知道面试官想知道多深的原理。。<br><br>我觉得08篇的内容可以讲讲的，每次更新产生一个新的数据版本，数据版本上加了锁。 <br>如果来了另外一个更新，就会在这个新版本上被锁住。<br><br>然后看看面试官怎么追问。。。<br>","user_name":"作者回复","comment_id":70882,"uid":"1264162","ip_address":"","utype":1,"ctime":1551234799,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"40205907513","product_id":100020801,"comment_content":"面试官问了行锁的原理，<br>我:行锁的实现原理？<br>面试官:对<br>我:不知道。。。<br>回来又看了几遍事务隔离的这几篇文章，发现确实不知道，丁老师能简单讲讲么？","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440884,"discussion_content":"主要是不知道面试官想知道多深的原理。。\n\n我觉得08篇的内容可以讲讲的，每次更新产生一个新的数据版本，数据版本上加了锁。 \n如果来了另外一个更新，就会在这个新版本上被锁住。\n\n然后看看面试官怎么追问。。。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551234799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1357311,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b5/ff/d1f205b0.jpg","nickname":"L","note":"","ucode":"5B847B2378854E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311861,"discussion_content":"������","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602508147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543093,"discussion_content":"估计想问你记录锁，间隙锁，next-key锁这些吧，这些都是行锁的不同算法实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640947241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43968,"user_name":"邓俊","can_delete":false,"product_type":"c1","uid":1185156,"ip_address":"","ucode":"FF1D20131DC05F","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/84/fa6937b9.jpg","comment_is_top":false,"comment_ctime":1543343601,"is_pvip":false,"replies":[{"id":"15754","content":"嗯，如果是没有边界条件，比如一直加钱，这种可以的。但是如果有“退款”的逻辑，就不行了。只记日志可能会给扣成负数。","user_name":"作者回复","comment_id":43968,"uid":"1264162","ip_address":"","utype":1,"ctime":1543402131,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"40198049265","product_id":100020801,"comment_content":"答题：<br>这个要看数据库压力，如果数据库非常空闲，我选方案一，这样操作简单。如果数据库中这张表的压力非常大，我选方案三，极端情况下甚至我会制定方案四，每次只删一条。<br><br>老师，我有一个问题：<br>例题中的订票系统，影院的余额表可不可以用流水的方式来记录，每天闲时汇总一次，这样就没有update只有insert和select sum了。<br><br>用手机打字好累，表达的不详细，请谅解。","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430575,"discussion_content":"嗯，如果是没有边界条件，比如一直加钱，这种可以的。但是如果有“退款”的逻辑，就不行了。只记日志可能会给扣成负数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30150,"discussion_content":"记忆中，貌似之前有看过一篇文章是这么做的。\n\nlog 部分钱 + 定期合计到余额里。T T 想不起来那里看到了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570801885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46943,"user_name":"gentleman♥️","can_delete":false,"product_type":"c1","uid":1119062,"ip_address":"","ucode":"0BAC746A70038C","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/56/6a062937.jpg","comment_is_top":false,"comment_ctime":1544006623,"is_pvip":false,"replies":[{"id":"16749","content":"多个事务更新同一行，只是锁等待，如果还有更新别的行，可能造成循环依赖，导致死锁。<br><br>一个事务自己跟自己不会死锁","user_name":"作者回复","comment_id":46943,"uid":"1264162","ip_address":"","utype":1,"ctime":1544012504,"user_name_real":"林晓斌"}],"discussion_count":5,"race_medal":0,"score":"35903744991","product_id":100020801,"comment_content":"我理解同一个行记录 在每个事务里面 只出现一次update，是不回出现死锁的吧？<br>还有一个问题，一个事务里面修改同一条记录两次，不是也会死锁了？","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431613,"discussion_content":"多个事务更新同一行，只是锁等待，如果还有更新别的行，可能造成循环依赖，导致死锁。\n\n一个事务自己跟自己不会死锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544012504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385697,"discussion_content":"死锁是需要争抢2个及以上资源，形成等待环；如果只是一个资源顶多会增加等待时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627213307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350991,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/4f/273ffb51.jpg","nickname":"小哪吒","note":"","ucode":"252087A733355C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381670,"discussion_content":"【一个事务自己跟自己不会死锁】同一事务内，所有操作都是串行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625158723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369758,"discussion_content":"有可能造成循环依赖，互相等待对方的锁，导致死锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619150410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1304761,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e8/b9/582a01d4.jpg","nickname":"laulee","note":"","ucode":"76AC7E6CC15319","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348526,"discussion_content":"老师这回复，看不懂啊，更新别的行和当前行锁有啥关系？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612612781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45699,"user_name":"壹笙☞漂泊","can_delete":false,"product_type":"c1","uid":1092577,"ip_address":"","ucode":"3A0B8EC881665C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ab/e1/f6b921fa.jpg","comment_is_top":false,"comment_ctime":1543754213,"is_pvip":false,"replies":[{"id":"16274","content":"你先考虑，假设现在已经有999个线程在同一行等锁，<br>新来一个请求也要访问这个行，他要判断有没有死锁要判断多少次？<br><br>然后这个结果乘以1000😄","user_name":"作者回复","comment_id":45699,"uid":"1264162","ip_address":"","utype":1,"ctime":1543774547,"user_name_real":"林晓斌"}],"discussion_count":6,"race_medal":0,"score":"35903492581","product_id":100020801,"comment_content":"每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是O(n)的操作。假设有1000个并发线程要同时更新同一行，那么死锁检测操作就是100万这个量级的<br><br><br>老师，为什么1000个并发线程，死锁检测是100万量级？","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431164,"discussion_content":"你先考虑，假设现在已经有999个线程在同一行等锁，\n新来一个请求也要访问这个行，他要判断有没有死锁要判断多少次？\n\n然后这个结果乘以1000😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543774547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4860,"discussion_content":"第一个线程不用检测，第二个线程最多检测1个，第三个最多检测2个......以此类推，等差数列求和，最后是1000^2量级的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565778794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139806,"discussion_content":"不对吧，不是这么算的，是并发情况，每个线程都要检测1000，正好有1000个线程，互相检测，所以是100万。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579319240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4860,"ip_address":""},"score":139806,"extra":""}]},{"author":{"id":1436325,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ea/a5/83d54414.jpg","nickname":"Chen","note":"","ucode":"808731B190612A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2403,"discussion_content":"如果是100万的话，时间复杂度不应该是o(n2)吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563543121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1339720,"avatar":"https://static001.geekbang.org/account/avatar/00/14/71/48/e5570f84.jpg","nickname":"S","note":"","ucode":"9B6B225657BD26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1436325,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ea/a5/83d54414.jpg","nickname":"Chen","note":"","ucode":"808731B190612A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12428,"discussion_content":"时间复杂度为什么是O(N)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568529357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2403,"ip_address":""},"score":12428,"extra":""},{"author":{"id":1161200,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b7/f0/a570f68a.jpg","nickname":"wang","note":"","ucode":"5D569805C6A923","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1339720,"avatar":"https://static001.geekbang.org/account/avatar/00/14/71/48/e5570f84.jpg","nickname":"S","note":"","ucode":"9B6B225657BD26","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":108935,"discussion_content":"说的是单个死锁检测，检测n次","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577636926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":12428,"ip_address":""},"score":108935,"extra":""}]}]},{"had_liked":false,"id":44205,"user_name":"skyoo","can_delete":false,"product_type":"c1","uid":1302503,"ip_address":"","ucode":"EBC0528BA02DD7","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/e7/4ce5ed27.jpg","comment_is_top":false,"comment_ctime":1543383976,"is_pvip":false,"replies":[{"id":"15785","content":"是这样","user_name":"作者回复","comment_id":44205,"uid":"1264162","ip_address":"","utype":1,"ctime":1543404612,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"35903122344","product_id":100020801,"comment_content":"针对公司建表的要求,每个表要有个 createtime 字段 并且该字段要有索引, 就是为了方便 方法2的操作, 目前线上的delete 全是 第二个操作, 创建 createtime 字段也方便将来 通过时间字段 导出数据。","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430678,"discussion_content":"是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543404612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55867,"user_name":"窗外","can_delete":false,"product_type":"c1","uid":1311172,"ip_address":"","ucode":"1E8F2D9439E7F3","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/c4/21c2cde4.jpg","comment_is_top":false,"comment_ctime":1546333658,"is_pvip":false,"replies":[{"id":"20119","content":"有没有普通索引，MariaDB 可以根据普通索引优化的。不过还是要形成习惯，表里带主键哈","user_name":"作者回复","comment_id":55867,"uid":"1264162","ip_address":"","utype":1,"ctime":1546340855,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"31611104730","product_id":100020801,"comment_content":"老师，您好，row 格式下，delete 一个无主键 innodb 大表，主库很快完成，可从库每删除一行都需要全表扫，导致延迟很大，除了加主键外，还有其它的方法吗？","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434866,"discussion_content":"有没有普通索引，MariaDB 可以根据普通索引优化的。不过还是要形成习惯，表里带主键哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546340855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1548798,"avatar":"https://static001.geekbang.org/account/avatar/00/17/a1/fe/250e64d7.jpg","nickname":"陈刚","note":"","ucode":"080E69D3687E73","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304617,"discussion_content":"这个我又没有懂了。不是说，如果没有主键 会自动创建一个rowid的主键吗？ 望解答","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599629247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1548798,"avatar":"https://static001.geekbang.org/account/avatar/00/17/a1/fe/250e64d7.jpg","nickname":"陈刚","note":"","ucode":"080E69D3687E73","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325291,"discussion_content":"因为rowid是隐式主键--说白了就是没有主键。比如说你插入了（2，3），此时这个隐式主键没有作用，只有当你下次再插入（2，3）的时候，才能体现出这个隐式主键的作用：通过它能知道这两行记录实际上是有区别的-- adds an implicit column called rowid that stores 64-bit signed integer. The rowid column is a key that uniquely identifies the rows in the table. ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605263325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304617,"ip_address":""},"score":325291,"extra":""}]}]},{"had_liked":false,"id":45595,"user_name":"酱了个油","can_delete":false,"product_type":"c1","uid":1059627,"ip_address":"","ucode":"5A13CA4EAACB81","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/2b/bebf6eed.jpg","comment_is_top":false,"comment_ctime":1543717245,"is_pvip":false,"replies":[{"id":"16254","content":"你说的对😄，分成小事务一定要确定业务接受<br><br><br>这是个好问题，一个连接就是一个session, 一个连接里可以先后创建多个事务（必须前一个结束才能启动下一个），<br>事务是无处不在的，大事务会造成额外的处理开销。","user_name":"作者回复","comment_id":45595,"uid":"1264162","ip_address":"","utype":1,"ctime":1543726778,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"31608488317","product_id":100020801,"comment_content":"对思考题的思考：<br><br>我直观上感觉第一种和第二、三种在结果上不是等价的，因为非原子性操作，可能导致删除的内容是不一致的。<br>如果不考虑这个问题，还有个疑问请教老师：事务、连接和session的关系是什么？多个事务是否会造成额外的系统开销？","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431113,"discussion_content":"你说的对😄，分成小事务一定要确定业务接受\n\n\n这是个好问题，一个连接就是一个session, 一个连接里可以先后创建多个事务（必须前一个结束才能启动下一个），\n事务是无处不在的，大事务会造成额外的处理开销。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543726778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45122,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1543547901,"is_pvip":false,"replies":[{"id":"16153","content":"大家说第二种的时候，默认是“每次都独立提交”了<br><br><br>喔出题时也是这么想的😄<br><br>","user_name":"作者回复","comment_id":45122,"uid":"1264162","ip_address":"","utype":1,"ctime":1543630375,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"27313351677","product_id":100020801,"comment_content":"关于思考题：看了评论都认为相对于第二种好点。但是我有个疑问：就是在业务后台连接数据库，若要进行事务操作，那么在连接的那时候，就进行了begin，然后就算依次循环20次，但是这个每次循环完，业务链接的那个事务也没commit。直到第二十次循环完毕，才在业务层commit。我觉得这第二种与第一种有什么区别。而且反而增加了复杂度。同学们顶上去。","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430929,"discussion_content":"大家说第二种的时候，默认是“每次都独立提交”了\n\n\n喔出题时也是这么想的😄\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543630375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1454272,"avatar":"https://static001.geekbang.org/account/avatar/00/16/30/c0/761ec683.jpg","nickname":"faker","note":"","ucode":"15212F3641253F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273272,"discussion_content":"每次都提交一次事务，大事务分割成小事务","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590422147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2100644,"avatar":"","nickname":"Geek_8e2759","note":"","ucode":"EBDBA4D92B5C50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300539,"discussion_content":"独立提交，不然如果还是包在一个事务中的话，和第一种差别不大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598164439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44554,"user_name":"杨","can_delete":false,"product_type":"c1","uid":1105205,"ip_address":"","ucode":"D0D765F986AF59","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/35/f9cbab6a.jpg","comment_is_top":false,"comment_ctime":1543456879,"is_pvip":false,"replies":[{"id":"15883","content":"引擎支持行锁就行锁，（比如innodb)<br>引擎不支持行锁就表锁(比如myisam)","user_name":"作者回复","comment_id":44554,"uid":"1264162","ip_address":"","utype":1,"ctime":1543458689,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"27313260655","product_id":100020801,"comment_content":"老师更新一条记录时具体什么时候用行锁什么时候是表锁我不是很清楚，希望老师解答","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430790,"discussion_content":"引擎支持行锁就行锁，（比如innodb)\n引擎不支持行锁就表锁(比如myisam)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543458689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44268,"user_name":"DotaSeven","can_delete":false,"product_type":"c1","uid":1309178,"ip_address":"","ucode":"B7B8BF0446461D","user_header":"https://static001.geekbang.org/account/avatar/00/13/f9/fa/62682d86.jpg","comment_is_top":false,"comment_ctime":1543396581,"is_pvip":false,"replies":[{"id":"15790","content":"这里“锁全表”，表示的就是“锁了全表的所有行”","user_name":"作者回复","comment_id":44268,"uid":"1264162","ip_address":"","utype":1,"ctime":1543405710,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"27313200357","product_id":100020801,"comment_content":"针对 @bluefantasy3 提到的，对无索引的字段做更新，会锁定全表。试过对 <br>A事务执行：begin; update t set t.num=t.num+1 where t.code=&#39;10001&#39;; # t.code无索引<br>B事务执行：begin; insert into t values (null, &#39;10002&#39;, 100); # 第一列为id列<br>确实，B事务在等待状态。而分析INNODB_LOCKS表，发现：<br>lock_id | lock_type<br>B         |  RECORD<br>A         | RECORD<br>为何 A 锁住了全表了，lock_type 不是TABLE 而是 RECORD 呢？","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430701,"discussion_content":"这里“锁全表”，表示的就是“锁了全表的所有行”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543405710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44119,"user_name":"DBRE","can_delete":false,"product_type":"c1","uid":1106706,"ip_address":"","ucode":"FEB779C5D2946C","user_header":"https://static001.geekbang.org/account/avatar/00/10/e3/12/fd02db2e.jpg","comment_is_top":false,"comment_ctime":1543370222,"is_pvip":false,"replies":[{"id":"15762","content":"一定是不止用了MySQL:)","user_name":"作者回复","comment_id":44119,"uid":"1264162","ip_address":"","utype":1,"ctime":1543402772,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"27313173998","product_id":100020801,"comment_content":"请教一个问题：秒杀场景对减库存操作也是针对同一行的update操作，这种高并发场景下是有超卖现象存在的，请问是为什么呢？","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430635,"discussion_content":"一定是不止用了MySQL:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139768,"discussion_content":"程序逻辑判断的时候，到提交到数据库这段时间差里面，有判断前后的操作，打了一个时间差，然后就有负值的出现。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579316642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543097,"discussion_content":"老师说不止用MySQL，其实也未必，主要看其操作是不是Atomic Operations。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640947674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94050,"user_name":"Geek_c1ecc4","can_delete":false,"product_type":"c1","uid":1514497,"ip_address":"","ucode":"63F746501F9AF8","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKRRuYEVOviabfV8l0CwczJLic2nvE3icHEaKSheicvKfstEEsa3SB2eVkejAPtXTWgOyLf02Ol3K4xaA/132","comment_is_top":false,"comment_ctime":1557710400,"is_pvip":false,"replies":[{"id":"34309","content":"不会","user_name":"作者回复","comment_id":94050,"uid":"1264162","ip_address":"","utype":1,"ctime":1558260925,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"23032546880","product_id":100020801,"comment_content":"innodb在什么时候会将行锁退化成表锁？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449892,"discussion_content":"不会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558260925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62451,"user_name":"时隐时现","can_delete":false,"product_type":"c1","uid":1111899,"ip_address":"","ucode":"DA4D622FF84920","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","comment_is_top":false,"comment_ctime":1548060836,"is_pvip":false,"replies":[{"id":"22086","content":"1. 线程池并不能解决这个问题哈，线程池解决的是并发过多问题<br>2. 对的，后来优化啦","user_name":"作者回复","comment_id":62451,"uid":"1264162","ip_address":"","utype":1,"ctime":1548076931,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"23022897316","product_id":100020801,"comment_content":"留言有点太晚了，不知道丁老师还能不能看到，我有两个疑问：<br>1、减缓并发死锁检测cost，还有一种方法是引入线程池，这个应该是最高效的方法，只不过官方版本需要购买licence或者自己加源码编译(percona有现成的免费版)<br>2、delete一个无主键大表，如果有普通索引，官方版本的slave也可以使用到普通索引优化(不仅仅是mariadb)，我遇到过类似案例，mysql 5.6.29 +delete from t，采用pstack查看从库，显示有<br>#9  0x000000000087703c in Rows_log_event::next_record_scan(bool) ()<br>#10 0x000000000087ae0d in Rows_log_event::do_index_scan_and_update(Relay_log_info const*) ()<br>#11 0x0000000000880dba in Rows_log_event::do_apply_event(Relay_log_info const*) ()<br>#12 0x0000000000886c54 in Log_event::apply_event(Relay_log_info*) ()<br>#13 0x00000000008b4693 in apply_event_and_update_pos(Log_event**, THD*, Relay_log_info*) ()<br><br>但是从库依然延迟严重，后来将复制算法设置为index_scan,hash_scan才解决","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437220,"discussion_content":"1. 线程池并不能解决这个问题哈，线程池解决的是并发过多问题\n2. 对的，后来优化啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548076931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45192,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1222211,"ip_address":"","ucode":"8175463FB4705B","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/43/cb6ab349.jpg","comment_is_top":false,"comment_ctime":1543559190,"is_pvip":false,"replies":[{"id":"16143","content":"是的，文中说的是，单个事务判断的时候是O(n)","user_name":"作者回复","comment_id":45192,"uid":"1264162","ip_address":"","utype":1,"ctime":1543629344,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"23018395670","product_id":100020801,"comment_content":"死锁检测的时间复杂度应该是O(n2)？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430954,"discussion_content":"是的，文中说的是，单个事务判断的时候是O(n)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543629344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049848,"avatar":"https://static001.geekbang.org/account/avatar/00/10/04/f8/d0b46821.jpg","nickname":"于小东","note":"","ucode":"CE9305742467D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157932,"discussion_content":"所以文章让我这种小白读得难受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580532496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1339720,"avatar":"https://static001.geekbang.org/account/avatar/00/14/71/48/e5570f84.jpg","nickname":"S","note":"","ucode":"9B6B225657BD26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12431,"discussion_content":"每次一个事务进来,其余事务都要进行一次事务检测吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568529408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54541,"user_name":"everyok22","can_delete":false,"product_type":"c1","uid":1213878,"ip_address":"","ucode":"3A3304CCDC5C5C","user_header":"","comment_is_top":false,"comment_ctime":1545895393,"is_pvip":false,"replies":[{"id":"19796","content":"嗯，你这样写冲突太厉害了，<br><br>是不是可以改用id做条件来更新？<br><br>其实发奖品不一定要发第一个对吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545901777,"ip_address":"","comment_id":54541,"utype":1}],"discussion_count":9,"race_medal":0,"score":"18725764577","product_id":100020801,"comment_content":"今天重读了一下这个表锁，我有一个问题，希望老师给解答一下：<br>我现在有一个用户领取奖口的业务，　业务里有奖品表：构造语句如下<br>CREATE TABLE `prize` (<br>  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,<br>  `name` varchar(20) DEFAULT NULL COMMENT &#39;用户名&#39;,<br>  `status` int(11) NOT NULL COMMENT &#39;状态（0表示未发给用户，1表示已发给用户）&#39;,<br>  `passwd` varchar(64) DEFAULT NULL COMMENT &#39;卡密&#39;,<br>  PRIMARY KEY (`id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;<br><br>这个奖品不同于商品，他有一定的特殊性，就是给每个人发的奖品里的passwd是不一样的。给用户发奖品的时候需要更新这个表的数据状态。语句如下：<br>\t\t\tUPDATE <br>\t\t\t  prize <br>\t\t\tSET<br>\t\t\t  STATUS = 1,<br>\t\t\t  name = &#39;aaa&#39;<br>\t\t\tWHERE STATUS = 0 <br>\t\t\tLIMIT 1 <br>根据文章的内容，如果同时有1000个并发的话， 会超成锁冲突，但在发奖品的时候，这个奖品发给谁是不确定的， 有什么比较好的解决办法么。","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434485,"discussion_content":"嗯，你这样写冲突太厉害了，\n\n是不是可以改用id做条件来更新？\n\n其实发奖品不一定要发第一个对吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545901777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4497,"discussion_content":"可以将所有还未发奖的id进行缓存，根据一定的规则（比如id的大小）取一个出来，按照id和status进行where条件组合（要考虑到并发的情况），如果更新失败再重新取一个id；如果更新成功则在缓存中删除该id","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1565493650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":71497,"discussion_content":"取id的规则是随机吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575426252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4497,"ip_address":""},"score":71497,"extra":""}]},{"author":{"id":2529259,"avatar":"","nickname":"Geek_1b79cd","note":"","ucode":"0A53913F5433EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583826,"discussion_content":"所以sql的逻辑是随机选一个人 然后发奖品？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660409296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1818343,"avatar":"","nickname":"刘同青","note":"","ucode":"84B62DF8BC61FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558537,"discussion_content":"可以提前定好奖品总数（减少锁冲突可以分为10行），然后发一个奖品就减去1，然后在prize表中插入记录","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648371973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369763,"discussion_content":"name字段创建索引是不是会好一点？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619150885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1556722,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c0/f2/1b2ed786.jpg","nickname":"巴萨巴萨！！！","note":"","ucode":"C204AD44347738","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293492,"discussion_content":"我也觉得设计的有问题，我觉得这个可以分两步，第一步：计数逻辑，比方说有1000个奖品，这时候只需要分10行，每行100个，请求来的时候只需要将请求并发的分发到10行中做行更新。第二步：礼物详情，这时候在往prize表中插入一条详情信息就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595558715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1152180,"avatar":"https://static001.geekbang.org/account/avatar/00/11/94/b4/13076f3f.jpg","nickname":"Vk","note":"","ucode":"B6279C52EA944B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278327,"discussion_content":"这个感觉这种表设计不太合理啊，感觉业务模型设计有点问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591174360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1221595,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a3/db/16c614f1.jpg","nickname":"koone","note":"","ucode":"4281D785F5CAC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":246058,"discussion_content":"把已有的奖品放入队列，满足条件的人出队，失败又入队","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587722697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47956,"user_name":"gentleman♥️","can_delete":false,"product_type":"c1","uid":1119062,"ip_address":"","ucode":"0BAC746A70038C","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/56/6a062937.jpg","comment_is_top":false,"comment_ctime":1544266481,"is_pvip":false,"replies":[{"id":"17101","content":"不会的，就是锁等待，只是队列很长","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544332745,"ip_address":"","comment_id":47956,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18724135665","product_id":100020801,"comment_content":"所以 你举的例子 在扣一个总账户数额一条记录的时候 应该是不会出现死锁的呀","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431960,"discussion_content":"不会的，就是锁等待，只是队列很长","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544332745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298507,"discussion_content":"一共就一把锁，怎么会导致死锁呢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597314133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44202,"user_name":"Sawyer","can_delete":false,"product_type":"c1","uid":1011280,"ip_address":"","ucode":"34DC7FBB01FE6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/50/c85284da.jpg","comment_is_top":false,"comment_ctime":1543382967,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18723252151","product_id":100020801,"comment_content":"第一种：从开启事务，到提交事务，始终锁住了10000行记录，没有及时释放锁资源，并发度低下。<br>第二种：每次事务只锁住了500刚记录，执行完删除语句后，可以及时释放锁资源，并发度高，推荐。<br>第三种：如果没有开启死锁检测会造成大量的死锁等待，最终超时重试，执行效率低；如果开启了死锁检测，根据死锁检测的时间复杂度O(n)计算，时间复杂度是4000，会耗费大量的CPU去做死锁检测，并且时间成本高，对比第二种方式，不推荐。<br><br>结论：如果能保证此刻没有数据插入的情况下，推荐使用第二种方式，如果不能保证的话可以考虑第一种方式来处理。","like_count":4},{"had_liked":false,"id":44180,"user_name":"Epic","can_delete":false,"product_type":"c1","uid":1295508,"ip_address":"","ucode":"34D7CBA6C8C04D","user_header":"https://static001.geekbang.org/account/avatar/00/13/c4/94/56d365ea.jpg","comment_is_top":false,"comment_ctime":1543378884,"is_pvip":false,"replies":[{"id":"15764","content":"就是因为“表结构不在一致性视图的保护里面”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402884,"ip_address":"","comment_id":44180,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18723248068","product_id":100020801,"comment_content":"老师问下上篇文章的问题的一个疑问点：<br>疑问1：备份的时候启动了可持续读的事物，那么他在整个备份过程中都是在这个视图下执行的，其它事物的变更不会影响它得备份。但是为什么master传过来的DDL就影响了它呢？","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430667,"discussion_content":"就是因为“表结构不在一致性视图的保护里面”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397081,"discussion_content":"如果表结构数据也用InnoDB 引擎存就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632558136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2355100,"avatar":"https://static001.geekbang.org/account/avatar/00/23/ef/9c/545b9f82.jpg","nickname":"frode","note":"","ucode":"AF53674FD78084","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378194,"discussion_content":"但是已经加了MDL的读锁，按理说对表结构也没有办法更改了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623084707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44017,"user_name":"Knight²º¹⁸","can_delete":false,"product_type":"c1","uid":1089754,"ip_address":"","ucode":"BDCB830B6A730F","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/da/4f50f1b2.jpg","comment_is_top":false,"comment_ctime":1543365350,"is_pvip":false,"replies":[{"id":"15758","content":"😄你这是第四种，如果有这个条件是最好的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402414,"ip_address":"","comment_id":44017,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18723234534","product_id":100020801,"comment_content":"第一种，锁住的资源太多，事务太长。<br>第三种，有并发冲突。<br>如果加上where  限定条件，每次只去删除特定的500条，我会选择第三种方式，因为这样每个语句之间不会有冲突。","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430596,"discussion_content":"😄你这是第四种，如果有这个条件是最好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44777,"user_name":"安小依","can_delete":false,"product_type":"c1","uid":1101660,"ip_address":"","ucode":"A5C414C7B994FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/5c/d4e19eb6.jpg","comment_is_top":false,"comment_ctime":1543490792,"is_pvip":false,"replies":[{"id":"15981","content":"数据字典没了，只从数据恢复做法很复杂。有binlog吗<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543504736,"ip_address":"","comment_id":44777,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14428392680","product_id":100020801,"comment_content":"林老师，我是一名研究生，爬虫爬新闻存数据到 MySQL 里，突然 MySQL 崩掉了，重启不行，查看日志 看到<br>[ERROR] &#47;usr&#47;sbin&#47;mysqld: The table &#39;articles&#39; is full<br>InnoDB: Failing assertion: offset &gt; 0<br>InnoDB: We intentionally generate a memory trap.<br>InnoDB: Submit a detailed bug report to http:&#47;&#47;bugs.mysql.com.<br>InnoDB: If you get repeated assertion failures or crashes, even<br>InnoDB: immediately after the mysqld startup, there may be<br>InnoDB: corruption in the InnoDB tablespace. Please refer to<br>InnoDB: http:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;forcing-innodb-recovery.html<br>InnoDB: about forcing recovery.<br>09:37:14 UTC - mysqld got signal 6 ;<br>This could be because you hit a bug. It is also possible that this binary<br>or one of the libraries it was linked against is corrupt, improperly built,<br>or misconfigured. This error can also be caused by malfunctioning hardware.<br>Attempting to collect some information that could help diagnose the problem.<br>As this is a crash and something is definitely wrong, the information<br>collection process might fail.<br><br>key_buffer_size=16777216<br>read_buffer_size=131072<br>max_used_connections=50<br>max_threads=151<br>thread_count=48<br>connection_count=48<br>It is possible that mysqld could use up to<br>key_buffer_size + (read_buffer_size + sort_buffer_size)*max_threads = 75719 K  bytes of memory<br>Hope that&#39;s ok; if not, decrease some variables in the equation.<br><br>[Warning] InnoDB: Page 9 in the doublewrite buffer is not within space bounds: page [page id: space=36, page number=113547]<br><br>参考网上使用 innodb_force_recovery 试了几个，只有 6 可以重启 mysql 成功，但是重启后，虽然数据库还在，可是从表 articles 查询，却提示表不存在。看日志<br><br>[ERROR] InnoDB: Failed to find tablespace for table `news`.`articles` in the cache. Attempting to load the tablespace with space id 36<br><br>所有数据ibd,frm等还在，就是启动不起来，我想问一下现在如何才能重启成功或者恢复我的数据啊，辛苦爬了2个月爬虫，70万篇文章，结果一下回到解放前了。","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430830,"discussion_content":"数据字典没了，只从数据恢复做法很复杂。有binlog吗\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543504736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1703641,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKXMtG9iaXL3BMT2otBSqCx1lYIdvSXMu8zbkdticicCFdlicDvCU6OyyY8anWf6DUI7G0LPsbGqL5vyQ/132","nickname":"xiyuxingxia","note":"","ucode":"267B8FD711C7B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37250,"discussion_content":"可以考虑使用独立表空间迁移来恢复","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571559915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1813288,"avatar":"","nickname":"雨蒙蒙","note":"","ucode":"06B17333308863","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157364,"discussion_content":"老师说了只从数据恢复做法很复杂，那复杂的恢复方法是什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580474181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44332,"user_name":"way","can_delete":false,"product_type":"c1","uid":1302713,"ip_address":"","ucode":"AD1CBEBA5FDBA9","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/b9/bca7ff9a.jpg","comment_is_top":false,"comment_ctime":1543409722,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14428311610","product_id":100020801,"comment_content":"percona server 支持 clone snapshot 可以利用这点做并发迁移数据。","like_count":4,"discussions":[{"author":{"id":1363110,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cc/a6/b0490e97.jpg","nickname":"Tsong","note":"","ucode":"CF0259824E6D53","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532701,"discussion_content":"way神 晚上好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637669649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44032,"user_name":"行云","can_delete":false,"product_type":"c1","uid":1311147,"ip_address":"","ucode":"412B45ACCD86FD","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/ab/2a5388b1.jpg","comment_is_top":false,"comment_ctime":1543365703,"is_pvip":false,"replies":[{"id":"15760","content":"1. 你这个问题不准确哈，Innodb 语句都是在“事务中”的，你没有明确启动，也会把单个SQL语句按单语句事务处理<br><br>2. 先到先拿锁先执行","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402595,"ip_address":"","comment_id":44032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14428267591","product_id":100020801,"comment_content":"老师，最近遇到一个问题，InnoDB中，并发的update同一行数据会触发InnoDB内部的事务吗？<br>经常会有错误日志显示前一个事务运行中，需要等待，但是代码里并没有使用事务？<br><br>另一个问题。。同时并发update一条数据，数据库内部是怎样执行顺序呢？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430605,"discussion_content":"1. 你这个问题不准确哈，Innodb 语句都是在“事务中”的，你没有明确启动，也会把单个SQL语句按单语句事务处理\n\n2. 先到先拿锁先执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203980,"user_name":"天","can_delete":false,"product_type":"c1","uid":1310629,"ip_address":"","ucode":"664E42100DE272","user_header":"https://static001.geekbang.org/account/avatar/00/13/ff/a5/02953912.jpg","comment_is_top":false,"comment_ctime":1586315167,"is_pvip":false,"replies":[{"id":"76265","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1586317639,"ip_address":"","comment_id":203980,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10176249759","product_id":100020801,"comment_content":"老师，我有个疑问，就是说除了显示的调用for update语句之外，事务里正常的更新某一行操作，也会触发行锁，是这样的吗？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491027,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586317639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1649057,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","nickname":"hello","note":"","ucode":"4F42DAA5DB5C38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356769,"discussion_content":"其实有点不明白显示调用for update 和隐式出发行锁的区别在哪儿？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615654384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141590,"user_name":"是我！","can_delete":false,"product_type":"c1","uid":1691331,"ip_address":"","ucode":"0B474014D620F4","user_header":"https://static001.geekbang.org/account/avatar/00/19/ce/c3/688b8bf9.jpg","comment_is_top":false,"comment_ctime":1571196450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10161131042","product_id":100020801,"comment_content":"老师您好：关于行锁，查询条件为主键，才会锁住此行吧？比如我新建表一表，主键为id,<br><br>BEGIN;<br>UPDATE chat_msg SET send_user_id=send_user_id+1 WHERE id=2;<br>-- COMMIT;<br>此时锁定的为id为2的这行数据吧，<br><br><br>另一个窗口<br>然后我执行：<br>BEGIN;<br>UPDATE chat_msg SET send_user_id=send_user_id+1 WHERE id=1;<br><br>-- UPDATE chat_msg set send_user_id=send_user_id+1 where id=2;<br> COMMIT;<br><br>这个时候为啥也要等待id=1的语句COMMIT之后，第二个才能执行啊？两个语句更新的不是同一行，而id为2的行不是没有被锁定嘛？","like_count":2},{"had_liked":false,"id":62732,"user_name":"jesse","can_delete":false,"product_type":"c1","uid":1341284,"ip_address":"","ucode":"530C9B50352C48","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/64/54284ae7.jpg","comment_is_top":false,"comment_ctime":1548145356,"is_pvip":false,"replies":[{"id":"22247","content":"嗯，这里没有提，不过在第30篇提到了。<br><br>“也就是说，这两个语句要加锁相同的资源，但是加锁顺序相反。当这两条语句并发执行的时候，就可能出现死锁。”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548216161,"ip_address":"","comment_id":62732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10138079948","product_id":100020801,"comment_content":"您好，我看了死锁之后有一个疑问：死锁的引起照理说是同时需要两个以上并且需要的顺序不一致才会导致，可是文章中并没有提到这一点，也没有提到比如保障顺序都是先锁A，再锁B，就可以避免同时需要AB引起的死锁。是我的理解不正确吗？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437327,"discussion_content":"嗯，这里没有提，不过在第30篇提到了。\n\n“也就是说，这两个语句要加锁相同的资源，但是加锁顺序相反。当这两条语句并发执行的时候，就可能出现死锁。”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548216161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59081,"user_name":"w","can_delete":false,"product_type":"c1","uid":1318306,"ip_address":"","ucode":"DB837CAE2FB7C7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/a2/ef8758c9.jpg","comment_is_top":false,"comment_ctime":1547296601,"is_pvip":false,"replies":[{"id":"21376","content":"如果是update语句，一定会在主键索引上也加上行锁，<br>这两个在主键索引上形成等待关系<br><br>可以看一下21篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547309522,"ip_address":"","comment_id":59081,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10137231193","product_id":100020801,"comment_content":"老师看评论里说，<br>行锁是锁在索引上的，那么如果存在两条sql，通过不同的索引去锁定同一行记录，innodb会怎么处理呢？<br>我实验的结果是会阻塞，但是不太明白怎么阻塞的。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436293,"discussion_content":"如果是update语句，一定会在主键索引上也加上行锁，\n这两个在主键索引上形成等待关系\n\n可以看一下21篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547309522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51807,"user_name":"fdconan","can_delete":false,"product_type":"c1","uid":1244596,"ip_address":"","ucode":"01C71C6E9FD1E4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLv9HJIW4OACkjlwOQJ9cU7HzvaDFYkACWCib2lzOMef9ZiaGDTVFqjPicpVK5KDRbBRVGGHrMHQO1Rw/132","comment_is_top":false,"comment_ctime":1545265916,"is_pvip":false,"replies":[{"id":"18780","content":"大事务一般都会导致主从延迟<br><br>就在binlog写完之后才开始发","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545271103,"ip_address":"","comment_id":51807,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135200508","product_id":100020801,"comment_content":"请教老师，大事务会影响主从延时吗？例如一个大事务里面执行更新语句，记得日志系统那章说，两段提交，redo log的prepare和commit之间已经写binlog了。这样未commit之前已经有binlog了，那事务未完成就可以发生主从复制了吧。还是说redo log的commit跟事务的提交是两码事？请老师指教。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433627,"discussion_content":"大事务一般都会导致主从延迟\n\n就在binlog写完之后才开始发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545271103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44258,"user_name":"晨思暮语","can_delete":false,"product_type":"c1","uid":1304974,"ip_address":"","ucode":"F21D2FDCDD6B43","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/8e/6dc15a91.jpg","comment_is_top":false,"comment_ctime":1543395513,"is_pvip":false,"replies":[{"id":"15789","content":"Show engine innodb status里面有记录“之后一个死锁”的地方","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543404847,"ip_address":"","comment_id":44258,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10133330105","product_id":100020801,"comment_content":"丁老师，请教一个问题！死锁的监控有啥好的方式呢","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430696,"discussion_content":"Show engine innodb status里面有记录“之后一个死锁”的地方","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543404847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323652,"avatar":"","nickname":"sibyl","note":"","ucode":"0D142011860D69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298510,"discussion_content":"也可以配置innodb_print_all_deadlocks=ON 这样就会记录死锁日志到 log_error文件中","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597314673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44035,"user_name":"Li Shunduo","can_delete":false,"product_type":"c1","uid":1222882,"ip_address":"","ucode":"6C5AB4129E9780","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/e2/f8e51df2.jpg","comment_is_top":false,"comment_ctime":1543365917,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133300509","product_id":100020801,"comment_content":"超纲的savepoint什么时候讲一下😃","like_count":2},{"had_liked":false,"id":44028,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1543365651,"is_pvip":false,"replies":[{"id":"15713","content":"1. Insert 也有的，比如你要插入两个相同的id值的记录<br>2. 每个线程在判断有没有死锁的过程中，都要扫一下所有其他人<br>3. 回滚了一个事务，剩下的就继续工作了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543370898,"ip_address":"","comment_id":44028,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10133300243","product_id":100020801,"comment_content":"有几个问题  ，请教下 1行级锁只有update的时候会用到吗？insert的时候会用到？2 死锁检测时间复杂度是O(n)是怎么计算的 ，100万级 3 死锁检测发现有死锁都是先回滚再在客户端重试，数据库有对死锁检测之后的处理吗","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430603,"discussion_content":"1. Insert 也有的，比如你要插入两个相同的id值的记录\n2. 每个线程在判断有没有死锁的过程中，都要扫一下所有其他人\n3. 回滚了一个事务，剩下的就继续工作了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543370898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44012,"user_name":"william","can_delete":false,"product_type":"c1","uid":1204239,"ip_address":"","ucode":"1D621B4029E56B","user_header":"https://static001.geekbang.org/account/avatar/00/12/60/0f/4cdd2c3a.jpg","comment_is_top":false,"comment_ctime":1543365006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133299598","product_id":100020801,"comment_content":"方案一，加锁的数据行太多，如果数据库空闲可以操作，否则可能产生较长时间的等待。<br>方案二，可选。每次加锁的数据不多，且在同一个客户端不存在额外的死锁检测的开销。<br>方案三，会产生死锁，带来额外死锁检测的开销。","like_count":2},{"had_liked":false,"id":347145,"user_name":"猫","can_delete":false,"product_type":"c1","uid":1318604,"ip_address":"","ucode":"1B095FAFC8F9B6","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/cc/dcacdd74.jpg","comment_is_top":false,"comment_ctime":1653743806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5948711102","product_id":100020801,"comment_content":"如果在 Q4 语句执行之前到达，现象：没有影响，备份拿到的是 DDL 后的表结构。<br>关于这一点：备份拿到 DDL 后的表结构，是否违反了逻辑备份一致性原则， 应该所有表的状态 处于 备份开始是的状态  ？ 包括数据和结构 ？ ","like_count":1},{"had_liked":false,"id":316278,"user_name":"半年 2号","can_delete":false,"product_type":"c1","uid":2562181,"ip_address":"","ucode":"7F23C4532A5513","user_header":"https://static001.geekbang.org/account/avatar/00/27/18/85/83ac977e.jpg","comment_is_top":false,"comment_ctime":1634257371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5929224667","product_id":100020801,"comment_content":"两阶段锁：在 InnoDB 事务中，行锁是在需要的时候才加上的，但并不是不需要了就立刻释放， 而是要等到事务结束时才释放。<br>建议：如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁尽量往后放。<br>死锁：当并发系统中不同线程出现循环资源依赖，涉及的线程都在等待别的线程释放资源时，就会导致这几个线程都进入无限等待的状态。<br>解决方案：<br>1、通过参数 innodb_lock_wait_timeout 根据实际业务场景来设置超时时间，InnoDB引擎默认值是50s。<br>2、发起死锁检测，发现死锁后，主动回滚死锁链条中的某一个事务，让其他事务得以继续执行。将参数 innodb_deadlock_detect 设置为 on，表示开启这个逻辑（默认是开启状态）。<br>如何解决热点行更新导致的性能问题？<br>1、如果你能确保这个业务一定不会出现死锁，可以临时把死锁检测关闭掉。一般不建议采用<br>2、控制并发度，对应相同行的更新，在进入引擎之前排队。这样在InnoDB内部就不会有大量的死锁检测工作了。<br>3、将热更新的行数据拆分成逻辑上的多行来减少锁冲突，但是业务复杂度可能会大大提高。<br><br>innodb行级锁是通过锁索引记录实现的，如果更新的列没建索引是会锁住整个表的。","like_count":1},{"had_liked":false,"id":291296,"user_name":"๓₯ζ","can_delete":false,"product_type":"c1","uid":1895292,"ip_address":"","ucode":"73A258D8A7828A","user_header":"https://static001.geekbang.org/account/avatar/00/1c/eb/7c/f4321bc5.jpg","comment_is_top":false,"comment_ctime":1620192981,"is_pvip":false,"replies":[{"id":"105593","content":"行锁<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1620320043,"ip_address":"","comment_id":291296,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5915160277","product_id":100020801,"comment_content":"老师，for update 属于行锁还是表锁","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519433,"discussion_content":"行锁\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620320043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":262526,"user_name":"王世林","can_delete":false,"product_type":"c1","uid":1076155,"ip_address":"","ucode":"2BB56D0FD71417","user_header":"https://static001.geekbang.org/account/avatar/00/10/6b/bb/10aaf123.jpg","comment_is_top":false,"comment_ctime":1605757033,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5900724329","product_id":100020801,"comment_content":"innodb  5.7.26 我试了没有锁全表啊，更新没有加索引的列，事务没有提交之前，只会将列的相同数据行锁住，另一个事务更新相同列的其他数据行还是可以的啊，。。。？","like_count":1,"discussions":[{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337537,"discussion_content":"多半隔离级别是 rc 试一下隔离级别是 rr呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608966222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1892202,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLSEtGul3OLHfbkbq5qOywnsCmZ68icDaFcvghXyvmAicTUtLr9q18dmJHH3ZWq3QLGcaicHo1ARn5gA/132","nickname":"雕","note":"","ucode":"5D14752E1450B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337375,"discussion_content":"没听明白，可以再举例说明吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608885327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247397,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1599701095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5894668391","product_id":100020801,"comment_content":"老师好，有个疑问<br>假设隔离级别是：RR；对于在事务内执行的update、insert、delete这些语句会加行写锁，那么 select 会加读锁吗？从现象观察应该不会，因为这里由于MVCC，读的是自己的版本，不会影响到其它事务。<br><br>麻烦老师解答下我的理解是否正确","like_count":1},{"had_liked":false,"id":232955,"user_name":"Garwen","can_delete":false,"product_type":"c1","uid":1045062,"ip_address":"","ucode":"C76346E1734AB8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/46/09c457eb.jpg","comment_is_top":false,"comment_ctime":1594177092,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5889144388","product_id":100020801,"comment_content":"老师，未来的数据库有没有可能出现字段所，这样即使对应更新同一行的不同字段也可以同时进行。望老师解答。","like_count":1,"discussions":[{"author":{"id":1987294,"avatar":"","nickname":"WisonHii","note":"","ucode":"620A820528E5E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379463,"discussion_content":"不可能的。MySQL数据库是行式存储数据库，咋可能会有列锁呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623914751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1892202,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLSEtGul3OLHfbkbq5qOywnsCmZ68icDaFcvghXyvmAicTUtLr9q18dmJHH3ZWq3QLGcaicHo1ARn5gA/132","nickname":"雕","note":"","ucode":"5D14752E1450B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337378,"discussion_content":"字段锁是指的列锁吗？个人感觉可能性不大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608885700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216847,"user_name":"Geek_a8be59","can_delete":false,"product_type":"c1","uid":1563985,"ip_address":"","ucode":"BEC0F57B51DC44","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdiaUiaCYQe9tibemaNU5ya7RrU3MYcSGEIG7zF27u0ZDnZs5lYxPb7KPrAsj3bibM79QIOnPXAatfIw/132","comment_is_top":false,"comment_ctime":1589354186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5884321482","product_id":100020801,"comment_content":"请问老师下面这端语句说的对么<br>事务A在聚簇索引上加锁的顺序是[1,4,2,3,5]，而事务B执行时，只在聚簇索引上加锁，加锁顺序是[1,2,3,4,5]，这样就造成了死锁的可能性<br>我想的是在事务A获得记录1的锁的时候，事务B也要先获取记录1的X锁，发现获取不到就应该是阻塞在哪里了，直到事务A整个提交了以后才会执行事务B，所以不可能出现死锁的可能吧","like_count":1},{"had_liked":false,"id":203609,"user_name":"Vongola","can_delete":false,"product_type":"c1","uid":1047073,"ip_address":"","ucode":"F2FDAEBC049CBC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/21/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1586240684,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5881207980","product_id":100020801,"comment_content":"当备库用–single-transaction 做逻辑备份的时候，如果从主库的 binlog 传来一个 DDL 语句会怎么样？<br>这个问题只有在ddl是删除字段的时候才能复现Table definition has changed, please retry transaction这个错，在添加字段的时候能够正常执行，为什么呢？","like_count":1},{"had_liked":false,"id":186262,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1583811221,"is_pvip":false,"replies":[{"id":"71979","content":"不是的，这是两种维度<br><br>表锁也有排他锁和共享锁的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1583837208,"ip_address":"","comment_id":186262,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878778517","product_id":100020801,"comment_content":"老师好，排他锁、共享锁都属于行锁吧。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486697,"discussion_content":"不是的，这是两种维度\n\n表锁也有排他锁和共享锁的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583837208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151569,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1573741393,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5868708689","product_id":100020801,"comment_content":"两阶段锁协议，需要时加锁，但使用完并不会立即释放，而要等事务提交或回滚才释放。应该是为了防止后启动的事务覆盖前面事务已修改但未提交的记录吧？比如向同一帐户发起两笔打款，各为200元，在两个事务中，原账户金额100元，不使用两阶段锁的话，如下<br>事务1获取写锁，用update语句原子更新账户金额为300<br>事务1释放写锁（未提交）<br>事务2获取写锁，此时帐户金额还是100，用update原子更新为300<br>事务1提交，金额为300<br>事务2提交，金额为300<br>如果用两阶段协议锁，不会出现上面情况","like_count":1,"discussions":[{"author":{"id":1603078,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zAZv4NyuS21Y1qk45j8JiaoEYdA5Zgc1PqpJsBokz5bZVmdkf6kNWvT4cUAAKAdH6TgN52DWZhiaH6wNFhw14nRg/132","nickname":"Geek_4e4ec2","note":"","ucode":"6DAD5EE4FFB195","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531213,"discussion_content":"终于有个思考为什么的了，实在搞不懂那些一天只会照搬文章概念的回答和笔记有什么意义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637248053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147149,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1572827194,"is_pvip":true,"discussion_count":1,"race_medal":1,"score":"5867794490","product_id":100020801,"comment_content":"老师，Innodb 为什么不设计页锁呢？ 这样粒度在表级锁和行锁之间，即能提高并发度又能提高性能","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139769,"discussion_content":"搞的太复杂了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579316701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135557,"user_name":"腾云登峰","can_delete":false,"product_type":"c1","uid":1305904,"ip_address":"","ucode":"5B2727227D1936","user_header":"","comment_is_top":false,"comment_ctime":1569210635,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5864177931","product_id":100020801,"comment_content":"老师，有点没搞明白，在上期的答案中，我认为一旦进行了Q2:START TRANSACTION WITH CONSISTENT SNAPSHOT,就已经拿到的是一致性的视图了，这个时候怎么还会出现被DDL之后的结构呢，请老师解惑","like_count":1,"discussions":[{"author":{"id":1210519,"avatar":"https://static001.geekbang.org/account/avatar/00/12/78/97/fa101174.jpg","nickname":"年轻人","note":"","ucode":"CDD4612BAE3247","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282616,"discussion_content":"前面说到过一致性视图是不包含表结构的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592030248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108858,"user_name":"乄清风灬依旧","can_delete":false,"product_type":"c1","uid":1464015,"ip_address":"","ucode":"C035239D091DF3","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/cf/7124490d.jpg","comment_is_top":false,"comment_ctime":1561903479,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856870775","product_id":100020801,"comment_content":"有几个疑问想请老师回答下：<br>1、共享锁和排他锁都是逻辑上的，全局锁，表锁，MDL锁,意向锁，行锁，间隙锁都可以细分为对应的共享锁(读锁)和排他锁(写锁)；这句话有问题吗？<br>2、评论中看到老师有提到行锁是建立在索引的基础上，但并非锁的索引；还是没有弄清楚行锁的具体位置在哪。行锁是存在索引项上还是存在数据行中(比如追加一列记录标识行锁)还是其他位置？如果锁标识是在索引项上，又有新的问题，只放在主键索引上还是每种索引上放一个标识？如果只放在主键索引上，基于覆盖索引查询时由于不回表就无法获取到锁标识；如果每种索引放一个标识，由于锁是临时的，所以在会话断开的时候需要整库全索引扫描清除锁标识？如果是在数据行上，会话断开的时候需要全库基于主键扫描清除锁标识，但是又无法处理覆盖索引不回表无法获取锁标识问题？<br>3.行锁的记录：上面的两阶段锁例子中，事务A执行update语句后为什么其他线程无法在innodb_locks表中查询到行锁？当事务B执行update后阻塞时，这时在innodb_locks表上可以查到事务A，事务B各有加了一个行写锁；难道不存在锁竞争时不会把行锁记录到该表上？","like_count":1},{"had_liked":false,"id":86504,"user_name":"sure","can_delete":false,"product_type":"c1","uid":1147016,"ip_address":"","ucode":"FAEE05DBB63A63","user_header":"https://static001.geekbang.org/account/avatar/00/11/80/88/1f8a40af.jpg","comment_is_top":false,"comment_ctime":1555385172,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5850352468","product_id":100020801,"comment_content":"请教老师一个问题：文中：“而关掉死锁检测意味着可能会出现大量的超时，这是业务有损的。”，超时为什么是‘业务有损的’？我超时的update也回滚的啊<br>","like_count":1,"discussions":[{"author":{"id":1810787,"avatar":"","nickname":"Geek_224f63","note":"","ucode":"AA060E5F0C8270","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":150871,"discussion_content":"连接池资源耗尽，所有线程全部堵在获取数据库链接，机器会从ng下线，close  wait 升高，等等异常","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579832406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139772,"discussion_content":"业务有损，是要等那么长的时间，对于业务来说，就是干耗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579316788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72966,"user_name":"菜鸡一只","can_delete":false,"product_type":"c1","uid":1336004,"ip_address":"","ucode":"5FBA9A68E0E9B9","user_header":"https://static001.geekbang.org/account/avatar/00/14/62/c4/98a9e594.jpg","comment_is_top":false,"comment_ctime":1551764980,"is_pvip":false,"replies":[{"id":"26661","content":"主要是并发的时候有性能问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551848759,"ip_address":"","comment_id":72966,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846732276","product_id":100020801,"comment_content":"今天学到了行锁的作用，两个事务更新同一行，有一个事务需要等待另一个事务执行完才能执行。于是我想到了超卖问题，直接用update miaosha_goods set stock_count = stock_count - 1 where goods_id = #{goodsId} and stock_count &gt;0的方式不就解决超卖了吗，为什么有人说并不能完全解决，与今天老师讲的行锁相违背","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441852,"discussion_content":"主要是并发的时候有性能问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551848759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58237,"user_name":"菜鸡一只","can_delete":false,"product_type":"c1","uid":1336004,"ip_address":"","ucode":"5FBA9A68E0E9B9","user_header":"https://static001.geekbang.org/account/avatar/00/14/62/c4/98a9e594.jpg","comment_is_top":false,"comment_ctime":1547015712,"is_pvip":false,"replies":[{"id":"21022","content":"默认就是死锁检测的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547044627,"ip_address":"","comment_id":58237,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841983008","product_id":100020801,"comment_content":"mysql默认给我们使用哪个解决的方法？死锁等待时间和死锁等待能不能同时存在？怎么关闭死锁等待时间这个方法？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435965,"discussion_content":"默认就是死锁检测的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547044627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53550,"user_name":"Knight²º¹⁸","can_delete":false,"product_type":"c1","uid":1089754,"ip_address":"","ucode":"BDCB830B6A730F","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/da/4f50f1b2.jpg","comment_is_top":false,"comment_ctime":1545668814,"is_pvip":false,"replies":[{"id":"19488","content":"Insert 就是加行锁呀，不过中间涉及到间隙锁判断和主键冲突后处理，这个后面会说<br><br>并发并不影响加锁规则哈<br><br>In这个，如果你说的是后面是常数字列表，那就是多个等值查询那么处理； 如果带子查询，就复杂些，还需要根据隔离级别来判断的<br><br>好问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545703210,"ip_address":"","comment_id":53550,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840636110","product_id":100020801,"comment_content":"老师，有几个疑问请假您:<br>        1. insert语句是如何加锁的？<br>        2. 并发批量插入的时候如何加锁？<br>        3. 使用 in 条件批量更新如何加锁？<br>烦请解答一下，谢谢！","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434176,"discussion_content":"Insert 就是加行锁呀，不过中间涉及到间隙锁判断和主键冲突后处理，这个后面会说\n\n并发并不影响加锁规则哈\n\nIn这个，如果你说的是后面是常数字列表，那就是多个等值查询那么处理； 如果带子查询，就复杂些，还需要根据隔离级别来判断的\n\n好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545703210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52796,"user_name":"Mr.钧👻","can_delete":false,"product_type":"c1","uid":1249939,"ip_address":"","ucode":"D781E030E79245","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/93/3470fc43.jpg","comment_is_top":false,"comment_ctime":1545531578,"is_pvip":false,"replies":[{"id":"19199","content":"应该还是因为被锁住了，不一定非得当时有人在用，之前➕了行锁没释放也会这样的。<br><br>第20篇会介绍追查的方法","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545538882,"ip_address":"","comment_id":52796,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5840498874","product_id":100020801,"comment_content":"老师你好，我昨天在开发中遇到这个锁等待超时，sql ： delete from 表A where date =20181218 and source =&#39;S&#39; and node =&#39;g2&#39;<br>(表结构中，date 和 source 是联合索引)<br>(date字段是date类型，source 是char类型，node是char类型)<br><br>我一开始以为有别的同事本地debug导致锁表，但是后来发现不是，根据今天学的内容，如果当时只有我这条语句用到表A，是不会报锁超时的，请问老师，还有其他可能会导致锁超时吗？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433981,"discussion_content":"应该还是因为被锁住了，不一定非得当时有人在用，之前➕了行锁没释放也会这样的。\n\n第20篇会介绍追查的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545538882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1208702,"avatar":"https://static001.geekbang.org/account/avatar/00/12/71/7e/b7b687bd.jpg","nickname":"李小刚","note":"","ucode":"875738D4F66151","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330883,"discussion_content":"可以考虑分页删除","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606726328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49999,"user_name":"菜菜","can_delete":false,"product_type":"c1","uid":1302241,"ip_address":"","ucode":"D798B831A89AAF","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/e1/f648c746.jpg","comment_is_top":false,"comment_ctime":1544832153,"is_pvip":false,"replies":[{"id":"18005","content":"没有回滚DDL哦，只是释放了mdl锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544846146,"ip_address":"","comment_id":49999,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839799449","product_id":100020801,"comment_content":"林老师，你好！对于 回滚到 SAVEPOINT sp，在这里的作用是释放 t1 的MDL锁，这一句有疑问。<br>那么如果DDL语句在Q4之前到达了，会正常执行，但是这里已经执行了snapshot，然后后面又会回滚到之前的SAVEPOINT sp。中间有个DDL的，这样也回滚了了？？我不是很明白回滚到 SAVEPOINT sp 这个点，希望老师指正！","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432834,"discussion_content":"没有回滚DDL哦，只是释放了mdl锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544846146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45683,"user_name":"锋芒","can_delete":false,"product_type":"c1","uid":1320419,"ip_address":"","ucode":"BB5284E3C8D78D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ach5TNuIu8T4Of8ibvfWM4JPic5uQn9Y7TgGjBHLp2iar4icxJzs14bpUXV9OdYiciblvJl14zSqXjwtDffHnSTqbD6g/132","comment_is_top":false,"comment_ctime":1543747957,"is_pvip":false,"replies":[{"id":"16275","content":"啊？ 一个是update语句，一个是查询语句…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543774627,"ip_address":"","comment_id":45683,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5838715253","product_id":100020801,"comment_content":"在教程中提到update的时候会锁住行！那与这样写有什么区别呢？SELECT * from t where id=&#39;1&#39; for update ;","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431154,"discussion_content":"啊？ 一个是update语句，一个是查询语句…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543774627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1556722,"avatar":"https://static001.geekbang.org/account/avatar/00/17/c0/f2/1b2ed786.jpg","nickname":"巴萨巴萨！！！","note":"","ucode":"C204AD44347738","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293496,"discussion_content":"update时会自动为id = 1这行添加行锁，select ... from update是手动为id = 1这行添加行锁，效果都是一样的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595559514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205036,"avatar":"","nickname":"Dym","note":"","ucode":"7E521F01A4D823","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1015,"discussion_content":"当select * from t where id=&#39;1&#39; for update 实际上给对应记录加上行级锁，其他对这条记录的更新操作都会被阻塞","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562235968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43449,"discussion_content":"都会进行当前读，加上写锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572875188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44362,"user_name":"Inon","can_delete":false,"product_type":"c1","uid":1014967,"ip_address":"","ucode":"F547915362A5DE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/b7/3b3cbc38.jpg","comment_is_top":false,"comment_ctime":1543414192,"is_pvip":false,"replies":[{"id":"15997","content":"没有这么“连坐”的哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543537159,"ip_address":"","comment_id":44362,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838381488","product_id":100020801,"comment_content":"老师，行锁是绝对锁行吗，行所在页里面的其他行会不会也被锁住，其他事务更新同一页里面的其他行会锁等待吗？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430739,"discussion_content":"没有这么“连坐”的哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543537159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44338,"user_name":"力挽狂澜爆炸输出的臭臭宁","can_delete":false,"product_type":"c1","uid":1155904,"ip_address":"","ucode":"E8D26181129BCA","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/40/e0df3b84.jpg","comment_is_top":false,"comment_ctime":1543411178,"is_pvip":false,"replies":[{"id":"15998","content":"《高性能MySQL 3》","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543537180,"ip_address":"","comment_id":44338,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838378474","product_id":100020801,"comment_content":"老师可不可以推荐一些mysql的经典书籍？<br>包括但不限于以下方面<br>第一阶段：不同场景下的查询语句可以怎么写，怎么写好查询语句；<br>第二阶段：mysql innodb实现细节","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430733,"discussion_content":"《高性能MySQL 3》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543537180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44334,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1053716,"ip_address":"","ucode":"8F7CE170AE1F57","user_header":"","comment_is_top":false,"comment_ctime":1543410514,"is_pvip":false,"replies":[{"id":"15861","content":"换成ID是个好习惯","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543415369,"ip_address":"","comment_id":44334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838377810","product_id":100020801,"comment_content":"第二种，<br>或者第三种改进一下，例如用主键分段，每线程删一段，这样应该不会出现锁争用，个人习惯所有update和delete都用ID做条件，用大于等于小于主键做更新应该可以保证比较好的性能","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430731,"discussion_content":"换成ID是个好习惯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543415369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44324,"user_name":"余向华","can_delete":false,"product_type":"c1","uid":1119778,"ip_address":"","ucode":"263773616D2C83","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/22/2205cf0a.jpg","comment_is_top":false,"comment_ctime":1543408046,"is_pvip":false,"replies":[{"id":"15820","content":"回滚到回滚点，就释放了MDL读锁了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543409239,"ip_address":"","comment_id":44324,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838375342","product_id":100020801,"comment_content":"看完课后的答疑：<br>1、理解了在备份期间为什么要设置事务的隔离级别是 RR 的，因为这样保证在备份期间的事务执行时读到的数据是一致的。<br>2、不理解为什么要设置回滚点，这里设置的原理和思想是什么，还请老师答疑。<br><br>课后题：<br>答：我会选择第二种方式<br>分析：<br>第一种方式：在执行删除 1w 条数据中，涉及到的这个事务是个长事务，在 CPU 资源和内存方面是一个消耗特别大的操作， 在 MVCC 中需要保存的视图也是特别大的，消耗的存储空间特别大。<br>第二种方式：把长事务转换成短事务，一个是可以少消耗 CPU 资源，同时也是在少消耗存储空间。<br>第三种方式：多连接在消耗内存方面是特别大的，这个在第一节课：一条 SQL 语句中就有过这个分析。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430727,"discussion_content":"回滚到回滚点，就释放了MDL读锁了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543409239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44308,"user_name":"wjz1991","can_delete":false,"product_type":"c1","uid":1311687,"ip_address":"","ucode":"D82D744F5A4E6D","user_header":"https://static001.geekbang.org/account/avatar/00/14/03/c7/563345e1.jpg","comment_is_top":false,"comment_ctime":1543404722,"is_pvip":false,"replies":[{"id":"15817","content":"Limit语句显示的结果，是按照使用的索引的扫描顺序的。<br>这个是好问题，我在答疑文章展开说","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543409187,"ip_address":"","comment_id":44308,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838372018","product_id":100020801,"comment_content":"老师，您好，问一下，为什么select id from table_name limit 10;返回的结果不是前10条，而delete from talbe_name limit 10;删除的就一定是前10条，如果select id from table_name where id&gt;10 limit 10;查询结果就是从第11条开始。麻烦老师抽空解答一下，麻烦了。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430720,"discussion_content":"Limit语句显示的结果，是按照使用的索引的扫描顺序的。\n这个是好问题，我在答疑文章展开说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543409187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44148,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1543373939,"is_pvip":false,"replies":[{"id":"15736","content":"树是存数据的，属于可以持久化的<br><br>锁是运行时状态，属于临时状态，<br><br>不是直接存树上。<br><br>行锁加在索引上，这个结论是对的，你能不能举个人例子来验证这个结论😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543379908,"ip_address":"","comment_id":44148,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838341235","product_id":100020801,"comment_content":"我之前看到说，行锁是加在索引上的。<br>想了解下这个是否加锁的标识是在树上的吗？这个数据结构大概是怎么样的。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430651,"discussion_content":"树是存数据的，属于可以持久化的\n\n锁是运行时状态，属于临时状态，\n\n不是直接存树上。\n\n行锁加在索引上，这个结论是对的，你能不能举个人例子来验证这个结论😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543379908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44018,"user_name":"怀朔","can_delete":false,"product_type":"c1","uid":1006865,"ip_address":"","ucode":"52FAC1C2FD37B6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/11/e1f36640.jpg","comment_is_top":false,"comment_ctime":1543365361,"is_pvip":false,"replies":[{"id":"15759","content":"单机器部署多个MySQL服务","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402445,"ip_address":"","comment_id":44018,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838332657","product_id":100020801,"comment_content":"老师？多核CPU 对数据库有什么影响？？？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430597,"discussion_content":"单机器部署多个MySQL服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43972,"user_name":"江中芦苇","can_delete":false,"product_type":"c1","uid":1068059,"ip_address":"","ucode":"1FB79B0904BFEE","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/1b/b1953a5e.jpg","comment_is_top":false,"comment_ctime":1543358583,"is_pvip":false,"replies":[{"id":"15756","content":"相比与死锁检测吃CPU，这还是快的。一般一秒能处理5、6千次update,出现热点更行可能就剩100不到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402278,"ip_address":"","comment_id":43972,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838325879","product_id":100020801,"comment_content":"为减少死锁检测，用中间件或者改源码，让更新同一条记录的的操作进入引擎层前排队，也就是把并发转为串行，这样结果返回时间是不是就慢了？我的意思是假如同时很多人买一样东西，排在前面的人余额扣的快立马可以看到，后面的得等待一段时间才能刷新出来？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430576,"discussion_content":"相比与死锁检测吃CPU，这还是快的。一般一秒能处理5、6千次update,出现热点更行可能就剩100不到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43963,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1543338819,"is_pvip":false,"replies":[{"id":"15753","content":"你的理解是对的，08篇我们会说到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402019,"ip_address":"","comment_id":43963,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838306115","product_id":100020801,"comment_content":"老师 ， 一些文章写到innodb的行锁有两种 。<br>一个是共享锁 select .. lock in share mode<br>一种是排他锁 select .. for update <br>要使用锁就显示的加 ，相当于悲观锁<br><br>在老师的事例中 ，当两个事务同时更新同一条记录的时候，其中一个事务进行了堵塞，这个现象就像是使用了 排他锁 。但是却没有显示声明排他锁 这个是innodb内部加上的么？？？<br><br>那实际上也不需要我们自己手动去加排他锁了","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430573,"discussion_content":"你的理解是对的，08篇我们会说到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360073,"user_name":"洛奇","can_delete":false,"product_type":"c1","uid":1624355,"ip_address":"上海","ucode":"662B4005721119","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","comment_is_top":false,"comment_ctime":1666161656,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666161656","product_id":100020801,"comment_content":"update语句是原子的吗？insert into xxx on duplicate key update语句会造成死锁吗？什么情况下会死锁？这些问题都是在携程面试的时候碰到的","like_count":0},{"had_liked":false,"id":358801,"user_name":"kk","can_delete":false,"product_type":"c1","uid":1182067,"ip_address":"广东","ucode":"BADB6FF2E659C1","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/73/b85b3808.jpg","comment_is_top":false,"comment_ctime":1664791061,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1664791061","product_id":100020801,"comment_content":"死锁会打满cpu吗","like_count":0},{"had_liked":false,"id":356615,"user_name":"Geek_Zbj","can_delete":false,"product_type":"c1","uid":3078634,"ip_address":"重庆","ucode":"12763B2A264DA0","user_header":"","comment_is_top":false,"comment_ctime":1662450717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662450717","product_id":100020801,"comment_content":"InnoDB怎么加行锁呀，需要什么关键字吗？是在一个事务中，更新语句都会自动加行锁吗？","like_count":0},{"had_liked":false,"id":356521,"user_name":"Geek_3d1074","can_delete":false,"product_type":"c1","uid":1507612,"ip_address":"广东","ucode":"E19D658CE2F95E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI0E6ntXnrYPy4JJicN3L2w14Dk9Qoer6eSO9oicYFNqeBQlibmaMdVrTaAsd58ry44tOl4FefGSIUoA/132","comment_is_top":false,"comment_ctime":1662379100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662379100","product_id":100020801,"comment_content":"为什么有了mvcc，还需要行锁呢？求大佬解答","like_count":0},{"had_liked":false,"id":353251,"user_name":"吃水不用钱","can_delete":false,"product_type":"c1","uid":1797135,"ip_address":"广东","ucode":"8A5D5978F0D4E5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/6c/0f/7d242cc2.jpg","comment_is_top":false,"comment_ctime":1659316762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659316762","product_id":100020801,"comment_content":"方案二更优。相比方案一，避免了长事务，相比方案三，避免了多个线程竞争导致的锁等待","like_count":0},{"had_liked":false,"id":352972,"user_name":"charmsongo","can_delete":false,"product_type":"c1","uid":1609051,"ip_address":"陕西","ucode":"4FBEE716E93A1A","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","comment_is_top":false,"comment_ctime":1659059790,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659059790","product_id":100020801,"comment_content":"SHOW GLOBAL VARIABLES LIKE &#39;innodb_lock_wait_timeout&#39;;<br><br>SHOW VARIABLES LIKE &#39;%innodb_deadlock_detect%&#39;","like_count":0},{"had_liked":false,"id":347213,"user_name":"Unknown element","can_delete":false,"product_type":"c1","uid":2028277,"ip_address":"","ucode":"34A129800D0238","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f2/f5/b82f410d.jpg","comment_is_top":false,"comment_ctime":1653820136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653820136","product_id":100020801,"comment_content":"老师 对于文章最后的问题解答的2没看懂  mysqldump -–single-transaction 不是已经创建了一个一致性视图吗？那ddl在时刻2到达虽然改变了表结构但是 Q5:SELECT * FROM `t1`; 读取的是视图的数据，这个数据应该和 Q4:show create table `t1`; 读取的表结构是一致的吧？还是说一致性视图不是一开始就创建，而是等到Q5才创建？","like_count":0},{"had_liked":false,"id":347143,"user_name":"猫","can_delete":false,"product_type":"c1","uid":1318604,"ip_address":"","ucode":"1B095FAFC8F9B6","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/cc/dcacdd74.jpg","comment_is_top":false,"comment_ctime":1653743627,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653743627","product_id":100020801,"comment_content":"如果在 Q4 语句执行之前到达，现象：没有影响，备份拿到的是 DDL 后的表结构。 ","like_count":0},{"had_liked":false,"id":345707,"user_name":"sirius","can_delete":false,"product_type":"c1","uid":1613721,"ip_address":"","ucode":"B3AEA5D15FB086","user_header":"https://static001.geekbang.org/account/avatar/00/18/9f/99/b5e52fd2.jpg","comment_is_top":false,"comment_ctime":1652519163,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652519163","product_id":100020801,"comment_content":"选择： 在一个连接中循环执行 20 次 delete from T limit 500;<br>为什么不直接一次性删除呢？一次性删除大量数据，对数据库有压力，主从同步也会出现瞬间的差距。从粒度看，锁的粒度太大，执行时间长，是最差的方案。<br><br>为什么不在多个连接里删除呢？这就要做offset，并发去做，太麻烦。很容易弄错。<br><br>方案二，每次一段一段的删除，锁的粒度小，每次锁的时间小，对整体影响最小。","like_count":0},{"had_liked":false,"id":345316,"user_name":"楼高","can_delete":false,"product_type":"c1","uid":1430375,"ip_address":"","ucode":"743B0C14687212","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLU3Dqic1Ssf2icrm6OtqFoG9vicoypKkk2lmKufo2BFZsFwPGt6NX1Sf1LLw448ayygykg3CMaqXEDw/132","comment_is_top":false,"comment_ctime":1652190493,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652190493","product_id":100020801,"comment_content":"当出现死锁以后，第一个被锁住的线程要过 50s 才会超时退出，然后其他线程才有可能继续执行。<br>设置死锁的最大等待时间为1s，这样当出现死锁的时候，确实很快就可以解开，但如果不是死锁，而是简单的锁等待呢？为什么会存在误伤呢? 简单的锁等待跟死锁没有关系，我的理解是不会因为死锁的最大释放时间而释放掉其他锁等待时间吧。我理解有误吗","like_count":0},{"had_liked":false,"id":345240,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1324863,"ip_address":"","ucode":"FFC31A3FE3A285","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","comment_is_top":false,"comment_ctime":1652152376,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1652152376","product_id":100020801,"comment_content":"“行锁是在需要的时候才加上的”，什么时候是需要的时候？是在事务启动的时候，还是在开始执行SQL的时候？","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576787,"discussion_content":"执行sql的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655791098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344540,"user_name":"Geek5879","can_delete":false,"product_type":"c1","uid":2961332,"ip_address":"","ucode":"42D878ED9EA7CA","user_header":"","comment_is_top":false,"comment_ctime":1651637320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651637320","product_id":100020801,"comment_content":"老师你好，看到你这里死锁的例子是执行了两次update语句操作一个表里面两条数据，那如果我这样写update test set k = k +1 where id in (1,2)，把两条update语句改成一个，会不会出现死锁的情况呢","like_count":0},{"had_liked":false,"id":342684,"user_name":"晴天了","can_delete":false,"product_type":"c1","uid":1359669,"ip_address":"","ucode":"5310E02F8DF1F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/35/0e3a92a7.jpg","comment_is_top":false,"comment_ctime":1650419142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650419142","product_id":100020801,"comment_content":"行锁在引擎层 全局锁和表锁在服务层 问下老师 这对吗","like_count":0},{"had_liked":false,"id":342047,"user_name":"网证通_5070","can_delete":false,"product_type":"c1","uid":2938010,"ip_address":"","ucode":"069ED02DA96E73","user_header":"","comment_is_top":false,"comment_ctime":1649991155,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649991155","product_id":100020801,"comment_content":"好难啊","like_count":0},{"had_liked":false,"id":341614,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1649735319,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649735319","product_id":100020801,"comment_content":"innodb存储引擎优点：<br>支持行锁<br>支持事务<br>支持crsh-safe<br>使用B+树索引组织表模式，查询速度快。<br>wal 提升数据更新性能<br>支持MVCC 多版本并发控制。<br><br>innodb事务中，行锁是在需要的时候才加上，并在事务结束时释放，所以尽量将可能造成锁冲突或影响并发度的锁向后放。<br>","like_count":0},{"had_liked":false,"id":337191,"user_name":"Geek_04789d","can_delete":false,"product_type":"c1","uid":2163923,"ip_address":"","ucode":"9341B8934455C1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/tmKD96dzOPORx0UbbIocwUR0NO4ApBIIJZ0foOibLq2xkLgV2gficxRMreycHMErXHTQpJHDFWiablxjfhWzXRntg/132","comment_is_top":false,"comment_ctime":1646668039,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646668039","product_id":100020801,"comment_content":"为什么乐观锁可以减少并发获取锁呢，update纪录不是一样要获取锁么","like_count":0},{"had_liked":false,"id":337062,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1646578476,"is_pvip":false,"discussion_count":0,"race_medal":2,"score":"1646578476","product_id":100020801,"comment_content":"思考题，选择第二种，第一种：虽然一般的表中一次性删除1万条也是可以的，但是一次性删除数据越多，这个事务就越大，出现死锁，或者出现意外回退的成本高。第二种和第三种，虽然都是分批次，但是一个是多个连接中，会出现并发删除造成锁等待。最好就是第二种。","like_count":0},{"had_liked":false,"id":336274,"user_name":"皓皓","can_delete":false,"product_type":"c1","uid":1349476,"ip_address":"","ucode":"41414708C8126A","user_header":"https://static001.geekbang.org/account/avatar/00/14/97/64/0b40f4d7.jpg","comment_is_top":false,"comment_ctime":1646045043,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646045043","product_id":100020801,"comment_content":"干货挺多","like_count":0},{"had_liked":false,"id":333723,"user_name":"刘新旺","can_delete":false,"product_type":"c1","uid":2393292,"ip_address":"","ucode":"69F38D4DBF2879","user_header":"https://static001.geekbang.org/account/avatar/00/24/84/cc/801194ac.jpg","comment_is_top":false,"comment_ctime":1644485624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644485624","product_id":100020801,"comment_content":"第一种，一次性锁10000行，代价较大。<br>第二种，limit为顺序扫描，500行相比10000行少了很多，所以锁的行数较少，执行删除操作较快。<br>第三种，并发执行删除相同数据资源，导致死锁发生，效率较低。","like_count":0},{"had_liked":false,"id":330562,"user_name":"Geek_fac4e4","can_delete":false,"product_type":"c1","uid":1850208,"ip_address":"","ucode":"B907709CF7A635","user_header":"","comment_is_top":false,"comment_ctime":1642043054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642043054","product_id":100020801,"comment_content":"第一种方案是长事务肯定，一般都不建议；<br>第二种方案事务粒度小，但执行时间长；<br>第三种容易造成锁，但是执行速度快；<br>在实际场景中，还是要考虑并发执行速度的，比如设计自增的ID主键，先查出结果集中的记录数，再按事务粒度，结合主键ID范围进行并发删除，这样效率和风险都可靠。","like_count":0},{"had_liked":false,"id":330177,"user_name":"Geek_27a248","can_delete":false,"product_type":"c1","uid":1542778,"ip_address":"","ucode":"6AC3AC42E6EEC9","user_header":"https://static001.geekbang.org/account/avatar/00/17/8a/7a/54003392.jpg","comment_is_top":false,"comment_ctime":1641828995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641828995","product_id":100020801,"comment_content":"老师我有个问题想问下是我现在这个场景发生死锁是因为哪个锁发生的复线场景如下<br>隔离级别rc，mysql8.0、表t没有数据、只有俩字段、id和name、没有主键和索引<br>客户端1<br>begin<br>insert into t values（1，“t1”）；<br>客户端2<br>begin<br>insert into t vslues（2，“t2”）；<br>客户端1<br>update t set name=t11 where id=1<br>此时客户端1阻塞<br>客户端2<br>update t set name=t22 where id =2<br>此时客户端2发生死锁<br><br>","like_count":0},{"had_liked":false,"id":329131,"user_name":"吴文超","can_delete":false,"product_type":"c1","uid":2447595,"ip_address":"","ucode":"55EDC0EB95D493","user_header":"https://static001.geekbang.org/account/avatar/00/25/58/eb/fa1dd9ea.jpg","comment_is_top":false,"comment_ctime":1641170063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641170063","product_id":100020801,"comment_content":"第二种。因为第一种占用资源，第3种互相争夺资源导致线程阻塞<br>","like_count":0},{"had_liked":false,"id":327683,"user_name":"一个无趣的俗人","can_delete":false,"product_type":"c1","uid":1691669,"ip_address":"","ucode":"25435088B10CA2","user_header":"https://static001.geekbang.org/account/avatar/00/19/d0/15/5851180d.jpg","comment_is_top":false,"comment_ctime":1640234465,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640234465","product_id":100020801,"comment_content":"三刷，自问自答，问题总结：<br><br>1、在一个事务内执行 update，行锁会在 update 完成后释放还是事务结束后才释放？调整事务内的语句执行顺序对性能是否有影响？<br><br>2、为什么 CPU 消耗接近 100%，但整个数据库每秒就执行不到 100 个事务。这是什么原因？<br><br>3、如何解决由与热点行更新导致的性能问题？<br><br>4、某个批处理要删除 1000 条数据，5个线程，200条数据 commit 一次，为什么会发生死锁？","like_count":0},{"had_liked":false,"id":324506,"user_name":"leon","can_delete":false,"product_type":"c1","uid":1217955,"ip_address":"","ucode":"97610F35D2543A","user_header":"https://static001.geekbang.org/account/avatar/00/12/95/a3/0a3cde60.jpg","comment_is_top":false,"comment_ctime":1638461775,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638461775","product_id":100020801,"comment_content":"第三遍看这个专栏了，每次都有新的收获，感谢老师","like_count":0},{"had_liked":false,"id":323823,"user_name":"尘","can_delete":false,"product_type":"c1","uid":1244251,"ip_address":"","ucode":"2C71FBCED5BFE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/fc/5b/caa6a2a6.jpg","comment_is_top":false,"comment_ctime":1638175262,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1638175262","product_id":100020801,"comment_content":"如果表中某行数据被行锁锁定了，现在有个操作需要申请表锁，申请表锁的过程中是如何判断当前表是否有行被锁定的？","like_count":0},{"had_liked":false,"id":323328,"user_name":"LY","can_delete":false,"product_type":"c1","uid":1794879,"ip_address":"","ucode":"165C7C626C545F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/63/3f/51b2a1f4.jpg","comment_is_top":false,"comment_ctime":1637836221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637836221","product_id":100020801,"comment_content":"微服务架构中，一个服务往往无法访问其它服务的DB，如果是一些公共基础的数据可以成立中台来收拢DB访问，这样一个DB往往就只有一个服务可以直连，做访问线程数量控制也就容易很多了。","like_count":0},{"had_liked":false,"id":321934,"user_name":"kimoti","can_delete":false,"product_type":"c1","uid":1897671,"ip_address":"","ucode":"0A78077408C2B1","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f4/c7/037235c9.jpg","comment_is_top":false,"comment_ctime":1637112617,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637112617","product_id":100020801,"comment_content":"MSSQL数据库发生死锁,请教老师怎么解决？","like_count":0},{"had_liked":false,"id":316893,"user_name":"Hustler","can_delete":false,"product_type":"c1","uid":1057607,"ip_address":"","ucode":"04F901FA3CC347","user_header":"https://static001.geekbang.org/account/avatar/00/10/23/47/c87a7246.jpg","comment_is_top":false,"comment_ctime":1634606766,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1634606766","product_id":100020801,"comment_content":"老师，请问下行锁是数据库自己加的锁还是需要我们自己显示加锁呢？","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576790,"discussion_content":"select ... in share mode:手动加共享锁\nselect ... for update:手动加排它锁\nupdate ... set ...:自动加","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655791481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316331,"user_name":"半年 2号","can_delete":false,"product_type":"c1","uid":2562181,"ip_address":"","ucode":"7F23C4532A5513","user_header":"https://static001.geekbang.org/account/avatar/00/27/18/85/83ac977e.jpg","comment_is_top":false,"comment_ctime":1634272808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634272808","product_id":100020801,"comment_content":"表结构不在事务一致性视图的保护里。","like_count":0},{"had_liked":false,"id":314761,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1633406852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633406852","product_id":100020801,"comment_content":"第一种方法，要删除的记录太多，会一下锁住10000条记录，可能会引发超时；<br>第三种方法，20个连接同时做删除操作，多个连接可能会同时锁住同样的记录，会引起死锁；<br>第二种方法，是一个折衷的方法，每次只删除500记录，锁住的记录数不多，且不会引起死锁<br>因此，我会选用第二种方法。","like_count":0},{"had_liked":false,"id":314211,"user_name":"Seven","can_delete":false,"product_type":"c1","uid":2403766,"ip_address":"","ucode":"37D99CF8535CDE","user_header":"https://static001.geekbang.org/account/avatar/00/24/ad/b6/a8caa2c7.jpg","comment_is_top":false,"comment_ctime":1632901270,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1632901270","product_id":100020801,"comment_content":"思考题：我应该会选择第二种 “在一个连接中循环执行 20 次 delete from T limit 500;” 第一种会产生多个连接，第三种会导致大量死锁检测。","like_count":0},{"had_liked":false,"id":312424,"user_name":"OperaX","can_delete":false,"product_type":"c1","uid":1510551,"ip_address":"","ucode":"66947CD04E3B3E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI8mFt5wSkia3yumk409E65JIlGoreva1Q25icTks0XB0EDC7WJ5V0z6zuvgGkI2Zrh5cBXGS5Hea8A/132","comment_is_top":false,"comment_ctime":1631793891,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1631793891","product_id":100020801,"comment_content":"按主键顺序 去加锁的话 会避免死锁的情况吗","like_count":0},{"had_liked":false,"id":310302,"user_name":"Geek_842f07","can_delete":false,"product_type":"c1","uid":2698987,"ip_address":"","ucode":"ED772AF755FE7E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/WP4Ge8ABcINFkccKaNYKibicFnI0JAoojBBAUGrichNeRAgzm5RGbHG7GqYrFX3ELEzenuEbicQHJy2HZ72RxSOuMA/132","comment_is_top":false,"comment_ctime":1630584029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630584029","product_id":100020801,"comment_content":"最后，我给你留下一个问题吧。如果你要删除一个表里面的前 10000 行数据，有以下三种方法可以做到：第一种，直接执行 delete from T limit 10000;第二种，在一个连接中循环执行 20 次 delete from T limit 500;第三种，在 20 个连接中同时执行 delete from T limit 500。你会选择哪一种方法呢？为什么呢？<br>答：我会选择第二种，因为每次删除500行，相对运算量小一点，同时使用一个连接比使用20个连接可以省略更多的资源，因为维护连接时需要占用资源的","like_count":0},{"had_liked":false,"id":309996,"user_name":"麦田里的守望者","can_delete":false,"product_type":"c1","uid":2028620,"ip_address":"","ucode":"A11D2DDC08D282","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f4/4c/9b4e8e95.jpg","comment_is_top":false,"comment_ctime":1630432319,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1630432319","product_id":100020801,"comment_content":"老师，目前介绍的锁有三种，分别是行锁，表锁以及DML锁。表锁有介绍说，需要显示指定才会触发，那么我们正常执行一条update操作，是不是可以认为如果出现表锁的情况，通常都是由于DML锁导致的。或者是在Innodb数据引擎下，那些情况会触发表锁，有没有相关命令可以查看当前表或者记录正在使用哪些锁","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397049,"discussion_content":"有一种情况，如果update的条件走不到索引，就会走全表扫描，这样虽然加的也是行锁，但是因为要扫描所有行，相当于表锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632550505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308930,"user_name":"Geek_e2cf4f","can_delete":false,"product_type":"c1","uid":2617036,"ip_address":"","ucode":"269E145AEB3AB7","user_header":"","comment_is_top":false,"comment_ctime":1629863414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629863414","product_id":100020801,"comment_content":" 老师您好，innodb即使不在事务中，在对任意数据进行增删改的时候也都会使用锁？只是如果不在事务中， 操作完了立马就会释放锁，而在事务中只有事务提交了， 这些锁才会被释放？<br>也就是说除了快照读，对数据库的任意操作其实都是需要加锁的？<br> ","like_count":0},{"had_liked":false,"id":308845,"user_name":"Geek_743d4f","can_delete":false,"product_type":"c1","uid":2744099,"ip_address":"","ucode":"97A9288F828B77","user_header":"","comment_is_top":false,"comment_ctime":1629820488,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629820488","product_id":100020801,"comment_content":"第二种，并发执行，又不会发生锁冲突","like_count":0},{"had_liked":false,"id":308116,"user_name":"AmazingYu","can_delete":false,"product_type":"c1","uid":1005587,"ip_address":"","ucode":"7608037021CC1C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/58/13/2afd6bdb.jpg","comment_is_top":false,"comment_ctime":1629419017,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1629419017","product_id":100020801,"comment_content":"为什么有 MDL 了还需要有行锁呢？","like_count":0,"discussions":[{"author":{"id":1606288,"avatar":"https://static001.geekbang.org/account/avatar/00/18/82/90/295449c4.jpg","nickname":"半生瓜。","note":"","ucode":"6D4CC445230D19","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394232,"discussion_content":"mdl是元数据锁，是修改表结构用的。行锁是修改数据行用的，你使用update语句，会添加mdl的读锁和对应的行锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631794874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304787,"user_name":"lidabai","can_delete":false,"product_type":"c1","uid":2677124,"ip_address":"","ucode":"BACB3430064469","user_header":"https://static001.geekbang.org/account/avatar/00/28/d9/84/9b03cd04.jpg","comment_is_top":false,"comment_ctime":1627614075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627614075","product_id":100020801,"comment_content":"发现某个表被锁，怎么查看锁表的语句？<br>","like_count":0},{"had_liked":false,"id":303277,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1626697226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626697226","product_id":100020801,"comment_content":"请问老师，这一讲的两阶段锁，能解决写倾斜的问题吗？","like_count":0},{"had_liked":false,"id":303180,"user_name":"昔年","can_delete":false,"product_type":"c1","uid":2293301,"ip_address":"","ucode":"D58251BC17B57F","user_header":"https://static001.geekbang.org/account/avatar/00/22/fe/35/92f30204.jpg","comment_is_top":false,"comment_ctime":1626655672,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1626655672","product_id":100020801,"comment_content":"老师，你好，我在网上看到很多描述都是说innodb是给索引加锁来实现行锁的，如果没有走索引，那行锁就会升级为表锁。<br>有一些文章也看到说，行锁不会升级为表锁，依旧是加大量的行锁，那到底如何判断锁到底是行锁还是表锁呢？","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397050,"discussion_content":"本质还是行锁，因为要扫描所有行，相当于锁表了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632550622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300413,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1625146665,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625146665","product_id":100020801,"comment_content":"4 行锁： 就是能锁住一行数据的锁。InnoDb 支持行锁。<br>5 两阶段锁<br>  5.1  innodB 事务中，行锁是在需要的时候添加上的，但并不是用完这行数据就解锁，而是等事务提交之后再解锁。<br>  5.2 因此 如果事务中需要多个行锁，把最有可能造成所冲突，最有可能影响并发度的锁尽量往后放。<br>6 死锁和死锁检测<br>   6.1 当并发系统，不同线程都在等待别的线程释放资源时，就会导致这几个线程进入无线等待状态，俗称死锁。<br>   6.2  解决死锁的方式有两种：  第一种是设置超时等待时间 通过innodb_lock_wait_timeout 参数设置。innodb 默认超时时间是50s<br>\t\t\t 第二种，方式是 开启死锁检测，innodb_deadlock_detect 设置为on, 但是开启这个参数后，并发量大会 比较吃cpu 性能，一位内 检测复杂度是 O(n)<br> \t\t\t    \t为解决热点更新为题，可以临时吧死锁检测关掉或者，控制并发度。","like_count":0},{"had_liked":false,"id":300235,"user_name":"孤独行者","can_delete":false,"product_type":"c1","uid":1566282,"ip_address":"","ucode":"5AE79D0B7C77E0","user_header":"https://static001.geekbang.org/account/avatar/00/17/e6/4a/308524de.jpg","comment_is_top":false,"comment_ctime":1625057458,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625057458","product_id":100020801,"comment_content":"间隙锁 有讲吗？是哪一讲","like_count":0},{"had_liked":false,"id":298497,"user_name":"云海","can_delete":false,"product_type":"c1","uid":1365206,"ip_address":"","ucode":"0C6CA0BE58EA21","user_header":"https://static001.geekbang.org/account/avatar/00/14/d4/d6/1d4543ac.jpg","comment_is_top":false,"comment_ctime":1624158027,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624158027","product_id":100020801,"comment_content":"有个疑问，文中提到：因此，这个并发控制要做在数据库服务端。如果你有中间件，可以考虑在中间件实现；如果你的团队有能修改 MySQL 源码的人，也可以做在 MySQL 里面。基本思路就是，对于相同行的更新，在进入引擎之前排队。这样在 InnoDB 内部就不会有大量的死锁检测工作了。<br><br>这种方式是否有什么弊端呢？比如降低并发度。为什么官方没采用这种方式呢？","like_count":0},{"had_liked":false,"id":297111,"user_name":"Geek_b35ff7","can_delete":false,"product_type":"c1","uid":2367759,"ip_address":"","ucode":"3BF5782F059B75","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAvgLjLJQIb4B6p2micrDSGW7jkjyibia3MgGvkSv8zIOCdmcibfLqHcMK9NQkBTzfwgL7ngzPcG15Ug/132","comment_is_top":false,"comment_ctime":1623314815,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1623314815","product_id":100020801,"comment_content":"老师请问 foru pdate和update 锁的区别","like_count":0,"discussions":[{"author":{"id":1619091,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b4/93/7d690458.jpg","nickname":"浪","note":"","ucode":"30EFA17E82551D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382644,"discussion_content":"一个是手动加，一个是数据库自动加，事务提交后自动释放","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625652678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297084,"user_name":"Geek_30fab2","can_delete":false,"product_type":"c1","uid":1938695,"ip_address":"","ucode":"833A3FBFC04527","user_header":"","comment_is_top":false,"comment_ctime":1623303922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623303922","product_id":100020801,"comment_content":"老师按照第三种解决死锁的方式，我觉得还不如每次对影院账户的操作，都增加一条数据到一张表里面<br>然后再到某一时间段汇总到影院账户中，就像对账一样。这样就避免了多线程对通一条数据进行操作了！","like_count":0},{"had_liked":false,"id":294757,"user_name":"小小鸟","can_delete":false,"product_type":"c1","uid":1308787,"ip_address":"","ucode":"6AD33F6AD5881E","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/73/a1a9a598.jpg","comment_is_top":false,"comment_ctime":1622082715,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622082715","product_id":100020801,"comment_content":"总结 ：InnoDB 引擎有行锁，在事务开始的时候会在行上锁，直到该事务被commit以后才释放该锁，<br>所以如果事务中有多个行，尽量把业务访问最多的那行放在最后，这样可以最晚上锁，最快释放行锁。<br>如果两个事务之间互相对同一行进行DML的时候会产生死锁，可以通过死锁等待超时和死锁检测避免死锁,死主要通过控制线程并发，减少死锁检测对CPU的开销，进行死锁检测。<br>提问的回答:在一个连接中 循环20次删除，如果直接删除很多行数据会导致数据长事务，容易造成死锁以及数据库堵塞，如果是20个链接会频繁导致数据库的连接，断开也会导致数据库的开销增大<br><br>提问一个问题:老师，我记得上节课说到表锁的时候，对表内数据进行增删改的时候表也会上锁，那么什么情况下只想行锁不上表锁，是当操作都是同一行的时候就上行锁，不同行就上表锁是吗","like_count":0},{"had_liked":false,"id":293755,"user_name":"恐龙","can_delete":false,"product_type":"c1","uid":1323030,"ip_address":"","ucode":"7B85A27E40D261","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/16/4773d604.jpg","comment_is_top":false,"comment_ctime":1621521607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621521607","product_id":100020801,"comment_content":"老师，借着死锁的内容，咨询一个问题，情况是这样的：生产数据库采用mysql，但是时有出现死锁，如何定位死锁是由哪几个sql导致的呢？谢谢","like_count":0},{"had_liked":false,"id":293333,"user_name":"郑海成","can_delete":false,"product_type":"c1","uid":1192616,"ip_address":"","ucode":"B0363EA4B2C646","user_header":"https://static001.geekbang.org/account/avatar/00/12/32/a8/d5bf5445.jpg","comment_is_top":false,"comment_ctime":1621339808,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1621339808","product_id":100020801,"comment_content":"1.行锁是引擎自己实现的，myisam引擎不支持行锁，innodb引擎支持行锁<br>2.行锁是针对数据表中行记录的锁，事务a更新一条数据，事务b需要更新同一条数据，此时事务吧会被阻塞，待事务commit后事务b才继续执行更新<br>3.两阶段锁：在innodb事务中，行锁是在变更语句执行时才加上，但不是执行完就释放，而是在事务提交后才全部释放<br>4.两阶段锁应用：如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁尽量往后放。<br>5.死锁：条件一，两个进程间涉及资源依赖。条件二，两个进程间出现相互等待","like_count":0},{"had_liked":false,"id":293284,"user_name":"呵呵哒","can_delete":false,"product_type":"c1","uid":2234743,"ip_address":"","ucode":"CEC8B421BB564A","user_header":"https://static001.geekbang.org/account/avatar/00/22/19/77/3ca9f42d.jpg","comment_is_top":false,"comment_ctime":1621322396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621322396","product_id":100020801,"comment_content":"老师您好请教个问题：如果因为死锁导致的事务回滚，是在代码里面控制再次去执行吗？<br>","like_count":0},{"had_liked":false,"id":292676,"user_name":"逍遥子","can_delete":false,"product_type":"c1","uid":1127109,"ip_address":"","ucode":"777CF0635970E1","user_header":"https://static001.geekbang.org/account/avatar/00/11/32/c5/38a59795.jpg","comment_is_top":false,"comment_ctime":1620917439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620917439","product_id":100020801,"comment_content":"老师，请教两个问题<br>1.两个字段a，b都是普通索引，当根据两个字段做条件update一条存在的语句时， 索引a与索引b都会加锁么？经测试是的。执行计划不是只用了一个索引么，为什么都被加上了呢？<br>2.根据普通索引更新时，若总数据有1万行，扫描到9000条时，第9001条数据被第2个线程抢到锁，是不是第1个线程需要等第2个线程事务提交后再继续扫描呢？这种情况在rr级别与rc级别下有什么不同吗","like_count":0},{"had_liked":false,"id":290041,"user_name":"向前","can_delete":false,"product_type":"c1","uid":1514623,"ip_address":"","ucode":"4DD08BF0CD6B78","user_header":"https://static001.geekbang.org/account/avatar/00/17/1c/7f/8b421ebb.jpg","comment_is_top":false,"comment_ctime":1619335777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619335777","product_id":100020801,"comment_content":"老师，您好，关于死锁检测您提到1000个并发更新同一行，这样发生的死锁检测操作不应该是 1+2+...+999=500000万？","like_count":0},{"had_liked":false,"id":289712,"user_name":"lleft","can_delete":false,"product_type":"c1","uid":1970443,"ip_address":"","ucode":"D573EB509455AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","comment_is_top":false,"comment_ctime":1619149354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619149354","product_id":100020801,"comment_content":"老师，这个备份修改表结构的答案有问题吧？版本5.7.27 ，RR隔离基本，手动执行备份中的关键语句，sessionA执行start transaction with consistent snapshot；之后，sessionB执行了对表t1加列的操作，这时sessionA执行show create table t1没有问题，新加的列也显示出来了，但是执行select * from t1就报错了，报 Table definition has changed, please retry transaction。跟参考答案的第一条Q4时刻之前到来没有影响，相矛盾，这是为什么","like_count":0},{"had_liked":false,"id":289572,"user_name":"星辰大海","can_delete":false,"product_type":"c1","uid":2117147,"ip_address":"","ucode":"CA39334DAE244A","user_header":"https://static001.geekbang.org/account/avatar/00/20/4e/1b/c49d4628.jpg","comment_is_top":false,"comment_ctime":1619084815,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619084815","product_id":100020801,"comment_content":"关于热点账户，更好的解决方案是记流水，然后定期汇总入账。既可以避免死锁检测，又可以避免多账户余额借调的问题","like_count":0},{"had_liked":false,"id":289552,"user_name":"lleft","can_delete":false,"product_type":"c1","uid":1970443,"ip_address":"","ucode":"D573EB509455AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","comment_is_top":false,"comment_ctime":1619077300,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619077300","product_id":100020801,"comment_content":"MySQL的行锁是在引擎层实现的，就是说全局读锁和表级锁是在Server层实现的吗？","like_count":0},{"had_liked":false,"id":289206,"user_name":"笨鸟的GPS","can_delete":false,"product_type":"c1","uid":2489987,"ip_address":"","ucode":"62B321A5424FD9","user_header":"https://static001.geekbang.org/account/avatar/00/25/fe/83/b2e833ff.jpg","comment_is_top":false,"comment_ctime":1618916751,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618916751","product_id":100020801,"comment_content":"我觉得是第一种，这样可以减少并发度","like_count":0},{"had_liked":false,"id":289129,"user_name":"梦吉","can_delete":false,"product_type":"c1","uid":1575619,"ip_address":"","ucode":"182052729CA178","user_header":"https://static001.geekbang.org/account/avatar/00/18/0a/c3/a045b155.jpg","comment_is_top":false,"comment_ctime":1618884109,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618884109","product_id":100020801,"comment_content":"老师您好，我想问下就是，您之前说同一个事务里有多个行级锁时，只有在这个事务提交了之后其他等待事务才能进行，但是您说调整行级锁的顺序会减少等待时间，这是不是有点冲突啊","like_count":0},{"had_liked":false,"id":287310,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1253652,"ip_address":"","ucode":"3FE64459842015","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","comment_is_top":false,"comment_ctime":1617876242,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1617876242","product_id":100020801,"comment_content":"有个疑问，MySQL 为什么设计了两阶段锁呢？<br>如果更新完成后立即释放行锁，不就没有这些问题了。是为了【可重复读】吗？","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576798,"discussion_content":"为了【回滚】吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655791985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285405,"user_name":"₯㎕、AmberLavigne","can_delete":false,"product_type":"c1","uid":1699576,"ip_address":"","ucode":"6246705BE0BD87","user_header":"https://static001.geekbang.org/account/avatar/00/19/ee/f8/5222d593.jpg","comment_is_top":false,"comment_ctime":1616779187,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616779187","product_id":100020801,"comment_content":"主动死锁检测会把整个死锁链条中的某一个事物回滚，这是开始后数据库内部操作的吗，那被回滚的这个事物的这个进程的这个客户端操作直接失败了？","like_count":0},{"had_liked":false,"id":284548,"user_name":"ethan","can_delete":false,"product_type":"c1","uid":1066229,"ip_address":"","ucode":"DA70975A40ABE2","user_header":"https://static001.geekbang.org/account/avatar/00/10/44/f5/486d696c.jpg","comment_is_top":false,"comment_ctime":1616330384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616330384","product_id":100020801,"comment_content":"业务端排序也是一个避免死锁的常用方式。<br>比如：<br>a事务需要更新商品id=1,2的库存<br>b事务需要更新商品id=2,1的库存<br>可以通过对商品id排序，按照顺序更新，破坏掉死锁形成的必要条件：循环依赖","like_count":0},{"had_liked":false,"id":283493,"user_name":"一步两步","can_delete":false,"product_type":"c1","uid":2151836,"ip_address":"","ucode":"B59D1F5293B5C2","user_header":"https://static001.geekbang.org/account/avatar/00/20/d5/9c/842eda55.jpg","comment_is_top":false,"comment_ctime":1615799446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615799446","product_id":100020801,"comment_content":"每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是 O(n) 的操作。假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作就是 100 万这个量级的。<br>老师，上面这一段能简单说一下为什么是100万这个量级吗，或者提示一下用了什么算法，谢谢了。<br>","like_count":0},{"had_liked":false,"id":282921,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":2359661,"ip_address":"","ucode":"526A8EF149B7D6","user_header":"https://static001.geekbang.org/account/avatar/00/24/01/6d/3931ad7a.jpg","comment_is_top":false,"comment_ctime":1615466198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615466198","product_id":100020801,"comment_content":"有排他锁，共享锁的讲解吗？","like_count":0},{"had_liked":false,"id":282691,"user_name":"陆野","can_delete":false,"product_type":"c1","uid":2338021,"ip_address":"","ucode":"4971B0389F5011","user_header":"","comment_is_top":false,"comment_ctime":1615366030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615366030","product_id":100020801,"comment_content":"关于对上一课题目的解答，老师在前面的课已讲过RR级别的事务隔离是在启动事务时就创建视图，为什么在这个题目解答里说：“如果在 Q4 语句执行之前到达，现象：没有影响，备份拿到的是 DDL 后的表结构。”而不是Q2前呢？","like_count":0},{"had_liked":false,"id":281350,"user_name":"tyy","can_delete":false,"product_type":"c1","uid":1302149,"ip_address":"","ucode":"C3B436E6562744","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","comment_is_top":false,"comment_ctime":1614697810,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1614697810","product_id":100020801,"comment_content":"面试过程中经常会被问到如何避免死锁","like_count":0,"discussions":[{"author":{"id":1015184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/90/abb7bfe3.jpg","nickname":"fourge","note":"","ucode":"F3E3FFC4990358","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582397,"discussion_content":"可以从死锁产生的原因出发去解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659422560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":276844,"user_name":"Geek_45db11","can_delete":false,"product_type":"c1","uid":1710703,"ip_address":"","ucode":"0D282CA009BDC5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VYneMJE72iciamWiaY2GZ94Bf1WHs0pY54JVPQAFXQHcJsoIzLxzOth9kibuYBUUjiaPEZwrsKXetBPYxhmS420q26Q/132","comment_is_top":false,"comment_ctime":1612151695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612151695","product_id":100020801,"comment_content":"对于上期问题，我测试的结果是：只要在Q2和Q5之间对表t进行了DDL，那么Q5就会报错啊“ERROR 1412 (HY000): Table definition has changed, please retry transaction”，Q4不会报错。求解答","like_count":0},{"had_liked":false,"id":276106,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1318970,"ip_address":"","ucode":"2417242560360A","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/3a/90db6a24.jpg","comment_is_top":false,"comment_ctime":1611795796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611795796","product_id":100020801,"comment_content":"二刷第4天，今天温故知新了，dead lock detect大概的复杂度，O(n2)，以及新加入的锁等待的判断。<br><br>重点是，我大概想明白了3年半前，一次生产dead lock导致MySQL数据库主机hang的原因了。应该就是8点以后业务上来了，加上同时的2条没有很好用到索引的锁表的sql。deadlock检测的消耗，以及print call deadlock info（事务2锁住了上百万行）。应该是这种情况导致的问题。感觉应该就是这个原因了。<br>感谢","like_count":0},{"had_liked":false,"id":276030,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1611751549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611751549","product_id":100020801,"comment_content":"看了大多数的评论，普遍倾向于第二种。我觉得三个方法都有欠缺，方案1就不讨论了，说说2和3。方案2的问题在于是一个连接里做二十次提交还是一次提交的区别。方案3如果修改下sql 按照id取模20会不会更好，如果老师给的语句原封不动，自然是不能在线上跑的。","like_count":0},{"had_liked":false,"id":271485,"user_name":"hl","can_delete":false,"product_type":"c1","uid":1385110,"ip_address":"","ucode":"E3280721BCFA6B","user_header":"https://static001.geekbang.org/account/avatar/00/15/22/96/beb89790.jpg","comment_is_top":false,"comment_ctime":1609663664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609663664","product_id":100020801,"comment_content":"想知道备份的时候，设置 SAVE_POINT 的作用是什么，为何说重要","like_count":0},{"had_liked":false,"id":271453,"user_name":"凹凸鸿","can_delete":false,"product_type":"c1","uid":1915334,"ip_address":"","ucode":"A458BAEBF314B2","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/c6/1e12f271.jpg","comment_is_top":false,"comment_ctime":1609646509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609646509","product_id":100020801,"comment_content":"关于并发更新行的问题，更通用的方案是在程序脚本上实现队列，排队处理吧。我们很多项目中都是这么处理的。","like_count":0},{"had_liked":false,"id":269058,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1608513082,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1608513082","product_id":100020801,"comment_content":"在 InnoDB 事务中，行锁是在需要的时候才加上的，但并不是不需要了就立刻释放，而是要等到事务结束时才释放。这个就是两阶段锁协议。~~~~~请问一下老师，这个怎么理解成是两阶段锁协议呢？没有看出来是两个阶段啊","like_count":0,"discussions":[{"author":{"id":1987294,"avatar":"","nickname":"WisonHii","note":"","ucode":"620A820528E5E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373640,"discussion_content":"分成了加锁和解锁两个阶段的啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620809525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268529,"user_name":"Geek_40c668","can_delete":false,"product_type":"c1","uid":1685451,"ip_address":"","ucode":"4F7B6A3D4F4DD1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WnbsIzp30vkf8OVicicMHv0Cepxt17aSxdUVIaiaEMullXPE79ywaETSaRl6WeyePiaqqFYoxmK0IXbaUKLpmibD4ng/132","comment_is_top":false,"comment_ctime":1608249871,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608249871","product_id":100020801,"comment_content":"行锁总结：<br>1.不是所有引擎都支持行锁，这也是innodb替代myisam的原因之一。<br>2.行锁：对一行数据加锁，对这行数据的修改需要串行执行。 <br>    行锁在用到时才会开启，但是必须等到事务提交以后释放。<br>3.行锁优化：<br>    a. 将最可能造成冲突的sql尽量放在事务最后，尽可能减少加锁时间。<br>    b. 对于多个资源更新，可以按照统一顺序拿锁。<br>4.死锁处理策略<br>    nnodb_lock_wait_timeout：超时等待。默认值50s，一般无法接受。<br>    innodb_deadlock_detect：死锁检测。默认开启，每一个被锁的线程都查看它所依赖的线程是否发生循环依赖。<br>5.死锁检测的缺点  <br>    如果1000个线程并发修改一行数据，那么需要检测100万次。时间复杂度O(n2)<br>    解决方案：<br>        1.临时关闭死锁检测。<br>        2.控制并发度<br>             a. 修改mysql源码，进入引擎前排队<br>             b. 将一行数据转成多行数据，分段。但是需要特殊处理逻辑。<br><br>问题回答：<br>肯定是第二种。<br>1. 一条sql删除。长事务会导致回滚段无法删除，且占用大量的内存。加limit会对扫描过的行加锁，占用并发资源。","like_count":0},{"had_liked":false,"id":264630,"user_name":"Geek_6b9ecc","can_delete":false,"product_type":"c1","uid":2306194,"ip_address":"","ucode":"25421F0FD129B1","user_header":"","comment_is_top":false,"comment_ctime":1606553193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606553193","product_id":100020801,"comment_content":"真大佬","like_count":0},{"had_liked":false,"id":251158,"user_name":"平凡之路","can_delete":false,"product_type":"c1","uid":1669273,"ip_address":"","ucode":"96CE12339BD5FD","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/99/6060eb2d.jpg","comment_is_top":false,"comment_ctime":1601385264,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1601385264","product_id":100020801,"comment_content":"老师，每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是 O(n) 的操作。假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作就是 100 万这个量级的。这个怎么是100万呢","like_count":0,"discussions":[{"author":{"id":1892202,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLSEtGul3OLHfbkbq5qOywnsCmZ68icDaFcvghXyvmAicTUtLr9q18dmJHH3ZWq3QLGcaicHo1ARn5gA/132","nickname":"雕","note":"","ucode":"5D14752E1450B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337376,"discussion_content":"1000*1000=100w，这是最极端的一种情况，然而实际中并没有这么多，这是我的理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608885384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249449,"user_name":"张卓","can_delete":false,"product_type":"c1","uid":1209049,"ip_address":"","ucode":"AD840AF264C32E","user_header":"https://static001.geekbang.org/account/avatar/00/12/72/d9/488739d1.jpg","comment_is_top":false,"comment_ctime":1600660088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600660088","product_id":100020801,"comment_content":"1. 将可能引起争用的SQL往事务后面放，减少锁定的时间<br>2. 降低并发度，可以在应用层&#47;DB层&#47;中间件中做处理，根据自己的实际情况<br>3. 将热点数据做分拆，比如热点账户分成三四个-&gt; 类似concurrentHashMap的理念提高并发度","like_count":0},{"had_liked":false,"id":248538,"user_name":"Edmund. bill","can_delete":false,"product_type":"c1","uid":2178164,"ip_address":"","ucode":"BCE92CA32D03BD","user_header":"https://static001.geekbang.org/account/avatar/00/21/3c/74/eff5f4e0.jpg","comment_is_top":false,"comment_ctime":1600216729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600216729","product_id":100020801,"comment_content":"老师，mysql对于NULL是怎么存储或标识的，一个字节的标识位够用吗？对于超过255个可为NULL的列，又是怎么标识的？","like_count":0},{"had_liked":false,"id":248368,"user_name":"zenk","can_delete":false,"product_type":"c1","uid":1013669,"ip_address":"","ucode":"B235D5EBCF49BC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/a5/c5ae871d.jpg","comment_is_top":false,"comment_ctime":1600135571,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600135571","product_id":100020801,"comment_content":"请问二阶段锁设计的初衷是什么","like_count":0},{"had_liked":false,"id":247100,"user_name":"Geek_b2933e","can_delete":false,"product_type":"c1","uid":1370020,"ip_address":"","ucode":"B9398B99B9914D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKKUmQ9Vu1JmWw1ZMIZvN6QibLuSVibiaPQrO5TzCOYNfu4T74vMvXJk12J7C0jZGYhUJWET0h0AG0Rw/132","comment_is_top":false,"comment_ctime":1599608693,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599608693","product_id":100020801,"comment_content":"三点总结:1.对于可能造成并发死锁的操作，尽量放在事物的后面，这样可以减少该操作锁的时间，从而减少死锁发生的可能性  2.发生死锁的处理:(1)使用innodb_lock_wait_time设置锁等待的时间(2)使用innodb_lock_detect进行死锁检测  3.关于死锁检测可能引起的并发问题的处理 (1)控制并发量(2)对于确定不会引起死锁的操作，暂时关闭锁检测(3)调优，可以原本更新一条数据改为更新多条，但是需要严谨的逻辑设计","like_count":0},{"had_liked":false,"id":246853,"user_name":"——Xu    jh","can_delete":false,"product_type":"c1","uid":1639212,"ip_address":"","ucode":"CC5E06EF4625DF","user_header":"https://wx.qlogo.cn/mmopen/vi_32/5YIMhg7FvfSibLNP3pZy2aXMVNCuVecVV4gDACHQAPpUM6cFJEeUXPBGNm1YHrQubpWCDvAia7jhhDvXazCJZBQA/132","comment_is_top":false,"comment_ctime":1599492756,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599492756","product_id":100020801,"comment_content":"老师 你说要是在并发下，对于上面说的事务A和事务B这种业务代码下，即使用了队列，不是照样要检测同样的次数的死锁检测吗？每条线程提交的事务不是都要做死锁检测吗","like_count":0,"discussions":[{"author":{"id":1208702,"avatar":"https://static001.geekbang.org/account/avatar/00/12/71/7e/b7b687bd.jpg","nickname":"李小刚","note":"","ucode":"875738D4F66151","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330885,"discussion_content":"队列同时处理事务锁定数量只有几个处理队列的进程， 减少检索死锁时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606726575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245773,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1599046427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599046427","product_id":100020801,"comment_content":"选择方案2。原因如下：<br>1 耗时较长，其他事务阻塞得不到执行<br>3 并发连接容易造成锁争用","like_count":0},{"had_liked":false,"id":245073,"user_name":"Mogwai","can_delete":false,"product_type":"c1","uid":1075409,"ip_address":"","ucode":"10277E9884D5B3","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/d1/1e803c24.jpg","comment_is_top":false,"comment_ctime":1598805105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598805105","product_id":100020801,"comment_content":"“每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是 O(n) 的操作。 ” 这里是O（n^2）吧","like_count":0},{"had_liked":false,"id":243475,"user_name":"Geek_26d259","can_delete":false,"product_type":"c1","uid":2066952,"ip_address":"","ucode":"A754206C768474","user_header":"","comment_is_top":false,"comment_ctime":1598149622,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598149622","product_id":100020801,"comment_content":"上期问题中 既然是可重复度的隔离级别 为什么执行查询会报错呢Table definition has changed,<br>please retry transaction  ","like_count":0},{"had_liked":false,"id":240327,"user_name":"zikcheng","can_delete":false,"product_type":"c1","uid":1234014,"ip_address":"","ucode":"34F89B3068245B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/5e/75db2f9d.jpg","comment_is_top":false,"comment_ctime":1596862343,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596862343","product_id":100020801,"comment_content":"不明白为什么单个事务检测死锁的时间复杂度为 O(n)，这里的 n 指的是哪些线程或者事务的数量，是已经持有锁的事务，还是也包含等待锁的事务？","like_count":0},{"had_liked":false,"id":238360,"user_name":"prepared","can_delete":false,"product_type":"c1","uid":1194853,"ip_address":"","ucode":"00E54A5C7CDCBE","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/65/3a4fc8cf.jpg","comment_is_top":false,"comment_ctime":1596150040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596150040","product_id":100020801,"comment_content":"选择第二种<br>第一种，直接锁死10000行；<br>第二种，每次锁住500行；<br>第三种，20个连接竞争资源","like_count":0},{"had_liked":false,"id":237526,"user_name":"🌰🌰🌰","can_delete":false,"product_type":"c1","uid":1322247,"ip_address":"","ucode":"F4135846A0FB86","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/07/1f6274fd.jpg","comment_is_top":false,"comment_ctime":1595854135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595854135","product_id":100020801,"comment_content":"每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是 O(n) 的操作     这里的  O(n)  是怎么估算出来的呀？ 底层如何实现的呀？","like_count":0},{"had_liked":false,"id":237127,"user_name":"凌风","can_delete":false,"product_type":"c1","uid":1007253,"ip_address":"","ucode":"E675357C22299F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/95/68b69251.jpg","comment_is_top":false,"comment_ctime":1595684478,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595684478","product_id":100020801,"comment_content":"有个问题咨询下，我执行两条sql：<br>sql1：begin;<br>select * from t where d=10 for update;<br><br>sql2：update t set c=5 where id=10;<br><br>先执行sql1，再执行sql2，sql1不提交前sql2会被阻塞，我想问的问题是<br>为什么我必须两条sql都执行才能在information_schema.INNODB_LOCKS表查到锁记录？","like_count":0},{"had_liked":false,"id":234831,"user_name":"58","can_delete":false,"product_type":"c1","uid":2065350,"ip_address":"","ucode":"8878A128290945","user_header":"","comment_is_top":false,"comment_ctime":1594805887,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594805887","product_id":100020801,"comment_content":"老师，锁的章节不说for update这些知识点吗？","like_count":0},{"had_liked":false,"id":234177,"user_name":"崔经刚","can_delete":false,"product_type":"c1","uid":1827943,"ip_address":"","ucode":"207FDF850860C4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5lTnAkviacPGu5S5XJQGQdTpvkSjAVU9Nu2EYicIpMAjiaNP8aXDtfcIHicSnHw2fVIoqTWGGg48rZVzcficUlbgmw/132","comment_is_top":false,"comment_ctime":1594611594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594611594","product_id":100020801,"comment_content":"老师，请问西，Q6是只释放了mdl锁，而没有回滚DDL吗？","like_count":0},{"had_liked":false,"id":233754,"user_name":"dyh_zero","can_delete":false,"product_type":"c1","uid":2052088,"ip_address":"","ucode":"98029D72597EF2","user_header":"","comment_is_top":false,"comment_ctime":1594437653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594437653","product_id":100020801,"comment_content":"工作多年，只是针对问题而解决问题。 从来没系统的了解MYSQL。 订阅后受益匪浅。 不过还是需要自己再多理解理解。 ","like_count":0},{"had_liked":false,"id":231034,"user_name":"柯南爱上指针","can_delete":false,"product_type":"c1","uid":2034669,"ip_address":"","ucode":"5BF7E8AC28F9CF","user_header":"https://static001.geekbang.org/account/avatar/00/1f/0b/ed/4969d2f8.jpg","comment_is_top":false,"comment_ctime":1593569460,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1593569460","product_id":100020801,"comment_content":"老师 您好，之前mysql出现了一个这样子的问题。在从库上有个很慢的查询，可能10min都跑不完，为啥这种情况下会导致主延迟？？？？查询不是读锁吗，我理解是可以同步binlog日志的。","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397120,"discussion_content":"可能这个查询是事物中间的查询，此时事物还没有提交，会导致这个事物中加的行锁无法释放，从而导致其他线程辅助，进而影响sql线程和io线程的执行，导致同步延迟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632565506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":230626,"user_name":"我要放大🐂","can_delete":false,"product_type":"c1","uid":1451509,"ip_address":"","ucode":"B280A95E02E7C1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5EIPG3R01lW2MG1HfcPUDLKajMy7BGg8rKn5dKDbdrCreIwabwJ1RqWOJMVKqAusLaf7Y0Utomibp6ibxajflvQ/132","comment_is_top":false,"comment_ctime":1593435173,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593435173","product_id":100020801,"comment_content":"我在一个事物中修改一条数据它会加行锁，但是我在另一个事物中可以进行查询的，这快我有点没有搞懂的，它不应该会进行阻塞吗？","like_count":0},{"had_liked":false,"id":229423,"user_name":"Geek_59af23","can_delete":false,"product_type":"c1","uid":1814162,"ip_address":"","ucode":"C51E98784520A2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLX76G6b9ufUEFzqAoTeeia4AqOHGFneuDZ5EKh09iaGno2aCbSF3iayBY7wVodX9iaTmxM8IZQMrSO0Q/132","comment_is_top":false,"comment_ctime":1592990206,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1592990206","product_id":100020801,"comment_content":"为什么行锁里并发的锁往后排能提升并发度，而不是往前排","like_count":0,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397122,"discussion_content":"因为事务中加的锁只有在事务提交后才会释放，并发执行较多的sql语句更容易引发锁等待，把这些并发度大的sql语句尽量放在后面执行，可以减少加锁时间，提升整体的执行效率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632565665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229377,"user_name":"tangtang","can_delete":false,"product_type":"c1","uid":1243353,"ip_address":"","ucode":"754B4F7FD95936","user_header":"https://static001.geekbang.org/account/avatar/00/12/f8/d9/bcb79727.jpg","comment_is_top":false,"comment_ctime":1592980070,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592980070","product_id":100020801,"comment_content":"老师能讲一下Gap lock吗，对这块一直不是很明白，innodb是怎么选择范围的","like_count":0},{"had_liked":false,"id":229054,"user_name":"星梦","can_delete":false,"product_type":"c1","uid":1170235,"ip_address":"","ucode":"29776CCF0C17EE","user_header":"https://static001.geekbang.org/account/avatar/00/11/db/3b/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1592889215,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592889215","product_id":100020801,"comment_content":"请教一个问题，关于索引，同时也触发了行锁，能讲一下这方面的原理吗","like_count":0},{"had_liked":false,"id":228650,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1592782725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592782725","product_id":100020801,"comment_content":"老师，我看文中的例子都是由begin开启的一个事务，然后才会加锁。 如果不通过begin，对于单条的 CUD 操作，是不是默认mysql就会为每一条开启一个事务，并加锁？","like_count":0},{"had_liked":false,"id":227755,"user_name":"纳川","can_delete":false,"product_type":"c1","uid":1440095,"ip_address":"","ucode":"D2ACBBEA997AF9","user_header":"https://static001.geekbang.org/account/avatar/00/15/f9/5f/a0a882a0.jpg","comment_is_top":false,"comment_ctime":1592470822,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592470822","product_id":100020801,"comment_content":"真的感觉到老师是在用心交流","like_count":0},{"had_liked":false,"id":226142,"user_name":"一方通行","can_delete":false,"product_type":"c1","uid":1709955,"ip_address":"","ucode":"F85546122F9781","user_header":"https://static001.geekbang.org/account/avatar/00/1a/17/83/e4141c61.jpg","comment_is_top":false,"comment_ctime":1591961542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591961542","product_id":100020801,"comment_content":"思考题:<br>第二个是最好的<br><br>原因：<br>第一个直接把所有的行数据给删除，那么需要用到死锁测试，把所有的数据一个一个测试比较耗时<br><br>第三个如果利用并发技术让多个连接同事删除500<br>个行数据，那么容易发生死锁，自然会用死锁测试来解决，这个也耗时的","like_count":0},{"had_liked":false,"id":225800,"user_name":"图灵机","can_delete":false,"product_type":"c1","uid":2034632,"ip_address":"","ucode":"EB02DB653AD591","user_header":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","comment_is_top":false,"comment_ctime":1591862030,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1591862030","product_id":100020801,"comment_content":"Table definition has changed, please retry transaction  这个效果做不出来啊，每次执行过DDL，再执行select  * 就把新增的列查出来了","like_count":0},{"had_liked":false,"id":224215,"user_name":"李飞","can_delete":false,"product_type":"c1","uid":1555180,"ip_address":"","ucode":"930458850AA05B","user_header":"https://static001.geekbang.org/account/avatar/00/17/ba/ec/2b1c6afc.jpg","comment_is_top":false,"comment_ctime":1591318356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591318356","product_id":100020801,"comment_content":"另一种策略是，发起死锁检测，发现死锁后，主动回滚死锁链条中的某一个事务，让其他事务得以继续执行。<br>请问，回滚某一条事物，是随机还是可以指定？怎么指定？","like_count":0},{"had_liked":false,"id":219441,"user_name":"烟火","can_delete":false,"product_type":"c1","uid":2005868,"ip_address":"","ucode":"636D4991CC65F9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/YjqBFZfKctABH9W3tlGC7w9gLTFN5nW1adxwr05Y1Z0yZqJ9h42p4Vg9JawV96uq7iay1ZX5mZhRwZKf3nwQp5g/132","comment_is_top":false,"comment_ctime":1590026168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590026168","product_id":100020801,"comment_content":"老师,您好! 在批量更新的时候总会超时回滚。<br>Lock wait timeout exceeded; try restarting transaction。<br>执行语句大致是这样的：<br> UPDATE t  <br>\t\t\t INNER JOIN a <br>\t\t\t ON a.no=t.ano AND a.Id=t.aid<br>SET t.t1=a.a1;<br><br>每当更新数据稍大就不行，除了这个更新也没有其他操作。","like_count":0},{"had_liked":false,"id":216784,"user_name":"Geek_a8be59","can_delete":false,"product_type":"c1","uid":1563985,"ip_address":"","ucode":"BEC0F57B51DC44","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdiaUiaCYQe9tibemaNU5ya7RrU3MYcSGEIG7zF27u0ZDnZs5lYxPb7KPrAsj3bibM79QIOnPXAatfIw/132","comment_is_top":false,"comment_ctime":1589341635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589341635","product_id":100020801,"comment_content":"老师您好，请问你这个是怎么估算出来的。假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作就是 100 万这个量级的。 <br>第一个问题：这个假设是不是这个1000个链接相互关联，每次检测都是要检测1000遍？<br>第二个问题：如果是这样的话，就算是并发，应该锁住的时机也是有先后的，他的检测的时机也有先后，不可能达到1010万吧？<br>第三个问题：如果1,2,3,。。。1000  这个是依次加入，并且后面的依赖前面的事务，那是不是这1000总的锁检测次数为 0+1+2+。。。999呢<br>","like_count":0},{"had_liked":false,"id":213725,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1440429,"ip_address":"","ucode":"D8C66E7F61B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/15/fa/ad/3fa02ac7.jpg","comment_is_top":false,"comment_ctime":1588521176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588521176","product_id":100020801,"comment_content":"简单总结下<br>1 行锁 讲竞争激烈的事物往后排<br>2 死锁和死锁检测<br>2.1 设置锁超时<br>2.2 死锁检测，然后回滚<br>2.3 业务拆分一行成多行，减少锁竞争<br>2.4 进去引擎前，先加入队列等待，但是这个个人感觉不是必须修改MySQL源码，可以在业务中异步处理就好","like_count":0},{"had_liked":false,"id":213699,"user_name":"BugBean","can_delete":false,"product_type":"c1","uid":1834181,"ip_address":"","ucode":"B51232281AD9BC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","comment_is_top":false,"comment_ctime":1588516336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588516336","product_id":100020801,"comment_content":"总结：<br>1.两阶段锁协议：需要加锁的时候加锁，事务提交的时候释放锁，所以尽量把最可能造成锁冲突、最可能影响并发度的锁尽量往后，减少锁的时间<br>2.死锁的解决方案：a.设置等待锁超时时间，b.主动检测死锁。a方案的缺点是有可能误伤非死锁线程，b方案的缺点是在高并发情况下，死锁检测需要大量开销。优化解决方案：c.确保业务不会产生死锁；d.控制并发量降低检测死锁成本；e.将热点数据拆分成多个影子数据行","like_count":0},{"had_liked":false,"id":201442,"user_name":"齐鸣","can_delete":false,"product_type":"c1","uid":1702861,"ip_address":"","ucode":"D83001B96B49CE","user_header":"https://static001.geekbang.org/account/avatar/00/19/fb/cd/ea7373d6.jpg","comment_is_top":false,"comment_ctime":1585789322,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585789322","product_id":100020801,"comment_content":"老师，我若是用mq消息队列把修改同一行数据的大量请求排队起来，进入库中是否可以起到锁住并且提高并发度","like_count":0},{"had_liked":false,"id":200886,"user_name":"小菠萝🍍","can_delete":false,"product_type":"c1","uid":1686410,"ip_address":"","ucode":"DA814203C6C062","user_header":"https://static001.geekbang.org/account/avatar/00/19/bb/8a/d33d9d3f.jpg","comment_is_top":false,"comment_ctime":1585667851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585667851","product_id":100020801,"comment_content":"我选第二种<br>第一种会开启一个事务，该事务持有一万行的行级锁，按行顺序进行删除，对于后删除的资源，持有锁的时间过长，因为从一开始就对10000行数据持锁了<br>第三种和第一种的性质是相似的，20个连接同时对500行申请行级锁，造成锁竞争大，即每次只有1个连接可以对500行数据进行删除，本质上与1个连接循环删除20次，每次删除500行数据，所以大量的连接在做无谓的锁竞争，浪费连接资源。<br>不知道这样理解是否正确呢？","like_count":0},{"had_liked":false,"id":193807,"user_name":"Geek_869b2e","can_delete":false,"product_type":"c1","uid":1811405,"ip_address":"","ucode":"1521CFE816D1C1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhoQUKOEru0NyJEEepLzN3rW3PBQicmvy93Rq9MLkJJkHgHPkLpSLT9KMQH2ibMib7b7W0TNeDZEKHA/132","comment_is_top":false,"comment_ctime":1584968680,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584968680","product_id":100020801,"comment_content":"刚测试了一下–single-transaction 做逻辑备份这个答案，我是用版本的是5.7.26，用两个会话进行模拟：<br>s1:START TRANSACTION  WITH CONSISTENT SNAPSHOT;<br>s2:alter table t add t int;<br>s1:show create table t;可以看到s2添加的字段<br>s1:select * from t;  报错：ERROR 1412 (HY000): Table definition has changed, please retry transaction<br>与答案第1条给出的结果“如果在 Q4 语句执行之前到达，现象：没有影响，备份拿到的是 DDL 后的表结构。”不一致。是MySQL不同版本结果不同吗？","like_count":0,"discussions":[{"author":{"id":1069127,"avatar":"https://static001.geekbang.org/account/avatar/00/10/50/47/46da4585.jpg","nickname":"Fan()","note":"","ucode":"FED79EC7D78E91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304837,"discussion_content":"我测试也是这样，老师一直没回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599692506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189177,"user_name":"运维老胡","can_delete":false,"product_type":"c1","uid":1227007,"ip_address":"","ucode":"DF398BEE296E11","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/ff/249da6da.jpg","comment_is_top":false,"comment_ctime":1584464373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584464373","product_id":100020801,"comment_content":"第一种，直接执行 delete from T limit 10000;     <br>  ---  一次删除1w行记录执行时间太长，可能会造成大量业务阻塞，不建议<br><br>第二种，在一个连接中循环执行 20 次 delete from T limit 500;<br> --- 循环删除，每次500行，锁的粒度最小，时间最短。<br>第三种，在 20 个连接中同时执行 delete from T limit 500。<br> --- 并发删除，可能造成死锁","like_count":0},{"had_liked":false,"id":187917,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1126910,"ip_address":"","ucode":"341694ACBAB258","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/fe/30a17a9d.jpg","comment_is_top":false,"comment_ctime":1584277694,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584277694","product_id":100020801,"comment_content":"老师，你好！<br><br>1. 请问会话级隔离级别与全局隔离级别的区别及影响是什么？<br>   因为有一次我在测试SQL时执行 set session tx_isolation = &#39;READ-UNCOMMITTED&#39;; 时不生效，想了一下，执行set global tx_isolation = &#39;READ-UNCOMMITTED&#39;; 之后再试就可以。<br><br>2. 隔离级别和锁是怎样相互影响的？<br>   比如我把隔离级别调低：set session tx_isolation = &#39;READ-UNCOMMITTED&#39;; 再执行 select * from t; 就可以看到其它事务对 t 表的修改了（不管是否提交）；<br><br>   但是我想在两个事务中同时修改同一行时不行，因为写锁冲突；<br><br>   那有没有一个地方可以像隔离级别一样，可以设置锁的级别，在某种情况下降低锁的冲突程序，允许一部分情况可以执行。<br><br>   3. 我看网上有些资料单独讲隔离级别，讲锁都有，但是这两者之间是怎么联系和互动的？因为我简单想一下认为锁就是控制能不能做（当时）的问题，隔离级别就是解决做完后（之后）看不看得到的问题，因为你看 isolation_level 前三个的名字都是与 read 有关，但 serializable 的级别好像又不止读的问题，有单独设 isolation_level 的地方，但又没看到单独设锁级别的地方，这背后是不是还有个控制器或者叫调度器的东西？老师能不能帮忙指个关键词指引我去找下资料。<br><br>   4. 在学习的时候只看到一个点或细节，没有了解全局及框架，就只会用命令，有时按照老师的代码一执行发现结果根本对不上，就不知道怎么搞啦，解决问题的方向都不知道在哪。","like_count":0},{"had_liked":false,"id":187914,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1126910,"ip_address":"","ucode":"341694ACBAB258","user_header":"https://static001.geekbang.org/account/avatar/00/11/31/fe/30a17a9d.jpg","comment_is_top":false,"comment_ctime":1584276369,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584276369","product_id":100020801,"comment_content":"老师，你好！<br>请问：表级读锁与写锁互斥，但行级读锁与写锁没这个问题？<br>如： 【session a】 执行 lock table t write;  | 【session b】 执行 select * from t; 会阻塞<br>但： 【session a】 执行 begin; select * from t for update;  | 【session b】 执行 select * from t; OK<br>但： 【session a】 执行 begin; select * from t where id = 1 for update;  | 【session b】 执行 select * from t where id = 1; OK<br>说明：第二行 SQL 没加 where 条件是表锁也没有问题，第三行 SQL 中 id 为 primary key, 走索引是行锁也可以执行。但第一行就不行，为什么？<br>","like_count":0},{"had_liked":false,"id":185424,"user_name":"邹涛","can_delete":false,"product_type":"c1","uid":1304123,"ip_address":"","ucode":"B81FF267A59CE9","user_header":"https://static001.geekbang.org/account/avatar/00/13/e6/3b/6d68cb72.jpg","comment_is_top":false,"comment_ctime":1583581468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583581468","product_id":100020801,"comment_content":"你好老师 针对上期思考题的答案里面的第一种情况：<br>1.如果在 Q4 语句执行之前到达，现象：没有影响，备份拿到的是 DDL 后的表结构。<br>我做了如下实验验证，发现有出入。请老师指正。<br>RR模式下：<br>先创建测试表：<br>    create table tt(a int primary,b int);<br>\tinsert into tt values (1,1);<br>\tinsert into tt values (2,2);<br>接下来开始测试<br>T1： （session 1 ） START TRANSACTION  WITH CONSISTENT SNAPSHOT;                      <br>T2：  （session2）  alter table tt add column (c int);<br>T3：（session1）show create table tt;<br>    +-------+------------------------------<br>    | Table | Create Table                                                     <br>    +-------+------------------------------<br>    | tt    | CREATE TABLE `tt` (<br>      `a` int(11) NOT NULL,<br>      `b` int(11) DEFAULT NULL,<br>      `c` int(11) DEFAULT NULL,<br>      PRIMARY KEY (`a`)<br>    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 <br>T4：（session1）select * from tt; （报错）<br>    ERROR 1412 (HY000): Table definition has changed, please retry transaction","like_count":0},{"had_liked":false,"id":184116,"user_name":"张汉桂-东莞","can_delete":false,"product_type":"c1","uid":1116277,"ip_address":"","ucode":"38657ABA59382A","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/75/512b9f26.jpg","comment_is_top":false,"comment_ctime":1583226678,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583226678","product_id":100020801,"comment_content":"第1种：单次更新笔数较多，需要用时较长会导致长事务，死锁概率较高。<br>第2种：因为是同一个线程里面执行不会出现死锁的情况。<br>第3种：因为是由不同线程执行，而且没有在where中用条件区分更新的数据。因此出现死锁的概率也较高。<br><br>我选第2种。","like_count":0},{"had_liked":false,"id":182363,"user_name":"xuty","can_delete":false,"product_type":"c1","uid":1310250,"ip_address":"","ucode":"986CF5DCF02762","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/2a/5ee47dda.jpg","comment_is_top":false,"comment_ctime":1582773678,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1582773678","product_id":100020801,"comment_content":"<br>\t1. 如果在 Q4 语句执行之前到达，备份拿到 DDL 后的表结构，Q5 执行的时候，报Table definition has changed, please retry transaction，现象：mysqldump 终止；<br>\t2. <br>如果在“时刻 2”到达，备份拿到 DDL 前的表结构，Q5 执行的时候，报Table definition has changed, please retry transaction，现象：mysqldump 终止；<br>\t3. <br>如果在“时刻 3”到达，mysqldump 占着 t1 的 MDL 读锁，binlog 被阻塞，现象：主从延迟，直到 Q6 执行完成，备份正常。<br>\t4. <br>从“时刻 4”开始，mysqldump 释放了 MDL 读锁，备份拿到的是 DDL 前的表结构，现象：备份正常。<br><br><br>上期答案里的（1）写的不太完整，备份也会失败","like_count":0,"discussions":[{"author":{"id":1304123,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e6/3b/6d68cb72.jpg","nickname":"邹涛","note":"","ucode":"B81FF267A59CE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199308,"discussion_content":"对 我实验也验证了（1）这个问题，报错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583582925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178020,"user_name":"ipofss","can_delete":false,"product_type":"c1","uid":1018620,"ip_address":"","ucode":"DE3061C9259F9E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","comment_is_top":false,"comment_ctime":1581571970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581571970","product_id":100020801,"comment_content":"支持行锁是MySQL引擎层面做的事，目前只有innodb支持，myisam不支持。<br>行锁涉及了两阶段锁协议、死锁和死锁检测这两大部分内容。<br>而死锁是由两阶段锁协议造成的。发生死锁时，通常是回滚事务去解决。<br>死锁检测可以放在客户端、数据库中间件、数据库源码层面。而客户端不管用。","like_count":0},{"had_liked":false,"id":177913,"user_name":"SnowsonZ","can_delete":false,"product_type":"c1","uid":1446972,"ip_address":"","ucode":"5AF76D55CCDC8F","user_header":"https://static001.geekbang.org/account/avatar/00/16/14/3c/d6be29f3.jpg","comment_is_top":false,"comment_ctime":1581527171,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581527171","product_id":100020801,"comment_content":"行锁： 比表锁更细粒度的并发控制方法。由存储引擎实现，所以并不是所有的存储引擎都具备。<br><br>      两段锁： 默认需要时自动加上，事务提交后释放<br>      死锁： 多个线程互相持有对方其他线程所需资源，各线程进入无线等待状态。   <br>      死锁检测： 当新线程加入时，进行死锁检测，存在死锁，则回滚其中一个事务。<br>      死锁检测问题： 当线程过多时，检测成本过高，占用CPU资源。<br>      解决方案： 1. 关闭死锁检测，会出现业务超时问题    2.  降低并发度，采用中间件，排队处理   3. 特殊化方法，将一条资源转化为多条，降低资源竞争<br><br>","like_count":0},{"had_liked":false,"id":177774,"user_name":"木得感情的编码机器","can_delete":false,"product_type":"c1","uid":1810051,"ip_address":"","ucode":"9C6CD47ADCB8E6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","comment_is_top":false,"comment_ctime":1581496856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581496856","product_id":100020801,"comment_content":"对于课后问题，看评论里大家都说方案二更好。其实我觉得不一定，看具体情况。想象这样的场景：如果方案二在串行化的时候，其他连接来一个删除表中某行数据的请求，而这行正好是10000行中的一行，那么这个单独的删除请求可能会在某个串行任务结束后被执行，然后MySQL继续执行后续串行任务，那么其结果就是导致删除了10001行数据。但我们期望的前10000行数据是包含了被单独删除的那一行，所以会导致业务问题。<br><br>我会选择方案三。20个连接虽然会导致锁竞争，但是这19个锁等待在队列依次排好了队，此时如果有单独的删除请求进来，也只能排在这20个删除事务之后。当20个删除事务完成后，单独的删除任务被执行，并且结果是删除了0行数据，业务无损，如果锁时间并不长，我觉得是可以接受的。","like_count":0},{"had_liked":false,"id":176669,"user_name":"御风","can_delete":false,"product_type":"c1","uid":1812807,"ip_address":"","ucode":"51C8212BE06364","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/47/ded5da90.jpg","comment_is_top":false,"comment_ctime":1581134074,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581134074","product_id":100020801,"comment_content":"经测试，在开启innodb_deadlock_detect的情况下，A、B事务同时开启，A事务更新ID为5的记录，B事务更新ID为4的记录。<br>然后A事务再更新ID为4的事务，进入等待，B事务再更新ID为5的记录，报错提示“ERROR 1213 (40001): Deadlock found when trying to get lock; try restarting transaction”，B事务回滚，A事务更新记录4成功。","like_count":0},{"had_liked":false,"id":175257,"user_name":"御风","can_delete":false,"product_type":"c1","uid":1812807,"ip_address":"","ucode":"51C8212BE06364","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/47/ded5da90.jpg","comment_is_top":false,"comment_ctime":1580632885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580632885","product_id":100020801,"comment_content":"innodb行级锁是通过锁索引记录实现的，如果更新的列没建索引是会锁住整个表的。","like_count":0},{"had_liked":false,"id":175223,"user_name":"陈大头","can_delete":false,"product_type":"c1","uid":1335400,"ip_address":"","ucode":"F1CA8837BF1E5C","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/68/626cb455.jpg","comment_is_top":false,"comment_ctime":1580621900,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580621900","product_id":100020801,"comment_content":"我经常在事务中，把对主表的更新放在最前面，不重要的日志记录放在最后面，看来一直都是错的啊😂<br>这道题我选择方案二，平时连表查询也是按五百五百分去循环查的，想来删除也是这么做比较好吧","like_count":0},{"had_liked":false,"id":174792,"user_name":"拓","can_delete":false,"product_type":"c1","uid":1010957,"ip_address":"","ucode":"AC1940ECC25436","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6d/0d/e3fa096f.jpg","comment_is_top":false,"comment_ctime":1580388898,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1580388898","product_id":100020801,"comment_content":"老师，死锁检测那块消耗CPU那块的时间复杂度分析不太理解。为什么是单个事务检测的的负杂度是O(n)，所有并发事务总的复杂度是O(n^2) 。事务死锁检测的过程和步骤可以在说详细点吗？，或者把死锁检测的源码拿出来分析，就更好了。谢谢！","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576800,"discussion_content":"检测一个是n-》O(n)，检测n个就是n*n-》O(n^2)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655792590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174620,"user_name":"起而行","can_delete":false,"product_type":"c1","uid":1131399,"ip_address":"","ucode":"4F116B0B740776","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/87/7604d7a4.jpg","comment_is_top":false,"comment_ctime":1580299344,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1580299344","product_id":100020801,"comment_content":"我选择，第二种，在一个连接中循环执行 20 次 delete from T limit 500。1.我感觉每次循环是一个事务2.不知道还有没有其他人对表进行操作，假设有人在并发操作。 <br>那么，用循环删除可以有更好的并发效率，如果用1.一次删除10000行，可能会和其他操作冲突3.用多个线程来做，需要用各种方式避免死锁，比如设置优先队列，分割表，限制一时刻的进程数，会增加无谓的损耗","like_count":0},{"had_liked":false,"id":173961,"user_name":"yihang","can_delete":false,"product_type":"c1","uid":1012361,"ip_address":"","ucode":"A5506F085D1793","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/89/1a83120a.jpg","comment_is_top":false,"comment_ctime":1579833688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579833688","product_id":100020801,"comment_content":"可不可以在 更新前使用  select ... for update nowait 来减少死锁发生呢","like_count":0},{"had_liked":false,"id":172662,"user_name":"Iqexception","can_delete":false,"product_type":"c1","uid":1109901,"ip_address":"","ucode":"597A335EAC50A1","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/8d/5c0d2e9c.jpg","comment_is_top":false,"comment_ctime":1579247863,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1579247863","product_id":100020801,"comment_content":"关闭死锁检测，设置超时时间，如果发现老是超时，可以检查业务逻辑，调整业务逻辑避免产生死锁，比如可以让加锁顺序一致，或者缩小锁的粒度，避免同一事务中加很多锁","like_count":0},{"had_liked":false,"id":169887,"user_name":"小豹子","can_delete":false,"product_type":"c1","uid":1346267,"ip_address":"","ucode":"972F3E6BF0FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","comment_is_top":false,"comment_ctime":1578468596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578468596","product_id":100020801,"comment_content":"我做了个实验，发现在备份开始之后但在q4之前，将t1表的结构进行修改，备份还是会失败。并不像老师说的没有影响。我这个是直接在主库做的备份。","like_count":0},{"had_liked":false,"id":168992,"user_name":"花子翁","can_delete":false,"product_type":"c1","uid":1073674,"ip_address":"","ucode":"A687441DC6894F","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/0a/26d00cb9.jpg","comment_is_top":false,"comment_ctime":1578234271,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578234271","product_id":100020801,"comment_content":"老师好，文章来回看，写的深入浅出。<br>有两个疑问：<br>1 在06文章中说表级锁MDL(metadata lock),当对一个表做增删改查时加MDL读锁，<br>而且读锁之间是不互斥的。可以有多个线程同时对一张表进行增删改查。<br>而本篇文章提到表锁时又说不支持行锁意味着并发控制只能使用表锁，<br>对于这种引擎的表，同一张表上任何时刻只能有一个更新在执行<br>这个算自相矛盾吗？<br><br>2 对于由热点行更新导致的性能问题，如果能确保客户端只有若干个。当想要在客户端做并发控制。<br>数据库更新数据正常都是很快的，如何针对相同行在客户端做并发控制而又不影响正常的业务速度呢？","like_count":0},{"had_liked":false,"id":166063,"user_name":"eviltion","can_delete":false,"product_type":"c1","uid":1515445,"ip_address":"","ucode":"022DE8510B825E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/mWicFKgbjL299CQPEhoFdSAphVb4UpibkhF8loRxryBRt3H7ZGkibibhaKANTxvSiatic4PLCy2MsbEMH1hc76YefPUw/132","comment_is_top":false,"comment_ctime":1577373273,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1577373273","product_id":100020801,"comment_content":"如果对一行数据，同时执行两个update语句，如果不加begain，是不是默认是执行完提交，如果加了，就必须得手动commit 吧","like_count":0},{"had_liked":false,"id":165971,"user_name":"Nana","can_delete":false,"product_type":"c1","uid":1540622,"ip_address":"","ucode":"DE60C1DB6BE7A4","user_header":"https://static001.geekbang.org/account/avatar/00/17/82/0e/c80191fd.jpg","comment_is_top":false,"comment_ctime":1577353129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577353129","product_id":100020801,"comment_content":"老师好，t表使用innodb引擎<br>在事务A中执行select * from t where t.a=1 for update;对表t加了IX锁，a=1行加了x锁，<br>事务A未提价，此时事务B中执行select * from t where t.a&gt;=1 and t.a&lt;=5,根据innodb一致性非锁定读策略，该查询会从快照中获取到数据。<br>请问事务B中的查询语句会对t表1-5行的数据加S锁吗？","like_count":0},{"had_liked":false,"id":165958,"user_name":"Nana","can_delete":false,"product_type":"c1","uid":1540622,"ip_address":"","ucode":"DE60C1DB6BE7A4","user_header":"https://static001.geekbang.org/account/avatar/00/17/82/0e/c80191fd.jpg","comment_is_top":false,"comment_ctime":1577351122,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577351122","product_id":100020801,"comment_content":"老师，一个事务中执行select * from t where t.a=1 for update;该语句1对t表加了IX锁，对a=1行加了X锁，该事物还未commit，此时在另一个事务中执行select * from t where t.a&gt;=1 and t.a&lt;5，该语句2会从快照中获取数据，不会堵塞。请问这种场景，语句2会对1-5行的数据加S锁吗？","like_count":0},{"had_liked":false,"id":165329,"user_name":"客舟听雨来coding","can_delete":false,"product_type":"c1","uid":1026219,"ip_address":"","ucode":"753F4B779CC416","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/ab/5d25cd32.jpg","comment_is_top":false,"comment_ctime":1577200983,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1577200983","product_id":100020801,"comment_content":"我觉得方案2会好，方案1在一次执行中锁住太多行，会影响其它业务。方案3使用多了连接删除，本身就可能导致了死锁的发生","like_count":0},{"had_liked":false,"id":164509,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1577014138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577014138","product_id":100020801,"comment_content":"因为业务设计的时候一般不会把死锁当做一个严重错误，毕竟出现死锁了，就回滚，然后通过业务重试一般就没问题了，这是业务无损的。而关掉死锁检测意味着可能会出现大量的超时，这是业务有损的。<br><br>为何关掉死锁出现大量超时就是业务有损的？超时不能回滚么？捕获到超时异常再回滚不行么？","like_count":0},{"had_liked":false,"id":161976,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1576420548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576420548","product_id":100020801,"comment_content":"最后的这个方案就有点像分流的思想，就像不同的请求线程经过一个哈希函数，然后计算出一个值，然后跟新行，","like_count":0},{"had_liked":false,"id":160015,"user_name":"wxy","can_delete":false,"product_type":"c1","uid":1115361,"ip_address":"","ucode":"CE06B55A1AAB16","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/e1/1da8d82c.jpg","comment_is_top":false,"comment_ctime":1575857900,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1575857900","product_id":100020801,"comment_content":"您好，看到两阶段提交这个地方，我有一个疑惑。<br>在我的理解当中，MVCC是Multi Version Concurrency Control，通过两个隐含的字段来为行数据的并发修改提供支持，那有了MVCC，为什么行级锁是在事务提交时才释放呀？","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369796,"discussion_content":"事务中执行的语句不一定是提交还是回滚，执行完就释放了锁，别的会话就可以对这个记录进行修改就乱了吧？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619159890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139783,"discussion_content":"行锁与MVCC有啥关系吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579317656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159670,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1575724705,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575724705","product_id":100020801,"comment_content":"所以业务并发方面，是不是引入消息队列来排队比较好 😄","like_count":0},{"had_liked":false,"id":159446,"user_name":"静待花开","can_delete":false,"product_type":"c1","uid":1710876,"ip_address":"","ucode":"662D398928A41F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL6sPHH8cK72obAWhOysyv6uaR1ia5vBbUt0Mw6ZgM5l8ZPIo9bOfVzF04qxXHoqiaAqZy68Py234vw/132","comment_is_top":false,"comment_ctime":1575625529,"is_pvip":false,"replies":[{"id":"60974","content":"你理解是对的，我也没有笔误😆<br><br>对于“每个新来的被堵住的线程”，就是O(n)","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1575687417,"ip_address":"","comment_id":159446,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575625529","product_id":100020801,"comment_content":"死锁检测的时候，1000个线程并发访问的时候，是不是1个线程要向其他 也就1*999，复杂度是不是应该是O(n^2)?<br>是不是我理解错了，还是老师笔误了，因为后面老师说的是100万的量级","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477063,"discussion_content":"你理解是对的，我也没有笔误😆\n\n对于“每个新来的被堵住的线程”，就是O(n)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575687417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159269,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1575593596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575593596","product_id":100020801,"comment_content":"我会选第二种，在一个连接中循环执行 20 次 delete from T limit 500;<br><br>理由是，相比第三种节约连接资源。<br>相比第一种，写锁占用时间分成多段短时间了，并且锁的行比较少。对其它线程的阻塞影响最小。","like_count":0},{"had_liked":false,"id":158840,"user_name":"凡凡是谁爹","can_delete":false,"product_type":"c1","uid":1762093,"ip_address":"","ucode":"FC902F6A76B7CC","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e3/2d/0f8ee254.jpg","comment_is_top":false,"comment_ctime":1575462499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575462499","product_id":100020801,"comment_content":"老师，我有点不太理解你对上一道题的答案。有好几个一问，如下：<br>1  过程②的时候到达是说②执行过程中吗？<br>2 如果说②③之间到达，因为MDL冲突，导致获取不到锁，所以主从同步延迟，那为什么④执行前到达就可以获取到更新后的结果呢？MDL读锁如你所说不是④才释放吗？还有，他不是同步的快照吗？③执行完已经过去到视图切片了吧，为啥还能备份到更新后的表结构？<br>3 ④之后才释放MDL，④之后拿到DDL之前的结构是因为读的视图？是快照读？如果不是快照读那select ＊不就多了一个字段了。如果是快照读，那④之前咋就不是读取到快照的表结构？（此处与问题2关联）","like_count":0},{"had_liked":false,"id":157786,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1575259106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575259106","product_id":100020801,"comment_content":"请问老师，以下有点小疑惑，<br>下面的时刻，不是还没访问到表吗。如何解释MDL 读锁被占用呢<br>如果在“时刻 2”和“时刻 3”之间到达，mysqldump 占着 t1 的 MDL 读锁，binlog 被阻塞；","like_count":0},{"had_liked":false,"id":157778,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1575258195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575258195","product_id":100020801,"comment_content":"选择第二种，通过老师的讲解得出。","like_count":0},{"had_liked":false,"id":157307,"user_name":"随风","can_delete":false,"product_type":"c1","uid":1437618,"ip_address":"","ucode":"7D243B6946E08D","user_header":"https://static001.geekbang.org/account/avatar/00/15/ef/b2/5064e98a.jpg","comment_is_top":false,"comment_ctime":1575105867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575105867","product_id":100020801,"comment_content":"最后那个 “ 通过将一行改成逻辑上的多行来减少锁冲突。还是以影院账户为例，可以考虑放在多条记录上，比如 10 个记录，影院的账户总额等于这 10 个记录的值的总和” 例子不太理解，还望老师详解下？","like_count":0},{"had_liked":false,"id":153905,"user_name":"Simple life","can_delete":false,"product_type":"c1","uid":1571460,"ip_address":"","ucode":"1902D7F72FB43F","user_header":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","comment_is_top":false,"comment_ctime":1574328369,"is_pvip":false,"replies":[{"id":"59135","content":"这样并发性能不好 ：）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1574331156,"ip_address":"","comment_id":153905,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574328369","product_id":100020801,"comment_content":"mysql不会先分析本次事务所需要的锁，一次性获取吗？这样会避免死锁","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475316,"discussion_content":"这样并发性能不好 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574331156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1571460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","nickname":"Simple life","note":"","ucode":"1902D7F72FB43F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55062,"discussion_content":"感谢老师回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574336580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152624,"user_name":"许山山","can_delete":false,"product_type":"c1","uid":1241643,"ip_address":"","ucode":"2A5168DEB58F19","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/2b/7d9751bb.jpg","comment_is_top":false,"comment_ctime":1574052512,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574052512","product_id":100020801,"comment_content":"“每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是 O(n) 的操作。假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作就是 100 万这个量级的。”<br><br>这里复杂度是不是写错了？O(N^2)的时间复杂度？","like_count":0},{"had_liked":false,"id":151671,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1573778190,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573778190","product_id":100020801,"comment_content":"在中间层使用DB连接池也是一种办法吧","like_count":0},{"had_liked":false,"id":147107,"user_name":"Geek_55a272","can_delete":false,"product_type":"c1","uid":1674602,"ip_address":"","ucode":"7B12A9B322B3BF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJPHfGiaByESiaHPWbfQicjgap3unxDsxlG6JuUCNvEFJNLibNjeX4CQYNtsvXBXqTpBERUIPyiagGBXbg/132","comment_is_top":false,"comment_ctime":1572795511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572795511","product_id":100020801,"comment_content":"我选择第二种，<br>第一种是典型的长事务，长事务会导致占用锁的时间过长，导致后面事务长时间阻塞引发重试机制，容易把服务拖垮。<br>第二种是典型的分片思想。<br>第三种是分片+并发的思想，但是可能会锁住同一条数据。","like_count":0},{"had_liked":false,"id":142840,"user_name":"Fan()","can_delete":false,"product_type":"c1","uid":1069127,"ip_address":"","ucode":"FED79EC7D78E91","user_header":"https://static001.geekbang.org/account/avatar/00/10/50/47/46da4585.jpg","comment_is_top":false,"comment_ctime":1571557015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571557015","product_id":100020801,"comment_content":"Q4与执行之前到达没影响吗?<br><br>会话A<br>root@localhost 15:12:59 [fandb]&gt; FLUSH &#47;*!40101 LOCAL *&#47; TABLES ;<br>Query OK, 0 rows affected (0.00 sec)<br><br>root@localhost 15:13:06 [fandb]&gt; FLUSH TABLES WITH READ LOCK;<br>Query OK, 0 rows affected (0.00 sec)<br><br>root@localhost 15:13:06 [fandb]&gt; SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;<br>Query OK, 0 rows affected (0.00 sec)<br><br>root@localhost 15:13:06 [fandb]&gt; START TRANSACTION &#47;*!40100 WITH CONSISTENT SNAPSHOT *&#47; ;<br>UNLOCK TABLES ;Query OK, 0 rows affected (0.00 sec)<br><br>root@localhost 15:13:06 [fandb]&gt; UNLOCK TABLES ;<br>Query OK, 0 rows affected (0.00 sec)<br><br>会话B<br>root@localhost 15:13:11 [fandb]&gt; alter table t1 drop papa ;<br>Query OK, 0 rows affected (0.04 sec)<br>Records: 0 Duplicates: 0 Warnings: 0<br><br>会话A<br>root@localhost 15:13:16 [fandb]&gt; show create table t1\\G<br>*************************** 1. row ***************************<br>       Table: t1<br>Create Table: CREATE TABLE `t1` (<br>  `id` int(11) NOT NULL AUTO_INCREMENT,<br>  `sname` varchar(10) DEFAULT NULL,<br>  PRIMARY KEY (`id`)<br>) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4<br>1 row in set (0.00 sec)<br><br>root@localhost 15:13:19 [fandb]&gt; select * from t1;<br>ERROR 1412 (HY000): Table definition has changed, please retry transaction","like_count":0},{"had_liked":false,"id":142590,"user_name":"涅槃666","can_delete":false,"product_type":"c1","uid":1003405,"ip_address":"","ucode":"8E37DF3861AF81","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJtyy6XYfNM6kZ0c1FUu6KL0hQLlwwAko7RwCz16j4PnnGtnOJVvDKO2iajdJ3Jer8verf1AiaAyzHA/132","comment_is_top":false,"comment_ctime":1571407797,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1571407797","product_id":100020801,"comment_content":"老师你好，请问两个问题:<br>1 .事务和锁的关系，有事务才有锁么，没有事务单独一条更新操作会有锁么<br>2.update 更新操作一定要加begin commit吗，只有事务才需要加这个吧","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369799,"discussion_content":"update操作要不要加begin commit要看表的存储引擎支不支持事务，不支持事务加了也没用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619160214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139786,"discussion_content":"1、数据库是不存在不加事务的概念的，你不显示的启动事务，那就会按照单语句事务处理。\n所以像一致性读就不会加锁，但是也有事务的。\n2、update单条语句，要加锁，但是没必要做死锁检测了。如果是多条update操作，为了保证原子性，还是要加begin commit。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579317942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369798,"discussion_content":"跟存储引擎相关，MyISAM不支持事务的，但是更新还是会加表锁的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619160130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":139786,"ip_address":""},"score":369798,"extra":""}]}]},{"had_liked":false,"id":139710,"user_name":"Geek_ab3b24","can_delete":false,"product_type":"c1","uid":1130067,"ip_address":"","ucode":"E8D1AE18FECD2F","user_header":"","comment_is_top":false,"comment_ctime":1570709987,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570709987","product_id":100020801,"comment_content":"在 InnoDB 事务中，行锁是在需要的时候才加上的，但并不<br><br>老师怎么理解“行锁是在需要的时候才加上的”，是不是可以理解 并不是事务开启时候直接就加上的，而是在执行到该条SQL时，才加上的？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139788,"discussion_content":"一切执行都是事务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579318000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139053,"user_name":"ipromiseu","can_delete":false,"product_type":"c1","uid":1159317,"ip_address":"","ucode":"775E2CC0E7CA69","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbUHD8KH3mYz39QuHj5BXB06VqCus5WR4oHfNuSYdPVLno3Tq61yhMiaugxpMicKibDFQ4KwX7icoDWQ/132","comment_is_top":false,"comment_ctime":1570536241,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570536241","product_id":100020801,"comment_content":"两阶段锁协议没懂，什么叫需要的时候加锁。","like_count":0,"discussions":[{"author":{"id":1688939,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAia6hRmnSZyuLtKvxxXvg9vgUfwSReCOaHKGLKuRcNX2BCNdmCFSlXyBZvpSXia5LXKjAZKeBXKuw/132","nickname":"Geek_guan","note":"","ucode":"592603EB5F042D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278785,"discussion_content":"两阶段锁是指，加锁的阶段只加锁不解锁，解锁的阶段只解锁不加锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591234157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136967,"user_name":"大湿兄","can_delete":false,"product_type":"c1","uid":1660151,"ip_address":"","ucode":"587EBBBED90182","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL17rDiannrcyaUB5X6haqLic1183mfwyunJicRO8IYV9U8MaYiaZp8jRnW5kLQIqRmwTaPGIEVQZL5Uw/132","comment_is_top":false,"comment_ctime":1569568511,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569568511","product_id":100020801,"comment_content":"老师：有这个场景，sessionA执行：update t set num=1 where name=&#39;aa&#39;; name上没有索引。是不是要先执行全表扫描，这样是不是要加MDL读锁？此时sessionB执行：update t set num=2 where name=&#39;bb&#39;;也要加MDL读锁，当然可以加上，那么要是sessionB先找到name=&#39;bb&#39;这一行，那么sessionB还会加上MDL写锁然后等待吗？还是说就直接加上行锁了","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369802,"discussion_content":"DML操作加的只有MDL读锁，不会加MDL写锁。再就是sessionB应该拿不到锁，不然不就会出现死锁了呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619160581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134248,"user_name":"唐诗三百首","can_delete":false,"product_type":"c1","uid":1180927,"ip_address":"","ucode":"3D11D7DC8A3035","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/ff/325d77a0.jpg","comment_is_top":false,"comment_ctime":1568783015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568783015","product_id":100020801,"comment_content":"老师你的画图工具是啥挺好看的","like_count":0},{"had_liked":false,"id":134229,"user_name":"唐诗三百首","can_delete":false,"product_type":"c1","uid":1180927,"ip_address":"","ucode":"3D11D7DC8A3035","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/ff/325d77a0.jpg","comment_is_top":false,"comment_ctime":1568778536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568778536","product_id":100020801,"comment_content":"老师的课非常受用有深度有广度，很多都是落地的经验，用心做的东西用心看就体会的到，希望可以分享分库分表和分布式数据库方面的知识，持续购买","like_count":0},{"had_liked":false,"id":133342,"user_name":"bear2","can_delete":false,"product_type":"c1","uid":1035608,"ip_address":"","ucode":"8108420601A548","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/58/79fb821f.jpg","comment_is_top":false,"comment_ctime":1568521666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568521666","product_id":100020801,"comment_content":"从死锁的破坏角度理解MySQL解决死锁的策略：<br>死锁产生的条件有：<br>1.互斥，共享资源只能被一个线程占用；<br>2.占用且等待：占用资源a，在等待时不会释放；3.不可抢占：其他线程不能抢占该线程占有的资源；<br>4.循环依赖：线程t1等待t2的资源，t2等待t1的资源<br><br>破坏死锁也从四个角度分析，互斥一般不能破坏，那么从另外三个角度：<br>1.破坏占有且等待：（1）一次性申请所有资源；（2）设置时间，超时则释放资源（文章中说到的超时时间）<br>2.破坏不可抢占：死锁检测，若发生死锁则回滚导致死锁的事务，释放锁资源<br>3.循环等待：按序申请资源，不同线程按固定的顺序申请资源<br><br>前两种是MySQL提供的方法，后面是自己在实现时可以采用的策略。<br>（个人理解，欢迎指正）","like_count":0},{"had_liked":false,"id":133341,"user_name":"bear2","can_delete":false,"product_type":"c1","uid":1035608,"ip_address":"","ucode":"8108420601A548","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/58/79fb821f.jpg","comment_is_top":false,"comment_ctime":1568521666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568521666","product_id":100020801,"comment_content":"从死锁的破坏角度理解MySQL解决死锁的策略：<br>死锁产生的条件有：<br>1.互斥，共享资源只能被一个线程占用；<br>2.占用且等待：占用资源a，在等待时不会释放；3.不可抢占：其他线程不能抢占该线程占有的资源；<br>4.循环依赖：线程t1等待t2的资源，t2等待t1的资源<br><br>破坏死锁也从四个角度分析，互斥一般不能破坏，那么从另外三个角度：<br>1.破坏占有且等待：（1）一次性申请所有资源；（2）设置时间，超时则释放资源（文章中说到的超时时间）<br>2.破坏不可抢占：死锁检测，若发生死锁则回滚导致死锁的事务，释放锁资源<br>3.循环等待：按序申请资源，不同线程按固定的顺序申请资源<br><br>前两种是MySQL提供的方法，后面是自己在实现时可以采用的策略。<br>（个人理解，欢迎指正）","like_count":0},{"had_liked":false,"id":132027,"user_name":"百里","can_delete":false,"product_type":"c1","uid":1212873,"ip_address":"","ucode":"2CE96129AA7F78","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/c9/9194612b.jpg","comment_is_top":false,"comment_ctime":1568007566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568007566","product_id":100020801,"comment_content":"如何减少行锁对性能的影响<br><br>两阶段锁<br><br>InnoDB事务中, 行锁在需要时才加上的, 但并不是不需要立即释放,而是等待事务结束才释放.这叫两阶段锁协议.<br>如果我需要锁多行, 要把最可能造成锁冲突,最可能影响并发的锁尽量往后放.<br>死锁与死锁检测<br><br>在并发系统中不同线程出现循环资源依赖,涉及的线程都在等待别的线程释放资源时,就会导致这几个线程都进入无限等待的状态.称为死锁.<br>例 事务 A 在等待事务 B 释放 id=2 的行锁，而B 等待 A 释放 ID=1<br>如何解决死锁<br><br>设置 innodb_lock_wait_timeout 事务超时 默认50s<br># 查询全局等待事务锁超时时间<br>SHOW GLOBAL VARIABLES LIKE &#39;innodb_lock_wait_timeout&#39;;<br><br># 设置全局等待事务锁超时时间<br>SET  GLOBAL innodb_lock_wait_timeout=100;<br><br># 查询当前会话等待事务锁超时时间<br>SHOW VARIABLES LIKE &#39;innodb_lock_wait_timeout&#39;;<br>主动死锁检测, 开启 innodb_deadlock_detect 默认是on, v5.7是默认打开的.<br>热点行更新导致的性能问题呢?<br>修改源码, 使用中间件实现,难度大<br>将热点更新行数据拆分成逻辑上的多行来减少锁冲突.缺点; 业务复杂业提高.<br>以下哪种最好<br><br>第一种: delete from t limit 10000<br>第二种: 一个连接循环执行20次 delete from T limit 500;<br>第三种: 在20个连接中同时执行delete from T limit 500;<br><br>第一种: 锁的行数太多导致持有锁时间更长.<br>第二种: 串行化执行, 每次执行少量的,减少行锁冲突.<br>第三种: 并行执行, 多个事务对同一行产生锁竞争, 增加死锁的概率, 消耗CPU资源.","like_count":0},{"had_liked":false,"id":130985,"user_name":"shoe","can_delete":false,"product_type":"c1","uid":1543608,"ip_address":"","ucode":"297117CE5C80C1","user_header":"https://static001.geekbang.org/account/avatar/00/17/8d/b8/b245d22c.jpg","comment_is_top":false,"comment_ctime":1567589784,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567589784","product_id":100020801,"comment_content":"不知道老师能不能看到了，最近修改一个事务频繁的表（150万数据）的表结构，比如修改字段长度，总是在等待获取mdl锁：<br>是不是下面这种场景就无法更改字段了。<br><br>\t\t      事务1                                  事务2<br>time1\tselect status from t1;\t<br>time2\t\t                                    alter table t1.....；<br>time3\tupdate t1 set status =&#39;xx&#39;;\t<br>","like_count":0},{"had_liked":false,"id":130614,"user_name":"Geek_b74670","can_delete":false,"product_type":"c1","uid":1649282,"ip_address":"","ucode":"083AF837FB0112","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGAV2NgUo0VVNjiagIJCZmPHvogtAJcUib6icLCbR4vcvfziashHZjpZ0FUxSdawFnHGUSmIaePvDaWQ/132","comment_is_top":false,"comment_ctime":1567494162,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1567494162","product_id":100020801,"comment_content":"每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是 O(n) 的操作。假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作就是 100 万这个量级的。  死锁检测的时间复杂度是不是写错了，应该为O(n^2)","like_count":0},{"had_liked":false,"id":126389,"user_name":"MrVito","can_delete":false,"product_type":"c1","uid":1252169,"ip_address":"","ucode":"716FF6F8871706","user_header":"https://static001.geekbang.org/account/avatar/00/13/1b/49/ddefc656.jpg","comment_is_top":false,"comment_ctime":1566378905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566378905","product_id":100020801,"comment_content":"第一种方案 长事务，在事务隔离的一课中提到，长事务容易造成资源占用过大，锁等待时间贼长<br>第二种方案 一个链接 也就是长链接执行20次，这是比较好的方案，因为长链接减少链接带来的开销，并且，执行20次，每次执行500 执行的时候，锁等待时间也不长<br>第三种方案 容易造成死锁，等待！而且等待的时间长，20个链接，要是都是短链接会带来很大的链接开销","like_count":0},{"had_liked":false,"id":125233,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1566125852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566125852","product_id":100020801,"comment_content":"行级锁，1 行锁是说对某一行进行加锁，是数据库引擎自己实现的，innodb支持行锁，myisam不支持行锁，只支持表锁，同一时刻，只能有一条数据更新，极大的影响并发，支持行锁是innodb取代myisam的原因之一。2 行锁的2阶段协议 InnoDB事务行锁是在需要的时候才加，在事务提交的时候才释放，知道这个协议，可以在事务里面调整sql的执行顺序，让并发高的操作，放在最后执行。3 死锁和死锁检测 3.1线程A等待线程B的资源释放时，线程B在等待线程A的资源释放，就出现了死锁。3.2出现死锁，有2种策略，一种是继续等待直到超时，第二种是发起死锁检测，发现死锁后，主动回滚死锁链条中的某一个事务，让其他事务可以执行，innodb_deadlock_detect 默认值是on，每当一个事务被锁的时候，都要看他依赖的线程有没有被别人锁住，每个新来的线程，都要然判断是不是自己的加入，导致发生了死锁，如果有1000个线程并发操作一行，这个是100万量级的，最终消耗大量的CPU资源，可以考虑将数据库更新同一行的请求排队，这样来减少并发和死锁检测。","like_count":0},{"had_liked":false,"id":124138,"user_name":"alioo","can_delete":false,"product_type":"c1","uid":1022507,"ip_address":"","ucode":"F36A38C1F5FFAB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqOpANMwDibLmj5IGJh6dTw300sZ1BHM5sG3sZv1A1rvCHOiblPD3jgFOiaMVVujtctWnQbVFoNPpRgw/132","comment_is_top":false,"comment_ctime":1565830104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565830104","product_id":100020801,"comment_content":"不知道老师还有机会看到么，针对上一期的问题，执行备份操作时（假若是时刻T）根据一致性的原则，后续所有表的备份都是这个时间点的状态。但是你在上面进行步骤拆解时，如果发生在show create table之前完成ddl操作是可以拿到最新表结构及数据的，那这个样子备份的表就不是时刻T看到的了","like_count":0},{"had_liked":false,"id":123721,"user_name":"小白","can_delete":false,"product_type":"c1","uid":1577051,"ip_address":"","ucode":"6B6C0A0AD0F742","user_header":"","comment_is_top":false,"comment_ctime":1565747104,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565747104","product_id":100020801,"comment_content":"老师我有个疑问，为什么数据库要采用两阶段锁，是基于什么考虑的","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576804,"discussion_content":"我觉得是“尽量晚的获取锁，尽量早的释放锁”以提高并发度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655792762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123014,"user_name":"大雄","can_delete":false,"product_type":"c1","uid":1371593,"ip_address":"","ucode":"4AF29A183AB495","user_header":"https://static001.geekbang.org/account/avatar/00/14/ed/c9/9abdd4c6.jpg","comment_is_top":false,"comment_ctime":1565591316,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565591316","product_id":100020801,"comment_content":"老师您好。之前一直以为利用redis的incr命令的原子性就可以做到防止超卖，但是看到您在评论区提到还需要许多机制来保证，所以十分困惑，能否具体说一下是哪些机制呢？","like_count":0,"discussions":[{"author":{"id":2123257,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhqDU299SMLoEGMpJYFXtuwiadG0Friaia4fyu2ZJBokpTsTIpibouicaz9JItEYS1EAhLCqB0S3HWA3A/132","nickname":"Geek_1bd897","note":"","ucode":"5EE4879CA5E35D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391824,"discussion_content":"同问啊？一直使用incr命令啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630649155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120432,"user_name":"Geek_cf29f0","can_delete":false,"product_type":"c1","uid":1337800,"ip_address":"","ucode":"F635968AE2656C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bWpFdAQwTzBg70ib6QTQomfQV3Ak1CFQPXun20w2Kz3PCLtsV75nNrqBuDEvehtlCoTkyT3icNWnvO7nPMc1RFfg/132","comment_is_top":false,"comment_ctime":1564891612,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564891612","product_id":100020801,"comment_content":"第一种出现死锁的概率更高，cpu消耗更大，其他线程锁等待几率更高、时间更长，不建议；<br><br>第二种单线程处理，执行时间较长，锁冲突的概率跟第三种差不多，锁冲突、死锁、cpu消耗概率均没有第一种高<br><br>第三种多线程处理，执行时间较短，锁冲突、死锁、cpu消耗概率均没有第一种高——建议使用","like_count":0},{"had_liked":false,"id":119632,"user_name":"tuyu","can_delete":false,"product_type":"c1","uid":1448863,"ip_address":"","ucode":"B235325B541408","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BIRpwViaN51yynIeFonD7QRlwDCVtKibrG956NTxzEqibOZZVjhMMgibOPmd3VicfYxpknZsic1oJq8KicZvXkmmiajuQg/132","comment_is_top":false,"comment_ctime":1564641519,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564641519","product_id":100020801,"comment_content":"老师, 每个新来被堵住的线程都判断自己加入是否导致死锁, 1000个并发,如果这个过程时O(n),应该只要检测1000次就好了, 这个是不是打字错了, 这个过程应该是O(n^2)","like_count":0},{"had_liked":false,"id":119122,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1564527036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564527036","product_id":100020801,"comment_content":"如果在Q4到达之前 老师说的没影响。  有个问题。假设 表t a 和b字段。  在q4之前我先dml把其中一行a的值进行update。 然后在ddl把a字段名称换成c字段。 这时备份是修改后的ddl 然而数据是更改之前的数据。后续 因字段找不到了会不会导致。新备份的无法同步dml修改的","like_count":0},{"had_liked":false,"id":118307,"user_name":"lzh","can_delete":false,"product_type":"c1","uid":1336951,"ip_address":"","ucode":"C3D83DF4230109","user_header":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","comment_is_top":false,"comment_ctime":1564318289,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1564318289","product_id":100020801,"comment_content":"请问老师，行锁在引擎层实现的，那表锁和全局锁是在Server层实现的吗？因为表锁和全局锁似乎和引擎无关...","like_count":0,"discussions":[{"author":{"id":1308783,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/6f/080973cf.jpg","nickname":"Edward","note":"","ucode":"10FAADF92D05F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6699,"discussion_content":"你的理解是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567059339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1308783,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f8/6f/080973cf.jpg","nickname":"Edward","note":"","ucode":"10FAADF92D05F4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7682,"discussion_content":"🙄🙄没有资料给予支持总是有点缺乏安全感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567610865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":6699,"ip_address":""},"score":7682,"extra":""}]}]},{"had_liked":false,"id":118032,"user_name":"Northern","can_delete":false,"product_type":"c1","uid":1060908,"ip_address":"","ucode":"6B8DB4CF385029","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/2c/333d7080.jpg","comment_is_top":false,"comment_ctime":1564214912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564214912","product_id":100020801,"comment_content":"如果老师将整个45讲串联成一个思维导图就在好不过了","like_count":0},{"had_liked":false,"id":117028,"user_name":"洲","can_delete":false,"product_type":"c1","uid":1157290,"ip_address":"","ucode":"66DC1EEF45822C","user_header":"https://static001.geekbang.org/account/avatar/00/11/a8/aa/c6fffb80.jpg","comment_is_top":false,"comment_ctime":1563956848,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563956848","product_id":100020801,"comment_content":"关于“当备库用–single-transaction 做逻辑备份，如果从主库的 bin log 传来一个 DDL语句会怎么样”这个问题， 我开了2个Mysql客户端，不知道为什么在Q5之前(不管时刻1还是时刻2)在另外一个客户端执行 DDL语句，就是给t1增加一列，最后执行到Q5, 就报错了Table definition has changed,跟您的答案第一项的结果不太一致，请问我这个问题出在哪里呢？ 谢谢","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369803,"discussion_content":"我执行的效果跟你一样，除非mysqldump的执行跟手动执行不一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619160697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116415,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1563847860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563847860","product_id":100020801,"comment_content":"问题回答：我选择第二种，循环删，这样，每次加写锁的时间短，从而减小锁并发等待","like_count":0},{"had_liked":false,"id":114617,"user_name":"Boh","can_delete":false,"product_type":"c1","uid":1172201,"ip_address":"","ucode":"0CF4CAC992FB4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/e9/d309c895.jpg","comment_is_top":false,"comment_ctime":1563351415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563351415","product_id":100020801,"comment_content":"看到这个课后题，有个问题想请教下老师，数据库中有一张表，每天都会delete，只保留最近几个月的，现在发现虽然记录删除了，但是表总大小还是基本没减少，Data size、Index size是减小了，但是Free data size却一直增大，现在累计都有几十G了。后面发现是因为删除后产生碎片空间，有什么好的方案可以处理这种情况吗。","like_count":0},{"had_liked":false,"id":114446,"user_name":"张翀","can_delete":false,"product_type":"c1","uid":1241064,"ip_address":"","ucode":"835A01424FDD5E","user_header":"https://static001.geekbang.org/account/avatar/00/12/ef/e8/076a6f59.jpg","comment_is_top":false,"comment_ctime":1563319284,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1563319284","product_id":100020801,"comment_content":"如果innodb已经有了死锁检测，那就不会有死锁问题了啊？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139791,"discussion_content":"是的，但是有额外CPU负担，吃CPU资源。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579318151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113132,"user_name":"憨皮苏","can_delete":false,"product_type":"c1","uid":1412429,"ip_address":"","ucode":"D0B4B7660DA766","user_header":"https://static001.geekbang.org/account/avatar/00/15/8d/4d/992070e8.jpg","comment_is_top":false,"comment_ctime":1562901653,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562901653","product_id":100020801,"comment_content":"选择第二种<br>第二种方法和第一种方法相比较而言，降低了锁定的范围，且删除的数据量降低了20倍，因此也降低了锁的持有时间<br>第三种方法和第一种方法相比较而言，锁定的范围是一样的，但第三种方法提高了可能对同一行数据占用的并发度，可能会造成锁等待","like_count":0},{"had_liked":false,"id":112943,"user_name":"遵守丶我给的约定","can_delete":false,"product_type":"c1","uid":1395632,"ip_address":"","ucode":"77000F4AE2D6C6","user_header":"https://static001.geekbang.org/account/avatar/00/15/4b/b0/8234cf62.jpg","comment_is_top":false,"comment_ctime":1562852717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562852717","product_id":100020801,"comment_content":"老师，你好！你的课程里都是begin-commit代表一次事务，但是在实际使用中比如web应用使用mybatis操作mysql数据库，都是直接在mybatis写sql语句，并不会写begin-commit，那怎样才会算一次事务，是一个sql语句代表一次事物吗？","like_count":0},{"had_liked":false,"id":109708,"user_name":"残天噬魂","can_delete":false,"product_type":"c1","uid":1506609,"ip_address":"","ucode":"A2AD8303A4518D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/q2HwchogzNiavKhIB4GfAxH6B88NhSoC7B7keVEUqiaP6JPokDUNJLYehocOyqYqrhA3iaxywyRXLYkYJjDUQESZw/132","comment_is_top":false,"comment_ctime":1562080524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562080524","product_id":100020801,"comment_content":"第二种比较好？如果用第一种的话，相当于是串行执行，而且每次执行还需要建立连接，速度最慢，而第三种，多个连接如果是行锁的话，每个连接删除一次都会加锁，也会降低速度","like_count":0},{"had_liked":false,"id":108438,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1561773197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561773197","product_id":100020801,"comment_content":"我看评论说 innodb的行锁是用索引实现的，如果没有索引会锁住整张表。<br><br>我想问一下，这个时候不能用rowid来支持行锁吗？<br>求老师解惑一下。","like_count":0},{"had_liked":false,"id":108290,"user_name":"阿辉","can_delete":false,"product_type":"c1","uid":1266788,"ip_address":"","ucode":"A7EF42A10E2599","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/64/8f3d000a.jpg","comment_is_top":false,"comment_ctime":1561714013,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561714013","product_id":100020801,"comment_content":"Innodb行锁加在索引上面，万一索引有两份怎么办","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139792,"discussion_content":"估计随便挑一个吧。哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579318206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108231,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1561701993,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561701993","product_id":100020801,"comment_content":"1：锁在什么层级实现是出于什么考虑，为什么全局锁和表锁在Server层实现，而行锁在存储引擎层实现？<br><br>2：行锁的实现为什么使用两阶段锁协议(事务开始时加锁，事务提交时解锁)？行锁为什么不在不需要锁的时候释放？<br><br>3：死锁应该是个通用概念吧？死锁有四个必要条件(互斥，占有且等待，不可抢占，循环等待)破坏死锁的条件就是解决死锁的方法。<br><br>4：行锁是只要有事务操作行记录就会加锁嘛？如果能判断出只有一个事务操作就不加锁，当有大于一个事务个数的时候再加锁是否性能更好一些？<br><br>5：有没有列锁，只针对并发操作一个列的时候才加锁？如果没有是为什么？粒度过细了嘛？<br><br>6：先说感受，行锁感觉老师讲解的不够细致和全面，因为学完行锁之后有些关键性信息还是不太清楚，评论中的问题可以反应出来。如下是我根据评论中的信息整理的部分我认为较核心的观点(针对innoDB)。<br><br>6-1：行锁不会升级为表锁<br><br>6-2：行锁在多个事务操作同一行数据时加上的，对应的操作包括，增加、删除、修改，猜测多个事务读同一行应该不需要加行锁，不改变数据没必要加锁<br><br>6-3：行锁包括两种，一个是共享锁，另一个是排它锁，排它锁不需要显示声明<br><br>6-4：行锁是通过锁定B+树的索引实现的，所有的表都会有主键索引(如果没有创建，MySQL会默认加一个)<br><br>6-5：如果修改的列没有索引，MySQL会通过主键索引锁定所有的行，相当于是表锁的效果<br><br>6-6：如果修改的列有普通索引，MySQL会通过普通索引找到主键索引，然后锁定该主键索引，数据信息是存储在主键索引的叶子节点上的，如果通过锁定索引来加锁，不管直接还是间接都会在主键索引上锁定记录的<br>","like_count":0},{"had_liked":false,"id":108122,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1561684054,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561684054","product_id":100020801,"comment_content":"mysql 版本：5.6.31<br>show show VARIABLES like &#39;%deadlock%&#39;;<br>没有找见innodb_deadlock_detect 这个变量啊， 只看到了和deadlock有关的这个变量：<br>innodb_print_all_deadlocks：off<br>","like_count":0},{"had_liked":false,"id":108091,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1561681520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561681520","product_id":100020801,"comment_content":"你可以想象一下这个过程：每当一个事务被锁的时候，就要看看它所依赖的线程有没有被别人锁住，如此循环，最后判断是否出现了循环等待，也就是死锁。<br><br>这里好抽象啊","like_count":0},{"had_liked":false,"id":107993,"user_name":"克里斯","can_delete":false,"product_type":"c1","uid":1181844,"ip_address":"","ucode":"00B755C10AC1C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/94/2c22bd4e.jpg","comment_is_top":false,"comment_ctime":1561644905,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1561644905","product_id":100020801,"comment_content":"如果在“时刻 2”到达，则表结构被改过，Q5 执行的时候，报 Table definition has changed, please retry transaction，现象：mysqldump 终止；<br>问题1.查看表结构不加读锁，也不加写锁？<br>问题2.这里没加锁，但是表结构更改了，这里相当于主动通知事务？什么事务才会被通知呢？<br><br>行锁也分为读锁和写锁吧？貌似只有写写互斥？","like_count":0},{"had_liked":false,"id":103213,"user_name":"佑儿","can_delete":false,"product_type":"c1","uid":1226196,"ip_address":"","ucode":"0629888E7A5E16","user_header":"https://static001.geekbang.org/account/avatar/00/12/b5/d4/3bd5b77b.jpg","comment_is_top":false,"comment_ctime":1560396945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560396945","product_id":100020801,"comment_content":" 关于上一节的思考题的解答，有一个疑问，在时刻2到达，是指在执行show create table `t1`的同时执行从主库传过来的DDL吗？   如果是这样，那么MDL锁不就是失效了吗？<br>","like_count":0},{"had_liked":false,"id":98625,"user_name":"吃饭睡觉打酱油","can_delete":false,"product_type":"c1","uid":1071668,"ip_address":"","ucode":"95EC98C2B5045B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5a/34/4cbadca6.jpg","comment_is_top":false,"comment_ctime":1559043804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559043804","product_id":100020801,"comment_content":"老师，您好，我对1000个并发更新要进行100万次死锁检查还有疑惑，为什么一个线程的检查是1000次而不是999次？","like_count":0},{"had_liked":false,"id":96106,"user_name":"Corner","can_delete":false,"product_type":"c1","uid":1446316,"ip_address":"","ucode":"7862D593172536","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/ac/9cc5e692.jpg","comment_is_top":false,"comment_ctime":1558331948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558331948","product_id":100020801,"comment_content":"关于InnoDB的锁等待应该是根据请求先后到达进行了排队吗？如果默认已经有了排队的逻辑，那为什么又要在请求到达是就进行死锁检测，而不是真正出队要执行之前再进行检测呢，这样会不会没有死锁检测的性能问题了？","like_count":0},{"had_liked":false,"id":96045,"user_name":"narsil的梦","can_delete":false,"product_type":"c1","uid":1185187,"ip_address":"","ucode":"67110C673BD951","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/a3/e67d6039.jpg","comment_is_top":false,"comment_ctime":1558316025,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1558316025","product_id":100020801,"comment_content":"两阶段锁为什么会叫两阶段锁？我没明白哪两个阶段，是加锁和解锁分别有不同的事务逻辑吗？","like_count":0,"discussions":[{"author":{"id":1688939,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAia6hRmnSZyuLtKvxxXvg9vgUfwSReCOaHKGLKuRcNX2BCNdmCFSlXyBZvpSXia5LXKjAZKeBXKuw/132","nickname":"Geek_guan","note":"","ucode":"592603EB5F042D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278811,"discussion_content":"两阶段锁协议就是：加锁的时候只加锁不解锁，解锁的时候只解锁不加锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591237041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139793,"discussion_content":"在 InnoDB 事务中，行锁是在需要的时候才加上的，但并不是不需要了就立刻释放，而是要等到事务结束时才释放。这个就是两阶段锁协议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579318250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96042,"user_name":"narsil的梦","can_delete":false,"product_type":"c1","uid":1185187,"ip_address":"","ucode":"67110C673BD951","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/a3/e67d6039.jpg","comment_is_top":false,"comment_ctime":1558315860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558315860","product_id":100020801,"comment_content":"请问为什么将电影院余额放在10行记录里就能降低死锁检测的时间？我感觉这样只能减少行操作的并发冲突，但是行数增加的话就会增加死锁检测时间吧？","like_count":0},{"had_liked":false,"id":95904,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1558252307,"is_pvip":false,"replies":[{"id":"34897","content":"不对<br><br>你可以验证下<br>select * from t limit 1 lock in share mode, 看怎么锁的😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558708858,"ip_address":"","comment_id":95904,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1558252307","product_id":100020801,"comment_content":"有些资料看到的：InnoDB行锁是通过给索引上的索引项加锁来实现的，只有通过索引条件检索数据，InnoDB才使用行级锁，否则，InnoDB将使用表锁。老师，这个是正确的吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450635,"discussion_content":"不对\n\n你可以验证下\nselect * from t limit 1 lock in share mode, 看怎么锁的😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558708858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1315049,"avatar":"https://static001.geekbang.org/account/avatar/00/14/10/e9/f5e55ccf.jpg","nickname":"小鬼","note":"","ucode":"52EE8A18B90C6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571447,"discussion_content":"其实老师这个例子也可以理解成使用主键索引进行查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652233324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95294,"user_name":"do it","can_delete":false,"product_type":"c1","uid":1309911,"ip_address":"","ucode":"E0753912E8F2AF","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d7/b102034a.jpg","comment_is_top":false,"comment_ctime":1558012275,"is_pvip":false,"replies":[{"id":"34302","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558260620,"ip_address":"","comment_id":95294,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558012275","product_id":100020801,"comment_content":"个人小结<br>MYSQL行锁<br>MYSQL行锁由各个引擎层实现。<br>概念:行锁就是针对数据表中行记录的锁。<br>什么是两阶段锁？<br>在INNODB事务中，行锁是在需要的时候加上的，但并不是不需要了就立刻释放，而是要等到事务结束才释放。<br>如何降低两阶段锁影响？<br>     如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并并发度的锁尽量往后放。<br>什么是死锁？<br>       当并发系统中不同线程出现循环资源依赖，涉及的线程都在等待别的线程释放资源时，就会导致这几个线程都进入无限等待的现状。<br>死锁检测策略？<br>    策略1: 直接进去等待，直到超时。这个超时时间可以通过参数innodb_lock_wait_timeout来设置。默认值是50s<br>     策略2:发起死锁检测，发现死锁后，主动回滚死锁链条中的某一事务，让其他得以继续执行。将参数innodb_deadlock_detech设置为on,表示开启这个逻辑。<br>怎么解决死锁检测热点行更新导致的性能问题？<br>方法一:如果能确保这个业务一定不会出现死锁，可以临时把死锁检测关掉。(一般不这么做)<br>方法二:控制并发度。并发度要做在数据库服务端。<br>方法三:将一行修改成逻辑上的多行来实现。以影院账户为例，可以考虑放在多条记录上，比如10个记录，影院的账户总额等于这10个记录的值的总和。这样每次给影院账户加金额的时候，随机选其中一天记录来加。这样每次冲突的概率变成原来的1&#47;10，可以减少锁等待时间，也就减少了死锁检测的CPU消耗。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450404,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558260620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95255,"user_name":"笙南","can_delete":false,"product_type":"c1","uid":1218163,"ip_address":"","ucode":"39F2B7F155EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/12/96/73/b5158f6c.jpg","comment_is_top":false,"comment_ctime":1557998793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557998793","product_id":100020801,"comment_content":"每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是 O(n) 的操作。假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作就是 100 万这个量级的<br><br>老师，第 1 个线程来的时候检测数是 0；第 2 个线程来的时候，需要检测【线程1】有没有被别人锁住；第 3 个线程来的时候，需要检测【线程1，线程2】有没有被其他线程锁住，以此类推，第 n 个线程来的时候，检测数是 n - 1 个，所以总的检测数是 0 + 1 + 2 + 3 + 。。。+ (n - 1) = n(n -1)&#47;2，所以时间复杂度应该是 O(n²)，n的平方吧？请问老师，我理解的有问题吗？还请老师指导～～<br>","like_count":0},{"had_liked":false,"id":92317,"user_name":"侯恩训","can_delete":false,"product_type":"c1","uid":1162376,"ip_address":"","ucode":"F4DC47EECA0F00","user_header":"https://static001.geekbang.org/account/avatar/00/11/bc/88/fbb6022e.jpg","comment_is_top":false,"comment_ctime":1557231534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557231534","product_id":100020801,"comment_content":"思考题：<br>选择第二种。第一种一次删除太多数据，容易造成线上业务锁等待活着死锁。<br>第三种，多个线程直接就会出现锁等待。","like_count":0},{"had_liked":false,"id":91821,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1557114332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557114332","product_id":100020801,"comment_content":"DAY7，打卡","like_count":0},{"had_liked":false,"id":91327,"user_name":"浩","can_delete":false,"product_type":"c1","uid":1394346,"ip_address":"","ucode":"BD7FE280C83152","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKoGnC6068nQia1bOiaPxMRmkOQsaDsw5ib2drXic4gKOLzIFyZnnFm4uJ6KniboKG1nQD3J15y4d3QxLA/132","comment_is_top":false,"comment_ctime":1556980766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556980766","product_id":100020801,"comment_content":"考虑通过将一行改成逻辑上的多行来减少锁冲突。还是以影院账户为例，可以考虑放在多条记录上，比如 10 个记录，影院的账户总额等于这 10 个记录的值的总和。这样每次要给影院账户加金额的时候，随机选其中一条记录来加。这样每次冲突概率变成原来的 1&#47;10，可以减少锁等待个数，也就减少了死锁检测的 CPU 消耗。老师，这句话没明白什么意思，什么叫改成逻辑上的多行","like_count":0},{"had_liked":false,"id":87676,"user_name":"绍虞","can_delete":false,"product_type":"c1","uid":1504148,"ip_address":"","ucode":"66880CEDF74B04","user_header":"https://static001.geekbang.org/account/avatar/00/16/f3/94/926d4324.jpg","comment_is_top":false,"comment_ctime":1555658373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555658373","product_id":100020801,"comment_content":"回答问题：选第二种，每次删除500条，串行删除20次，对服务器影响最小。<br>一般比较安全的做法是，如果是张大表，最好先从slave取出需要删除的主键，然后采用第二种方法，并且条件加上主键范围，根据主键分小批次做删除。无论是日志增长，还是对业务的影响，都是极低的。","like_count":0},{"had_liked":false,"id":86425,"user_name":"Aaaaaaaaaaayou","can_delete":false,"product_type":"c1","uid":1073601,"ip_address":"","ucode":"67BA315B87587D","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","comment_is_top":false,"comment_ctime":1555377274,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555377274","product_id":100020801,"comment_content":"请问老师，为什么行锁以及上一篇的meta锁都要在事务提交后释放而不是尽早释放呢，这么设计是出于什么考虑呢？","like_count":0},{"had_liked":false,"id":86164,"user_name":"Lane","can_delete":false,"product_type":"c1","uid":1008257,"ip_address":"","ucode":"F70459D1BBD9F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/81/ad80f427.jpg","comment_is_top":false,"comment_ctime":1555318431,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1555318431","product_id":100020801,"comment_content":"上期课后题疑问：<br>1、如果在 Q4 语句执行之前到达，现象：没有影响，备份拿到的是DDL后的表结构。<br><br>问：Q2:START TRANSACTION WITH CONSISTENT SNAPSHOT; 已经开启了一致性视图，那为什么DDL还能生效呢？<br>","like_count":0},{"had_liked":false,"id":85711,"user_name":"多格","can_delete":false,"product_type":"c1","uid":1222021,"ip_address":"","ucode":"122195F3D90EA1","user_header":"https://static001.geekbang.org/account/avatar/00/12/a5/85/eeb5b42f.jpg","comment_is_top":false,"comment_ctime":1555209245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555209245","product_id":100020801,"comment_content":"可以在第三种上做一些优化，如果有序可以按照主键设置范围删除，这样并发也不会有行的竞争关系。","like_count":0},{"had_liked":false,"id":81431,"user_name":"tyy","can_delete":false,"product_type":"c1","uid":1302149,"ip_address":"","ucode":"C3B436E6562744","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","comment_is_top":false,"comment_ctime":1553912802,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553912802","product_id":100020801,"comment_content":"上期那个问题不是是rr隔离级别吗，为什么还能拿到新的表结构？","like_count":0},{"had_liked":false,"id":76475,"user_name":"Lucus","can_delete":false,"product_type":"c1","uid":1198800,"ip_address":"","ucode":"CE8EB70CB9D9F1","user_header":"https://static001.geekbang.org/account/avatar/00/12/4a/d0/d319c44a.jpg","comment_is_top":false,"comment_ctime":1552616219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552616219","product_id":100020801,"comment_content":"我觉得应该选第一个。<br>第二种要执行20次，前19次一直被锁，还可能引发死锁。<br>第三种20个连接之间可能引发死锁","like_count":0},{"had_liked":false,"id":75622,"user_name":"Aaaaaaaaaaayou","can_delete":false,"product_type":"c1","uid":1073601,"ip_address":"","ucode":"67BA315B87587D","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","comment_is_top":false,"comment_ctime":1552440825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552440825","product_id":100020801,"comment_content":"避免死锁的一种方法：规定一个加锁顺序，然后不同的 session 都按照这个顺序来获取锁，比如上面的例子可以规定按照主键的递增顺序来获取锁。不知道这样可不可以","like_count":0},{"had_liked":false,"id":72811,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1551742658,"is_pvip":false,"replies":[{"id":"26397","content":"会，后到的要等待","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551751049,"ip_address":"","comment_id":72811,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551742658","product_id":100020801,"comment_content":"两个事务同时更新同一行，并且同时执行一样的sql语句，会造成行锁冲突吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441764,"discussion_content":"会，后到的要等待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551751049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71123,"user_name":"阿杜","can_delete":false,"product_type":"c1","uid":1066705,"ip_address":"","ucode":"349D3572F5ABE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/46/d1/a1ddf49f.jpg","comment_is_top":false,"comment_ctime":1551269803,"is_pvip":false,"replies":[{"id":"25484","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551279178,"ip_address":"","comment_id":71123,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551269803","product_id":100020801,"comment_content":"“如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并发度的锁的申请时机尽量往后放”，减少锁占用的时间，这个建议很好，我们开发的时候却往往将这样的逻辑放在了最开始，觉得最重要嘛。问答题，如果表中数据超过10000行，我选择第3种，效率高，如果数据不超过10000行，我选择第一种，2&#47;3都不准确。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441003,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551279178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70944,"user_name":"张洋","can_delete":false,"product_type":"c1","uid":1182914,"ip_address":"","ucode":"549BE5DEEF8417","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/c2/bad34a50.jpg","comment_is_top":false,"comment_ctime":1551231141,"is_pvip":true,"replies":[{"id":"25425","content":"是的<br><br>但是如果是在业务层做“不同业务节点之间的分布式锁”，这个成本很高的。不知道你们做出来没有，当时我是放弃了这个方向。<br><br>如果是在每个业务层内自己加锁，会碰到另外一个问题，就是业务端很多，比如有1000个客户端😅。<br><br>这个确实是需要取舍的，如果有成功经验，欢迎分享哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551235505,"ip_address":"","comment_id":70944,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551231141","product_id":100020801,"comment_content":"请教老师一个问题。<br>解决锁冲突的时候，在进入引擎之前实现的一个队列。  就我们当前的秒杀业务，在代码层面设置了一个分布式锁，保证同一时间只能有一个获取当前锁进行秒杀，这样是不是也相当于解决了死锁冲突，并实现了分布式数据的一致性操作。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440911,"discussion_content":"是的\n\n但是如果是在业务层做“不同业务节点之间的分布式锁”，这个成本很高的。不知道你们做出来没有，当时我是放弃了这个方向。\n\n如果是在每个业务层内自己加锁，会碰到另外一个问题，就是业务端很多，比如有1000个客户端😅。\n\n这个确实是需要取舍的，如果有成功经验，欢迎分享哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551235505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70592,"user_name":"lutter","can_delete":false,"product_type":"c1","uid":1301876,"ip_address":"","ucode":"63F67C1DD1EE46","user_header":"","comment_is_top":false,"comment_ctime":1551144604,"is_pvip":false,"replies":[{"id":"25188","content":"n^2","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551145255,"ip_address":"","comment_id":70592,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551144604","product_id":100020801,"comment_content":"老师：<br>课件中这个100万数量级是怎么算出来的？～～<br>假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作是100万数量级<br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440714,"discussion_content":"n^2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551145255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68608,"user_name":"土门一哥","can_delete":false,"product_type":"c1","uid":1155883,"ip_address":"","ucode":"0F1EBE439E10F3","user_header":"","comment_is_top":false,"comment_ctime":1550556424,"is_pvip":false,"replies":[{"id":"24356","content":"没区别😅","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550561841,"ip_address":"","comment_id":68608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550556424","product_id":100020801,"comment_content":"为什么老师的例子老师k=k+1，而不直接使用k=200这类的，有什么区别吗？直接等于常亮的语句还适用本章内容么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439754,"discussion_content":"没区别😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550561841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":67892,"user_name":"任洋爱吃肉","can_delete":false,"product_type":"c1","uid":1126168,"ip_address":"","ucode":"14AA217CB8C672","user_header":"https://static001.geekbang.org/account/avatar/00/11/2f/18/e437681f.jpg","comment_is_top":false,"comment_ctime":1550311650,"is_pvip":false,"replies":[{"id":"24023","content":"确定没有别的语句吗，<br>比如有没有对这个表的更新，但是是用到一个索引的。<br><br>贴一下你show engine innodb status 里面的死锁信息哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550321404,"ip_address":"","comment_id":67892,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550311650","product_id":100020801,"comment_content":"老师你好，针对置顶的第一条留言：update的列没建索引，update执行时会锁定整张表。我在并发量不是很高、且不是长事务的情况下只单独执行update t set t.name=&#39;abc&#39; where t.name= ?语句，name字段无索引。为什么会出现死锁？按我的理解应该只是阻塞等待而不应该是死锁才对啊 ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439414,"discussion_content":"确定没有别的语句吗，\n比如有没有对这个表的更新，但是是用到一个索引的。\n\n贴一下你show engine innodb status 里面的死锁信息哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550321404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61868,"user_name":"悟空","can_delete":false,"product_type":"c1","uid":1005915,"ip_address":"","ucode":"398CD5C37043B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/5b/b47efcc8.jpg","comment_is_top":false,"comment_ctime":1547823452,"is_pvip":false,"replies":[{"id":"21938","content":"但是很多业务其实是不能接受负数的，所以一般都是要实时判断<br><br>当然如果没有“边界条件限制”的，是可以的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547831357,"ip_address":"","comment_id":61868,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1547823452","product_id":100020801,"comment_content":"表U的钱包记录表是会负数的 消费就是负数 充值就是整数 所以求和之后是余额 这样和在用户表单独加一个余额字段有什么劣势吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437022,"discussion_content":"但是很多业务其实是不能接受负数的，所以一般都是要实时判断\n\n当然如果没有“边界条件限制”的，是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547831357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31095,"discussion_content":"记录表会膨胀很快,乃至于一个人的所有记录可能分在多张表中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570881847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":31091,"discussion_content":"余额每次都要求和,慢,而且要做用户统计的话,涉及到余额工作量都会多一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570881771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61698,"user_name":"悟空","can_delete":false,"product_type":"c1","uid":1005915,"ip_address":"","ucode":"398CD5C37043B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/5b/b47efcc8.jpg","comment_is_top":false,"comment_ctime":1547776887,"is_pvip":false,"replies":[{"id":"21900","content":"表U的money这一行会不会变成负数。。<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547782929,"ip_address":"","comment_id":61698,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547776887","product_id":100020801,"comment_content":"以文中电影票购票的例子来说，可不可以改成3个insert语句呢？<br>顾客钱包表U(id,uid,order_id,money)<br>影院钱包表M(id,mid,order_id,money)<br>订单交易表O(id,pid,money)<br>uid表示顾客表主键，mid表示商家影院的主键，order_id表示订单交易表主键，pid表示商品主键如电影票<br>这样一个顾客A1购买影院B2的一张票P9，价格是36元<br>insert into O(pid,money)values(9,36)<br>获取到新增记录的ID假如是100<br>insert into U(uid,order_id,money)values(1,100,-36)<br>insert into M(mid,order_id,money)values(2,100,36)<br>这样算顾客A余额的时候就把U表的money进行sum求和，也可以利用缓存实时更新等<br>不知道这样设计有什么优劣，请老师指教，谢谢<br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436959,"discussion_content":"表U的money这一行会不会变成负数。。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547782929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61381,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1306334,"ip_address":"","ucode":"B2F2E2F28397BC","user_header":"https://static001.geekbang.org/account/avatar/00/13/ee/de/eb2baece.jpg","comment_is_top":false,"comment_ctime":1547688088,"is_pvip":false,"replies":[{"id":"21826","content":"要看是什么场景<br><br>如果是文中提到的所有线程都在更新同一行，分表也没用过了，就不是分治；<br>如果是那种分散的更新压力，可以用分治<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547690677,"ip_address":"","comment_id":61381,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547688088","product_id":100020801,"comment_content":"减少锁冲突的思想是分治法吗？类似分库分表，把压力分摊，同时增加容灾能力","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436855,"discussion_content":"要看是什么场景\n\n如果是文中提到的所有线程都在更新同一行，分表也没用过了，就不是分治；\n如果是那种分散的更新压力，可以用分治\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547690677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59058,"user_name":"w","can_delete":false,"product_type":"c1","uid":1318306,"ip_address":"","ucode":"DB837CAE2FB7C7","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/a2/ef8758c9.jpg","comment_is_top":false,"comment_ctime":1547288705,"is_pvip":false,"replies":[{"id":"21371","content":"对，会的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547293120,"ip_address":"","comment_id":59058,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1547288705","product_id":100020801,"comment_content":"老师您好，看了思考题的答案后，想确认两个问题<br>1、<br>首先线程A 开启 session a 执行 start transaction<br>紧接着线程B执行user表 DDL。<br>接下来线程A 在 session a下， 对user表进行select操作。<br>理论上session a这个select操作是会报错, 抛出<br>Table definition has changed 的错误信息，因为表结构不一致，对吗？<br>2、<br>如果将上面的select换成update&#47;insert&#47;delete，一样会报错吗？<br>按照老师的讲解，我理解是会报错的。<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436287,"discussion_content":"对，会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547293120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148537,"avatar":"https://static001.geekbang.org/account/avatar/00/11/86/79/28fcafa6.jpg","nickname":"胡红伟","note":"","ucode":"33F12A97311F63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2309,"discussion_content":"我做了实验不会报错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563449889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55257,"user_name":"观弈道人","can_delete":false,"product_type":"c1","uid":1016905,"ip_address":"","ucode":"F3BB619A33C605","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","comment_is_top":false,"comment_ctime":1546079185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546079185","product_id":100020801,"comment_content":"大开眼界","like_count":0},{"had_liked":false,"id":53410,"user_name":"蒋日健","can_delete":false,"product_type":"c1","uid":1318609,"ip_address":"","ucode":"0B3AB559DE635A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/j0n4JAfhd9wUicVeibMYcWQ3O4Y4dakC161f9rWM7cSicC7UMSSUsJ5hqibFjGmSB0dQDjfkjiavbBmUFroqHYquJRA/132","comment_is_top":false,"comment_ctime":1545639909,"is_pvip":false,"replies":[{"id":"19322","content":"有包括间隙锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545642371,"ip_address":"","comment_id":53410,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545639909","product_id":100020801,"comment_content":"老师，这里的死锁检测是仅仅针对行锁做检测还是所有可能造成死锁的锁都会检测？包括间隙锁之类的？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434131,"discussion_content":"有包括间隙锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545642371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51501,"user_name":"leon","can_delete":false,"product_type":"c1","uid":1141763,"ip_address":"","ucode":"E2479B1AC25B43","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/03/75c65e8f.jpg","comment_is_top":false,"comment_ctime":1545190394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545190394","product_id":100020801,"comment_content":"老师你好，第六讲留的问题，第七讲的答案里还是有些困惑<br><br>“如果在 Q4 语句执行之前到达，现象：没有影响，备份拿到的是 DDL 后的表结构。”<br><br>数据库已经开始备份，如果在Q4之前DDL，就拿到了DDL之后的表结构备份，那条binlog就应该记住备份之前。<br>然而客观上binlog是在备份开始之后执行的，应该记在备份之后啊。但是这样的话，如果用这个备考恢复后面某时刻的数据，这条binglog就会在执行一次，这样不就出错了吗？<br>这里不是很明白，请老师解惑！","like_count":0},{"had_liked":false,"id":50235,"user_name":"@@@@","can_delete":false,"product_type":"c1","uid":1324136,"ip_address":"","ucode":"619EF5AF14B72B","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/68/0a798201.jpg","comment_is_top":false,"comment_ctime":1544930007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544930007","product_id":100020801,"comment_content":"生产环境下发现表字段不够长text类型，修改为mediumtext,出现锁等待，应用停止都不行，后来重启实例后才恢复（发现不能再上一个问题继续回复）","like_count":0},{"had_liked":false,"id":50200,"user_name":"@@@@","can_delete":false,"product_type":"c1","uid":1324136,"ip_address":"","ucode":"619EF5AF14B72B","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/68/0a798201.jpg","comment_is_top":false,"comment_ctime":1544915688,"is_pvip":false,"replies":[{"id":"18036","content":"是死锁还是锁等待？<br>说一下你的复现步骤和看到的结果","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544928842,"ip_address":"","comment_id":50200,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1544915688","product_id":100020801,"comment_content":"生产环境修改表结构，会死锁，有何方法避免？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432913,"discussion_content":"是死锁还是锁等待？\n说一下你的复现步骤和看到的结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544928842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10706,"discussion_content":"应该说的是锁等待吧。上一章的内容。DDL会锁表，用alter wait n的那个命令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568302386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":50129,"user_name":"老钱","can_delete":false,"product_type":"c1","uid":1129681,"ip_address":"","ucode":"0A15CEE024F9D7","user_header":"https://static001.geekbang.org/account/avatar/00/11/3c/d1/e9c26de1.jpg","comment_is_top":false,"comment_ctime":1544875534,"is_pvip":false,"replies":[{"id":"18024","content":"文中说了是同一行","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544881313,"ip_address":"","comment_id":50129,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544875534","product_id":100020801,"comment_content":"死锁检测的性能说的有点吓人了，应该着重强调更新同一行，并且必须是并发同时更新。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432888,"discussion_content":"文中说了是同一行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544881313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49081,"user_name":"kitten","can_delete":false,"product_type":"c1","uid":1027789,"ip_address":"","ucode":"E451DE087CB7CE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/cd/3bffed26.jpg","comment_is_top":false,"comment_ctime":1544600058,"is_pvip":true,"replies":[{"id":"17609","content":"没有呀，你是指什么矛盾","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544601659,"ip_address":"","comment_id":49081,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544600058","product_id":100020801,"comment_content":"老师：上期回答中，第一条Q4和第二条Q2，是不是有矛盾？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432477,"discussion_content":"没有呀，你是指什么矛盾","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544601659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48662,"user_name":"得少","can_delete":false,"product_type":"c1","uid":1309045,"ip_address":"","ucode":"36C44F5D94C114","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIXjLm1ZXhj5ac5MFUcHvBYQFdZWBglqv738uPyrxQVnwZQFzhlpB8CSspc22KkKxTtgwvMWp5KiaA/132","comment_is_top":false,"comment_ctime":1544510340,"is_pvip":false,"replies":[{"id":"17485","content":"1. 同一行才阻塞<br><br>2. 普通查询不会。你看一下08篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544524019,"ip_address":"","comment_id":48662,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544510340","product_id":100020801,"comment_content":"老师，你好，有几个问题请教一下：<br>1、innodb行锁是通过锁索引来实现，如果id字段加索引，update 更新id = 1 和 id = 2记录，在更新id = 2时会进行阻塞吗？<br>2、innodb行锁是通过锁索引来实现，那么两条查询 id = 1的记录会进行阻塞吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432296,"discussion_content":"1. 同一行才阻塞\n\n2. 普通查询不会。你看一下08篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544524019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48480,"user_name":"Mac Kwan","can_delete":false,"product_type":"c1","uid":1001958,"ip_address":"","ucode":"FC80EBC9CD37A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/e6/4f00fe55.jpg","comment_is_top":false,"comment_ctime":1544451180,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1544451180","product_id":100020801,"comment_content":"三个方案比较起来，应该是方案二比较合适。方案三20个连接同时执行一样的语句，因为连接启动不是执行不是一致的，所以有可能会出现一些行在一个连接里删除了另外一个连接才启动删除语句，就会被阻塞而且达不到删除前10000行的目的啊。方案二的优势在于每次删除减少行锁的量，提高高并发。然而我想能不能是把前一万行的ID取出分成20份，然后并发执行删除来优化呢？","like_count":0,"discussions":[{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165848,"discussion_content":"方案3如果把一万行ID按不重复的取出20分来并发执行，应该不会锁住同一行吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581336334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47941,"user_name":"qzm","can_delete":false,"product_type":"c1","uid":1117169,"ip_address":"","ucode":"0BFAB84A257081","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/f1/042df911.jpg","comment_is_top":false,"comment_ctime":1544261786,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544261786","product_id":100020801,"comment_content":"减少行级锁冲突，本身在应用端做好SOA很关键，所有的对数据库的某些表的操作接口收起来的，这样对数据库的连接数也会相应降低，但是如果同一个应用服务端数量庞大还是较难解决，只能通过文字说的把同一条记录数据的更新结合业务进行拆分，比如热点账户的余额记录。还有应用端对于表操作的DML语句如果是开启事务的那么事务内部的操作DML需要根据某种规则做排序处理，这样可以极大降低死锁发生的概率","like_count":0},{"had_liked":false,"id":47325,"user_name":"jin","can_delete":false,"product_type":"c1","uid":1322775,"ip_address":"","ucode":"7BFE4F9AC5C95B","user_header":"https://static001.geekbang.org/account/avatar/00/14/2f/17/ae6531d9.jpg","comment_is_top":false,"comment_ctime":1544107420,"is_pvip":true,"replies":[{"id":"16968","content":"有的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544167910,"ip_address":"","comment_id":47325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544107420","product_id":100020801,"comment_content":"通过2个不同的字段更新同一张表中同一行数据，会有锁等待吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431736,"discussion_content":"有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544167910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47315,"user_name":"jin","can_delete":false,"product_type":"c1","uid":1322775,"ip_address":"","ucode":"7BFE4F9AC5C95B","user_header":"https://static001.geekbang.org/account/avatar/00/14/2f/17/ae6531d9.jpg","comment_is_top":false,"comment_ctime":1544105331,"is_pvip":true,"replies":[{"id":"16872","content":"行锁挂在索引上是什么操作","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544106497,"ip_address":"","comment_id":47315,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1544105331","product_id":100020801,"comment_content":"行锁挂在索引上，如果使用有索引的字段更新；同时又有另一个事务更新同一行没有索引行会发生什么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431733,"discussion_content":"行锁挂在索引上是什么操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544106497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1688939,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAia6hRmnSZyuLtKvxxXvg9vgUfwSReCOaHKGLKuRcNX2BCNdmCFSlXyBZvpSXia5LXKjAZKeBXKuw/132","nickname":"Geek_guan","note":"","ucode":"592603EB5F042D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278848,"discussion_content":"了解一下意向锁的知识你就懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591242885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47178,"user_name":"进阶的码农","can_delete":false,"product_type":"c1","uid":1017821,"ip_address":"","ucode":"D8991282640334","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/dd/4f53f95d.jpg","comment_is_top":false,"comment_ctime":1544068087,"is_pvip":false,"replies":[{"id":"16828","content":"有myisam表？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544070631,"ip_address":"","comment_id":47178,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1544068087","product_id":100020801,"comment_content":"老师 我自己测试mysqldump发现了以下语句<br>1.FLUSH &#47;!40101 LOCAL &#47; TABLES <br>2.FLUSH TABLES WITH READ LOCK <br>3.SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ <br>4.START TRANSACTION &#47;!40100 WITH CONSISTENT SNAPSHOT <br><br>个人有疑问mysqldump --single-transaction的语句居然也使用了FTWRL，而且已经执行FTWRL的表只能读不能写，为啥还要把隔离级别设置为RR？请老师指教<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431690,"discussion_content":"有myisam表？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544070631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369809,"discussion_content":"备份的时候加了--master-data参数吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619161979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47172,"user_name":"玩","can_delete":false,"product_type":"c1","uid":1308330,"ip_address":"","ucode":"8B77B32EF1B44B","user_header":"https://static001.geekbang.org/account/avatar/00/13/f6/aa/860d584e.jpg","comment_is_top":false,"comment_ctime":1544067050,"is_pvip":false,"replies":[{"id":"16833","content":"1 前面结论对的<br>2. 你是不是有重叠条件。就是不同的语句里，有出现相同的room id? ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544071268,"ip_address":"","comment_id":47172,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544067050","product_id":100020801,"comment_content":"老师，我之前遇到一个死锁的问题，趁这个机会向你请教下：<br>【描述】一个表，在2个字段上都加了索引，字段：roomId，extnumId;  然后有这样的更新语句： update set .... where extnumid=? and roomId in(1,2,3);   在并发的场景下发生了死锁。后来查阅了资料，得到的知识点如下： 1. InnoDB 的 行锁建立在索引的基础上，锁的是索引。  2. 上面的语句先锁非主键锁，再锁主键锁去更新。    不知道这2点结论对不对？另外，我上面那条update 是按照什么顺序锁索引的？ 后来我的解决方式是：改成按主键更新解决的问题.    ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431686,"discussion_content":"1 前面结论对的\n2. 你是不是有重叠条件。就是不同的语句里，有出现相同的room id? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544071268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47041,"user_name":"24&#47;7","can_delete":false,"product_type":"c1","uid":1302973,"ip_address":"","ucode":"643654E1FA4A29","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/bd/294b77bb.jpg","comment_is_top":false,"comment_ctime":1544025021,"is_pvip":false,"replies":[{"id":"16796","content":"是没有呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544026460,"ip_address":"","comment_id":47041,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544025021","product_id":100020801,"comment_content":"老师 show creat table 的时候，有没有获取锁呀。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431646,"discussion_content":"是没有呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544026460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46991,"user_name":"迷途初心","can_delete":false,"product_type":"c1","uid":1309492,"ip_address":"","ucode":"47CD09136CBF29","user_header":"https://static001.geekbang.org/account/avatar/00/13/fb/34/ba2d647b.jpg","comment_is_top":false,"comment_ctime":1544015606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544015606","product_id":100020801,"comment_content":"不知道谁有没有好的书籍推荐一下？关于SQL优化的","like_count":0},{"had_liked":false,"id":46398,"user_name":"小苹果666","can_delete":false,"product_type":"c1","uid":1321567,"ip_address":"","ucode":"8A588DE119CF78","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKmj2hibqrMD5fyXUoJtl8tDFwths2DRrJJShnO9hK1RJdqsMicG1FogMkFNqoJTKdFmSIYia71ok4AQ/132","comment_is_top":false,"comment_ctime":1543915584,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543915584","product_id":100020801,"comment_content":"老师问个问题：mysql隔离级别是可重复读，那在事务里如何避免幻读？另外行级锁分为共享锁和排他锁，可以利用这两个概念，解决幻读吗？","like_count":0,"discussions":[{"author":{"id":1688939,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAia6hRmnSZyuLtKvxxXvg9vgUfwSReCOaHKGLKuRcNX2BCNdmCFSlXyBZvpSXia5LXKjAZKeBXKuw/132","nickname":"Geek_guan","note":"","ucode":"592603EB5F042D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278849,"discussion_content":"可重复读隔离级别下，通过快照读来避免幻读。解决幻读一般还需要间隙锁配合才行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591243114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46135,"user_name":"疾风狂草","can_delete":false,"product_type":"c1","uid":1283489,"ip_address":"","ucode":"05F899725048BC","user_header":"","comment_is_top":false,"comment_ctime":1543851654,"is_pvip":false,"replies":[{"id":"16524","content":"这样在MDL问题不算大，这个操作会阻塞DDL，但是你们应该不会出现“你在操作的时候，刚好有另外一个同学在改表结构”的操作吧？<br><br>正常大家都会知会一下避免的。<br><br>这种情况，怕的是手工操作期间，从begin到commmit之间时间太长，如果是业务更新高峰期，就不好。<br><br><br><br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543887631,"ip_address":"","comment_id":46135,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543851654","product_id":100020801,"comment_content":"老师，问个跑题的问题，平时工作中经常对数据库操作，对有些重要的业务库进行增删改的操作时，为了减少错误，偶尔会在命令行用begin&#47;commit来启动一个事务，结果查询无误了才提交。这种情况是不是也会生成MDL或者行锁？是不是不应该使用这种方法？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431351,"discussion_content":"这样在MDL问题不算大，这个操作会阻塞DDL，但是你们应该不会出现“你在操作的时候，刚好有另外一个同学在改表结构”的操作吧？\n\n正常大家都会知会一下避免的。\n\n这种情况，怕的是手工操作期间，从begin到commmit之间时间太长，如果是业务更新高峰期，就不好。\n\n\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543887631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45416,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543635309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543635309","product_id":100020801,"comment_content":"思考题: 第二种可能更合理一些, 因为第一种事务占用的资源比较多, 事务太长; 而第三中加剧了锁的竞争, 可能出现死锁情况, 不断做死锁检测也消耗CPU资源.","like_count":0},{"had_liked":false,"id":45392,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1543630853,"is_pvip":false,"replies":[{"id":"16200","content":"是，有ID可以精确定位是最好的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543655874,"ip_address":"","comment_id":45392,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543630853","product_id":100020801,"comment_content":"因为我认为第一种与第二种的都差不多，按照我之前留言分析。但是看到其他的留言我不太认同。顾此提出疑问。而不是只是看了别人回答而不思考。如果认同其他留言，我也不会留言。再者，在实际的业务场景，第二种方案也不是最优的。没有任何万金油的方法。因为如果在业务层面，并发控制的好，通过自增主键范围来控制500行。又不失为高效的方法。因地制宜。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431016,"discussion_content":"是，有ID可以精确定位是最好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543655874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45255,"user_name":"小超","can_delete":false,"product_type":"c1","uid":1068004,"ip_address":"","ucode":"FCC8B303A16E70","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/e4/0219e7c8.jpg","comment_is_top":false,"comment_ctime":1543569087,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543569087","product_id":100020801,"comment_content":"update t set k=k+1 where id=1 可能我没说清，大概意思就是这个一个更新语句是不是原子操作的，是先拿读锁读到k再拿写锁，还是说直接就拿读锁和写锁，类似java的k++就不是原子操作","like_count":0,"discussions":[{"author":{"id":2123257,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhqDU299SMLoEGMpJYFXtuwiadG0Friaia4fyu2ZJBokpTsTIpibouicaz9JItEYS1EAhLCqB0S3HWA3A/132","nickname":"Geek_1bd897","note":"","ucode":"5EE4879CA5E35D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391826,"discussion_content":"我觉得是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630649685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45093,"user_name":"深圳科技园浩子","can_delete":false,"product_type":"c1","uid":1012027,"ip_address":"","ucode":"66F75F9BBBB391","user_header":"https://static001.geekbang.org/account/avatar/00/0f/71/3b/79f5fd01.jpg","comment_is_top":false,"comment_ctime":1543545168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543545168","product_id":100020801,"comment_content":"丁大大，你好，如果关闭死锁检测，是不是会走超时检测innodb_lock_wait_timeout=50,那不等待的时间更长了？","like_count":0},{"had_liked":false,"id":45054,"user_name":"深圳科技园浩子","can_delete":false,"product_type":"c1","uid":1012027,"ip_address":"","ucode":"66F75F9BBBB391","user_header":"https://static001.geekbang.org/account/avatar/00/0f/71/3b/79f5fd01.jpg","comment_is_top":false,"comment_ctime":1543541582,"is_pvip":false,"replies":[{"id":"16034","content":"所以说是头痛医头，得业务非常明确没有死锁才行，不建议","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543542789,"ip_address":"","comment_id":45054,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543541582","product_id":100020801,"comment_content":"丁大大，你好，如果关闭死锁检测，是不是会走超时检测innodb_lock_wait_timeout=50,那不等待的时间更长了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430907,"discussion_content":"所以说是头痛医头，得业务非常明确没有死锁才行，不建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543542789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45035,"user_name":"安小依","can_delete":false,"product_type":"c1","uid":1101660,"ip_address":"","ucode":"A5C414C7B994FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/5c/d4e19eb6.jpg","comment_is_top":false,"comment_ctime":1543540870,"is_pvip":false,"replies":[{"id":"16035","content":"你自己要把这些配种开起来… <br>然后自己加备份机制","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543542831,"ip_address":"","comment_id":45035,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543540870","product_id":100020801,"comment_content":"林老师，我查看了数据库，MySQL 5.7 binlog 默认是不开启的……看来数据只能重新爬了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430904,"discussion_content":"你自己要把这些配种开起来… \n然后自己加备份机制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543542831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45034,"user_name":"Albert","can_delete":false,"product_type":"c1","uid":1099825,"ip_address":"","ucode":"52293A4A061CF0","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/31/bb5d78bc.jpg","comment_is_top":false,"comment_ctime":1543540858,"is_pvip":false,"replies":[{"id":"16156","content":"贴一下你的复现步骤和操作结果","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543630562,"ip_address":"","comment_id":45034,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543540858","product_id":100020801,"comment_content":"老师，UPDATE news t set t.index1 = 1 where t.simple = &quot;124&quot; LIMIT 1;这条语句simple是非索引字段，但是我更新的执行的时候，不仅仅锁住了simple=124的第一行，还把前一个字段也锁上了，请问这个是间隙锁的原因么，但是为什么只锁了前一行，而没有锁后一行呀，谢谢老师","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430903,"discussion_content":"贴一下你的复现步骤和操作结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543630562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45019,"user_name":"Geek_9ca34e","can_delete":false,"product_type":"c1","uid":1222861,"ip_address":"","ucode":"9A9FDBBCCBE19B","user_header":"","comment_is_top":false,"comment_ctime":1543539852,"is_pvip":false,"replies":[{"id":"16100","content":"不是，就是代码的注释里面写着的时刻2、时刻3…这些","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543589705,"ip_address":"","comment_id":45019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543539852","product_id":100020801,"comment_content":"老师，你说时刻2，时刻3，时刻4是代码执行的时刻，那能请问是Q2代码，Q3代码，Q4代码执行的时刻麽？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430896,"discussion_content":"不是，就是代码的注释里面写着的时刻2、时刻3…这些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543589705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44935,"user_name":"先听","can_delete":false,"product_type":"c1","uid":1151409,"ip_address":"","ucode":"82D8DA7A2FEB4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/91/b1/fb117c21.jpg","comment_is_top":false,"comment_ctime":1543511531,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543511531","product_id":100020801,"comment_content":"在上面提了“mysql的5.5，5.7，8.0三个版本速度比较”的问题。谢谢老师的回复。由于不知道如何在老师的回答后面继续跟帖，只好重新发一遍。<br>我的操作步骤如下：<br>1. 搭建上述三个版本的数据库（记忆中都是默认安装，没有进行配置的修改），然后在各个库中都做下面的操作<br>2. 创建表tb。表里有整形的主键id，另外有一些字符串以及时间类型的字段<br>3. 往tb里插入20万条数据<br>4. 执行十次如下检索语句，然后算出平均每次的执行时间：select id from tb where id = 123<br><br>如上操作得出的结果竟然是5.5版本最快，8.0最慢。<br>以上根据记忆大概写了操作步骤，如果必须知道详细参数什么的，我回到机器前后再回贴补上。<br>期待老师给予指点。","like_count":0},{"had_liked":false,"id":44889,"user_name":"先听","can_delete":false,"product_type":"c1","uid":1151409,"ip_address":"","ucode":"82D8DA7A2FEB4B","user_header":"https://static001.geekbang.org/account/avatar/00/11/91/b1/fb117c21.jpg","comment_is_top":false,"comment_ctime":1543503468,"is_pvip":false,"replies":[{"id":"15975","content":"完整贴一下你的测试用例，包括：步骤、配置、压力参数、压测结果","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543504437,"ip_address":"","comment_id":44889,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543503468","product_id":100020801,"comment_content":"搭建了mysql的5.5，5.7和8.0三个版本的数据库进行性能比较。发现最快的竟然是5.5  最慢的是8.0。<br>这和网上流传的结果正好相反。感觉可能是数据库的方式或者配置什么的弄错了。请问我应该从何处入手怎么排查原因呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430851,"discussion_content":"完整贴一下你的测试用例，包括：步骤、配置、压力参数、压测结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543504437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44859,"user_name":"Geek_9ca34e","can_delete":false,"product_type":"c1","uid":1222861,"ip_address":"","ucode":"9A9FDBBCCBE19B","user_header":"","comment_is_top":false,"comment_ctime":1543500598,"is_pvip":false,"replies":[{"id":"15976","content":"说明的代码里面有这几个时刻的。你具体说下跟你理解不一致的点","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543504473,"ip_address":"","comment_id":44859,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543500598","product_id":100020801,"comment_content":"老师，你分析的前一篇文章的问题时，提到 时刻2，时刻3，时刻4，没有看明白呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430850,"discussion_content":"说明的代码里面有这几个时刻的。你具体说下跟你理解不一致的点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543504473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44836,"user_name":"Z.J.T","can_delete":false,"product_type":"c1","uid":1100191,"ip_address":"","ucode":"B9606C79CBCC0E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/9f/abbb4139.jpg","comment_is_top":false,"comment_ctime":1543497633,"is_pvip":false,"replies":[{"id":"15987","content":"1. 这个场景里其实没有死锁的。不过大家都按照同样的顺序加锁，确实是避免死锁的方法<br><br>2. 这个在没有边界条件的时候是可以的。文中说到，其实影院也可能扣款，比如退票。那扣款是可能扣成0的。要做边界条件判断的时候，日志补偿的模式就满足不了需求了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543517785,"ip_address":"","comment_id":44836,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543497633","product_id":100020801,"comment_content":"老师好：针对高频热点账户+-问题：<br>1.可否根据账户id排序，来解决死锁问题，当然有可能热点账户排在前面，导致持有锁时间变长，或者加钱账户可更新，减钱账户余额不足的情况。<br>2.可否将事务拆解，将加减钱的数据库事务拆解成减钱账户update，流水记录insert一个数据库事务。然后异步补偿加钱账户比如影院账户。达到最终一致…<br><br>老师请指点…","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430845,"discussion_content":"1. 这个场景里其实没有死锁的。不过大家都按照同样的顺序加锁，确实是避免死锁的方法\n\n2. 这个在没有边界条件的时候是可以的。文中说到，其实影院也可能扣款，比如退票。那扣款是可能扣成0的。要做边界条件判断的时候，日志补偿的模式就满足不了需求了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543517785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44739,"user_name":"小文同学","can_delete":false,"product_type":"c1","uid":1001893,"ip_address":"","ucode":"48F2AEB989C12A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg","comment_is_top":false,"comment_ctime":1543484562,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543484562","product_id":100020801,"comment_content":"直接执行会逐行加锁，假如遇到其他线程在占用锁，那delete操作会比较长，同时已经锁好的行也会让其他线程挂起。从这个角度看，不是一种好的办法。<br>同一连接执行20次，每次需要上锁的数量比较少，对其他连接影响也不大，我比较赞同这种方法。<br>不同的连接执行20次主动进行锁竞争应该不是好办法，不是很清楚update limit的锁过程，希望老师后面可以解答！","like_count":0},{"had_liked":false,"id":44736,"user_name":"小岭哥","can_delete":false,"product_type":"c1","uid":1209817,"ip_address":"","ucode":"C022D703B6D4E9","user_header":"https://static001.geekbang.org/account/avatar/00/12/75/d9/24786b20.jpg","comment_is_top":false,"comment_ctime":1543483902,"is_pvip":true,"replies":[{"id":"15983","content":"可能会死锁，一个表有多个索引的话","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543505001,"ip_address":"","comment_id":44736,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1543483902","product_id":100020801,"comment_content":"如果是并发插入，会有死锁问题吗，他锁的哪些行呢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430822,"discussion_content":"可能会死锁，一个表有多个索引的话","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543505001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1263932,"avatar":"https://static001.geekbang.org/account/avatar/00/13/49/3c/5d54c510.jpg","nickname":"静静聆听","note":"","ucode":"0A8600CB928EFE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285326,"discussion_content":"插入锁行，根据主键来的，怎么会死锁？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592807716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44731,"user_name":"小超","can_delete":false,"product_type":"c1","uid":1068004,"ip_address":"","ucode":"FCC8B303A16E70","user_header":"https://static001.geekbang.org/account/avatar/00/10/4b/e4/0219e7c8.jpg","comment_is_top":false,"comment_ctime":1543482988,"is_pvip":false,"replies":[{"id":"15961","content":"没问题呀，后加写锁的就等待","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543485982,"ip_address":"","comment_id":44731,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543482988","product_id":100020801,"comment_content":"请教一个问题，update t set k=k+1 where id=1，这样一个语句是先拿读锁，读到k，然后再拿写锁去将数据改成k+1么？还是说一看到update这样的关键字就直接拿读锁和写锁？如果是第一种情况，那2条同样的update语句，可能出现同时读到k的数据，然后其中一条更新后另外一条再更新，这样数据就有问题了？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430819,"discussion_content":"没问题呀，后加写锁的就等待","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543485982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44669,"user_name":"杨","can_delete":false,"product_type":"c1","uid":1105205,"ip_address":"","ucode":"D0D765F986AF59","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/35/f9cbab6a.jpg","comment_is_top":false,"comment_ctime":1543473251,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543473251","product_id":100020801,"comment_content":"当使用innodb 引擎时，事务隔离级别为Read Committed，如果跟新条件没有使用索引，会锁全表，但是MySQL做了一些改进，在MySQL Server过滤条件，发现不满足后，会调用unlock_row方法，把不满足条件的记录释放锁 (违背了二段锁协议的约束)。这样做，保证了最后只会持有满足条件记录上的锁，但是每条记录的加锁操作还是不能省略的。可见即使是MySQL，为了效率也是会违反规范的。（参见《高性能MySQL》中文第三版p181）<br>当事务级别为REPEATABLE READ时，如果跟新条件没有使用索引，会锁全表，不会调用unlock_row方法，提交事务时一块解锁这样理解对吗","like_count":0},{"had_liked":false,"id":44617,"user_name":"杨","can_delete":false,"product_type":"c1","uid":1105205,"ip_address":"","ucode":"D0D765F986AF59","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/35/f9cbab6a.jpg","comment_is_top":false,"comment_ctime":1543463698,"is_pvip":false,"replies":[{"id":"15903","content":"写一下你的验证过程哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543467209,"ip_address":"","comment_id":44617,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1543463698","product_id":100020801,"comment_content":"用MySQL5.7.20做实验更新一条语录句不论where后面跟的是否是索引字段，都会锁住那一行不会锁表，求解答","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430808,"discussion_content":"写一下你的验证过程哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543467209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":10694,"discussion_content":"我自己试了下，也出现了这种情况。其中age是有索引，account无索引\n1. session1里面先begin, 然后 update tmp set age=10 where account=&#34;xiaozhang&#34;;\n2.session2里面执行  select * from tmp 是可以执行成功的。表没有锁住。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568301540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1314800,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/f0/37feaa1d.jpg","nickname":"马林","note":"","ucode":"38AA3E2EB1CC5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392808,"discussion_content":"数据库现在是用MVCC来解决的，快照读不会加锁的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631147834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":10694,"ip_address":""},"score":392808,"extra":""},{"author":{"id":1006735,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","nickname":"小可","note":"","ucode":"8834AF621FA67D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534653,"discussion_content":"account给个不存在的值再试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638251130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":10694,"ip_address":""},"score":534653,"extra":""}]}]},{"had_liked":false,"id":44611,"user_name":"Geek_527020","can_delete":false,"product_type":"c1","uid":1097150,"ip_address":"","ucode":"4DAAC586AB1563","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/be/53350286.jpg","comment_is_top":false,"comment_ctime":1543462576,"is_pvip":false,"replies":[{"id":"15896","content":"如果是你的语句这样写，是不用找四次的，找到第一个（id=1)然后向右遍历就行<br><br>之前说的不行是说，在回表过程中，回表只能一个ID一个ID回来查","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543464428,"ip_address":"","comment_id":44611,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543462576","product_id":100020801,"comment_content":"请教老师一个问题，select   *   from  t   where  id&gt;=1  and   id&lt;=4.  id是主键，看老师之前的文章谅解，这条语句是在主键索引里分别查询id等于1，2,3,4这几条数据，也就是在主键索引b+树中查找4次。b+树叶子节点是有序且用链表的方式链接起来，为什么不在叶子节点直接查找。上次老师讲的是非主键索引，是这样的当时，不知道主键索引是否是我说的这样查找","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430807,"discussion_content":"如果是你的语句这样写，是不用找四次的，找到第一个（id=1)然后向右遍历就行\n\n之前说的不行是说，在回表过程中，回表只能一个ID一个ID回来查","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543464428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44582,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1543459632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543459632","product_id":100020801,"comment_content":"这章对我，收获真的太大了，期待后续干货","like_count":0},{"had_liked":false,"id":44494,"user_name":"gether","can_delete":false,"product_type":"c1","uid":1015780,"ip_address":"","ucode":"224698C2C609EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/e4/990dcd8e.jpg","comment_is_top":false,"comment_ctime":1543453437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543453437","product_id":100020801,"comment_content":"针对留言将相对长的事务分成多次相对短的事务，则每次事务占用锁的时间相对较短，有一个疑问。<br>如果采用spring 框架，用的默认隔离级别和REQUIRED传播行为，那样采用第二种方式，所有的的删除都在一个事务中，那样删除持有的锁不是只能在事务提交的时候进行释放，不是更加不好麽？","like_count":0},{"had_liked":false,"id":44493,"user_name":"lvvp","can_delete":false,"product_type":"c1","uid":1097298,"ip_address":"","ucode":"D36C7B186C56DC","user_header":"https://static001.geekbang.org/account/avatar/00/10/be/52/568e8c06.jpg","comment_is_top":false,"comment_ctime":1543453422,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543453422","product_id":100020801,"comment_content":"第一种，直接执行 delete from T limit 10000;<br>第二种，在一个连接中循环执行 20 次 delete from T limit 500;<br><br>对于第三种 同时执行，事务之间会产生阻塞，一个连接事务提交后，下一个才可以操作，相当于同步阻塞的串行执行，不可取<br>第二种和第一种区别是第一种执行事务执行时间比较长，影响其他事务，所以第二个方案最优","like_count":0},{"had_liked":false,"id":44440,"user_name":"Lynn","can_delete":false,"product_type":"c1","uid":1181539,"ip_address":"","ucode":"92988AD2FF241A","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/63/a9e1ff40.jpg","comment_is_top":false,"comment_ctime":1543449841,"is_pvip":false,"replies":[{"id":"15888","content":"是“前”，手误修改了，多谢","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543459405,"ip_address":"","comment_id":44440,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543449841","product_id":100020801,"comment_content":"没搞懂上期的答案的第四点 select 之后 ddl才开始 为什么备份的结果是ddl后的表结构","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430760,"discussion_content":"是“前”，手误修改了，多谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543459405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44409,"user_name":"J!","can_delete":false,"product_type":"c1","uid":1305003,"ip_address":"","ucode":"71C946119B59D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/ab/37903736.jpg","comment_is_top":false,"comment_ctime":1543422742,"is_pvip":false,"replies":[{"id":"15871","content":"它检测以后才知道死锁了呀…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543427816,"ip_address":"","comment_id":44409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543422742","product_id":100020801,"comment_content":"主动死锁检测在发生死锁的时候，既然已经发生了死锁，为什么还要检测呢，直接回滚后start的事物不就好了吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430752,"discussion_content":"它检测以后才知道死锁了呀…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543427816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44398,"user_name":"子悠","can_delete":false,"product_type":"c1","uid":1000383,"ip_address":"","ucode":"070BB09477E8A8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/bf/9a982bc1.jpg","comment_is_top":false,"comment_ctime":1543419931,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1543419931","product_id":100020801,"comment_content":"文中提到从客户端控制并发线程数，就是分布式锁的作用了","like_count":0},{"had_liked":false,"id":44383,"user_name":"Khirye","can_delete":false,"product_type":"c1","uid":1080985,"ip_address":"","ucode":"6C54C126FA54B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","comment_is_top":false,"comment_ctime":1543417960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543417960","product_id":100020801,"comment_content":"请问老师，乐观锁和悲观锁又是什么呢？","like_count":0},{"had_liked":false,"id":44364,"user_name":"oscarwin","can_delete":false,"product_type":"c1","uid":1131956,"ip_address":"","ucode":"492430BA342593","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b4/ec66d499.jpg","comment_is_top":false,"comment_ctime":1543414764,"is_pvip":false,"replies":[{"id":"15875","content":"明天看完08篇你再看看这个问题。如果还有问题你再提一下，然后那个问题里面写一下你“update扣减库存”的语句打算怎么写","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543428220,"ip_address":"","comment_id":44364,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1543414764","product_id":100020801,"comment_content":"看了本篇文章，做了这样一个试验，采用InnoDB的默认隔离级别：<br>时刻一：事务A，开启事务，Select查询库存还有一件；<br>时刻二：事务B，开启事务，Select查询库存还有一件；<br>时刻三：事务A，Update扣减库存；<br>时刻四：事务A，提交事务；<br>时刻五：事务B，Update扣减库存；<br>时刻六：事务B，提交事务。<br>老师，如果这样的话，那不就出现超卖了吗？请问这里是怎么控制的实现不超卖的。<br>辛苦老师解惑！！！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430740,"discussion_content":"明天看完08篇你再看看这个问题。如果还有问题你再提一下，然后那个问题里面写一下你“update扣减库存”的语句打算怎么写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543428220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133918,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4d/5e/c5c62933.jpg","nickname":"lmtoo","note":"","ucode":"FCD5B9C941D448","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":840,"discussion_content":"在事务开启之后，查询剩余库存时用for update，锁住库存量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562119084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44358,"user_name":"扛着锄头闯江湖","can_delete":false,"product_type":"c1","uid":1225243,"ip_address":"","ucode":"F2A2793EC8F1E6","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/1b/947dfcb8.jpg","comment_is_top":false,"comment_ctime":1543413991,"is_pvip":false,"replies":[{"id":"15876","content":"行锁不会退化成表锁。<br><br>间隙锁不会专门文章说，你说下你问题，如果需要展开写到答疑文章中","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543428306,"ip_address":"","comment_id":44358,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543413991","product_id":100020801,"comment_content":"老师，感觉今天的行锁写的内容不够丰富，包括：间隙锁等，还有什么时候行锁会退变成表锁都没有说，后面会有补充吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430737,"discussion_content":"行锁不会退化成表锁。\n\n间隙锁不会专门文章说，你说下你问题，如果需要展开写到答疑文章中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543428306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44357,"user_name":"陌上人 .","can_delete":false,"product_type":"c1","uid":1207075,"ip_address":"","ucode":"02D0044843172B","user_header":"https://static001.geekbang.org/account/avatar/00/12/6b/23/73f18275.jpg","comment_is_top":false,"comment_ctime":1543413491,"is_pvip":false,"replies":[{"id":"15877","content":"锁是针对“行”的<br><br>他俩现在锁的不是同一行哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543428346,"ip_address":"","comment_id":44357,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543413491","product_id":100020801,"comment_content":"老师我想问下:在同一时间不是应该只有一个线程拿到锁吗?锁释放之后由其他线程争夺锁权限,这样的话为什么会出现事务A等待B释放锁,事务B又会等待事务A释放锁?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430736,"discussion_content":"锁是针对“行”的\n\n他俩现在锁的不是同一行哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543428346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44351,"user_name":"☞","can_delete":false,"product_type":"c1","uid":1302793,"ip_address":"","ucode":"6FAEF05F234D2A","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/09/9483f537.jpg","comment_is_top":false,"comment_ctime":1543412894,"is_pvip":false,"replies":[{"id":"15878","content":"对，应该是“前”<br><br>发起修改了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543428469,"ip_address":"","comment_id":44351,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543412894","product_id":100020801,"comment_content":"老师请问下：<br>        在时刻4时，释放完t1的mdl读锁了，这时候不是意味着t1表备份完了吗，为何这个时候主库的ddl传过来备份的还是ddl后的表结构？？？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430735,"discussion_content":"对，应该是“前”\n\n发起修改了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543428469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44295,"user_name":"wjz1991","can_delete":false,"product_type":"c1","uid":1311687,"ip_address":"","ucode":"D82D744F5A4E6D","user_header":"https://static001.geekbang.org/account/avatar/00/14/03/c7/563345e1.jpg","comment_is_top":false,"comment_ctime":1543402499,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543402499","product_id":100020801,"comment_content":"老师，你好，我想问一下select id from table_name limit 10;时由于没有指定条件，查询出来的结果并不是前10条，但删除delete from table_name limit 10;就是删除前10条，麻烦老师解答一下，谢谢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139800,"discussion_content":"删除应该是根据主键排序吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579318841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44291,"user_name":"j3east","can_delete":false,"product_type":"c1","uid":1304312,"ip_address":"","ucode":"E3640E3CE873B4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKKg0CZ0q2CUcqkm6EeA2iceuicV6b9Kg71etPvyFwrPriaWMOETftvD4Z3MMBxsbBicU38HpDIGAib6ag/132","comment_is_top":false,"comment_ctime":1543401241,"is_pvip":false,"replies":[{"id":"15794","content":"1. Innodb 没有“不开启事务”的更新，没写默认就是单语句事务。<br>2. 正好是你说的这个时机😄<br>3. Insert 和delete也是行锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543406136,"ip_address":"","comment_id":44291,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543401241","product_id":100020801,"comment_content":"老师，假设没有开启事务那么是否会触发行锁？什么时候释放锁？我的理解是行锁依然存在，但锁的释放时机提前到当前语句结束的地方。<br>另外，如果是插入语句或者删除语句的话，锁会提升为表级别么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430714,"discussion_content":"1. Innodb 没有“不开启事务”的更新，没写默认就是单语句事务。\n2. 正好是你说的这个时机😄\n3. Insert 和delete也是行锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543406136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44290,"user_name":"董泽润","can_delete":false,"product_type":"c1","uid":1048718,"ip_address":"","ucode":"0859A6ECCB5473","user_header":"https://static001.geekbang.org/account/avatar/00/10/00/8e/ebe3c8ea.jpg","comment_is_top":false,"comment_ctime":1543400996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543400996","product_id":100020801,"comment_content":"第二种最优，而且我以前 DBA 时都是 delete from t where id&gt;xxx limit xx  这做做的","like_count":0},{"had_liked":false,"id":44286,"user_name":"ajlidue","can_delete":false,"product_type":"c1","uid":1308376,"ip_address":"","ucode":"D6B29E941958E8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er6NXib2NGaTAAEe2KCcibH2FiafOOD73kQdcuAMGrnRib5CDWXum0SWDOM9NnWicbUsDpghmxEmJtpk9w/132","comment_is_top":false,"comment_ctime":1543400428,"is_pvip":false,"replies":[{"id":"15800","content":"Show create 表示这个语句“看过了”表结构。<br><br>表结构数据和表的数据不同，不支持一致性读","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543406603,"ip_address":"","comment_id":44286,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543400428","product_id":100020801,"comment_content":"老师，第三讲说过，在可重复读隔离级别下，事务启动时会创建一个逻辑视图，整个事务存在期都会用这个视图。那为什么在事务启动时如果没有加WITH CONSISTENT SNAPSHOT，假设时刻2 DDL语句到达，导出数据的时候不会报table definition has changed。为什么DDL在show create table之前到达不会报这个错误，show create table是做了什么事情呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430711,"discussion_content":"Show create 表示这个语句“看过了”表结构。\n\n表结构数据和表的数据不同，不支持一致性读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543406603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44232,"user_name":"DotaSeven","can_delete":false,"product_type":"c1","uid":1309178,"ip_address":"","ucode":"B7B8BF0446461D","user_header":"https://static001.geekbang.org/account/avatar/00/13/f9/fa/62682d86.jpg","comment_is_top":false,"comment_ctime":1543390726,"is_pvip":false,"replies":[{"id":"15788","content":"对，5.7.15才有，之前不能配置，固定有deadlock检测","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543404808,"ip_address":"","comment_id":44232,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543390726","product_id":100020801,"comment_content":"innodb_deadlock_detect这个参数，是5.x那个版本才有的吗？我用show variables like &#39;%innodb_deadlock_detect%&#39;;语句没有找到这个参数。如果是5.7与之后版本出现的新参数，希望老师在讲解的时候，能够稍微用（）指出一下。另外，如果，innodb_lock_wait_timeout=5，innodb_deadlock_detect=on，也就是两种策略都用上了，是不是只要innodb_deadlock_detect=on就会直接启动检测死锁，而不管innodb_lock_wait_timeout的设置长短的？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430687,"discussion_content":"对，5.7.15才有，之前不能配置，固定有deadlock检测","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543404808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44216,"user_name":"Elvis","can_delete":false,"product_type":"c1","uid":1308724,"ip_address":"","ucode":"1FDE773C5AA43D","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/34/2ce5e546.jpg","comment_is_top":false,"comment_ctime":1543386487,"is_pvip":false,"replies":[{"id":"15783","content":"如果客户端断开，对应的那个事务会回滚，锁就会放弃了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543404585,"ip_address":"","comment_id":44216,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543386487","product_id":100020801,"comment_content":"请问老师，如果有我有多个node，其中一个node 对数据加了行锁，结果挂掉了，还是只能等待InnoDB自动50S释放锁吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430682,"discussion_content":"如果客户端断开，对应的那个事务会回滚，锁就会放弃了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543404585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44185,"user_name":"王飞","can_delete":false,"product_type":"c1","uid":1312383,"ip_address":"","ucode":"F6BCA86E02AF81","user_header":"","comment_is_top":false,"comment_ctime":1543379882,"is_pvip":false,"replies":[{"id":"16002","content":"但是这个表的备份在Q5就完成了呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543537278,"ip_address":"","comment_id":44185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543379882","product_id":100020801,"comment_content":"请问，答案中的第4步：<br><br>从“时刻 4”开始，备份拿到的是 DDL 前的表结构。<br>没看明白，修改表结构的语句在时刻4已结执行完成了，不理解怎么不是ddl后的表结构，而是前表结构<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430669,"discussion_content":"但是这个表的备份在Q5就完成了呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543537278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44152,"user_name":"Bennet","can_delete":false,"product_type":"c1","uid":1022801,"ip_address":"","ucode":"C85C47A75BA412","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIXYib4bOBtUeLniaqjMNaOY4gDPPbL4hYmv1HYHSPibyHVQlAeWhabABIy0YL7qgOqaa8EibxGSoiaw1w/132","comment_is_top":false,"comment_ctime":1543374848,"is_pvip":false,"replies":[{"id":"15737","content":"08篇刚好可以回答这个问题😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543379960,"ip_address":"","comment_id":44152,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543374848","product_id":100020801,"comment_content":"按照文中提讲到的，如果一个事务执行的 select，另一个执行 update，查询和更新都使用到了同一行的索引 id=x。这两个事务是并发执行吗？还是说跟隔离级别有关系？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430655,"discussion_content":"08篇刚好可以回答这个问题😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543379960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44141,"user_name":"user","can_delete":false,"product_type":"c1","uid":1307295,"ip_address":"","ucode":"3AA2D3DA955B4A","user_header":"https://static001.geekbang.org/account/avatar/00/13/f2/9f/b4af181c.jpg","comment_is_top":false,"comment_ctime":1543373042,"is_pvip":false,"replies":[{"id":"15740","content":"系统会选，同等权重（比如相同类型的事务操作），会优先回滚最后的这个，成本最低","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543380696,"ip_address":"","comment_id":44141,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543373042","product_id":100020801,"comment_content":"主动回滚死锁链条中的某一个事务，让其他事务得以继续执行<br>这个回滚是回滚后面的这个事务吗?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430648,"discussion_content":"系统会选，同等权重（比如相同类型的事务操作），会优先回滚最后的这个，成本最低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543380696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44138,"user_name":"唐名之","can_delete":false,"product_type":"c1","uid":1004394,"ip_address":"","ucode":"F472C71E043E03","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JKKWS6TzhncvAA0p0NDiaATPIvMicSM76vNAg9IG1ibibcJYPAiaicYjZfq4gAV8GRtcTpOibfRD8vzqHBtL0ibmhwQsbg/132","comment_is_top":false,"comment_ctime":1543372776,"is_pvip":false,"replies":[{"id":"15741","content":"每一个是O（n), 全部是平方","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543380759,"ip_address":"","comment_id":44138,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543372776","product_id":100020801,"comment_content":"1000个并发线程，检测死锁的时间复杂度应该是O(N^2)吧，才能等于1000000？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430645,"discussion_content":"每一个是O（n), 全部是平方","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543380759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44133,"user_name":"春困秋乏夏打盹","can_delete":false,"product_type":"c1","uid":1210807,"ip_address":"","ucode":"CCC558EF504F4B","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/b7/989824f7.jpg","comment_is_top":false,"comment_ctime":1543372220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543372220","product_id":100020801,"comment_content":"所以在slave上进行备份的时候，建议，STOP SLAVE SQL_THREAD; START SLAVE SQL_THREAD;","like_count":0},{"had_liked":false,"id":44126,"user_name":"Gary","can_delete":false,"product_type":"c1","uid":1064566,"ip_address":"","ucode":"BD6BD6B9FEE6CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/76/f1f2e161.jpg","comment_is_top":false,"comment_ctime":1543371669,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543371669","product_id":100020801,"comment_content":"三种写法都有适用的场景<br>如果是这个表其他的操作比较少，我会选择第一种方式<br>如果这张表操作比较多，我会选择第二种方式，这种方式持有锁的时间比较短。<br>第三种有并发冲突，如果需要快速删除数据可以选择第三种","like_count":0},{"had_liked":false,"id":44121,"user_name":"崛起的小强","can_delete":false,"product_type":"c1","uid":1008717,"ip_address":"","ucode":"BCDF6F1A0FB055","user_header":"","comment_is_top":false,"comment_ctime":1543370292,"is_pvip":false,"replies":[{"id":"15742","content":"没有DML就不需要加行锁哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543380969,"ip_address":"","comment_id":44121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543370292","product_id":100020801,"comment_content":"请教老师：文章中提到行锁是在InnoDB 事务中需要的时候才加上，那不加事务的DML语句(比如update)会不会加上行锁啊？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430636,"discussion_content":"没有DML就不需要加行锁哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543380969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44081,"user_name":"姚伟","can_delete":false,"product_type":"c1","uid":1324091,"ip_address":"","ucode":"5218AE2384AE92","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/3b/a5fddd35.jpg","comment_is_top":false,"comment_ctime":1543367707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543367707","product_id":100020801,"comment_content":"第二种吧！可以最大限度的降低行锁冲突。","like_count":0},{"had_liked":false,"id":44073,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1056767,"ip_address":"","ucode":"30300D7B752917","user_header":"https://static001.geekbang.org/account/avatar/00/10/1f/ff/aadcf237.jpg","comment_is_top":false,"comment_ctime":1543367288,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543367288","product_id":100020801,"comment_content":"我选第二种，因为我看到我们dba就是这么干的...","like_count":0},{"had_liked":false,"id":44059,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1543366859,"is_pvip":false,"replies":[{"id":"15761","content":"Q5才加，但是show create就先记住了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543402725,"ip_address":"","comment_id":44059,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543366859","product_id":100020801,"comment_content":"Mdl 锁不是在Q3和q4之间才开始加？怎么Q3之前就加了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430616,"discussion_content":"Q5才加，但是show create就先记住了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543402725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44056,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1543366646,"is_pvip":false,"replies":[{"id":"15718","content":"一致性视图之后对DDL暂时没影响，保存点设置之后也是。<br><br>只是“回滚到保存点”这个操作会释放MDL锁","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543371269,"ip_address":"","comment_id":44056,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543366646","product_id":100020801,"comment_content":"设置一致性试图命令之前和之后区别，做保存点前后有啥不一样","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430614,"discussion_content":"一致性视图之后对DDL暂时没影响，保存点设置之后也是。\n\n只是“回滚到保存点”这个操作会释放MDL锁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543371269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44055,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1543366572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543366572","product_id":100020801,"comment_content":"能否解释下语句之间数据库具体发生什么事情，具体语句作用原理，看了几遍没看明白","like_count":0},{"had_liked":false,"id":44043,"user_name":" JJ","can_delete":false,"product_type":"c1","uid":1250967,"ip_address":"","ucode":"45EC52EFFC49FB","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/97/9e342700.jpg","comment_is_top":false,"comment_ctime":1543366311,"is_pvip":false,"replies":[{"id":"15719","content":"最后一个代码块的里面的注释部分","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543371314,"ip_address":"","comment_id":44043,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543366311","product_id":100020801,"comment_content":"请问哪个是时刻1 2 3 4?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430608,"discussion_content":"最后一个代码块的里面的注释部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543371314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44042,"user_name":"小样","can_delete":false,"product_type":"c1","uid":1105414,"ip_address":"","ucode":"08B031FCA6DE7B","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/06/fdfcc996.jpg","comment_is_top":false,"comment_ctime":1543366266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543366266","product_id":100020801,"comment_content":"如果数据表操作不多，直接方案一，如果数据表压力相对较大，选择方案二，极端情况下，方案三，甚至可以再进行压缩，保证数据表的锁不会影响别的更新语句，而且不会占用大量CPU资源的前提下，选择不同的方案进行执行。<br>如果回答不对的地方，请老师指正，辛苦老师","like_count":0},{"had_liked":false,"id":44041,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1543366131,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543366131","product_id":100020801,"comment_content":"t4时刻之前，读取的不是原来没有修改的数据，应该还是ddl之前数据","like_count":0},{"had_liked":false,"id":44027,"user_name":"敏敏","can_delete":false,"product_type":"c1","uid":1120596,"ip_address":"","ucode":"28C8E8899F74D8","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/54/4341f5b7.jpg","comment_is_top":false,"comment_ctime":1543365628,"is_pvip":false,"replies":[{"id":"15714","content":"这个问题没看明白","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543370960,"ip_address":"","comment_id":44027,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1543365628","product_id":100020801,"comment_content":"老师id是主键吗，主键是加的行锁的话id=1 和id=2的时候就不会等待了吧","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430602,"discussion_content":"这个问题没看明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543370960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275023,"discussion_content":"意思是： id=1 是一行数据，id=2是另外一行数据。 这时候会不会锁等待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590648964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44020,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1543365440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543365440","product_id":100020801,"comment_content":"一致性试图那个命令是不是定时检查表的前后结构是否变化","like_count":0},{"had_liked":false,"id":43997,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1543363997,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543363997","product_id":100020801,"comment_content":"binlog 记录的DdL语录不是主表已经完成了表结构修改，从库直接同步就可以了，这和语句顺序有哈关系？","like_count":0},{"had_liked":false,"id":43995,"user_name":"到道可道","can_delete":false,"product_type":"c1","uid":1031181,"ip_address":"","ucode":"12B94B6C26BE0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/0d/00424e81.jpg","comment_is_top":false,"comment_ctime":1543363574,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1543363574","product_id":100020801,"comment_content":"这个要看数据库压力，如果数据库非常空闲，我选方案一，这样操作简单。如果数据库中这张表的压力非常大，我选方案三，但会每执行一条会等待休眠一段时间再执行，一般情况下，会选择方案二，这样产生的行锁记录比较少，且，需计算并发死锁的计算资源不是太多，不知我的理解是否正确，请老师指正。<br>","like_count":0},{"had_liked":false,"id":43980,"user_name":"泉","can_delete":false,"product_type":"c1","uid":1027355,"ip_address":"","ucode":"F3447D3D5D5197","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ad/1b/0c558e7e.jpg","comment_is_top":false,"comment_ctime":1543361129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543361129","product_id":100020801,"comment_content":"我选第二种。<br>第一种，需要锁资源多，事务较大，持有锁时间最长。<br>第三种，多个事务会对同一行产生锁竞争，消耗cpu资源。<br>请指正。","like_count":0},{"had_liked":false,"id":43978,"user_name":"红旗迎东风","can_delete":false,"product_type":"c1","uid":1198261,"ip_address":"","ucode":"3FC8FDEEA78C8B","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/b5/f7bda702.jpg","comment_is_top":false,"comment_ctime":1543360480,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543360480","product_id":100020801,"comment_content":"选第二种，不会有行锁冲突。","like_count":0}]}