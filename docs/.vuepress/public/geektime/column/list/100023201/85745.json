{"id":85745,"title":"CSS排版：从毕升开始，我们就开始用正常流了","content":"<p>你好，我是winter。今天我们来聊聊CSS的正常流。</p><p>我想，在CSS中，大家最讨厌的大概就是排版部分了。因为早年的CSS设计上不能够很好地支持软件排版需求，导致大家需要使用很多黑科技，让很多新人望而却步。</p><p>现在CSS提供了很多种排版方式，我们有很多选项可以选择自己适合的那一种，然而，正常流却是我们绕不开的一种排版。</p><p>我们能够在网上看到关于正常流的各种资料，比如：块级格式化上下文、margin折叠等等……这一系列的概念光是听起来就令人非常头痛。</p><p>所以我相信很多同学一定会奇怪：正常流到底正常在哪里。事实上，我认为正常流本身是简单和符合直觉的东西。</p><p>我们之所以会觉得它奇怪，是因为如果我们从严苛的CSS标准角度去理解正常流，规定排版的算法，就需要引入上述那些复杂的概念。但是，如果我们单纯地从感性认知的层面去理解正常流，它其实是简单的。</p><p>下面，就让我们先抛弃掉所有的已知概念，从感性认知的角度出发，一起去理解一下正常流。</p><h2>正常流的行为</h2><p>首先，我们先从词源来讲一讲排版这件事。</p><p>在毕昇发明活字印刷之前，排版这项工作是不存在的，相应的操作叫做“雕版”。人们要想印刷书籍，就需要依靠雕版工人去手工雕刻印版。</p><p>活字印刷的出现，将排版这个词引入进来，排版是活字印刷的15道工序之一，不论是古代的木质活字印刷，还是近代的铅质活字印刷，排版的过程是由排版工人一个字一个字从字架捡出，再排入版框中。实际上，这个过程就是一个流式处理的过程。</p><!-- [[[read_end]]] --><p>从古代活字印刷开始，到现代的出版行业，再到今天的Web，排版过程其实并没有什么本质的变化，只不过，今天在我们的CSS中，排版需要处理的内容，不再是简单的大小相同的木字或者铅字，而是有着不同字体和字号的富文本，以及插入在富文本中大小不等的盒。</p><p>并且，在这些过程中，都会有一个正常流的存在。那么，正常流是什么样的呢？</p><p><strong>我们可以用一句话来描述正常流的排版行为，那就是：依次排列，排不下了换行。</strong>这个操作很简单吧，我想，任何一个不懂排版的人都会将其作为排版时的第一反应。</p><p>理解了正常流的基本概念，剩下的功能只需要在它的基础上延伸一下就好。</p><p>在正常流基础上，我们有float相关规则，使得一些盒占据了正常流需要的空间，我们可以把float理解为“文字环绕”。</p><p><img src=\"https://static001.geekbang.org/resource/image/af/65/aff7250eac6064158021aea86dd4ac65.png?wh=808*424\" alt=\"\"></p><p>我们还有vertical-align相关规则规定了如何在垂直方向对齐盒。vertical-align相关规则看起来复杂，但是实际上，基线、文字顶/底、行顶/底都是我们正常书写文字时需要用到的概念，只是我们平时不一定会总结它们。</p><p>下图展示了在不同的vertical-align设置时，盒与文字是如何混合排版的。为了方便你理解，我们用代码给大家标注了基线、文字顶/底、行顶/底等概念。</p><p><img src=\"https://static001.geekbang.org/resource/image/aa/e3/aa6611b00f71f606493f165294410ee3.png?wh=1405*164\" alt=\"\"><br>\n（点击大图查看）</p><p>除此之外，margin折叠是很多人非常不理解的一种设计，但是实际上我们可以把margin理解为“一个元素规定了自身周围至少需要的空间”，这样，我们就非常容易理解为什么margin需要折叠了。</p><h2>正常流的原理</h2><p>我们前面描述了正常流的行为，接下来我们要切换一下模式，用比较严谨的姿势来理解一下正常流。</p><p>在CSS标准中，规定了如何排布每一个文字或者盒的算法，这个算法依赖一个排版的“当前状态”，CSS把这个当前状态称为“格式化上下文（formatting context）”。</p><p>我们可以认为排版过程是这样的：</p><blockquote>\n<p>格式化上下文 + 盒/文字 = 位置</p>\n</blockquote><blockquote>\n<p>formatting context + boxes/charater = positions</p>\n</blockquote><p>我们需要排版的盒，是分为块级盒和行内级盒的，所以排版需要分别为它们规定了块级格式化上下文和行内级格式化上下文。</p><p>与正常流一样，如果我们单纯地看格式化上下文，规则其实是非常简单的。</p><p>块级格式化上下文顺次排列元素：</p><p><img src=\"https://static001.geekbang.org/resource/image/a5/e7/a5e1b9a77d9745499f96d25cf0a0dbe7.png?wh=948*519\" alt=\"\"></p><p>行内级格式化上下文顺次排列元素：</p><p><img src=\"https://static001.geekbang.org/resource/image/1c/cf/1ced4fa809b30343df45e559cf0c08cf.png?wh=1027*291\" alt=\"\"></p><p>注意，块级和行内级元素的排版，受文字书写方向的影响，这里我们讲上下左右只是为了方便你直观理解。</p><p>当我们要把正常流中的一个盒或者文字排版，需要分成三种情况处理。</p><ul>\n<li><strong>当遇到块级盒</strong>：排入块级格式化上下文。</li>\n<li><strong>当遇到行内级盒或者文字</strong>：首先尝试排入行内级格式化上下文，如果排不下，那么创建一个行盒，先将行盒排版（行盒是块级，所以到第一种情况），行盒会创建一个行内级格式化上下文。</li>\n<li><strong>遇到float盒</strong>：把盒的顶部跟当前行内级上下文上边缘对齐，然后根据float的方向把盒的对应边缘对到块级格式化上下文的边缘，之后重排当前行盒。</li>\n</ul><p>我们以上讲的都是一个块级格式化上下文中的排版规则，实际上，页面中的布局没有那么简单，一些元素会在其内部创建新的块级格式化上下文，这些元素有：</p><ol>\n<li>浮动元素；</li>\n<li>绝对定位元素；</li>\n<li>非块级但仍能包含块级元素的容器（如inline-blocks, table-cells, table-captions）；</li>\n<li>块级的能包含块级元素的容器，且属性overflow不为visible。</li>\n</ol><p>这里的最后一条比较绕，实际上，我个人喜欢用另一种思路去理解它：</p><p>自身为块级，且overflow为visible的块级元素容器，它的块级格式化上下文和外部的块级格式化上下文发生了融合，也就是说，如果不考虑盒模型相关的属性，这样的元素从排版的角度就好像根本不存在。</p><p>好了，到这里我们已经讲完了正常流的排版详细规则，但是理解规则仅仅是基础，我们还需要掌握一些技巧。</p><h2>正常流的使用技巧</h2><p>现在，我们就一起来动手用实际的例子来研究一下。我们今天来看看等分布局和自适应宽，从这两种经典布局问题入手，一起来探索一下正常流的使用技巧。</p><h3>等分布局问题</h3><p>横向等分布局是一个很常见的需求，按照一般的思路，我们可以使用百分比宽度来解决，我们参考以下代码：</p><pre><code>&lt;div class=&quot;outer&quot;&gt;\n    &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;\n    &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;\n    &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n.inner {\n    width:33.33%;\n    height:300px;\n    display:inline-block;\n    outline:solid 1px blue;\n}\n</code></pre><p>在这段HTML代码中，我们放了三个div，用CSS给它们指定了百分比宽度，并且指定为inline-block。</p><p>但是这段代码执行之后，效果跟我们预期不同，我们可以发现，每个div并非紧挨，中间有空白，这是因为我们为了代码格式加入的换行和空格被HTML当作空格文本，跟inline盒混排了的缘故。</p><p>解决方案是修改HTML代码，去掉空格和换行：</p><pre><code>&lt;div class=&quot;outer&quot;&gt;&lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;&lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;&lt;div class=&quot;inner&quot;&gt;&lt;/div&gt;&lt;/div&gt;\n</code></pre><p>但是这样做影响了源代码的可读性，一个变通的方案是，改变outer中的字号为0。</p><pre><code>.inner {\n    width:33.33%;\n    height:300px;\n    display:inline-block;\n    outline:solid 1px blue;\n    font-size:30px;\n}\n.outer {\n    font-size:0;\n}\n</code></pre><p>在某些浏览器中，因为像素计算精度问题，还是会出现换行，我们给outer添加一个特定宽度：</p><pre><code>.inner {\n    width:33.33%;\n    height:300px;\n    display:inline-block;\n    outline:solid 1px blue;\n}\n.outer {\n    width:101px\n}\n</code></pre><p>这个代码在某些旧版本浏览器中会出现换行。为了保险起见，我们给最后一个div加上一个负的右margin：</p><pre><code>.outer {\n    width:101px\n}\n\n.inner {\n    width:33.33%;\n    height:300px;\n    display:inline-block;\n    outline:solid 1px blue;\n}\n\n.inner:last-child {\n    margin-right:-5px;\n}\n</code></pre><p>这样就可以解决旧版本浏览器的问题了。</p><p>除了使用inline-block，float也可以实现类似的效果，但是float元素只能做顶对齐，不如inline-block灵活。</p><h3>自适应宽</h3><p>我们再来说说自适应宽。在IE6统治浏览器市场的旧时代，自适应宽（一个元素固定宽度，另一个元素填满父容器剩余宽度）是个经典的布局问题，我们现在就看一下如何使用正常流来解决。</p><p>我们首先来看一下问题。</p><pre><code>&lt;div class=&quot;outer&quot;&gt;\n    &lt;div class=&quot;fixed&quot;&gt;&lt;/div&gt;\n    &lt;div class=&quot;auto&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n.fixed {\n    width:200px;\n}\n.fixed, .auto {\n    height:300px;\n    outline:solid 1px blue;\n}\n</code></pre><p>这里fixed这个div宽度已经被指定好，我们需要添加css代码尝试让.auto填满剩余宽度。</p><p>使用正常流解决这个问题的思路是，利用负margin：</p><pre><code>.fixed {\n    display:inline-block;\n    vertical-align:top;\n}\n.auto {\n    margin-left:-200px;\n    width:100%;\n    display:inline-block;\n    vertical-align:top;\n}\n</code></pre><p>但是，这样做会导致auto中的内容位置不对，所以我们还需要使用padding把内容挤出来，最终完整代码如下：</p><pre><code>.fixed {\n    display:inline-block;\n    vertical-align:top;\n}\n.auto {\n    margin-left:-200px;\n    padding-left:200px;\n    box-sizing:border-box;\n    width:100%;\n    display:inline-block;\n    vertical-align:top;\n}\n</code></pre><p>这样就给auto添加了padding-left和box-sizing两个属性。</p><p>总的来说，正常流布局主要是使用inline-block来作为内容的容器，利用块级格式化上下文的纵向排布和行内级格式化上下文的横向排布来完成布局的，我们需要根据需求的横向和纵向排布要求，来选择元素的display属性。</p><h2>结语</h2><p>这次的文章中，我们一起学习了正常流，我们可以用一句话来描述正常流的排版行为，那就是：依次排列，排不下了换行。这也是理解它最简单最源头的方式。</p><p>我们将正常流的知识分成了三个部分。</p><ul>\n<li>\n<p>正常流的行为部分，我们从一些感性认知出发，帮助你从思路和源头上理解正常流的行为。</p>\n</li>\n<li>\n<p>正常流的原理部分，我用更严格的描述方式，给你讲解了CSS标准中规定的正常流排版逻辑。</p>\n</li>\n<li>\n<p>最后的正常流应用部分，我以两个经典布局问题等分布局和自适应宽为例，为你讲解了正常流实际使用的一些技巧。</p>\n</li>\n</ul><p>最后，留给你一个思考题：用JavaScript写一个仅包含inline-block的正常流布局算法。你写好的话，可以留言给我，我们一起讨论。</p><h1>猜你喜欢</h1><p><a href=\"https://time.geekbang.org/course/intro/163?utm_term=zeusMTA7L&amp;utm_source=app&amp;utm_medium=chongxueqianduan&amp;utm_campaign=163-presell\"><img src=\"https://static001.geekbang.org/resource/image/1a/08/1a49758821bdbdf6f0a8a1dc5bf39f08.jpg?wh=1032*330\" alt=\"unpreview\"></a></p>","comments":[{"had_liked":false,"id":75990,"user_name":"Scorpio","can_delete":false,"product_type":"c1","uid":1374652,"ip_address":"","ucode":"2DF4DEC831D4C0","user_header":"https://static001.geekbang.org/account/avatar/00/14/f9/bc/cbc0207b.jpg","comment_is_top":false,"comment_ctime":1552522181,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"461114022853","product_id":100023201,"comment_content":"我大flex天下第一！！！😂 ","like_count":108,"discussions":[{"author":{"id":1446810,"avatar":"https://static001.geekbang.org/account/avatar/00/16/13/9a/842a9dc6.jpg","nickname":"求求你，别卷了！","note":"","ucode":"8F7DE1DF8A0B29","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373636,"discussion_content":"ie：？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620808257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1626711,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqvv0pBus252QCFKlAbPjXsib7iadZxiabfJ6Gz1k0UMD7kV1euoTZqmOVydKyXH4f2YLLJLrVrWqibzQ/132","nickname":"扶苏","note":"","ucode":"A30651C16DE253","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5579,"discussion_content":"我grid宇宙第一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566359674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1765033,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ee/a9/ccd0bd02.jpg","nickname":"追风少年","note":"","ucode":"2EC84A63290E82","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1626711,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqvv0pBus252QCFKlAbPjXsib7iadZxiabfJ6Gz1k0UMD7kV1euoTZqmOVydKyXH4f2YLLJLrVrWqibzQ/132","nickname":"扶苏","note":"","ucode":"A30651C16DE253","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319356,"discussion_content":"grid的兼容性不如flex，顶多宇宙第二","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1604015494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5579,"ip_address":""},"score":319356,"extra":""}]},{"author":{"id":1400962,"avatar":"https://static001.geekbang.org/account/avatar/00/15/60/82/9a43504b.jpg","nickname":"[耶]友超","note":"","ucode":"890572F77C3670","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143,"discussion_content":"哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561172476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76168,"user_name":"AICC","can_delete":false,"product_type":"c1","uid":1020746,"ip_address":"","ucode":"C1D18B1E8B2DCE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/4a/de82f373.jpg","comment_is_top":false,"comment_ctime":1552542490,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"233480776474","product_id":100023201,"comment_content":"试了一下，发现上面第二个例子的代码并不能实现想要的效果<br>首先，因为hmtl代码的换行使得在inline-block的布局下两个盒子不能被放在一行这个通过父级font-size:0可解决<br>第二，由于auto在html的上的顺序是比fixed后面的，想像中的层级是高于fixed的，当auto是一个有背景的盒子，fixed就被完全遮挡了,可以通过transform：translateZ(0)把它提起来","like_count":55,"discussions":[{"author":{"id":1165817,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","nickname":"阿阳","note":"","ucode":"20A35FB86B1C5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370391,"discussion_content":"试了一下，解决方案确实如此。关于第二点，auto想象中的层级高于fixed。请问这方面知识有什么详细的解释么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619398935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75975,"user_name":"William","can_delete":false,"product_type":"c1","uid":1241365,"ip_address":"","ucode":"4499F99B180102","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/15/8fcf8038.jpg","comment_is_top":false,"comment_ctime":1552518719,"is_pvip":true,"discussion_count":2,"race_medal":2,"score":"74566962751","product_id":100023201,"comment_content":"1. 等宽布局，不用外层font-size:0的方法的话，应该是.inner:not(last-child) {<br>  margin-right: -5px;<br>}吧，前面元素均添加一个负外边距抵消掉空格大小。<br>2. 因为也是用inline-block，所以自适应宽需要加上<br>.outer {<br>  font-size: 0;<br>}","like_count":17,"discussions":[{"author":{"id":1866499,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eocfQH5cRopACWggFeRJTqUuWGxA7SnaZib67lBLrPmiazCjePmokk39iaW4urJj7EWMibxnff87v39oA/132","nickname":"Geek_xiaoxiao","note":"","ucode":"B367656944601A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266554,"discussion_content":"方法1貌似没达到效果啊。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589531538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027182,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ac/6e/2a272fce.jpg","nickname":"风语菡","note":"","ucode":"E96C91E47FEF77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265019,"discussion_content":"你这个是正解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589367617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76719,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1552696233,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"65977205673","product_id":100023201,"comment_content":"Sir, have a look at this...<br>https:&#47;&#47;github.com&#47;aimergenge&#47;inline-block-layout","like_count":15,"discussions":[{"author":{"id":1698735,"avatar":"https://static001.geekbang.org/account/avatar/00/19/eb/af/e49af9a8.jpg","nickname":"JC.彦","note":"","ucode":"E87C1420B140F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277618,"discussion_content":"强","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591082132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1328142,"avatar":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","nickname":"-_-|||","note":"","ucode":"94B21594658BF9","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":191714,"discussion_content":"撸码王者","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583029655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79204,"user_name":"ycswaves","can_delete":false,"product_type":"c1","uid":1383823,"ip_address":"","ucode":"5595498FC631A0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZgSq766pXNp6mZsW4Q6XBHy4sXFfZVwbrdOnLiavtIqodRkm2GL970vibJ2xA8wZmPvdwwOIPt9kDV3b6BSPVz7Q/132","comment_is_top":false,"comment_ctime":1553400427,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35913138795","product_id":100023201,"comment_content":".auto {<br>  width: calc(100% - 200px);<br>  &#47;&#47; ... rest of the necessary styles<br>}","like_count":8},{"had_liked":false,"id":172635,"user_name":"王天狗","can_delete":false,"product_type":"c1","uid":1376470,"ip_address":"","ucode":"C0832F5785F44D","user_header":"https://static001.geekbang.org/account/avatar/00/15/00/d6/3eff7492.jpg","comment_is_top":false,"comment_ctime":1579241024,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31644012096","product_id":100023201,"comment_content":"为什么不用 calc 呢","like_count":7},{"had_liked":false,"id":76953,"user_name":"七月有风","can_delete":false,"product_type":"c1","uid":1439990,"ip_address":"","ucode":"B3F82397347C5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/f8/f6/3e2db176.jpg","comment_is_top":false,"comment_ctime":1552783868,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31617554940","product_id":100023201,"comment_content":"在 CSS 标准中，规定了如何排布每一个文字或者盒的算法，这个算法依赖一个排版的“当前状态”，CSS 把这个当前状态称为“格式化上下文（formatting context）”。<br>还是没有理解这句话","like_count":7,"discussions":[{"author":{"id":1231317,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c9/d5/b08a27ed.jpg","nickname":"灵感_idea","note":"","ucode":"E0DBDDFA6040F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":193505,"discussion_content":"我理解应该是会被它相邻的、父元素、自身以及子元素等使用的规则所影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583155372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76410,"user_name":"彧豪","can_delete":false,"product_type":"c1","uid":1161233,"ip_address":"","ucode":"8979F477E0BC5B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/11/26838646.jpg","comment_is_top":false,"comment_ctime":1552606835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27322410611","product_id":100023201,"comment_content":"grid写大的整体的布局框架，flex写一维的可线性化的布局，这两种布局的兼容性已经更好了，再加上一些模块和脚手架打包的时候能自动为你添加浏览器前缀，布局变得越来越容易了","like_count":7},{"had_liked":false,"id":96475,"user_name":"我要飞","can_delete":false,"product_type":"c1","uid":1382243,"ip_address":"","ucode":"2A6A0B1154F30A","user_header":"https://static001.geekbang.org/account/avatar/00/15/17/63/241cb09b.jpg","comment_is_top":false,"comment_ctime":1558431076,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23033267556","product_id":100023201,"comment_content":"一个元素规定了自身周围至少需要的空间,这个解释深有体会,无可挑剔啊<br>","like_count":5},{"had_liked":false,"id":78072,"user_name":"沉默的话唠","can_delete":false,"product_type":"c1","uid":1231254,"ip_address":"","ucode":"90212EF174C6E3","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/96/4577c1ef.jpg","comment_is_top":false,"comment_ctime":1553067178,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"18732936362","product_id":100023201,"comment_content":"为什么我写后面的完整版的，不会自动排布，宽度总是不够。被撑下去了。","like_count":4,"discussions":[{"author":{"id":1346729,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8c/a9/c88b16bf.jpg","nickname":"woowyl","note":"","ucode":"D8C0B9E3D26D45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381546,"discussion_content":"例子里fixed和auto中间有换行和空格，可以参考等分布局里的解决方案。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1625123103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2599446,"avatar":"","nickname":"时秋菲","note":"","ucode":"85CF942C3DCD07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379724,"discussion_content":"怎么感觉这个课程里很多实例都实践不出来，好气，我是操作方式不对吗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624094040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76177,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1552544978,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14437446866","product_id":100023201,"comment_content":"为什么三栏平分的那个样式里，给 outer 添加一个特定宽度和给最后一个 div 加上一个负的右 margin，我用chrome试验的结果，是变成了3个宽度很窄的盒子，而且第三个盒子在第二排？","like_count":3,"discussions":[{"author":{"id":1392600,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/d8/dfeeecf0.jpg","nickname":"梧桐","note":"","ucode":"18BB11B97DB40B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22882,"discussion_content":"我也是","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569722786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172270,"user_name":"梧桐","can_delete":false,"product_type":"c1","uid":1352876,"ip_address":"","ucode":"04333C5BB37C71","user_header":"https://static001.geekbang.org/account/avatar/00/14/a4/ac/fc9e3981.jpg","comment_is_top":false,"comment_ctime":1579143173,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10169077765","product_id":100023201,"comment_content":"给 outer 添加一个特定宽度， 没有看到什么实际效果啊，下面这段代码还是会换行。<br><br>.outer {<br>    width:101px<br>}<br><br>.inner {<br>    width:33.33%;<br>    height:300px;<br>    display:inline-block;<br>    outline:solid 1px blue;<br>}<br><br>.inner:last-child {<br>    margin-right:-5px;<br>}","like_count":2,"discussions":[{"author":{"id":1866499,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eocfQH5cRopACWggFeRJTqUuWGxA7SnaZib67lBLrPmiazCjePmokk39iaW4urJj7EWMibxnff87v39oA/132","nickname":"Geek_xiaoxiao","note":"","ucode":"B367656944601A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266556,"discussion_content":"把:last-child 去掉没有换行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589531716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90675,"user_name":"Sticker","can_delete":false,"product_type":"c1","uid":1029801,"ip_address":"","ucode":"3AFF76DF6FB078","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b6/a9/bdf6f6cd.jpg","comment_is_top":false,"comment_ctime":1556607932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10146542524","product_id":100023201,"comment_content":"感觉自适应宽还是浮动更爽一点！","like_count":2},{"had_liked":false,"id":76477,"user_name":"翰弟","can_delete":false,"product_type":"c1","uid":1144772,"ip_address":"","ucode":"42149ACC75AA08","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/EJZoM46wR6QqTeibhPZsO5wJTeUia4RndGicWfDZLw153WibjsnJXqEtGZICxAa8icb36pDkficTic3FViaySd1z9HmQBw/132","comment_is_top":false,"comment_ctime":1552616477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10142551069","product_id":100023201,"comment_content":"日拱一卒","like_count":2},{"had_liked":false,"id":76118,"user_name":"C阳","can_delete":false,"product_type":"c1","uid":1143548,"ip_address":"","ucode":"21672D7A565353","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/fc/6a799bc4.jpg","comment_is_top":false,"comment_ctime":1552532690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10142467282","product_id":100023201,"comment_content":"自适应宽例子中，是否应该在.fixed, .auto中加入float:left才能正确显示效果呢？","like_count":2},{"had_liked":false,"id":250298,"user_name":"雨落下的声音","can_delete":false,"product_type":"c1","uid":2125497,"ip_address":"","ucode":"C153B7956A349E","user_header":"https://static001.geekbang.org/account/avatar/00/20/6e/b9/9d5aad7a.jpg","comment_is_top":false,"comment_ctime":1601016479,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5895983775","product_id":100023201,"comment_content":"第二个实现：<br>.fixed, .auto {<br>            height: 300px;<br>            outline: solid 1px blue;<br>        }<br><br>        .fixed {<br>            width: 200px;<br>            display: inline-block;<br>            vertical-align: top;<br>        }<br><br>        .auto {<br>            margin-left: -205px;<br>            padding-left: 200px;<br>            box-sizing: border-box;<br>            width: 100%;<br>            display: inline-block;<br>            vertical-align: top;<br>            margin-right: -5px;<br><br>        }","like_count":1},{"had_liked":false,"id":182460,"user_name":"布凡","can_delete":false,"product_type":"c1","uid":1202465,"ip_address":"","ucode":"346FCD332F8BFA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","comment_is_top":false,"comment_ctime":1582791434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5877758730","product_id":100023201,"comment_content":"老师，请教一下，等分的那个例子中，如果&lt;div class=&quot;inner&quot;&gt;内容&lt;&#47;div&gt;中包含内容整个div就会往下掉，这是什么原因导致的呢？另外如果设置.outer { font-size:0;}而.inner中没有设置样式font-size:30px; 这个宽度也不对，能再解释一下吗？","like_count":1},{"had_liked":false,"id":90910,"user_name":"away","can_delete":false,"product_type":"c1","uid":1375012,"ip_address":"","ucode":"E4411B7D42A789","user_header":"https://static001.geekbang.org/account/avatar/00/14/fb/24/d2d64acc.jpg","comment_is_top":false,"comment_ctime":1556720278,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5851687574","product_id":100023201,"comment_content":"formatting context + boxes&#47;charater = positions 单词charater拼写错误，应是charcter","like_count":1,"discussions":[{"author":{"id":1377608,"avatar":"https://static001.geekbang.org/account/avatar/00/15/05/48/a62045cb.jpg","nickname":"芝草晟林💦","note":"","ucode":"4C66F0ABA446C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1498,"discussion_content":"没发现自己也写错了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562665308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90457,"user_name":"a小磊。จุ๊บ 🌹","can_delete":false,"product_type":"c1","uid":1291044,"ip_address":"","ucode":"9F9CE2C46BB7DB","user_header":"https://static001.geekbang.org/account/avatar/00/13/b3/24/1ee8fe0e.jpg","comment_is_top":false,"comment_ctime":1556524384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851491680","product_id":100023201,"comment_content":"最后一个例子刚好是圣杯布局和双飞翼布局的原理","like_count":1},{"had_liked":false,"id":76622,"user_name":"孙清海","can_delete":false,"product_type":"c1","uid":1440043,"ip_address":"","ucode":"959915F8788332","user_header":"https://static001.geekbang.org/account/avatar/00/15/f9/2b/afa78ed8.jpg","comment_is_top":false,"comment_ctime":1552645729,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5847613025","product_id":100023201,"comment_content":"大师你好！今天再看一本书《数据结构与算法描述JavaScript》 偶然发现了熟悉的名字 ，程劭非 大师作序  !感觉好熟悉，哇这不是!!!我要好好看书了……","like_count":1,"discussions":[{"author":{"id":1317034,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/aa/b1dacb64.jpg","nickname":"Rainnut","note":"","ucode":"4BB3DDC637C9C9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":186710,"discussion_content":"我在豆瓣怎么搜不到？可以给个链接吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582708117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339103,"user_name":"*","can_delete":false,"product_type":"c1","uid":1710685,"ip_address":"","ucode":"DB5BA86B4D7E5C","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1a/5d/3c8004c6.jpg","comment_is_top":false,"comment_ctime":1647917996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647917996","product_id":100023201,"comment_content":"思考题好难&#47;(ㄒoㄒ)&#47;~~","like_count":0},{"had_liked":false,"id":247915,"user_name":"不曾相识","can_delete":false,"product_type":"c1","uid":1607957,"ip_address":"","ucode":"0BEDA6BDCA5F56","user_header":"https://static001.geekbang.org/account/avatar/00/18/89/15/381ce65f.jpg","comment_is_top":false,"comment_ctime":1599916442,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599916442","product_id":100023201,"comment_content":"利用定义，模拟了一个- -<br>https:&#47;&#47;github.com&#47;RanmanticOfMonicaKS&#47;inline-block-demo","like_count":0},{"had_liked":false,"id":190429,"user_name":"起而行","can_delete":false,"product_type":"c1","uid":1131399,"ip_address":"","ucode":"4F116B0B740776","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/87/7604d7a4.jpg","comment_is_top":false,"comment_ctime":1584660314,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584660314","product_id":100023201,"comment_content":"js，如果检测到float和每个元素一行的block,就转换成inline-block,前者可以变成固定，后者去自动调整每个元素的间距","like_count":0},{"had_liked":false,"id":158088,"user_name":"Geek_fc9b29","can_delete":false,"product_type":"c1","uid":1465652,"ip_address":"","ucode":"EB122910C20CB2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqIfEYDAV0pko0B4CichMictTiah9ZhEdV1fdIEpmgDaoOlkDl5foSZodCe6sibT1OgeGeKETTT7Wm8gg/132","comment_is_top":false,"comment_ctime":1575331224,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575331224","product_id":100023201,"comment_content":"三等分、自适应宽度，可以考虑强大的table-cell布局，自带bfc","like_count":0},{"had_liked":false,"id":112085,"user_name":"芝草晟林💦","can_delete":false,"product_type":"c1","uid":1377608,"ip_address":"","ucode":"4C66F0ABA446C8","user_header":"https://static001.geekbang.org/account/avatar/00/15/05/48/a62045cb.jpg","comment_is_top":false,"comment_ctime":1562665631,"is_pvip":false,"replies":[{"id":"58917","content":"确实有点难","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1574220748,"ip_address":"","comment_id":112085,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562665631","product_id":100023201,"comment_content":"感觉 formatting那一段有点难理解...","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457568,"discussion_content":"确实有点难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574220748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103849,"user_name":"金海烛光","can_delete":false,"product_type":"c1","uid":1392855,"ip_address":"","ucode":"4F1E7882281436","user_header":"https://static001.geekbang.org/account/avatar/00/15/40/d7/369c9fea.jpg","comment_is_top":false,"comment_ctime":1560533301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560533301","product_id":100023201,"comment_content":"最后一段的代码并不是完整版，说最后代码无法换行的小伙伴要把上面消除空白那部分的css加上","like_count":0},{"had_liked":false,"id":79611,"user_name":"favorlm","can_delete":false,"product_type":"c1","uid":1120997,"ip_address":"","ucode":"CFD52127AA6E1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/e5/6899701e.jpg","comment_is_top":false,"comment_ctime":1553512087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553512087","product_id":100023201,"comment_content":"老师您好，最大的恐惧就是排版，还请赐教，如何克服","like_count":0},{"had_liked":false,"id":78903,"user_name":"Geek_eea87d","can_delete":false,"product_type":"c1","uid":1468248,"ip_address":"","ucode":"CAB85A967898F1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIsxrBp1AmKHq3daCP1D8CmFicm46EIM1aX664U7CXMT5cb6ee4oByp7XZWcqUzUATIlDJIbwqvy2g/132","comment_is_top":false,"comment_ctime":1553275019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553275019","product_id":100023201,"comment_content":"请问下(行盒是块级)，和一个浏览器是如何工作的 阶段四中的(浏览器对行的排版，一般是先行内布局...)这句话的 两个 行是您说的同一个行吗<br><br>","like_count":0},{"had_liked":false,"id":78272,"user_name":"ezra.xu","can_delete":false,"product_type":"c1","uid":1014005,"ip_address":"","ucode":"6C3E11889BC6AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/f5/ae200a94.jpg","comment_is_top":false,"comment_ctime":1553124899,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553124899","product_id":100023201,"comment_content":"老师的每节课都像是在划重点，很赞！","like_count":0},{"had_liked":false,"id":76610,"user_name":"夏超","can_delete":false,"product_type":"c1","uid":1341893,"ip_address":"","ucode":"E66A8C8D802ECB","user_header":"https://static001.geekbang.org/account/avatar/00/14/79/c5/4098108b.jpg","comment_is_top":false,"comment_ctime":1552642678,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552642678","product_id":100023201,"comment_content":"请问老师，JavaScript 的call stack size是多少，这个size的单位是啥，是调用栈中函数的个数，还是 一个存储单位，比如mb  之类的。如果调用栈中就一个函数，这个函数的参数有100万个，浏览器端依然会溢出，看起来是存储单位，但是没得到验证，请教老师","like_count":0},{"had_liked":false,"id":76266,"user_name":"Rushan-Chen","can_delete":false,"product_type":"c1","uid":1374410,"ip_address":"","ucode":"CE514A1205C61D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/XSnxM4uP67kdzzCRW8KxhS5jkHiaaSrgkuLh1Z5BxawvQase46pbGAL4Bngmd3eFHckQml6zexyukFoWpeNENTg/132","comment_is_top":false,"comment_ctime":1552562065,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552562065","product_id":100023201,"comment_content":"自适应宽：https:&#47;&#47;codepen.io&#47;Rushan-Chen&#47;pen&#47;wOyGRJ?editors=1100<br><br>为了左右部分一样高，.fixed 的 box-sizing 也设为了border-box。<br>为了去除元素见的空白符，外层 font-size 设置为0。<br><br>这样两个元素是叠在一起的，如果要设置 background 就可能会覆盖。<br>","like_count":0}]}