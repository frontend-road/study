{"id":9410,"title":"第14讲 | HTTP协议：看个新闻原来这么麻烦","content":"<p>前面讲述完<strong>传输层</strong>，接下来开始讲<strong>应用层</strong>的协议。从哪里开始讲呢，就从咱们最常用的HTTP协议开始。</p><p>HTTP协议，几乎是每个人上网用的第一个协议，同时也是很容易被人忽略的协议。</p><p>既然说看新闻，咱们就先登录 <a href=\"http://www.163.com\">http://www.163.com</a> 。</p><p><a href=\"http://www.163.com\">http://www.163.com</a> 是个URL，叫作<strong>统一资源定位符</strong>。之所以叫统一，是因为它是有格式的。HTTP称为协议，www.163.com是一个域名，表示互联网上的一个位置。有的URL会有更详细的位置标识，例如 <a href=\"http://www.163.com/index.html\">http://www.163.com/index.html</a> 。正是因为这个东西是统一的，所以当你把这样一个字符串输入到浏览器的框里的时候，浏览器才知道如何进行统一处理。</p><h2>HTTP请求的准备</h2><p>浏览器会将www.163.com这个域名发送给DNS服务器，让它解析为IP地址。有关DNS的过程，其实非常复杂，这个在后面专门介绍DNS的时候，我会详细描述，这里我们先不管，反正它会被解析成为IP地址。那接下来是发送HTTP请求吗？</p><p>不是的，HTTP是基于TCP协议的，当然是要先建立TCP连接了，怎么建立呢？还记得第11节讲过的三次握手吗？</p><p>目前使用的HTTP协议大部分都是1.1。在1.1的协议里面，默认是开启了Keep-Alive的，这样建立的TCP连接，就可以在多次请求中复用。</p><!-- [[[read_end]]] --><p>学习了TCP之后，你应该知道，TCP的三次握手和四次挥手，还是挺费劲的。如果好不容易建立了连接，然后就做了一点儿事情就结束了，有点儿浪费人力和物力。</p><h2>HTTP请求的构建</h2><p>建立了连接以后，浏览器就要发送HTTP的请求。</p><p>请求的格式就像这样。</p><p><img src=\"https://static001.geekbang.org/resource/image/85/c1/85ebb0396cbaa45ce00b505229e523c1.jpeg?wh=1920*1080\" alt=\"\"></p><p>HTTP的报文大概分为三大部分。第一部分是<strong>请求行</strong>，第二部分是请求的<strong>首部</strong>，第三部分才是请求的<strong>正文实体</strong>。</p><h3>第一部分：请求行</h3><p>在请求行中，URL就是 <a href=\"http://www.163.com\">http://www.163.com</a> ，版本为HTTP 1.1。这里要说一下的，就是方法。方法有几种类型。</p><p>对于访问网页来讲，最常用的类型就是<strong>GET</strong>。顾名思义，GET就是去服务器获取一些资源。对于访问网页来讲，要获取的资源往往是一个页面。其实也有很多其他的格式，比如说返回一个JSON字符串，到底要返回什么，是由服务器端的实现决定的。</p><p>例如，在云计算中，如果我们的服务器端要提供一个基于HTTP协议的API，获取所有云主机的列表，这就会使用GET方法得到，返回的可能是一个JSON字符串。字符串里面是一个列表，列表里面是一项的云主机的信息。</p><p>另外一种类型叫做<strong>POST</strong>。它需要主动告诉服务端一些信息，而非获取。要告诉服务端什么呢？一般会放在正文里面。正文可以有各种各样的格式。常见的格式也是JSON。</p><p>例如，我们下一节要讲的支付场景，客户端就需要把“我是谁？我要支付多少？我要买啥？”告诉服务器，这就需要通过POST方法。</p><p>再如，在云计算里，如果我们的服务器端，要提供一个基于HTTP协议的创建云主机的API，也会用到POST方法。这个时候往往需要将“我要创建多大的云主机？多少CPU多少内存？多大硬盘？”这些信息放在JSON字符串里面，通过POST的方法告诉服务器端。</p><p>还有一种类型叫<strong>PUT</strong>，就是向指定资源位置上传最新内容。但是，HTTP的服务器往往是不允许上传文件的，所以PUT和POST就都变成了要传给服务器东西的方法。</p><p>在实际使用过程中，这两者还会有稍许的区别。POST往往是用来创建一个资源的，而PUT往往是用来修改一个资源的。</p><p>例如，云主机已经创建好了，我想对这个云主机打一个标签，说明这个云主机是生产环境的，另外一个云主机是测试环境的。那怎么修改这个标签呢？往往就是用PUT方法。</p><p>再有一种常见的就是<strong>DELETE</strong>。这个顾名思义就是用来删除资源的。例如，我们要删除一个云主机，就会调用DELETE方法。</p><h3>第二部分：首部字段</h3><p>请求行下面就是我们的首部字段。首部是key value，通过冒号分隔。这里面，往往保存了一些非常重要的字段。</p><p>例如，<strong>Accept-Charset</strong>，表示<strong>客户端可以接受的字符集</strong>。防止传过来的是另外的字符集，从而导致出现乱码。</p><p>再如，<strong>Content-Type</strong>是指<strong>正文的格式</strong>。例如，我们进行POST的请求，如果正文是JSON，那么我们就应该将这个值设置为JSON。</p><p>这里需要重点说一下的就是<strong>缓存</strong>。为啥要使用缓存呢？那是因为一个非常大的页面有很多东西。</p><p>例如，我浏览一个商品的详情，里面有这个商品的价格、库存、展示图片、使用手册等等。商品的展示图片会保持较长时间不变，而库存会根据用户购买的情况经常改变。如果图片非常大，而库存数非常小，如果我们每次要更新数据的时候都要刷新整个页面，对于服务器的压力就会很大。</p><p>对于这种高并发场景下的系统，在真正的业务逻辑之前，都需要有个接入层，将这些静态资源的请求拦在最外面。</p><p>这个架构的图就像这样。</p><p><img src=\"https://static001.geekbang.org/resource/image/ca/1d/caec3ba1086557cbf694c621e7e01e1d.jpeg?wh=1254*1080\" alt=\"\"></p><p>其中DNS、CDN我在后面的章节会讲。和这一节关系比较大的就是Nginx这一层，它如何处理HTTP协议呢？对于静态资源，有Vanish缓存层。当缓存过期的时候，才会访问真正的Tomcat应用集群。</p><p>在HTTP头里面，<strong>Cache-control</strong>是用来<strong>控制缓存</strong>的。当客户端发送的请求中包含max-age指令时，如果判定缓存层中，资源的缓存时间数值比指定时间的数值小，那么客户端可以接受缓存的资源；当指定max-age值为0，那么缓存层通常需要将请求转发给应用集群。</p><p>另外，<strong>If-Modified-Since</strong>也是一个关于缓存的。也就是说，如果服务器的资源在某个时间之后更新了，那么客户端就应该下载最新的资源；如果没有更新，服务端会返回“304 Not Modified”的响应，那客户端就不用下载了，也会节省带宽。</p><p>到此为止，我们仅仅是拼凑起了HTTP请求的报文格式，接下来，浏览器会把它交给下一层传输层。怎么交给传输层呢？其实也无非是用Socket这些东西，只不过用的浏览器里，这些程序不需要你自己写，有人已经帮你写好了。</p><h2>HTTP请求的发送</h2><p>HTTP协议是基于TCP协议的，所以它使用面向连接的方式发送请求，通过stream二进制流的方式传给对方。当然，到了TCP层，它会把二进制流变成一个个报文段发送给服务器。</p><p>在发送给每个报文段的时候，都需要对方有一个回应ACK，来保证报文可靠地到达了对方。如果没有回应，那么TCP这一层会进行重新传输，直到可以到达。同一个包有可能被传了好多次，但是HTTP这一层不需要知道这一点，因为是TCP这一层在埋头苦干。</p><p>TCP层发送每一个报文的时候，都需要加上自己的地址（即源地址）和它想要去的地方（即目标地址），将这两个信息放到IP头里面，交给IP层进行传输。</p><p>IP层需要查看目标地址和自己是否是在同一个局域网。如果是，就发送ARP协议来请求这个目标地址对应的MAC地址，然后将源MAC和目标MAC放入MAC头，发送出去即可；如果不在同一个局域网，就需要发送到网关，还要需要发送ARP协议，来获取网关的MAC地址，然后将源MAC和网关MAC放入MAC头，发送出去。</p><p>网关收到包发现MAC符合，取出目标IP地址，根据路由协议找到下一跳的路由器，获取下一跳路由器的MAC地址，将包发给下一跳路由器。</p><p>这样路由器一跳一跳终于到达目标的局域网。这个时候，最后一跳的路由器能够发现，目标地址就在自己的某一个出口的局域网上。于是，在这个局域网上发送ARP，获得这个目标地址的MAC地址，将包发出去。</p><p>目标的机器发现MAC地址符合，就将包收起来；发现IP地址符合，根据IP头中协议项，知道自己上一层是TCP协议，于是解析TCP的头，里面有序列号，需要看一看这个序列包是不是我要的，如果是就放入缓存中然后返回一个ACK，如果不是就丢弃。</p><p>TCP头里面还有端口号，HTTP的服务器正在监听这个端口号。于是，目标机器自然知道是HTTP服务器这个进程想要这个包，于是将包发给HTTP服务器。HTTP服务器的进程看到，原来这个请求是要访问一个网页，于是就把这个网页发给客户端。</p><h2>HTTP返回的构建</h2><p>HTTP的返回报文也是有一定格式的。这也是基于HTTP 1.1的。</p><p><img src=\"https://static001.geekbang.org/resource/image/6b/63/6bc37ddcb4e7a61ca3275790820f2263.jpeg?wh=1761*937\" alt=\"\"></p><p>状态码会反映HTTP请求的结果。“200”意味着大吉大利；而我们最不想见的，就是“404”，也就是“服务端无法响应这个请求”。然后，短语会大概说一下原因。</p><p>接下来是返回首部的<strong>key value</strong>。</p><p>这里面，<strong>Retry-After</strong>表示，告诉客户端应该在多长时间以后再次尝试一下。“503错误”是说“服务暂时不再和这个值配合使用”。</p><p>在返回的头部里面也会有<strong>Content-Type</strong>，表示返回的是HTML，还是JSON。</p><p>构造好了返回的HTTP报文，接下来就是把这个报文发送出去。还是交给Socket去发送，还是交给TCP层，让TCP层将返回的HTML，也分成一个个小的段，并且保证每个段都可靠到达。</p><p>这些段加上TCP头后会交给IP层，然后把刚才的发送过程反向走一遍。虽然两次不一定走相同的路径，但是逻辑过程是一样的，一直到达客户端。</p><p>客户端发现MAC地址符合、IP地址符合，于是就会交给TCP层。根据序列号看是不是自己要的报文段，如果是，则会根据TCP头中的端口号，发给相应的进程。这个进程就是浏览器，浏览器作为客户端也在监听某个端口。</p><p>当浏览器拿到了HTTP的报文。发现返回“200”，一切正常，于是就从正文中将HTML拿出来。HTML是一个标准的网页格式。浏览器只要根据这个格式，展示出一个绚丽多彩的网页。</p><p>这就是一个正常的HTTP请求和返回的完整过程。</p><h2>HTTP 2.0</h2><p>当然HTTP协议也在不断的进化过程中，在HTTP1.1基础上便有了HTTP 2.0。</p><p>HTTP 1.1在应用层以纯文本的形式进行通信。每次通信都要带完整的HTTP的头，而且不考虑pipeline模式的话，每次的过程总是像上面描述的那样一去一回。这样在实时性、并发性上都存在问题。</p><p>为了解决这些问题，HTTP 2.0会对HTTP的头进行一定的压缩，将原来每次都要携带的大量key  value在两端建立一个索引表，对相同的头只发送索引表中的索引。</p><p>另外，HTTP 2.0协议将一个TCP的连接中，切分成多个流，每个流都有自己的ID，而且流可以是客户端发往服务端，也可以是服务端发往客户端。它其实只是一个虚拟的通道。流是有优先级的。</p><p>HTTP 2.0还将所有的传输信息分割为更小的消息和帧，并对它们采用二进制格式编码。常见的帧有<strong>Header帧</strong>，用于传输Header内容，并且会开启一个新的流。再就是<strong>Data帧</strong>，用来传输正文实体。多个Data帧属于同一个流。</p><p>通过这两种机制，HTTP 2.0的客户端可以将多个请求分到不同的流中，然后将请求内容拆成帧，进行二进制传输。这些帧可以打散乱序发送， 然后根据每个帧首部的流标识符重新组装，并且可以根据优先级，决定优先处理哪个流的数据。</p><p>我们来举一个例子。</p><p>假设我们的一个页面要发送三个独立的请求，一个获取css，一个获取js，一个获取图片jpg。如果使用HTTP 1.1就是串行的，但是如果使用HTTP 2.0，就可以在一个连接里，客户端和服务端都可以同时发送多个请求或回应，而且不用按照顺序一对一对应。</p><p><img src=\"https://static001.geekbang.org/resource/image/9a/1a/9a54f97931377dyy2fde0de93f4ecf1a.jpeg?wh=1401*1080\" alt=\"\"></p><p>HTTP 2.0其实是将三个请求变成三个流，将数据分成帧，乱序发送到一个TCP连接中。</p><p><img src=\"https://static001.geekbang.org/resource/image/3d/d3/3da001fac5701949b94e51caaee887d3.jpeg?wh=1920*651\" alt=\"\"></p><p>HTTP 2.0成功解决了HTTP 1.1的队首阻塞问题，同时，也不需要通过HTTP 1.x的pipeline机制用多条TCP连接来实现并行请求与响应；减少了TCP连接数对服务器性能的影响，同时将页面的多个数据css、js、 jpg等通过一个数据链接进行传输，能够加快页面组件的传输速度。</p><h2>QUIC协议的“城会玩”</h2><p>HTTP 2.0虽然大大增加了并发性，但还是有问题的。因为HTTP 2.0也是基于TCP协议的，TCP协议在处理包时是有严格顺序的。</p><p>当其中一个数据包遇到问题，TCP连接需要等待这个包完成重传之后才能继续进行。虽然HTTP 2.0通过多个stream，使得逻辑上一个TCP连接上的并行内容，进行多路数据的传输，然而这中间并没有关联的数据。一前一后，前面stream 2的帧没有收到，后面stream 1的帧也会因此阻塞。</p><p>于是，就又到了从TCP切换到UDP，进行“城会玩”的时候了。这就是Google的QUIC协议，接下来我们来看它是如何“城会玩”的。</p><h3>机制一：自定义连接机制</h3><p>我们都知道，一条TCP连接是由四元组标识的，分别是源 IP、源端口、目的 IP、目的端口。一旦一个元素发生变化时，就需要断开重连，重新连接。在移动互联情况下，当手机信号不稳定或者在WIFI和 移动网络切换时，都会导致重连，从而进行再次的三次握手，导致一定的时延。</p><p>这在TCP是没有办法的，但是基于UDP，就可以在QUIC自己的逻辑里面维护连接的机制，不再以四元组标识，而是以一个64位的随机数作为ID来标识，而且UDP是无连接的，所以当IP或者端口变化的时候，只要ID不变，就不需要重新建立连接。</p><h3>机制二：自定义重传机制</h3><p>前面我们讲过，TCP为了保证可靠性，通过使用<strong>序号</strong>和<strong>应答</strong>机制，来解决顺序问题和丢包问题。</p><p>任何一个序号的包发过去，都要在一定的时间内得到应答，否则一旦超时，就会重发这个序号的包。那怎么样才算超时呢？还记得我们提过的<strong>自适应重传算法</strong>吗？这个超时是通过<strong>采样往返时间RTT</strong>不断调整的。</p><p>其实，在TCP里面超时的采样存在不准确的问题。例如，发送一个包，序号为100，发现没有返回，于是再发送一个100，过一阵返回一个ACK101。这个时候客户端知道这个包肯定收到了，但是往返时间是多少呢？是ACK到达的时间减去后一个100发送的时间，还是减去前一个100发送的时间呢？事实是，第一种算法把时间算短了，第二种算法把时间算长了。</p><p>QUIC也有个序列号，是递增的。任何一个序列号的包只发送一次，下次就要加一了。例如，发送一个包，序号是100，发现没有返回；再次发送的时候，序号就是101了；如果返回的ACK  100，就是对第一个包的响应。如果返回ACK  101就是对第二个包的响应，RTT计算相对准确。</p><p>但是这里有一个问题，就是怎么知道包100和包101发送的是同样的内容呢？QUIC定义了一个offset概念。QUIC既然是面向连接的，也就像TCP一样，是一个数据流，发送的数据在这个数据流里面有个偏移量offset，可以通过offset查看数据发送到了哪里，这样只要这个offset的包没有来，就要重发；如果来了，按照offset拼接，还是能够拼成一个流。</p><p><img src=\"https://static001.geekbang.org/resource/image/80/2c/805aa4261yyb30a2a0e5a2f06ce5162c.jpeg?wh=1682*1080\" alt=\"\"></p><h3>机制三：无阻塞的多路复用</h3><p>有了自定义的连接和重传机制，我们就可以解决上面HTTP  2.0的多路复用问题。</p><p>同HTTP 2.0一样，同一条QUIC连接上可以创建多个stream，来发送多个 HTTP 请求。但是，QUIC是基于UDP的，一个连接上的多个stream之间没有依赖。这样，假如stream2丢了一个UDP包，后面跟着stream3的一个UDP包，虽然stream2的那个包需要重传，但是stream3的包无需等待，就可以发给用户。</p><h3>机制四：自定义流量控制</h3><p>TCP的流量控制是通过<strong>滑动窗口协议</strong>。QUIC的流量控制也是通过window_update，来告诉对端它可以接受的字节数。但是QUIC的窗口是适应自己的多路复用机制的，不但在一个连接上控制窗口，还在一个连接中的每个stream控制窗口。</p><p>还记得吗？在TCP协议中，接收端的窗口的起始点是下一个要接收并且ACK的包，即便后来的包都到了，放在缓存里面，窗口也不能右移，因为TCP的ACK机制是基于序列号的累计应答，一旦ACK了一个序列号，就说明前面的都到了，所以只要前面的没到，后面的到了也不能ACK，就会导致后面的到了，也有可能超时重传，浪费带宽。</p><p>QUIC的ACK是基于offset的，每个offset的包来了，进了缓存，就可以应答，应答后就不会重发，中间的空档会等待到来或者重发即可，而窗口的起始位置为当前收到的最大offset，从这个offset到当前的stream所能容纳的最大缓存，是真正的窗口大小。显然，这样更加准确。</p><p><img src=\"https://static001.geekbang.org/resource/image/a6/22/a66563b46906e7708cc69a02d43afb22.jpg?wh=795*422\" alt=\"\"></p><p>另外，还有整个连接的窗口，需要对于所有的stream的窗口做一个统计。</p><h2>小结</h2><p>好了，今天就讲到这里，我们来总结一下：</p><ul>\n<li>\n<p><span class=\"orange\">HTTP协议虽然很常用，也很复杂，重点记住GET、POST、 PUT、DELETE这几个方法，以及重要的首部字段；</span></p>\n</li>\n<li>\n<p><span class=\"orange\">HTTP 2.0通过头压缩、分帧、二进制编码、多路复用等技术提升性能；</span></p>\n</li>\n<li>\n<p><span class=\"orange\">QUIC协议通过基于UDP自定义的类似TCP的连接、重试、多路复用、流量控制技术，进一步提升性能。</span></p>\n</li>\n</ul><p>接下来，给你留两个思考题吧。</p><ol>\n<li>\n<p>QUIC是一个精巧的协议，所以它肯定不止今天我提到的四种机制，你知道它还有哪些吗？</p>\n</li>\n<li>\n<p>这一节主要讲了如何基于HTTP浏览网页，如果要传输比较敏感的银行卡信息，该怎么办呢？</p>\n</li>\n</ol><p>欢迎你留言和我讨论。趣谈网络协议，我们下期见！</p>","neighbors":{"left":{"article_title":"第13讲 | 套接字Socket：Talk is cheap, show me the code","id":9293},"right":{"article_title":"第15讲 | HTTPS协议：点外卖的过程原来这么复杂","id":9492}},"comments":[{"had_liked":false,"id":64376,"user_name":"我那么圆","can_delete":false,"product_type":"c1","uid":1355834,"ip_address":"","ucode":"E4F5F05C5E409B","user_header":"https://static001.geekbang.org/account/avatar/00/14/b0/3a/b942f384.jpg","comment_is_top":false,"comment_ctime":1548758001,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"598549212145","product_id":100007101,"comment_content":"http1.0的队首阻塞<br><br>对于同一个tcp连接，所有的http1.0请求放入队列中，只有前一个请求的响应收到了，然后才能发送下一个请求。<br><br>可见，http1.0的队首组塞发生在客户端。<br><br>3 http1.1的队首阻塞<br><br>对于同一个tcp连接，http1.1允许一次发送多个http1.1请求，也就是说，不必等前一个响应收到，就可以发送下一个请求，这样就解决了http1.0的客户端的队首阻塞。但是，http1.1规定，服务器端的响应的发送要根据请求被接收的顺序排队，也就是说，先接收到的请求的响应也要先发送。这样造成的问题是，如果最先收到的请求的处理时间长的话，响应生成也慢，就会阻塞已经生成了的响应的发送。也会造成队首阻塞。<br><br>可见，http1.1的队首阻塞发生在服务器端。<br><br>4 http2是怎样解决队首阻塞的<br><br>http2无论在客户端还是在服务器端都不需要排队，在同一个tcp连接上，有多个stream，由各个stream发送和接收http请求，各个steam相互独立，互不阻塞。<br><br>只要tcp没有人在用那么就可以发送已经生成的requst或者reponse的数据，在两端都不用等，从而彻底解决了http协议层面的队首阻塞问题。","like_count":139,"discussions":[{"author":{"id":2600745,"avatar":"https://static001.geekbang.org/account/avatar/00/27/af/29/3c27174a.jpg","nickname":"浪客剑心","note":"","ucode":"EDF7C17C8E316B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574613,"discussion_content":"由于存在字数限制，故接上方评论\n3. HTTP2.0协议队首阻塞\n    将一个TCP连接切分成多个 流(stream)\n    HTTP2.0协议底层使用一个TCP连接，上层虚拟stream，采用 多路复用 + 二进制流传输，通过一个TCP连接承载任意数量的双向数据流；C/S两端都不用等待，从而 彻底解决 HTTP协议层面(应用层)的队首阻塞问题\n    但 TCP协议(传输层) 层面的队首阻塞依然存在；虽然 HTTP2.0协议 通过多个 流(stream)，使得逻辑上一个TCP 连接上的请求多路并行传输；然而，虽然流与流之间的数据没有关联\n    但在TCP层，如果先传输的 stream 2 的帧没有收到，则后面传输 stream1 的帧也会因此阻塞(假定先发stream2的数据，后发stream1的数据\n    QUIC协议 基于UDP，彻底解决应用层 &amp; 传输层协议","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1654177364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2600745,"avatar":"https://static001.geekbang.org/account/avatar/00/27/af/29/3c27174a.jpg","nickname":"浪客剑心","note":"","ucode":"EDF7C17C8E316B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574612,"discussion_content":"由于存在字数限制，故接上方评论\n在谈具体问题前，先做分类\n队首阻塞问题分类\n1. 应用层(HTTP协议) 队首阻塞问题\n    HTTP1.1协议，虽然引入keep-alive机制(HTTP长连接)，但客户端在同一时间，针对同一域名下的 TCP连接 依然存在数量限制，超过限制数量的 TCP连接 会阻塞\n    HTTP2.0协议，则采用 多路复用 + 二进制流传输，通过一个TCP连接承载任意数量的双向数据流\n2. 传输层(TCP协议) 队首阻塞问题\n    由于TCP连接的应答是严格有序的，若前面的包没到，则即便后面的包到了，也不能应答；这可能导致后面的包被重传，窗口被“阻塞”在队首，这就是传输层的队首阻塞\n    因此，不论是HTTP1.1协议还是HTTP2.0协议，在传输层都是基于TCP协议，因此，传输层(TCP协议) 的队首阻塞问题对于HTTP1.x &amp; 2.0协议都存在\nHTTP协议(应用层)队首阻塞问题\n1. HTTP1.0协议队首阻塞\n    每次请求都需要重新建立连接，即，三次握手🤝\n    对于同一个TCP连接，HTTP1.0将所有请求放到队列中，只有前一个请求响应收到，才可发送下一个请求\n    HTTP1.0协议队首阻塞发生在 客户端\n2. HTTP1.1协议队首阻塞    \n    对于同一个TCP连接，HTTP1.1允许发送多个HTTP1.1请求(keep-alive机制)，即，建立一次连接，传输多次复用\n    1. 若 仅开启keep-alive，未开启pipeline模式\n        一个请求响应完毕后，下一个请求才能发送，若请求阻塞，则后面的所有请求都会受影响\n        此时，HTTP1.1协议 队首阻塞仍发生在 客户端\n    2. 若 仅开启keep-alive，且开启pipeline模式\n        不必等到前一个请求的响应收到，便可发送下一个请求；解决 HTTP1.0协议 队首阻塞发生在 客户端 的问题；但同时HTTP1.1协议规定，先接收到的请求的响应也要先发送；然而，若前一个请求处理特别慢，则后面的请求即使处理完毕，也要等待\n        此时，HTTP1.1协议 队首阻塞发生在 服务端","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1654177351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1126946,"avatar":"https://static001.geekbang.org/account/avatar/00/11/32/22/abb7bfe3.jpg","nickname":"kebishuai","note":"","ucode":"955655E3D2C06C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351095,"discussion_content":"http1.1解决队首阻塞问题需要区分模式：\n1. 非pipeline模式\n同一个tcp连接在同一时间只能处理一个http请求（与http1.0一样），并没有解决http1.0的客户端客户端阻塞问题。\n2. pipeline模式\n同一个tcp连接可以发送多个http请求，但是服务端会依照请求顺序进行返回，存在服务端阻塞问题。\nps：由于pipeline有诸多问题所以通常不开启pipeline模式","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1614153009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2600745,"avatar":"https://static001.geekbang.org/account/avatar/00/27/af/29/3c27174a.jpg","nickname":"浪客剑心","note":"","ucode":"EDF7C17C8E316B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574611,"discussion_content":"此处结合本篇的评论&amp;笔记&amp;其他网络资料以及个人理解，针对队首阻塞问题做一个总结性说明(纰漏之处，还请指教)\n首先需要明确几个概念，以更好说明下文：\n1. HTTP1.1协议pipeline模式\npipeline模式，即客户端 可以“流水线化”请求，即，在同一个TCP 连接上，发送多个请求而无需等待每个响应，服务端 必须按照与收到请求的相同顺序来向这些请求发送响应\n注: pipeline模式 是基于 keep-alive(HTTP长连接) 实现的\n2. HTTP长连接(keep-alive) 与 TCP长连接(KeepAlive)\n   2.1 HTTP长连接(keep-alive)\n       一般用带中划线英文keep-alive表示，强调建立一次连接(TCP3次握手🤝)，传输多次复用\n      a. 未开启pipeline模式: 一个请求响应完毕后，下一个请求才能发送，如果请求阻塞，则后面的所有请求都会受影响\n      b. 开启pipeline模式: 一个请求发送完毕后，无需等待响应，便可发送下一个请求；但服务端响应时，只能按照客户端发送请求的顺序进行响应；如果前一个请求处理特别慢，则后面的请求即使处理完毕，也要等待\n  2.2 TCP长连接(KeepAlive)\n      一般用英文KeepAlive表示，侧重在保持客户端和服务端的连接\n      一方会不定期发送心跳包给另一方；如果发送几次，对方都返回的是RST，而不是ACK，那么就释放当前连接","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1654177266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1231787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/cb/ab/1aac53bf.jpg","nickname":"董航","note":"","ucode":"9CA208FD26F849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546779,"discussion_content":"http2\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642422654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1231787,"avatar":"https://static001.geekbang.org/account/avatar/00/12/cb/ab/1aac53bf.jpg","nickname":"董航","note":"","ucode":"9CA208FD26F849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546778,"discussion_content":"不对吧，http是阻塞的吧，前面的丢包了，后面的就要弃用了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642422644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103654,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d7/26/4bd68042.jpg","nickname":"田永科","note":"","ucode":"8A55D046F4E836","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9641,"discussion_content":"讲的不对呀。头阻塞是说html没有返回时不知道去加载什么资源，这个http2可以使用serverpush解决。http1.0和1.1区别就是连接复用，1.1 keepalive不用每次都新建tcp连接，而是复用。你说的排队是连接超过浏览器设置的最大连接数，浏览器自己排的队，和服务器没关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568199220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1208163,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/63/abb7bfe3.jpg","nickname":"扬～","note":"","ucode":"6FA7D8FE188341","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8672,"discussion_content":"使用 HTTP 1.1 就是串行的。为什么跟你说的矛盾呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568034695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1188176,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/50/265671fd.jpg","nickname":"LGY001","note":"","ucode":"29CA0F9501D3EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1208163,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6f/63/abb7bfe3.jpg","nickname":"扬～","note":"","ucode":"6FA7D8FE188341","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205823,"discussion_content":"服务端按照接收到请求报文的顺序来发送响应报文不是串行吗？还是我哪里理解错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584346496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8672,"ip_address":""},"score":205823,"extra":""}]},{"author":{"id":1352006,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a1/46/3136ac25.jpg","nickname":"是男人就开巴巴托斯","note":"","ucode":"C65873BBB28D05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4911,"discussion_content":"请教协议上服务器端要对reponse排队的话，真正实现上怎么搞？那么复杂？现实中tomcat哪部分代码实现的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565830134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1352006,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a1/46/3136ac25.jpg","nickname":"是男人就开巴巴托斯","note":"","ucode":"C65873BBB28D05","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321776,"discussion_content":"按照tomcat的架构 你想知道连接的部分 看connector部分的endpoint。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604631060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4911,"ip_address":""},"score":321776,"extra":""}]}]},{"had_liked":false,"id":13283,"user_name":"月饼","can_delete":false,"product_type":"c1","uid":1015591,"ip_address":"","ucode":"82A54F57E065B4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/27/03007a5e.jpg","comment_is_top":false,"comment_ctime":1529499328,"is_pvip":false,"discussion_count":18,"race_medal":0,"score":"405256425152","product_id":100007101,"comment_content":"既然quic这么牛逼了干嘛还要tcp？","like_count":94,"discussions":[{"author":{"id":1603203,"avatar":"https://static001.geekbang.org/account/avatar/00/18/76/83/8e0945d3.jpg","nickname":"MCplayer","note":"","ucode":"DC05D91AFF810C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5145,"discussion_content":"习主席说：不能用今天否定昨天","likes_number":78,"is_delete":false,"is_hidden":false,"ctime":1566010619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265232,"discussion_content":"这篇文章能找到答案 https://www.infoq.cn/article/2018/03/weibo-quic\n期中一个原因是：在一些 NAT 网络环境下，UDP 协议会被路由器等中间网络设备禁止","likes_number":22,"is_delete":false,"is_hidden":false,"ctime":1589380504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556310,"discussion_content":"谢谢","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647309321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":265232,"ip_address":""},"score":556310,"extra":""},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556411,"discussion_content":"不客气","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647345938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":556310,"ip_address":""},"score":556411,"extra":""}]},{"author":{"id":1348721,"avatar":"https://static001.geekbang.org/account/avatar/00/14/94/71/e8ec9843.jpg","nickname":"鹅鹅鹅","note":"","ucode":"C6372567C83738","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4594,"discussion_content":"所以HTTP3.0就基于QUIC了","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1565583901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1078506,"avatar":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","nickname":"kevinsu","note":"","ucode":"BAD46B815D6A5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1348721,"avatar":"https://static001.geekbang.org/account/avatar/00/14/94/71/e8ec9843.jpg","nickname":"鹅鹅鹅","note":"","ucode":"C6372567C83738","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49572,"discussion_content":"真的假的？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573614472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4594,"ip_address":""},"score":49572,"extra":""},{"author":{"id":1095638,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b7/d6/762c3f65.jpg","nickname":"谢国（逍渺）","note":"","ucode":"5303E7923CFE54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1078506,"avatar":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","nickname":"kevinsu","note":"","ucode":"BAD46B815D6A5C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":126707,"discussion_content":"问这个问题的没啥水平啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578533871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":49572,"ip_address":""},"score":126707,"extra":""},{"author":{"id":1078506,"avatar":"https://static001.geekbang.org/account/avatar/00/10/74/ea/10661bdc.jpg","nickname":"kevinsu","note":"","ucode":"BAD46B815D6A5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1095638,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b7/d6/762c3f65.jpg","nickname":"谢国（逍渺）","note":"","ucode":"5303E7923CFE54","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":136788,"discussion_content":"😂我是小白一枚","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579164120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":126707,"ip_address":""},"score":136788,"extra":""}]},{"author":{"id":1071509,"avatar":"https://static001.geekbang.org/account/avatar/00/10/59/95/a164fa5c.jpg","nickname":"soddygo","note":"","ucode":"E1D4D272C95804","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2906,"discussion_content":"tcp是事实上的标准,推行标准很难的,运营商要换老的硬件才行","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1564030526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1124665,"avatar":"https://static001.geekbang.org/account/avatar/00/11/29/39/be9d2e88.jpg","nickname":"边际革命","note":"","ucode":"EC15C0AE4D487A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1071509,"avatar":"https://static001.geekbang.org/account/avatar/00/10/59/95/a164fa5c.jpg","nickname":"soddygo","note":"","ucode":"E1D4D272C95804","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320005,"discussion_content":"和硬件有关系吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604224547,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2906,"ip_address":""},"score":320005,"extra":""}]},{"author":{"id":1220750,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a0/8e/6e4c7509.jpg","nickname":"一","note":"","ucode":"28E0605EA1AE88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":226623,"discussion_content":"原来也有这个迷惑，看了一下评论区的评论明白了，原来主要原因是硬件来不及更新换代。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1586437606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1820475,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c7/3b/2e49fef1.jpg","nickname":"luckyone","note":"","ucode":"1B94D56A026EB9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213451,"discussion_content":"老的路由器不支持，再好也没用啊","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1585095504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1820475,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c7/3b/2e49fef1.jpg","nickname":"luckyone","note":"","ucode":"1B94D56A026EB9","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":559473,"discussion_content":"嗯, 是的, 就是网络设备僵化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648790207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":213451,"ip_address":""},"score":559473,"extra":""}]},{"author":{"id":1385204,"avatar":"https://static001.geekbang.org/account/avatar/00/15/22/f4/9fd6f8f0.jpg","nickname":"核桃","note":"","ucode":"7AB05270CBCCCB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342652,"discussion_content":"类似的问题，http2比1. 1好用，为什么没有大量普及就明白了","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1610765677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2849942,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/7c/96/d430fa56.jpg","nickname":"amber","note":"","ucode":"AA171E49C0DF2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537529,"discussion_content":"同样的问题，IPv6也是很好用，这么多年来也还是推广的不咋样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639098233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1452167,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcwXucibksEYRSYg6icjibzGa7efcMrCsGec2UwibjTd57icqDz0zzkEEOM2pXVju60dibzcnQKPfRkN9g/132","nickname":"Geek_93970d","note":"","ucode":"52AC308BEC7737","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583887,"discussion_content":"https://baijiahao.baidu.com/s?id=1677802258258817086&amp;wfr=spider&amp;for=pc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660464902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559470,"discussion_content":"网络中的网络设备僵化! ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648790166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265215,"discussion_content":"居然搜不到答案！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589380022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96491,"user_name":"起风了001","can_delete":false,"product_type":"c1","uid":1529929,"ip_address":"","ucode":"8DCDBA40B8CC9F","user_header":"","comment_is_top":false,"comment_ctime":1558433577,"is_pvip":false,"replies":[{"id":"49282","content":"赞","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567609562,"ip_address":"","comment_id":96491,"utype":1}],"discussion_count":6,"race_medal":0,"score":"263551438633","product_id":100007101,"comment_content":"以前一直不是很确定Keep-Alive的作用, 今天结合tcp的知识, 终于是彻底搞清楚了. 其实就是浏览器访问服务端之后, 一个http请求的底层是tcp连接, tcp连接要经过三次握手之后,开始传输数据, 而且因为http设置了keep-alive,所以单次http请求完成之后这条tcp连接并不会断开, 而是可以让下一次http请求直接使用.当然keep-alive肯定也有timeout, 超时关闭.","like_count":61,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450895,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567609562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1364465,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d1/f1/ffa93b4b.jpg","nickname":"Wade","note":"","ucode":"0DED9400BEFE7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575063,"discussion_content":"请求格式中：sp  等英文是什么含义？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654577028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1385377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","nickname":"何妨","note":"","ucode":"EC3983BFF7992A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569075,"discussion_content":"我有个问题，如果 tcp 没有配置 keep-alive ，http 的 keep-alive 能生效吗，如果生效，为什么可以生效呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651314023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1905171,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/12/13/e103a6e3.jpg","nickname":"扩散性百万咸面包","note":"","ucode":"6D703D51553B42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221099,"discussion_content":"感觉HTTP2 的多路复用有点像是设置了Keep-alive的智能TCP啊，顺便把数据换成了流的形式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585974100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2314165,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4f/b5/bd6140a5.jpg","nickname":"ARM","note":"","ucode":"788FD0DBD39B94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1905171,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/12/13/e103a6e3.jpg","nickname":"扩散性百万咸面包","note":"","ucode":"6D703D51553B42","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332996,"discussion_content":"这么比还是不对口，应该和HTTP的管线化pipeline比较才对，它也是并发的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607412565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":221099,"ip_address":""},"score":332996,"extra":""}]},{"author":{"id":1136529,"avatar":"https://static001.geekbang.org/account/avatar/00/11/57/91/3a082914.jpg","nickname":"葡萄有点酸","note":"","ucode":"51C3CE1E685D8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7725,"discussion_content":"在我们移动端经常用这种长连接来实现消息推送等功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567652766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13023,"user_name":"鲍勃","can_delete":false,"product_type":"c1","uid":1142312,"ip_address":"","ucode":"9B5E4A5B1A54E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/28/1e307312.jpg","comment_is_top":false,"comment_ctime":1529307720,"is_pvip":false,"discussion_count":13,"race_medal":0,"score":"177622966856","product_id":100007101,"comment_content":"我是做底层的，传输层还是基本能hold住，现在有点扛不住了😂","like_count":41,"discussions":[{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1862,"discussion_content":"搞web的表示一脸懵逼\n","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1563008372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1143211,"avatar":"https://static001.geekbang.org/account/avatar/00/11/71/ab/b19a1ba2.jpg","nickname":"BUG君","note":"","ucode":"B7513F37026E5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2399,"discussion_content":"搞移动端的全程懵逼","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1563537969,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1862,"ip_address":""},"score":2399,"extra":""},{"author":{"id":1570088,"avatar":"https://static001.geekbang.org/account/avatar/00/17/f5/28/898a6947.jpg","nickname":"deepz","note":"","ucode":"4BD23A44CDB384","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1143211,"avatar":"https://static001.geekbang.org/account/avatar/00/11/71/ab/b19a1ba2.jpg","nickname":"BUG君","note":"","ucode":"B7513F37026E5F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49559,"discussion_content":"找到了懵逼树了，我也来充当下子节点，哈哈... 加油","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1573612918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2399,"ip_address":""},"score":49559,"extra":""},{"author":{"id":1535503,"avatar":"https://static001.geekbang.org/account/avatar/00/17/6e/0f/f77018b5.jpg","nickname":"jyx","note":"","ucode":"69B086AC286B37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236766,"discussion_content":"树不平衡，我来补充下右子节点，一起懵逼","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1587121823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1862,"ip_address":""},"score":236766,"extra":""}]},{"author":{"id":1324863,"avatar":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","nickname":"KK","note":"","ucode":"FFC31A3FE3A285","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220597,"discussion_content":"原来不止我一个人觉得有点难。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585903802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321878,"discussion_content":"。。。反过来。。。我这java研发 前边觉得666  后边到数据中心 云计算网络那块就懵逼了 从来不考虑哪些。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604644454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347425,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8f/61/8c28ae2b.jpg","nickname":"D","note":"","ucode":"10A0F1F79156B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304970,"discussion_content":"一般不是越上层越贴近日常吗？相比底层的协议来说，http协议比较常见，也更熟悉一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599727191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2106199,"avatar":"","nickname":"Geek_0786e6","note":"","ucode":"95EA7D2888D5D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296410,"discussion_content":"我是叶节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596534354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265196,"discussion_content":"ip层？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589379484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1107398,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e5/c6/11e0f717.jpg","nickname":"苍漠胡杨","note":"","ucode":"E19B685A05F893","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245582,"discussion_content":"加上我，再rebalance下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587687596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13120,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1529382845,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"147558270909","product_id":100007101,"comment_content":"http2.0的多路复用和4g协议的多harq并发类似，quick的关键改进是把Ack的含义给提纯净了，表达的含义是收到了包，而不是tcp的＂期望包＂","like_count":34,"discussions":[{"author":{"id":2849942,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/7c/96/d430fa56.jpg","nickname":"amber","note":"","ucode":"AA171E49C0DF2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537530,"discussion_content":"quick的关键改进是把Ack的含义给提纯净了，表达的含义是收到了包，而不是tcp的＂期望包＂-----很赞啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639098359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":15730,"user_name":"偷代码的bug农","can_delete":false,"product_type":"c1","uid":1132432,"ip_address":"","ucode":"4944C588835967","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/90/6828af58.jpg","comment_is_top":false,"comment_ctime":1531441496,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"108905623896","product_id":100007101,"comment_content":"一窍不通，云里雾里","like_count":25,"discussions":[{"author":{"id":2314165,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4f/b5/bd6140a5.jpg","nickname":"ARM","note":"","ucode":"788FD0DBD39B94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332998,"discussion_content":"正常，因为老师讲的东西有些没有深入讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607412629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1286251,"avatar":"https://static001.geekbang.org/account/avatar/00/13/a0/6b/0a21b2b8.jpg","nickname":"迷羊","note":"","ucode":"85AF8CED3436C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331338,"discussion_content":"先看看入门的教程再来看这个会比较好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606832118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24577,"user_name":"Untitled","can_delete":false,"product_type":"c1","uid":1039464,"ip_address":"","ucode":"8DD6ABA3E81A2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/68/006ba72c.jpg","comment_is_top":false,"comment_ctime":1537151136,"is_pvip":false,"replies":[{"id":"9007","content":"讲tcp的时候讲了，所谓的连接其实是两边的状态，状态如果不在udp层维护，就可以在应用层维护","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1537164971,"ip_address":"","comment_id":24577,"utype":1}],"discussion_count":1,"race_medal":2,"score":"104616366240","product_id":100007101,"comment_content":"QUIC说是基于UDP，无连接的，但是老师又说到是面向连接的，看的晕乎乎的。。","like_count":24,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424042,"discussion_content":"讲tcp的时候讲了，所谓的连接其实是两边的状态，状态如果不在udp层维护，就可以在应用层维护","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537164971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13006,"user_name":"墨萧","can_delete":false,"product_type":"c1","uid":1032229,"ip_address":"","ucode":"07FFC5D1B5C1FA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c0/25/348b4d76.jpg","comment_is_top":false,"comment_ctime":1529285467,"is_pvip":false,"replies":[{"id":"4323","content":"keepalive就不用","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1529305023,"ip_address":"","comment_id":13006,"utype":1}],"discussion_count":2,"race_medal":0,"score":"100313533275","product_id":100007101,"comment_content":"每次http都要经过TCP的三次握手四次挥手吗","like_count":23,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419498,"discussion_content":"keepalive就不用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529305023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2314165,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4f/b5/bd6140a5.jpg","nickname":"ARM","note":"","ucode":"788FD0DBD39B94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330268,"discussion_content":"管线化，建立一次，中间随你http","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606553257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13224,"user_name":"skye","can_delete":false,"product_type":"c1","uid":1027840,"ip_address":"","ucode":"C55C9F52C78A00","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/00/9b49f42b.jpg","comment_is_top":false,"comment_ctime":1529457379,"is_pvip":false,"replies":[{"id":"4442","content":"一个是http层的，一个是tcp层的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1529472044,"ip_address":"","comment_id":13224,"utype":1}],"discussion_count":3,"race_medal":0,"score":"65953966819","product_id":100007101,"comment_content":"“一前一后，前面 stream 2 的帧没有收到，后面 stream 1 的帧也会因此阻塞。”这个和队首阻塞的区别是啥，不太明白？","like_count":15,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419583,"discussion_content":"一个是http层的，一个是tcp层的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529472044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2849942,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/7c/96/d430fa56.jpg","nickname":"amber","note":"","ucode":"AA171E49C0DF2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537531,"discussion_content":"http2解决的是应用层的队首阻塞问题；QUIC在http2的基础上不仅解决了应用层的队首阻塞问题，还同时解决了传输层的队首阻塞问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639098503,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1079152,"avatar":"https://static001.geekbang.org/account/avatar/00/10/77/70/466368e1.jpg","nickname":"杰森莫玛","note":"","ucode":"A29AEC27270657","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20079,"discussion_content":"good question","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569254892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":66108,"user_name":"花仙子","can_delete":false,"product_type":"c1","uid":1249216,"ip_address":"","ucode":"9840BF416F1F0F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0f/c0/e6151cce.jpg","comment_is_top":false,"comment_ctime":1549879131,"is_pvip":false,"replies":[{"id":"25967","content":"是的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1551438861,"ip_address":"","comment_id":66108,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48794519387","product_id":100007101,"comment_content":"UDP不用保持连接状态，不用建立更多socket，是不是就说服务端只能凭借客户端的源端口号来判定是客户端哪个应用发送的，是吗？","like_count":11,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438705,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551438861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1990591,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/s4dusuWr2EbMAUklHUSLmFRlmysHJjt7xBBZVrQGMzmTT5Fc4y0hiaRR2svTy5UIZYclGVjmoDj7V7EG8JUsO9A/132","nickname":"光悔","note":"","ucode":"7E87FAF0A7D27A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327473,"discussion_content":"来割韭菜的  http协议讲的一点都不清楚 不详细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605846656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63559,"user_name":"柯察金","can_delete":false,"product_type":"c1","uid":1115149,"ip_address":"","ucode":"F722BF8FCD2C47","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/0d/3dc5683a.jpg","comment_is_top":false,"comment_ctime":1548400342,"is_pvip":false,"replies":[{"id":"25816","content":"太深入就不适合听了，所以定位还是入门","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1551424004,"ip_address":"","comment_id":63559,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48793040598","product_id":100007101,"comment_content":"怎么说呢，感觉听了跟看书效果一样的，比较晦涩。因为平时接触比较多的就是 tcp http ，结果听了感觉对实际开发好像帮助不大，因为都是一个个知识点的感觉，像准备考试。希望能结合实际应用场景，讲解。","like_count":11,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437635,"discussion_content":"太深入就不适合听了，所以定位还是入门","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551424004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319524,"discussion_content":"额 java后端研发。。。感觉老是讲的非常好。。这个咋说 你这么想。。你套到netty上边。。就会发现原理不一样，但是思路很有意思，都是双方解脱，然后依靠某个点来触发。。很有意思。。技术到最后大家的路子都是相通的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604043863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1466033,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/b1/09b9f4e6.jpg","nickname":"马克","note":"","ucode":"66F2991470A20E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":81845,"discussion_content":" 越听不懂越兴奋","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576288798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14014,"user_name":"Summer___J","can_delete":false,"product_type":"c1","uid":1135471,"ip_address":"","ucode":"FF53E15E3FC267","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/6f/6051e0f1.jpg","comment_is_top":false,"comment_ctime":1530144490,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"48774784746","product_id":100007101,"comment_content":"老师，目前QUIC协议的典型应用场景是什么？这个协议听上去比TCP智能，随着技术演进、这个协议已经融合到TCP里面了还是仍然是一个独立的协议？","like_count":11,"discussions":[{"author":{"id":1691109,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","nickname":"虚竹","note":"","ucode":"8D8C96C793724E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":234192,"discussion_content":"HTTP2是基于Google提出的SPDY协议，还未普及，QUIC协议是Google改进自己的SPDY协议搞出来的，HTTP3正是基于Google的QUIC协议，是未来发展方向，目前正在标准化制定阶段，我们很可能会跳过HTTP2直接进入HTTP3","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1586960328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1339168,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6f/20/53cb569d.jpg","nickname":"daydreamer","note":"","ucode":"375D9D4F9A7AF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1691109,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","nickname":"虚竹","note":"","ucode":"8D8C96C793724E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302188,"discussion_content":"现在HTTP/2已经有47.9%的占有率了哦，因为h2对硬件以及操作系统内核有一定的要求，升级需要一定的成本，现在国内外基本处于h2 跟HTTP/1.1混合使用的情况，但是，凡事需要个过程，时间的问题而已。HTTP/2相对于HTTP/1提升有60%左右，反而是HTTP/3目前来看相对于HTTP/2的提升没有那么大。（大厂我只了解google跟weibo上了h3）","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1598835439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":234192,"ip_address":""},"score":302188,"extra":""},{"author":{"id":2849942,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/7c/96/d430fa56.jpg","nickname":"amber","note":"","ucode":"AA171E49C0DF2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1339168,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6f/20/53cb569d.jpg","nickname":"daydreamer","note":"","ucode":"375D9D4F9A7AF6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537532,"discussion_content":"YouTube上的视频流量大部分都是走quic，有时也会走tls；Facebook也在用quic，但在QUIC的具体实现上略微有差别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639098791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302188,"ip_address":""},"score":537532,"extra":""}]},{"author":{"id":1137046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/59/96/11671504.jpg","nickname":"蔡箐菁","note":"","ucode":"550B54F2550718","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373801,"discussion_content":"HTTP 3.0 将会基于 QUIC, 刚 google 到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620877638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1137046,"avatar":"https://static001.geekbang.org/account/avatar/00/11/59/96/11671504.jpg","nickname":"蔡箐菁","note":"","ucode":"550B54F2550718","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387707,"discussion_content":"已经","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628357780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373801,"ip_address":""},"score":387707,"extra":""}]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321886,"discussion_content":"举个例子。。如果你了解过tomcat就知道，tomcat的connector支持spy协议。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604645797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255465,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1603351649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40258057313","product_id":100007101,"comment_content":"网络_14:<br>开始看到文章有点懵：<br>HTTP&#47;2解决了HTTP&#47;1.1队首阻塞问题.但是HTTP2是基于TCP的，TCP严格要求包的顺序，这不是矛盾吗？<br><br>然后研究了一下，发现是不同层的队首阻塞：<br>1. 应用层的队首阻塞(HTTP&#47;1.1-based head of line blocking):<br>HTTP&#47;1.1可以使用多个TCP连接，但对连接数依然有限制，一次请求要等到连接中其他请求完成后才能开始(Pipeline机制也没能解决好这个问题)，所以没有空闲连接的时候请求被阻塞，这是应用层的阻塞。<br>HTTP&#47;2底层使用了一个TCP连接，上层虚拟了stream，HTTP请求跟stream打交道，无需等待前面的请求完成，这确实解决了应用层的队首阻塞问题。<br><br>2. 传输层的队首阻塞(TCP-based head of line blocking):<br>正如文中所述，TCP的应答是严格有序的，如果前面的包没到，即使后面的到了也不能应答，这样可能会导致后面的包被重传，窗口被“阻塞”在队首，这就是传输层的队首阻塞。<br>不管是HTTP&#47;1.1还是HTTP&#47;2，在传输层都是基于TCP，那么TCP层的队首阻塞问题都是存在的(只能由HTTP&#47;3(based on QUIC)来解决了)，另外，HTTP&#47;2用了单个TCP连接，那么在丢包率严重的场景，表现可能比HTTP&#47;1.1更差。","like_count":9},{"had_liked":false,"id":88637,"user_name":"传说中的风一样","can_delete":false,"product_type":"c1","uid":1157010,"ip_address":"","ucode":"690E2FEE5450A0","user_header":"https://static001.geekbang.org/account/avatar/00/11/a7/92/d4ce2462.jpg","comment_is_top":false,"comment_ctime":1555978140,"is_pvip":false,"replies":[{"id":"32047","content":"这里忘了说一下客户端的cache-control机制了，一个是客户端是否本地缓存过期。这里重点强调的类似varnish缓存服务器的行为","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1556197305,"ip_address":"","comment_id":88637,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35915716508","product_id":100007101,"comment_content":"cache control部分讲错了，max–age不是这么用的","like_count":8,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447852,"discussion_content":"这里忘了说一下客户端的cache-control机制了，一个是客户端是否本地缓存过期。这里重点强调的类似varnish缓存服务器的行为","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556197305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342210,"discussion_content":"http缓存的机制还是有点啰嗦的，作者可以单独开一节将。《http权威指南》里最啰嗦的一章就是讲http缓存的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610615460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72597,"user_name":"caohuan","can_delete":false,"product_type":"c1","uid":1256428,"ip_address":"","ucode":"4B092E33F3DF1E","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/ec/af6d0b10.jpg","comment_is_top":false,"comment_ctime":1551675415,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35911413783","product_id":100007101,"comment_content":"本篇所得：1.应用层 http1.0和2.0的使用，url通过DNS转化为IP地址，HTTP是基于TCP协议，TCP需要三次握手 进行连接，四次挥手 断开连接，而QUIC基于 UDP连接，不需要三次握手，节省资源，提高了性能和效率;<br>2.http 包括 请求行 、首部、正文实体，请求行 包含 方法、SP、URL、版本，首部 包含 首部字段名、SP、字段值、cr&#47;if;<br>3.http 很复杂，它基于TCP协议，它包含 get获取资源，put 传输 修改的信息给服务器，post发送 新建的资源 给服务器，delete 删除资源;<br>4.http1.0为串联计算，http2.0可以并联计算，http2.0可以通过 头压缩 分帧、二进制编码、多路复用 来提示性能。<br>5.QUIC协议基于UDP自定义的类型，TCP的连接、重试、多路复用、流量控制 提升性能，对应四个机制，分别为 1）自定义连接机制 2）自定义重传机制 3）无阻塞多路复用 4）自定义流量控制。<br><br>回答老师的问题：第一个问题为提高性能，听老师后面的解答，第二个问题：输送敏感数据 比如银行信息 可以用 加密技术，公钥和私钥 保证安全性。","like_count":8},{"had_liked":false,"id":222393,"user_name":"意无尽","can_delete":false,"product_type":"c1","uid":1234489,"ip_address":"","ucode":"DA179626C46B81","user_header":"https://static001.geekbang.org/account/avatar/00/12/d6/39/6b45878d.jpg","comment_is_top":false,"comment_ctime":1590778005,"is_pvip":false,"replies":[{"id":"83167","content":"谢谢","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1591839407,"ip_address":"","comment_id":222393,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23065614485","product_id":100007101,"comment_content":"哇，竟然坚持到这里了（虽然一半都还不到），虽然前面也有很多不懂。基本上从第二章开时候每一节都会花费一两个小时去理解，但是花费确实值啊，让我一个网络小白慢慢了解了网络的各个方面，感觉像是打开了另一个奇妙的世界！相当赞，后期还要刷第二遍！学完这个必须继续购买趣谈Linux操作系统！感谢刘超老师！","like_count":5,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496775,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591839407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53575,"user_name":"shuifa","can_delete":false,"product_type":"c1","uid":1040063,"ip_address":"","ucode":"636733F5C88A7B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/de/bf/4df4224d.jpg","comment_is_top":false,"comment_ctime":1545697470,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"23020533950","product_id":100007101,"comment_content":"URI 属于 URL 更高层次的抽象，一种字符串文本标准。<br><br>就是说，URI 属于父类，而 URL 属于 URI 的子类。URL 是 URI 的一个子集。<br><br>二者的区别在于，URI 表示请求服务器的路径，定义这么一个资源。而 URL 同时说明要如何访问这个资源（http:&#47;&#47;）。","like_count":5},{"had_liked":false,"id":112778,"user_name":"stark","can_delete":false,"product_type":"c1","uid":1143399,"ip_address":"","ucode":"ADC5C2AE5B97C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/67/aa52812a.jpg","comment_is_top":false,"comment_ctime":1562824906,"is_pvip":false,"replies":[{"id":"46692","content":"tcpdump，其实dump出来没有所谓的流，都是感觉上的流，还不是一个个的网络包","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1566380680,"ip_address":"","comment_id":112778,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18742694090","product_id":100007101,"comment_content":"有个地方不是很明白，就是里面说的流数据，比如，我在实际的应用里怎么查看下这些数据什么，比如像top这样的，怎么查看呢？","like_count":4,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457909,"discussion_content":"tcpdump，其实dump出来没有所谓的流，都是感觉上的流，还不是一个个的网络包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566380680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85354,"user_name":"heliang","can_delete":false,"product_type":"c1","uid":1204188,"ip_address":"","ucode":"DEA624EF88B4C7","user_header":"https://static001.geekbang.org/account/avatar/00/12/5f/dc/d16e0923.jpg","comment_is_top":false,"comment_ctime":1555043000,"is_pvip":false,"replies":[{"id":"49710","content":"是的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567698185,"ip_address":"","comment_id":85354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18734912184","product_id":100007101,"comment_content":"http2.0 并行传输同一个请求不同stream的时候，如果“”前面 stream 2 的帧没有收到，后面 stream1也会阻塞&quot;，是阻塞在tcp重组上吗<br><br>","like_count":4,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446643,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567698185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23572,"user_name":"大灰狼","can_delete":false,"product_type":"c1","uid":1031820,"ip_address":"","ucode":"504276786C8CDB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/8c/a5a3788f.jpg","comment_is_top":false,"comment_ctime":1536508073,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18716377257","product_id":100007101,"comment_content":"quic推动了tls1.3，实现了tcp的序列号，流控，拥塞控制，重传，实现了http2的多路复用，流控等<br>参考infoq文章。<br>在实际进行中间人的过程中，quic是一个很头疼的协议。","like_count":4},{"had_liked":false,"id":14281,"user_name":"张张张 💭","can_delete":false,"product_type":"c1","uid":1132934,"ip_address":"","ucode":"91240B99999C68","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/86/554cc50e.jpg","comment_is_top":false,"comment_ctime":1530260625,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18710129809","product_id":100007101,"comment_content":"那个keepalive不是很理解，如果是这种模式，什么时候连接断开呢，怎么判断的，比如我访问淘宝首页，有很多http请求，是每个请求独立维护一个keepalive吗","like_count":4,"discussions":[{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559477,"discussion_content":"浏览器会为每个域名维护一定数量的连接, 基本上是6个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648791436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1352006,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a1/46/3136ac25.jpg","nickname":"是男人就开巴巴托斯","note":"","ucode":"C65873BBB28D05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4909,"discussion_content":"服务器会自己根据事件和收入数据来维护连接\ninactive超时就关闭","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565829905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13212,"user_name":"雾满杨溪","can_delete":false,"product_type":"c1","uid":1138836,"ip_address":"","ucode":"1EC7A3AFC73F5F","user_header":"https://static001.geekbang.org/account/avatar/00/11/60/94/602b5746.jpg","comment_is_top":false,"comment_ctime":1529456015,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14414357903","product_id":100007101,"comment_content":"http和socket之间有什么关系？","like_count":3,"discussions":[{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559478,"discussion_content":"http是应用层协议, socket是传输层linux的实现吧,  不知道对不对, 不对的话, 希望有人指出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648791494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1352006,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a1/46/3136ac25.jpg","nickname":"是男人就开巴巴托斯","note":"","ucode":"C65873BBB28D05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4910,"discussion_content":"socket是门，应用是房间 来的人房间都找不对 还拉什么呱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565829995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13163,"user_name":"makermade","can_delete":false,"product_type":"c1","uid":1133194,"ip_address":"","ucode":"03386B90CB8F20","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","comment_is_top":false,"comment_ctime":1529417091,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14414318979","product_id":100007101,"comment_content":"服务器某个http应用存在大量fin_wait2怎么解决","like_count":3,"discussions":[{"author":{"id":1352006,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a1/46/3136ac25.jpg","nickname":"是男人就开巴巴托斯","note":"","ucode":"C65873BBB28D05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4912,"discussion_content":"客户端应用没有响应服务器的active close。看看客户端程序显示关闭流的代码怎么做的？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565830249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1352006,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a1/46/3136ac25.jpg","nickname":"是男人就开巴巴托斯","note":"","ucode":"C65873BBB28D05","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25210,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570452861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":4912,"ip_address":""},"score":25210,"extra":""}]}]},{"had_liked":false,"id":13005,"user_name":"楚人","can_delete":false,"product_type":"c1","uid":1136791,"ip_address":"","ucode":"A25527A14BBD6C","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/97/8e14e7d0.jpg","comment_is_top":false,"comment_ctime":1529284320,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14414186208","product_id":100007101,"comment_content":"第13和14节有些难度，需要多看多听几遍","like_count":3},{"had_liked":false,"id":202357,"user_name":"扩散性百万咸面包","can_delete":false,"product_type":"c1","uid":1905171,"ip_address":"","ucode":"6D703D51553B42","user_header":"https://static001.geekbang.org/account/avatar/00/1d/12/13/e103a6e3.jpg","comment_is_top":false,"comment_ctime":1585974170,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10175908762","product_id":100007101,"comment_content":"原文说TCP层把IP信息装进IP头。。<br>正常的不应该是把TCP头装进去吗，然后传给IP层","like_count":2,"discussions":[{"author":{"id":1698197,"avatar":"https://static001.geekbang.org/account/avatar/00/19/e9/95/d751b631.jpg","nickname":"嘿","note":"","ucode":"B2A9A76053D736","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318860,"discussion_content":"看到这，我也好奇，不是在IP层才添加的IP头吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603869212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172002,"user_name":"Angus","can_delete":false,"product_type":"c1","uid":1377467,"ip_address":"","ucode":"7CC3BA1550FB5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/04/bb/5e5c37c1.jpg","comment_is_top":false,"comment_ctime":1579069099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10169003691","product_id":100007101,"comment_content":"我觉得很奇妙的事情是，看起来这么复杂的过程，竟然只要几十ms就可以做完，再想想我打完这行字得多少秒，它得做多少事情。","like_count":2},{"had_liked":false,"id":132559,"user_name":"菜菜","can_delete":false,"product_type":"c1","uid":1243536,"ip_address":"","ucode":"888AC33663B774","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/90/f90903e5.jpg","comment_is_top":false,"comment_ctime":1568165956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10158100548","product_id":100007101,"comment_content":"老师，为什么我看http1.x的pipeline是一条TCP连接，而您写的是多条","like_count":2},{"had_liked":false,"id":129549,"user_name":"程序水果宝","can_delete":false,"product_type":"c1","uid":1371633,"ip_address":"","ucode":"1700DDFE073A56","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","comment_is_top":false,"comment_ctime":1567152983,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10157087575","product_id":100007101,"comment_content":"TCP协议为了防止发送过多的ack消耗大量带宽，采用累计确认机制。而谷歌的QUIC 的 ACK 是基于 offset 的，每个 offset 的包来了，进了缓存，就可以应答。每个offset包都应答，岂不是会大量消耗带宽？<br>","like_count":2,"discussions":[{"author":{"id":2849942,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/7c/96/d430fa56.jpg","nickname":"amber","note":"","ucode":"AA171E49C0DF2A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537539,"discussion_content":"多个offset一起应答吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639100454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91602,"user_name":"ieo","can_delete":false,"product_type":"c1","uid":1138664,"ip_address":"","ucode":"FF313BE156E701","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/e8/94365887.jpg","comment_is_top":false,"comment_ctime":1557059058,"is_pvip":false,"replies":[{"id":"49480","content":"没有keep-alive，每次都要握手，建立tcp连接。有了keep-alive就可以复用tcp连接了","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567674791,"ip_address":"","comment_id":91602,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10146993650","product_id":100007101,"comment_content":"有两个问题，麻烦老师回答下：1:一个页面请求了同一域名下的两个地址，如果没有用keep-alive，三次握手会进行两次吗？如果有了这个设置，就会进行一次吗？<br>2:一个请求发到服务器后，服务器给客户端返回内容时，还要和客户端三次握手吗？如果还需要握手的话，为啥不能用客户端和服务器建立的tcp连接呢？","like_count":2,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448962,"discussion_content":"没有keep-alive，每次都要握手，建立tcp连接。有了keep-alive就可以复用tcp连接了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567674791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559479,"discussion_content":"第二个问题: 不需要再和客户端3次握手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648791794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1352006,"avatar":"https://static001.geekbang.org/account/avatar/00/14/a1/46/3136ac25.jpg","nickname":"是男人就开巴巴托斯","note":"","ucode":"C65873BBB28D05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":4914,"discussion_content":"第一个问题是不是要看客户端的类型吧 浏览器多线程发request\nrequest从哪个四元组指定的连接来 response就从哪写回","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565830560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65402,"user_name":"- -","can_delete":false,"product_type":"c1","uid":1090880,"ip_address":"","ucode":"BACB2763FD2D5D","user_header":"https://static001.geekbang.org/account/avatar/00/10/a5/40/ad00a484.jpg","comment_is_top":false,"comment_ctime":1549335766,"is_pvip":false,"replies":[{"id":"25960","content":"两层，一个是http层，一个是tcp层","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1551438538,"ip_address":"","comment_id":65402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10139270358","product_id":100007101,"comment_content":"“当其中一个数据包遇到问题，TCP 连接需要等待这个包完成重传之后才能继续进行。虽然 HTTP 2.0 通过多个 stream，使得逻辑上一个 TCP 连接上的并行内容，进行多路数据的传输，然而这中间并没有关联的数据。一前一后，前面 stream 2 的帧没有收到，后面 stream 1 的帧也会因此阻塞。” 请问这一段怎么理解？感觉和前面所述“http2.0的乱序传输支持”是不是有些矛盾？","like_count":2,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438438,"discussion_content":"两层，一个是http层，一个是tcp层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551438538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61021,"user_name":"陆培尔","can_delete":false,"product_type":"c1","uid":1095319,"ip_address":"","ucode":"B9AE067272513B","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/97/93e82345.jpg","comment_is_top":false,"comment_ctime":1547604769,"is_pvip":false,"replies":[{"id":"25791","content":"基于UDP","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1551423208,"ip_address":"","comment_id":61021,"utype":1}],"discussion_count":4,"race_medal":0,"score":"10137539361","product_id":100007101,"comment_content":"QUIC协议自定义了连接机制、重传机制和滑动窗口协议，感觉这些都是原来tcp干的活，那为啥QUIC是属于应用层协议而不是传输层呢？应该把QUIC协议加入内核的网络栈而不是做在chrome这样的用户态应用程序里面吧","like_count":2,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436708,"discussion_content":"基于UDP","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551423208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1143211,"avatar":"https://static001.geekbang.org/account/avatar/00/11/71/ab/b19a1ba2.jpg","nickname":"BUG君","note":"","ucode":"B7513F37026E5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2400,"discussion_content":"QUIC协议就是把TCP在传输层做的一些保证可靠传输的行为搬到了应用层去实现， 传输层基于UDP","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1563538209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1905495,"avatar":"","nickname":"Geek_f0bd6b","note":"","ucode":"54C2BD14F77F72","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215537,"discussion_content":"基本功课，这节还需要在听听","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585349931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218937,"avatar":"https://static001.geekbang.org/account/avatar/00/12/99/79/74d4f24f.jpg","nickname":"anker","note":"","ucode":"6EDF1FB9D45238","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":125088,"discussion_content":"因为很多老的机器或者程序不知道quic是啥，所以需要udp保证原来的链路正常","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578473139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36032,"user_name":"tim","can_delete":false,"product_type":"c1","uid":1101698,"ip_address":"","ucode":"181FF04B823DBD","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/82/a3ea8076.jpg","comment_is_top":false,"comment_ctime":1540899281,"is_pvip":false,"replies":[{"id":"12968","content":"是同一个序列号发送两次，也就是说同一个包发送两次","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1541125261,"ip_address":"","comment_id":36032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10130833873","product_id":100007101,"comment_content":"有个问题：<br>文中指出tcp采样不准确。 序列号可以发送一致的。<br><br>但是之前讲的序列号是根据时间来增长的，除非你过去非常长的时间，不然是不可能重复的。<br><br>这个问题不知是我理解序列号的增长策略有问题还是文中作者的推断有问题🤨","like_count":2,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":427737,"discussion_content":"是同一个序列号发送两次，也就是说同一个包发送两次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1541125261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14762,"user_name":"飞鹅普斯","can_delete":false,"product_type":"c1","uid":1143547,"ip_address":"","ucode":"25F809374AD354","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/fb/7e9ccf63.jpg","comment_is_top":false,"comment_ctime":1530638272,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10120572864","product_id":100007101,"comment_content":"获取MAC地址时，局域网内的arp 广播跟发给网关的arp广播的广播内容有什么差异吗？","like_count":2,"discussions":[{"author":{"id":1013145,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/99/f9da15ee.jpg","nickname":"upempty","note":"","ucode":"C7325C121C1180","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45174,"discussion_content":"网关的广播时，ARP字段里的target ip为网关ip地址","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573009379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1801058,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/7b/62/ec94cee4.jpg","nickname":"彭文达","note":"","ucode":"8DCC27EC5AF263","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1013145,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/75/99/f9da15ee.jpg","nickname":"upempty","note":"","ucode":"C7325C121C1180","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414323,"discussion_content":"IP地址不会变吧，是Mac地址不一样吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636721241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":45174,"ip_address":""},"score":414323,"extra":""}]}]},{"had_liked":false,"id":13077,"user_name":"一箭中的","can_delete":false,"product_type":"c1","uid":1025729,"ip_address":"","ucode":"9D18662C5CCF7A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/c1/d4e6147e.jpg","comment_is_top":false,"comment_ctime":1529367374,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"10119301966","product_id":100007101,"comment_content":"敏感信息可以使用https，记得http2天然具备https特性，所以https和http2都可以解决敏感信息问题。","like_count":2,"discussions":[{"author":{"id":1103654,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d7/26/4bd68042.jpg","nickname":"田永科","note":"","ucode":"8A55D046F4E836","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9669,"discussion_content":"协议并没有规定http2必须使用https协议，只是浏览器厂商强制要求必须使用。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568202527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225003,"user_name":"Geek_f7658e","can_delete":false,"product_type":"c1","uid":1898597,"ip_address":"","ucode":"108AA63DEF6A2C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/LWicoUend7QOH6pyXGJyJicAzm5T4TUD8TaicSCHVPJp7sbIicpeArcicZiaMGcQ7uUDWjGZYgVnUqNGFFDVe9h0EV4w/132","comment_is_top":false,"comment_ctime":1591613097,"is_pvip":false,"replies":[{"id":"83018","content":"是一个逻辑的概念，应用层的逻辑概念","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1591754382,"ip_address":"","comment_id":225003,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886580393","product_id":100007101,"comment_content":"刘老师，您好！请问steam是什么？一个在tcp上的应用层程序？","like_count":1,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497688,"discussion_content":"是一个逻辑的概念，应用层的逻辑概念","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591754382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82902,"user_name":"古轩。","can_delete":false,"product_type":"c1","uid":1117613,"ip_address":"","ucode":"BFD3739FFF97F9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0d/ad/3787a71a.jpg","comment_is_top":false,"comment_ctime":1554346252,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5849313548","product_id":100007101,"comment_content":"敏感信息可以通过对报文RSA非对称加密来保证安全性能。","like_count":1},{"had_liked":false,"id":73331,"user_name":"LiBloom","can_delete":false,"product_type":"c1","uid":1073239,"ip_address":"","ucode":"A54E99F6AFBFD3","user_header":"https://static001.geekbang.org/account/avatar/00/10/60/57/83f3a377.jpg","comment_is_top":false,"comment_ctime":1551862177,"is_pvip":false,"replies":[{"id":"50275","content":"浏览器要兼容的，协议里面有协议号","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567838843,"ip_address":"","comment_id":73331,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846829473","product_id":100007101,"comment_content":"请问：http协议有这么多 0.9、1、1.1、2、3 ，浏览器是怎么选择使用哪个协议跟服务器通信的呢？我看1.1开始有了协议协商，那1.1之前浏览器是有一个默认的协议吗？","like_count":1,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442028,"discussion_content":"浏览器要兼容的，协议里面有协议号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567838843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65878,"user_name":"王鹏飞","can_delete":false,"product_type":"c1","uid":1346654,"ip_address":"","ucode":"1CC6DCCF449AFC","user_header":"https://static001.geekbang.org/account/avatar/00/14/8c/5e/eeaada1d.jpg","comment_is_top":false,"comment_ctime":1549717338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5844684634","product_id":100007101,"comment_content":"问个问题：http 请求头 的content type和 enctype有什么区别和联系","like_count":1},{"had_liked":false,"id":61719,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1547781593,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842748889","product_id":100007101,"comment_content":"@哪位不知道keepalive在哪哪位同学，开发者模式打开header那块，你会看到文章讲的几个属性。","like_count":1},{"had_liked":false,"id":55724,"user_name":"Untitled","can_delete":false,"product_type":"c1","uid":1039464,"ip_address":"","ucode":"8DD6ABA3E81A2E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/68/006ba72c.jpg","comment_is_top":false,"comment_ctime":1546269813,"is_pvip":false,"discussion_count":1,"race_medal":2,"score":"5841237109","product_id":100007101,"comment_content":"老师，您好，有个疑惑点：HTTP2.0 3个请求一定要创建3个流吗？每个流里面都要传输一次header帧？理解是要的，提到数据报文里面的请求行要确定方法和URL，3个请求的URL不同，方法类型也可能有差别，因此要分开3个header帧，但请问3个header帧可以放到同一个流里面吗？还是程序需要通过流来确定属于哪个请求的数据？","like_count":1,"discussions":[{"author":{"id":1580358,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","nickname":"Long","note":"","ucode":"D85B99FD0C4B76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42476,"discussion_content":"HTTP/2会压缩头，如果你同时发出多个请求，他们的头是一样的或是相似的，那么，协议会帮你消除重复的部分。这就是所谓的HPACK算法--参见陈皓老师的[http的\n前世今生]","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572678149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":26441,"user_name":"陈天境","can_delete":false,"product_type":"c1","uid":1100792,"ip_address":"","ucode":"FF9EA3ACAAF864","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/f8/f4adadcb.jpg","comment_is_top":false,"comment_ctime":1537602266,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5832569562","product_id":100007101,"comment_content":"刘超，你好，我们最近踩到一个Tomcat8.5的坑，就是HTTP响应本来应该是<br>HTTP&#47;1.1 200 OK<br>但是Tomcat8.5 默认只会返回<br>HTTP&#47;1.1 200<br>也是就是OK没掉了，好奇参考了HTTP协议的rfc文档，按照官方描述，是表示OK其实不是必须的意思吗？<br>https:&#47;&#47;tools.ietf.org&#47;html&#47;rfc7230#section-3.1.2<br>The first line of a response message is the status-line, consisting<br>   of the protocol version, a space (SP), the status code, another<br>   space, a possibly empty textual phrase describing the status code,<br>   and ending with CRLF.","like_count":1,"discussions":[{"author":{"id":1177540,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f7/c4/bd7dd30a.jpg","nickname":"小文","note":"","ucode":"974071FAA5F173","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408444,"discussion_content":"你得叫超哥，要不不回答你😄\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635248637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":14170,"user_name":"Hulk","can_delete":false,"product_type":"c1","uid":1135513,"ip_address":"","ucode":"EB13DBF3702BF6","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/99/3873b659.jpg","comment_is_top":false,"comment_ctime":1530201650,"is_pvip":false,"replies":[{"id":"4793","content":"不一定都需要这个头，看客户端和服务器怎么解析，怎么用","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1530289210,"ip_address":"","comment_id":14170,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5825168946","product_id":100007101,"comment_content":"你好，Accept-Charset是针对字符的编码？如果请求的是文件，那二进制的编码是？","like_count":1,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419896,"discussion_content":"不一定都需要这个头，看客户端和服务器怎么解析，怎么用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530289210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13435,"user_name":"日天君","can_delete":false,"product_type":"c1","uid":1029153,"ip_address":"","ucode":"261B255180046B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/21/6d31d152.jpg","comment_is_top":false,"comment_ctime":1529628584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5824595880","product_id":100007101,"comment_content":"QUIC是面向连接的，建立连接应该要双方约定id，这个过程是怎么做的？","like_count":1},{"had_liked":false,"id":13003,"user_name":"evilKitsch","can_delete":false,"product_type":"c1","uid":1155515,"ip_address":"","ucode":"6A52F637732ED0","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/bb/b46e59b1.jpg","comment_is_top":false,"comment_ctime":1529279337,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5824246633","product_id":100007101,"comment_content":"新人报道😍","like_count":1},{"had_liked":false,"id":360794,"user_name":"kid","can_delete":false,"product_type":"c1","uid":1468801,"ip_address":"广东","ucode":"CE75F01ECD2632","user_header":"https://static001.geekbang.org/account/avatar/00/16/69/81/01c2bde8.jpg","comment_is_top":false,"comment_ctime":1666857317,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666857317","product_id":100007101,"comment_content":"最近有414的错误，是协议规范里规定的还是浏览器限制？","like_count":0},{"had_liked":false,"id":358677,"user_name":"小杰","can_delete":false,"product_type":"c1","uid":2853200,"ip_address":"浙江","ucode":"BBDF8E9F348F65","user_header":"https://static001.geekbang.org/account/avatar/00/2b/89/50/aee9fdab.jpg","comment_is_top":false,"comment_ctime":1664531991,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1664531991","product_id":100007101,"comment_content":"1、https:&#47;&#47;quic.readthedocs.io&#47;zh&#47;latest&#47;A%20QUIC%20Overview.html，去看了quic的官方文档，还有1、链接建立延时，quic将加密与握手结合在一起，使返回为0<br>RTT；2、加密认证，由于tcp是明文传输，所以quic专门使用的全加密。2、下一章就是https了吧。","like_count":0},{"had_liked":false,"id":347915,"user_name":"Wade","can_delete":false,"product_type":"c1","uid":1364465,"ip_address":"","ucode":"0DED9400BEFE7C","user_header":"https://static001.geekbang.org/account/avatar/00/14/d1/f1/ffa93b4b.jpg","comment_is_top":false,"comment_ctime":1654577065,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654577065","product_id":100007101,"comment_content":"请求各种： sp等英文 分别是什么含义？","like_count":0},{"had_liked":false,"id":347573,"user_name":"浪客剑心","can_delete":false,"product_type":"c1","uid":2600745,"ip_address":"","ucode":"EDF7C17C8E316B","user_header":"https://static001.geekbang.org/account/avatar/00/27/af/29/3c27174a.jpg","comment_is_top":false,"comment_ctime":1654164737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654164737","product_id":100007101,"comment_content":"这里补充下HTTP1.1 pipeline模式的概念：<br>客户端 可以“流水线化”请求，即，在同一个TCP 连接上，发送多个请求而无需等待每个响应，服务端 必须按照与收到请求的相同顺序来向这些请求发送响应","like_count":0},{"had_liked":false,"id":347194,"user_name":"Peter","can_delete":false,"product_type":"c1","uid":2425556,"ip_address":"","ucode":"5E57A0FE948966","user_header":"https://static001.geekbang.org/account/avatar/00/25/02/d4/1e0bb504.jpg","comment_is_top":false,"comment_ctime":1653809052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653809052","product_id":100007101,"comment_content":"在 1.1 的协议里面，默认是开启了 Keep-Alive 的 ---&gt; 所以是通过Keep-Alive 来建立三次握手的？","like_count":0},{"had_liked":false,"id":345956,"user_name":"Geek_115bc8","can_delete":false,"product_type":"c1","uid":1673843,"ip_address":"","ucode":"71FBC9F02AFE1B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","comment_is_top":false,"comment_ctime":1652713923,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652713923","product_id":100007101,"comment_content":"这个是大致把http总结了一遍。","like_count":0},{"had_liked":false,"id":344812,"user_name":"肥柴","can_delete":false,"product_type":"c1","uid":2818299,"ip_address":"","ucode":"5A454CA474C971","user_header":"https://static001.geekbang.org/account/avatar/00/2b/00/fb/85b07045.jpg","comment_is_top":false,"comment_ctime":1651803637,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651803637","product_id":100007101,"comment_content":"终于看到不懵逼的地方了 ","like_count":0},{"had_liked":false,"id":332761,"user_name":"深水蓝","can_delete":false,"product_type":"c1","uid":1637933,"ip_address":"","ucode":"3E3B195DE54DE1","user_header":"https://static001.geekbang.org/account/avatar/00/18/fe/2d/e23fc6ee.jpg","comment_is_top":false,"comment_ctime":1643559656,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643559656","product_id":100007101,"comment_content":"早期google的chrome浏览器明显比其他浏览器的速度都快，是不是就是因为QUIC的加持呢？","like_count":0},{"had_liked":false,"id":329181,"user_name":"i_chase","can_delete":false,"product_type":"c1","uid":1795511,"ip_address":"","ucode":"09C41C863F4EA3","user_header":"https://static001.geekbang.org/account/avatar/00/1b/65/b7/058276dc.jpg","comment_is_top":false,"comment_ctime":1641198003,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641198003","product_id":100007101,"comment_content":"QUIC优点：<br>1 通过uuid维护连接状态，ip&#47;port改变不需要重新连接<br>2 超时时间RTT采样准确（序号每次+1，offset不变）<br>3 基于UDP,多个stream不会互相影响阻塞<br>4 滑动窗口更加准确（非按序到达也进行确认），每个stream维护自己的窗口大小","like_count":0},{"had_liked":false,"id":322761,"user_name":"Geek_873fe4","can_delete":false,"product_type":"c1","uid":2076937,"ip_address":"","ucode":"CCA0582A0C5527","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QtSJo6NntUDXe45TLYaTic8WclQ2lFkVQxFGJMQLYtiabMQchSfFebLglFo8rcKiaHEMQOXia4mMOQaE8X1e3F9HqQ/132","comment_is_top":false,"comment_ctime":1637578174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637578174","product_id":100007101,"comment_content":"传输层看得晕晕的，反倒是看到应用层能看得懂了。大概是因为我之前学了极客的另一门http协议课程吧","like_count":0},{"had_liked":false,"id":320132,"user_name":"cv0cv0","can_delete":false,"product_type":"c1","uid":1360093,"ip_address":"","ucode":"93FF9277F03FD0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLEIsgI4ub1VOKWtVOfouAzSqx8Yt8ibQEsAnwNJsJHmuJzzpQqG79HullvYwpic8hgiclgON2GwXSjw/132","comment_is_top":false,"comment_ctime":1636093569,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636093569","product_id":100007101,"comment_content":"如何查看一个网站是用http 2.0和quic传输的？","like_count":0},{"had_liked":false,"id":306108,"user_name":"兔嘟嘟","can_delete":false,"product_type":"c1","uid":2028811,"ip_address":"","ucode":"5A9042B4C7670C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","comment_is_top":false,"comment_ctime":1628358063,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628358063","product_id":100007101,"comment_content":"wiki和官网都说QUIC是传输层协议","like_count":0},{"had_liked":false,"id":304545,"user_name":"Allan","can_delete":false,"product_type":"c1","uid":1310388,"ip_address":"","ucode":"8DA4DBECC2C45C","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/b4/295338e7.jpg","comment_is_top":false,"comment_ctime":1627474502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627474502","product_id":100007101,"comment_content":"网络知识小白，感觉只是听过表面的这些名词，有的还没听过，原理更是不知道，听的也是云里雾里。。。","like_count":0},{"had_liked":false,"id":297284,"user_name":"光悔","can_delete":false,"product_type":"c1","uid":1990591,"ip_address":"","ucode":"7E87FAF0A7D27A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/s4dusuWr2EbMAUklHUSLmFRlmysHJjt7xBBZVrQGMzmTT5Fc4y0hiaRR2svTy5UIZYclGVjmoDj7V7EG8JUsO9A/132","comment_is_top":false,"comment_ctime":1623405401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623405401","product_id":100007101,"comment_content":"两个重要问题被一笔带过了，麻烦能详细讲一下吗，第一个是http请求报文中请求行中的url到底是干什么的？一个是keepAlive的用途。","like_count":0},{"had_liked":false,"id":292058,"user_name":"平头辉辉","can_delete":false,"product_type":"c1","uid":1180283,"ip_address":"","ucode":"9BB2AD9ACD14CE","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/7b/eae23749.jpg","comment_is_top":false,"comment_ctime":1620658460,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620658460","product_id":100007101,"comment_content":"不知道怎么验证你说的对或不对，反正没听懂，怀疑你在乱说","like_count":0},{"had_liked":false,"id":291845,"user_name":"Jesse","can_delete":false,"product_type":"c1","uid":1368038,"ip_address":"","ucode":"727CA882B84DA0","user_header":"https://static001.geekbang.org/account/avatar/00/14/df/e6/bd1b3c0b.jpg","comment_is_top":false,"comment_ctime":1620549252,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620549252","product_id":100007101,"comment_content":"quic协议一点不懂，看不懂了。","like_count":0},{"had_liked":false,"id":291070,"user_name":"Geek_2014ce","can_delete":false,"product_type":"c1","uid":2136469,"ip_address":"","ucode":"167B4CCDA4D5BD","user_header":"https://static001.geekbang.org/account/avatar/00/20/99/95/1e332315.jpg","comment_is_top":false,"comment_ctime":1620006729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620006729","product_id":100007101,"comment_content":"整体内容上还是有深度，有料的。不过感觉很多关键的点没有讲明白。整体听下来就有很多疑惑的点。","like_count":0},{"had_liked":false,"id":282740,"user_name":"钟文娟","can_delete":false,"product_type":"c1","uid":2277775,"ip_address":"","ucode":"22C0B019AB1A28","user_header":"https://static001.geekbang.org/account/avatar/00/22/c1/8f/06db18d6.jpg","comment_is_top":false,"comment_ctime":1615383924,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615383924","product_id":100007101,"comment_content":"TCP 的 ACK 机制是基于序列号的累计应答，一旦 ACK 了一个系列号，就说明前面的都到了，所以只要前面的没到，后面的到了也不能 ACK，这样好处可以合并ack包，但是quic每个接收包都要回ack包，缺点是不是增加了更多的ack包传输","like_count":0},{"had_liked":false,"id":273818,"user_name":"鱼","can_delete":false,"product_type":"c1","uid":1487584,"ip_address":"","ucode":"89EC9CE3AD0281","user_header":"https://static001.geekbang.org/account/avatar/00/16/b2/e0/d856f5a4.jpg","comment_is_top":false,"comment_ctime":1610687038,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610687038","product_id":100007101,"comment_content":"详细的QUIC文档建议参考这篇文章，老师提到的部分只是告诉你QUIC是什么。《技术扫盲：新一代基于UDP的低延时网络传输层协议——QUIC详解》<br>链接:http:&#47;&#47;www.52im.net&#47;thread-1309-1-1.html<br>QUIC官方地址：http:&#47;&#47;www.chromium.org&#47;quic","like_count":0},{"had_liked":false,"id":236677,"user_name":"生物第一","can_delete":false,"product_type":"c1","uid":1145007,"ip_address":"","ucode":"78F4D8C10A0AFE","user_header":"https://static001.geekbang.org/account/avatar/00/11/78/af/f5e68fd6.jpg","comment_is_top":false,"comment_ctime":1595498214,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595498214","product_id":100007101,"comment_content":"问一个问题~<br>如果应用层数据太大，那协议栈的分包是在哪一层或者哪几层？","like_count":0},{"had_liked":false,"id":228100,"user_name":"kid","can_delete":false,"product_type":"c1","uid":1468801,"ip_address":"","ucode":"CE75F01ECD2632","user_header":"https://static001.geekbang.org/account/avatar/00/16/69/81/01c2bde8.jpg","comment_is_top":false,"comment_ctime":1592555542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592555542","product_id":100007101,"comment_content":"get 请求和post 请求 有什么区别呢？  网上大把大把的文献 弄得我有点乱 <br>想听老师正统的回答 或者 给个 url 我去 get 下","like_count":0},{"had_liked":false,"id":225703,"user_name":"Elliot","can_delete":false,"product_type":"c1","uid":1030070,"ip_address":"","ucode":"CC58A6FD2F338C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/b6/17103195.jpg","comment_is_top":false,"comment_ctime":1591837740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591837740","product_id":100007101,"comment_content":"机制四：自定义流量控制。 对于窗口的概念能详细解释下吗？","like_count":0},{"had_liked":false,"id":221529,"user_name":"indeyo","can_delete":false,"product_type":"c1","uid":1008307,"ip_address":"","ucode":"3A9F99727B90DD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/b3/edf0f4d9.jpg","comment_is_top":false,"comment_ctime":1590535458,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590535458","product_id":100007101,"comment_content":"这里面，Retry-After 表示，告诉客户端应该在多长时间以后再次尝试一下。“503 错误”是说“服务暂时不再和这个值配合使用”。<br><br>这里不太懂，意思是如果是503，Retry-After暂时无效的意思吗？<br>查了一下RFC文档，对503的描述如下：<br><br>6.6.4.  503 Service Unavailable<br><br>   The 503 (Service Unavailable) status code indicates that the server<br>   is currently unable to handle the request due to a temporary overload<br>   or scheduled maintenance, which will likely be alleviated after some<br>   delay.  The server MAY send a Retry-After header field<br>   (Section 7.1.3) to suggest an appropriate amount of time for the<br>   client to wait before retrying the request.<br><br>      Note: The existence of the 503 status code does not imply that a<br>      server has to use it when becoming overloaded.  Some servers might<br>      simply refuse the connection.<br><br>理解一下，503是一个服务暂时不可用&#47;负载的状态，可以用Retry-After来告诉用户多久以后重试。<br>看上去，像是支持大家在503的时候使用Retry-After。<br><br>所以这算是实际情况与理论存在一定差距的情况么?","like_count":0},{"had_liked":false,"id":217417,"user_name":"Geek_057464","can_delete":false,"product_type":"c1","uid":1747949,"ip_address":"","ucode":"50E5BFDD96D559","user_header":"","comment_is_top":false,"comment_ctime":1589501662,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589501662","product_id":100007101,"comment_content":"请问tcp怎么开启多个stream，平时用的时候就一个输出流，一个输入流","like_count":0},{"had_liked":false,"id":217258,"user_name":"宋健","can_delete":false,"product_type":"c1","uid":1283082,"ip_address":"","ucode":"7DD1CAB40440C3","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/0a/7f7c9b25.jpg","comment_is_top":false,"comment_ctime":1589450451,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589450451","product_id":100007101,"comment_content":"问题：如果要传输比较敏感的银行卡信息，该怎么办呢？<br>回答：HTTPS可以保证信息安全吧？采用信息加密技术保证信息的安全性。","like_count":0},{"had_liked":false,"id":216169,"user_name":"儘管如此世界依然美麗","can_delete":false,"product_type":"c1","uid":1638731,"ip_address":"","ucode":"B831CF4CF2561A","user_header":"https://static001.geekbang.org/account/avatar/00/19/01/4b/a276c1d0.jpg","comment_is_top":false,"comment_ctime":1589199129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589199129","product_id":100007101,"comment_content":"我想请问一下：在上述所说的，Header帧会开启一个新的流进行传输，传输正文实体的是另一个流，那么TCP的另一端如何得知Data数据所对应的Header呢？通过流的ID吗？如果是的话，那么这个流ID是存放在哪里的？","like_count":0},{"had_liked":false,"id":214070,"user_name":"doraemonext","can_delete":false,"product_type":"c1","uid":1049325,"ip_address":"","ucode":"20B4F81514B750","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/YtfU7SyicGVWNZePKkoiaXt0nDAgD06TEZEsZyeJlhEUaUGpiaqKwXVNOBAplOoGB118SOJysrGjcEFVKaBUIBQOg/132","comment_is_top":false,"comment_ctime":1588649479,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588649479","product_id":100007101,"comment_content":"“TCP 层发送每一个报文的时候，都需要加上自己的地址（即源地址）和它想要去的地方（即目标地址），将这两个信息放到 IP 头里面，交给 IP 层进行传输。”<br><br>老师有个问题想咨询下，加源地址和目标地址应该是 IP 网络层要处理的事情，还是就是在 TCP 层面完成了之后再交给的网络层？","like_count":0},{"had_liked":false,"id":213157,"user_name":"TheSunnyMan","can_delete":false,"product_type":"c1","uid":1915743,"ip_address":"","ucode":"85D5C37977D399","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ACAwW2gejNjQJnKzTQb3GXQibKbWSyRboxWgPU8UFAPicmwHbEHpAMyiaoWy6PSgYrmVtIXqZZhKJc0GDib8J6dycw/132","comment_is_top":false,"comment_ctime":1588318486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588318486","product_id":100007101,"comment_content":"之前抓包分析过quic协议，用Chrome访问他家的视频网站是走的quic协议。还研究使用过v2ray，里面也支持quic传输。 不过针对单向的传输设备，比如关闸貌似这个协议不行。HTTPS over UDP","like_count":0},{"had_liked":false,"id":212267,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1588081621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588081621","product_id":100007101,"comment_content":"QUIC是基于UDP的,那么是否就不需要三次握手了呢?而是直接分配一个随机ID了,是这样吗?","like_count":0},{"had_liked":false,"id":202596,"user_name":"李海涛","can_delete":false,"product_type":"c1","uid":1072401,"ip_address":"","ucode":"89170384B8A483","user_header":"https://static001.geekbang.org/account/avatar/00/10/5d/11/40b47496.jpg","comment_is_top":false,"comment_ctime":1586012860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586012860","product_id":100007101,"comment_content":"刘老师，你好！HTTP 1.1 在应用层以纯文本的形式进行通信，但网页上图片或视频，在浏览器里面查看Response Header里面看到的HTTP 1.1&#47;200 OK。请问这个怎么理解？谢谢","like_count":0},{"had_liked":false,"id":202107,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1324863,"ip_address":"","ucode":"FFC31A3FE3A285","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","comment_is_top":false,"comment_ctime":1585903858,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1585903858","product_id":100007101,"comment_content":"到了这一章节，原来不止我一个人觉得有些难度。是真的越到底层，越陌生呀。基础中蕴含着智慧！哈哈哈哈","like_count":0},{"had_liked":false,"id":198518,"user_name":"这得从我捡到一个鼠标垫开始说起","can_delete":false,"product_type":"c1","uid":1272321,"ip_address":"","ucode":"2FF4347B4E7A9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/01/d9cb531d.jpg","comment_is_top":false,"comment_ctime":1585454750,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585454750","product_id":100007101,"comment_content":"放了好久继续开始看","like_count":0},{"had_liked":false,"id":197099,"user_name":"如歌","can_delete":false,"product_type":"c1","uid":1292419,"ip_address":"","ucode":"727C90CA52CD73","user_header":"https://static001.geekbang.org/account/avatar/00/13/b8/83/7c1ed918.jpg","comment_is_top":false,"comment_ctime":1585357949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585357949","product_id":100007101,"comment_content":"老师，再来一个趣谈 的课程吧，感谢老师，趣谈linux，让我入了个门，作为一个不从事底层开发的人员，趣谈去掉了我很多的疑惑","like_count":0},{"had_liked":false,"id":193622,"user_name":"King-ZJ","can_delete":false,"product_type":"c1","uid":1915385,"ip_address":"","ucode":"7448A4BBB5A118","user_header":"https://static001.geekbang.org/account/avatar/00/1d/39/f9/b946719a.jpg","comment_is_top":false,"comment_ctime":1584935189,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584935189","product_id":100007101,"comment_content":"对于应用层，比如说HTTP协议真的是了解甚少或者说是文盲，虽然平常生活中天天用，却对于其怎么去运作是那么无知。HTTP协议的发展和演进，是这个协议功能的完善，而为了让用户体验更好的服务，QUIC的出现很好地解决了丢包、重传、延时等问题。","like_count":0},{"had_liked":false,"id":193396,"user_name":"Geek_f0bd6b","can_delete":false,"product_type":"c1","uid":1905495,"ip_address":"","ucode":"54C2BD14F77F72","user_header":"","comment_is_top":false,"comment_ctime":1584891728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584891728","product_id":100007101,"comment_content":"TCP详解刚结束，http又出发，真是刺激啊","like_count":0},{"had_liked":false,"id":189100,"user_name":"chenzesam","can_delete":false,"product_type":"c1","uid":1045011,"ip_address":"","ucode":"34E76BB9C7618D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/13/3ee5a9b4.jpg","comment_is_top":false,"comment_ctime":1584455357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584455357","product_id":100007101,"comment_content":"前端需要多学学","like_count":0},{"had_liked":false,"id":153551,"user_name":"flow","can_delete":false,"product_type":"c1","uid":1270302,"ip_address":"","ucode":"B482ACF0E413C7","user_header":"https://static001.geekbang.org/account/avatar/00/13/62/1e/ad721e61.jpg","comment_is_top":false,"comment_ctime":1574257426,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1574257426","product_id":100007101,"comment_content":"HTTP 2.0 虽然大大增加了并发性，但还是有问题的。因为 HTTP 2.0 也是基于 TCP 协议的，TCP 协议在处理包时是有严格顺序的。当其中一个数据包遇到问题，TCP 连接需要等待这个包完成重传之后才能继续进行。虽然 HTTP 2.0 通过多个 stream，使得逻辑上一个 TCP 连接上的并行内容，进行多路数据的传输，然而这中间并没有关联的数据。一前一后，前面 stream 2 的帧没有收到，后面 stream 1 的帧也会因此阻塞。-- 老师, 这里的意思是不是说, http2.0其实只是应用层的改变, 在tcp层还是跟http1.1一样的? 所以假如中间的一个数据包丢了, 由于tcp的累计应答机制, 实际上还是会有阻塞?","like_count":0},{"had_liked":false,"id":148166,"user_name":"渴望做梦","can_delete":false,"product_type":"c1","uid":1398219,"ip_address":"","ucode":"9EB47530A69C91","user_header":"https://static001.geekbang.org/account/avatar/00/15/55/cb/1efe460a.jpg","comment_is_top":false,"comment_ctime":1572953524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572953524","product_id":100007101,"comment_content":"但是，HTTP 的服务器往往是不允许上传文件的<br>老师，你这句话是什么意思，服务器不是可以通过接口上传文件吗？","like_count":0},{"had_liked":false,"id":148049,"user_name":"_stuView","can_delete":false,"product_type":"c1","uid":1244561,"ip_address":"","ucode":"C2D4AAB08515F1","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/91/65ff3154.jpg","comment_is_top":false,"comment_ctime":1572932890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572932890","product_id":100007101,"comment_content":"假如 stream2 丢了一个 UDP 包，后面跟着 stream3 的一个 UDP 包，虽然 stream2 的那个包需要重传，但是 stream3 的包无需等待，就可以发给用户。<br>这一点有点奇怪，既然是使用UDP协议，那怎么还有重传机制呢？","like_count":0},{"had_liked":false,"id":131150,"user_name":"葡萄有点酸","can_delete":false,"product_type":"c1","uid":1136529,"ip_address":"","ucode":"51C3CE1E685D8E","user_header":"https://static001.geekbang.org/account/avatar/00/11/57/91/3a082914.jpg","comment_is_top":false,"comment_ctime":1567652895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567652895","product_id":100007101,"comment_content":"我发现了一个规律 像失败重连 丢包重试 包括keepalive断开 都会有个策略 一般是按照某种算法生成一个超时时长 超过该时长就采取一定的措施","like_count":0},{"had_liked":false,"id":122025,"user_name":"a","can_delete":false,"product_type":"c1","uid":1275158,"ip_address":"","ucode":"6DF2FB37C98BE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/75/16/4dd77397.jpg","comment_is_top":false,"comment_ctime":1565271269,"is_pvip":false,"replies":[{"id":"46335","content":"都是约定呀。","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1566296052,"ip_address":"","comment_id":122025,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565271269","product_id":100007101,"comment_content":"关于post和put方法和我理解的完全不一样.老师说的put是修改数据,post是创建数据.但我一直理解的是post是修改局部数据,put是创建和修改幂等数据,难道我一直都理解错了?","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462062,"discussion_content":"都是约定呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566296052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114696,"user_name":"Geek_98b975","can_delete":false,"product_type":"c1","uid":1481065,"ip_address":"","ucode":"8F8D19A986B811","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BnzAUnic9oAGQQ7BkK3CujP109RAESq4WicDwbUIia1BQhMf8LsVHu3e6YKGaAHicbxnCw8sicUeic2V978ff74t1ReA/132","comment_is_top":false,"comment_ctime":1563366257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563366257","product_id":100007101,"comment_content":"http 2.0有点像sctp呢","like_count":0},{"had_liked":false,"id":108759,"user_name":"蜉蝣","can_delete":false,"product_type":"c1","uid":1229070,"ip_address":"","ucode":"77CF92496855D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/0e/2b987d54.jpg","comment_is_top":false,"comment_ctime":1561876544,"is_pvip":false,"replies":[{"id":"48820","content":"TCP的安全你指啥","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567499429,"ip_address":"","comment_id":108759,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561876544","product_id":100007101,"comment_content":"老师，如你所说：“而 QUIC 以一个 64 位的随机数作为 ID 来标识，即使 IP 或者端口发生变化，只要 ID 不变，就不需要重新建立连接。”<br><br>那我是不是可以认为，QUIC 的安全性比 TCP 低。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456105,"discussion_content":"TCP的安全你指啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567499429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108269,"user_name":"憎爱不关心","can_delete":false,"product_type":"c1","uid":1133580,"ip_address":"","ucode":"A868ACB200C798","user_header":"https://static001.geekbang.org/account/avatar/00/11/4c/0c/ada45f25.jpg","comment_is_top":false,"comment_ctime":1561708536,"is_pvip":false,"replies":[{"id":"48836","content":"完了，等看完后面的，不敢下小电影了","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567500342,"ip_address":"","comment_id":108269,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561708536","product_id":100007101,"comment_content":"看完这一篇 不敢看新闻了。。。","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455894,"discussion_content":"完了，等看完后面的，不敢下小电影了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567500342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101039,"user_name":"追风筝的人","can_delete":false,"product_type":"c1","uid":1488020,"ip_address":"","ucode":"2993D60F94C396","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/94/2796de72.jpg","comment_is_top":false,"comment_ctime":1559704456,"is_pvip":false,"replies":[{"id":"37041","content":"当然","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1560255520,"ip_address":"","comment_id":101039,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559704456","product_id":100007101,"comment_content":"如果要传输银行卡等敏感信息  使用TCP+SSL协议吗？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452786,"discussion_content":"当然","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560255520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100606,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1559605793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559605793","product_id":100007101,"comment_content":"1 http协议是处于应用层的协议，一般的url是统一资源定位符，http代表了http协议，后面的是域名，dns服务器解析成ip，最终请求的ip地址。2 http协议的请求报文，由三部分组成，请求行，首部，和请求体三部分组成，请求行包括get,post方法，url，版本等。首部是键值对，中间用冒号分隔，Accept_charset，content_type，Cache_controll，当max-age比指定的缓存小，从缓存取，否则转发到应用层。3 http请求发送，http基于tcp协议的，是面向连接的方式发送请求，发送的是二进制流，tcp将二进制流转化成一个个的报文发送给服务器。tcp发送之前会把源ip和目标ip放进ip头里面，交给ip层进行传输，目标服务器收到之后会发一个ack，交给相应的应用进行处理，应用的进程收到请求，进行处理。4 http返回由三部分组成，状态行，首部和响应体，状态行包括版本，状态码，首部是键值对，包括Content-Type，构造好了返回的http报文，交给socket去发送，交给tcp层，tcp将返回的报文分成一个个的段，保证每个段都发出去，客户端接收到，发现是200，则进行处理。5 http2.0和1.1的区别，5.1 http1.1每次都是完整的请求头发送，http2.0相同的请求头会创建索引，发送只发送索引 5.2 http2.0将一个tcp连接切成多个流，每个流有一个流id，流是有优先级的，http还将传输消息切割为更小的消息和帧，采用二进制格式编码，有Head帧，会开启新的流，有Data帧，用来传输正文实体，多个Data帧属于同一个流。http2.0的客户端可以将多个请求拆成多个不同的流中，将请求内容拆成帧，有id和优先级，服务端接收之后按照帧首部的流标识进行组装，优先级高的先处理。5.3http2.0解决了阻塞问题，占用了一个tcp连接，对服务器资源占用不多，和http1.1相比，在一个链接里进行传输，响应比较快。5.4QUIC协议，tcp连接存在问题，虽然实现了多路传输，因为保证顺序，一个帧传输失败，要进行重试，组装的时候还是要等待，QUIC协议又切回了UDP，5.41自定义连接机制，一个tcp连接是以四元组标识的，源ip,端口号，目标ip和端口号，一旦一个元素变化，手机信号不好或者切换网络就要进行重连，产生时延，udp以64位的随机数作为标识，ip和端口发生变化不影响5.42QUIC发送包的id是自增的，如果判断重试的包和第一次发送失败的包是同一个包，发送的数据在流里有个偏移量offset，通过offset判断包发送到哪里了，重试的包来了按照offset拼接流，5.43 多路传输无阻塞5.4.3自定义流量控制tcp是通过滑动窗口协议，udp通过windows_update，来告诉客户端可以接收的字节数，窗口适应多路复用机制，在连接和stream上控制窗口","like_count":0},{"had_liked":false,"id":87855,"user_name":"Geek_f6f02b","can_delete":false,"product_type":"c1","uid":1365476,"ip_address":"","ucode":"29E5C81FF63E77","user_header":"","comment_is_top":false,"comment_ctime":1555732932,"is_pvip":false,"replies":[{"id":"49580","content":"严格顺序是TCP协议要求顺序的。但是同一个连续的buffer填满发往应用层的时候，这里面可以有多个通道的","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567690213,"ip_address":"","comment_id":87855,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1555732932","product_id":100007101,"comment_content":"HTTP 2.0 虽然大大增加了并发性，但还是有问题的。因为 HTTP 2.0 也是基于 TCP 协议的，TCP 协议在处理包时是有严格顺序的。当其中一个数据包遇到问题，TCP 连接需要等待这个包完成重传之后才能继续进行。这里指的严格顺序是否是因为受到接受方同时最多接受字节限制导致要顺序，也就是说在接受方限制字符内是无须顺序的，可以先发的后接收，后发的先接收，是吗？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447625,"discussion_content":"严格顺序是TCP协议要求顺序的。但是同一个连续的buffer填满发往应用层的时候，这里面可以有多个通道的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567690213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74406,"user_name":"bearsmall","can_delete":false,"product_type":"c1","uid":1178660,"ip_address":"","ucode":"84DC1AF33F29BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/24/122142cd.jpg","comment_is_top":false,"comment_ctime":1552218595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552218595","product_id":100007101,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":68945,"user_name":"ferry","can_delete":false,"product_type":"c1","uid":1255187,"ip_address":"","ucode":"0A848FA96C3AD8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGOSxM1GIHX9Y2JIe7vGQ87rK8xpo5F03KmiaGyXeKnozZsicHeSZrbSlzUVhTOdDlXCkTrcYNIVJg/132","comment_is_top":false,"comment_ctime":1550631806,"is_pvip":false,"replies":[{"id":"50301","content":"当时设计的时候，没想到有这些问题","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567840371,"ip_address":"","comment_id":68945,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550631806","product_id":100007101,"comment_content":"我感觉QUIC是TCP和UDP长处的结合体，但是既然TCP协议下的数据也是流的形式，为什么TCP协议不采用offset的方式来标记数据，而要采用序号来标记呢？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439885,"discussion_content":"当时设计的时候，没想到有这些问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567840371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68473,"user_name":"shaohsiung","can_delete":false,"product_type":"c1","uid":1228842,"ip_address":"","ucode":"6CFBB5C3BB3156","user_header":"https://static001.geekbang.org/account/avatar/00/12/c0/2a/86ca523d.jpg","comment_is_top":false,"comment_ctime":1550505040,"is_pvip":false,"replies":[{"id":"50304","content":"一个是探活，keepalive。pipeline是发送请求的时候，不用一来一回，可以连着发","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1567840549,"ip_address":"","comment_id":68473,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1550505040","product_id":100007101,"comment_content":"keepalive和pipeline有什么区别？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439693,"discussion_content":"一个是探活，keepalive。pipeline是发送请求的时候，不用一来一回，可以连着发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567840549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1076899,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6e/a3/bec136c0.jpg","nickname":"cxzm","note":"","ucode":"E94ACEF9D507A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3157,"discussion_content":"没有关联吧 ，一个人是为了保持tcp连接，一个是为了同时发送多个http请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564231383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36588,"user_name":"扬～","can_delete":false,"product_type":"c1","uid":1208163,"ip_address":"","ucode":"6FA7D8FE188341","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/63/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1541163390,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1541163390","product_id":100007101,"comment_content":"每天两篇，每天都有问题要问。<br>IP层可以通过头部的ID，长度和偏移量来重组数据报，那么TCP如何根据哪些字段来重组一个应用数据包从而交给应用层呢。","like_count":0,"discussions":[{"author":{"id":1580358,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","nickname":"Long","note":"","ucode":"D85B99FD0C4B76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42477,"discussion_content":"序号?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572678326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":32323,"user_name":"我爱探索","can_delete":false,"product_type":"c1","uid":1202924,"ip_address":"","ucode":"CEBD4F996747B5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3IrblACSCxr7ianvicQXRexScIaZ1zXVQYc1eLUlia6WkhPNKPzMoIJRgfVHe1BHskfTx8E9FCmicYGCeZic6HrGbRA/132","comment_is_top":false,"comment_ctime":1539530467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1539530467","product_id":100007101,"comment_content":"quic tcp_bbr详解增加个补充","like_count":0},{"had_liked":false,"id":24253,"user_name":"党","can_delete":false,"product_type":"c1","uid":1071974,"ip_address":"","ucode":"EE531DB3EA124D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5b/66/ad35bc68.jpg","comment_is_top":false,"comment_ctime":1536884008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536884008","product_id":100007101,"comment_content":"只可惜quic没有普及呢 http2.0也没有普及呢 作为了web开发者 这节看的没啥难度","like_count":0},{"had_liked":false,"id":24084,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":1186214,"ip_address":"","ucode":"B74213050A0804","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/a6/4529cdfa.jpg","comment_is_top":false,"comment_ctime":1536800399,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536800399","product_id":100007101,"comment_content":"quic目前应用的场景多吗，主要是哪些地方会用到","like_count":0},{"had_liked":false,"id":18322,"user_name":"闪客sun","can_delete":false,"product_type":"c1","uid":1029087,"ip_address":"","ucode":"3A5EA304A1EF27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b3/df/0fabb233.jpg","comment_is_top":false,"comment_ctime":1533257662,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1533257662","product_id":100007101,"comment_content":"老师，就是浏览器构建完http请求，封装进tcp头里这一步是浏览器完成的，那再把这个tcp数据封装在网络层里，这一步是谁完成的？是底层操作系统么？如果我想从头到尾完全自己封装一段数据直接从网口发出去，我需要怎么做呀？谢谢","like_count":0},{"had_liked":false,"id":17092,"user_name":"FOCUS","can_delete":false,"product_type":"c1","uid":1140080,"ip_address":"","ucode":"DFE3078B632026","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","comment_is_top":false,"comment_ctime":1532430463,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532430463","product_id":100007101,"comment_content":"1、不了解 QUIC；<br>2、银行卡敏感信息，可以在客户端js加密传送，还可以对表单做一个token。","like_count":0},{"had_liked":false,"id":17090,"user_name":"FOCUS","can_delete":false,"product_type":"c1","uid":1140080,"ip_address":"","ucode":"DFE3078B632026","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","comment_is_top":false,"comment_ctime":1532429831,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1532429831","product_id":100007101,"comment_content":"#QUIC 的流量控制也是通过 window_update，来告诉对端它可以接受的字节数。# 对端是什么来的？","like_count":0,"discussions":[{"author":{"id":1079152,"avatar":"https://static001.geekbang.org/account/avatar/00/10/77/70/466368e1.jpg","nickname":"杰森莫玛","note":"","ucode":"A29AEC27270657","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20179,"discussion_content":"服务器端口，或者接受端口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569287249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17089,"user_name":"FOCUS","can_delete":false,"product_type":"c1","uid":1140080,"ip_address":"","ucode":"DFE3078B632026","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","comment_is_top":false,"comment_ctime":1532429474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532429474","product_id":100007101,"comment_content":"#例如，发送一个包，序号为 100，发现没有返回，于是再发送一个 100，过一阵返回一个 ACK101。# 这里包的序号不应该是 101 吗？不然，怎么返回了 ACK101？","like_count":0},{"had_liked":false,"id":17088,"user_name":"FOCUS","can_delete":false,"product_type":"c1","uid":1140080,"ip_address":"","ucode":"DFE3078B632026","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","comment_is_top":false,"comment_ctime":1532428793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532428793","product_id":100007101,"comment_content":"#HTTP 2.0 成功解决了 HTTP 1.1 的队首阻塞问题#，请问“队首阻塞”是否为笔误？不是队列？","like_count":0},{"had_liked":false,"id":17085,"user_name":"FOCUS","can_delete":false,"product_type":"c1","uid":1140080,"ip_address":"","ucode":"DFE3078B632026","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","comment_is_top":false,"comment_ctime":1532427795,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532427795","product_id":100007101,"comment_content":"【另外，HTTP 2.0 协议将一个 TCP 的连接中，切分成多个流，每个流都有自己的 ID，而且流可以是客户端发往服务端，也可以是服务端发往客户端。】<br><br>“切分多个流”—这是指将一个tcp链接切分为流形式？而不是一个 socket 方式？","like_count":0},{"had_liked":false,"id":17067,"user_name":"FOCUS","can_delete":false,"product_type":"c1","uid":1140080,"ip_address":"","ucode":"DFE3078B632026","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","comment_is_top":false,"comment_ctime":1532407377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1532407377","product_id":100007101,"comment_content":"统一资源定位符 不是 URI吗？<br><br>URI 与 URL 两个名词有什么区别吗？","like_count":0},{"had_liked":false,"id":14277,"user_name":"makermade","can_delete":false,"product_type":"c1","uid":1133194,"ip_address":"","ucode":"03386B90CB8F20","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","comment_is_top":false,"comment_ctime":1530256356,"is_pvip":false,"replies":[{"id":"4777","content":"多为应用问题","user_name":"作者回复","user_name_real":"刘超@网易云","uid":"1001590","ctime":1530276578,"ip_address":"","comment_id":14277,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1530256356","product_id":100007101,"comment_content":"超哥。服务器存在大量time_wait的连接，是网络问题，还是web应用问题？","like_count":0,"discussions":[{"author":{"id":1001590,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/48/76/0c7d4d23.jpg","nickname":"刘超","note":"","ucode":"196BF3F499E8FE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419941,"discussion_content":"多为应用问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1530276578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13220,"user_name":"唐唐","can_delete":false,"product_type":"c1","uid":1029186,"ip_address":"","ucode":"52876E04BB3A9F","user_header":"","comment_is_top":false,"comment_ctime":1529456971,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1529456971","product_id":100007101,"comment_content":"我听了3遍了，还得在看几遍，才行，想问下，在哪里可以看是否有keepalive，是不是可以理解为一个网站请求了一个地址，请求该网站的其它地址不用再次三次握手了，keepalive是对该网站域名的标识吗？","like_count":0,"discussions":[{"author":{"id":1079152,"avatar":"https://static001.geekbang.org/account/avatar/00/10/77/70/466368e1.jpg","nickname":"杰森莫玛","note":"","ucode":"A29AEC27270657","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20171,"discussion_content":"keeplive可以理解成tcp的复用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569286934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13096,"user_name":"Cloud","can_delete":false,"product_type":"c1","uid":1147061,"ip_address":"","ucode":"86B1C459EC9F82","user_header":"https://static001.geekbang.org/account/avatar/00/11/80/b5/f59d92f1.jpg","comment_is_top":false,"comment_ctime":1529370972,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529370972","product_id":100007101,"comment_content":"HTTPS吧😀","like_count":0},{"had_liked":false,"id":13014,"user_name":"晓.光","can_delete":false,"product_type":"c1","uid":1135328,"ip_address":"","ucode":"EC826AE4901235","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/e0/ef42c4ce.jpg","comment_is_top":false,"comment_ctime":1529303413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529303413","product_id":100007101,"comment_content":"敏感信息那就HTTPS吧","like_count":0},{"had_liked":false,"id":13007,"user_name":"孙悟空","can_delete":false,"product_type":"c1","uid":1055660,"ip_address":"","ucode":"28356CBC83C464","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/ac/41ec8c80.jpg","comment_is_top":false,"comment_ctime":1529286949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1529286949","product_id":100007101,"comment_content":"问题2 https","like_count":0}]}