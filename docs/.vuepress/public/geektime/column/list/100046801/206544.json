{"id":206544,"title":"04 | 事务：账户余额总是对不上账，怎么办？","content":"<p>你好，我是李玥。今天这节课我们来说一下电商的账户系统。</p><p>账户系统负责记录和管理用户账户的余额，这个余额就是每个用户临时存在电商的钱，来源可能是用户充值或者退货退款等多种途径。</p><p>账户系统的用途也非常广泛，不仅仅是电商，各种互联网内容提供商、网络游戏服务商，电信运营商等等，都需要账户系统来管理用户账户的余额，或者是虚拟货币。包括银行的核心系统，也同样包含一个账户系统。</p><p>从业务需求角度来分析，一个最小化的账户系统，它的数据模型可以用下面这张表来表示：</p><p><img src=\"https://static001.geekbang.org/resource/image/e4/fb/e435af4227850bc7f01b00f4959c10fb.jpg?wh=3479*1380\" alt=\"\"></p><p>这个表包括用户ID、账户余额和更新时间三个字段。每次交易的时候，根据用户ID去更新这个账户的余额就可以了。</p><h2>为什么总是对不上账？</h2><p>每个账户系统都不是孤立存在的，至少要和财务、订单、交易这些系统有着密切的关联。理想情况下，账户系统内的数据应该是自洽的。所有用户的账户余额加起来，应该等于这个电商公司在银行专用账户的总余额。账户系统的数据也应该和其他系统的数据能对的上。比如说，每个用户的余额应该能和交易系统中充值记录，以及订单系统中的订单对的上。</p><p>不过，由于业务和系统的复杂性，现实情况却是，很少有账户系统能够做到一点不差的对上每一笔账。所以，稍微大型一点儿的系统，都会有一个专门的对账系统，来核对、矫正账户系统和其他系统之间的数据差异。</p><!-- [[[read_end]]] --><p>对不上账的原因非常多，比如业务变化、人为修改了数据、系统之间数据交换失败等等。那作为系统的设计者，我们只关注“如何避免由于技术原因导致的对不上账”就可以了，有哪些是因为技术原因导致的呢？比如说：网络请求错误，服务器宕机、系统Bug等。</p><p>“对不上账”是通俗的说法，它的本质问题是，<strong>冗余数据的一致性问题</strong>。</p><p>这里面的冗余数据并不是多余或者重复的数据，而是多份含有相同信息的数据。比如，我们完全可以通过用户的每一笔充值交易数据、消费的订单数据，来计算出这个用户当前的账户余额是多少。也就是说，账户余额数据和这些账户相关的交易记录，都含有“账户余额”这个信息，那它们之间就互为冗余数据。</p><p>在设计系统的存储时，原则上不应该存储冗余数据，一是浪费存储空间，二是让这些冗余数据保持一致是一件非常麻烦的事儿。但有些场景下存储冗余数据是必要的，比如用户账户的余额这个数据。</p><p>这个数据在交易过程中会被非常频繁地用到，总不能每次交易之前，先通过所有历史交易记录计算一下当前账户的余额，这样做速度太慢了，性能满足不了交易的需求。所以账户系统保存了每个用户的账户余额，这实际上是一种用<strong>存储空间换计算时间</strong>的设计。</p><p>如果说只是满足功能需求，账户系统只记录余额，每次交易的时候更新账户余额就够了。但是这样做有一个问题，如果账户余额被篡改，是没有办法追查的，所以在记录余额的同时，还需要记录每一笔交易记录，也就是账户的流水。流水的数据模型至少需要包含：流水ID、交易金额、交易时间戳以及交易双方的系统、账户、交易单号等信息。</p><p>虽然说，流水和余额也是互为冗余数据，但是记录流水，可以有效地修正由于系统Bug或者人为篡改导致的账户余额错误的问题，也便于账户系统与其他外部系统进行对账，所以账户系统记录流水是非常必要的。</p><p>在设计账户流水时，有几个重要的原则必须遵守，最好是用技术手段加以限制。</p><ol>\n<li>流水记录只能新增，一旦记录成功不允许修改和删除。即使是由于正当原因需要取消一笔已经完成的交易，也不应该去删除交易流水。正确的做法是再记录一笔“取消交易”的流水。</li>\n<li>流水号必须是递增的，我们需要用流水号来确定交易的先后顺序。</li>\n</ol><p>在对账的时候，一旦出现了流水和余额不一致，并且无法通过业务手段来确定到底是哪儿记错了的情况，一般的处理原则是以交易流水为准来修正余额数据，这样才能保证后续的交易能“对上账”。</p><p>那从技术上，如何保证账户系统中流水和余额数据一致呢？</p><h2>使用数据库事务来保证数据一致性</h2><p>在设计对外提供的服务接口时，不能提供单独更新余额或者流水的功能，只提供交易功能。我们需要在实现交易功能的时候，同时记录流水并修改余额，并且要尽可能保证，在任何情况下，记录流水和修改余额这两个操作，要么都成功，要么都失败。不能有任何一笔交易出现，记录了流水但余额没更新，或者更新了余额但是没记录流水。</p><p>这个事儿说起来挺简单，但实际上是非常难实现的。毕竟应用程序只能先后来执行两个操作，执行过程中，可能会发生网络错误、系统宕机等各种异常的情况，所以对于应用程序来说，很难保证这两个操作都成功或者都失败。</p><p>数据库提供了事务机制来解决这个问题，实际上事务这个特性最初就是被设计用来解决交易问题的，在英文中，事务和交易就是同一个单词：Transaction。</p><p>我们先看一下如何来使用MySQL的事务，实现一笔交易。比如说，在事务中执行一个充值100元的交易，先记录一条交易流水，流水号是888，然后把账户余额从100元更新到200元。对应的SQL是这样的：</p><pre><code>mysql&gt; begin;  -- 开始事务\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; insert into account_log ...;  -- 写入交易流水\nQuery OK, 1 rows affected (0.01 sec)\n\nmysql&gt; update account_balance ...;  -- 更新账户余额\nQuery OK, 1 rows affected (0.00 sec)\n\nmysql&gt; commit; # 提交事务\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre><p>使用事务的时候，只需要在之前执行<code>begin</code>，标记开始一个事务，然后正常执行多条SQL语句，在事务里面的不仅可以执行更新数据的SQL，查询语句也是可以的，最后执行<code>commit</code>，提交事务就可以了。</p><p>我们来看一下，事务可以给我们提供什么样的保证？</p><p>首先，它可以保证，记录流水和更新余额这两个操作，要么都成功，要么都失败，即使是在数据库宕机、应用程序退出等等这些异常情况下，也不会出现，只更新了一个表而另一个表没更新的情况。这是事务的<strong>原子性（Atomic）</strong>。</p><p>事务还可以保证，数据库中的数据总是从一个一致性状态（888流水不存在，余额是100元）转换到另外一个一致性状态（888流水存在，余额是200元）。对于其他事务来说，不存在任何中间状态（888流水存在，但余额是100元）。</p><p>其他事务，在任何一个时刻，如果它读到的流水中没有888这条流水记录，它读出来的余额一定是100元，这是交易前的状态。如果它能读到888这条流水记录，它读出来的余额一定是200元，这是交易之后的状态。也就是说，事务保证我们读到的数据（交易和流水）总是一致的，这是事务的<strong>一致性(Consistency)</strong>。</p><p>实际上，这个事务的执行过程无论多快，它都是需要时间的，那修改流水表和余额表对应的数据，也会有先后。那一定存在一个时刻，流水更新了，但是余额还没更新，也就是说每个事务的中间状态是事实存在的。</p><p>数据库为了实现一致性，必须保证每个事务的执行过程中，中间状态对其他事务是不可见的。比如说我们在事务A中，写入了888这条流水，但是还没有提交事务，那在其他事务中，都不应该读到888这条流水记录。这是事务的<strong>隔离性(Isolation)</strong>。</p><p>最后，只要事务提交成功，数据一定会被持久化到磁盘中，后续即使发生数据库宕机，也不会改变事务的结果。这是事务的<strong>持久性(Durability)</strong>。</p><p>你会发现，我上面讲的就是事务的<strong>ACID</strong>四个基本特性。你需要注意的是，这四个特性之间是紧密关联在一起的，不用去纠结每一个特性的严格定义，更重要的是理解事务的行为，也就是我们的系统在使用事务的时候，各种情况下，事务对你的数据会产生什么影响，这是使用事务的关键。</p><h2>理解事务的隔离级别</h2><p>有了数据库的事务机制，只要确保每一笔交易都在事务中执行，我们的账户系统就很容易保证流水和余额数据的一致性。但是，ACID是一个非常严格的定义，或者说是理想的情况。如果要完全满足ACID，一个数据库的所有事务和SQL都只能串行执行，这个性能肯定是不能满足一般系统的要求的。</p><p>对账户系统和其他大多数交易系统来说，事务的原子性和持久性是必须要保证的，否则就失去了使用事务的意义，而一致性和隔离性其实可以做适当牺牲，来换取性能。所以，MySQL提供了四种隔离级别，具体来看一下这个表：</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/3e/3c37eff420c7a9e41e6121ff491c8c3e.jpg?wh=4266*2329\" alt=\"\"></p><p>几乎所有讲MySQL的事务隔离级别的文章里面，都有这个表，我们也不能免俗，因为这个表太经典了。很多同学看这个表的时候，面对这么多概念都有点儿晕，确实不太好理解。我来跟你说一下怎么来把这四种隔离级别搞清楚，重点在哪里。</p><p>这个表里面自上到下，一共有四种隔离级别：RU、RC、RR和SERIALIZABLE，这四种级别的隔离性越来越严格，性能也越来越差，在MySQL中默认的隔离级别是RR，可重复读。</p><p>先说两种不常用的，第一种RU级别，实际上就是完全不隔离。每个进行中事务的中间状态，对其他事务都是可见的，所以有可能会出现“脏读”。我们上一个小节充值的例子中，读到了888这条流水，但余额还是转账之前的100元，这种情况就是脏读。这种级别虽然性能好，但是存在脏读的可能，对应用程序来说比较难处理，所以基本不用。</p><p>第四种“序列化”级别，具备完美的“隔离性”和“一致性”，性能最差，也很少会用到。</p><p>常用的隔离级别其实就是RC和RR两种，其中MySQL默认的隔离级别是RR。这两种隔离级别都可以避免脏读，能够保证在其他事务中是不会读到未提交事务的数据，或者通俗地说，<strong>只要你的事务没有提交，那这个事务对数据做出的更新，对其他会话是不可见的，它们读到的还是你这个事务更新之前的数据</strong>。</p><p>RC和RR唯一的区别在于“是否可重复读”，这个概念也有点儿绕口，但其实也很简单。</p><p><strong>在一个事务执行过程中，它能不能读到其他已提交事务对数据的更新，如果能读到数据变化，就是“不可重复读”，否则就是“可重复读”</strong>。</p><p>我们举个例子来说明，比如，我们把事务的隔离级别设为RC。会话A开启了一个事务，读到ID为0的账户，当前账户余额是100元。</p><pre><code>mysql&gt; -- 会话 A\nmysql&gt; -- 确认当前设置的隔离级别是RC\nmysql&gt; SELECT @@global.transaction_isolation, @@transaction_isolation;\n+--------------------------------+-------------------------+\n| @@global.transaction_isolation | @@transaction_isolation |\n+--------------------------------+-------------------------+\n| READ-COMMITTED                 | READ-COMMITTED          |\n+--------------------------------+-------------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; begin;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; select log_id, amount, timestamp  from account_log  order by log_id;\n+--------+--------+---------------------+\n| log_id | amount | timestamp           |\n+--------+--------+---------------------+\n|      3 |    100 | 2020-02-07 09:40:37 |\n+--------+--------+---------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; select * from account_balance;  -- 账户余额是100元；\n+---------+---------+---------------------+--------+\n| user_id | balance | timestamp           | log_id |\n+---------+---------+---------------------+--------+\n|       0 |     100 | 2020-02-07 09:47:39 |      3 |\n+---------+---------+---------------------+--------+\n1 row in set (0.00 sec)\n</code></pre><p>这时候另外一个会话B，对这个账户完成了一笔转账交易，并且提交了事务。把账户余额更新成了200元。</p><pre><code>mysql&gt; -- 会话 B\nmysql&gt; begin;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; select log_id, amount, timestamp  from account_log  order by log_id;\n+--------+--------+---------------------+\n| log_id | amount | timestamp           |\n+--------+--------+---------------------+\n|      3 |    100 | 2020-02-07 09:40:37 |\n+--------+--------+---------------------+\n1 row in set (0.00 sec)\n\nmysql&gt; -- 写入流水\nmysql&gt; insert into account_log values (NULL, 100, NOW(), 1, 1001, NULL, 0, NULL, 0, 0);\nQuery OK, 1 row affected (0.00 sec)\n\nmysql&gt; -- 更新余额\nmysql&gt; update account_balance\n    -&gt; set balance = balance + 100, log_id = LAST_INSERT_ID(), timestamp = NOW()\n    -&gt; where user_id = 0 and log_id = 3;\nQuery OK, 1 row affected (0.00 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql&gt; -- 当前账户有2条流水记录\nmysql&gt; select log_id, amount, timestamp  from account_log  order by log_id;\n+--------+--------+---------------------+\n| log_id | amount | timestamp           |\n+--------+--------+---------------------+\n|      3 |    100 | 2020-02-07 09:40:37 |\n|      4 |    100 | 2020-02-07 10:06:15 |\n+--------+--------+---------------------+\n2 rows in set (0.00 sec)\n\nmysql&gt; -- 当前账户余额是200元；\nmysql&gt; select * from account_balance;\n+---------+---------+---------------------+--------+\n| user_id | balance | timestamp           | log_id |\n+---------+---------+---------------------+--------+\n|       0 |     200 | 2020-02-07 10:06:16 |      4 |\n+---------+---------+---------------------+--------+\n1 row in set (0.00 sec)\nmysql&gt; commit;\nQuery OK, 0 rows affected (0.00 sec)\n\n</code></pre><p>注意，这个时候会话A之前开启的事务是一直未关闭的。我们再来会话A中看一下账户的余额，你觉得应该是多少？</p><p>我们来看一下实际的结果。</p><pre><code>mysql&gt; -- 会话 A\nmysql&gt; -- 当前账户有2条流水记录\nmysql&gt; select log_id, amount, timestamp  from account_log  order by log_id;\n+--------+--------+---------------------+\n| log_id | amount | timestamp           |\n+--------+--------+---------------------+\n|      3 |    100 | 2020-02-07 09:40:37 |\n|      4 |    100 | 2020-02-07 10:06:15 |\n+--------+--------+---------------------+\n2 rows in set (0.00 sec)\n\nmysql&gt; -- 当前账户余额是200元；\nmysql&gt; select * from account_balance;\n+---------+---------+---------------------+--------+\n| user_id | balance | timestamp           | log_id |\n+---------+---------+---------------------+--------+\n|       0 |     200 | 2020-02-07 10:06:16 |      4 |\n+---------+---------+---------------------+--------+\n1 row in set (0.00 sec)\nmysql&gt; commit;\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre><p>可以看到，当我们把隔离级别设置为RC时，会话A第二次读到的账户余额是200元，也就是会话B更新后的数据。对于会话A来说，<strong>在同一个事务内两次读取同一条数据，读到的结果可能会不一样，这就是“不可重复读”</strong>。</p><p>如果把隔离级别设置为RR，会话A第二次读到的账户余额仍然是100元，交易流水也只有一条记录。<strong>在RR隔离级别下，在一个事务进行过程中，对于同一条数据，每次读到的结果总是相同的，无论其他会话是否已经更新了这条数据</strong>，<strong>这就是“可重复读”。</strong></p><p>理解了RC和RR这两种隔离级别的区别，就足够应对绝大部分业务场景了。</p><p>最后，我来简单说一下“幻读”。在实际业务中，很少能遇到幻读，即使遇到，也基本不会影响到数据准确性，所以你简单了解一下即可。在RR隔离级别下，我们开启一个事务，之后直到这个事务结束，在这个事务内其他事务对数据的更新是不可见的，这个我们刚刚讲过。</p><p>比如我们在会话A中开启一个事务，准备插入一条ID为1000的流水记录。查询一下当前流水，不存在ID为1000的记录，可以安全地插入数据。</p><pre><code>mysql&gt; -- 会话 A\nmysql&gt; select log_id from account_log where log_id = 1000;\nEmpty set (0.00 sec)\n</code></pre><p>这时候，另外一个会话抢先插入了这条ID为1000的流水记录。</p><pre><code>mysql&gt; -- 会话 B\nmysql&gt; begin;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; insert into account_log values\n    -&gt; (1000, 100, NOW(), 1, 1001, NULL, 0, NULL, 0, 0);\nQuery OK, 1 row affected (0.00 sec)\n\nmysql&gt; commit;\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre><p>然后会话A再执行相同的插入语句时，就会报主键冲突错误，但是由于事务的隔离性，它执行查询的时候，却查不到这条ID为1000的流水，就像出现了“幻觉”一样，这就是幻读。</p><pre><code>mysql&gt; -- 会话 A\nmysql&gt; insert into account_log values\n    -&gt; (1000, 100, NOW(), 1, 1001, NULL, 0, NULL, 0, 0);\nERROR 1062 (23000): Duplicate entry '1000' for key 'account_log.PRIMARY'\nmysql&gt; select log_id from account_log where log_id = 1000;\nEmpty set (0.00 sec)\n</code></pre><p>理解了这几种隔离级别，最后我们给出一种兼顾并发、性能和数据一致性的交易实现。这个实现在隔离级别为RC和RR时，都是安全的。</p><ol>\n<li>我们给账户余额表增加一个log_id属性，记录最后一笔交易的流水号。</li>\n<li>首先开启事务，查询并记录当前账户的余额和最后一笔交易的流水号。</li>\n<li>然后写入流水记录。</li>\n<li>再更新账户余额，需要在更新语句的WHERE条件中限定，只有流水号等于之前查询出的流水号时才更新。</li>\n<li>然后检查更新余额的返回值，如果更新成功就提交事务，否则回滚事务。</li>\n</ol><p>需要特别注意的一点是，更新账户余额后，不能只检查更新语句是不是执行成功了，还需要检查返回值中变更的行数是不是等于1。因为即使流水号不相等，余额没有更新，这条更新语句的执行结果仍然是成功的，只是更新了0条记录。</p><p>下面是整个交易的SQL，供你参考：</p><pre><code>mysql&gt; begin;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt;  -- 查询当前账户的余额和最后一笔交易的流水号。\nmysql&gt; select balance, log_id from account_balance where user_id = 0;\n+---------+--------+\n| balance | log_id |\n+---------+--------+\n|     100 |      3 |\n+---------+--------+\n1 row in set (0.00 sec)\n\nmysql&gt;  -- 插入流水记录。\nmysql&gt; insert into account_log values\n    -&gt; (NULL, 100, NOW(), 1, 1001, NULL, 0, NULL, 0, 0);\nQuery OK, 1 row affected (0.01 sec)\n\nmysql&gt;  -- 更新余额，注意where条件中，限定了只有流水号等于之前查询出的流水号3时才更新。\nmysql&gt; update account_balance\n    -&gt; set balance = balance + 100, log_id = LAST_INSERT_ID(), timestamp = NOW()\n    -&gt; where user_id = 0 and log_id = 3;\nQuery OK, 1 row affected (0.00 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql&gt;  -- 这里需要检查更新结果，只有更新余额成功（Changed: 1）才提交事务，否则回滚事务。\nmysql&gt; commit;\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre><p>最后，我给出流水和余额两个表的DDL，你自己执行例子的时候可以使用。</p><pre><code>CREATE TABLE `account_log` (\n  `log_id` int NOT NULL AUTO_INCREMENT COMMENT '流水号',\n  `amount` int NOT NULL COMMENT '交易金额',\n  `timestamp` datetime NOT NULL COMMENT '时间戳',\n  `from_system` int NOT NULL COMMENT '转出系统编码',\n  `from_system_transaction_number` int DEFAULT NULL COMMENT '转出系统的交易号',\n  `from_account` int DEFAULT NULL COMMENT '转出账户',\n  `to_system` int NOT NULL COMMENT '转入系统编码',\n  `to_system_transaction_number` int DEFAULT NULL COMMENT '转入系统的交易号',\n  `to_account` int DEFAULT NULL COMMENT '转入账户',\n  `transaction_type` int NOT NULL COMMENT '交易类型编码',\n  PRIMARY KEY (`log_id`)\n);\n\n\nCREATE TABLE `account_balance` (\n  `user_id` int NOT NULL COMMENT '用户ID',\n  `balance` int NOT NULL COMMENT '余额',\n  `timestamp` datetime NOT NULL COMMENT '时间戳',\n  `log_id` int NOT NULL COMMENT '最后一笔交易的流水号',\n  PRIMARY KEY (`user_id`)\n);\n</code></pre><h2>小结</h2><p>账户系统用于记录每个用户的余额，为了保证数据的可追溯性，还需要记录账户流水。流水记录只能新增，任何情况下都不允许修改和删除，每次交易的时候需要把流水和余额放在同一个事务中一起更新。</p><p>事务具备原子性、一致性、隔离性和持久性四种基本特性，也就是ACID，它可以保证在一个事务中执行的数据更新，要么都成功，要么都失败。并且在事务执行过程中，中间状态的数据对其他事务是不可见的。</p><p>ACID是一种理想情况，特别是要完美地实现CI，会导致数据库性能严重下降，所以MySQL提供的四种可选的隔离级别，牺牲一定的隔离性和一致性，用于换取高性能。这四种隔离级别中，只有RC和RR这两种隔离级别是常用的，它们的唯一区别是在进行的事务中，其他事务对数据的更新是否可见。</p><h2>思考题</h2><p>课后希望你能动手执行一下我们今天这节课中给出的例子，看一下多个事务并发更新同一个账户时，RC和RR两种不同的隔离级别，在行为上有什么不同？</p><p>欢迎你在留言区与我讨论，如果你觉得今天的内容对你有帮助，也欢迎把它分享给你的朋友。</p>","neighbors":{"left":{"article_title":"03 | 复杂而又重要的购物车系统，应该如何设计？","id":206061},"right":{"article_title":"05 | 分布式事务：如何保证多个系统间的数据是一致的？","id":207508}},"comments":[{"had_liked":false,"id":184636,"user_name":"李玥","can_delete":false,"product_type":"c1","uid":1501046,"ip_address":"","ucode":"B19E91EE248591","user_header":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","comment_is_top":true,"comment_ctime":1583375713,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"9.2233723347908997e+18","product_id":100046801,"comment_content":"hi，我是李玥。<br><br>我们还是回顾一下上节课留的思考题，是这样的。<br><br>既然用户的购物车数据存放在MySQL或者是Redis中各有优劣势。那能不能把购物车数据存在MySQL中，并且用Redis来做缓存呢？这样不就可以兼顾两者的优势了么？这样做是不是可行？如果可行，如何来保证Redis中的数据和MySQL中的数据是一样的呢？<br><br>关于这个问题，我这样看。<br><br>用Redis给购物车库做缓存，技术上肯定是可行的。但是有两个问题需要思考一下。<br><br>第一个问题是，值不值得这样做？因为每个人的购物车都是不一样的，所以这个缓存它的读写比差距不会很大，缓存的命中率不会太高，缓存的收益有限，为了维护缓存，还要增加系统的复杂度。所以我们就要自行权衡一下，是不是值得的问题。我的观点是，除了超大规模的系统以外，没有必要设置这个缓存。<br><br>第二个问题是，如果我们非要做这样一个缓存，用什么缓存更新策略更好呢？这里我先卖个关子，在《11 | MySQL如何应对高并发（一）：使用缓存保护MySQL》这节课中，我们会专门讲到几种常用的缓存策略，你可以学完这节课之后，再回过头来想一下这个问题。","like_count":68,"discussions":[{"author":{"id":3206657,"avatar":"https://static001.geekbang.org/account/avatar/00/30/ee/01/2ecf51b0.jpg","nickname":"Catcher","note":"","ucode":"5BEFBEE3D367A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591216,"discussion_content":"在购物车信息更新时，更新缓存？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666404190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500391,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e4/e7/31944ee7.jpg","nickname":"千军万马万马@","note":"","ucode":"0BDAD22123435A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556053,"discussion_content":"竟然卖关子。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647181282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184578,"user_name":"观弈道人","can_delete":false,"product_type":"c1","uid":1016905,"ip_address":"","ucode":"F3BB619A33C605","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","comment_is_top":false,"comment_ctime":1583363758,"is_pvip":false,"discussion_count":13,"race_medal":0,"score":"242101532334","product_id":100046801,"comment_content":"这篇讲事务的文章，是遇到的讲的最清楚明白、恰到好处的一篇，没有提看似更本质、更唬人的各种锁，比如间隙锁等，可以说大部人也都不能清楚理解各种锁，对于非专职dba理解此篇的知识技巧足够了。","like_count":57,"discussions":[{"author":{"id":1622022,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia6zEsh2u119zJicmq7wApvnricZEKiawaZicice1cOzujWdFicFwPtavlHiaVpCNgCpxBtdl7ynd3y0wkQ/132","nickname":"james_xu","note":"","ucode":"12E50291F5BA89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410265,"discussion_content":"其实好好学习mysql35讲就不会觉得各种锁是个唬人的东西了😄","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635646801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1500391,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e4/e7/31944ee7.jpg","nickname":"千军万马万马@","note":"","ucode":"0BDAD22123435A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1622022,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia6zEsh2u119zJicmq7wApvnricZEKiawaZicice1cOzujWdFicFwPtavlHiaVpCNgCpxBtdl7ynd3y0wkQ/132","nickname":"james_xu","note":"","ucode":"12E50291F5BA89","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556055,"discussion_content":"同意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647181365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":410265,"ip_address":""},"score":556055,"extra":""}]},{"author":{"id":2296382,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0a/3e/5b1b1b75.jpg","nickname":"流年","note":"","ucode":"8B579C6E466CB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323168,"discussion_content":"不可重复读针对的是单条记录的更新，幻读是针对的是新插入的记录，幻读的解决不止间隙锁，还有临建锁next-key-lock，它兼容了record lock 和gap lock保证在并发事务时锁住索引记录的间隙","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1604891815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323264,"avatar":"https://static001.geekbang.org/account/avatar/00/14/31/00/b5fd38df.jpg","nickname":"Ling","note":"","ucode":"F16F675C1D1EA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376234,"discussion_content":"同感！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622031342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022127,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","nickname":"一剑","note":"","ucode":"93ADD5B5215D4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199065,"discussion_content":"确实，这是我见过的讲的最容易懂，最实用的事务介绍文章。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583552405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1835642,"avatar":"","nickname":"叶子","note":"","ucode":"41131155D75B09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1022127,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/af/3945cea4.jpg","nickname":"一剑","note":"","ucode":"93ADD5B5215D4C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222648,"discussion_content":"只能说你们的涉猎的东西太少了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1586165915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":199065,"ip_address":""},"score":222648,"extra":""},{"author":{"id":1500391,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e4/e7/31944ee7.jpg","nickname":"千军万马万马@","note":"","ucode":"0BDAD22123435A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1835642,"avatar":"","nickname":"叶子","note":"","ucode":"41131155D75B09","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556054,"discussion_content":"同意","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647181352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":222648,"ip_address":""},"score":556054,"extra":""}]},{"author":{"id":1114684,"avatar":"https://static001.geekbang.org/account/avatar/00/11/02/3c/c9c1ca76.jpg","nickname":"雪海觅隐香","note":"","ucode":"07685DE073FBB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207608,"discussion_content":"是的呢！有种醍醐灌顶的感觉，让我重新认识了事物","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584505529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1114684,"avatar":"https://static001.geekbang.org/account/avatar/00/11/02/3c/c9c1ca76.jpg","nickname":"雪海觅隐香","note":"","ucode":"07685DE073FBB9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213915,"discussion_content":"感觉把幻读和不可重复读整明白了","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1585134667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":207608,"ip_address":""},"score":213915,"extra":""},{"author":{"id":1116106,"avatar":"https://static001.geekbang.org/account/avatar/00/11/07/ca/3feccf32.jpg","nickname":"Berton.Yip.","note":"","ucode":"DB6C45FD67CDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1114684,"avatar":"https://static001.geekbang.org/account/avatar/00/11/02/3c/c9c1ca76.jpg","nickname":"雪海觅隐香","note":"","ucode":"07685DE073FBB9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252269,"discussion_content":"事务隔离级别, 要和锁一起分析, 建议深入, 否则, 只知其然不知其所以然喔.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588146542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":207608,"ip_address":""},"score":252269,"extra":""},{"author":{"id":1729060,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/62/24/07e2507c.jpg","nickname":"托尼斯威特","note":"","ucode":"98A1035527292E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1116106,"avatar":"https://static001.geekbang.org/account/avatar/00/11/07/ca/3feccf32.jpg","nickname":"Berton.Yip.","note":"","ucode":"DB6C45FD67CDA3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285788,"discussion_content":"确实, 还是想知道更进一步, 怎么用锁实现的.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592947573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":252269,"ip_address":""},"score":285788,"extra":""}]},{"author":{"id":1190150,"avatar":"https://static001.geekbang.org/account/avatar/00/12/29/06/0b327738.jpg","nickname":"Gankki","note":"","ucode":"399C6F74286590","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":199074,"discussion_content":"同感！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583553090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053934,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/ee/d72a8222.jpg","nickname":"攻城拔寨","note":"","ucode":"CBC37183DAB6B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197304,"discussion_content":"同感！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583416845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184593,"user_name":"慌张而黑糖","can_delete":false,"product_type":"c1","uid":1638878,"ip_address":"","ucode":"B4416885A301C8","user_header":"https://static001.geekbang.org/account/avatar/00/19/01/de/bf524817.jpg","comment_is_top":false,"comment_ctime":1583368324,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"91777681540","product_id":100046801,"comment_content":"其中在更新账户余额时的where log_id=3这部分感觉和乐观锁中的version起到的作用很像","like_count":22,"discussions":[{"author":{"id":1813364,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/ab/74/286d74c0.jpg","nickname":"MT006","note":"","ucode":"83C7D7EEBD32C1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554358,"discussion_content":"log id什么时候更新呢，这个更新在并发的时候怎么保证写入的顺序和后面的事务执行顺序是一致的呢。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646359360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213917,"discussion_content":"嗯嗯，乐观锁的思想嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585134744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186556,"user_name":"Zend","can_delete":false,"product_type":"c1","uid":1053921,"ip_address":"","ucode":"80EBB0B6772E27","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/e1/ee5705a2.jpg","comment_is_top":false,"comment_ctime":1583879858,"is_pvip":false,"replies":[{"id":"72045","content":"所以我们要加上余额流水的ID来控制并发更新，这样无论是rc还是rr都是安全的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583901510,"ip_address":"","comment_id":186556,"utype":1}],"discussion_count":8,"race_medal":0,"score":"78893291186","product_id":100046801,"comment_content":"老师，针对余额更新这种场景，我们是不是就应该用RC隔离级别，因为RR隔离级别会不会存在余额已经被别的事务更新了，而当前事务还是用旧数据。","like_count":19,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486801,"discussion_content":"所以我们要加上余额流水的ID来控制并发更新，这样无论是rc还是rr都是安全的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583901510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2296382,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0a/3e/5b1b1b75.jpg","nickname":"流年","note":"","ucode":"8B579C6E466CB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323202,"discussion_content":"RR隔离级别下不会出现这个问题的，会加行锁的，别的事务更新不了的","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1604896106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2296382,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0a/3e/5b1b1b75.jpg","nickname":"流年","note":"","ucode":"8B579C6E466CB4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329705,"discussion_content":"rr级别下，如果另一个事务，事先更新了账户余额并且没提交，那么本事务会被阻塞吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606448272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":323202,"ip_address":""},"score":329705,"extra":""},{"author":{"id":1101226,"avatar":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","nickname":"卫江","note":"","ucode":"DE2F7A6916F1A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2032840,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","nickname":"Javatar","note":"","ucode":"E216645CDF632C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335386,"discussion_content":"是的，任何的更新操作都需要添加锁，只有在事务结束之后才会释放，所以本事务会在获取锁的时候阻塞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608179328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":329705,"ip_address":""},"score":335386,"extra":""},{"author":{"id":1716827,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/32/5b/d0c7e813.jpg","nickname":"luo","note":"","ucode":"1A1DA8EB916ECF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2296382,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0a/3e/5b1b1b75.jpg","nickname":"流年","note":"","ucode":"8B579C6E466CB4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536893,"discussion_content":"赞同，一直想看到这一点，却一直没讲到这一点上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638889062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":323202,"ip_address":""},"score":536893,"extra":""}]},{"author":{"id":3206657,"avatar":"https://static001.geekbang.org/account/avatar/00/30/ee/01/2ecf51b0.jpg","nickname":"Catcher","note":"","ucode":"5BEFBEE3D367A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591218,"discussion_content":"RR隔离级别，两个事务同时更新同一条记录，会不会出现ABA问题？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666404845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2350043,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","nickname":"Geek_7794e2","note":"","ucode":"2F749554FEA20D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578473,"discussion_content":"那这个方案就是用rr 取代 rc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656810210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224326,"user_name":"智超","can_delete":false,"product_type":"c1","uid":1109769,"ip_address":"","ucode":"1C28A46FDD7FA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/09/209cb7ff.jpg","comment_is_top":false,"comment_ctime":1591345621,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44541018581","product_id":100046801,"comment_content":"这篇文章看了几遍，开始觉得讲清楚了，后面又感觉缺少些什么。如果单纯是说事务，那文章还可以。<br>但是实际情况，需要考虑的不止这些，比如转账的问题，需要考虑幂等、死锁等。","like_count":11},{"had_liked":false,"id":187385,"user_name":"E","can_delete":false,"product_type":"c1","uid":1193143,"ip_address":"","ucode":"B1B0759EDA4AF9","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/b7/60281658.jpg","comment_is_top":false,"comment_ctime":1584097119,"is_pvip":false,"replies":[{"id":"72774","content":"这个是和Session绑定的，所以不会有并发问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584408979,"ip_address":"","comment_id":187385,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35943835487","product_id":100046801,"comment_content":"LAST_INSERT_ID() 这个可以保证是事务里最后插入的那个id吗 会遇到是其他事务产生的id吗","like_count":9,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487092,"discussion_content":"这个是和Session绑定的，所以不会有并发问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584408979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213923,"discussion_content":"这是个mysql函数吗？还真没注意过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585135107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039069,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/da/dd/1e5e7b0c.jpg","nickname":"image","note":"","ucode":"A45BFF284F8933","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213381,"discussion_content":"数据量大时一般要分库、分表吧，使用自增场景多吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585065952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216143,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1589196016,"is_pvip":true,"replies":[{"id":"80336","content":"我们一直说，要分析具体的场景，选择合适的方法。所以，要先有场景，才谈得上选择。<br><br>如果有一种方法或技术在各种场景下都优于另外一种，另外一种早就被淘汰了，不会出现在大家的视野中。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589462507,"ip_address":"","comment_id":216143,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31653967088","product_id":100046801,"comment_content":"这里 使用 version 和 select for update 都能解决问题，请问 李sir 实际场合种哪一种更合适","like_count":8,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494686,"discussion_content":"我们一直说，要分析具体的场景，选择合适的方法。所以，要先有场景，才谈得上选择。\n\n如果有一种方法或技术在各种场景下都优于另外一种，另外一种早就被淘汰了，不会出现在大家的视野中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589462507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185109,"user_name":"全麦小面包","can_delete":false,"product_type":"c1","uid":1086413,"ip_address":"","ucode":"823C65BF366097","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/cd/dbafc7d1.jpg","comment_is_top":false,"comment_ctime":1583484772,"is_pvip":false,"replies":[{"id":"71653","content":"JPA是可以返回更新行数的，你让接口更新方法的定义的返回值是int类型，返回的数值就是更新行数。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583636872,"ip_address":"","comment_id":185109,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31648255844","product_id":100046801,"comment_content":"我是java开发者，像JPA框架是不提供更新的影响行数的，那该怎么办呢？","like_count":7,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486256,"discussion_content":"JPA是可以返回更新行数的，你让接口更新方法的定义的返回值是int类型，返回的数值就是更新行数。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583636872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184863,"user_name":"公号-技术夜未眠","can_delete":false,"product_type":"c1","uid":1013683,"ip_address":"","ucode":"83825B57CBD952","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","comment_is_top":false,"comment_ctime":1583420654,"is_pvip":true,"discussion_count":4,"race_medal":0,"score":"31648191726","product_id":100046801,"comment_content":"老师的文章是采用了乐观锁；在采用乐观锁除了要避免出现ABA问题外，还需要注意可能会出现失败的场景。此时，一般可以采用重试的策略；如果并发不是很高，可以在重试多次不行的情况下，考虑降级为悲观锁策略。","like_count":7,"discussions":[{"author":{"id":1036906,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d2/6a/a9039139.jpg","nickname":"IT小僧","note":"","ucode":"4DC9B291AAD748","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315531,"discussion_content":"流水号不会生成之前的，不存在ABA问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603286424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1738493,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Qn1PDx7xA7jKFZr4vHibmsvoZ7bwUCzHTg3uywiaESCgFTTMibPpKdZOfrqTXtdQXxUJqFqmLAj5NoIFMJpYibbcOQ/132","nickname":"happy learn","note":"","ucode":"BCE08C8E64A23E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243758,"discussion_content":"是用select for update锁住吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587559351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213925,"discussion_content":"怎么重试和降级啊，指导一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585135140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2296382,"avatar":"https://static001.geekbang.org/account/avatar/00/23/0a/3e/5b1b1b75.jpg","nickname":"流年","note":"","ucode":"8B579C6E466CB4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323203,"discussion_content":"最简单的，catch异常然后重试，重新发起调用","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1604896216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":213925,"ip_address":""},"score":323203,"extra":""}]}]},{"had_liked":false,"id":228785,"user_name":"沧浪之水","can_delete":false,"product_type":"c1","uid":1126491,"ip_address":"","ucode":"3819CB439BFB4C","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/5b/ed3b2211.jpg","comment_is_top":false,"comment_ctime":1592809152,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18772678336","product_id":100046801,"comment_content":"我的理解是，如果只是简单的把两个动作放入一个事务，当并发较大时，有锁等待的问题，只要发生了锁等待，就会引发死锁检测，这个是很耗费性能的。所以老师给出的实现方案，能有效避免锁等待的问题（因为where加了条件）如果更新成功，就提交事务，如果更新不成功，回滚事务。这样可以最大限度的提高并发的效率。因为只要有一个事务成功提交了，其他等待的事务就自动回滚了。而不会一直等着锁。<br>不知道我的理解对不对 @李sir","like_count":5,"discussions":[{"author":{"id":1443544,"avatar":"https://static001.geekbang.org/account/avatar/00/16/06/d8/30e8b7e6.jpg","nickname":"Laplace","note":"","ucode":"38EEC400DE94FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567331,"discussion_content":"回滚岂不是把这次操作丢掉？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650891054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189505,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1584523240,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"18764392424","product_id":100046801,"comment_content":"如果用户量暴涨后，流水日志db和账户db分开，就不能用这个方法了。。。","like_count":4,"discussions":[{"author":{"id":1019302,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/a6/22c37c91.jpg","nickname":"楊_宵夜","note":"","ucode":"7BA0CADC5F23BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411836,"discussion_content":"分开也不是这么分开, 做水平分库分表就可以; 没有把流水和账户分开的道理, 这不是给自己找茬吗","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636015391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210215,"avatar":"https://static001.geekbang.org/account/avatar/00/12/77/67/180486e3.jpg","nickname":"du tiezheng","note":"","ucode":"33D44752D306F8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561644,"discussion_content":"流水日志暴涨后，除了分库分表，还可以做冷热分离，把距离现在超过三个月的流水，转移到nosql，最新的流水还是跟余额放在一起，走单机事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649689078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365869,"discussion_content":"那得上分布式锁或者分布式事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617893804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1126757,"avatar":"https://static001.geekbang.org/account/avatar/00/11/31/65/c96a7078.jpg","nickname":"123456789十百千万","note":"","ucode":"9F4789B553F1A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273154,"discussion_content":"异步消息机制，用消息中间件“至少被消费一次”特性保持最终一致性。把和交易主链路无关的流水隔离开来，似乎是更好的选择","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590416468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251990,"discussion_content":"分开了，没办法使用本地事务了，得上分布式事务了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588132273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189231,"user_name":"Aliliin","can_delete":false,"product_type":"c1","uid":1025239,"ip_address":"","ucode":"61F9A09BB6650F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/d7/5d2bfaa7.jpg","comment_is_top":false,"comment_ctime":1584491494,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18764360678","product_id":100046801,"comment_content":"好喜欢这门实践课。","like_count":4},{"had_liked":false,"id":186943,"user_name":"误","can_delete":false,"product_type":"c1","uid":1141203,"ip_address":"","ucode":"EDDEBA6F92B32C","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/d3/d9a858cb.jpg","comment_is_top":false,"comment_ctime":1583977468,"is_pvip":false,"replies":[{"id":"72245","content":"请继续学习下一节课，分布式事务。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584064219,"ip_address":"","comment_id":186943,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18763846652","product_id":100046801,"comment_content":"要是更新余额(假设mysql)、记录流水(假设mongo)不是同一个存储设备，如何使用事务保证同时成功或同时失败？","like_count":4,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486930,"discussion_content":"请继续学习下一节课，分布式事务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584064219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227443,"user_name":"Geek_fa5d8b","can_delete":false,"product_type":"c1","uid":1737347,"ip_address":"","ucode":"4C976932383EDB","user_header":"https://static001.geekbang.org/account/avatar/00/1a/82/83/d3926a61.jpg","comment_is_top":false,"comment_ctime":1592380615,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14477282503","product_id":100046801,"comment_content":"READ COMMITTED —— 每次读取数据前都生成一个ReadView<br><br>REPEATABLE READ —— 在第一次读取数据时生成一个ReadView","like_count":3,"discussions":[{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531418,"discussion_content":"这里要加一条 只读事务不会生成事务id","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637307582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202732,"user_name":"锐","can_delete":false,"product_type":"c1","uid":1110915,"ip_address":"","ucode":"A245BA96C9471F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/83/e2612d81.jpg","comment_is_top":false,"comment_ctime":1586059279,"is_pvip":false,"replies":[{"id":"76059","content":"在线交易系统中，用事务解决数据一致性问题还是主流的方法。大厂也是一样的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586223567,"ip_address":"","comment_id":202732,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14470961167","product_id":100046801,"comment_content":"想知道大厂还用事务吗，或者像银行转账，会用事务吗？分布式微服务不适合事务吧，是否做补偿机制就好呢，比如搞个定时任务定时check再修复数据","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490667,"discussion_content":"在线交易系统中，用事务解决数据一致性问题还是主流的方法。大厂也是一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586223567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189790,"user_name":"Wisee","can_delete":false,"product_type":"c1","uid":1117035,"ip_address":"","ucode":"EADD95F86DC2AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/6b/bfa6f7f9.jpg","comment_is_top":false,"comment_ctime":1584550833,"is_pvip":false,"replies":[{"id":"73114","content":"是的，后面我们也会讲到分库分表","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584592593,"ip_address":"","comment_id":189790,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14469452721","product_id":100046801,"comment_content":"这种适合单库的操作，如果是业务量大了，分库分表了，就不能这么做了吧","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487794,"discussion_content":"是的，后面我们也会讲到分库分表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584592593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186922,"user_name":"白不吃","can_delete":false,"product_type":"c1","uid":1033578,"ip_address":"","ucode":"F019914D8819C2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/6a/7f858f1f.jpg","comment_is_top":false,"comment_ctime":1583973694,"is_pvip":true,"replies":[{"id":"72248","content":"会的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584064289,"ip_address":"","comment_id":186922,"utype":1}],"discussion_count":2,"race_medal":1,"score":"14468875582","product_id":100046801,"comment_content":"我有个疑问，对于mysql innodb来说，一个事物（线程）操作数据的时候不是会直接锁行么，另一个事物（线程）不是会处于阻塞等待中么？","like_count":3,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486920,"discussion_content":"会的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584064289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1126491,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/5b/ed3b2211.jpg","nickname":"沧浪之水","note":"","ucode":"3819CB439BFB4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285330,"discussion_content":"所以老师说过，他给的方案能支持高并发，并没有说不用这个方案就不行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592808622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185912,"user_name":"sundy","can_delete":false,"product_type":"c1","uid":1724856,"ip_address":"","ucode":"581D4B976524B6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/51/b8/f76b15a1.jpg","comment_is_top":false,"comment_ctime":1583724222,"is_pvip":false,"discussion_count":11,"race_medal":0,"score":"14468626110","product_id":100046801,"comment_content":"李老师，有一点不太明白，mysql默认级别是rr，如您上面的例子，但是rr是更新读的，也就是在执行更新语句时读到的是200，最终的数据不会出错，那为什么还需要您提供的策略呢？你说的记录流水号的策略解决的是具体什么问题请问？","like_count":3,"discussions":[{"author":{"id":1209170,"avatar":"https://static001.geekbang.org/account/avatar/00/12/73/52/a5a0c0c6.jpg","nickname":"animabear","note":"","ucode":"60E27F9F57DD06","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220633,"discussion_content":"我也有疑问，无论是 rr 还是 rc，在 update set a = a + 1 是，都是当前读，会读到最新版本的数据做更新。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1585909604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1692942,"avatar":"https://static001.geekbang.org/account/avatar/00/19/d5/0e/dae566c7.jpg","nickname":"JOHN","note":"","ucode":"6936DE275AA543","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1209170,"avatar":"https://static001.geekbang.org/account/avatar/00/12/73/52/a5a0c0c6.jpg","nickname":"animabear","note":"","ucode":"60E27F9F57DD06","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":239724,"discussion_content":"我也认同你的看法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587307013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":220633,"ip_address":""},"score":239724,"extra":""}]},{"author":{"id":1053921,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/e1/ee5705a2.jpg","nickname":"Zend","note":"","ucode":"80EBB0B6772E27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":202139,"discussion_content":"其实也可以根据当前事务内查询到的余额做判断条件，是吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1583879965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1053921,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/e1/ee5705a2.jpg","nickname":"Zend","note":"","ucode":"80EBB0B6772E27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":204686,"discussion_content":"余额会有aba的问题 一般版本号或者流水号都不会重复","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1584199594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":202139,"ip_address":""},"score":204686,"extra":""},{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213922,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585134978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":204686,"ip_address":""},"score":213922,"extra":""},{"author":{"id":1905946,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/15/1a/fce31315.jpg","nickname":"Joy Rick","note":"","ucode":"EA42BD15FAF9BA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221764,"discussion_content":"又是版本号控制 ABA 问题的思路，哈哈！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586057867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":204686,"ip_address":""},"score":221764,"extra":""}]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365916,"discussion_content":"我想通了\n加上余额流水的ID，保证有一个更新会失败，在事务中加上余额非负的逻辑判断，避免账户余额扣为负数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617899666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323161,"avatar":"","nickname":"波波","note":"","ucode":"4D16ED4CF21CF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313886,"discussion_content":"测试了下，update 是更新读的，不知道老师这么设计的原因，有点迷惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603102271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1834181,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","nickname":"BugBean","note":"","ucode":"B51232281AD9BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297288,"discussion_content":"老师也会有翻车的时候,独立思考,赞一个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596857752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337892,"user_name":"冰原的苍蓝星","can_delete":false,"product_type":"c1","uid":1862936,"ip_address":"","ucode":"84120EC31A63AF","user_header":"https://static001.geekbang.org/account/avatar/00/1c/6d/18/e05f72ee.jpg","comment_is_top":false,"comment_ctime":1647138940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10237073532","product_id":100046801,"comment_content":"这么多年了，我终于搞明白RR和RC了呜呜呜！","like_count":3},{"had_liked":false,"id":189123,"user_name":"活到天年","can_delete":false,"product_type":"c1","uid":1116236,"ip_address":"","ucode":"03178BA96BE04E","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/4c/e5db89c6.jpg","comment_is_top":false,"comment_ctime":1584457793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10174392385","product_id":100046801,"comment_content":"感谢老师，学了之后感觉对事务的理解，对账户表和流水表的设计，以及涉及服务接口 有了更清晰的认识。","like_count":3},{"had_liked":false,"id":184616,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1583371792,"is_pvip":false,"replies":[{"id":"71646","content":"一般交易类系统如果出现失败，建议的做法是回滚并返回失败。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583635818,"ip_address":"","comment_id":184616,"utype":1}],"discussion_count":5,"race_medal":0,"score":"10173306384","product_id":100046801,"comment_content":"老师，那更新失败的情况一般电商系统该如何处理？是要继续尝试？还是直接返回失败","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486068,"discussion_content":"一般交易类系统如果出现失败，建议的做法是回滚并返回失败。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583635818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1097943,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJB6qS9nxicvToSX4fTrDNv7OVBtsrfr6VwLjPLcwZS8ibicczM15qVx473KgrYQg0TIFeibXD0RgK6WQ/132","nickname":"传志","note":"","ucode":"2B0F67BCFCB3D5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":196883,"discussion_content":"可以用CAS方案，更新几次，如果还不成功记录错误日志报警人工处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583381575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043480,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","nickname":"肥low","note":"","ucode":"A158AFAAB8C742","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":196804,"discussion_content":"我也想问这个问题 但是这种针对每个用户的余额的更新并发应该不是很高吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583374178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1043480,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","nickname":"肥low","note":"","ucode":"A158AFAAB8C742","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213936,"discussion_content":"账号被盗，多个客户端同时消费，可能性不高啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585135727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":196804,"ip_address":""},"score":213936,"extra":""},{"author":{"id":1503064,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ef/58/d05ec302.jpg","nickname":"Frode","note":"","ucode":"B7B8DBF9980EA1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1043480,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","nickname":"肥low","note":"","ucode":"A158AFAAB8C742","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392905,"discussion_content":"如果是很多人抢电影院门票呢，抢演唱会门票呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631175037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":196804,"ip_address":""},"score":392905,"extra":""}]}]},{"had_liked":false,"id":184588,"user_name":"Cranliu","can_delete":false,"product_type":"c1","uid":1304302,"ip_address":"","ucode":"DC2DE84B142FDA","user_header":"https://static001.geekbang.org/account/avatar/00/13/e6/ee/e3c4c9b3.jpg","comment_is_top":false,"comment_ctime":1583367689,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"10173302281","product_id":100046801,"comment_content":"RR级别下加的是next-key锁，可以解决幻读的吧？","like_count":3,"discussions":[{"author":{"id":1001390,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/ae/0a5f7a56.jpg","nickname":"此方彼方Francis","note":"","ucode":"73E6C93CF1FE39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197055,"discussion_content":"RR 也是可以避免幻读的：通过对 select 操作手动加 行X锁（SELECT ... FOR UPDATE 这也正是 SERIALIZABLE 隔离级别下会隐式为你做的事情），同时还需要知道，即便当前记录不存在，比如 id = 1 是不存在的，当前事务也会获得一把记录锁（因为InnoDB的行锁锁定的是索引，故记录实体存在与否没关系，存在就加 行X锁，不存在就加 next-key lock间隙X锁），其他事务则无法插入此索引的记录，故杜绝了幻读。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1583401621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1039069,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/da/dd/1e5e7b0c.jpg","nickname":"image","note":"","ucode":"A45BFF284F8933","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213390,"discussion_content":"Innodb 的 RR 隔离界别对范围会加上 GAP，理论上不会存在幻读。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585066562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111842,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/22/53802377.jpg","nickname":"hinswho.","note":"","ucode":"D72FA8F7BE1B36","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380096,"discussion_content":"innodb引擎RR做了间隙锁来避免，但传统的RR是有幻读的可能的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624339035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":248633,"discussion_content":"MYSQL 5.7.24 这个版本的PR 是可以避免幻读的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587882849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197436,"discussion_content":"这个问题希望老师统一解释下，为什么rr级别可以防止幻影读？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583420150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1506609,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/q2HwchogzNiavKhIB4GfAxH6B88NhSoC7B7keVEUqiaP6JPokDUNJLYehocOyqYqrhA3iaxywyRXLYkYJjDUQESZw/132","nickname":"残天噬魂","note":"","ucode":"A2AD8303A4518D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":196845,"discussion_content":"我记得也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583377578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":213058,"user_name":"😚 46","can_delete":false,"product_type":"c1","uid":1433535,"ip_address":"","ucode":"EED0EBBBF80A43","user_header":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","comment_is_top":false,"comment_ctime":1588292323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883259619","product_id":100046801,"comment_content":"account_balance表是不是需要给log_id添加索引，避免并发update时锁表呢？","like_count":1},{"had_liked":false,"id":196051,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1585232554,"is_pvip":false,"replies":[{"id":"74407","content":"你可以试一下。<br><br>实际上是不行的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585272390,"ip_address":"","comment_id":196051,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5880199850","product_id":100046801,"comment_content":"如果隔离级别是RR那log_id作为更新条件的逻辑就可以去了吧？@玥哥","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489217,"discussion_content":"你可以试一下。\n\n实际上是不行的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585272390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1106394,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e1/da/d7f591a7.jpg","nickname":"励研冰","note":"","ucode":"FCBC8266018FA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228037,"discussion_content":"是要加上的，感觉跟Version是同一个道理; 在Mysql里不管是什么隔离级别更新的时候都是使用的”当前读”做的更新，所以在说Mysql中更新是原子性的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1586522999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2388888,"avatar":"https://static001.geekbang.org/account/avatar/00/24/73/98/ec4d22af.jpg","nickname":"阿K","note":"","ucode":"C9E1B6D50135D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1106394,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e1/da/d7f591a7.jpg","nickname":"励研冰","note":"","ucode":"FCBC8266018FA0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583003,"discussion_content":"可以去掉，更新的时候也是当前读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659872046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":228037,"ip_address":"北京"},"score":583003,"extra":""}]},{"author":{"id":1622022,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia6zEsh2u119zJicmq7wApvnricZEKiawaZicice1cOzujWdFicFwPtavlHiaVpCNgCpxBtdl7ynd3y0wkQ/132","nickname":"james_xu","note":"","ucode":"12E50291F5BA89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410272,"discussion_content":"更新时要想去掉logID的话，就必须把查询账户的sql语句改成 select ... for update，这样给对应记录加上了行锁就不怕被其他事务更新了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635647783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185226,"user_name":"Spring coming","can_delete":false,"product_type":"c1","uid":1116196,"ip_address":"","ucode":"9E01F2D987D08B","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/24/1d3bafaf.jpg","comment_is_top":false,"comment_ctime":1583538654,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878505950","product_id":100046801,"comment_content":"请教老师问题<br>1.  这里的脏读，不可重复读，幻读中的&quot;读&quot;指的是select指令吗<br><br>2. 对于account_log表中的from_accout和to_accout值是出自account对吗，比如用户绑定了一张银行卡和一个微信支付，再加上用户自己的余额账号，那account表就要给这个用户创建三个账号，在充值的时候把银行或者微信对应的account Id写入到from_account,用户的余额账号id写入to_account，我理解的对吗<br><br>3. 如果用RC隔离级别讲解幻读的话就能在第一个事务的第二次查询中查到已经提交的1000这条数据，RC RR都不能避免幻读的情况下，结果不一致，感觉案例不是很准确 <br><br>4. 事务中如何通过锁机制来控制隔离级别，以及各种死锁的情况老师会在以后的课程中讲解吗<br>","like_count":1},{"had_liked":false,"id":184785,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1583402725,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"5878370021","product_id":100046801,"comment_content":"幻读的定义一直不太明确，有争论，不同定义对于MySQL到底RR解决没解决幻读，结论也不同。<br>我更倾向权威的定义，引自&lt;&lt;A Critique of ANSI SQL Isolation Levels&gt;&gt;:<br>P3 (Phantom): Transaction T1 reads a set of data items satisfying some &lt;search condition&gt;. Transaction T2 then creates data items that satisfy T1’s &lt;search condition&gt; and commits. If T1 then repeats its read with the same &lt;search condition&gt;, it gets a set of data items different from the first read.<br>这与本课给的定义不同。<br><br>当然不影响本课的核心内容，大家也没必要钻牛角尖","like_count":2,"discussions":[{"author":{"id":1003233,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4e/e1/436a7576.jpg","nickname":"皮皮厮","note":"","ucode":"18EFAA3BFCDC26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331683,"discussion_content":"嘿嘿，又见面了~~  补一记mysql 官网的定义： The so-called phantom problem occurs within a transaction when the same query produces different sets of rows at different times. For example, if a SELECT is executed twice, but returns a row the second time that was not returned the first time, the row is a “phantom” row.  ","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606932294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1046714,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","nickname":"约书亚","note":"","ucode":"81EA27ADD9EC1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1003233,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4e/e1/436a7576.jpg","nickname":"皮皮厮","note":"","ucode":"18EFAA3BFCDC26","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331782,"discussion_content":"厮大也是神出鬼没啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606976546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":331683,"ip_address":""},"score":331782,"extra":""}]},{"author":{"id":1520538,"avatar":"https://static001.geekbang.org/account/avatar/00/17/33/9a/f295dea5.jpg","nickname":"李正g","note":"","ucode":"A7BEA03BB6537A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579792,"discussion_content":"瑕不掩瑜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657694454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622022,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJia6zEsh2u119zJicmq7wApvnricZEKiawaZicice1cOzujWdFicFwPtavlHiaVpCNgCpxBtdl7ynd3y0wkQ/132","nickname":"james_xu","note":"","ucode":"12E50291F5BA89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410274,"discussion_content":"幻读特指读到了新插入的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635647890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339623,"user_name":"Geek_35b029","can_delete":false,"product_type":"c1","uid":2898194,"ip_address":"","ucode":"731E04AC894197","user_header":"","comment_is_top":false,"comment_ctime":1648256357,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648256357","product_id":100046801,"comment_content":"想问下“需要特别注意的一点是，更新账户余额后，不能只检查更新语句是不是执行成功了，还需要检查返回值中变更的行数是不是等于 1。因为即使流水号不相等，余额没有更新，这条更新语句的执行结果仍然是成功的，只是更新了 0 条记录。” 可以举个例子嘛？不是特别懂","like_count":0},{"had_liked":false,"id":336766,"user_name":"MT006","can_delete":false,"product_type":"c1","uid":1813364,"ip_address":"","ucode":"83C7D7EEBD32C1","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ab/74/286d74c0.jpg","comment_is_top":false,"comment_ctime":1646359244,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646359244","product_id":100046801,"comment_content":"我们给账户余额表增加一个 log_id 属性，记录最后一笔交易的流水号。<br>请问，这里的流水号是什么时间点记录进来的？<br>记录流水号的操作不需要在事务里吗？","like_count":0},{"had_liked":false,"id":327285,"user_name":"zcc","can_delete":false,"product_type":"c1","uid":1046664,"ip_address":"","ucode":"58FB42400517A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/88/96b870fd.jpg","comment_is_top":false,"comment_ctime":1640049127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640049127","product_id":100046801,"comment_content":"流水只能新增，那相当于流水记录是无状态了。请问下账户注销操作，此时应该生成什么样的流水？注销账户后，之前的历史流水不应该看到了，要物理删除还是逻辑删除？账户记录也物理删除吗？","like_count":0},{"had_liked":false,"id":323022,"user_name":"滩涂曳尾","can_delete":false,"product_type":"c1","uid":1187478,"ip_address":"","ucode":"40F650F2A419D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/1e/96/c735ad6b.jpg","comment_is_top":false,"comment_ctime":1637712121,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637712121","product_id":100046801,"comment_content":"看上去原子性和一致性是同一件事情？","like_count":0},{"had_liked":false,"id":319683,"user_name":"董俊俊","can_delete":false,"product_type":"c1","uid":1297887,"ip_address":"","ucode":"732300A779660B","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","comment_is_top":false,"comment_ctime":1635908257,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635908257","product_id":100046801,"comment_content":"实际生产环境中账户系统还要和下单扣库存等在一个事务中吧？","like_count":0},{"had_liked":false,"id":312256,"user_name":"Geek_471297","can_delete":false,"product_type":"c1","uid":2765715,"ip_address":"","ucode":"498ADB4810F1EA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJmzuVdR1RbM4LsaPC2POwz3LIbPiapiaaRngsgdV9Z68kG3HicXka9mGjE2hgr4gliay1fut1IyJqDgA/132","comment_is_top":false,"comment_ctime":1631706816,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631706816","product_id":100046801,"comment_content":"这么做遇到并发，估计对不上账吧，不是应该用乐观锁，悲观锁或者分布式锁锁住账户变吗","like_count":0},{"had_liked":false,"id":304366,"user_name":"林铭铭","can_delete":false,"product_type":"c1","uid":1068499,"ip_address":"","ucode":"AB392BEE7CD6A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/d3/67bdcca9.jpg","comment_is_top":false,"comment_ctime":1627373497,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627373497","product_id":100046801,"comment_content":"温故而知新","like_count":0},{"had_liked":false,"id":297477,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1623571554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623571554","product_id":100046801,"comment_content":"RC隔离级别，读已提交的数据，每当数据发生改变，事物提交后，数据的变化立即就能被感知，在行为上，能实时获取最新的数据；RR隔离级别，可重复读，在事物处理过程中，读到的数据都是和事物开始时保持一致，即使当数据已经被其他事物改变后，也不能立即感知，因此，在行为上，对数据变化的感知能力比较滞后。","like_count":0},{"had_liked":false,"id":287358,"user_name":"夜辉","can_delete":false,"product_type":"c1","uid":1886331,"ip_address":"","ucode":"9421385F51FF9E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","comment_is_top":false,"comment_ctime":1617899710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617899710","product_id":100046801,"comment_content":"加上余额流水的ID，保证有一个更新会失败，在事务中加上余额非负的逻辑判断，避免账户余额扣为负数","like_count":0},{"had_liked":false,"id":286397,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1617279989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617279989","product_id":100046801,"comment_content":"我们线上是做分布式事务的 资产与流水是分开存放 因为流水表实在是太大了 没法做本地事务。具体就是update account<br>set balance = balance - @delta<br>where uid = @uid<br>and balance &gt;= @delta<br>通过uid的行锁来实现 流水表再用消费者慢慢insert进去","like_count":0},{"had_liked":false,"id":255771,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1603425276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603425276","product_id":100046801,"comment_content":"RR级别这个幻读现象是不是就是不可重复读类？RC级别下面怎么样能够重现幻读勒？","like_count":0},{"had_liked":false,"id":252203,"user_name":"隰有荷","can_delete":false,"product_type":"c1","uid":1357944,"ip_address":"","ucode":"2BE9A32AB28963","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/78/2828195b.jpg","comment_is_top":false,"comment_ctime":1602177084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602177084","product_id":100046801,"comment_content":"老师，如果余额表不加log_id，RR隔离级别下，如果事务A在对旧数据更新的过程中，数据表中的数据会被其他事务修改吗？数据库是不是应该有什么机制可以避免多个事务共同修改同一条数据呢？","like_count":0},{"had_liked":false,"id":231450,"user_name":"斜杠青年","can_delete":false,"product_type":"c1","uid":1177739,"ip_address":"","ucode":"D7AF02B8588549","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/8b/74d2ab6b.jpg","comment_is_top":false,"comment_ctime":1593679108,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1593679108","product_id":100046801,"comment_content":"RR级别如何出现幻读，能否举个例子，RR级别是指可重复读，读取的数据在事务生命周期下 都是一样的。这样可以吗？事务A begin update account_balance set balance = balance + 100;","like_count":0,"discussions":[{"author":{"id":2174684,"avatar":"https://static001.geekbang.org/account/avatar/00/21/2e/dc/5b4b1de0.jpg","nickname":"王俊杰","note":"","ucode":"C27EC943D8786F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305023,"discussion_content":"网络波动的时候，会不会多调两次sql","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599743392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227330,"user_name":"MClink","can_delete":false,"product_type":"c1","uid":1435733,"ip_address":"","ucode":"F479190923355C","user_header":"https://static001.geekbang.org/account/avatar/00/15/e8/55/92f82281.jpg","comment_is_top":false,"comment_ctime":1592358843,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1592358843","product_id":100046801,"comment_content":"mysql 为啥默认用可重复读作为默认的隔离级别，网上查到是说因为主从复制中，binglog 格式如果是 STATEMENT ，会出现主从不一致的问题，因为此格式下在master上执行的顺序为先删后插！而此时binlog为STATEMENT格式，它记录的顺序为先插后删！从(slave)同步的是binglog，因此从机执行的顺序和主机不一致，除了这个还有其他的原因吗？","like_count":0},{"had_liked":false,"id":226854,"user_name":"西门吹牛","can_delete":false,"product_type":"c1","uid":1508990,"ip_address":"","ucode":"E5D3624DDE1E83","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/7e/735968e2.jpg","comment_is_top":false,"comment_ctime":1592217416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592217416","product_id":100046801,"comment_content":"RC：读已提交，在事物内，每条sql。都会创建一个视图，所以，在读的时候，如果别的事物有提交，它创建的视图是可以拿到其它事物已提交的数据的；<br>RR：在事物一开始，只创建一个一致性视图，在事物执行过程中，都是以这个视图为准，同一行记录，被多个事物操作，会有多个数据版本，Mysql会记录回滚日志，以及在行锁的配合下，能保证事物就算回滚，也不受其他事物影响，如果别的事物更新了记录，当前事物读到的还是自己的数据版本。","like_count":0},{"had_liked":false,"id":226237,"user_name":"zz","can_delete":false,"product_type":"c1","uid":1293835,"ip_address":"","ucode":"EFE0C8D60D0CAC","user_header":"https://static001.geekbang.org/account/avatar/00/13/be/0b/0a381067.jpg","comment_is_top":false,"comment_ctime":1592012810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592012810","product_id":100046801,"comment_content":"我遇到大多数帐对不上的情况基本都是财务管理混乱导致的，财务功能经常变动，记账转自动化，都是账目混乱的原因。","like_count":0},{"had_liked":false,"id":221343,"user_name":"李琪","can_delete":false,"product_type":"c1","uid":1694456,"ip_address":"","ucode":"66A02520B3F2AC","user_header":"https://static001.geekbang.org/account/avatar/00/19/da/f8/8ebac3d8.jpg","comment_is_top":false,"comment_ctime":1590478581,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590478581","product_id":100046801,"comment_content":"加log_id解决了什么问题？在更新余额这个场景下是否有必要","like_count":0},{"had_liked":false,"id":220207,"user_name":"木木夕","can_delete":false,"product_type":"c1","uid":1526471,"ip_address":"","ucode":"EA5D709D0DE50E","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/c7/0cff4a59.jpg","comment_is_top":false,"comment_ctime":1590203837,"is_pvip":false,"replies":[{"id":"81463","content":"如果你用代码去执行insert语句，大多数ORM框架在返回值中，就包含刚刚插入数据的主键值，不需要再执行LAST_INSERT_ID()获取了。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1590368884,"ip_address":"","comment_id":220207,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590203837","product_id":100046801,"comment_content":"老师， LAST_INSERT_ID() 这个SQL函数，如果在业务代码中执行的顺序是accountLogMapper.insert()    接着执行XXXMapper.insert() 最后才是accountBalanceMapper.update()  -&gt; update account_balance set balance = balance + 100, log_id = LAST_INSERT_ID(), timestamp = NOW() where user_id = 0 and log_id = 3;  LAST_INSERT_ID()会自动识别accountLogMapper.insert()的LAST_INSERT_ID的吗？还是说拿到accountLogMapper.insert()返回的LAST_INSERT_ID 再传入accountBalanceMapper.update(LAST_INSERT_ID)去更新？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496084,"discussion_content":"如果你用代码去执行insert语句，大多数ORM框架在返回值中，就包含刚刚插入数据的主键值，不需要再执行LAST_INSERT_ID()获取了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590368884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217193,"user_name":"大头爸爸","can_delete":false,"product_type":"c1","uid":1276613,"ip_address":"","ucode":"131E25DB04D222","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gmP4Yh00MZPwNvr4UQdLeXaX3TVyZEEp195S3vD3Sfl1xz5jBr1474Mt6w5OPr0KsrnQObfLRy5PkKNFjSBiasA/132","comment_is_top":false,"comment_ctime":1589437107,"is_pvip":false,"replies":[{"id":"80329","content":"我们为了讲清楚技术，会尽量把无关的东西剥离干净，所以是手写的SQL。实际项目中，这个逻辑应该在业务代码中实现。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589461638,"ip_address":"","comment_id":217193,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589437107","product_id":100046801,"comment_content":"请问，那个整个交易的 SQL里面，<br>我们要先查到log_id = 3; 然后set balances里面设定where log_id=3，<br>怎么才能把它搞成通用的呢？毕竟每次都要手动查很麻烦，要是下次log_id=5, SQL语句又要重改。","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495071,"discussion_content":"我们为了讲清楚技术，会尽量把无关的东西剥离干净，所以是手写的SQL。实际项目中，这个逻辑应该在业务代码中实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589461638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210640,"user_name":"鹏小蔡","can_delete":false,"product_type":"c1","uid":1302573,"ip_address":"","ucode":"EA0EBE6817261D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/2d/1332fad1.jpg","comment_is_top":false,"comment_ctime":1587801216,"is_pvip":false,"replies":[{"id":"78782","content":"这个流水号是自增ID，所以Insert的时候不需要指定。LAST_INSERT_ID()可以获得上次insert的自增ID，并且这个方法是绑定会话的，所以，即使你上次插入数据之后，有其他的会话插入了新数据，LAST_INSERT_ID()返回的仍然是你这个会话上次插入记录的ID","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1588048660,"ip_address":"","comment_id":210640,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587801216","product_id":100046801,"comment_content":"李sir，上面的例子说在先账户表插入最后一笔更新的流水号，但是在插入流水表的时候却没有insert流水号，这两个流水号不会不一样吗？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493072,"discussion_content":"这个流水号是自增ID，所以Insert的时候不需要指定。LAST_INSERT_ID()可以获得上次insert的自增ID，并且这个方法是绑定会话的，所以，即使你上次插入数据之后，有其他的会话插入了新数据，LAST_INSERT_ID()返回的仍然是你这个会话上次插入记录的ID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588048660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208359,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1587344910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587344910","product_id":100046801,"comment_content":"同一个事务的话，热点账户问题就不好解决，请教一下老师，对于热点账户问题解决方案？","like_count":0},{"had_liked":false,"id":204668,"user_name":"Yezhiwei","can_delete":false,"product_type":"c1","uid":1005157,"ip_address":"","ucode":"31E8E33688CBEC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/65/22a37a8e.jpg","comment_is_top":false,"comment_ctime":1586439913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586439913","product_id":100046801,"comment_content":"老师，请问账户系统的表设计会用到财务上的复式记账吗？","like_count":0},{"had_liked":false,"id":192540,"user_name":"加油吧威基基","can_delete":false,"product_type":"c1","uid":1815912,"ip_address":"","ucode":"86CB4B78F3859D","user_header":"","comment_is_top":false,"comment_ctime":1584858890,"is_pvip":false,"replies":[{"id":"73872","content":"确实是这样的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585013805,"ip_address":"","comment_id":192540,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584858890","product_id":100046801,"comment_content":"老师，您文中提到的余额属于数据冗余但是是空间换时间，这就是反范式设计吧","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488417,"discussion_content":"确实是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585013805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191491,"user_name":"james","can_delete":false,"product_type":"c1","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1584777563,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584777563","product_id":100046801,"comment_content":"这个基于乐观锁的更新余额并不咋通用，最通用的还是分布式锁，缺点有日志表不是数据库表或者不在一个数据库没法用事务，还有用户余额记录如果在表里面没有还得考虑加锁插入的问题","like_count":0},{"had_liked":false,"id":188229,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1584329185,"is_pvip":true,"replies":[{"id":"72789","content":"你可以试一下，看看结果到底是什么样的？","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584410710,"ip_address":"","comment_id":188229,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1584329185","product_id":100046801,"comment_content":"sql&gt; update account_balance -&gt; set balance = balance + 100, log_id = LAST_INSERT_ID(), timestamp = NOW() -&gt; where user_id = 0 and log_id = 3;Query OK, 1 row affected (0.00 sec)Rows matched: 1 Changed: 1 Warnings: 0 <br>老师在RR 可重复读的状况下， 如果一个事务修改了流水号从3到log_id=4，并且提交， 但是另一个事务应为是可重复读，他读到的流水号一直是3呀， 这样LAST_INSERT_ID() 他的值不也是3 嘛， 这样另一个事务也会执行成功，但是结果就是不对的了呀","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487358,"discussion_content":"你可以试一下，看看结果到底是什么样的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1230031,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c4/cf/6e1205cc.jpg","nickname":"马晨阳","note":"","ucode":"344ACC3BF7F14A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220177,"discussion_content":"更新读吧，插不进去的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585839483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1036370,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/d0/52/014accaf.jpg","nickname":"划过天空阿忠","note":"","ucode":"9D9BEE73031E40","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213929,"discussion_content":"有一个会插入失败吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585135360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213382,"discussion_content":"会执行成功，但update 0行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585065997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185241,"user_name":"GeekAmI","can_delete":false,"product_type":"c1","uid":1005030,"ip_address":"","ucode":"232C0B6DFB9F56","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/e6/87197b10.jpg","comment_is_top":false,"comment_ctime":1583544938,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583544938","product_id":100046801,"comment_content":"请问老师，查余额与插入交易记录、更新余额，不需要放在同一个事务里吧，可以降低事务的粒度。","like_count":0,"discussions":[{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252120,"discussion_content":"不放在一起怎么保证一致性🤣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588142566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185172,"user_name":"🐳大海全是水","can_delete":false,"product_type":"c1","uid":1295883,"ip_address":"","ucode":"8FB523F8D54D8B","user_header":"https://static001.geekbang.org/account/avatar/00/13/c6/0b/eb3589f1.jpg","comment_is_top":false,"comment_ctime":1583504197,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583504197","product_id":100046801,"comment_content":"更新语句中使用last_insert_id()是否是最好的实践呢？如果上一条语句insert into account_log values -&gt; (NULL, 100, NOW(), 1, 1001, NULL, 0, NULL, 0, 0);这里插入了多条语句，last_insert_id只返回了第一条修改过后的id值，而且这2条语句中不能再有insert其他表的语句了。我的意思是这里的代码就不容易维护了，有没有其他更好的方法？","like_count":0,"discussions":[{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252127,"discussion_content":"使用GUID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588142784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184898,"user_name":"o9","can_delete":false,"product_type":"c1","uid":1101332,"ip_address":"","ucode":"E373E82A39BBFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","comment_is_top":false,"comment_ctime":1583427472,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583427472","product_id":100046801,"comment_content":"深入浅出！<br><br>对于 RC 隔离级别而言，并发高的情况下会出现，由于更新余额时有 where log_id = 更新之前查询的log_id 所以更新条数为 0 ，回滚，充值失败，不影响数据的一致性。<br><br>对于 RR 隔离级别而言，由于是可重复读的，所以 更新余额的 sql 可以执行成功。","like_count":0},{"had_liked":false,"id":184830,"user_name":"陈靖","can_delete":false,"product_type":"c1","uid":1147418,"ip_address":"","ucode":"8C9596A54DB5C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/1a/64ec25ff.jpg","comment_is_top":false,"comment_ctime":1583415065,"is_pvip":false,"replies":[{"id":"71649","content":"在事务内加上余额检查的逻辑就可以了。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583636203,"ip_address":"","comment_id":184830,"utype":1}],"discussion_count":5,"race_medal":0,"score":"1583415065","product_id":100046801,"comment_content":"假如两个事务一起执行，把余额扣成负数了，而两个事务都执行了，该如何处理？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486138,"discussion_content":"在事务内加上余额检查的逻辑就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583636203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147418,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/1a/64ec25ff.jpg","nickname":"陈靖","note":"","ucode":"8C9596A54DB5C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257419,"discussion_content":"这个应该还要看隔离级别，有行锁不代表另一个会失败","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588568819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252100,"discussion_content":"这里应该不会出现这种情况吧？两个事务应该是有先后关系的，update有行锁，后面那个事务在update余额时，log_id应该是已经发生了变化，因此后面的事务在update余额时，应该会更新失败吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588141683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1147418,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/1a/64ec25ff.jpg","nickname":"陈靖","note":"","ucode":"8C9596A54DB5C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":252980,"discussion_content":"两个事物分别在不同线程，是可以同时执行的哦，你可以试试分别在两个终端连接上去，分别一行一行的执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588208559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":252100,"ip_address":""},"score":252980,"extra":""},{"author":{"id":1433535,"avatar":"https://static001.geekbang.org/account/avatar/00/15/df/bf/96b50d1e.jpg","nickname":"😚 46","note":"","ucode":"EED0EBBBF80A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1147418,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/1a/64ec25ff.jpg","nickname":"陈靖","note":"","ucode":"8C9596A54DB5C8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":254188,"discussion_content":"两个事务并发更新一条记录是有锁的。后面执行的事务的update操作的更新行数是0，因为log_id已经变化了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588299564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":252980,"ip_address":""},"score":254188,"extra":""}]}]},{"had_liked":false,"id":184717,"user_name":"大秦皇朝","can_delete":false,"product_type":"c1","uid":1301113,"ip_address":"","ucode":"0F72D0D2FAEAF2","user_header":"https://static001.geekbang.org/account/avatar/00/13/da/79/9b093890.jpg","comment_is_top":false,"comment_ctime":1583390734,"is_pvip":false,"replies":[{"id":"71648","content":"我也没有专门对比测试过二者的性能差距，经验上看，也是和你测试结果差不多，二者性能差距应该不是很明显。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1583636072,"ip_address":"","comment_id":184717,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583390734","product_id":100046801,"comment_content":"李Sir，能否大概提一下RC和RR在一般情况下在多少数据量级别，性能差距能有多少？作为小白来说，自己做这种测试貌似受到其它外界因素影响较大，实际测试出来好像感觉不是很明显。因为您可能比较有经验或者经历过，所以想请教下您能否大概说说？感谢！","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486107,"discussion_content":"我也没有专门对比测试过二者的性能差距，经验上看，也是和你测试结果差不多，二者性能差距应该不是很明显。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583636072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184627,"user_name":"肥low","can_delete":false,"product_type":"c1","uid":1043480,"ip_address":"","ucode":"A158AFAAB8C742","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","comment_is_top":false,"comment_ctime":1583374036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583374036","product_id":100046801,"comment_content":"首先赞一下排版 问题难道是想问MVCC么 两种级别生成快照时机不同？","like_count":0},{"had_liked":false,"id":184608,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1583370541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583370541","product_id":100046801,"comment_content":"又巩固了一遍事务的问题，不过这块确实容易蒙，尤其是面试中，还是需要自己下去梳理整理一下，加深印象","like_count":0},{"had_liked":false,"id":184598,"user_name":"何妨","can_delete":false,"product_type":"c1","uid":1385377,"ip_address":"","ucode":"EC3983BFF7992A","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","comment_is_top":false,"comment_ctime":1583369496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583369496","product_id":100046801,"comment_content":"我在考虑的是，更新账户余额的时候是不是应该同时更新一下最后一笔交易流水的id呢？","like_count":0},{"had_liked":false,"id":184596,"user_name":"zcc","can_delete":false,"product_type":"c1","uid":1046664,"ip_address":"","ucode":"58FB42400517A9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/88/96b870fd.jpg","comment_is_top":false,"comment_ctime":1583368727,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1583368727","product_id":100046801,"comment_content":"老师，DDL语句，为什么插入流水表时，不记录账户余额表的主键呢？","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":196807,"discussion_content":"这个地方的设计是，视转入还是转出，to_account 和 from_accout记录余额表的主键。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583374383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1046664,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f8/88/96b870fd.jpg","nickname":"zcc","note":"","ucode":"58FB42400517A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":197102,"discussion_content":"好的，谢谢！喜欢听您的专栏，讲故事一样生动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583406872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":196807,"ip_address":""},"score":197102,"extra":""},{"author":{"id":1013683,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/77/b3/991f3f9b.jpg","nickname":"公号-技术夜未眠","note":"","ucode":"83825B57CBD952","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":197477,"discussion_content":"李老师的内容很接地气了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583420774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":196807,"ip_address":""},"score":197477,"extra":""}]}]}]}