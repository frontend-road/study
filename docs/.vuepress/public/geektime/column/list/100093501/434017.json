{"id":434017,"title":"09｜即学即练：构建一个Web服务就是这么简单","content":"<p>你好，我是Tony Bai。</p><p>在入门篇前面的几节课中，我们已经从Go开发环境的安装，一路讲到了Go包的初始化次序与Go入口函数。讲解这些，不仅仅是因为它们是你学习Go语言的基础，同时我也想为你建立“手勤”的意识打好基础。</p><p>作为Go语言学习的“过来人”，学到这个阶段，我深知你心里都在跃跃欲试，想将前面学到的知识综合运用起来，实现一个属于自己的Go程序。但到目前为止，我们还没有开始Go基础语法的系统学习，你肯定会有一种“无米下炊”的感觉。</p><p>不用担心，我在这节课安排了一个实战小项目。在这个小项目里，我希望你不要困在各种语法里，而是先跟着我““照猫画虎”地写一遍、跑一次，感受Go项目的结构，体会Go语言的魅力。</p><h2>预热：最简单的HTTP服务</h2><p>在想选择以什么类型的项目的时候，我还颇费了一番脑筋。我查阅了<a href=\"https://go.dev/blog/survey2020-results\">Go官方用户2020调查报告</a>，找到Go应用最广泛的领域调查结果图，如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/9a/91/9ab73568ef659d75a313f3394a811491.png?wh=1194x1158\" alt=\"图片\"></p><p>我们看到，Go应用的前4个领域中，有两个都是Web服务相关的。一个是排在第一位的API/RPC服务，另一个是排在第四位的Web服务（返回html页面）。考虑到后续你把Go应用于Web服务领域的机会比较大，所以，在这节课我们就选择一个Web服务项目作为实战小项目。</p><!-- [[[read_end]]] --><p>不过在真正开始我们的实战小项目前，我们先来预热一下，做一下技术铺垫。我先来给你演示一下<strong>在Go中创建一个基于HTTP协议的Web服务是多么的简单</strong>。</p><p>这种简单又要归功于Go“面向工程”特性。在02讲介绍Go的设计哲学时，我们也说过，Go“面向工程”的特性，不仅体现在语言设计方面时刻考虑开发人员的体验，而且它还提供了完善的工具链和“自带电池”的标准库，这就使得Go程序大大减少了对外部第三方包的依赖。以开发Web服务为例，我们可以基于Go标准库提供的net/http包，轻松构建一个承载Web内容传输的HTTP服务。</p><p>下面，我们就来构建一个最简单的HTTP服务，这个服务的功能很简单，就是当收到一个HTTP请求后，给请求方返回包含“hello, world”数据的响应。</p><p>我们首先按下面步骤建立一个simple-http-server目录，并创建一个名为simple-http-server的Go Module：</p><pre><code class=\"language-plain\">$mkdir simple-http-server\n$cd simple-http-server\n$go mod init simple-http-server\n</code></pre><p>由于这个HTTP服务比较简单，我们采用最简项目布局，也就是在simple-http-server目录下创建一个main.go源文件：</p><pre><code class=\"language-go\">  package main\n \n  import \"net/http\"\n  \n  func main() {\n      http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request){\n          w.Write([]byte(\"hello, world\"))\n      })\n      http.ListenAndServe(\":8080\", nil)\n }\n</code></pre><p>这些代码就是一个最简单的HTTP服务的实现了。在这个实现中，我们只使用了Go标准库的http包。可能你现在对http包还不熟悉，但没有关系，你现在只需要大致了解上面代码的结构与原理就可以了。</p><p>这段代码里，你要注意两个重要的函数，一个是ListenAndServe，另一个是HandleFunc。</p><p>你会看到，代码的第9行，我们通过http包提供的ListenAndServe函数，建立起一个HTTP服务，这个服务监听本地的8080端口。客户端通过这个端口与服务建立连接，发送HTTP请求就可以得到相应的响应结果。</p><p>那么服务端是如何处理客户端发送的请求的呢？我们看上面代码中的第6行。在这一行中，我们为这个服务设置了一个处理函数。这个函数的函数原型是这样的：</p><pre><code class=\"language-go\">func(w http.ResponseWriter, r *http.Request)\n</code></pre><p>这个函数里有两个参数，w和r。第二个参数r代表来自客户端的HTTP请求，第一个参数w则是用来操作返回给客户端的应答的，基于http包实现的HTTP服务的处理函数都要符合这一原型。</p><p>你也发现了，在这个例子中，所有来自客户端的请求，无论请求的URI路径（RequestURI）是什么，请求都会被我们设置的处理函数处理。为什么会这样呢？</p><p>这是因为，我们通过http.HandleFunc设置这个处理函数时，传入的模式字符串为“/”。HTTP服务器在收到请求后，会将请求中的URI路径与设置的模式字符串进行<strong>最长前缀匹配</strong>，并执行匹配到的模式字符串所对应的处理函数。在这个例子中，我们仅设置了“/”这一个模式字符串，并且所有请求的URI都能与之匹配，自然所有请求都会被我们设置的处理函数处理。</p><p>接着，我们再来编译运行一下这个程序，直观感受一下HTTP服务处理请求的过程。我们首先按下面步骤来编译并运行这个程序：</p><pre><code class=\"language-go\">$cd simple-http-server\n$go build\n$./simple-http-server\n</code></pre><p>接下来，我们用curl命令行工具模拟客户端，向上述服务建立连接并发送http请求：</p><pre><code class=\"language-go\">$curl localhost:8080/\nhello, world\n</code></pre><p>我们看到，curl成功得到了http服务返回的“hello, world”响应数据。到此，我们的HTTP服务就构建成功了。</p><p>当然了，真实世界的Web服务不可能像上述例子这么简单，这仅仅是一个“预热”。我想让你知道，使用Go构建Web服务是非常容易的。并且，这样的预热也能让你初步了解实现代码的结构，先有一个技术铺垫。</p><p>下面我们就进入这节课的实战小项目，一个更接近于真实世界情况的<strong>图书管理API服务</strong>。</p><h2>图书管理API服务</h2><p>首先，我们先来明确一下我们的业务逻辑。</p><p>在这个实战小项目中，我们模拟的是真实世界的一个书店的图书管理后端服务。这个服务为平台前端以及其他客户端，提供针对图书的CRUD（创建、检索、更新与删除）的基于HTTP协议的API。API采用典型的RESTful风格设计，这个服务提供的API集合如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/99/51/99717b62f7553e1a5139edcf2ac03b51.jpg?wh=1980x788\" alt=\"\"></p><p>这个API服务的逻辑并不复杂。简单来说，我们通过id来唯一标识一本书，对于图书来说，这个id通常是ISBN号。至于客户端和服务端中请求与响应的数据，我们采用放在HTTP协议包体（Body）中的Json格式数据来承载。</p><p>业务逻辑是不是很简单啊？下面我们就直接开始创建这个项目。</p><h3>项目建立与布局设计</h3><p>我们按照下面步骤创建一个名为bookstore的Go项目并创建对应的Go Module：</p><pre><code class=\"language-go\">$mkdir bookstore\n$cd bookstore\n$go mod init bookstore\ngo: creating new go.mod: module bookstore\n</code></pre><p>通过上面的业务逻辑说明，我们可以把这个服务大体拆分为两大部分，一部分是HTTP服务器，用来对外提供API服务；另一部分是图书数据的存储模块，所有的图书数据均存储在这里。</p><p>同时，这是一个以构建可执行程序为目的的Go项目，我们参考Go项目布局标准一讲中的项目布局，把这个项目的结构布局设计成这样：</p><pre><code class=\"language-go\">├── cmd/\n│&nbsp;&nbsp; └── bookstore/         // 放置bookstore main包源码\n│&nbsp;&nbsp;     └── main.go\n├── go.mod                 // module bookstore的go.mod\n├── go.sum\n├── internal/              // 存放项目内部包的目录\n│&nbsp;&nbsp; └── store/\n│&nbsp;&nbsp;     └── memstore.go     \n├── server/                // HTTP服务器模块\n│&nbsp;&nbsp; ├── middleware/\n│&nbsp;&nbsp; │&nbsp;&nbsp; └── middleware.go\n│&nbsp;&nbsp; └── server.go          \n└── store/                 // 图书数据存储模块\n    ├── factory/\n    │&nbsp;&nbsp; └── factory.go\n    └── store.go\n</code></pre><p>现在，我们既给出了这个项目的结构布局，也给出了这个项目最终实现的源码文件分布情况。下面我们就从main包开始，自上而下逐一看看这个项目的模块设计与实现。</p><h3>项目main包</h3><p>main包是主要包，为了搞清楚各个模块之间的关系，我在这里给出了main包的实现逻辑图：</p><p><img src=\"https://static001.geekbang.org/resource/image/5e/19/5e8ee50b67a4229210b12afb94f55a19.jpg?wh=1980x1080\" alt=\"\"></p><p>同时，我也列出了main包（main.go）的所有代码，你可以先花几分钟看一下：</p><pre><code class=\"language-go\">  package main\n \n  import (\n      _ \"bookstore/internal/store\"\n      \"bookstore/server\"\n      \"bookstore/store/factory\"\n      \"context\"\n      \"log\"\n      \"os\"\n      \"os/signal\"\n      \"syscall\"\n      \"time\"\n )\n \n func main() {\n     s, err := factory.New(\"mem\") // 创建图书数据存储模块实例\n     if err != nil {\n         panic(err)\n     }\n \n     srv := server.NewBookStoreServer(\":8080\", s) // 创建http服务实例\n \n     errChan, err := srv.ListenAndServe() // 运行http服务\n     if err != nil {\n         log.Println(\"web server start failed:\", err)\n         return\n     }\n     log.Println(\"web server start ok\")\n \n     c := make(chan os.Signal, 1)\n     signal.Notify(c, syscall.SIGINT, syscall.SIGTERM)\n \n     select { // 监视来自errChan以及c的事件\n     case err = &lt;-errChan:\n         log.Println(\"web server run failed:\", err)\n         return\n     case &lt;-c:\n         log.Println(\"bookstore program is exiting...\")\n         ctx, cf := context.WithTimeout(context.Background(), time.Second)\n         defer cf()\n         err = srv.Shutdown(ctx) // 优雅关闭http服务实例\n     }\n \n     if err != nil {\n         log.Println(\"bookstore program exit error:\", err)\n         return\n     }\n     log.Println(\"bookstore program exit ok\")\n }\n</code></pre><p>在Go中，main包不仅包含了整个程序的入口，它还是整个程序中主要模块初始化与组装的场所。那对应在我们这个程序中，主要模块就是第16行的创建图书存储模块实例，以及第21行创建HTTP服务模块实例。而且，你还要注意的是，第21行创建HTTP服务模块实例的时候，我们把图书数据存储实例s作为参数，传递给了NewBookStoreServer函数。这两个实例的创建原理，我们等会再来细细探讨。</p><p>这里，我们重点来看main函数的后半部分（第30行~第42行），这里表示的是，我们通过监视系统信号实现了http服务实例的优雅退出。</p><p>所谓优雅退出，指的就是程序有机会等待其他的事情处理完再退出。比如尚未完成的事务处理、清理资源（比如关闭文件描述符、关闭socket）、保存必要中间状态、内存数据持久化落盘，等等。如果你经常用Go来编写http服务，那么http服务如何优雅退出，就是你经常要考虑的问题。</p><p>在这个问题的具体实现上，我们通过signal包的Notify捕获了SIGINT、SIGTERM这两个系统信号。这样，当这两个信号中的任何一个触发时，我们的http服务实例都有机会在退出前做一些清理工作。</p><p>然后，我们再使用http服务实例（srv）自身提供的Shutdown方法，来实现http服务实例内部的退出清理工作，包括：立即关闭所有listener、关闭所有空闲的连接、等待处于活动状态的连接处理完毕，等等。当http服务实例的清理工作完成后，我们整个程序就可以正常退出了。</p><p>接下来，我们再重点看看构成bookstore程序的两个主要模块：图书数据存储模块与HTTP服务模块的实现。我们按照main函数中的初始化顺序，先来看看图书数据存储模块。</p><h3>图书数据存储模块（store)</h3><p>图书数据存储模块的职责很清晰，就是用来<strong>存储整个bookstore的图书数据</strong>的。图书数据存储有很多种实现方式，最简单的方式莫过于在内存中创建一个map，以图书id作为key，来保存图书信息，我们在这一讲中也会采用这种方式。但如果我们要考虑上生产环境，数据要进行持久化，那么最实际的方式就是通过Nosql数据库甚至是关系型数据库，实现对图书数据的存储与管理。</p><p>考虑到对多种存储实现方式的支持，我们将针对图书的有限种存储操作，放置在一个接口类型Store中，如下源码所示：</p><pre><code class=\"language-go\">// store/store.go\n\n type Book struct {\n     Id      string   `json:\"id\"`      // 图书ISBN ID\n     Name    string   `json:\"name\"`    // 图书名称\n     Authors []string `json:\"authors\"` // 图书作者\n     Press   string   `json:\"press\"`   // 出版社\n }\n \n type Store interface {\n     Create(*Book) error        // 创建一个新图书条目\n     Update(*Book) error        // 更新某图书条目\n     Get(string) (Book, error)  // 获取某图书信息\n     GetAll() ([]Book, error)   // 获取所有图书信息\n     Delete(string) error       // 删除某图书条目\n }\n</code></pre><p>这里，我们建立了一个对应图书条目的抽象数据类型Book，以及针对Book存取的接口类型Store。这样，对于想要进行图书数据操作的一方来说，他只需要得到一个满足Store接口的实例，就可以实现对图书数据的存储操作了，不用再关心图书数据究竟采用了何种存储方式。这就实现了图书存储操作与底层图书数据存储方式的解耦。而且，这种面向接口编程也是Go组合设计哲学的一个重要体现。</p><p>那我们具体如何创建一个满足Store接口的实例呢？我们可以参考《设计模式》提供的多种创建型模式，选择一种Go风格的工厂模式（创建型模式的一种）来实现满足Store接口实例的创建。我们看一下store/factory包的源码：</p><pre><code class=\"language-go\">// store/factory/factory.go\n\n var (\n     providersMu sync.RWMutex\n     providers   = make(map[string]store.Store)\n )\n \n func Register(name string, p store.Store) {\n     providersMu.Lock()\n    defer providersMu.Unlock()\n     if p == nil {\n         panic(\"store: Register provider is nil\")\n     }\n \n     if _, dup := providers[name]; dup {\n         panic(\"store: Register called twice for provider \" + name)\n     }\n     providers[name] = p\n }\n \n func New(providerName string) (store.Store, error) {\n     providersMu.RLock()\n     p, ok := providers[providerName]\n     providersMu.RUnlock()\n     if !ok {\n         return nil, fmt.Errorf(\"store: unknown provider %s\", providerName)\n     }\n \n     return p, nil\n }\n</code></pre><p>这段代码实际上是效仿了Go标准库的database/sql包采用的方式，factory包采用了一个map类型数据，对工厂可以“生产”的、满足Store接口的实例类型进行管理。factory包还提供了Register函数，让各个实现Store接口的类型可以把自己“注册”到工厂中来。</p><p>一旦注册成功，factory包就可以“生产”出这种满足Store接口的类型实例。而依赖Store接口的使用方，只需要调用factory包的New函数，再传入期望使用的图书存储实现的名称，就可以得到对应的类型实例了。</p><p>在项目的internal/store目录下，我们还提供了一个基于内存map的Store接口的实现，我们具体看一下这个实现是怎么自注册到factory包中的：</p><pre><code class=\"language-go\">// internal/store/memstore.go\n\n package store\n  \n import (\n     mystore \"bookstore/store\"\n     factory \"bookstore/store/factory\"\n     \"sync\"\n )\n  \n func init() {\n     factory.Register(\"mem\", &amp;MemStore{\n         books: make(map[string]*mystore.Book),\n     })\n }\n \n type MemStore struct {\n     sync.RWMutex\n     books map[string]*mystore.Book\n }\n</code></pre><p>从memstore的代码来看，它是在包的init函数中调用factory包提供的Register函数，把自己的实例以“mem”的名称注册到factory中的。这样做有一个好处，依赖Store接口进行图书数据管理的一方，只要导入internal/store这个包，就可以自动完成注册动作了。</p><p>理解了这个之后，我们再看下面main包中，创建图书数据存储模块实例时采用的代码，是不是就豁然开朗了？</p><pre><code class=\"language-go\">import (\n    ... ...\n    _ \"bookstore/internal/store\" // internal/store将自身注册到factory中\n)\n\nfunc main() {\n    s, err := factory.New(\"mem\") // 创建名为\"mem\"的图书数据存储模块实例\n    if err != nil {\n        panic(err)\n    }\n    ... ...\n}\n</code></pre><p>至于memstore.go中图书数据存储的具体逻辑，就比较简单了，我这里就不详细分析了，你课后自己阅读一下吧。</p><p>接着，我们再来看看bookstore程序的另外一个重要模块：HTTP服务模块。</p><h3>HTTP服务模块（server）</h3><p>HTTP服务模块的职责是<strong>对外提供HTTP API服务，处理来自客户端的各种请求，并通过Store接口实例执行针对图书数据的相关操作</strong>。这里，我们抽象处理一个server包，这个包中定义了一个BookStoreServer类型如下：</p><pre><code class=\"language-go\">// server/server.go\n\n type BookStoreServer struct {\n     s   store.Store\n     srv *http.Server\n }\n</code></pre><p>我们看到，这个类型实质上就是一个标准库的http.Server，并且组合了来自store.Store接口的能力。server包提供了NewBookStoreServer函数，用来创建一个BookStoreServer类型实例：</p><pre><code class=\"language-go\">// server/server.go\n\n func NewBookStoreServer(addr string, s store.Store) *BookStoreServer {\n     srv := &amp;BookStoreServer{\n         s: s,\n         srv: &amp;http.Server{\n             Addr: addr,\n         },\n     }\n \n     router := mux.NewRouter()\n     router.HandleFunc(\"/book\", srv.createBookHandler).Methods(\"POST\")\n     router.HandleFunc(\"/book/{id}\", srv.updateBookHandler).Methods(\"POST\")\n     router.HandleFunc(\"/book/{id}\", srv.getBookHandler).Methods(\"GET\")\n     router.HandleFunc(\"/book\", srv.getAllBooksHandler).Methods(\"GET\")\n     router.HandleFunc(\"/book/{id}\", srv.delBookHandler).Methods(\"DELETE\")\n \n     srv.srv.Handler = middleware.Logging(middleware.Validating(router))\n     return srv\n }\n</code></pre><p>我们看到函数NewBookStoreServer接受两个参数，一个是HTTP服务监听的服务地址，另外一个是实现了store.Store接口的类型实例。这种函数原型的设计是Go语言的一种惯用设计方法，也就是接受一个接口类型参数，返回一个具体类型。返回的具体类型组合了传入的接口类型的能力。</p><p>这个时候，和前面预热时实现的简单http服务一样，我们还需为HTTP服务器设置请求的处理函数。</p><p>由于这个服务请求URI的模式字符串比较复杂，标准库http包内置的URI路径模式匹配器（ServeMux，也称为路由管理器）不能满足我们的需求，因此在这里，我们需要借助一个第三方包github.com/gorilla/mux来实现我们的需求。</p><p>在上面代码的第11行到第16行，我们针对不同URI路径模式设置了不同的处理函数。我们以createBookHandler和getBookHandler为例来看看这些处理函数的实现：</p><pre><code class=\"language-go\">// server/server.go\n\n  func (bs *BookStoreServer) createBookHandler(w http.ResponseWriter, req *http.Request) {\n      dec := json.NewDecoder(req.Body)\n      var book store.Book\n      if err := dec.Decode(&amp;book); err != nil {\n          http.Error(w, err.Error(), http.StatusBadRequest)\n          return\n      }\n  \n      if err := bs.s.Create(&amp;book); err != nil {\n          http.Error(w, err.Error(), http.StatusBadRequest)\n          return\n      }\n  }\n\n  func (bs *BookStoreServer) getBookHandler(w http.ResponseWriter, req *http.Request) {\n      id, ok := mux.Vars(req)[\"id\"]\n      if !ok {\n          http.Error(w, \"no id found in request\", http.StatusBadRequest)\n          return\n      }\n  \n     book, err := bs.s.Get(id)\n     if err != nil {\n         http.Error(w, err.Error(), http.StatusBadRequest)\n         return\n     }\n \n     response(w, book)\n }\n\n func response(w http.ResponseWriter, v interface{}) {\n     data, err := json.Marshal(v)\n     if err != nil {\n         http.Error(w, err.Error(), http.StatusInternalServerError)\n         return\n     }\n     w.Header().Set(\"Content-Type\", \"application/json\")\n     w.Write(data)\n }\n</code></pre><p>这些处理函数的实现都大同小异，都是先获取http请求包体数据，然后通过标准库json包将这些数据，解码（decode）为我们需要的store.Book结构体实例，再通过Store接口对图书数据进行存储操作。如果我们是获取图书数据的请求，那么处理函数将通过response函数，把取出的图书数据编码到http响应的包体中，并返回给客户端。</p><p>然后，在NewBookStoreServer函数实现的尾部，我们还看到了这样一行代码：</p><pre><code class=\"language-go\">     srv.srv.Handler = middleware.Logging(middleware.Validating(router))\n</code></pre><p>这行代码的意思是说，我们在router的外围包裹了两层middleware。什么是middleware呢？对于我们的上下文来说，这些middleware就是一些通用的http处理函数。我们看一下这里的两个middleware，也就是Logging与Validating函数的实现：</p><pre><code class=\"language-go\">// server/middleware/middleware.go\n\n  func Logging(next http.Handler) http.Handler {\n     return http.HandlerFunc(func(w http.ResponseWriter, req *http.Request) {\n         log.Printf(\"recv a %s request from %s\", req.Method, req.RemoteAddr)\n         next.ServeHTTP(w, req)\n     })\n }\n \n func Validating(next http.Handler) http.Handler {\n     return http.HandlerFunc(func(w http.ResponseWriter, req *http.Request) {\n         contentType := req.Header.Get(\"Content-Type\")\n         mediatype, _, err := mime.ParseMediaType(contentType)\n         if err != nil {\n             http.Error(w, err.Error(), http.StatusBadRequest)\n             return\n         }\n         if mediatype != \"application/json\" {\n             http.Error(w, \"invalid Content-Type\", http.StatusUnsupportedMediaType)\n             return\n         }\n         next.ServeHTTP(w, req)\n     })\n }\n</code></pre><p>我们看到，Logging函数主要用来输出每个到达的HTTP请求的一些概要信息，而Validating则会对每个http请求的头部进行检查，检查Content-Type头字段所表示的媒体类型是否为application/json。这些通用的middleware函数，会被串联到每个真正的处理函数之前，避免我们在每个处理函数中重复实现这些逻辑。</p><p>创建完BookStoreServer实例后，我们就可以调用其ListenAndServe方法运行这个http服务了，显然这个方法的名字是仿效http.Server类型的同名方法，我们的实现是这样的：</p><pre><code class=\"language-go\">// server/server.go\n\n func (bs *BookStoreServer) ListenAndServe() (&lt;-chan error, error) {\n     var err error\n     errChan := make(chan error)\n     go func() {\n         err = bs.srv.ListenAndServe()\n         errChan &lt;- err\n     }()\n \n     select {\n     case err = &lt;-errChan:\n         return nil, err\n     case &lt;-time.After(time.Second):\n         return errChan, nil\n     }\n }\n</code></pre><p>我们看到，这个函数把BookStoreServer内部的http.Server的运行，放置到一个单独的轻量级线程Goroutine中。这是因为，http.Server.ListenAndServe会阻塞代码的继续运行，如果不把它放在单独的Goroutine中，后面的代码将无法得到执行。</p><p>为了检测到http.Server.ListenAndServe的运行状态，我们再通过一个channel（位于第5行的errChan），在新创建的Goroutine与主Goroutine之间建立的通信渠道。通过这个渠道，这样我们能及时得到http server的运行状态。</p><h3>编译、运行与验证</h3><p>到这里，bookstore项目的大部分重要代码我们都分析了一遍，是时候将程序跑起来看看了。</p><p>不过，因为我们在程序中引入了一个第三方依赖包，所以在构建项目之前，我们需要执行下面这个命令，让Go命令自动分析依赖项和版本，并更新go.mod：</p><pre><code class=\"language-go\">$go mod tidy\ngo: finding module for package github.com/gorilla/mux\ngo: found github.com/gorilla/mux in github.com/gorilla/mux v1.8.0\n</code></pre><p>完成后，我们就可以按下面的步骤来构建并执行bookstore了：</p><pre><code class=\"language-go\">$go build bookstore/cmd/bookstore\n$./bookstore\n2021/10/05 16:08:36 web server start ok\n</code></pre><p>如果你看到上面这个输出的日志，说明我们的程序启动成功了。</p><p>现在，我们就可以像前面一样使用curl命令行工具，模仿客户端向bookstore服务发起请求了，比如创建一个新书条目：</p><pre><code class=\"language-go\">$curl -X POST -H \"Content-Type:application/json\" -d '{\"id\": \"978-7-111-55842-2\", \"name\": \"The Go Programming Language\", \"authors\":[\"Alan A.A.Donovan\", \"Brian W. Kergnighan\"],\"press\": \"Pearson Education\"}' localhost:8080/book\n</code></pre><p>此时服务端会输出如下日志，表明我们的bookstore服务收到了客户端请求。</p><pre><code class=\"language-go\">2021/10/05 16:09:10 recv a POST request from [::1]:58021\n</code></pre><p>接下来，我们再来获取一下这本书的信息：</p><pre><code class=\"language-go\">$curl -X GET -H \"Content-Type:application/json\" localhost:8080/book/978-7-111-55842-2\n{\"id\":\"978-7-111-55842-2\",\"name\":\"The Go Programming Language\",\"authors\":[\"Alan A.A.Donovan\",\"Brian W. Kergnighan\"],\"press\":\"Pearson Education\"}\n</code></pre><p>我们看到curl得到的响应与我们预期的是一致的。</p><p>好了，我们不再进一步验证了，你课后还可以自行编译、执行并验证。</p><h2>小结</h2><p>到这里，我们就完成了我们第一个实战小项目，不知道你感觉如何呢？</p><p>在这一讲中，我们带你用Go语言构建了一个最简单的HTTP服务，以及一个接近真实的图书管理API服务。在整个实战小项目的实现过程中，你也能初步学习到Go编码时常用的一些惯用法，比如基于接口的组合、类似database/sql所使用的惯用创建模式，等等。</p><p>通过这节课的学习，你是否体会到了Go语言的魅力了呢？是否察觉到Go编码与其他主流语言不同的风格了呢？其实不论你的理解程度有多少，都不重要。只要你能“照猫画虎”地将上面的程序自己编写一遍，构建、运行起来并验证一遍，就算是完美达成这一讲的目标了。</p><p>你在这个过程肯定会有各种各样的问题，但没关系，这些问题会成为你继续向下学习Go的动力。毕竟，<strong>带着问题的学习，能让你的学习过程更有的放矢、更高效</strong>。</p><h2>思考题</h2><p>如果你完成了今天的代码，觉得自己学有余力，可以再挑战一下，不妨试试基于nosql数据库，我们怎么实现一个新store.Store接口的实现吧？</p><p>欢迎把这节课分享给更多对Go语言感兴趣的朋友。我是Tony Bai，我们下节课见。</p><h2>资源链接</h2><p><a href=\"https://github.com/bigwhite/publication/tree/master/column/timegeek/go-first-course/09/bookstore\">这节课的图书管理项目的完整源码在这里！</a></p>","neighbors":{"left":{"article_title":"08｜入口函数与包初始化：搞清Go程序的执行次序","id":432021},"right":{"article_title":"10｜变量声明：静态语言有别于动态语言的重要特征","id":435858}},"comments":[{"had_liked":false,"id":320108,"user_name":"自由","can_delete":false,"product_type":"c1","uid":2576960,"ip_address":"","ucode":"4E3B53D29D86CA","user_header":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","comment_is_top":false,"comment_ctime":1636083248,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"164844840496","product_id":100093501,"comment_content":"Tony Bai 老师的这篇“简单”的 Web 代码构建，细节特别多，足矣看出功力深厚。例如锁的选型、工程化、为什么用锁、面向接口、设计模式、通过 Channel 通信而不是共享内存、panic 和 error 的区别。我认为这样的代码，是一个完美的开始。","like_count":39,"discussions":[{"author":{"id":1068192,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4c/a0/6cfdefa6.jpg","nickname":"特修斯之船","note":"","ucode":"C041A289017D0C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546498,"discussion_content":"这捧的，是托吧？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1642322436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576479,"discussion_content":"额~怎么说呢，入门的时候看得有点懵，学完后又觉得就是把很多知识点融进去了，但是放在开头，并没有觉得是个完美的开始。。。。就。。。很普通。 真的新手看不懂也无所谓，后面再回过来看吧。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655570050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2968936,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/4d/68/3e5ed2ce.jpg","nickname":"Geek_zzzheng","note":"","ucode":"B5F6C61E2EAA4B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587072,"discussion_content":"等你独自开发web应用一段时间后，遇到困境了再回来看看这篇文章，你绝对会受益匪浅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662732964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":576479,"ip_address":"辽宁"},"score":587072,"extra":""}]},{"author":{"id":2282788,"avatar":"","nickname":"Geek_e7b923","note":"","ucode":"A0963ABABF197D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412504,"discussion_content":"乐死我得了，但凡能讲个课的，这些还是亮点了？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636194991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2576960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","nickname":"自由","note":"","ucode":"4E3B53D29D86CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2282788,"avatar":"","nickname":"Geek_e7b923","note":"","ucode":"A0963ABABF197D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413350,"discussion_content":"我觉得重点在于学习的人，能否知道这些亮点","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1636453620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":412504,"ip_address":""},"score":413350,"extra":""}]}]},{"had_liked":false,"id":324042,"user_name":"扣剑书生","can_delete":false,"product_type":"c1","uid":2855599,"ip_address":"","ucode":"6F5FD189D2916C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/92/af/ad02ae4b.jpg","comment_is_top":false,"comment_ctime":1638270377,"is_pvip":false,"replies":[{"id":"117965","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1638828027,"ip_address":"","comment_id":324042,"utype":1}],"discussion_count":1,"race_medal":0,"score":"74652714409","product_id":100093501,"comment_content":"store.go提供了 图书 和 接口的模板<br>factory 用于生产 接口实例<br>memstore.go 用于具体实现一个接口实例，实现其方法，并把样例发送到工厂<br>server.go 用于把路由和接口的方法对接起来","like_count":17,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536591,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638828027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320734,"user_name":"尧九之阳","can_delete":false,"product_type":"c1","uid":2722684,"ip_address":"","ucode":"3B6BB2AE30022A","user_header":"https://static001.geekbang.org/account/avatar/00/29/8b/7c/fe7b1bf7.jpg","comment_is_top":false,"comment_ctime":1636475700,"is_pvip":false,"replies":[{"id":"116719","content":"go最初有很多web框架，经过多年演进，目前gin这个web框架似乎成为了go社区的首选。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636901267,"ip_address":"","comment_id":320734,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31701246772","product_id":100093501,"comment_content":"Go现在有流行的web服务器框架么？","like_count":7,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530094,"discussion_content":"go最初有很多web框架，经过多年演进，目前gin这个web框架似乎成为了go社区的首选。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636901267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112676,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","nickname":"Sam Fu","note":"","ucode":"EA285A4943271F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413746,"discussion_content":"gin?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636554103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319926,"user_name":"布凡","can_delete":false,"product_type":"c1","uid":1202465,"ip_address":"","ucode":"346FCD332F8BFA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","comment_is_top":false,"comment_ctime":1636010624,"is_pvip":false,"replies":[{"id":"116234","content":"项目都是在mac&#47;linux上做的。但理论上windows可以直接使用。你提到的项目放在gopath或goroot下是不必要的。支持go module模式后，如果启用了go module构建模式，放在哪个目录下都是可以的。<br><br>另外项目代码放在了github上，在文章末尾有链接。可直接clone后使用。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636386802,"ip_address":"","comment_id":319926,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27405814400","product_id":100093501,"comment_content":"终于实验成功：<br>以下几个点需注意：<br>1、项目应放到 gopath货goroot相关的目录下，否则本地包的引用会报错，报错信息如下：&quot;could not import errors (cannot find package &quot;errors&quot; in any of c:\\go\\src\\errors (from $GOROOT)...)&quot;<br>2、如果是复制的代码应该注意文件格式，可能报错&quot;package main: read unexpected NUL in input&quot;","like_count":7,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529813,"discussion_content":"项目都是在mac/linux上做的。但理论上windows可以直接使用。你提到的项目放在gopath或goroot下是不必要的。支持go module模式后，如果启用了go module构建模式，放在哪个目录下都是可以的。\n\n另外项目代码放在了github上，在文章末尾有链接。可直接clone后使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636386802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1155437,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a1/6d/a4ff33bb.jpg","nickname":"Lee","note":"","ucode":"0FF1C4EAF7F98A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":592036,"discussion_content":"老师 我go module启用了，但是go build的时候还是报 package bookstore/cmd/bookstore is not in GOROOT (/usr/local/go/src/bookstore/cmd/bookstore)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667038517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":529813,"ip_address":"广东"},"score":592036,"extra":""}]},{"author":{"id":1202465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","nickname":"布凡","note":"","ucode":"346FCD332F8BFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413238,"discussion_content":"感谢老师指点，我再去研究一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319550,"user_name":"猫饼","can_delete":false,"product_type":"c1","uid":1310456,"ip_address":"","ucode":"675F4880937469","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/f8/3e8de9b1.jpg","comment_is_top":false,"comment_ctime":1635846825,"is_pvip":false,"replies":[{"id":"115897","content":"先“照猫画虎”吧。一旦涉及此类实战小项目，必然会有没有系统学习的内容。后面学习新语法时，可以回过头来复习。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1635932636,"ip_address":"","comment_id":319550,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23110683305","product_id":100093501,"comment_content":"我果然还是太菜了 我开始看不懂了","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529668,"discussion_content":"先“照猫画虎”吧。一旦涉及此类实战小项目，必然会有没有系统学习的内容。后面学习新语法时，可以回过头来复习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635932636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310456,"avatar":"https://static001.geekbang.org/account/avatar/00/13/fe/f8/3e8de9b1.jpg","nickname":"猫饼","note":"","ucode":"675F4880937469","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412434,"discussion_content":"感谢老师  我会坚持的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636166915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319374,"user_name":"高雪斌","can_delete":false,"product_type":"c1","uid":2827964,"ip_address":"","ucode":"75E9F13CB7C66D","user_header":"https://static001.geekbang.org/account/avatar/00/2b/26/bc/18314557.jpg","comment_is_top":false,"comment_ctime":1635764130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23110600610","product_id":100093501,"comment_content":"C++转Go, Go语言设计的确实很简洁、精妙。Tony Bai老师从语言结构开始讲的风格非常受用，比通常的从语法开始讲的形式要好，虽然一些代码现在看不明白，但这样带着问题学习语法更容易理解。","like_count":5},{"had_liked":false,"id":335329,"user_name":"顷","can_delete":false,"product_type":"c1","uid":1132878,"ip_address":"","ucode":"096B6859C1FA80","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/4e/8798cd01.jpg","comment_is_top":false,"comment_ctime":1645452963,"is_pvip":true,"replies":[{"id":"122615","content":"好问题！<br><br>首先errChan并不是等shutdown之后 listenAndServe报错的。而是等运行国产中，listenandserve一旦报错，程序可以退出。<br><br>接下来，我们再说说优雅退出。按照你的描述，我翻了一下net.http的文档：<br><br>“Shutdown gracefully shuts down the server without interrupting any active connections. Shutdown works by first closing all open listeners, then closing all idle connections, and then waiting indefinitely for connections to return to idle and then shut down. If the provided context expires before the shutdown is complete, Shutdown returns the context&#39;s error, otherwise it returns any error returned from closing the Server&#39;s underlying Listener(s).”<br><br>我的理解是调用Shutdown后，ListenAndServe()方法的确会马上返回，不过这个无所谓了,listenandserver只是将listen端口关闭，不接受新连接了。<br><br>真正等待存量连接处理完毕的是shutdown方法，shutdown方法调用后，不是马上退出的哦。shutdown方法有一个ctx，专栏中传入了一个timeout ctx，时间为1s。即等待1s。关键就在这里。在生产环境，我们可能不能无限期等待程序退出，我们会设置一个timeout。如果shutdown在1s内完成等待，成功退出，这是最理想的。如果shutdown没有在1s内完成等待，即存量连接还没有处理完，那么按照我们的约定，我们也不能再等了。<br><br>当然这里只是demo，使用的timeout=1s。在生产中，你可以根据业务的类型以及经验值来等待。甚至可以进行无限等待，这完全取决于你的系统。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1645606554,"ip_address":"","comment_id":335329,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18825322147","product_id":100093501,"comment_content":"老师的这个示例，麻雀虽小，五脏俱全。不过main.go里有一点疑问：http.Server.Shutdown(ctx)被调用后，http.Server.ListenAndServe()方法马上会返回error吧，按照实例代码里的写法，接收到中断信号后，马上调用Shutdown方法，此时errChan会返回ErrServerClosed，select逻辑走完，main方法就退出了，而go的http包里示意了我们需要确保shutdown调用后，整个代码不能马上退出，请老师解惑。。","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552831,"discussion_content":"好问题！\n\n首先errChan并不是等shutdown之后 listenAndServe报错的。而是等运行国产中，listenandserve一旦报错，程序可以退出。\n\n接下来，我们再说说优雅退出。按照你的描述，我翻了一下net.http的文档：\n\n“Shutdown gracefully shuts down the server without interrupting any active connections. Shutdown works by first closing all open listeners, then closing all idle connections, and then waiting indefinitely for connections to return to idle and then shut down. If the provided context expires before the shutdown is complete, Shutdown returns the context&#39;s error, otherwise it returns any error returned from closing the Server&#39;s underlying Listener(s).”\n\n我的理解是调用Shutdown后，ListenAndServe()方法的确会马上返回，不过这个无所谓了,listenandserver只是将listen端口关闭，不接受新连接了。\n\n真正等待存量连接处理完毕的是shutdown方法，shutdown方法调用后，不是马上退出的哦。shutdown方法有一个ctx，专栏中传入了一个timeout ctx，时间为1s。即等待1s。关键就在这里。在生产环境，我们可能不能无限期等待程序退出，我们会设置一个timeout。如果shutdown在1s内完成等待，成功退出，这是最理想的。如果shutdown没有在1s内完成等待，即存量连接还没有处理完，那么按照我们的约定，我们也不能再等了。\n\n当然这里只是demo，使用的timeout=1s。在生产中，你可以根据业务的类型以及经验值来等待。甚至可以进行无限等待，这完全取决于你的系统。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645606554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111176,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/88/133bc14b.jpg","nickname":"c340","note":"","ucode":"D64CC3DDD09A0F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582751,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659658430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319551,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1635847046,"is_pvip":false,"replies":[{"id":"115896","content":"问题1. 你的理解没有错。<br>问题2. 可以不用另起，记得好像有些工具在格式化时会自动填上。<br>3. 定位不同，这个是入门专栏。那个进阶专栏。有很小部分有相似的地方，但讲解方式都做了调整和优化。建议学完这个专栏后，再去看看那个专栏。<br>4. rpc封装的很深，如果仅是使用的话，没啥东西。这个专栏更多聚焦于go语法以及尽量使用标准库的东西做一些实用程序和项目。<br>","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1635932582,"ip_address":"","comment_id":319551,"utype":1}],"discussion_count":5,"race_medal":0,"score":"18815716230","product_id":100093501,"comment_content":"感谢 Tony Bai 老师这样由浅入深，并且尽可能贴近实战的讲解。<br><br>有以下困惑，麻烦解忧。<br><br>1. 对于一个module中，相同的包名，go内部是根据文件位置的不同，加以区分的吧？ 例如：bookstore&#47;store 和 bookstore&#47;internal&#47;store 这两个 package 同名，但是文件的路径不同，所以并不会有什么问题。如果在同一个package中，导入另一个同名的package，最佳实践是取个别名，我的理解没错吧？<br><br>2. 另外在 memstore.go 中的 包导入语句中： factory &quot;bookstore&#47;store&#47;factory&quot;，这个 默认使用的是factory名字，不需要再另起名字为factory吧？<br><br>3. 这门课中的知识和你在另外的一个平台的《改善Go语言编程质量的50个有效实践》的内容重合度大吗？ 精力有限，如果重合度大，就专心看这个就好了。<br><br>4. 这门课会讲讲Go写RPC服务方面的知识吗？ 这个在生产中挺常用的。","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529669,"discussion_content":"问题1. 你的理解没有错。\n问题2. 可以不用另起，记得好像有些工具在格式化时会自动填上。\n3. 定位不同，这个是入门专栏。那个进阶专栏。有很小部分有相似的地方，但讲解方式都做了调整和优化。建议学完这个专栏后，再去看看那个专栏。\n4. rpc封装的很深，如果仅是使用的话，没啥东西。这个专栏更多聚焦于go语法以及尽量使用标准库的东西做一些实用程序和项目。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635932582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576480,"discussion_content":"别问，问就是都看。 哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655570182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552592,"discussion_content":"请问，《改善Go语言编程质量的50个有效实践》 地址是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645520574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1793879,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJHTX1IwEl1Eh1CCO2ejL2gKe08Vxib61UZz9l5WGA81ObK0Nk5MCZ3ic6IWcW5kyX0DtwBNMEMl2Q/132","nickname":"Geek_8ed998","note":"","ucode":"1C164836354665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411861,"discussion_content":"package bookstore/cmd/bookstore is not in GOROOT (/usr/local/go/src/bookstore/cmd/bookstore) 按老师的步骤执行到这里出错，什么原因阿\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636020580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2576960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","nickname":"自由","note":"","ucode":"4E3B53D29D86CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1793879,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJHTX1IwEl1Eh1CCO2ejL2gKe08Vxib61UZz9l5WGA81ObK0Nk5MCZ3ic6IWcW5kyX0DtwBNMEMl2Q/132","nickname":"Geek_8ed998","note":"","ucode":"1C164836354665","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412139,"discussion_content":"嘿，报错信息是 GOROOT 未设置，有些编辑器是自己的一套配置环境，例如 IDEA。你可以先 go env | grep root 看一下路径，然后搜一下编辑器中 GOROOT 的相关配置，希望能够帮到你。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636083004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411861,"ip_address":""},"score":412139,"extra":""}]}]},{"had_liked":false,"id":319313,"user_name":"return","can_delete":false,"product_type":"c1","uid":1135528,"ip_address":"","ucode":"42B8A3380DF04B","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","comment_is_top":false,"comment_ctime":1635739568,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18815608752","product_id":100093501,"comment_content":"老师讲的太赞了<br>市面上 讲 go 接口思想很好， 推荐组合思想。  但是都光说不练，看懂但学不会。<br>今天老师 给的这个例子 真实，简短 且 把接口和组合的 思想都 做了出来， 太牛了。<br>这一篇 需要实践而且需要反复揣摩。","like_count":4,"discussions":[{"author":{"id":1793879,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJHTX1IwEl1Eh1CCO2ejL2gKe08Vxib61UZz9l5WGA81ObK0Nk5MCZ3ic6IWcW5kyX0DtwBNMEMl2Q/132","nickname":"Geek_8ed998","note":"","ucode":"1C164836354665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411860,"discussion_content":"package bookstore/cmd/bookstore is not in GOROOT (/usr/local/go/src/bookstore/cmd/bookstore) 按老师的步骤执行到这里出错，什么原因阿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636020567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1519230,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/7e/acc47ee1.jpg","nickname":"OUO","note":"","ucode":"52EEB72E80BAF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1793879,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJHTX1IwEl1Eh1CCO2ejL2gKe08Vxib61UZz9l5WGA81ObK0Nk5MCZ3ic6IWcW5kyX0DtwBNMEMl2Q/132","nickname":"Geek_8ed998","note":"","ucode":"1C164836354665","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537672,"discussion_content":"goland吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639136126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411860,"ip_address":""},"score":537672,"extra":""}]}]},{"had_liked":false,"id":339947,"user_name":"includestdio.h","can_delete":false,"product_type":"c1","uid":2314854,"ip_address":"","ucode":"5027BACE9319CD","user_header":"https://static001.geekbang.org/account/avatar/00/23/52/66/3e4d4846.jpg","comment_is_top":false,"comment_ctime":1648479193,"is_pvip":true,"replies":[{"id":"124395","content":"这一讲开头我就说了：“在这个小项目里，我希望你不要困在各种语法里，而是先跟着我““照猫画虎”地写一遍、跑一次，感受 Go 项目的结构，体会 Go 语言的魅力。” 😁  不用担心，往后学一学之后再来复习。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1648644127,"ip_address":"","comment_id":339947,"utype":1}],"discussion_count":2,"race_medal":4,"score":"14533381081","product_id":100093501,"comment_content":"作为基本0基础学go，这一节完全没看懂-，- 把后面的基础篇看完回来再试试吧","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559198,"discussion_content":"这一讲开头我就说了：“在这个小项目里，我希望你不要困在各种语法里，而是先跟着我““照猫画虎”地写一遍、跑一次，感受 Go 项目的结构，体会 Go 语言的魅力。” 😁  不用担心，往后学一学之后再来复习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648644128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580015,"discussion_content":"现在应该看懂了吧 我自己重写了一遍  “：8080”少写了个:就出错了、必须自己来一遍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657807296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324553,"user_name":"左耳朵东","can_delete":false,"product_type":"c1","uid":1160678,"ip_address":"","ucode":"60134ACF12BB52","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","comment_is_top":false,"comment_ctime":1638498652,"is_pvip":false,"replies":[{"id":"117982","content":"你说的是func (bs *BookStoreServer) ListenAndServe这个方法吧？这个函数等待1s后返回啊。但它启动的子goroutine依旧在运行的。子goroutine中bs.srv.ListenAndServe一直在工作，并提供服务。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1638830244,"ip_address":"","comment_id":324553,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14523400540","product_id":100093501,"comment_content":"server&#47;server.go 文件中 select 那里，第二个 case 的意思是定时 1 秒后就会触发，从而执行后面的 return，为什么服务没有终止一直在运行呢？麻烦老师解答一下","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536610,"discussion_content":"你说的是func (bs *BookStoreServer) ListenAndServe这个方法吧？这个函数等待1s后返回啊。但它启动的子goroutine依旧在运行的。子goroutine中bs.srv.ListenAndServe一直在工作，并提供服务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638830244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1160678,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","nickname":"左耳朵东","note":"","ucode":"60134ACF12BB52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":537812,"discussion_content":"懂了，谢谢老师解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639203822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":536610,"ip_address":""},"score":537812,"extra":""}]},{"author":{"id":1045910,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f5/96/0cf9f3c7.jpg","nickname":"Aeins","note":"","ucode":"D5BF220767541D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573458,"discussion_content":"并不是。\n\n1. func (bs *BookStoreServer) ListenAndServe() (&lt;-chan error, error) 这个函数 1 秒后就会返回。此时启动 HTTP 服务的子 goroutine 还在运行\n\n2. 启动 HTTP 服务的子 goroutine 子所以还在运行，一是因为 err = bs.srv.ListenAndServe() 是阻塞的。二是因为主 goroutine 没有结束\n\n3. 主 goroutine 之所以没有结束是因为 main.go 中的 select 语句没有默认分支。\n\n4. 当 select 语句执行时，若没有满足执行条件的分支，且没有默认分支，则 select 语句阻塞\n\n5. 综上，服务一直运行，直到有被监听的信号产生或者 HTTP 服务报错导致 errChan 可读\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1653445348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319291,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1635734620,"is_pvip":false,"replies":[{"id":"115925","content":"生产项目一般不会将配置“硬编码”进去的。一般而言，配置项会存储在配置文件中，也有通过命令行参数传入程序的，也可以通过环境变量传入程序。Go标准库没有内置配置读写框架，目前go社区应用较多的第三方库是Go核心团队成员开发的viper(github.com&#47;spf13&#47;viper)。<br><br>对于一些更大的平台，常常有很多服务，这些服务的配置一般存储在专门的配置中心中，由配置中心管理与分发。<br><br>","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1635946972,"ip_address":"","comment_id":319291,"utype":1}],"discussion_count":5,"race_medal":0,"score":"14520636508","product_id":100093501,"comment_content":"这节课的项目内容理解起来不困难，但是对于实际的生产项目而言，尤其是对第三方的中间件有依赖的前提下，大都会针对的将配置单独存储为配置文件以方便维护，我想问下老师go项目针对配置文件有什么最佳实践方式吗? 我自己本地写了一个小项目，用的是以下方式来配置MySQL连接的，我总觉得不太优雅，大多项目会根据开发环境的不同选取不同的配置文件作为配置项加载，但是如果通过硬编码的方式添加进去会让项目变得很奇怪。。。<br><br>package config<br><br>&#47;&#47; GetDBConfig 数据库配置<br>func GetDBConfig() map[string]string {<br>\t&#47;&#47; 初始化数据库配置map<br>\tdbConfig := make(map[string]string)<br><br>\tdbConfig[&quot;DB_HOST&quot;] = &quot;127.0.0.1&quot;<br>\tdbConfig[&quot;DB_PORT&quot;] = &quot;3306&quot;<br>\tdbConfig[&quot;DB_NAME&quot;] = &quot;test&quot;<br>\tdbConfig[&quot;DB_USER&quot;] = &quot;root&quot;<br>\tdbConfig[&quot;DB_PWD&quot;] = &quot;123456&quot;<br>\tdbConfig[&quot;DB_CHARSET&quot;] = &quot;utf8&quot;<br><br>\t&#47;&#47; 连接池最大连接数<br>\tdbConfig[&quot;DB_MAX_OPEN_CONNECTS&quot;] = &quot;20&quot;<br>\t&#47;&#47; 连接池最大空闲数<br>\tdbConfig[&quot;DB_MAX_IDLE_CONNECTS&quot;] = &quot;10&quot;<br>\t&#47;&#47; 连接池链接最长生命周期<br>\tdbConfig[&quot;DB_MAX_LIFETIME_CONNECTS&quot;] = &quot;7200&quot;<br><br>\treturn dbConfig<br>}","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529575,"discussion_content":"生产项目一般不会将配置“硬编码”进去的。一般而言，配置项会存储在配置文件中，也有通过命令行参数传入程序的，也可以通过环境变量传入程序。Go标准库没有内置配置读写框架，目前go社区应用较多的第三方库是Go核心团队成员开发的viper(github.com/spf13/viper)。\n\n对于一些更大的平台，常常有很多服务，这些服务的配置一般存储在专门的配置中心中，由配置中心管理与分发。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635946972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2576960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","nickname":"自由","note":"","ucode":"4E3B53D29D86CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412141,"discussion_content":"嘿，再给你一个小建议，尽量使用多配置文件，这样会避免不必要的层次结构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636083353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1793879,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJHTX1IwEl1Eh1CCO2ejL2gKe08Vxib61UZz9l5WGA81ObK0Nk5MCZ3ic6IWcW5kyX0DtwBNMEMl2Q/132","nickname":"Geek_8ed998","note":"","ucode":"1C164836354665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411859,"discussion_content":"package bookstore/cmd/bookstore is not in GOROOT (/usr/local/go/src/bookstore/cmd/bookstore) 按老师的步骤执行到这里出错，什么原因阿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636020554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410640,"discussion_content":"使用配置文件的形式，然后使用 viper 包进行管理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635749943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1338831,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","nickname":"jc9090kkk","note":"","ucode":"6C992D07A2E78F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":411010,"discussion_content":"谢谢，我去研究下这个包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635828507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":410640,"ip_address":""},"score":411010,"extra":""}]}]},{"had_liked":false,"id":320112,"user_name":"snow","can_delete":false,"product_type":"c1","uid":1007935,"ip_address":"","ucode":"A759813C78135F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/3f/2ce014e7.jpg","comment_is_top":false,"comment_ctime":1636084705,"is_pvip":false,"replies":[{"id":"116253","content":"原则就是如果标准库中的mux可以满足，尽量不引用第三方包。如果标准库无法满足，尽量引用规模较小的包。gin是更大的web框架。除了mux，还有很多其他功能。如果不是项目必需，使用更“专一”的包可能更好。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636422934,"ip_address":"","comment_id":320112,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10226019297","product_id":100093501,"comment_content":"我看这里使用了mux包，我只用过gin包，请问这两个老师更喜欢哪个？以及这里选择mux的原因。","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529879,"discussion_content":"原则就是如果标准库中的mux可以满足，尽量不引用第三方包。如果标准库无法满足，尽量引用规模较小的包。gin是更大的web框架。除了mux，还有很多其他功能。如果不是项目必需，使用更“专一”的包可能更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320100,"user_name":"邰洋一","can_delete":false,"product_type":"c1","uid":1188486,"ip_address":"","ucode":"148DA7C913B28B","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/86/3fe860c9.jpg","comment_is_top":false,"comment_ctime":1636082119,"is_pvip":true,"replies":[{"id":"116247","content":"你的建议很好。不过一个例子而已，别太计较：）","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636422331,"ip_address":"","comment_id":320100,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10226016711","product_id":100093501,"comment_content":"老师，采用Restful规范，更新一条图书条目  http方法采用PUT，当然post也是可以的，put book&#47;id，是我太限定自己了吗？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529872,"discussion_content":"你的建议很好。不过一个例子而已，别太计较：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112676,"avatar":"https://static001.geekbang.org/account/avatar/00/10/fa/64/457325e6.jpg","nickname":"Sam Fu","note":"","ucode":"EA285A4943271F","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413922,"discussion_content":"而且book应该要用复数 books","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636609764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339248,"user_name":"FECoding","can_delete":false,"product_type":"c1","uid":1253140,"ip_address":"","ucode":"A3E8397FDD20D6","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/14/57cb7926.jpg","comment_is_top":false,"comment_ctime":1648006705,"is_pvip":true,"replies":[{"id":"124098","content":"方法肯定是有的啊。<br><br>$go doc sync.RWMutex.RLock<br>package sync &#47;&#47; import &quot;sync&quot;<br><br>func (rw *RWMutex) RLock()<br>    RLock locks rw for reading.<br><br>    It should not be used for recursive read locking; a blocked Lock call<br>    excludes new readers from acquiring the lock. See the documentation on the<br>    RWMutex type.<br><br>","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1648109364,"ip_address":"","comment_id":339248,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5942974001","product_id":100093501,"comment_content":"providersMu.RLock()<br>我的goland里面报错啊，没有这个方法呢","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558161,"discussion_content":"方法肯定是有的啊。\n\n$go doc sync.RWMutex.RLock\npackage sync // import &#34;sync&#34;\n\nfunc (rw *RWMutex) RLock()\n    RLock locks rw for reading.\n\n    It should not be used for recursive read locking; a blocked Lock call\n    excludes new readers from acquiring the lock. See the documentation on the\n    RWMutex type.\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648109364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338773,"user_name":"小明","can_delete":false,"product_type":"c1","uid":2812380,"ip_address":"","ucode":"F10955FF010368","user_header":"https://static001.geekbang.org/account/avatar/00/2a/e9/dc/cc05ebc7.jpg","comment_is_top":false,"comment_ctime":1647714411,"is_pvip":false,"replies":[{"id":"123858","content":"good idea。已创建https:&#47;&#47;gitee.com&#47;bigwhite&#47;publication&#47;tree&#47;master&#47;column&#47;timegeek&#47;go-first-course 供下载。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1647811435,"ip_address":"","comment_id":338773,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5942681707","product_id":100093501,"comment_content":"能在gitee 上也放一份吗？github现在已经没那么友好了<br>","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557435,"discussion_content":"good idea。已创建https://gitee.com/bigwhite/publication/tree/master/column/timegeek/go-first-course 供下载。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647811435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2812380,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/e9/dc/cc05ebc7.jpg","nickname":"小明","note":"","ucode":"F10955FF010368","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":581649,"discussion_content":"404","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658908686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557435,"ip_address":""},"score":581649,"extra":""},{"author":{"id":2537474,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b8/02/b538e9f4.jpg","nickname":"然而","note":"","ucode":"F1F1E093925934","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":2812380,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/e9/dc/cc05ebc7.jpg","nickname":"小明","note":"","ucode":"F10955FF010368","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581654,"discussion_content":"可以打开了，你刷新看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658909642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":581649,"ip_address":""},"score":581654,"extra":""}]}]},{"had_liked":false,"id":338514,"user_name":"601073891","can_delete":false,"product_type":"c1","uid":2822078,"ip_address":"","ucode":"FD90354D83B08B","user_header":"","comment_is_top":false,"comment_ctime":1647531247,"is_pvip":false,"replies":[{"id":"123865","content":"是不是命令行curl中的单引号、双引号的全半角问题导致的呢？","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1647826362,"ip_address":"","comment_id":338514,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5942498543","product_id":100093501,"comment_content":"大大你好，这次遇到这样一个问题：<br>    这次的代码在linux下能成功的运行，但是在window下虽然能成功构建出可执行文件，也能成功执行，<br>D:\\Goproject\\src\\entity\\class\\bookstore\\cmd\\bookstore&gt;bookstore.exe<br>2022&#47;03&#47;17 23:10:49 web server start ok<br>但在本机通过curl 访问时却有这样一个报错：<br>C:\\Users\\user&gt;curl -X POST -H &quot;Content-Type:application&#47;json&quot; -d &#39;{&quot;id&quot;: &quot;978-7-111-55842-2&quot;, &quot;name&quot;: &quot;The Go Programming Language&quot;, &quot;authors&quot;:[&quot;Alan A.A.Donovan&quot;, &quot;Brian W. Kergnighan&quot;],&quot;press&quot;: &quot;Pearson Education&quot;}&#39; 192.168.1.7:8080&#47;book<br>curl: (6) Could not resolve host: 978-7-111-55842-2,<br>curl: (3) URL using bad&#47;illegal format or missing URL<br>curl: (3) URL using bad&#47;illegal format or missing URL<br>curl: (3) bad range in URL position 10:<br>authors:[Alan A.A.Donovan,<br><br>不同系统下的go版本都是1.17，全部默认使用go module，我百度了一下，有说是URL格式的问题，但没有很对应，看了评论您也在windows上能成功执行，所以有这个疑问，您知道这会是怎么回事吗？<br>","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557451,"discussion_content":"是不是命令行curl中的单引号、双引号的全半角问题导致的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647826362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2822078,"avatar":"","nickname":"601073891","note":"","ucode":"FD90354D83B08B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":559039,"discussion_content":"非常感谢老师的回答。\n我在自己开了一台虚拟机A来输入curl post命令时，也是能成功的，所以初步定位到时window的cmd的问题，然后又发现在windows的cmd上可以GET到A机器POST存储的数据，而curl GET命令里有双引号，如果是全半角的问题的话那就基本定位到问题是单引号的问题了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648576848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557451,"ip_address":""},"score":559039,"extra":""}]}]},{"had_liked":false,"id":323309,"user_name":"莫名四下里","can_delete":false,"product_type":"c1","uid":1436027,"ip_address":"","ucode":"83F1FE3A3FC255","user_header":"https://static001.geekbang.org/account/avatar/00/15/e9/7b/4e0ede2a.jpg","comment_is_top":false,"comment_ctime":1637828421,"is_pvip":false,"replies":[{"id":"117584","content":"进入bookstore目录，go build .&#47;cmd&#47;bookstore或go build bookstore&#47;cmd&#47;bookstore","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1638263216,"ip_address":"","comment_id":323309,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5932795717","product_id":100093501,"comment_content":"Tony Bai 老师<br>$ go build bookstore&#47;cmd&#47;bookstore&#47;        <br>package bookstore&#47;cmd&#47;bookstore is not in GOROOT (&#47;usr&#47;local&#47;go&#47;src&#47;bookstore&#47;cmd&#47;bookstore)<br>无法构建   <br><br>配置 GOROOT=&quot;&#47;usr&#47;local&#47;go&quot;<br>报错  &#47;usr&#47;local&#47;go&#47;src&#47;bookstore&#47;cmd&#47;bookstore","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534726,"discussion_content":"进入bookstore目录，go build ./cmd/bookstore或go build bookstore/cmd/bookstore","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638263216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1155437,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a1/6d/a4ff33bb.jpg","nickname":"Lee","note":"","ucode":"0FF1C4EAF7F98A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":592038,"discussion_content":"进入到bookstore 执行了 go build ./cmd/bookstore 没有报错。然后执行./cmd/bookstore 提示zsh: permission denied: ./cmd/bookstore","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667039168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":534726,"ip_address":"广东"},"score":592038,"extra":""}]},{"author":{"id":1436027,"avatar":"https://static001.geekbang.org/account/avatar/00/15/e9/7b/4e0ede2a.jpg","nickname":"莫名四下里","note":"","ucode":"83F1FE3A3FC255","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533298,"discussion_content":"忽略 应该是编辑器缓存或者配置错误   我删了所有插件  和  关于go的配置  重新下载vscode\n目前已正常","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637834413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320498,"user_name":"xsgzh","can_delete":false,"product_type":"c1","uid":1231479,"ip_address":"","ucode":"BDD8C353D37D67","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIqhXd8JapYK3q6EQzSC6brm7EPqwEe2vCKjOO0FibzAgc1svqtAvVe6HMN8oUiaXZTFtxWJuM36nlA/132","comment_is_top":false,"comment_ctime":1636353816,"is_pvip":false,"replies":[{"id":"116275","content":"如果ms.books[book.id] = book，那么由于存储的value是一个指针，当外部的book发生变化时，map中存储的value实际上也会跟着变化。<br><br>我的代码中通过“clone”，实际上是将存储在map中的book与外部传入的book分离开来，它们是两块不同的存储区域。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636427976,"ip_address":"","comment_id":320498,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5931321112","product_id":100093501,"comment_content":"老师请教个文件<br>store&#47;memstore.go文件中第29 - 30行，直接赋值不可以么，ms.books[book.id] = book?<br>\tnBook := *book<br>\tms.books[book.Id] = &amp;nBook<br>","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530015,"discussion_content":"如果ms.books[book.id] = book，那么由于存储的value是一个指针，当外部的book发生变化时，map中存储的value实际上也会跟着变化。\n\n我的代码中通过“clone”，实际上是将存储在map中的book与外部传入的book分离开来，它们是两块不同的存储区域。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636427976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1160678,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","nickname":"左耳朵东","note":"","ucode":"60134ACF12BB52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535622,"discussion_content":"我也注意到了这里，豁然开朗","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638499191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111176,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/88/133bc14b.jpg","nickname":"c340","note":"","ucode":"D64CC3DDD09A0F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582752,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659658466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319612,"user_name":"不负青春不负己🤘","can_delete":false,"product_type":"c1","uid":1363671,"ip_address":"","ucode":"A6DD8E8B20EA6E","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","comment_is_top":false,"comment_ctime":1635864227,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"5930831523","product_id":100093501,"comment_content":"突然发现一个好玩的github 功能，即将.com 变成dev 会变成 web 版的<br>https:&#47;&#47;github.dev&#47;bigwhite&#47;publication&#47;tree&#47;master&#47;column&#47;timegeek&#47;go-first-course&#47;09&#47;bookstore","like_count":1,"discussions":[{"author":{"id":2224761,"avatar":"https://static001.geekbang.org/account/avatar/00/21/f2/79/0bef90f8.jpg","nickname":"盛桐🌿","note":"","ucode":"25D12D413CD373","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579340,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657359841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1793879,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJHTX1IwEl1Eh1CCO2ejL2gKe08Vxib61UZz9l5WGA81ObK0Nk5MCZ3ic6IWcW5kyX0DtwBNMEMl2Q/132","nickname":"Geek_8ed998","note":"","ucode":"1C164836354665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411858,"discussion_content":"package bookstore/cmd/bookstore is not in GOROOT (/usr/local/go/src/bookstore/cmd/bookstore) 按老师的步骤执行到这里出错，什么原因阿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636020539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359605,"user_name":"Beng吓咔啦咔","can_delete":false,"product_type":"c1","uid":2981277,"ip_address":"美国","ucode":"9B1942EFFCB126","user_header":"https://static001.geekbang.org/account/avatar/00/2d/7d/9d/ced762c5.jpg","comment_is_top":false,"comment_ctime":1665672879,"is_pvip":false,"replies":[{"id":"130835","content":"专栏的确没有规划调试相关的章节，我个人最常用的其实还是print大法，如果说工具，那么delve(https:&#47;&#47;github.com&#47;go-delve&#47;delve<br>)是不二之选的事实标准。vscode用的应该也是delve吧。不过我个人通常喜欢基于命令行的调试。<br><br>如果没有别的资料，建议还是看官方文档 https:&#47;&#47;github.com&#47;go-delve&#47;delve&#47;blob&#47;master&#47;Documentation&#47;cli&#47;getting_started.md<br><br>如果非要看我出品的资料:)，可以找找我的书《Go语言精进之路》，那个上面有调试相关的内容。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1665740593,"ip_address":"美国","comment_id":359605,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1665672879","product_id":100093501,"comment_content":"Tony Bai 老师，能讲下如何调试go工程代码吗？我用vscode一直不能调试，照网上的办法设置了也没能行，不晓得具体问题出在哪","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590440,"discussion_content":"专栏的确没有规划调试相关的章节，我个人最常用的其实还是print大法，如果说工具，那么delve(https://github.com/go-delve/delve\n)是不二之选的事实标准。vscode用的应该也是delve吧。不过我个人通常喜欢基于命令行的调试。\n\n如果没有别的资料，建议还是看官方文档 https://github.com/go-delve/delve/blob/master/Documentation/cli/getting_started.md\n\n如果非要看我出品的资料:)，可以找找我的书《Go语言精进之路》，那个上面有调试相关的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665740593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"美国"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358722,"user_name":"Geek_a8ce05","can_delete":false,"product_type":"c1","uid":2956682,"ip_address":"北京","ucode":"C1D4002C48568F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rvQxUmekECjyZu1RwbUguBWpBcQuKywQPtiaxNVFJSib07QMZnNUr8MnRF3RYEsn6MhgGFJibwlrVomibEicYMiaia7ZQ/132","comment_is_top":false,"comment_ctime":1664620530,"is_pvip":false,"replies":[{"id":"130488","content":"这一节开始处就有&quot;不用担心，我在这节课安排了一个实战小项目。在这个小项目里，我希望你不要困在各种语法里，而是先跟着我““照猫画虎”地写一遍、跑一次，感受 Go 项目的结构，体会 Go 语言的魅力。&quot;的说法，这一节并不会要求大家都能看懂的。所以放平心态，继续学习，后续再回首来看看，那时候自然就懂了。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1664676720,"ip_address":"北京","comment_id":358722,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1664620530","product_id":100093501,"comment_content":"学习曲线太陡峭了，完全没看懂","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589301,"discussion_content":"这一节开始处就有&#34;不用担心，我在这节课安排了一个实战小项目。在这个小项目里，我希望你不要困在各种语法里，而是先跟着我““照猫画虎”地写一遍、跑一次，感受 Go 项目的结构，体会 Go 语言的魅力。&#34;的说法，这一节并不会要求大家都能看懂的。所以放平心态，继续学习，后续再回首来看看，那时候自然就懂了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664676720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357828,"user_name":"Bryant Ba","can_delete":false,"product_type":"c1","uid":1901839,"ip_address":"北京","ucode":"F54A60446A04DF","user_header":"https://static001.geekbang.org/account/avatar/00/1d/05/0f/fbfaaf3c.jpg","comment_is_top":false,"comment_ctime":1663667121,"is_pvip":true,"replies":[{"id":"130248","content":"08讲提过，空导入(import _ &quot;xxx&quot;)是有“副作用”的，即便是空导入，xxx中的init函数也会被执行，所以如果不引用internal&#47;store包，store包中的init函数就没有被执行，一些内存结构就没法初始化。<br><br>不过不导入这个包不会导致编译错误吧，但运行程序会出错！<br><br>$.&#47;bookstore<br>panic: store: unknown provider mem<br><br>goroutine 1 [running]:<br>main.main()<br>\t&#47;Users&#47;tonybai&#47;github&#47;geekbang&#47;column&#47;go-primer&#47;part2&#47;sources&#47;bookstore&#47;cmd&#47;bookstore&#47;main.go:18 +0x3ea","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1663745102,"ip_address":"北京","comment_id":357828,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1663667121","product_id":100093501,"comment_content":"_ &quot;tonybai_learning&#47;internal&#47;store&quot;  老师问下为什么main里不引这个包会编译报错呢，看好像没有对这个包的调用，多谢老师指点一下","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588405,"discussion_content":"08讲提过，空导入(import _ &#34;xxx&#34;)是有“副作用”的，即便是空导入，xxx中的init函数也会被执行，所以如果不引用internal/store包，store包中的init函数就没有被执行，一些内存结构就没法初始化。\n\n不过不导入这个包不会导致编译错误吧，但运行程序会出错！\n\n$./bookstore\npanic: store: unknown provider mem\n\ngoroutine 1 [running]:\nmain.main()\n\t/Users/tonybai/github/geekbang/column/go-primer/part2/sources/bookstore/cmd/bookstore/main.go:18 +0x3ea","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663745102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357240,"user_name":"Fibonacci","can_delete":false,"product_type":"c1","uid":1168361,"ip_address":"北京","ucode":"31DB723EB4BBA1","user_header":"https://static001.geekbang.org/account/avatar/00/11/d3/e9/59ff9004.jpg","comment_is_top":false,"comment_ctime":1663083012,"is_pvip":false,"replies":[{"id":"130028","content":"好问题。<br><br>返回指针，相当于把map的value返回出去了，这样外部可以不通过map即可通过指针修改map内元素的value。这在工程编码中可能会因其他人误修改而导致程序的怪异行为（bug）。<br><br>这里做了一份copy，这样返回的值与map中的元素就“没有关联”了。外部修改map内元素值只能通过map来进行。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1663136677,"ip_address":"北京","comment_id":357240,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1663083012","product_id":100093501,"comment_content":"bookstore&#47;internal&#47;store&#47;memstore.go里的Update方法45行，是否不需要nBook := *oldBook转换呢？转换了会有copy了吧？直接用原来的指针直接操作是不是好一点？小白不懂问一下这里","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587541,"discussion_content":"好问题。\n\n返回指针，相当于把map的value返回出去了，这样外部可以不通过map即可通过指针修改map内元素的value。这在工程编码中可能会因其他人误修改而导致程序的怪异行为（bug）。\n\n这里做了一份copy，这样返回的值与map中的元素就“没有关联”了。外部修改map内元素值只能通过map来进行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663136677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356381,"user_name":"Geek_c2083d","can_delete":false,"product_type":"c1","uid":3170814,"ip_address":"北京","ucode":"124E13F664E45A","user_header":"","comment_is_top":false,"comment_ctime":1662222460,"is_pvip":false,"replies":[{"id":"129771","content":"同一个package在不同目录下？这个什么意思?同一个go package只能在一个目录下啊，无法分在多个目录下。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1662348057,"ip_address":"北京","comment_id":356381,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1662222460","product_id":100093501,"comment_content":"同一个package分在不同目录下，会不会不好维护，","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586574,"discussion_content":"同一个package在不同目录下？这个什么意思?同一个go package只能在一个目录下啊，无法分在多个目录下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662348057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356101,"user_name":"卓然","can_delete":false,"product_type":"c1","uid":1202149,"ip_address":"北京","ucode":"F0E173FD82181B","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/e5/0af7593f.jpg","comment_is_top":false,"comment_ctime":1661964131,"is_pvip":false,"replies":[{"id":"129663","content":"我觉得不能为了单元测试问题而否定了结构上的设计。这个结构是一个典型的创建型工厂模式，go标准库的sql&#47;database使用的是同类设计。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1662083451,"ip_address":"北京","comment_id":356101,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1661964131","product_id":100093501,"comment_content":"请教老师个问题，factory.Register(&quot;mem&quot;, &amp;MemStore{ books: make(map[string]*mystore.Book), })放到memstore.go 的init内是否合适?感觉memstore没有必要依赖factory，在对memstore 做单元测试的时候，init函数也会被执行，但总感觉没用必要执行init函数","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586261,"discussion_content":"我觉得不能为了单元测试问题而否定了结构上的设计。这个结构是一个典型的创建型工厂模式，go标准库的sql/database使用的是同类设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662083451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353492,"user_name":"白小白","can_delete":false,"product_type":"c1","uid":1031680,"ip_address":"北京","ucode":"2CCB878DA2E93D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/pESfAX6YVRnVg3HpOX44bTa64bHTbhsnlHJqqDjicBeELxCs5rwwIXibFibd0fua3VyVExypnqnfgTSUp8WoYmc9g/132","comment_is_top":false,"comment_ctime":1659497372,"is_pvip":false,"replies":[{"id":"128688","content":"错误的含义是：你的server的listen Addr中没有包含port信息，你是不是传入了“8081”，而不是&quot;:8081&quot;，是不是少了冒号啊？","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1659924320,"ip_address":"北京","comment_id":353492,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659497372","product_id":100093501,"comment_content":" 执行main.go之后，出现以下错误：web server start failed: listen tcp: address 8081: missing port in address。老师，请问是我端口没开启的原因吗？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583115,"discussion_content":"错误的含义是：你的server的listen Addr中没有包含port信息，你是不是传入了“8081”，而不是&#34;:8081&#34;，是不是少了冒号啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659924320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352905,"user_name":"小明","can_delete":false,"product_type":"c1","uid":2812380,"ip_address":"陕西","ucode":"F10955FF010368","user_header":"https://static001.geekbang.org/account/avatar/00/2a/e9/dc/cc05ebc7.jpg","comment_is_top":false,"comment_ctime":1659002070,"is_pvip":false,"replies":[{"id":"128372","content":"慢慢来。这个例子目的并非让初学者去完全理解，而是“感受 Go 项目的结构，体会 Go 语言的魅力”。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1659102247,"ip_address":"陕西","comment_id":352905,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659002070","product_id":100093501,"comment_content":"我得自己写一遍，运行起来还不行，不然没有效果。不过运行起来以后，写就更有信心了，一步一步来处理","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581987,"discussion_content":"慢慢来。这个例子目的并非让初学者去完全理解，而是“感受 Go 项目的结构，体会 Go 语言的魅力”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659102247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352903,"user_name":"小明","can_delete":false,"product_type":"c1","uid":2812380,"ip_address":"陕西","ucode":"F10955FF010368","user_header":"https://static001.geekbang.org/account/avatar/00/2a/e9/dc/cc05ebc7.jpg","comment_is_top":false,"comment_ctime":1659001026,"is_pvip":false,"replies":[{"id":"128371","content":"正确","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1659101997,"ip_address":"陕西","comment_id":352903,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659001026","product_id":100093501,"comment_content":"我看到了main 包里面   _ &quot;bookstore&#47;internal&#47;store&quot;   这个是第一个，就是先调用了他的 init 方法，把 mem 注册工厂，然后  s, err := factory.New(&quot;mem&quot;) &#47;&#47; 创建图书数据存储模块实例 就可以直接实例化这个men 取数据 。新手不是很清楚，说错了别笑话，有错误请指出","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581986,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659101998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352902,"user_name":"小明","can_delete":false,"product_type":"c1","uid":2812380,"ip_address":"陕西","ucode":"F10955FF010368","user_header":"https://static001.geekbang.org/account/avatar/00/2a/e9/dc/cc05ebc7.jpg","comment_is_top":false,"comment_ctime":1659000642,"is_pvip":false,"replies":[{"id":"128373","content":"很正常，这个例子并非让你完全理解，学到第09讲要是完全理解了，那后面就不用学习了:)","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1659102302,"ip_address":"陕西","comment_id":352902,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659000642","product_id":100093501,"comment_content":"看了两遍代码，能跑起来，但是只吃透了百分之三十，好着急啊  memstore.go   没看懂","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581988,"discussion_content":"很正常，这个例子并非让你完全理解，学到第09讲要是完全理解了，那后面就不用学习了:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659102302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350764,"user_name":"wei 丶","can_delete":false,"product_type":"c1","uid":1234929,"ip_address":"","ucode":"331DE893F75B95","user_header":"https://static001.geekbang.org/account/avatar/00/12/d7/f1/ce10759d.jpg","comment_is_top":false,"comment_ctime":1657179693,"is_pvip":false,"replies":[{"id":"127668","content":"1. 当ListenAndServe发生err，说明server启动失败，后续整个程序也就退出了。内存泄不泄露都没关系。<br>2. go是带gc语言，当timer fire后会被自动回收掉，所以也不存在内存泄露问题。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1657405120,"ip_address":"","comment_id":350764,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1657179693","product_id":100093501,"comment_content":"老师这一行代码使用time.after如果err发生了不会产生内存泄漏了? https:&#47;&#47;github.com&#47;bigwhite&#47;publication&#47;blob&#47;master&#47;column&#47;timegeek&#47;go-first-course&#47;09&#47;bookstore&#47;server&#47;server.go#L49","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579372,"discussion_content":"1. 当ListenAndServe发生err，说明server启动失败，后续整个程序也就退出了。内存泄不泄露都没关系。\n2. go是带gc语言，当timer fire后会被自动回收掉，所以也不存在内存泄露问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657405120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1234929,"avatar":"https://static001.geekbang.org/account/avatar/00/12/d7/f1/ce10759d.jpg","nickname":"wei 丶","note":"","ucode":"331DE893F75B95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":579850,"discussion_content":"哦哦哦，老师的意思是如果ListenAndServe发生err整个程序退出那么就不存在内存泄漏，如果正常那么timer.C会被触发，那就会自动回收，所以没有问题了嘛~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657713476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":579372,"ip_address":""},"score":579850,"extra":""}]}]},{"had_liked":false,"id":350500,"user_name":"s t o a","can_delete":false,"product_type":"c1","uid":2135449,"ip_address":"","ucode":"B6862E64F2536A","user_header":"https://static001.geekbang.org/account/avatar/00/20/95/99/959f14de.jpg","comment_is_top":false,"comment_ctime":1656949047,"is_pvip":false,"replies":[{"id":"127517","content":"你是在命令行下用go命令编译的？还是在goland中编译的？<br><br>internal&#47;store&#47;memstore.go中是有Create方法的实现的：<br><br>func (ms *MemStore) Create(book *mystore.Book) error {<br> ... ...<br>}<br><br>","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1656995757,"ip_address":"","comment_id":350500,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656949047","product_id":100093501,"comment_content":"cannot use &amp;MemStore{…} (value of type *MemStore) as type &quot;bookstore&#47;store&quot;.Store in argument to factory.Register:<br>\t*MemStore does not implement &quot;bookstore&#47;store&quot;.Store (missing Create method)<br><br>这个问题要怎么解决","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578757,"discussion_content":"你是在命令行下用go命令编译的？还是在goland中编译的？\n\ninternal/store/memstore.go中是有Create方法的实现的：\n\nfunc (ms *MemStore) Create(book *mystore.Book) error {\n ... ...\n}\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656995758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349037,"user_name":"xiong","can_delete":false,"product_type":"c1","uid":1099375,"ip_address":"","ucode":"C1BFD9EF96372F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/6f/ac3003fa.jpg","comment_is_top":false,"comment_ctime":1655683636,"is_pvip":false,"replies":[{"id":"127028","content":"真实生产中运行的程序与日常编写的demo例子不同，要考虑各种情况，退出也要考虑“优雅退出”。这里的例子没有直接exit，而是加入了一些优雅退出的考虑，所以看起来&quot;繁琐&quot;了些。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1655703268,"ip_address":"","comment_id":349037,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1655683636","product_id":100093501,"comment_content":"这退出为什么这么繁琐呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576613,"discussion_content":"真实生产中运行的程序与日常编写的demo例子不同，要考虑各种情况，退出也要考虑“优雅退出”。这里的例子没有直接exit，而是加入了一些优雅退出的考虑，所以看起来&#34;繁琐&#34;了些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655703268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348879,"user_name":"军","can_delete":false,"product_type":"c1","uid":1326801,"ip_address":"","ucode":"7D4DE0E435BF21","user_header":"https://static001.geekbang.org/account/avatar/00/14/3e/d1/17f3160c.jpg","comment_is_top":false,"comment_ctime":1655483788,"is_pvip":true,"replies":[{"id":"127027","content":"估计通过这个例子的排错过程，可以让你更好的理解go代码的运作机制。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1655703123,"ip_address":"","comment_id":348879,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1655483788","product_id":100093501,"comment_content":"刚学go就碰上一个大坑<br>不小心把factory包的Register中的defer providersMu.Unlock()误写成defer providersMu.Lock()<br>造成死锁，运行service也没提示，curl请求Connection refused<br><br>调试过程记录：<br>1. main.main所有代码注释掉，只写一个log，启动正常<br>2. 导入 _ &quot;bookstore&#47;internal&#47;store&quot;包，启动，就能看到死锁报错了<br><br>fatal error: all goroutines are asleep - deadlock!","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576612,"discussion_content":"估计通过这个例子的排错过程，可以让你更好的理解go代码的运作机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655703124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348452,"user_name":"licorne","can_delete":false,"product_type":"c1","uid":1952288,"ip_address":"","ucode":"A5248434D0039C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ca/20/60ca5f47.jpg","comment_is_top":false,"comment_ctime":1655110582,"is_pvip":false,"replies":[{"id":"126970","content":"已经将Shutdown定义为BookStoreServer的方法了：<br><br>func (bs *BookStoreServer) Shutdown(ctx context.Context) error {<br>    return bs.srv.Shutdown(ctx)<br>}<br><br>不需要导出BookStoreServer内部的字段。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1655270902,"ip_address":"","comment_id":348452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1655110582","product_id":100093501,"comment_content":"type BookStoreServer struct {<br>\ts   store.Store<br>\tSrv *http.Server<br>}<br><br>这个的srv应该首字母大写,不然main.go里的srv.Shutdown 也调用不到,也得 srv.Srv.Shutdown","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576073,"discussion_content":"已经将Shutdown定义为BookStoreServer的方法了：\n\nfunc (bs *BookStoreServer) Shutdown(ctx context.Context) error {\n    return bs.srv.Shutdown(ctx)\n}\n\n不需要导出BookStoreServer内部的字段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655270902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347181,"user_name":"qiutian","can_delete":false,"product_type":"c1","uid":1313498,"ip_address":"","ucode":"99658A8E342498","user_header":"https://static001.geekbang.org/account/avatar/00/14/0a/da/dcf8f2b1.jpg","comment_is_top":false,"comment_ctime":1653797323,"is_pvip":true,"replies":[{"id":"126638","content":"我这编译正常啊。<br>internal&#47;store&#47;memstore.go中的*MemStore也有Create方法的实现啊。<br><br>&#47;&#47; Create creates a new Book in the store.<br>func (ms *MemStore) Create(book *mystore.Book) error {<br>    ms.Lock()<br>    defer ms.Unlock()<br><br>    if _, ok := ms.books[book.Id]; ok {<br>        return mystore.ErrExist<br>    }<br><br>    nBook := *book<br>    ms.books[book.Id] = &amp;nBook<br><br>    return nil<br>}<br>","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1653898112,"ip_address":"","comment_id":347181,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1653797323","product_id":100093501,"comment_content":"internal&#47;store&#47;memstore.go:10:26: cannot use &amp;MemStore{...} (type *MemStore) as type store.Store in argument to factory.Register:<br>        *MemStore does not implement store.Store (missing Create method)<br>在memstore.go的init方法中调用factory.Register时，第二个参数&amp;MemStore{<br>\t\tbooks: make(map[string]*mystore.Book),<br>\t}无法通过编译","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574203,"discussion_content":"我这编译正常啊。\ninternal/store/memstore.go中的*MemStore也有Create方法的实现啊。\n\n// Create creates a new Book in the store.\nfunc (ms *MemStore) Create(book *mystore.Book) error {\n    ms.Lock()\n    defer ms.Unlock()\n\n    if _, ok := ms.books[book.Id]; ok {\n        return mystore.ErrExist\n    }\n\n    nBook := *book\n    ms.books[book.Id] = &amp;nBook\n\n    return nil\n}\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653898112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1313498,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0a/da/dcf8f2b1.jpg","nickname":"qiutian","note":"","ucode":"99658A8E342498","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":574760,"discussion_content":"我知道了，是因为我是照着专栏里面的代码来敲的，然后在这个memstore.go中的MemStore这个struct没有实现Store接口里面的几个方法，导致&amp;MemStore()没办法识别成实现了Store接口，也就是MemStore类型还没有实现Store接口，才无法编译。我是看了github上的源码才发现的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654322819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":574203,"ip_address":""},"score":574760,"extra":""}]}]},{"had_liked":false,"id":346804,"user_name":"Aeins","can_delete":false,"product_type":"c1","uid":1045910,"ip_address":"","ucode":"D5BF220767541D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/96/0cf9f3c7.jpg","comment_is_top":false,"comment_ctime":1653445924,"is_pvip":true,"replies":[{"id":"126471","content":"👍 后续章节都有针对性解答。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1653465257,"ip_address":"","comment_id":346804,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653445924","product_id":100093501,"comment_content":"示例程序值得细看。对没项目经验而言。知识点确实多<br><br>程序组织结构。Init 注册机制，读写锁对 Map的保护，channel 和 select 的细节，指针解引用时的复制行为，几个标准库的用法，接口实现类型到底选指针，还是值的考量等等<br><br>","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573490,"discussion_content":"👍 后续章节都有针对性解答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653465258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346802,"user_name":"Jay","can_delete":false,"product_type":"c1","uid":1070670,"ip_address":"","ucode":"ED9970F7E66080","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/4e/9291fac0.jpg","comment_is_top":false,"comment_ctime":1653444362,"is_pvip":true,"replies":[{"id":"126472","content":"Go的变量命名的确遵循着“最短达意”的原则，即在代码上下文环境中，在可以表意的前提下，使用尽可能短的名字。<br><br>这个你可以翻翻Go标准库代码，找找感觉:)。<br><br>","user_name":"作者回复","user_name_real":"作者","uid":"1026224","ctime":1653466313,"ip_address":"","comment_id":346802,"utype":1}],"discussion_count":1,"race_medal":4,"score":"1653444362","product_id":100093501,"comment_content":"本人现在写iOS，iOS平台的特点是鼓励命名在非特殊情况下不能简写，比如业界共识形的缩写命名可以使用，但是在创建对象、方法、文件时，比如使用完整的单词，虽然有时长了些，但是对于读代码的人来说，很容易快读看懂。<br><br>但我看到白老师给的example里面，好多变量名用了缩写，作为一个编程多年的人，看这些缩写，还是要想一会儿才能明白这个命名代表什么，虽然简写了，但是导致读代码效率不高。想问下，这在go编程领域会非常常见吗？还是老师为了演示而刻意为之的呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573497,"discussion_content":"Go的变量命名的确遵循着“最短达意”的原则，即在代码上下文环境中，在可以表意的前提下，使用尽可能短的名字。\n\n这个你可以翻翻Go标准库代码，找找感觉:)。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653466313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346730,"user_name":"Geek_244c46","can_delete":false,"product_type":"c1","uid":2034469,"ip_address":"","ucode":"419D97DA9F1F9B","user_header":"","comment_is_top":false,"comment_ctime":1653385999,"is_pvip":false,"replies":[{"id":"126524","content":"这个应该没少吧。srv是BookStoreServer实例，Shutdown是BookStoreServer类型的方法，srv.Shutdown是正确的。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1653626354,"ip_address":"","comment_id":346730,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1653385999","product_id":100093501,"comment_content":"main.go中的优雅关闭http服务实例那一行的代码应该是这样的：err = srv.Srv.Shutdown(ctx) ，文中的代码少了第二个Srv","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573746,"discussion_content":"这个应该没少吧。srv是BookStoreServer实例，Shutdown是BookStoreServer类型的方法，srv.Shutdown是正确的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653626354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346508,"user_name":"Geek_67261d","can_delete":false,"product_type":"c1","uid":1619169,"ip_address":"","ucode":"2409166C0B5AF1","user_header":"https://static001.geekbang.org/account/avatar/00/18/b4/e1/5fe28375.jpg","comment_is_top":false,"comment_ctime":1653207070,"is_pvip":false,"replies":[{"id":"126415","content":"脱离开goland，直接在命令行下 试过go mod tidy和go build么？","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1653268228,"ip_address":"","comment_id":346508,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1653207070","product_id":100093501,"comment_content":"老师，有个问题想请教一下，我用的goland编辑器使用go mod tidy的时候没有反应，就用了go get -u的方式下载了下来，其中go.mod中是有这个包的： 下面是go.mod中的内容： <br>module bookstore <br>go 1.17 require github.com&#47;gorilla&#47;mux v1.8.0 <br>其中最后一行是飘红的 ，说是没有同步依赖关系，手动同步后还是红色的显示，并且在server.go中这个包也没有被正确的引入。请问这种问题该如何解决。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573204,"discussion_content":"脱离开goland，直接在命令行下 试过go mod tidy和go build么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653268228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1619169,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b4/e1/5fe28375.jpg","nickname":"Geek_67261d","note":"","ucode":"2409166C0B5AF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578746,"discussion_content":"解决了问题了老师，应该先把包引入再在代码里使用，再进行go mod tidy,我是只写到代码里没有在import中引用然后go mod tidy的，把go mod tidy想的太智能了，以为只要代码里用了就能自动拉取","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656992655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346171,"user_name":"Geek_zkg","can_delete":false,"product_type":"c1","uid":2376255,"ip_address":"","ucode":"C55FD4C85CE9CE","user_header":"https://static001.geekbang.org/account/avatar/00/24/42/3f/cb0d8a8d.jpg","comment_is_top":false,"comment_ctime":1652867579,"is_pvip":false,"replies":[{"id":"126372","content":"问一下，你的goland版本是？是否支持go module编译？GO111MODULE=&quot;on&quot;对于goland是否生效了？","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1653057229,"ip_address":"","comment_id":346171,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1652867579","product_id":100093501,"comment_content":"我是mac环境，按照老师上面的步骤走下来，在go build bookstore&#47;cmd&#47;bookstore的时候<br>报错package bookstore&#47;cmd&#47;bookstore is not in GOROOT (&#47;usr&#47;local&#47;go&#47;src&#47;bookstore&#47;cmd&#47;bookstore)<br>我已经设置了GO111MODULE=&quot;on&quot;<br>用goland开发的<br>想请老师帮忙解决一下","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572936,"discussion_content":"问一下，你的goland版本是？是否支持go module编译？GO111MODULE=&#34;on&#34;对于goland是否生效了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653057230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344288,"user_name":"westfall","can_delete":false,"product_type":"c1","uid":1632773,"ip_address":"","ucode":"F3F5CB7DF695FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/ea/05/b164dc15.jpg","comment_is_top":false,"comment_ctime":1651421582,"is_pvip":false,"replies":[{"id":"125699","content":"报什么错误？","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1651491869,"ip_address":"","comment_id":344288,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1651421582","product_id":100093501,"comment_content":"为什么用浏览器打开 http:&#47;&#47;localhost:8080&#47;book&#47; 会报错？用 curl 请求正常。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569589,"discussion_content":"报什么错误？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651491869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1632773,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ea/05/b164dc15.jpg","nickname":"westfall","note":"","ucode":"F3F5CB7DF695FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":569603,"discussion_content":"浏览器的get请求默认没带content type，没有通过中间件的校验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651494628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":569589,"ip_address":""},"score":569603,"extra":""}]},{"author":{"id":1632773,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ea/05/b164dc15.jpg","nickname":"westfall","note":"","ucode":"F3F5CB7DF695FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569526,"discussion_content":"啊，我明白了，中间件里对 Content-Type 做了校验，浏览器的 get 请求默认是没有带这个 header 的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1651469806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580017,"discussion_content":"用postman header 加个Content-Type就好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657808014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343945,"user_name":"颜海航","can_delete":false,"product_type":"c1","uid":1308159,"ip_address":"","ucode":"5644F6328BF901","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/ff/523fb378.jpg","comment_is_top":false,"comment_ctime":1651136109,"is_pvip":false,"replies":[{"id":"125615","content":"Go web相关的书不多。比较基础的有 谢孟军(astaxie)的go web编程、manning出版社也有一本go web programming。这些都是关于如何基于Go原生标准库构建web应用。<br><br>如果指定框架gin，建议看gin自己官方站点的文档。关于gin的专门书籍不多，如果非要看书，可以试试packtpub出品的几本 - https:&#47;&#47;subscription.packtpub.com&#47;search?query=gin 。但估计书的质量不是太高。","user_name":"作者回复","user_name_real":"作者","uid":"1026224","ctime":1651211864,"ip_address":"","comment_id":343945,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1651136109","product_id":100093501,"comment_content":"老师 想系统学习go web 编程或者 gin 有什么书籍或者教程推荐吗","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568725,"discussion_content":"Go web相关的书不多。比较基础的有 谢孟军(astaxie)的go web编程、manning出版社也有一本go web programming。这些都是关于如何基于Go原生标准库构建web应用。\n\n如果指定框架gin，建议看gin自己官方站点的文档。关于gin的专门书籍不多，如果非要看书，可以试试packtpub出品的几本 - https://subscription.packtpub.com/search?query=gin 。但估计书的质量不是太高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651211864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1308159,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/ff/523fb378.jpg","nickname":"颜海航","note":"","ucode":"5644F6328BF901","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":570605,"discussion_content":"谢谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651833088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":568725,"ip_address":""},"score":570605,"extra":""}]}]},{"had_liked":false,"id":343271,"user_name":"谢小路","can_delete":false,"product_type":"c1","uid":1035064,"ip_address":"","ucode":"C9FE2EB10DC105","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","comment_is_top":false,"comment_ctime":1650755562,"is_pvip":false,"replies":[{"id":"125425","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1650969376,"ip_address":"","comment_id":343271,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1650755562","product_id":100093501,"comment_content":"一些同学可能使用的是 Goland 或者 Jetbrains 旗下的 IDE go 插件编写代码。clone 老师代码应该会遇到一些问题。比如 IDE 报错啊。编译不起来问题等。<br><br>老师的 github 地址，这节的代码目录托管的层级有点深。不管目录层级有多深，用 IDE 打开目录的原则都是以存在 go.mod 文件所在的那个层级为项目的根目录为准。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567658,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650969376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580018,"discussion_content":"直接下载打开即可编译","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657808063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343188,"user_name":"Geek_as","can_delete":false,"product_type":"c1","uid":1534500,"ip_address":"","ucode":"AB7B70DBC2B5F8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qhonwcQle1RBufvLdTm4MgSNl554GBXUZtNNH65oYajbbRLxKsZX4hM9vFtrLLpDM0H93ZNWRFAZSrIZC7yAsQ/132","comment_is_top":false,"comment_ctime":1650698156,"is_pvip":true,"replies":[{"id":"125439","content":"理解的没错。signal.Notify 就是用来接收kill的signal的啊。在程序退出前有机会 进行一些退出前的处理工作。这个你可以找本unix高级环境编程的书籍看看，就知道系统signal的运行机制了。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1651011579,"ip_address":"","comment_id":343188,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650698156","product_id":100093501,"comment_content":"敲了一晚上尴尬，其他还好就是不懂最后signal.Notify(c, syscall.SIGINT, syscall.SIGTERM)实现优雅关闭的作用，难道是当系统kill它的时候，能够被感知到执行完关闭操作后再退出，还有就是middleware.Logging(middleware.Validating(router))，感觉有点像一个调用链，所有请求都要经过打印信息和类型判断操作","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567820,"discussion_content":"理解的没错。signal.Notify 就是用来接收kill的signal的啊。在程序退出前有机会 进行一些退出前的处理工作。这个你可以找本unix高级环境编程的书籍看看，就知道系统signal的运行机制了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651011579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342279,"user_name":"Williamleelol","can_delete":false,"product_type":"c1","uid":1019105,"ip_address":"","ucode":"4C9379D25AEC09","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erD8CwHKGGIia1HwRBxy5GxMLTfGGzOeLjrmZ6ich9Ng7bbPia89iaSibbldnV4uiaKNXFcO2vQ3ztibCrDw/132","comment_is_top":false,"comment_ctime":1650166715,"is_pvip":true,"replies":[{"id":"125121","content":"看一下加餐：聊聊Go指针吧。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1650328541,"ip_address":"","comment_id":342279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1650166715","product_id":100093501,"comment_content":"老师你好：<br>不是很清楚什么时候用值类型，什么时候用指针类型？从哪些方面进行判断呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564757,"discussion_content":"看一下加餐：聊聊Go指针吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650328541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342267,"user_name":"Williamleelol","can_delete":false,"product_type":"c1","uid":1019105,"ip_address":"","ucode":"4C9379D25AEC09","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erD8CwHKGGIia1HwRBxy5GxMLTfGGzOeLjrmZ6ich9Ng7bbPia89iaSibbldnV4uiaKNXFcO2vQ3ztibCrDw/132","comment_is_top":false,"comment_ctime":1650164783,"is_pvip":true,"replies":[{"id":"125122","content":"因为memstore底层使用的map类型为map[string]*mystore.Book， value用的是Book指针，如果直接返回指针有风险，这样外面的代码就可以直接修改memstore中的数据了。<br><br>返回Book类型时会有一次mem copy。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1650329443,"ip_address":"","comment_id":342267,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1650164783","product_id":100093501,"comment_content":"你好老师，<br>Get(string) (Book, error) &#47;&#47; 获取某图书信息 <br>GetAll() ([]Book, error) &#47;&#47; 获取所有图书信息<br>这两个方法的返回值为什么不是*Book呢？查询出来的结果应该是Book的实例了，返回值类型是Book会发生Copy么？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564764,"discussion_content":"因为memstore底层使用的map类型为map[string]*mystore.Book， value用的是Book指针，如果直接返回指针有风险，这样外面的代码就可以直接修改memstore中的数据了。\n\n返回Book类型时会有一次mem copy。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650329443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580019,"discussion_content":"正解 如果不直接返回copy，在释放锁以后被修改了 那么客户端拿到的值就是修改过的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657808171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341145,"user_name":"宝宝","can_delete":false,"product_type":"c1","uid":1063004,"ip_address":"","ucode":"D60DCB1844F441","user_header":"https://static001.geekbang.org/account/avatar/00/10/38/5c/c6a4e7f0.jpg","comment_is_top":false,"comment_ctime":1649389935,"is_pvip":false,"replies":[{"id":"124913","content":"23-27行调用的ListenAndServe内部会启动一个goroutine来真正启动服务监听。ListenAndServe会返回一个errChan用于在两个gorourine之间传输错误信息的。在ListenAndServe中对errChan的监听只是用于处理服务启动时的临时错误，比如listen端口已经占用等。<br><br>而34-36行的监听其实是用于在web server运行期间出现错误时，返回错误用的。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1649915973,"ip_address":"","comment_id":341145,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649389935","product_id":100093501,"comment_content":"main.go方法的23-27行已经有捕获err退出了，为什么main.go的34-26行还要再监听一遍呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562963,"discussion_content":"23-27行调用的ListenAndServe内部会启动一个goroutine来真正启动服务监听。ListenAndServe会返回一个errChan用于在两个gorourine之间传输错误信息的。在ListenAndServe中对errChan的监听只是用于处理服务启动时的临时错误，比如listen端口已经占用等。\n\n而34-36行的监听其实是用于在web server运行期间出现错误时，返回错误用的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649915973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340387,"user_name":"Mr Zeng","can_delete":false,"product_type":"c1","uid":2747144,"ip_address":"","ucode":"C565205FBD1BD2","user_header":"https://static001.geekbang.org/account/avatar/00/29/eb/08/1b57fb37.jpg","comment_is_top":false,"comment_ctime":1648792033,"is_pvip":true,"replies":[{"id":"124469","content":"如果你要严格按照六边形架构与项目的布局对应，那就在第五讲的布局标准的基础上，按照六边形架构来组织目录结构吧，主要是考虑如何放置pkgN包。这个没有标准可循。github上有一些按六边形架构组织的项目，但布局结构也各不相同。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1648806390,"ip_address":"","comment_id":340387,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648792033","product_id":100093501,"comment_content":"这种项目架构如何跟领域驱动的六边形架构结合呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559531,"discussion_content":"如果你要严格按照六边形架构与项目的布局对应，那就在第五讲的布局标准的基础上，按照六边形架构来组织目录结构吧，主要是考虑如何放置pkgN包。这个没有标准可循。github上有一些按六边形架构组织的项目，但布局结构也各不相同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648806390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338516,"user_name":"彳亍口巴","can_delete":false,"product_type":"c1","uid":1627148,"ip_address":"","ucode":"889B2732433C50","user_header":"https://static001.geekbang.org/account/avatar/00/18/d4/0c/31b42514.jpg","comment_is_top":false,"comment_ctime":1647533839,"is_pvip":false,"replies":[{"id":"123855","content":"多看几遍💪","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1647810539,"ip_address":"","comment_id":338516,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647533839","product_id":100093501,"comment_content":"我的go语言第一课真不配看这个，我看完基础都还是看不懂这节课的代码细节","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557432,"discussion_content":"多看几遍💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647810539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335788,"user_name":"唐伟","can_delete":false,"product_type":"c1","uid":2875151,"ip_address":"","ucode":"D05BCFC94FA271","user_header":"https://static001.geekbang.org/account/avatar/00/2b/df/0f/004d6fee.jpg","comment_is_top":false,"comment_ctime":1645688615,"is_pvip":false,"replies":[{"id":"122718","content":"你需要在go.mod文件所在目录去执行go build bookstore&#47;cmd&#47;bookstore。如果你在cmd&#47;bookstore目录下，可以使用go build main.go","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1645716801,"ip_address":"","comment_id":335788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645688615","product_id":100093501,"comment_content":"书很好，感谢，有一个问题请教老师：<br>这个项目的几条编译命令 怎么都不成功，我是mac+go1.17<br>感觉老师的命令都没指定目录的，能不能命令前pwd一下，新手很头痛。。。。<br><br>% go build bookstore&#47;cmd&#47;bookstore<br>package bookstore&#47;cmd&#47;bookstore is not in GOROOT (&#47;usr&#47;local&#47;go&#47;src&#47;bookstore&#47;cmd&#47;bookstore)","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553118,"discussion_content":"你需要在go.mod文件所在目录去执行go build bookstore/cmd/bookstore。如果你在cmd/bookstore目录下，可以使用go build main.go","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645716801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335482,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1645535154,"is_pvip":true,"replies":[{"id":"122612","content":"跑起来，你就成功了👍","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1645604882,"ip_address":"","comment_id":335482,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645535154","product_id":100093501,"comment_content":"clone下代码，正常运行。<br>➜  bookstore go build bookstore&#47;cmd&#47;bookstore<br>➜  bookstore ls<br>Makefile  bookstore cmd       go.mod    go.sum    internal  server    store<br>➜  bookstore .&#47;bookstore <br>2022&#47;02&#47;22 21:03:02 web server start ok<br>2022&#47;02&#47;22 21:03:45 recv a POST request from [::1]:55968<br>2022&#47;02&#47;22 21:04:06 recv a GET request from [::1]:55979<br><br>➜  bookstore curl -X POST -H &quot;Content-Type:application&#47;json&quot; -d &#39;{&quot;id&quot;: &quot;978-7-111-55842-2&quot;, &quot;name&quot;: &quot;The Go Programming Language&quot;, &quot;authors&quot;:[&quot;Alan A.A.Donovan&quot;, &quot;Brian W. Kergnighan&quot;],&quot;press&quot;: &quot;Pearson Education&quot;}&#39; localhost:8080&#47;book<br>➜  bookstore curl -X GET -H &quot;Content-Type:application&#47;json&quot; localhost:8080&#47;book&#47;978-7-111-55842-2<br>{&quot;id&quot;:&quot;978-7-111-55842-2&quot;,&quot;name&quot;:&quot;The Go Programming Language&quot;,&quot;authors&quot;:[&quot;Alan A.A.Donovan&quot;,&quot;Brian W. Kergnighan&quot;],&quot;press&quot;:&quot;Pearson Education&quot;}<br>{&quot;id&quot;:&quot;978-7-111-55842-2&quot;,&quot;name&quot;:&quot;The Go Programming Language&quot;,&quot;authors&quot;:[&quot;Alan A.A.Donovan&quot;,&quot;Brian W. Kergnighan&quot;],&quot;press&quot;:&quot;Pearson Education&quot;}zsh: no matches found: id:978-7-111-55842-2,name:The Go Programming Language,authors:[Alan A.A.Donovan,Brian W. Kergnighan],press:Pearson Education<br>➜  bookstore <br><br>其中有些代码还是没看明白，先将项目跑起来，然后再带着问题继续。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552825,"discussion_content":"跑起来，你就成功了👍","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645604882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335091,"user_name":"宝宝","can_delete":false,"product_type":"c1","uid":1063004,"ip_address":"","ucode":"D60DCB1844F441","user_header":"https://static001.geekbang.org/account/avatar/00/10/38/5c/c6a4e7f0.jpg","comment_is_top":false,"comment_ctime":1645324002,"is_pvip":false,"replies":[{"id":"122525","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1645539173,"ip_address":"","comment_id":335091,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645324002","product_id":100093501,"comment_content":"通俗易懂，赞","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552659,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645539173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334394,"user_name":"ryan","can_delete":false,"product_type":"c1","uid":1201217,"ip_address":"","ucode":"C60ED9AA42B58A","user_header":"https://static001.geekbang.org/account/avatar/00/12/54/41/9871f5ec.jpg","comment_is_top":false,"comment_ctime":1644916573,"is_pvip":false,"replies":[{"id":"122583","content":"我特意在windows下安装了一下go环境，无论用go run cmd\\bookstore\\main.go还是带有绝对路径main.go，运行都是ok的。你确认什么都没有改过么？","user_name":"作者回复","user_name_real":"作者","uid":"1026224","ctime":1645596517,"ip_address":"","comment_id":334394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644916573","product_id":100093501,"comment_content":"C:\\Users\\ryan\\Downloads\\publication-master\\column\\timegeek\\go-first-course\\09\\bookstore&gt;go env<br>set GO111MODULE=on<br>set GOARCH=amd64<br>set GOBIN=<br>set GOCACHE=C:\\Users\\ryan\\AppData\\Local\\go-build<br>set GOENV=C:\\Users\\ryan\\AppData\\Roaming\\go\\env  <br>set GOEXE=.exe<br>set GOEXPERIMENT=<br>set GOFLAGS=<br>set GOHOSTARCH=amd64<br>set GOHOSTOS=windows<br>set GOINSECURE=<br>set GOMODCACHE=E:\\go\\pkg\\mod<br>set GONOPROXY=<br>set GONOSUMDB=<br>set GOOS=windows<br>set GOPATH=E:\\go;<br>set GOPRIVATE=<br>set GOPROXY=https:&#47;&#47;goproxy.cn,direct<br>set GOROOT=D:\\Program Files\\Go<br>set GOSUMDB=sum.golang.org<br>set GOTMPDIR=<br>set GOTOOLDIR=D:\\Program Files\\Go\\pkg\\tool\\windows_amd64<br>set GOVCS=<br>set GOVERSION=go1.17.7<br>set GCCGO=gccgo<br>set AR=ar<br>set CC=gcc<br>set CXX=g++<br>set CGO_ENABLED=1<br>set GOMOD=C:\\Users\\ryan\\Downloads\\publication-master\\column\\timegeek\\go-first-course\\09\\bookstore\\go.mod<br>set CGO_CFLAGS=-g -O2<br>set CGO_CPPFLAGS=<br>set CGO_CXXFLAGS=-g -O2<br>set CGO_FFLAGS=-g -O2<br>set CGO_LDFLAGS=-g -O2<br>set PKG_CONFIG=pkg-config<br>set GOGCCFLAGS=-m64 -mthreads -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=C:\\Users\\ryan\\AppData\\Local\\Temp\\go-build2831317448=&#47;tmp&#47;go-build -gno-record-gcc-switches <br><br>C:\\Users\\ryan\\Downloads\\publication-master\\column\\timegeek\\go-first-course\\09\\bookstore&gt;go run &quot;c:\\Users\\ryan\\Downloads\\publication-master\\column\\timegeek\\go-first-course\\09\\bookstore\\cmd\\bookstore\\main.go&quot;<br>package command-line-arguments<br>        cmd\\bookstore\\main.go:4:2: use of internal package bookstore&#47;internal&#47;store not allowed<br><br><br>我直接拉老师的代码，跑起来提示这个","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552785,"discussion_content":"我特意在windows下安装了一下go环境，无论用go run cmd\\bookstore\\main.go还是带有绝对路径main.go，运行都是ok的。你确认什么都没有改过么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645596517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331632,"user_name":"下雨好睡眠","can_delete":false,"product_type":"c1","uid":2766990,"ip_address":"","ucode":"D5CB8939D22B22","user_header":"https://static001.geekbang.org/account/avatar/00/2a/38/8e/26a2a02e.jpg","comment_is_top":false,"comment_ctime":1642679136,"is_pvip":true,"replies":[{"id":"121595","content":"是的。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1643525855,"ip_address":"","comment_id":331632,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1642679136","product_id":100093501,"comment_content":"Tony Bai 老师： <br>        factory.Register(&quot;mem&quot;, &amp;MemStore{<br>                                                            books: make(map[string]*mystore.Book),    <br>                                                                 })<br>这里是将一个 MemStroe 实例存储到 provider 这个结构体里面，所以如果在 main.go 中调用两次 factory.New(&quot;mem&quot;)，是不是得到的实例实际上是同一个？比如：<br>s1, err := factory.New(&quot;mem&quot;)<br>s2, err := factory.New(&quot;mem&quot;)<br>这里的 s1 和 s2 是不是本质上是同一个实例？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549038,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643525855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330877,"user_name":"盘胧","can_delete":false,"product_type":"c1","uid":1650748,"ip_address":"","ucode":"5386CC4C92ECC2","user_header":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","comment_is_top":false,"comment_ctime":1642240207,"is_pvip":false,"replies":[{"id":"121585","content":"你使用的请求url地址是多少？<br>","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1643521617,"ip_address":"","comment_id":330877,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1642240207","product_id":100093501,"comment_content":"难搞 本地服务启动起来了  2022&#47;01&#47;15 17:48:09 web server start ok  <br>发请求过去，page not found 404","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549026,"discussion_content":"你使用的请求url地址是多少？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643521617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019807,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/9f/e49b68ea.jpg","nickname":"幽弥狂","note":"","ucode":"5AECEA7D6ADF33","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559015,"discussion_content":"我也是这样，从 git 上拉下来也是这样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648562497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566733,"discussion_content":"如果项目运行起来没有问题报错的话。page not found 404 的问题基本上是路由写的不对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650756093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1650748,"avatar":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","nickname":"盘胧","note":"","ucode":"5386CC4C92ECC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570908,"discussion_content":"对的，应该是我wsl 的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651992795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":566733,"ip_address":""},"score":570908,"extra":""}]}]},{"had_liked":false,"id":329172,"user_name":"Vettel","can_delete":false,"product_type":"c1","uid":1639787,"ip_address":"","ucode":"FB3E71DD1E8E7C","user_header":"https://static001.geekbang.org/account/avatar/00/19/05/6b/d9d6d68b.jpg","comment_is_top":false,"comment_ctime":1641194795,"is_pvip":false,"replies":[{"id":"120124","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1641540838,"ip_address":"","comment_id":329172,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641194795","product_id":100093501,"comment_content":"Restful-&gt;RESTful","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544496,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641540838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328037,"user_name":"郑印","can_delete":false,"product_type":"c1","uid":1005282,"ip_address":"","ucode":"181B0FDE5E1532","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/e2/2dcab30d.jpg","comment_is_top":false,"comment_ctime":1640495993,"is_pvip":false,"replies":[{"id":"120335","content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1641884756,"ip_address":"","comment_id":328037,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640495993","product_id":100093501,"comment_content":"跟着课程学习了几天，依葫芦画瓢写了个练手的聊天室，不得不说Go在这方面生产力贼强大。欢迎拍砖go新手代码 https:&#47;&#47;gitee.com&#47;izhengyin&#47;go-chat","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545241,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641884756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327026,"user_name":"陈衎","can_delete":false,"product_type":"c1","uid":1810649,"ip_address":"","ucode":"8A6535DDB4B611","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a0/d9/49578be1.jpg","comment_is_top":false,"comment_ctime":1639845536,"is_pvip":false,"replies":[{"id":"119118","content":"建议按原文的步骤构建与执行。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1640061564,"ip_address":"","comment_id":327026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1639845536","product_id":100093501,"comment_content":"老师我运行后一致提示这个错误，感觉没有什么思路呢！也定位不到问题<br>[Running] go run &quot;&#47;Users&#47;chenkan&#47;goprojects&#47;bookstore&#47;cmd&#47;bookstore&#47;main.go&quot;<br>2021&#47;12&#47;19 00:35:47 web server start ok<br>panic: web server start ok<br><br><br>goroutine 1 [running]:<br>log.Panicln({0xc0000adee8, 0x5, 0x12e37f8})<br>\t&#47;usr&#47;local&#47;go&#47;src&#47;log&#47;log.go:368 +0x65<br>main.main()<br>\t&#47;Users&#47;chenkan&#47;goprojects&#47;bookstore&#47;cmd&#47;bookstore&#47;main.go:28 +0x145<br>exit status 2<br><br>[Done] exited with code=1 in 1.953 seconds<br>","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540469,"discussion_content":"建议按原文的步骤构建与执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640061564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326917,"user_name":"Geek_f55887","can_delete":false,"product_type":"c1","uid":2871654,"ip_address":"","ucode":"F6B29FCD4FB5E9","user_header":"","comment_is_top":false,"comment_ctime":1639748925,"is_pvip":false,"replies":[{"id":"118996","content":"https:&#47;&#47;github.com&#47;bigwhite&#47;publication&#47;tree&#47;master&#47;column&#47;timegeek&#47;go-first-course&#47;09&#47;bookstore<br><br>可以打开的，GitHub 链接，你查下自己的网络。","user_name":"编辑回复","user_name_real":"编辑","uid":"1000473","ctime":1639965029,"ip_address":"","comment_id":326917,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1639748925","product_id":100093501,"comment_content":"最下面的资源链接那里点不开","like_count":0,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540122,"discussion_content":"https://github.com/bigwhite/publication/tree/master/column/timegeek/go-first-course/09/bookstore\n\n可以打开的，GitHub 链接，你查下自己的网络。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639965029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321824,"user_name":"delicate","can_delete":false,"product_type":"c1","uid":1187083,"ip_address":"","ucode":"AE262751C50CDD","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/0b/5f353b88.jpg","comment_is_top":false,"comment_ctime":1637054752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637054752","product_id":100093501,"comment_content":"NewBookStoreServer 里 srv 一个变量名代表了两个不同的变量，有一点影响代码理解😂","like_count":0},{"had_liked":false,"id":321765,"user_name":"多选参数","can_delete":false,"product_type":"c1","uid":1248326,"ip_address":"","ucode":"B2294D80AB075F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","comment_is_top":false,"comment_ctime":1637033804,"is_pvip":false,"replies":[{"id":"117132","content":"嗯，一定要坚持自己动手输入代码，编译代码，运行程序，走一遍和看一遍的收获是完全不同的。","user_name":"作者回复","user_name_real":"编辑","uid":"1026224","ctime":1637552027,"ip_address":"","comment_id":321765,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637033804","product_id":100093501,"comment_content":"这节课的小项目可以说是，麻雀虽小，五脏俱全！之前一直看大项目的代码，但是没有真正落地去敲过，感觉总是差了点。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532193,"discussion_content":"嗯，一定要坚持自己动手输入代码，编译代码，运行程序，走一遍和看一遍的收获是完全不同的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637552027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320989,"user_name":"Sid","can_delete":false,"product_type":"c1","uid":2056347,"ip_address":"","ucode":"733443C9F3BAAD","user_header":"https://static001.geekbang.org/account/avatar/00/1f/60/9b/ea3d6d65.jpg","comment_is_top":false,"comment_ctime":1636611474,"is_pvip":false,"replies":[{"id":"116754","content":"“providers这个变量是在函数运行期间一直都会加载在内存里嘛？--- 是的。providers是一个包级变量，其生命周期与程序的生命周期是一致的。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636929358,"ip_address":"","comment_id":320989,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636611474","product_id":100093501,"comment_content":"老师，你好，这章有点挑战，有一个地方我想确定一下。程序第一步就是 import _ &quot;bookstore&#47;internal&#47;store&quot;， 这里面有一个 func init(), 这个函数应该是会被立马调用吧？然后调用了工厂函数里面的Register，Register的最后一步是 providers[name]=p。我的疑问是providers这个变量是在函数运行期间一直都会加载在内存里嘛？<br><br>因为我看到后面的New会对&quot;mem&quot;这个provider做一个是否存在的判定。谢谢老师的耐心解答。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530180,"discussion_content":"“providers这个变量是在函数运行期间一直都会加载在内存里嘛？--- 是的。providers是一个包级变量，其生命周期与程序的生命周期是一致的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636929358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320147,"user_name":"光","can_delete":false,"product_type":"c1","uid":1284618,"ip_address":"","ucode":"BDA7F41566E4FE","user_header":"https://static001.geekbang.org/account/avatar/00/13/9a/0a/6c74e932.jpg","comment_is_top":false,"comment_ctime":1636098940,"is_pvip":true,"replies":[{"id":"116263","content":"Authors是一个元素类型为string类型的切片，所以用nil进行比较。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636425274,"ip_address":"","comment_id":320147,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1636098940","product_id":100093501,"comment_content":"memorystore.go<br> if book.Authors != nil {<br>\t\tnBook.Authors = book.Authors<br>\t}<br>这里是不是应该改成：<br> if book.Authors != &quot;&quot; {<br>\t\tnBook.Authors = book.Authors<br>\t}","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529895,"discussion_content":"Authors是一个元素类型为string类型的切片，所以用nil进行比较。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636425274,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1898332,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f7/5c/8a0b5b90.jpg","nickname":"永遇乐","note":"","ucode":"B11D8B55B51188","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412453,"discussion_content":"Authors 定义的类型是[]string,所以用!=nil","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636172148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320052,"user_name":"小鬼","can_delete":false,"product_type":"c1","uid":1818889,"ip_address":"","ucode":"2CB18AD358B5A4","user_header":"https://static001.geekbang.org/account/avatar/00/1b/c1/09/49dfb810.jpg","comment_is_top":false,"comment_ctime":1636068934,"is_pvip":false,"replies":[{"id":"116241","content":"设置一下GOPROXY这个环境变量。这个在之前的讲解中有提及。具体步骤也可以看一下我写的Go第一课FAQ：https:&#47;&#47;tonybai.com&#47;go-course-faq。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636421643,"ip_address":"","comment_id":320052,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1636068934","product_id":100093501,"comment_content":"go mod tidy<br>go: finding module for package github.com&#47;gorilla&#47;mux<br>bookstore&#47;server imports<br>        github.com&#47;gorilla&#47;mux: module github.com&#47;gorilla&#47;mux: Get &quot;https:&#47;&#47;proxy.golang.org&#47;github.com&#47;gorilla&#47;mux&#47;@v&#47;list&quot;: dial tcp<br> 216.58.200.49:443: connectex: A connection attempt failed because the connected party did not properly respond after a period of time<br>, or established connection failed because connected host has failed to respond.<br><br>请问下这个怎么解决呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529854,"discussion_content":"设置一下GOPROXY这个环境变量。这个在之前的讲解中有提及。具体步骤也可以看一下我写的Go第一课FAQ：https://tonybai.com/go-course-faq。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636421643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2576960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","nickname":"自由","note":"","ucode":"4E3B53D29D86CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412142,"discussion_content":"hi，这个可以尝试设置一下国内代理，go env -w  GOPROXY=https://goproxy.io,direct","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636083458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319970,"user_name":"Dunbreak","can_delete":false,"product_type":"c1","uid":1155210,"ip_address":"","ucode":"A64010733754BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/8a/69f4023c.jpg","comment_is_top":false,"comment_ctime":1636023018,"is_pvip":false,"replies":[{"id":"116239","content":"09讲末尾有这个实战项目的源码链接，你下载后和你自己手敲的先对比一下，看看是否有差别","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636420749,"ip_address":"","comment_id":319970,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1636023018","product_id":100093501,"comment_content":"请问一下，为什么我按照源码写了这个小项目，但是factory包的Register函数从来都不调用呢？断点加在memstore.go的 init函数中也不执行，最终导致run起来直接就报panic了","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529832,"discussion_content":"09讲末尾有这个实战项目的源码链接，你下载后和你自己手敲的先对比一下，看看是否有差别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636420749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155210,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a0/8a/69f4023c.jpg","nickname":"Dunbreak","note":"","ucode":"A64010733754BF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413267,"discussion_content":"我已经解决了，是少了匿名包引用的代码，加上之后init函数才会被执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636427155,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1898332,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f7/5c/8a0b5b90.jpg","nickname":"永遇乐","note":"","ucode":"B11D8B55B51188","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412457,"discussion_content":"我的报：panic: store: unknown provider men ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636174691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1896658,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f0/d2/771a5dca.jpg","nickname":"奔跑的咸鱼","note":"","ucode":"28C2B95415BBF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411954,"discussion_content":"老师的那个main.go程序里面，包导入的第一行只执行了init函数，使用IDE的话是不会自动导入的，需要自己写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636036613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319908,"user_name":"Geek_8ed998","can_delete":false,"product_type":"c1","uid":1793879,"ip_address":"","ucode":"1C164836354665","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJHTX1IwEl1Eh1CCO2ejL2gKe08Vxib61UZz9l5WGA81ObK0Nk5MCZ3ic6IWcW5kyX0DtwBNMEMl2Q/132","comment_is_top":false,"comment_ctime":1636007117,"is_pvip":false,"replies":[{"id":"116238","content":"是从文中末尾的github链接下载的源码么？你本地的go是什么版本？开启go module构建模式了么？确认一下","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1636420678,"ip_address":"","comment_id":319908,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1636007117","product_id":100093501,"comment_content":"package bookstore&#47;cmd&#47;bookstore is not in GOROOT (&#47;usr&#47;local&#47;go&#47;src&#47;bookstore&#47;cmd&#47;bookstore)  这个啥原因阿","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529810,"discussion_content":"是从文中末尾的github链接下载的源码么？你本地的go是什么版本？开启go module构建模式了么？确认一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636420678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1896658,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/f0/d2/771a5dca.jpg","nickname":"奔跑的咸鱼","note":"","ucode":"28C2B95415BBF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411948,"discussion_content":"go build bookstore/cm/bookstore这个命令要在go.mod文件所在路径下执行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636036290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319603,"user_name":"不负青春不负己🤘","can_delete":false,"product_type":"c1","uid":1363671,"ip_address":"","ucode":"A6DD8E8B20EA6E","user_header":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","comment_is_top":false,"comment_ctime":1635862763,"is_pvip":true,"replies":[{"id":"115894","content":"不明白就反复多看多听几遍。有问题随时留言。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1635931996,"ip_address":"","comment_id":319603,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1635862763","product_id":100093501,"comment_content":"这节有点复杂，先run吧，后面在复习一下:)","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529685,"discussion_content":"不明白就反复多看多听几遍。有问题随时留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635931996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580020,"discussion_content":"全部学完几遍再回来敲这个一遍就OK了 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657808368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319599,"user_name":"进化菌","can_delete":false,"product_type":"c1","uid":1276861,"ip_address":"","ucode":"B30A5F78BB4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/bd/ccb37425.jpg","comment_is_top":false,"comment_ctime":1635862402,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"1635862402","product_id":100093501,"comment_content":"开始感觉有些难度了，得多看两遍，把程序跑起来才行了~","like_count":0},{"had_liked":false,"id":319587,"user_name":"Guoo","can_delete":false,"product_type":"c1","uid":2821421,"ip_address":"","ucode":"5D63DE57EBC8E5","user_header":"https://static001.geekbang.org/account/avatar/00/2b/0d/2d/655a626d.jpg","comment_is_top":false,"comment_ctime":1635859303,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1635859303","product_id":100093501,"comment_content":"老师确实过来人，正准备找个项目手撸一遍呢","like_count":0,"discussions":[{"author":{"id":1793879,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLJHTX1IwEl1Eh1CCO2ejL2gKe08Vxib61UZz9l5WGA81ObK0Nk5MCZ3ic6IWcW5kyX0DtwBNMEMl2Q/132","nickname":"Geek_8ed998","note":"","ucode":"1C164836354665","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411857,"discussion_content":"package bookstore/cmd/bookstore is not in GOROOT (/usr/local/go/src/bookstore/cmd/bookstore) 按老师的步骤执行到这里出错，什么原因阿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636020524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319408,"user_name":"陈东","can_delete":false,"product_type":"c1","uid":2213995,"ip_address":"","ucode":"FCDE6D237CC621","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Ge7uhlEVxicQT73YuomDPrVKI8UmhqxKWrhtO5GMNlFjrHWfd3HAjgaSribR4Pzorw8yalYGYqJI4VPvUyPzicSKg/132","comment_is_top":false,"comment_ctime":1635781228,"is_pvip":true,"replies":[{"id":"115901","content":"学习任何一门编程语言，这个过程都是必不可少的。只是对着专栏文章或书籍看，那是学不会编码的，必须动手。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1635933593,"ip_address":"","comment_id":319408,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1635781228","product_id":100093501,"comment_content":"先把代码敲一遍,捋顺之后,再理解,是不是对新手是比较好的方式?","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529626,"discussion_content":"学习任何一门编程语言，这个过程都是必不可少的。只是对着专栏文章或书籍看，那是学不会编码的，必须动手。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635933593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319293,"user_name":"张鹏","can_delete":false,"product_type":"c1","uid":2814235,"ip_address":"","ucode":"ED292A97B0744C","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f1/1b/ae72d9a3.jpg","comment_is_top":false,"comment_ctime":1635734873,"is_pvip":false,"replies":[{"id":"115924","content":"store.Store是一个接口类型，而MemStore实现了这个接口，自然是可以传给store.Store的。关于接口类型，在后续课程中会详细讲解。这里大家先有个感性认识吧。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1635946685,"ip_address":"","comment_id":319293,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1635734873","product_id":100093501,"comment_content":"老师，Register(name string, p store.Store)方法第二参数要求传入Store，memstore.go中的init方法使用Register时传入的是MemStore类型，类型不匹配吧？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529577,"discussion_content":"store.Store是一个接口类型，而MemStore实现了这个接口，自然是可以传给store.Store的。关于接口类型，在后续课程中会详细讲解。这里大家先有个感性认识吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635946685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411037,"discussion_content":"看了文末的GitHub链接了吗？ MemStore 实现了Store接口的所有方法，所以也就属于 Store 类型了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635836276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1505492,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/exfIUlVdCpicQPc7fOI6XezUuXd7rayRia7sB2GGHGP7IEBibI6TJbQS2R0bMNejzR1odAIDFP05cWjujrmbIzzwg/132","nickname":"AlexWillBeGood","note":"","ucode":"6D7BB91781E38C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411103,"discussion_content":"Store是接口 Memstore通过duck type实现了接口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635850260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410639,"discussion_content":"MemStore 要自己实现一下 Store 接口的方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635749883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319286,"user_name":"张鹏","can_delete":false,"product_type":"c1","uid":2814235,"ip_address":"","ucode":"ED292A97B0744C","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f1/1b/ae72d9a3.jpg","comment_is_top":false,"comment_ctime":1635733117,"is_pvip":false,"replies":[{"id":"115926","content":"包名可以任意命名，没有限制，但社区公认的好的包名通常为一个小写单词。一个目录下仅允许存放一个包。通常一个优秀的实践是包名与目录名相同。但也有很多项目没有遵守这个约定俗成的规则。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1635947100,"ip_address":"","comment_id":319286,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1635733117","product_id":100093501,"comment_content":"老师，你每个文件的包名怎么命名？根据目录来吗？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529573,"discussion_content":"包名可以任意命名，没有限制，但社区公认的好的包名通常为一个小写单词。一个目录下仅允许存放一个包。通常一个优秀的实践是包名与目录名相同。但也有很多项目没有遵守这个约定俗成的规则。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635947100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2576960,"avatar":"https://static001.geekbang.org/account/avatar/00/27/52/40/db9b0eb2.jpg","nickname":"自由","note":"","ucode":"4E3B53D29D86CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410634,"discussion_content":"包的命名，之前在 05 项目布局已经说了呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635747807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319275,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1635730047,"is_pvip":false,"replies":[{"id":"115927","content":"哈哈，慢慢来，一点点摸索和优化。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1635947138,"ip_address":"","comment_id":319275,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1635730047","product_id":100093501,"comment_content":"看了老师的讲解，我都不好意思说我的生产环境有多么的糟糕了。新的项目我以本文作为最佳实践去参考。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529568,"discussion_content":"哈哈，慢慢来，一点点摸索和优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635947138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319261,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1635726959,"is_pvip":false,"replies":[{"id":"115928","content":"看server&#47;server.go中NewBookStoreServer函数的实现。","user_name":"作者回复","user_name_real":"Tony Bai","uid":"1026224","ctime":1635947218,"ip_address":"","comment_id":319261,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1635726959","product_id":100093501,"comment_content":"老师 路由在哪里设置的呢 我怎么知道对应的是哪个restful方法呢","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529560,"discussion_content":"看server/server.go中NewBookStoreServer函数的实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635947218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218761,"avatar":"https://static001.geekbang.org/account/avatar/00/12/98/c9/9b457156.jpg","nickname":"西红柿牛腩泡饼","note":"","ucode":"0B090A9D8588F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411028,"discussion_content":"路由是在server/server.go的NewBookStoreServer函数中实现的，通过使用mux包提供的方法实现，代码及讲解在当前小节的HTTP 服务模块（server）处","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635834762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}