{"id":87845,"title":"34 | 你的代码是怎么变混乱的？","content":"<p>你好，我是郑晔。</p><p>前面几讲，我给你讲了开发过程的各种自动化，从构建、验证到上线部署，这些内容都是站在软件外部看的。从这一讲开始，我准备带领大家进入到软件内部。今天的话题就从写代码开始说起。</p><h2>逐步腐化的代码</h2><p>代码是程序员改造世界最直接的武器，却也是程序员抱怨最多的东西。为什么程序员会对代码如此不满呢？</p><p>你会抱怨写一段代码吗？你肯定不会，毕竟这是你养家糊口的本领，最基本的职业素养我们还是有的。那抱怨的是什么呢？是维护一段代码。</p><p>为什么维护代码那么难？因为通常来说，你维护的这段代码是有一定年龄的，所以，你总会抱怨前人没有好好写这段代码。</p><p>好，现在你拿到了一个新的需求，要在这段代码上添加一个新功能，你会怎么做呢？很多人的做法是，在原有的代码上添加一段新的逻辑，然后提交完工。</p><p>发现问题了吗？<strong>你只是低着头完成了一项任务，而代码却变得更糟糕了。</strong>如果我问你，你为什么这么做？你的答案可能是：“这段代码都这样了，我不敢乱改。”或者是：“之前就是这么写的，我只是遵循别人的风格在写。”</p><p>行业里有一个段子，<strong>对程序员最好的惩罚是让他维护自己三个月前写的代码。</strong>你一不小心就成了自己最讨厌的人。</p><p>从前，我也认为很多程序员是不负责任，一开始就没有把代码写好，后来，我才知道很多代码其实只是每次加一点。你要知道，一个产品一旦有了生命力，它就会长期存在下去，代码也就随着时间逐渐腐烂了。</p><!-- [[[read_end]]] --><p>而几乎每个程序员的理由都是一样的，他们也很委屈，因为他们只改了一点点。</p><p>这样的问题有解吗？一个解决方案自然就是我们前面说过的重构，但重构的前提是，你得知道代码驶向何方。对于这个问题，更好的答案是，你需要了解一些软件设计的知识。</p><h2>SOLID 原则</h2><p>提到软件设计，大部分程序员都知道一个说法“高内聚、低耦合”，但这个说法如同“期待世界和平”一样，虽然没错，但并不能很好地指导我们的具体工作。</p><p>人们尝试着用各种方法拆解这个高远的目标，而比较能落地的一种做法就是 Robert Martin 提出的面向对象设计原则：<a href=\"http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod\">SOLID</a>，这其实是五个设计原则的缩写，分别是</p><ul>\n<li>单一职责原则（Single responsibility principle，SRP）</li>\n<li>开放封闭原则（Open–closed principle，OCP）</li>\n<li>Liskov 替换原则（Liskov substitution principle，LSP）</li>\n<li>接口隔离原则（Interface segregation principle，ISP）</li>\n<li>依赖倒置原则（Dependency inversion principle，DIP）</li>\n</ul><p>早在1995年，Robert Martin 就提出了<a href=\"http://groups.google.com/forum/?hl=en#!topic/comp.object/WICPDcXAMG8\">这些设计原则的雏形</a>，然后在他的《<a href=\"http://groups.google.com/forum/?hl=en#!topic/comp.object/WICPDcXAMG8\">敏捷软件开发：原则、实践与模式</a>》这本书中，比较完整地阐述了这五个原则。后来，他有把这些原则进一步整理，成了今天的 “SOLID”。</p><p>学习这些设计原则有什么用呢？</p><p>今天的程序员学习软件设计多半是从设计模式入门的，但不知道你是否有这样的感觉，在学习设计模式的时候，有几个设计模式看上去如此相像，如果不是精心比较，你很难记得住它们之间的细微差别。</p><p>而且，真正到了工作中，你还能想得起来的可能就剩下几个最简单的模式了，比如工厂方法、观察者等等。</p><p>另外，有人常常“为赋新词强说愁”，硬去使用设计模式，反而会让代码变得更加复杂了。你会有一种错觉，我是不是学了一个假的设计模式，人人都说好的东西，我怎么就感受不到呢？</p><p>初学设计模式时，我真的就被这个问题困扰了好久。直到我看到了 Robert Martin 的《敏捷软件开发：原则、实践与模式》。这是一本被名字糟蹋了的好书。</p><p>这本书出版之际，敏捷软件开发运动正风起云涌，Robert Martin 也不能免俗地蹭了热点，将“敏捷”挂到了书名里。其实，这是一本讲软件设计的书。</p><p>当我看到了 SOLID 的五个原则之后，我终于想明白了，原来我追求的方向错了。如果说设计模式是“术”，设计原则才是“道”。设计模式并不能帮你建立起知识体系，而设计原则可以。</p><p>当我不能理解“道”的时候，“术”只能死记硬背，效果必然是不佳的。想通这些之后，我大大方方地放弃了对于设计模式的追求，只是按照设计原则来写代码，结果是，我反而是时常能重构出符合某个设计模式的代码。至于具体模式的名字，如果不是有意识地去找，我已经记不住了。</p><p>当然，我并不是说设计模式不重要，之所以我能够用设计原则来写代码，前提条件是，我曾经在设计模式上下过很多功夫。</p><p>道和术，是每个程序员都要有的功夫，在“术”上下过功夫，才会知道“道”的价值，“道”可以帮你建立更完整的知识体系，不必在“术”的低层次上不断徘徊。</p><h2>单一职责原则</h2><p>好，下面我就单拿 SOLID 中单一职责原则稍微展开讲一下，虽然这个原则听上去是最简单的，但也有很多误解存在。</p><p>首先，什么是单一职责原则呢？如果读过《敏捷软件开发：原则、实践与模式》，你对单一职责的理解应该是，一个模块应该仅有一个修改的原因。</p><p>2017年，Robert Martin 出版了《架构整洁之道》（Clean Architecture），他把单一职责原则的定义修改成“一个模块应该仅对一类 actor 负责”，这里的 actor 可以理解为对系统有共同需求的人。</p><p>不管是哪个定义，初读起来，都不是那么好理解。我举个例子，你就知道了。我这里就用 Robert Martin 自己给出的例子：在一个工资管理系统中，有个 Employee 类，它里面有三个方法：</p><ul>\n<li>calculatePay()，计算工资，这是财务部门关心的。</li>\n<li>reportHours()，统计工作时长，这是人力部门关心的。</li>\n<li>save()，保存数据，这是技术部门关心的。</li>\n</ul><p>之所以三个方法在一个类里面，因为它们的某些行为是类似的，比如计算工资和统计工作时长都需要计算正常工作时间，为了避免重复，团队引入了新的方法：regularHours()。</p><p><img src=\"https://static001.geekbang.org/resource/image/aa/50/aabd9d105df157db95739fb628c00250.jpg?wh=2284*864\" alt=\"\"></p><p>接下来，财务部门要修改正常工作时间的统计方法，但人力部门不需要修改。负责修改的程序员只看到了 calculatePay() 调用了 regularHours()，他完成了他的工作，财务部门验收通过。但上线运行之后，人力部门产生了错误的报表。</p><p>这是一个真实的案例，最终因为这个错误，给公司造成了数百万的损失。</p><p>如果你问程序员，为什么要把 calculatePay() 和 reportHours()放在一个类里，程序员会告诉你，因为它们都用到了 Employee 这个类的数据。</p><p>但是，它们是在为不同的 actor 服务，所以，任何一个 actor 有了新的需求，这个类都需要改，它也就很容易就成为修改的重灾区。</p><p>更关键的是，很快它就会复杂到没人知道一共有哪些模块与它相关，改起来会影响到谁，程序员也就越发不愿意维护这段代码了。</p><p>我在专栏“<a href=\"http://time.geekbang.org/column/article/73980\">开篇词</a>”里提到过，人的大脑容量有限，太复杂的东西理解不了。所以，我们唯一能做的就是把复杂的事情变简单。</p><p>我在“任务分解”模块中不断强调把事情拆小，同样的道理在写代码中也适用。单一职责原则就是给了你一个指导原则，可以按照不同的 actor 分解代码。</p><p>上面这个问题，Robert Martin 给了一个解决方案，就是按照不同的 actor 将类分解，我把分解的结果的类图附在了下面：</p><p><img src=\"https://static001.geekbang.org/resource/image/ae/bb/ae09f384694f4c7a503da64f7ab34cbb.jpg?wh=2284*1018\" alt=\"\"></p><h2>编写短函数</h2><p>好，你已经初步了解了单一职责原则，但还有一点值得注意。我先来问个问题，你觉得一个函数多长是合适的？</p><p>曾经有人自豪地向我炫耀，他对代码要求很高，超过50行的函数绝对要处理掉。</p><p>我在专栏中一直强调“小”的价值，能看到多小，就可以在多细的粒度上工作。单一职责这件事举个例子很容易，但在真实的工作场景中，<strong>你能看到一个模块在为多少 actor 服务，就完全取决于你的分解能力了。</strong></p><p>回到前面的问题上，就我自己的习惯而言，通常的函数都在十行以内，如果是表达能力很强的语言，比如 Ruby，函数会更短。</p><p>所以，你可想而知我听到“把50行代码归为小函数”时的心情。我知道，“函数长短”又是一个非常容易引起争论的话题，不同的人对于这个问题的答案，取决于他看问题的粒度。</p><p>所以，不讨论前提条件，只谈论函数的长短，其实是没有意义的。</p><p>单一职责原则可以用在不同的层面，写一个类，你可以问问这些方法是不是为一类 actor 服务；写方法时，你可以问问这些代码是不是在一个层面上；甚至一个服务，也需要从业务上考虑一下，它在提供是否一类的服务。总之，你看到的粒度越细，也就越能发现问题。</p><h2>总结时刻</h2><p>今天，我讲的内容是软件设计，很多代码的问题就是因为对设计思考得不足导致的。</p><p>许多程序员学习设计是从设计模式起步的，但这种学法往往会因为缺乏结构，很难有效掌握。设计原则，是一个更好的体系，掌握设计原则之后，才能更好地理解设计模式这些招式。Robert Martin 总结出的“SOLID”是一套相对完整易学的设计原则。</p><p>我以“SOLID” 中的单一职责原则为例，给你稍做展开，更多的内容可以去看 Robert Martin 的书。不过，我也给你补充了一些维度，尤其是从“小”的角度告诉你，你能看到多小，就能发现代码里多少的问题。</p><p>如果今天的内容你只能记住一件事，那请记住：<strong>把函数写短。</strong></p><p>最后我想请你思考一下，你是怎么理解软件设计的呢？欢迎在留言区写下你的想法。</p><p>感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":81065,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/96a7d638.jpg","comment_is_top":false,"comment_ctime":1553790356,"is_pvip":true,"replies":[{"id":29488,"content":"对，是这个意思。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553906423,"ip_address":"","comment_id":81065,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"想起有人说过一句话，大意是如果语言支持，就不需要设计模式。换个角度理解，其实讲的就是设计模式背后的设计原则更重要更本质，是道，而设计模式只是设计原则在具体场景下的派生，是术。\n\n张三丰问张无忌：这套拳法你可记得住了？\n张无忌答：刚开始记得七七八八，现在已经忘得差不多了。\n张三丰听后满意地抚须而笑","like_count":29},{"had_liked":false,"id":81387,"user_name":"hua168","can_delete":false,"product_type":"c1","uid":1065255,"ip_address":"","ucode":"CFF9A7E86EBA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/27/3ff1a1d6.jpg","comment_is_top":false,"comment_ctime":1553885946,"is_pvip":false,"replies":[{"id":29514,"content":"算法、数据结构是基本功，至少要懂得常用的数据结构怎么用，知道算法怎么分析。设计是进阶一点的东西，你不学的话，组织代码的能力就差一些。这些东西都要学，没人会强制你用，但不学，你就缺少了一个思考的维度，就很难上台阶。学习是自己的事，越基础的东西越要学好。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553927598,"ip_address":"","comment_id":81387,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"我呆过的中小公司的开发，基本上不用什么设计模式，SOLID五个选择挺简单的，但看设计模式感觉比较难，复杂化了……20多个设计模式一定要学吗？感觉上用到的少，是不是需要再学？\n\n另外想问下开发一定要学算法吗？都说算法是程序的灵魂，我看很多开发不不怎么懂算法😓…\n也是用到再学？","like_count":25,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445067,"discussion_content":"对，是这个意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553906423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81642,"user_name":"行与修","can_delete":false,"product_type":"c1","uid":1241842,"ip_address":"","ucode":"11F21B663EF6D3","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/f2/2a9a6e9a.jpg","comment_is_top":false,"comment_ctime":1553994193,"is_pvip":false,"replies":[{"id":29595,"content":"很好的补充！","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1554011649,"ip_address":"","comment_id":81642,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"我们常说任务到手不要着急去做，要从设计入手，把时间多花在前面。工作中发现大家都是思考了才动手的，那为什么越往后偏差越大呢？共性原因有二：一是全局观不够，用咱们课里的话说就是上下文局限和反馈延迟（看到问题不提，直到代码写到那绕不过去了再沟通）；二是没有领域的概念和有意识地去实践（纸上谈兵），尤其是做流程型任务，都喜欢先把表结构定义出来，再去生成实体，所以从领域层面来看这些实体就很不合适了。结果必然是用面向对象的工具写出了面向过程的代码，既然是面向过程那OO设计原则就鲜有用武之地了。\n这两点也是我个人理解要做好软件设计的两个必要条件。","like_count":15,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445281,"discussion_content":"很好的补充！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554011649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81069,"user_name":"捞鱼的搬砖奇","can_delete":false,"product_type":"c1","uid":1021539,"ip_address":"","ucode":"2FD194C4DA26E5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/63/7eb32c9b.jpg","comment_is_top":false,"comment_ctime":1553792811,"is_pvip":false,"replies":[{"id":29516,"content":"嗯，你理解得很到位。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553927776,"ip_address":"","comment_id":81069,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"这么些课跟下来，发现课程从多个角度来阐述。但是拆解这件事一直贯穿在其中。仔细一想都是相通的。小了才会更可控，小了才会更能发现问题。因为有了在动手写之前拆解发现了问题才能保证后面写起来更顺畅。","like_count":12,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445281,"discussion_content":"很好的补充！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554011649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82285,"user_name":"desmond","can_delete":false,"product_type":"c1","uid":1106996,"ip_address":"","ucode":"C3473F9C66D117","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep58epOYWkVaxMIul9hvv0LWWKIYCWAib4ic4nnngvabQMRsP1ials3u4nOYkS8HbsyLvMh7hV0LIsqQ/132","comment_is_top":false,"comment_ctime":1554175371,"is_pvip":false,"replies":[{"id":29855,"content":"这个比喻，赞！","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1554214534,"ip_address":"","comment_id":82285,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"有道无术，术尚可求也；有术无道，至于术\n关于设计模式，《重构》《设计模式》《重构与模式》这三本书结合看，我自己理解的更深刻了，并且能够很自然的应用。\n关于函数长短，我觉得，像人的体温，函数太长，肯定就是发烧了，特别长，会把人烧坏的。\n\n","like_count":11,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445069,"discussion_content":"嗯，你理解得很到位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553927776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81101,"user_name":"宝宝太喜欢极客时间了","can_delete":false,"product_type":"c1","uid":1215152,"ip_address":"","ucode":"9CDB679C257612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOGZ6lbHiboIZMN9USbeutnmCWBahVLtSlKlIENKvrZQCUQzpzeZQOxTntIkBUeDk6qZUPdqmfKrQ/132","comment_is_top":false,"comment_ctime":1553817831,"is_pvip":false,"replies":[{"id":29499,"content":"这三个类应该自己写自己的，就不应该有共用的代码，甚至不在一个工程里，它们属于不同的限界上下文，后面讲 DDD 会再次提到。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553917879,"ip_address":"","comment_id":81101,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"老师，案例中将三个方法放在三个类中职责是单一了，但是如果计算正常的工作时间的方法一样的时候，这样不是又出现重复代码的问题了吗？","like_count":6,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445537,"discussion_content":"这个比喻，赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554214534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223540,"user_name":"万里","can_delete":false,"product_type":"c1","uid":1076719,"ip_address":"","ucode":"8B1958BEB5FB2C","user_header":"https://static001.geekbang.org/account/avatar/00/10/6d/ef/08132ab2.jpg","comment_is_top":false,"comment_ctime":1591111173,"is_pvip":false,"replies":[{"id":82424,"content":"评论是这个专栏重要的组成部分。","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1591194175,"ip_address":"","comment_id":223540,"utype":1}],"discussion_count":2,"race_medal":3,"score":2,"product_id":100022301,"comment_content":"看这个专栏，总会不忘看评论，大家的发言都太精彩了","like_count":5,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445082,"discussion_content":"这三个类应该自己写自己的，就不应该有共用的代码，甚至不在一个工程里，它们属于不同的限界上下文，后面讲 DDD 会再次提到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553917879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91994,"user_name":"赵春辉","can_delete":false,"product_type":"c1","uid":1122359,"ip_address":"","ucode":"81BC5BAFDB8781","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/37/ffa8579c.jpg","comment_is_top":false,"comment_ctime":1557150425,"is_pvip":false,"replies":[{"id":33452,"content":"嗯，Keep It Simple, Stupid.","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1557539712,"ip_address":"","comment_id":91994,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"还有著名的KISS原则，自己写代码时，一直默念这个原则","like_count":5,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497157,"discussion_content":"评论是这个专栏重要的组成部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591194175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2698871,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Qq9IlgLjo8CVKTc93AHsicwDMJq3sbN4UsubLJXUQxWLOhcoJtp8mgcsGmp6PE04Y1EcCnZ03MwNKKJFQIJPLHnMfU2MNBErXRpz8HLZIAHQ/132","nickname":"Geek_01c5f4","note":"","ucode":"18863CF544E100","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554572,"discussion_content":"看评论更能激发阅读的兴趣，每当看得不知所云的时候，就看评论；看评论就又燃起重新在文中阅读的热情","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646471551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309024,"user_name":"杨逸林","can_delete":false,"product_type":"c1","uid":1167233,"ip_address":"","ucode":"4BF3CF3E2F1AC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/cf/81/96f656ef.jpg","comment_is_top":false,"comment_ctime":1629897539,"is_pvip":false,"replies":[{"id":111862,"content":"恭喜，你已经有了很好的基础","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1629933257,"ip_address":"","comment_id":309024,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"我是在月初听到现在的，我发现老师讲的，我都做到了。而且对应的书籍我都看过了，即使老师没说，我也看过了，感觉就是把看过的书，又听了一遍，加强了印象。\n\n《高效能人士的七个习惯》（经常提到的已终为始）、《金字塔原理》、《Clean Code》、《Clean Architecture》、《敏捷软件开发：原则、实践与模式》、《TDD》、《DDD》应该还有本 DevOps 的书。测试金字塔在《微服务架构设计模式》也有提到过。\n\n什么可视化（Kanban）、快速反馈（Scrum Standup）这些我其实刚毕业就实践过了，是有用的。但是我不是领导，换了家公司，这些东西是做不了的，别人不会听我的，顶多技术上听我的，照我写的代码规范文档开发。\n\n我只能把每天做的事情写下来，让自己的大脑清除掉关于这些内容的 buffer，将任务分解，拆成足够小的任务，我开发倒是挺快的，但是这是别人没这么做，我之前建议过，效果不尽人意。","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449105,"discussion_content":"嗯，Keep It Simple, Stupid.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557539712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152503,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1574037610,"is_pvip":false,"replies":[{"id":72333,"content":"代码长度以清晰可理解为目标。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1584108059,"ip_address":"","comment_id":152503,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"1  人需要负债而行。一开始过度设计，尤其在能力不足，需求全貌不足时，问题严重。\n2  solid     尊重原则。道于术，虚与实。基于原则去思考问题，理解问题。\n3  作为常年评审同事代码的人，  代码长度，看了下自己的，一般也在15行一下，复杂的30左右。  \n  我觉得大量的只用一次，且分解足够，很便于测试的，30行是可以的。过度拆解10行以下，照样有弊端。属滥用行为。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525719,"discussion_content":"恭喜，你已经有了很好的基础","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629933257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81065,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/96a7d638.jpg","comment_is_top":false,"comment_ctime":1553790356,"is_pvip":true,"replies":[{"id":29488,"content":"对，是这个意思。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553906423,"ip_address":"","comment_id":81065,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"想起有人说过一句话，大意是如果语言支持，就不需要设计模式。换个角度理解，其实讲的就是设计模式背后的设计原则更重要更本质，是道，而设计模式只是设计原则在具体场景下的派生，是术。\n\n张三丰问张无忌：这套拳法你可记得住了？\n张无忌答：刚开始记得七七八八，现在已经忘得差不多了。\n张三丰听后满意地抚须而笑","like_count":29,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445067,"discussion_content":"对，是这个意思。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553906423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81387,"user_name":"hua168","can_delete":false,"product_type":"c1","uid":1065255,"ip_address":"","ucode":"CFF9A7E86EBA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/27/3ff1a1d6.jpg","comment_is_top":false,"comment_ctime":1553885946,"is_pvip":false,"replies":[{"id":29514,"content":"算法、数据结构是基本功，至少要懂得常用的数据结构怎么用，知道算法怎么分析。设计是进阶一点的东西，你不学的话，组织代码的能力就差一些。这些东西都要学，没人会强制你用，但不学，你就缺少了一个思考的维度，就很难上台阶。学习是自己的事，越基础的东西越要学好。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553927598,"ip_address":"","comment_id":81387,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"我呆过的中小公司的开发，基本上不用什么设计模式，SOLID五个选择挺简单的，但看设计模式感觉比较难，复杂化了……20多个设计模式一定要学吗？感觉上用到的少，是不是需要再学？\n\n另外想问下开发一定要学算法吗？都说算法是程序的灵魂，我看很多开发不不怎么懂算法😓…\n也是用到再学？","like_count":25,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445176,"discussion_content":"算法、数据结构是基本功，至少要懂得常用的数据结构怎么用，知道算法怎么分析。设计是进阶一点的东西，你不学的话，组织代码的能力就差一些。这些东西都要学，没人会强制你用，但不学，你就缺少了一个思考的维度，就很难上台阶。学习是自己的事，越基础的东西越要学好。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1553927598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2064776,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/81/88/ac059d9a.jpg","nickname":"少安倾听","note":"","ucode":"7D6388A816D4CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538911,"discussion_content":"不能等到要用才学，需要提前做好准备","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639555736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81642,"user_name":"行与修","can_delete":false,"product_type":"c1","uid":1241842,"ip_address":"","ucode":"11F21B663EF6D3","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/f2/2a9a6e9a.jpg","comment_is_top":false,"comment_ctime":1553994193,"is_pvip":false,"replies":[{"id":29595,"content":"很好的补充！","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1554011649,"ip_address":"","comment_id":81642,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"我们常说任务到手不要着急去做，要从设计入手，把时间多花在前面。工作中发现大家都是思考了才动手的，那为什么越往后偏差越大呢？共性原因有二：一是全局观不够，用咱们课里的话说就是上下文局限和反馈延迟（看到问题不提，直到代码写到那绕不过去了再沟通）；二是没有领域的概念和有意识地去实践（纸上谈兵），尤其是做流程型任务，都喜欢先把表结构定义出来，再去生成实体，所以从领域层面来看这些实体就很不合适了。结果必然是用面向对象的工具写出了面向过程的代码，既然是面向过程那OO设计原则就鲜有用武之地了。\n这两点也是我个人理解要做好软件设计的两个必要条件。","like_count":15,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445176,"discussion_content":"算法、数据结构是基本功，至少要懂得常用的数据结构怎么用，知道算法怎么分析。设计是进阶一点的东西，你不学的话，组织代码的能力就差一些。这些东西都要学，没人会强制你用，但不学，你就缺少了一个思考的维度，就很难上台阶。学习是自己的事，越基础的东西越要学好。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1553927598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2064776,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/81/88/ac059d9a.jpg","nickname":"少安倾听","note":"","ucode":"7D6388A816D4CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538911,"discussion_content":"不能等到要用才学，需要提前做好准备","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639555736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81069,"user_name":"捞鱼的搬砖奇","can_delete":false,"product_type":"c1","uid":1021539,"ip_address":"","ucode":"2FD194C4DA26E5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/63/7eb32c9b.jpg","comment_is_top":false,"comment_ctime":1553792811,"is_pvip":false,"replies":[{"id":29516,"content":"嗯，你理解得很到位。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553927776,"ip_address":"","comment_id":81069,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"这么些课跟下来，发现课程从多个角度来阐述。但是拆解这件事一直贯穿在其中。仔细一想都是相通的。小了才会更可控，小了才会更能发现问题。因为有了在动手写之前拆解发现了问题才能保证后面写起来更顺畅。","like_count":12,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445069,"discussion_content":"嗯，你理解得很到位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553927776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82285,"user_name":"desmond","can_delete":false,"product_type":"c1","uid":1106996,"ip_address":"","ucode":"C3473F9C66D117","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep58epOYWkVaxMIul9hvv0LWWKIYCWAib4ic4nnngvabQMRsP1ials3u4nOYkS8HbsyLvMh7hV0LIsqQ/132","comment_is_top":false,"comment_ctime":1554175371,"is_pvip":false,"replies":[{"id":29855,"content":"这个比喻，赞！","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1554214534,"ip_address":"","comment_id":82285,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"有道无术，术尚可求也；有术无道，至于术\n关于设计模式，《重构》《设计模式》《重构与模式》这三本书结合看，我自己理解的更深刻了，并且能够很自然的应用。\n关于函数长短，我觉得，像人的体温，函数太长，肯定就是发烧了，特别长，会把人烧坏的。\n\n","like_count":11,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445537,"discussion_content":"这个比喻，赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554214534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81101,"user_name":"宝宝太喜欢极客时间了","can_delete":false,"product_type":"c1","uid":1215152,"ip_address":"","ucode":"9CDB679C257612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOGZ6lbHiboIZMN9USbeutnmCWBahVLtSlKlIENKvrZQCUQzpzeZQOxTntIkBUeDk6qZUPdqmfKrQ/132","comment_is_top":false,"comment_ctime":1553817831,"is_pvip":false,"replies":[{"id":29499,"content":"这三个类应该自己写自己的，就不应该有共用的代码，甚至不在一个工程里，它们属于不同的限界上下文，后面讲 DDD 会再次提到。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553917879,"ip_address":"","comment_id":81101,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"老师，案例中将三个方法放在三个类中职责是单一了，但是如果计算正常的工作时间的方法一样的时候，这样不是又出现重复代码的问题了吗？","like_count":6,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445082,"discussion_content":"这三个类应该自己写自己的，就不应该有共用的代码，甚至不在一个工程里，它们属于不同的限界上下文，后面讲 DDD 会再次提到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553917879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223540,"user_name":"万里","can_delete":false,"product_type":"c1","uid":1076719,"ip_address":"","ucode":"8B1958BEB5FB2C","user_header":"https://static001.geekbang.org/account/avatar/00/10/6d/ef/08132ab2.jpg","comment_is_top":false,"comment_ctime":1591111173,"is_pvip":false,"replies":[{"id":82424,"content":"评论是这个专栏重要的组成部分。","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1591194175,"ip_address":"","comment_id":223540,"utype":1}],"discussion_count":2,"race_medal":3,"score":2,"product_id":100022301,"comment_content":"看这个专栏，总会不忘看评论，大家的发言都太精彩了","like_count":5,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497157,"discussion_content":"评论是这个专栏重要的组成部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591194175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2698871,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Qq9IlgLjo8CVKTc93AHsicwDMJq3sbN4UsubLJXUQxWLOhcoJtp8mgcsGmp6PE04Y1EcCnZ03MwNKKJFQIJPLHnMfU2MNBErXRpz8HLZIAHQ/132","nickname":"Geek_01c5f4","note":"","ucode":"18863CF544E100","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554572,"discussion_content":"看评论更能激发阅读的兴趣，每当看得不知所云的时候，就看评论；看评论就又燃起重新在文中阅读的热情","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1646471551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91994,"user_name":"赵春辉","can_delete":false,"product_type":"c1","uid":1122359,"ip_address":"","ucode":"81BC5BAFDB8781","user_header":"https://static001.geekbang.org/account/avatar/00/11/20/37/ffa8579c.jpg","comment_is_top":false,"comment_ctime":1557150425,"is_pvip":false,"replies":[{"id":33452,"content":"嗯，Keep It Simple, Stupid.","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1557539712,"ip_address":"","comment_id":91994,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"还有著名的KISS原则，自己写代码时，一直默念这个原则","like_count":5,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449105,"discussion_content":"嗯，Keep It Simple, Stupid.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557539712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309024,"user_name":"杨逸林","can_delete":false,"product_type":"c1","uid":1167233,"ip_address":"","ucode":"4BF3CF3E2F1AC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/cf/81/96f656ef.jpg","comment_is_top":false,"comment_ctime":1629897539,"is_pvip":false,"replies":[{"id":111862,"content":"恭喜，你已经有了很好的基础","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1629933257,"ip_address":"","comment_id":309024,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"我是在月初听到现在的，我发现老师讲的，我都做到了。而且对应的书籍我都看过了，即使老师没说，我也看过了，感觉就是把看过的书，又听了一遍，加强了印象。\n\n《高效能人士的七个习惯》（经常提到的已终为始）、《金字塔原理》、《Clean Code》、《Clean Architecture》、《敏捷软件开发：原则、实践与模式》、《TDD》、《DDD》应该还有本 DevOps 的书。测试金字塔在《微服务架构设计模式》也有提到过。\n\n什么可视化（Kanban）、快速反馈（Scrum Standup）这些我其实刚毕业就实践过了，是有用的。但是我不是领导，换了家公司，这些东西是做不了的，别人不会听我的，顶多技术上听我的，照我写的代码规范文档开发。\n\n我只能把每天做的事情写下来，让自己的大脑清除掉关于这些内容的 buffer，将任务分解，拆成足够小的任务，我开发倒是挺快的，但是这是别人没这么做，我之前建议过，效果不尽人意。","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525719,"discussion_content":"恭喜，你已经有了很好的基础","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629933257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152503,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1574037610,"is_pvip":false,"replies":[{"id":72333,"content":"代码长度以清晰可理解为目标。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1584108059,"ip_address":"","comment_id":152503,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100022301,"comment_content":"1  人需要负债而行。一开始过度设计，尤其在能力不足，需求全貌不足时，问题严重。\n2  solid     尊重原则。道于术，虚与实。基于原则去思考问题，理解问题。\n3  作为常年评审同事代码的人，  代码长度，看了下自己的，一般也在15行一下，复杂的30左右。  \n  我觉得大量的只用一次，且分解足够，很便于测试的，30行是可以的。过度拆解10行以下，照样有弊端。属滥用行为。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474839,"discussion_content":"代码长度以清晰可理解为目标。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584108059,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180398,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1582274346,"is_pvip":true,"replies":[{"id":71386,"content":"恭喜进化！","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1583378784,"ip_address":"","comment_id":180398,"utype":1}],"discussion_count":1,"race_medal":1,"score":3,"product_id":100022301,"comment_content":"说到设计，最近三个月体会特别深，三个月之前拿到一个很大的项目，我基于拿结果，就一直操心实现和开工的问题，跟我合作的同事看我这么急慌慌的，节奏也不一致。后来我们促膝长谈，我了解到了一个点：越是复杂的项目、越是要做长做好的项目，越要在前期舍得投精力去做设计，这样才不至于在后面导出救火。在经历了几年成长后，我的职场述求早已经从刚毕业时候的“活下来”变更了“活得好”，那么相对应的标准也要提高。\n\n最近一段时间，我已经收到了一些前提投入时间做设计的好处了，养成了重视设计的习惯，在做旧系统的集成的时候，我也花了几天时间设计、想清楚了才动的手。","like_count":2},{"had_liked":false,"id":81098,"user_name":"宝宝太喜欢极客时间了","can_delete":false,"product_type":"c1","uid":1215152,"ip_address":"","ucode":"9CDB679C257612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOGZ6lbHiboIZMN9USbeutnmCWBahVLtSlKlIENKvrZQCUQzpzeZQOxTntIkBUeDk6qZUPdqmfKrQ/132","comment_is_top":false,"comment_ctime":1553817642,"is_pvip":false,"replies":[{"id":29515,"content":"设计可以简单理解成组织代码的方式。类图往往只有实体，还有一部分内容是动作，往往通过服务体现出来。在Robert Martin看来，没有什么架构，都是设计。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553927759,"ip_address":"","comment_id":81098,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"我以前一直以为软件设计就是用UML画出类图，理清类之间的关系就是设计，现在感觉类图只是对业务的正确理解，设计要体现在代码中，体现在软件架构的整体风格中，不知道我的理解对不对？希望老师指正","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484646,"discussion_content":"恭喜进化！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583378784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297695,"user_name":"humor","can_delete":false,"product_type":"c1","uid":1181867,"ip_address":"","ucode":"9B48C4C7BEC92C","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/ab/caec7bca.jpg","comment_is_top":false,"comment_ctime":1623736291,"is_pvip":false,"replies":[{"id":109372,"content":"复杂与否不取决于知识本身，取决于你的理解，构建起结构，那就是一件事，没有结构，就是很多零散的事。一件事，肯定比很多件小事容易记住。","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1626187338,"ip_address":"","comment_id":297695,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"我在专栏“开篇词”里提到过，人的大脑容量有限，太复杂的东西理解不了。所以，我们唯一能做的就是把复杂的事情变简单。\n老师，这里说的太复杂的东西是指什么呢？比如很复杂的架构设计，很复杂的数学推理这些我们也理解不了吗？有些东西本身就很复杂，怎么才能把它们变简单呢？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445081,"discussion_content":"设计可以简单理解成组织代码的方式。类图往往只有实体，还有一部分内容是动作，往往通过服务体现出来。在Robert Martin看来，没有什么架构，都是设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553927759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270905,"user_name":"benxiong","can_delete":false,"product_type":"c1","uid":1624574,"ip_address":"","ucode":"F6498059D439D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/fe/874b172b.jpg","comment_is_top":false,"comment_ctime":1609314933,"is_pvip":false,"replies":[{"id":98275,"content":"我用的也是Java，你这个问题刚好是《代码之丑》回答的问题，欢迎加入。","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1609336569,"ip_address":"","comment_id":270905,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"郑老师，您说自己写代码的行数限制是10行，团队规范是20行。我平时写代码根本做不到限制在20行，更别说10行了，idea插件还经常提示超过了80行，不知道怎么重构，完全没有思路，很沮丧。我是JAVA，老师用的是什么编程语言？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521909,"discussion_content":"复杂与否不取决于知识本身，取决于你的理解，构建起结构，那就是一件事，没有结构，就是很多零散的事。一件事，肯定比很多件小事容易记住。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626187338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256012,"user_name":"谷岳","can_delete":false,"product_type":"c1","uid":1362023,"ip_address":"","ucode":"2A1B4191CD87B8","user_header":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","comment_is_top":false,"comment_ctime":1603506183,"is_pvip":true,"replies":[{"id":100115,"content":"恭喜你，有了向前的基础。","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1611719577,"ip_address":"","comment_id":256012,"utype":1}],"discussion_count":1,"race_medal":3,"score":3,"product_id":100022301,"comment_content":"庆幸的是，小而美，也一直是我的习惯😄","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507903,"discussion_content":"恭喜你，有了向前的基础。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611719577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104685,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1560818225,"is_pvip":false,"replies":[{"id":37937,"content":"这还是简单的场景，怎么做都好。但有一点，shell脚本也是源代码，需要按照同样的方式进行维护。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1560857992,"ip_address":"","comment_id":104685,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"老师，shell脚本的编写是否也可以遵守这个原则呢？我这两天有个案例，就是我在写一个shell 脚本，原本是传两个参数，但是发现有另一种特殊情况是两个参数中的一个是固定的，也就是可以不用传，其他功能都一样。像这样的情况您觉得是写两个单独的脚本比较好，还是在同一个脚本里再写一个switch判断呢？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454375,"discussion_content":"这还是简单的场景，怎么做都好。但有一点，shell脚本也是源代码，需要按照同样的方式进行维护。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560857992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81310,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1553856884,"is_pvip":false,"replies":[{"id":29498,"content":"你理解了！","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553917793,"ip_address":"","comment_id":81310,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"小而美 最近一直跟随老师的课程反思工作中的问题","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454375,"discussion_content":"这还是简单的场景，怎么做都好。但有一点，shell脚本也是源代码，需要按照同样的方式进行维护。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560857992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311985,"user_name":"！！","can_delete":false,"product_type":"c1","uid":2754555,"ip_address":"","ucode":"2D54179AA52469","user_header":"https://static001.geekbang.org/account/avatar/00/2a/07/fb/77ab318a.jpg","comment_is_top":false,"comment_ctime":1631584876,"is_pvip":false,"replies":[{"id":113087,"content":"不矛盾","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1631627227,"ip_address":"","comment_id":311985,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"单一职责和消除重复代码矛盾吗？","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445146,"discussion_content":"你理解了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553917793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81654,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1553999074,"is_pvip":false,"replies":[{"id":29596,"content":"现在可以去补上欠缺的部分了。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1554011693,"ip_address":"","comment_id":81654,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"怪不得之前我一直用不好设计模式呢，心中没有设计原则，会 术 不会 道。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526821,"discussion_content":"不矛盾","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631627227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343789,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1651054694,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":3,"score":3,"product_id":100022301,"comment_content":"设计模式是术，设计原则是道。robert martin:solid原则。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445285,"discussion_content":"现在可以去补上欠缺的部分了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554011693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180398,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1582274346,"is_pvip":true,"replies":[{"id":71386,"content":"恭喜进化！","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1583378784,"ip_address":"","comment_id":180398,"utype":1}],"discussion_count":1,"race_medal":1,"score":3,"product_id":100022301,"comment_content":"说到设计，最近三个月体会特别深，三个月之前拿到一个很大的项目，我基于拿结果，就一直操心实现和开工的问题，跟我合作的同事看我这么急慌慌的，节奏也不一致。后来我们促膝长谈，我了解到了一个点：越是复杂的项目、越是要做长做好的项目，越要在前期舍得投精力去做设计，这样才不至于在后面导出救火。在经历了几年成长后，我的职场述求早已经从刚毕业时候的“活下来”变更了“活得好”，那么相对应的标准也要提高。\n\n最近一段时间，我已经收到了一些前提投入时间做设计的好处了，养成了重视设计的习惯，在做旧系统的集成的时候，我也花了几天时间设计、想清楚了才动的手。","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484646,"discussion_content":"恭喜进化！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583378784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81098,"user_name":"宝宝太喜欢极客时间了","can_delete":false,"product_type":"c1","uid":1215152,"ip_address":"","ucode":"9CDB679C257612","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoOGZ6lbHiboIZMN9USbeutnmCWBahVLtSlKlIENKvrZQCUQzpzeZQOxTntIkBUeDk6qZUPdqmfKrQ/132","comment_is_top":false,"comment_ctime":1553817642,"is_pvip":false,"replies":[{"id":29515,"content":"设计可以简单理解成组织代码的方式。类图往往只有实体，还有一部分内容是动作，往往通过服务体现出来。在Robert Martin看来，没有什么架构，都是设计。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553927759,"ip_address":"","comment_id":81098,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"我以前一直以为软件设计就是用UML画出类图，理清类之间的关系就是设计，现在感觉类图只是对业务的正确理解，设计要体现在代码中，体现在软件架构的整体风格中，不知道我的理解对不对？希望老师指正","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445081,"discussion_content":"设计可以简单理解成组织代码的方式。类图往往只有实体，还有一部分内容是动作，往往通过服务体现出来。在Robert Martin看来，没有什么架构，都是设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553927759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297695,"user_name":"humor","can_delete":false,"product_type":"c1","uid":1181867,"ip_address":"","ucode":"9B48C4C7BEC92C","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/ab/caec7bca.jpg","comment_is_top":false,"comment_ctime":1623736291,"is_pvip":false,"replies":[{"id":109372,"content":"复杂与否不取决于知识本身，取决于你的理解，构建起结构，那就是一件事，没有结构，就是很多零散的事。一件事，肯定比很多件小事容易记住。","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1626187338,"ip_address":"","comment_id":297695,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"我在专栏“开篇词”里提到过，人的大脑容量有限，太复杂的东西理解不了。所以，我们唯一能做的就是把复杂的事情变简单。\n老师，这里说的太复杂的东西是指什么呢？比如很复杂的架构设计，很复杂的数学推理这些我们也理解不了吗？有些东西本身就很复杂，怎么才能把它们变简单呢？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521909,"discussion_content":"复杂与否不取决于知识本身，取决于你的理解，构建起结构，那就是一件事，没有结构，就是很多零散的事。一件事，肯定比很多件小事容易记住。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626187338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270905,"user_name":"benxiong","can_delete":false,"product_type":"c1","uid":1624574,"ip_address":"","ucode":"F6498059D439D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/fe/874b172b.jpg","comment_is_top":false,"comment_ctime":1609314933,"is_pvip":false,"replies":[{"id":98275,"content":"我用的也是Java，你这个问题刚好是《代码之丑》回答的问题，欢迎加入。","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1609336569,"ip_address":"","comment_id":270905,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"郑老师，您说自己写代码的行数限制是10行，团队规范是20行。我平时写代码根本做不到限制在20行，更别说10行了，idea插件还经常提示超过了80行，不知道怎么重构，完全没有思路，很沮丧。我是JAVA，老师用的是什么编程语言？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512787,"discussion_content":"我用的也是Java，你这个问题刚好是《代码之丑》回答的问题，欢迎加入。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609336569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256012,"user_name":"谷岳","can_delete":false,"product_type":"c1","uid":1362023,"ip_address":"","ucode":"2A1B4191CD87B8","user_header":"https://static001.geekbang.org/account/avatar/00/14/c8/67/5489998a.jpg","comment_is_top":false,"comment_ctime":1603506183,"is_pvip":true,"replies":[{"id":100115,"content":"恭喜你，有了向前的基础。","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1611719577,"ip_address":"","comment_id":256012,"utype":1}],"discussion_count":1,"race_medal":3,"score":3,"product_id":100022301,"comment_content":"庆幸的是，小而美，也一直是我的习惯😄","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512787,"discussion_content":"我用的也是Java，你这个问题刚好是《代码之丑》回答的问题，欢迎加入。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609336569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104685,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1560818225,"is_pvip":false,"replies":[{"id":37937,"content":"这还是简单的场景，怎么做都好。但有一点，shell脚本也是源代码，需要按照同样的方式进行维护。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1560857992,"ip_address":"","comment_id":104685,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"老师，shell脚本的编写是否也可以遵守这个原则呢？我这两天有个案例，就是我在写一个shell 脚本，原本是传两个参数，但是发现有另一种特殊情况是两个参数中的一个是固定的，也就是可以不用传，其他功能都一样。像这样的情况您觉得是写两个单独的脚本比较好，还是在同一个脚本里再写一个switch判断呢？","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":507903,"discussion_content":"恭喜你，有了向前的基础。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611719577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81310,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1553856884,"is_pvip":false,"replies":[{"id":29498,"content":"你理解了！","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1553917793,"ip_address":"","comment_id":81310,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"小而美 最近一直跟随老师的课程反思工作中的问题","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445146,"discussion_content":"你理解了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553917793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311985,"user_name":"！！","can_delete":false,"product_type":"c1","uid":2754555,"ip_address":"","ucode":"2D54179AA52469","user_header":"https://static001.geekbang.org/account/avatar/00/2a/07/fb/77ab318a.jpg","comment_is_top":false,"comment_ctime":1631584876,"is_pvip":false,"replies":[{"id":113087,"content":"不矛盾","user_name":"作者回复","user_name_real":"郑晔","uid":1258861,"ctime":1631627227,"ip_address":"","comment_id":311985,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"单一职责和消除重复代码矛盾吗？","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526821,"discussion_content":"不矛盾","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631627227,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81654,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1063734,"ip_address":"","ucode":"EA31201A7C5AE1","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/36/2d61e080.jpg","comment_is_top":false,"comment_ctime":1553999074,"is_pvip":false,"replies":[{"id":29596,"content":"现在可以去补上欠缺的部分了。","user_name":"作者回复","user_name_real":"dreamhead","uid":1258861,"ctime":1554011693,"ip_address":"","comment_id":81654,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100022301,"comment_content":"怪不得之前我一直用不好设计模式呢，心中没有设计原则，会 术 不会 道。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445285,"discussion_content":"现在可以去补上欠缺的部分了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554011693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343789,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1651054694,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":3,"score":3,"product_id":100022301,"comment_content":"设计模式是术，设计原则是道。robert martin:solid原则。","like_count":1},{"had_liked":false,"id":131337,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1567727735,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"用SOLID原则，给你的代码减熵。","like_count":1},{"had_liked":false,"id":393152,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"浙江","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1723006236,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":3,"score":4,"product_id":100022301,"comment_content":"学习打卡","like_count":0},{"had_liked":false,"id":380622,"user_name":"Sean","can_delete":false,"product_type":"c1","uid":1217641,"ip_address":"广东","ucode":"2178FD5B59B620","user_header":"https://static001.geekbang.org/account/avatar/00/12/94/69/4937e1e4.jpg","comment_is_top":false,"comment_ctime":1693901349,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"个人实践：函数写小的一个方法就是传入的参数不要超过 3 个。","like_count":0},{"had_liked":false,"id":372475,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"浙江","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1681190215,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"断断续续地学习这门课，学到的可能都忘了，但是分解这个关键词还是铭记在心","like_count":0},{"had_liked":false,"id":370755,"user_name":"一打七","can_delete":false,"product_type":"c1","uid":1241197,"ip_address":"北京","ucode":"D242C5EF70C176","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/6d/3e570bb8.jpg","comment_is_top":false,"comment_ctime":1679211213,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"老师有问题请教一下，单一职责要求不同的类分别写代码，但是重构又要求把类似的代码抽取成通用，看着两者似乎是冲突的？","like_count":0},{"had_liked":false,"id":369018,"user_name":"LYF","can_delete":false,"product_type":"c1","uid":2359415,"ip_address":"北京","ucode":"7FCB3123AC2B0D","user_header":"https://static001.geekbang.org/account/avatar/00/24/00/77/2a4cffb9.jpg","comment_is_top":false,"comment_ctime":1677027049,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"之前对为什么学设计模式以及应用都太模糊了，看了老师这篇文章，起码让我有了方向，如何去学习设计原则与设计模式的应用，感觉现在就是确实道的这些东西来指导实践。","like_count":0},{"had_liked":false,"id":357390,"user_name":"Nydia","can_delete":false,"product_type":"c1","uid":1591962,"ip_address":"广东","ucode":"52B08829B95FFE","user_header":"https://static001.geekbang.org/account/avatar/00/18/4a/9a/ac4ae803.jpg","comment_is_top":false,"comment_ctime":1663220897,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"都说方法要单一，但也说要能很好的复用。感觉很多时候都很难平衡。\n我有个开发中遇到的情况，比如一个查询接口，可能不同场景有些区别，但大体不差。是应该新写一个接口呢，还是在原接口逻辑里加某些判断","like_count":0},{"had_liked":false,"id":346789,"user_name":"蓝色海洋","can_delete":false,"product_type":"c1","uid":1947974,"ip_address":"","ucode":"C1BF85D9E5C881","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b9/46/604b3dcf.jpg","comment_is_top":false,"comment_ctime":1653439654,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"把任务做小，需要的是任务分解，而任务分解要做好，需要的是对业务的透彻理解和实现手段的掌握，实现手段包括设计原则和模式，具体的开发语言，工具和平台等，要从全局掌握，也要在具体的地方比较了解，做好开发，综合能力是需要很高的","like_count":0},{"had_liked":false,"id":345402,"user_name":"alexgreenbar","can_delete":false,"product_type":"c1","uid":1003655,"ip_address":"","ucode":"87ED7233E2767C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/87/dde718fa.jpg","comment_is_top":false,"comment_ctime":1652256798,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"一种对SRP常见的误解是：一个类只干一件事，因为是单一职责呗，但是反过来想想，如果一个类只干一件事，那大概率它只会有一个修改原因，反而符合SRP内在含义，只不过按这个思维开发出的类有些为了SRP而SRP罢了","like_count":0},{"had_liked":false,"id":131337,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1567727735,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"用SOLID原则，给你的代码减熵。","like_count":1},{"had_liked":false,"id":393152,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"浙江","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1723006236,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":3,"score":4,"product_id":100022301,"comment_content":"学习打卡","like_count":0},{"had_liked":false,"id":380622,"user_name":"Sean","can_delete":false,"product_type":"c1","uid":1217641,"ip_address":"广东","ucode":"2178FD5B59B620","user_header":"https://static001.geekbang.org/account/avatar/00/12/94/69/4937e1e4.jpg","comment_is_top":false,"comment_ctime":1693901349,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"个人实践：函数写小的一个方法就是传入的参数不要超过 3 个。","like_count":0},{"had_liked":false,"id":372475,"user_name":"程序员小跃","can_delete":false,"product_type":"c1","uid":1015483,"ip_address":"浙江","ucode":"25BB96E0791A60","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","comment_is_top":false,"comment_ctime":1681190215,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"断断续续地学习这门课，学到的可能都忘了，但是分解这个关键词还是铭记在心","like_count":0},{"had_liked":false,"id":370755,"user_name":"一打七","can_delete":false,"product_type":"c1","uid":1241197,"ip_address":"北京","ucode":"D242C5EF70C176","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/6d/3e570bb8.jpg","comment_is_top":false,"comment_ctime":1679211213,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"老师有问题请教一下，单一职责要求不同的类分别写代码，但是重构又要求把类似的代码抽取成通用，看着两者似乎是冲突的？","like_count":0},{"had_liked":false,"id":369018,"user_name":"LYF","can_delete":false,"product_type":"c1","uid":2359415,"ip_address":"北京","ucode":"7FCB3123AC2B0D","user_header":"https://static001.geekbang.org/account/avatar/00/24/00/77/2a4cffb9.jpg","comment_is_top":false,"comment_ctime":1677027049,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"之前对为什么学设计模式以及应用都太模糊了，看了老师这篇文章，起码让我有了方向，如何去学习设计原则与设计模式的应用，感觉现在就是确实道的这些东西来指导实践。","like_count":0},{"had_liked":false,"id":357390,"user_name":"Nydia","can_delete":false,"product_type":"c1","uid":1591962,"ip_address":"广东","ucode":"52B08829B95FFE","user_header":"https://static001.geekbang.org/account/avatar/00/18/4a/9a/ac4ae803.jpg","comment_is_top":false,"comment_ctime":1663220897,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"都说方法要单一，但也说要能很好的复用。感觉很多时候都很难平衡。\n我有个开发中遇到的情况，比如一个查询接口，可能不同场景有些区别，但大体不差。是应该新写一个接口呢，还是在原接口逻辑里加某些判断","like_count":0},{"had_liked":false,"id":346789,"user_name":"蓝色海洋","can_delete":false,"product_type":"c1","uid":1947974,"ip_address":"","ucode":"C1BF85D9E5C881","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b9/46/604b3dcf.jpg","comment_is_top":false,"comment_ctime":1653439654,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"把任务做小，需要的是任务分解，而任务分解要做好，需要的是对业务的透彻理解和实现手段的掌握，实现手段包括设计原则和模式，具体的开发语言，工具和平台等，要从全局掌握，也要在具体的地方比较了解，做好开发，综合能力是需要很高的","like_count":0},{"had_liked":false,"id":345402,"user_name":"alexgreenbar","can_delete":false,"product_type":"c1","uid":1003655,"ip_address":"","ucode":"87ED7233E2767C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/87/dde718fa.jpg","comment_is_top":false,"comment_ctime":1652256798,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100022301,"comment_content":"一种对SRP常见的误解是：一个类只干一件事，因为是单一职责呗，但是反过来想想，如果一个类只干一件事，那大概率它只会有一个修改原因，反而符合SRP内在含义，只不过按这个思维开发出的类有些为了SRP而SRP罢了","like_count":0}]}