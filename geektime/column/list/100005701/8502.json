{"id":8502,"title":"第31讲 | 数字货币钱包服务","content":"<p>上一篇，我们谈到了“区块链即服务”的概念。实际上，区块链第一个需要解决的服务就是数字货币支付服务。如何将数字货币钱包集成到系统中，我认为这是区块链行业最为迫切的问题。</p>\n<p>今天我们就来了解一下数字货币钱包，它面临了什么样的问题，这样的问题又需要什么技术才能解决，而数字货币平台想要定制自己的数字货币钱包服务，又应当如何集成。</p>\n<h2 id=\"-\">数字货币钱包的分类</h2>\n<p>目前市面上的数字货币钱包有很多种，看起来似乎有些眼花缭乱，不过，我们可以将它们进行分类后，再快速了解。</p>\n<p>下图展示了按照不同属性区分的区块链钱包。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/02/e6/0220a3863fa1c5e3cd8b87cba6a5c5e6.jpg?wh=926*504\" alt=\"\"></p>\n<p>左一是按照用户端平台划分的钱包，这种钱包实际是在服务端运行的，用户端的钱包实际上只是一个代理，所以用户不需要关心钱包的细节，使用起来十分方便，典型的例子是各种在线钱包。</p>\n<p>左二是按照货币类型分类的钱包，主要是指这款钱包到底是否支持多币种，这里的多币种可以是基于以太坊ERC20 Token的同一个区块链上的多币种，也可以是集成了比特币和以太坊等不同区块链的多币种。</p>\n<p>右二是按照私钥存储的方式来区分的钱包，实际上这里主要涉及了用户私钥是否被平台托管，如果不托管直接存储在用户端，也就是硬件、终端设备、纸质记录，这些都可以被称为On-chain的钱包；如果用户无法接触到私钥，私钥被托管在平台，那么这种钱包也被称为Off-chain的钱包。</p>\n<p>右一是按照访问方式进行分类的钱包，例如可以多个人共同管理，同时它也是需要多重签名支持的钱包，否则就变成了个人私有的钱包。</p>\n<p>以上的分类并不是绝对的，一个钱包可以兼具以上不同的属性，例如某个Mobile钱包是提供On-chain的，也提供多重签名、提供多币种的钱包，这种钱包通常就是业界比较流行的钱包类型。</p>\n<p>但是，对于平台方来说，上述钱包类型可能不足以支持自己平台的需求，并发挥出最佳的功效。毕竟作为平台来说，对高可用、分叉检测、区块确认的要求是远远高于普通钱包的，这样的问题又是如何解决的呢？这就引入了一项新的技术。</p>\n<h2 id=\"-block-scan\">扫描区块技术  Block scan</h2>\n<p>我们之前在深入区块链技术部分介绍过，构成区块链的四个核心技术是：P2P网络协议、分布式一致性算法、加密签名算法、账户与交易模型。这四个技术对应到数字货币钱包中就是，P2P网络、持久化存储、账户以及私钥管理、共识与交易验证四大模块。</p>\n<p>其中，持久化存储模块是由全节点钱包自带的嵌入式数据库提供的，这里有LevelDB、BerkerlyDB、SQLite3等多种选择。</p>\n<p>但是无论选择哪种嵌入式数据库，都面临了一个严峻问题，精细化的交易查询验证与性能不可兼具。换句话来说，任何全节点的嵌入式数据库都无法和服务器级别的数据库相媲美。</p>\n<p>对于平台开发来说，显然选择服务器级别的数据库是更为合适的选择。那么这里就涉及了一个问题，如何把全节点钱包中的数据转换成为数据库服务器中的数据，这就需要用到一种扫描区块技术，简称扫块。</p>\n<p>扫块，顾名思义，就是指扫描全节点钱包中的所有区块，然后将其解析后存储到数据库服务器的过程，这些数据库可以是MongoDB，也可以是MySQL，取决于你的业务需要。</p>\n<p>我们可以举元界区块链扫块的例子，元界上的区块结构与比特币接近，你可以将其类比成比特币区块链。</p>\n<!-- [[[read_end]]] -->\n<p>以下是Python代码，展示了基于MySQL的关系型表结构，目的是从元界的嵌入式数据库中扫描区块，然后存储到MySQL中。</p>\n<pre><code>     def init_table(conn):\ntables = []\ntb_block = &#39;&#39;&#39;\ncreate table if not EXISTS block (\n  number bigint primary KEY ,\n  hash char(64) not null,\n  bits bigint,\n  transaction_count INTEGER ,\n  mixhash  VARCHAR (128),\n  version char(8) ,\n  merkle_tree_hash char(64),\n  previous_block_hash CHAR (64),\n  nonce varchar(128) ,\n  time_stamp bigint\n) DEFAULT charset=utf8;\n&#39;&#39;&#39;\n\ntb_tx = &#39;&#39;&#39;\n  create table if not EXISTS tx (\n    id bigint PRIMARY KEY ,\n    block_height bigint REFERENCES block(id),\n    hash char(64) not null\n  )DEFAULT charset=utf8 ;&#39;&#39;&#39;\n\ntb_address = &#39;&#39;&#39;\n    create table if not EXISTS address(\n        id int PRIMARY KEY ,\n        address VARCHAR (64) UNIQUE\n    )DEFAULT charset=utf8;\n&#39;&#39;&#39;\n\ntb_output = &#39;&#39;&#39;\n    create table if not EXISTS tx_output(\n      id bigint PRIMARY key,\n      hash char(64) NOT NULL ,\n      tx_id bigint REFERENCES tx(id),\n      output_index bigint not null,\n      output_value bigint,\n      address_id bigint REFERENCES address(id),\n      script varchar(1024),\n      asset varchar(64),\n      decimal_number varchar(8)\n    )DEFAULT charset=ascii;\n&#39;&#39;&#39;\n\ntb_output_fork = &#39;&#39;&#39;\n        create table if not EXISTS tx_output_fork(\n          id bigint PRIMARY key,\n          hash char(64) NOT NULL ,\n          tx_id bigint,\n          output_index bigint not null,\n          output_value bigint,\n          address_id bigint,\n          script varchar(1024),\n          asset varchar(64),\n          decimal_number varchar(8)\n        )DEFAULT charset=ascii;\n    &#39;&#39;&#39;\ntb_tx_fork = &#39;&#39;&#39;\n      create table if not EXISTS tx_fork (\n        id bigint PRIMARY KEY ,\n        block_height bigint,\n        hash char(64) not null\n      )DEFAULT charset=ascii ;&#39;&#39;&#39;\n\ntb_input_fork = &#39;&#39;&#39;\n        create table if not EXISTS tx_input_fork(\n          id bigint PRIMARY key,\n          tx_id bigint,\n          belong_tx_id bigint,\n          tx_index bigint,\n          tx_value bigint not null,\n          script varchar(1024),\n          address_id bigint,\n          asset varchar(64),\n          decimal_number varchar(8)\n        )DEFAULT charset=ascii;\n    &#39;&#39;&#39;\n\ntb_block_fork = &#39;&#39;&#39;\n    create table if not EXISTS block_fork (\n      number bigint primary KEY ,\n      hash char(64) not null,\n      bits bigint,\n      transaction_count INTEGER ,\n      mixhash  VARCHAR (128),\n      version char(8) ,\n      merkle_tree_hash char(64),\n      previous_block_hash CHAR (64),\n      nonce varchar(128) ,\n      time_stamp bigint\n    ) DEFAULT charset=ascii;\n    &#39;&#39;&#39;\ntb_output_asset = &#39;&#39;&#39;\n    create table if not EXISTS tx_output_asset(\n      id bigint PRIMARY key,\n      hash char(64) NOT NULL ,\n      tx_id bigint REFERENCES tx(id),\n      output_index bigint not null,\n      output_value bigint,\n      address_id bigint REFERENCES address(id),\n      asset_name varchar(64),\n      issuer varchar(64),\n      asset_type varchar(8),\n      description varchar(64)\n    )DEFAULT charset=utf8;\n&#39;&#39;&#39;\n\ntb_input = &#39;&#39;&#39;\n    create table if not EXISTS tx_input(\n      id bigint PRIMARY key,\n      tx_id bigint REFERENCES tx(id),\n      belong_tx_id bigint REFERENCES tx(id),\n      tx_index bigint REFERENCES tx_output(output_index),\n      tx_value bigint not null,\n      script varchar(1024),\n      address_id bigint REFERENCES address(id),\n      asset varchar(64),\n      decimal_number varchar(8)\n    )DEFAULT charset=ascii;\n&#39;&#39;&#39;\n</code></pre><p>我们按照元界区块链的结构，可以把表分为四大类：</p>\n<p>第一类是区块block；\n第二类是交易Tx；\n第三类是交易输入输出：tb_input，tb_output；\n第四类是分叉处理。</p>\n<p>下面我贴一个普通的以JSON格式展示的区块和交易，你可以对比一下和上述表的关系：</p>\n<p>下面是一个区块，里面包含了一笔交易。</p>\n<pre><code>\n{\n &quot;header&quot; :\n {\n  &quot;result&quot; :\n  {\n   &quot;bits&quot; : &quot;7097242144892&quot;,\n   &quot;hash&quot; : &quot;cb36f2a1cbbf6a6300f4bf4915a5f54476ab603f2703a99e5d8d2db7ae2b37ed&quot;,\n   &quot;merkle_tree_hash&quot; : &quot;3457b988bc6b61a7ad803f0742a68064c622ec618b833d99d153b92cba264d53&quot;,\n   &quot;mixhash&quot; : &quot;47266114351983928450891657703600980449927404535067001902399906817438963939929&quot;,\n   &quot;nonce&quot; : &quot;1864926684099479906&quot;,\n   &quot;number&quot; : 1000000,\n   &quot;previous_block_hash&quot; : &quot;049257f31f4412bf115ed44a9305012ccea888cf842c2f0b66a528f258016e50&quot;,\n   &quot;time_stamp&quot; : 1520339120,\n   &quot;transaction_count&quot; : 1,\n   &quot;version&quot; : 1\n  }\n },\n &quot;txs&quot; :\n {\n  &quot;transactions&quot; :\n  [\n   {\n    &quot;hash&quot; : &quot;3457b988bc6b61a7ad803f0742a68064c622ec618b833d99d153b92cba264d53&quot;,\n    &quot;inputs&quot; :\n    [\n     {\n      &quot;previous_output&quot; :\n      {\n       &quot;hash&quot; : &quot;0000000000000000000000000000000000000000000000000000000000000000&quot;,\n       &quot;index&quot; : 4294967295\n      },\n      &quot;script&quot; : &quot;[ 0340420f ]&quot;,\n      &quot;sequence&quot; : 0\n     }\n    ],\n    &quot;lock_time&quot; : &quot;0&quot;,\n    &quot;outputs&quot; :\n    [\n     {\n      &quot;address&quot; : &quot;MUiW2CViWLQBg2TQDsRt1Pcj7KyrdqFPj7&quot;,\n      &quot;attachment&quot; :\n      {\n       &quot;type&quot; : &quot;etp&quot;\n      },\n      &quot;index&quot; : 0,\n      &quot;locked_height_range&quot; : 0,\n      &quot;script&quot; : &quot;dup hash160 [ e45695c2c390625376a7225a7ebea90dbb4147cf ] equalverify checksig&quot;,\n      &quot;value&quot; : 270750000\n     }\n    ],\n    &quot;version&quot; : &quot;1&quot;\n   }\n  ]\n }\n}\n</code></pre><p>我们可以发现区块头部分的数据被存储到tb_block表中，然后交易哈希被存储的tb_tx表中，接着交易的输入输出被存储到tb_input和tb_output中，这三者是通过区块高度、交易哈希被链接起来的。</p>\n<pre><code> tb_block &lt;--区块高度--&gt;  tb_tx &lt;--交易哈希--&gt; tb_input/tb_output\n</code></pre><p>完整的Python脚本可以通过这个链接查看：</p>\n<p><a href=\"https://github.com/mvs-org/mvsd-mysql-sync/blob/master/tools/sync.py\">https://github.com/mvs-org/mvsd-mysql-sync/blob/master/tools/sync.py</a></p>\n<p>整体的思路是使用getblock的JSON-RPC，从第0个高度的区块一直扫描到最新区块，并且存储到MySQL中。</p>\n<p>这里最难以处理的问题是保持MySQL中的区块数据与全节点数据的一致性，也就是当区块链分叉时，MySQL需要感知到发生了分叉，接着移除被分叉的区块，并且接着同步到正确的区块上。</p>\n<p>这个处理方法有不同的思路，上述脚本使用了移动区块数据的方法，也就是将孤儿块移动到tb_tx_fork下，接着同步正确的区块。实际上也可以通过标记法，即在tb_block中，将此块标记为孤儿块。</p>\n<p>关系型的表结构也可以做成标准化的，区块链本身作为基础设施，历史交易已经不可篡改，如果把这些结构化的区块做成公共基础设施，并提供基于API的开放调用，这便就是我们常见的区块浏览器了。</p>\n<p>上文我们介绍了扫描区块的思路和实践，实际上我们也可以使用Presto技术将钱包中的数据转换成类SQL查询，但这里服务的稳定性和性能需要经过测试才可以被平台使用。</p>\n<p>扫描区块技术解决了所有区块链资产可视化、高并发查询的问题，所以它在一些大规模的数字货币交易所中也有应用。区块浏览器就是基于这种技术产生的一种Web服务，下面我们就来看一看区块浏览器与扫描区块的具体关系。</p>\n<h2 id=\"-\">区块浏览器</h2>\n<p>我在前面介绍数字货币和交易所时有提到过区块浏览器，它提供了可视化的交易查询和验证服务。</p>\n<p>从技术上看，一个区块浏览器的主要工作就是把区块扫描到数据库服务器中，然后搭建一个Web访问服务，用户只需要输入交易哈希或者区块哈希，即可查询到交易是否已经被打包和确认。</p>\n<p>目前比特币和以太坊的流行区块浏览器比较多，不局限在某一个区块浏览器，因为大家看到的区块数据是一样的，区别就是如何更好地展示，做得更好的话，还可以集成一些咨询和资产托管的功能。</p>\n<p>从产品意义上来说，我认为区块浏览器更适合叫做资产浏览器，因为它为人们提供了资产证明的服务，而不必肉眼识别交易或者自行手动解析交易，一般来说，区块浏览器也提供基本的API查询服务。</p>\n<p>区块浏览器也为人们提供了区块和交易的统计数据，帮助人们直接地了解这个区块链的活跃程度，人们也可以根据统计数据制作区块活跃度等指数帮助投资者了解这个区块链项目。</p>\n<p>区块浏览器降低了普通人查询和验证交易的门槛，其实它也是整个区块链行业的配套基础设施，而对于平台来说，从第三方获取交易验证始终是一件不安全的事情，也面临着中心化的风险，那么平台如果想搭建自己的交易查询和验证服务，需要如何操作？</p>\n<p>这就需要把数字货币钱包服务，集成到自己的系统里。下面我们就来聊一聊具体是如何集成的。</p>\n<h2 id=\"-\">数字货币钱包服务</h2>\n<p>实际上，大规模的区块链应用都需要搭建一个数字货币钱包服务，数字货币钱包服务为系统中的其他模块提供了可扩展的、统一的、安全的交易查询和验证服务。</p>\n<p>下图是我从交易平台开发归纳出来的数字货币钱包服务。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/d4/4b/d478d2523f22e437d781a0d7b5b21e4b.png?wh=1182*572\" alt=\"\"></p>\n<p>数字货币钱包服务可以为交易平台其他模块提供接口统一的API，同时将不同的数据结构化到数据库服务中，最后可以通过传统高可用手段完成交易查询和验证。</p>\n<p>当然，这也和交易所的规模有关，如果是一个小型交易所，扫块可能不是必需的，但是统一接口的API却是必须的。</p>\n<p>我认为数字货币钱包服务应当有一套标准的钱包服务框架，支持主流数字货币，从而降低大家的使用和部署门槛，这也和我们上一篇聊到的“区块链即服务”的概念不谋而合。</p>\n<p>可以说区块链的配套设施和技术还很原始，还有很大的发展和提升的余地。</p>\n<h2 id=\"-\">总结</h2>\n<p>好了，今天我们先了解了一下数字货币钱包的分类，接着详细讲解扫块技术，然后又谈到了区块浏览器，最后分享了一下数字货币钱包服务的集成思路，希望可以让你对区块服务的实践有一个初步了解，你也可以根据已有的技术知识重新拆解和分析区块链技术。</p>\n<p>那么今天的问题是，数字货币钱包服务可以应用到微服务架构中吗？</p>\n<p></p>\n","comments":[{"had_liked":false,"id":11573,"user_name":"朱显杰","can_delete":false,"product_type":"c1","uid":1072683,"ip_address":"","ucode":"F7B8258B941D9D","user_header":"https://static001.geekbang.org/account/avatar/00/10/5e/2b/df3983e2.jpg","comment_is_top":false,"comment_ctime":1528208641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31592979713","product_id":100005701,"comment_content":"对区块链有写操作的应用，很难用微服务，因为是有状态的。而区块链的读服务或基于中心库查询的web服务，完全可以用微服务。","like_count":6},{"had_liked":false,"id":11489,"user_name":"陈靖","can_delete":false,"product_type":"c1","uid":1147418,"ip_address":"","ucode":"8C9596A54DB5C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/1a/64ec25ff.jpg","comment_is_top":false,"comment_ctime":1528162276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14413064164","product_id":100005701,"comment_content":"能不能直接撸代码，边撸边讲","like_count":3},{"had_liked":false,"id":11408,"user_name":"麋鹿在泛舟","can_delete":false,"product_type":"c1","uid":1121975,"ip_address":"","ucode":"1379CADA08688E","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/b7/b20ab184.jpg","comment_is_top":false,"comment_ctime":1528119918,"is_pvip":true,"replies":[{"id":"3880","content":"取决于业务敏感性吧。一般是做分叉检测和控制入库高度，不过应该不是最优解决方案","user_name":"作者回复","comment_id":11408,"uid":"1075874","ip_address":"","utype":1,"ctime":1528387450,"user_name_real":"betachen"}],"discussion_count":1,"race_medal":0,"score":"10118054510","product_id":100005701,"comment_content":"这里最难以处理的问题是保持 MySQL 中的区块数据与全节点数据的一致性<br>---<br>这个是定期扫描么  还是时时刻刻有变更就扫","like_count":2,"discussions":[{"author":{"id":1075874,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Tm6wv99GcGd6n5qLQHNRzdL7w3yBEWPKQkQy5otblQTrh0P6OV1nlMd1FKm5YSCBCXVKtT2GdFaJZxRw7VvvUQ/132","nickname":"陈浩","note":"","ucode":"F906AED9E2AC2F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418829,"discussion_content":"取决于业务敏感性吧。一般是做分叉检测和控制入库高度，不过应该不是最优解决方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528387450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":13742,"user_name":"绝露","can_delete":false,"product_type":"c1","uid":1136244,"ip_address":"","ucode":"5DD2F131B5903B","user_header":"https://static001.geekbang.org/account/avatar/00/11/56/74/7ef8b5a0.jpg","comment_is_top":false,"comment_ctime":1529973857,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5824941153","product_id":100005701,"comment_content":"区块浏览器的查询功能好理解，但是验证是指什么，能解释下吗？","like_count":1,"discussions":[{"author":{"id":1095740,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","nickname":"Panda","note":"","ucode":"911A200C7B18BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375753,"discussion_content":"验证 hash 块  是不是正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621841212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":11435,"user_name":"沃野阡陌","can_delete":false,"product_type":"c1","uid":1078723,"ip_address":"","ucode":"F506FED18BB5B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/75/c3/deae021f.jpg","comment_is_top":false,"comment_ctime":1528152751,"is_pvip":false,"replies":[{"id":"3878","content":"是的，完全正确。","user_name":"作者回复","comment_id":11435,"uid":"1075874","ip_address":"","utype":1,"ctime":1528387300,"user_name_real":"betachen"}],"discussion_count":1,"race_medal":0,"score":"5823120047","product_id":100005701,"comment_content":"请问老师，从交易所提币出来到钱包自己保存，是不是就是您说的可以用区块链browser来看或验证是否已被打包成区块的过程？","like_count":1,"discussions":[{"author":{"id":1075874,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Tm6wv99GcGd6n5qLQHNRzdL7w3yBEWPKQkQy5otblQTrh0P6OV1nlMd1FKm5YSCBCXVKtT2GdFaJZxRw7VvvUQ/132","nickname":"陈浩","note":"","ucode":"F906AED9E2AC2F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":418841,"discussion_content":"是的，完全正确。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1528387300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260909,"user_name":"MarkTang","can_delete":false,"product_type":"c1","uid":1165689,"ip_address":"","ucode":"58F3439A070B7E","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/79/68a73484.jpg","comment_is_top":false,"comment_ctime":1605150582,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1605150582","product_id":100005701,"comment_content":"您好老师，我对BIP44有几个个疑问<br>1. 就是我看很多文章 介绍说 address_index 官方建议，每个 account 下的 address_index 不要超过 20？这点我不是很明白，望老师解答。 如这篇：https:&#47;&#47;learnblockchain.cn&#47;2018&#47;09&#47;28&#47;hdwallet。但有的文字又说这个20是gap，这个20gap是指我遍历一个account下的address_index 20次如果都没有交易记录则不再进行后续地址和账户的遍历的意思吗？<br><br>2. 用户使用助记词导入钱包的时候，为了获得他的总余额数量，我是需要遍历他的所有收款地址账户和找零地址账户，再把所有金额加在一起得到总余额吗？这样如果地址数量很大的话，是不是加载就会很慢?<br><br>3. 交易的时候，如果用户A需要转给用户B 5个BTC，但是用户A没有一个地址上有5个BTC，都是分散开放的，那么这个时候是需要把他多个子地址的余额凑足5个之后分别都转到用户B的那一个地址吗？如果是的话这样是否每笔交易都会收取矿工费呢？<br><br>4. HDWallet 新创建钱包时，是否需要先创建 比如20个收款地址 20个找零地址呢？ 他不够时又再新建20个， 这样设计是否合理？","like_count":0},{"had_liked":false,"id":175529,"user_name":"杨家荣","can_delete":false,"product_type":"c1","uid":1259241,"ip_address":"","ucode":"3DA65396C7F002","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/g1icQRbcv1QvJ5U8Cqk0ZqMH5PcMTXcZ8TpS5utE4SUzHcnJA3FYGelHykpzTfDh55ehE8JO9Zg9VGSJW7Wxibxw/132","comment_is_top":false,"comment_ctime":1580739350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580739350","product_id":100005701,"comment_content":"极客时间第二期<br>21天打卡行动 29&#47;21<br>&lt;&lt;深入浅出区块链31&gt;&gt;数字货币钱包服务<br>回答老师问题:<br>数字货币钱包服务可以应用到微服务架构中吗？<br>微服务治理,链路追踪,与这个功能相似;<br>今日所学:<br>1,数字货币钱包的分类;<br>2,扫描区块技术 Block scan;<br>3,构成区块链的四个核心技术是：P2P 网络协议、分布式一致性算法、加密签名算法、账户与交易模型。<br>4,扫描区块技术解决了所有区块链资产可视化、高并发查询的问题，所以它在一些大规模的数字货币交易所中也有应用。<br>5,区块浏览器:从技术上看，一个区块浏览器的主要工作就是把区块扫描到数据库服务器中，然后搭建一个 Web 访问服务，用户只需要输入交易哈希或者区块哈希，即可查询到交易是否已经被打包和确认。<br>6,数字货币钱包服务:实际上，大规模的区块链应用都需要搭建一个数字货币钱包服务，数字货币钱包服务为系统中的其他模块提供了可扩展的、统一的、安全的交易查询和验证服务。<br>","like_count":0},{"had_liked":false,"id":12997,"user_name":"Geek_f26a61","can_delete":false,"product_type":"c1","uid":1157640,"ip_address":"","ucode":"6C087EC7D2C8FE","user_header":"https://static001.geekbang.org/account/avatar/00/11/aa/08/f8d63206.jpg","comment_is_top":false,"comment_ctime":1529271322,"is_pvip":false,"replies":[{"id":"4390","content":"你好，同意的。但也未必是货币，也可以是其他有价凭证。","user_name":"作者回复","comment_id":12997,"uid":"1075874","ip_address":"","utype":1,"ctime":1529422460,"user_name_real":"betachen"}],"discussion_count":1,"race_medal":0,"score":"1529271322","product_id":100005701,"comment_content":"初次读关于区块链的文章，对于区块链要解决的问题一直困惑。数字货币在公链上发行如何匹配各国的货币发行，发行规模应于经济体总量相关。就象美元与黄金挂钩，支付宝钱包里的钱与实际货币挂钩。问题若不对或对区块链误解请见谅","like_count":0,"discussions":[{"author":{"id":1075874,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Tm6wv99GcGd6n5qLQHNRzdL7w3yBEWPKQkQy5otblQTrh0P6OV1nlMd1FKm5YSCBCXVKtT2GdFaJZxRw7VvvUQ/132","nickname":"陈浩","note":"","ucode":"F906AED9E2AC2F","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":419492,"discussion_content":"你好，同意的。但也未必是货币，也可以是其他有价凭证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1529422460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":12029,"user_name":"乔良qiaoliang","can_delete":false,"product_type":"c1","uid":1075315,"ip_address":"","ucode":"DDE301B3DF57A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/68/73/3cda533e.jpg","comment_is_top":false,"comment_ctime":1528523180,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1528523180","product_id":100005701,"comment_content":"有机会介绍一下infura.io就太好了","like_count":0}]}