{"id":104071,"title":"02 | 预习篇 · Dart语言概览","content":"<p>你好，我是陈航。</p><p>我们知道，Flutter开发框架采用的开发语言是Dart，所以要用好这个框架，我们必须要搞清楚Dart语言。</p><p>关于新技术的学习，一直以来我都非常认同一个观点：千万不要直接陷入细节里，你应该先鸟瞰其全貌，这样才能从高维度理解问题。所以，为了帮助你更高效地掌握Dart，以最快的速度具备开发一款Flutter应用的能力，今天这篇文章，我会先从Flutter开发的角度，和你介绍Dart语言出现的历史背景、特性以及未来。</p><p>然后，我会在本专栏的“Dart基础”模块，与你详细分享它的特性、基础语法、类型变量、函数等知识，并和你分享一个使用Dart的综合案例，帮你学懂、学会这门语言。</p><p>如果你已经对Dart有一个初步印象了，也可以跳过这篇预习文章，直接学习后面的内容。</p><h2>Dart是什么？</h2><p>2011年10月，在丹麦召开的GOTO大会上，Google发布了一种新的编程语言Dart。如同Kotlin和Swift的出现，分别是为了解决Java和Objective-C在编写应用程序的一些实际问题一样，Dart的诞生正是要解决JavaScript存在的、在语言本质上无法改进的缺陷。</p><p>那么，<strong>JavaScript到底有哪些问题和缺陷呢？</strong>JavaScript之父布兰登 · 艾克（Brendan Eich）曾在一次采访中说，JavaScript“几天就设计出来了”。</p><!-- [[[read_end]]] --><p>概括来说，他的设计思路是这样的：</p><ul>\n<li>借鉴C语言的基本语法；</li>\n<li>借鉴Java语言的数据类型和内存管理机制；</li>\n<li>借鉴Scheme语言，将函数提升到“第一等公民”（first class）的地位；</li>\n<li>借鉴Self语言，使用基于原型（prototype）的继承机制。</li>\n</ul><p>所以，<strong>JavaScript实际上是两类编程语言风格的混合产物：（简化的）函数式编程风格，与（简化的）面向对象编程风格。</strong></p><p>由于设计时间太短，一些细节考虑得不够严谨，导致后来很长一段时间，使用JavaScript开发的程序混乱不堪。出于对JavaScript的不满，Google的程序员们决定自己写一个新语言来换掉它，所以Dart的最初定位也是一种运行在浏览器中的脚本语言。</p><p>而为了推广Dart，Google甚至将自己的Chrome浏览器内置了Dart VM，可以直接高效地运行Dart代码。而对于普通浏览器来说，Google也提供了一套能够将Dart代码编译成JavaScript代码的转换工具。这样一来，开发者们就可以毫无顾虑地使用Dart去开发了，而不必担心兼容问题。再加上出身名门，Dart在一开始就赢得了部分前端开发者的关注。</p><p>但，JavaScript的生命力似乎比预想的更强大。</p><p>原本JavaScript只能在浏览器中运行，但Node.js的出现让它开始有能力运行在服务端，很快手机应用与桌面应用也成为了JavaScript的宿主容器，一些明星项目比如React、React Native、Vue、Electron、NW（node-webkit）等框架如雨后春笋般崛起，迅速扩展了它的边界。</p><p>于是，JavaScript成为了前后端通吃的全栈语言，前端的开发模式也因此而改变，进入了一个新的世界。就如同Atwood定律描述的：凡是能用JavaScript写出来的系统，最终都会用JavaScript写出来（Any application that can be written in JavaScript, will eventually be written in JavaScript.）。</p><p>JavaScript因为Node.js焕发了第二春，而Dart就没有那么好的运气了。由于缺少顶级项目的使用，Dart始终不温不火。2015年，在听取了大量开发者的反馈后，Google决定将内置的Dart VM引擎从Chrome移除，这对Dart的发展来说是重大挫折，替代JavaScript就更无从谈起了。</p><p>但，Dart也借此机会开始转型：在Google内部孵化了移动开发框架Flutter，弯道超车进入了移动开发的领域；而在Google未来的操作系统Fuchsia中，Dart更是被指定为官方的开发语言。</p><p>与此同时，Dart的老本行，浏览器前端的发展也并未停滞。著名的前端框架Angular，除了常见的TS版本外，也在持续迭代对应的Dart版本<a href=\"https://github.com/dart-lang/angular\">AngularDart</a>。（不过不得不说的是，这个项目的star一直以来只有可怜的1,100出头）。</p><p>也正是因为使用者不多、历史包袱少，所以在经历了这么多的故事后，Dart可以彻底转变思路，成为专注大前端与跨平台生态的语言。</p><p>接下来，我们就从Flutter开发的视角，聊聊Dart最重要的核心特性吧。</p><h2>Dart的特性</h2><p>每门语言都有各自的特点，适合自己的才是最好的。</p><p>作为移动端开发的后来者，Dart语言可以说是集百家之长，拥有其他优秀编程语言的诸多特性和影子，所以对于其他语言的开发者而言，学习成本无疑是非常低的。同时，Dart拥有的特点则恰到好处，在对Flutter的支持上做到了独一无二。所以，Dart成了Flutter的选择。</p><p>下面，我就和你详细分享下它的核心特性。</p><h3>JIT与AOT</h3><p>借助于先进的工具链和编译器，Dart是少数同时支持JIT（Just In Time，即时编译）和AOT（Ahead of Time，运行前编译）的语言之一。那，到底什么是JIT和AOT呢？</p><p>语言在运行之前通常都需要编译，JIT和AOT则是最常见的两种编译模式。</p><ul>\n<li>JIT在运行时即时编译，在开发周期中使用，可以动态下发和执行代码，开发测试效率高，但运行速度和执行性能则会因为运行时即时编译受到影响。</li>\n<li>AOT即提前编译，可以生成被直接执行的二进制代码，运行速度快、执行性能表现好，但每次执行前都需要提前编译，开发测试效率低。</li>\n</ul><p>总结来讲，在开发期使用JIT编译，可以缩短产品的开发周期。Flutter最受欢迎的功能之一热重载，正是基于此特性。而在发布期使用AOT，就不需要像React Native那样在跨平台JavaScript代码和原生Android、iOS代码之间建立低效的方法调用映射关系。所以说，Dart具有运行速度快、执行性能好的特点。</p><p>那么，<strong>如何区分一门语言究竟是AOT还是JIT呢？</strong>通常来说，看代码在执行前是否需要编译即可。如果需要编译，通常属于AOT；如果不需要，则属于JIT。</p><p>AOT的典型代表是C/C++，它们必须在执行前编译成机器码；而JIT的代表，则包括了如JavaScript、Python等几乎所有的脚本语言。</p><h3>内存分配与垃圾回收</h3><p>Dart VM的内存分配策略比较简单，创建对象时只需要在堆上移动指针，内存增长始终是线性的，省去了查找可用内存的过程。</p><p>在Dart中，并发是通过Isolate实现的。Isolate是类似于线程但不共享内存，独立运行的worker。这样的机制，就可以让Dart实现无锁的快速分配。</p><p>Dart的垃圾回收，则是采用了多生代算法。新生代在回收内存时采用“半空间”机制，触发垃圾回收时，Dart会将当前半空间中的“活跃”对象拷贝到备用空间，然后整体释放当前空间的所有内存。回收过程中，Dart只需要操作少量的“活跃”对象，没有引用的大量“死亡”对象则被忽略，这样的回收机制很适合Flutter框架中大量Widget销毁重建的场景。</p><h3>单线程模型</h3><p>支持并发执行线程的高级语言（比如，C++、Java、Objective-C），大都以抢占式的方式切换线程，即：每个线程都会被分配一个固定的时间片来执行，超过了时间片后线程上下文将被抢占后切换。如果这时正在更新线程间的共享资源，抢占后就可能导致数据不同步的问题。</p><p>解决这一问题的典型方法是，使用锁来保护共享资源，但锁本身又可能会带来性能损耗，甚至出现死锁等更严重的问题。</p><p>这时，Dart是单线程模型的优势就体现出来了，因为它天然不存在资源竞争和状态同步的问题。这就意味着，一旦某个函数开始执行，就将执行到这个函数结束，而不会被其他Dart代码打断。</p><p>所以，<strong>Dart中并没有线程，只有Isolate（隔离区）</strong>。Isolates之间不会共享内存，就像几个运行在不同进程中的worker，通过事件循环（Event Looper）在事件队列（Event Queue）上传递消息通信。</p><h3>无需单独的声明式布局语言</h3><p>在Flutter中，界面布局直接通过Dart编码来定义。</p><p>Dart声明式编程布局易于阅读和可视化，使得Flutter并不需要类似JSX或XML的声明式布局语言。所有的布局都使用同一种格式，也使得Flutter很容易提供高级工具使布局更简单。</p><p>开发过程也不需要可视化界面构建器，因为热重载可以让我们立即在手机上看到运行效果。</p><h2>Dart的未来</h2><p>那么，在这样的背景下诞生的Dart，今后发展会怎样呢?</p><p>Dart是一个优秀而年轻的现代语言，但一种编程语言并不是搞定了引擎和开发者接口就算完成了，而是必须在这个语言得以立足的库、框架、 应用程序等“生态”都成熟起来之后，其价值才会真正开始体现。而要走到这一步，通常需要花上数年的时间。</p><p>目前，基于Dart语言的第三方库还很少，并且质量一般，不过值得庆幸的是，因为Flutter和Fuchsia的推动，Dart SDK更新迭代的速度快了很多，开发者的热情也急剧增长，Dart生态增速很快。</p><p>毕竟，在Dart社区目前最顶级的产品就是Flutter和Fuchsia了，因此Dart开发者主要以Flutter开发者居多，当然了也有用Dart开发浏览器前端的开发者，但人数并不多。所以，<strong>我觉得Dart是否能够成功，目前来看主要取决于Flutter和Fuchsia能否成功</strong>。<strong>而，Flutter是构建Fuchsia的UI开发框架，因此这个问题也变成了Flutter能否成功。</strong></p><p>正如我在开篇词中提到的，Flutter正式版发布也就半年多的时间，在GitHub上Star就已经超过了68,000，仅落后React Native 10,000左右，可见热度之高。</p><p>现在，我们一起回到Flutter自身来看，它的出现提供了一套彻底的跨平台方案，也确实弥补了当今跨平台开发框架的短板，解决了业界痛点，极有可能成为跨平台开发领域的终极解决方案，前途光明，未来非常值得期待。</p><p>至此，我们已经可以清晰地看到，Google在遭受与Oracle的Java侵权案后，痛定思痛后下定决心要发展自己的语言生态的布局愿景：Dart凭借Flutter与Fuchsia的生态主攻前端和移动端，而服务端，则有借助于Docker的火热势头增长迅猛的Go语言。</p><p>所以说，Google的布局不仅全面，应用和影响也非常广泛，前后端均有杀手级产品用来构建语言生态。相信随着Google新系统Fuchsia的发布，Flutter和Dart会以更迅猛的速度释放它们的力量，而Google统一前后端开发技能栈的愿望也会在一定程度上得以实现。</p><h2>总结</h2><p>今天，我带你了解了Dart出现的历史背景，从Flutter开发者的视角详细介绍了Dart语言的各种特性，并分析了Dart的未来发展。</p><p>Dart是一门现代语言，集合了各种优秀语言的优点。如果你不了解Dart也无需担心，只要你有过其他编程语言，尤其是Java、JavaScript、Swift或Objective-C编程经验的话，可以很容易地在Dart身上找它们的影子，以极低的成本快速上手。</p><p>希望通过这篇文章，你可以先对Dart语言有个初步了解，为我们接下来的学习打好基础。在本专栏的“Dart基础”模块中，我会对照着其他编程语言的特性，和你讲述Dart与它们相似的设计理念，帮助你快速建立起构建Flutter程序的所需要的Dart知识体系。</p><h2>思考题</h2><p>对于学习Dart或是其他编程语言，你有什么困扰或者心得吗？</p><p>欢迎你在评论区给我留言分享你的经历和观点，我会在下一篇文章中等你！感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><p></p>","comments":[{"had_liked":false,"id":109216,"user_name":"reven404","can_delete":false,"product_type":"c1","uid":1022868,"ip_address":"","ucode":"F84AAF2DC1D18F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/94/4977913a.jpg","comment_is_top":false,"comment_ctime":1561982843,"is_pvip":true,"replies":[{"id":"39569","content":"首先明确，我们学习一门编程语言并不是为了成为语言专家，而是为了解决实际问题。我认为通过1-2天的学习，在了解一门语言是如何表达信息和处理信息之后，语言的基本套路就搞懂了，然后可以根据实际问题上手去实践，找相应成熟的框架和库，边做边学，加深理解。<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562003838,"ip_address":"","comment_id":109216,"utype":1}],"discussion_count":1,"race_medal":0,"score":"190540543867","product_id":100031001,"comment_content":"入门简单，精通难. 如何掌握一门语言的精髓呢？","like_count":44,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456302,"discussion_content":"首先明确，我们学习一门编程语言并不是为了成为语言专家，而是为了解决实际问题。我认为通过1-2天的学习，在了解一门语言是如何表达信息和处理信息之后，语言的基本套路就搞懂了，然后可以根据实际问题上手去实践，找相应成熟的框架和库，边做边学，加深理解。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562003838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110653,"user_name":"朱雯","can_delete":false,"product_type":"c1","uid":1035744,"ip_address":"","ucode":"064C45FBF6B51F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","comment_is_top":false,"comment_ctime":1562310947,"is_pvip":true,"replies":[{"id":"40280","content":"我们需要建立起这么一个概念，单线程也是可以异步执行的：<br>1.App绝大多数时间都在等待（等待用户交互、等待网络请求返回、等待I&#47;O结果）<br>2.等待行为并不是阻塞的，以I&#47;O和网络访问为例，操作系统均提供了非阻塞型API，事件回调告知状态<br><br>如果对这一块内容不清楚的话，可以看下之前我在GMTC 2019上的分享：《Event Loop、Future与Isolate - 单线程模型下的Dart异步编程模式》<br>后续分享我也会专门介绍Dart的异步和并发。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562348438,"ip_address":"","comment_id":110653,"utype":1}],"discussion_count":3,"race_medal":0,"score":"57396885795","product_id":100031001,"comment_content":"这一篇其实我没怎么读懂，说说我的问题吧。<br>关于单线程问题:一般来说，多线程用于解决并发问题，Isolate这种不共享内存却类似与线程的东西我怎么看都像进程，多线程对比多线程的优势在于它可以节约资源，那么isolate是否是没有多线程优点呢，如果是为什么要放弃多线程的优点，只是线程安全问题吗。2:一个函数必然执行完成的设计，假如在这个语言种加入了io操作，后面的程序要跑，岂不是要等非常长的时间，这不是又要回到多线程上吗","like_count":13,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456987,"discussion_content":"我们需要建立起这么一个概念，单线程也是可以异步执行的：\n1.App绝大多数时间都在等待（等待用户交互、等待网络请求返回、等待I/O结果）\n2.等待行为并不是阻塞的，以I/O和网络访问为例，操作系统均提供了非阻塞型API，事件回调告知状态\n\n如果对这一块内容不清楚的话，可以看下之前我在GMTC 2019上的分享：《Event Loop、Future与Isolate - 单线程模型下的Dart异步编程模式》\n后续分享我也会专门介绍Dart的异步和并发。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562348438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2190041,"avatar":"","nickname":"Geek_96f0c3","note":"","ucode":"BC712514B7016B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344579,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611503591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","nickname":"三件事","note":"","ucode":"BCC867C8961A24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":189217,"discussion_content":"好问题！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582859313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109847,"user_name":"不拘小节","can_delete":false,"product_type":"c1","uid":1199826,"ip_address":"","ucode":"97E987EB199A80","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIAQdjCbZN4X6cJuicGia0zGMWN22TjagIZLBNgZII09wMyVPSX0fmsicelI9nGhds1vECGkynYOnJag/132","comment_is_top":false,"comment_ctime":1562120280,"is_pvip":false,"replies":[{"id":"39879","content":"试试IntrinsicHeight，这个组件会根据实际情况把子widget的高度调整它本身实际的高度。<br>IntrinsicHeight(<br>          child: Row(children: [<br>            Container(width: 100,color: Colors.yellow),<br>            Expanded(flex:1,child: Container(height:300, color: Colors.amber)),<br>          ]),<br>        )<br> );","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562172207,"ip_address":"","comment_id":109847,"utype":1}],"discussion_count":2,"race_medal":0,"score":"57396695128","product_id":100031001,"comment_content":"大神请教一个问题，一个ListView，里面套了一个Row，Row有两个Container，第一个Container设置宽高，第二个设置高度，想第二个宽度自适应撑满ListView，有什么方案吗","like_count":13,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456602,"discussion_content":"试试IntrinsicHeight，这个组件会根据实际情况把子widget的高度调整它本身实际的高度。\nIntrinsicHeight(\n          child: Row(children: [\n            Container(width: 100,color: Colors.yellow),\n            Expanded(flex:1,child: Container(height:300, color: Colors.amber)),\n          ]),\n        )\n );","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562172207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2143900,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI45zO9GOMquhD0ia1wTBSwtJ1juPcpFTSrOGicGW3jf6JclaudauHicN8OpADArQKL8zPtDicEx4aicgA/132","nickname":"逆风一战九","note":"","ucode":"83127627F6F37C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336908,"discussion_content":"里面也用了expanded防止高度超出不够的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608727771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109410,"user_name":"创建昵称","can_delete":false,"product_type":"c1","uid":1595091,"ip_address":"","ucode":"AC06DDDA9C625D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIUfLv3p0jDT8iaRNEHSSDKq4VKOsFCjBGRRfNnqacWy7B3XhMiafUCBx8LRuZcIOBK04eHZggMNgqg/132","comment_is_top":false,"comment_ctime":1562030511,"is_pvip":false,"replies":[{"id":"39705","content":"通常是dp","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562082908,"ip_address":"","comment_id":109410,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35921768879","product_id":100031001,"comment_content":"flutter现在计量单位是什么dp还是px，屏幕适配怎么解决!  ","like_count":8,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456397,"discussion_content":"通常是dp","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562082908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595468,"avatar":"","nickname":"Geek_a9f943","note":"","ucode":"2F231425A03298","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":767,"discussion_content":"目前比较好的框架是screen_utils","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562047285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1093115,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ad/fb/6d4d6919.jpg","nickname":"Mr. Maopy","note":"","ucode":"EE772E15A69BCF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1595468,"avatar":"","nickname":"Geek_a9f943","note":"","ucode":"2F231425A03298","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":817,"discussion_content":"screenUtils 其实不需要，基本都是教程才在用这个，修改 ViewConfiguration 就一劳永逸了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562077209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":767,"ip_address":""},"score":817,"extra":""}]}]},{"had_liked":false,"id":109508,"user_name":"Geek_a9f943","can_delete":false,"product_type":"c1","uid":1595468,"ip_address":"","ucode":"2F231425A03298","user_header":"","comment_is_top":false,"comment_ctime":1562047256,"is_pvip":false,"replies":[{"id":"39701","content":"首先明确，我们学习一门编程语言并不是为了成为语言专家，而是为了解决实际问题。语言的知识体系也有所谓的28原则，我认为通过1-2天的学习，在了解一门语言是如何表达信息和处理信息之后，语言的基本套路就搞懂了，然后可以根据实际问题上手去实践。Dart的精髓在于其简洁而强大的语法特性，在解决问题时顺便去读一些Flutter的源码，了解Dart是如何从语言特性上支持这些功能 边做边学，加深理解就可以了。<br><br>所以我不太建议在已经有其他编程语言基础的情况下再去系统的学习Dart，如果对Dart确实很感兴趣，可以参考官方的教程：https:&#47;&#47;dart.dev&#47;guides&#47;language<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562082781,"ip_address":"","comment_id":109508,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31626818328","product_id":100031001,"comment_content":"目前网上关于dart资料都还比较少，请问有关于dart学习的书籍推荐嘛？","like_count":7,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456443,"discussion_content":"首先明确，我们学习一门编程语言并不是为了成为语言专家，而是为了解决实际问题。语言的知识体系也有所谓的28原则，我认为通过1-2天的学习，在了解一门语言是如何表达信息和处理信息之后，语言的基本套路就搞懂了，然后可以根据实际问题上手去实践。Dart的精髓在于其简洁而强大的语法特性，在解决问题时顺便去读一些Flutter的源码，了解Dart是如何从语言特性上支持这些功能 边做边学，加深理解就可以了。\n\n所以我不太建议在已经有其他编程语言基础的情况下再去系统的学习Dart，如果对Dart确实很感兴趣，可以参考官方的教程：https://dart.dev/guides/language\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562082781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109582,"user_name":"YOUNG","can_delete":false,"product_type":"c1","uid":1328638,"ip_address":"","ucode":"654CBF6F79BF05","user_header":"https://static001.geekbang.org/account/avatar/00/14/45/fe/e095b298.jpg","comment_is_top":false,"comment_ctime":1562061352,"is_pvip":false,"replies":[{"id":"39697","content":"Flutter高性能的其中一个重要因素就是因为Dart在发布期是AOT，所以Google是不可能改成动态编译的，另外苹果也不允许除了JSCore之外的其他动态编译&#47;解释执行环境。<br>不过如果你的诉求是希望能够实现动态界面，目前业界已经有在上层封装DSL实现Flutter动态布局的实践了，可以看看GMTC大会上美团和微信的分享","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562082136,"ip_address":"","comment_id":109582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27331865128","product_id":100031001,"comment_content":"RN最大的优势就是热更新，Flutter会有支持的可能吗？","like_count":6,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456475,"discussion_content":"Flutter高性能的其中一个重要因素就是因为Dart在发布期是AOT，所以Google是不可能改成动态编译的，另外苹果也不允许除了JSCore之外的其他动态编译/解释执行环境。\n不过如果你的诉求是希望能够实现动态界面，目前业界已经有在上层封装DSL实现Flutter动态布局的实践了，可以看看GMTC大会上美团和微信的分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562082136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123146,"user_name":"sid","can_delete":false,"product_type":"c1","uid":1603815,"ip_address":"","ucode":"D29A055DBE5618","user_header":"","comment_is_top":false,"comment_ctime":1565615172,"is_pvip":false,"replies":[{"id":"45250","content":"1.GC会在应用的空闲时间进行内存压缩，从而较少内存碎片来优化内存。<br>2.任何时候只用一半，如果一半要满了，活动的对象将会被复制到另一半空间中，一半就会全部清空。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1565629213,"ip_address":"","comment_id":123146,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18745484356","product_id":100031001,"comment_content":"Dart VM 的内存分配策略比较简单，创建对象时只需要在堆...<br><br>极客时间版权所有: https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;104071<br><br>对这句话有所疑问，dart是如何处理堆碎片以及一次分配超大内存的问题呢？","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462557,"discussion_content":"1.GC会在应用的空闲时间进行内存压缩，从而较少内存碎片来优化内存。\n2.任何时候只用一半，如果一半要满了，活动的对象将会被复制到另一半空间中，一半就会全部清空。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565629213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2132275,"avatar":"https://static001.geekbang.org/account/avatar/00/20/89/33/6c66ed4a.jpg","nickname":"五十度灰黑","note":"","ucode":"A5AB673CA37856","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409544,"discussion_content":"看起来跟v8内存回收机制一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635466959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2190041,"avatar":"","nickname":"Geek_96f0c3","note":"","ucode":"BC712514B7016B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344578,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611503555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109587,"user_name":"LQ","can_delete":false,"product_type":"c1","uid":1022778,"ip_address":"","ucode":"612791EAD2B206","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/3a/4d7d94ca.jpg","comment_is_top":false,"comment_ctime":1562062435,"is_pvip":false,"replies":[{"id":"39727","content":"这种情况一般是布局约束写的有问题，建议多试试几种不同的分辨率，也关注下运行时异常","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562084743,"ip_address":"","comment_id":109587,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18741931619","product_id":100031001,"comment_content":"1. 控件布局，写法和可读性给我感觉还是不怎么习惯。<br>2. 没有可视化的布局工具，手写布局给人感觉还是比较痛苦。<br>3. 不同android设备的兼容性，这个也是困扰我的问题之一，在oppo,vivo上还好好的，在华为手机上就显示不出来。","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456478,"discussion_content":"这种情况一般是布局约束写的有问题，建议多试试几种不同的分辨率，也关注下运行时异常","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562084743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109516,"user_name":"呼呼","can_delete":false,"product_type":"c1","uid":1594623,"ip_address":"","ucode":"BFD64DD4D64ED1","user_header":"https://static001.geekbang.org/account/avatar/00/18/54/ff/7c878439.jpg","comment_is_top":false,"comment_ctime":1562049141,"is_pvip":false,"replies":[{"id":"39700","content":"有一些通用的改造方法，比如不要直接在根部直接套StatefulWidget，而是把可变部分最小化；引入key，或是重写canUpdate方法","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562082537,"ip_address":"","comment_id":109516,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18741918325","product_id":100031001,"comment_content":"在写flutter app的过程中，遇见一个问题，想请教一下。一级页面push到二级页面，或者二级页面pop回去的时候，一级页面都会重新build一次（一级页面和二级页面都是通过provide进行状态管理的），导致页面很卡顿。","like_count":4,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456447,"discussion_content":"有一些通用的改造方法，比如不要直接在根部直接套StatefulWidget，而是把可变部分最小化；引入key，或是重写canUpdate方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562082537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109504,"user_name":"公众号：业余草","can_delete":false,"product_type":"c1","uid":1499254,"ip_address":"","ucode":"2C9E201BC09960","user_header":"https://static001.geekbang.org/account/avatar/00/16/e0/76/77afa881.jpg","comment_is_top":false,"comment_ctime":1562046683,"is_pvip":false,"replies":[{"id":"39702","content":"加油","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562082822,"ip_address":"","comment_id":109504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14446948571","product_id":100031001,"comment_content":"Flutter 是不是代表着未来，这是一个后起之秀啊。看的我都想写一些入门教程了！","like_count":3,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456441,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562082822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109367,"user_name":"宋世通","can_delete":false,"product_type":"c1","uid":1245468,"ip_address":"","ucode":"C7AA3F0E6930F3","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/1c/d638d46e.jpg","comment_is_top":false,"comment_ctime":1562027240,"is_pvip":false,"replies":[{"id":"39707","content":"会介绍一些，但不会专门讲。状态管理那节会主要讲Provider","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562083136,"ip_address":"","comment_id":109367,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14446929128","product_id":100031001,"comment_content":"函数式编程可以多介绍一下吗，fish redux就是函数式设计，代码读起来很困难，毕竟不是Java的面向对象","like_count":3,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456381,"discussion_content":"会介绍一些，但不会专门讲。状态管理那节会主要讲Provider","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562083136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1083238,"avatar":"https://static001.geekbang.org/account/avatar/00/10/87/66/31629628.jpg","nickname":"MaO","note":"","ucode":"3D839733E87435","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42878,"discussion_content":"我觉得读起来应该比Java简单，函数式设计是数据和过程分离的，个人觉得面向对象就像一个个黑盒子，哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572795414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1245468,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/1c/d638d46e.jpg","nickname":"宋世通","note":"","ucode":"C7AA3F0E6930F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1083238,"avatar":"https://static001.geekbang.org/account/avatar/00/10/87/66/31629628.jpg","nickname":"MaO","note":"","ucode":"3D839733E87435","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141541,"discussion_content":"大佬厉害了，函数丢来丢去，我都不知道实际运行的函数是谁了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579430049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42878,"ip_address":""},"score":141541,"extra":""},{"author":{"id":1245468,"avatar":"https://static001.geekbang.org/account/avatar/00/13/01/1c/d638d46e.jpg","nickname":"宋世通","note":"","ucode":"C7AA3F0E6930F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1083238,"avatar":"https://static001.geekbang.org/account/avatar/00/10/87/66/31629628.jpg","nickname":"MaO","note":"","ucode":"3D839733E87435","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141548,"discussion_content":"我更喜欢把对象比喻为鸡蛋，封装好的对象，好吃又有营养","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579430167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":42878,"ip_address":""},"score":141548,"extra":""}]}]},{"had_liked":false,"id":109339,"user_name":"yuhao0x0628","can_delete":false,"product_type":"c1","uid":1332463,"ip_address":"","ucode":"BFD472974828A5","user_header":"https://static001.geekbang.org/account/avatar/00/14/54/ef/3cdfd916.jpg","comment_is_top":false,"comment_ctime":1562022831,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14446924719","product_id":100031001,"comment_content":"有了原生開發的經驗與概念，使用 flutter 真是有如神助，概念都是互通的。","like_count":3},{"had_liked":false,"id":235514,"user_name":"伊利丹怒风","can_delete":false,"product_type":"c1","uid":1042222,"ip_address":"","ucode":"D4C3DC84E7020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/2e/f317f6ad.jpg","comment_is_top":false,"comment_ctime":1595070031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10185004623","product_id":100031001,"comment_content":"我正好是Golang的开发者，现在再把Dart&#47;Flutter学了，感觉前后端通吃了。。。Google的两大语言确实也是画了很高级的饼啊","like_count":2},{"had_liked":false,"id":111833,"user_name":"Shine","can_delete":false,"product_type":"c1","uid":1022568,"ip_address":"","ucode":"C8C617B87C63C7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9a/68/92caeed6.jpg","comment_is_top":false,"comment_ctime":1562628939,"is_pvip":false,"replies":[{"id":"40787","content":"我们的App大多数场景下都是静默状态，单线程对大多数场景已经足够用了：<br>1.I&#47;O、网络请求操作系统提供了异步的API<br>2.CPU密集型的操作用Isolate即可<br><br>可以看下我之前在GMTC 2019的分享：Event Loop、Future与Isolate - 单线程模型下的Dart异步编程模式","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562695025,"ip_address":"","comment_id":111833,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10152563531","product_id":100031001,"comment_content":"dart没有多线程，通过不同的isolate共享消息队列，这类似于多进程模型。这样不利于利用手机的多核特性吧","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457463,"discussion_content":"我们的App大多数场景下都是静默状态，单线程对大多数场景已经足够用了：\n1.I/O、网络请求操作系统提供了异步的API\n2.CPU密集型的操作用Isolate即可\n\n可以看下我之前在GMTC 2019的分享：Event Loop、Future与Isolate - 单线程模型下的Dart异步编程模式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562695025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313651,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0b/73/4f1c9676.jpg","nickname":"舒大飞","note":"","ucode":"5CC2E0F8C40E38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18962,"discussion_content":"\n\n想请教下，看了dart的单线程执行异步任务，像future这种执行网络请求的话，直接把任务放进event queue同步执行，那么then的任务如何处理，等网络请求返回再放进event queue?整个过程是怎样的，谢谢\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569122372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110363,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1348186,"ip_address":"","ucode":"E2EF3F83B87087","user_header":"https://static001.geekbang.org/account/avatar/00/14/92/5a/5650aa7e.jpg","comment_is_top":false,"comment_ctime":1562242419,"is_pvip":false,"replies":[{"id":"40290","content":"Flutter确实不支持动态化，而且目前看从官方层面短期内也不会支持的。理由是发布期AOT是Flutter代码执行效率高的保障，不可能改回JIT；另外苹果也不允许除了JSCore之外还有别的VM可以动态执行逻辑。<br>这个事情有三个解法：<br>1.Flutter可以内嵌webview支持原有的H5<br>2.Flutter提高了迭代效率节省了研发资源，对于一些需要快速上线的功能，用Flutter开发完再发一个新版本就行了<br>3.业界已经有团队使用JSCore实现动态布局了，预计下半年会有一些较为成熟的方案出现","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562350464,"ip_address":"","comment_id":110363,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10152177011","product_id":100031001,"comment_content":"您好，对于H5+原生以及RN这种框架来说通过webview他们的优势是可以热更新，大量的H5页面都可以动态改变。然而像Flutter这种框架一套代码打包成Android和IOS，但是却失去了热更新这个大的优点。但是往往热更新是很多公司的诉求，我想知道大佬怎么看？","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456841,"discussion_content":"Flutter确实不支持动态化，而且目前看从官方层面短期内也不会支持的。理由是发布期AOT是Flutter代码执行效率高的保障，不可能改回JIT；另外苹果也不允许除了JSCore之外还有别的VM可以动态执行逻辑。\n这个事情有三个解法：\n1.Flutter可以内嵌webview支持原有的H5\n2.Flutter提高了迭代效率节省了研发资源，对于一些需要快速上线的功能，用Flutter开发完再发一个新版本就行了\n3.业界已经有团队使用JSCore实现动态布局了，预计下半年会有一些较为成熟的方案出现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562350464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109777,"user_name":"Aron","can_delete":false,"product_type":"c1","uid":1234693,"ip_address":"","ucode":"8022EF4B528915","user_header":"https://static001.geekbang.org/account/avatar/00/12/d7/05/b83ad167.jpg","comment_is_top":false,"comment_ctime":1562113594,"is_pvip":false,"replies":[{"id":"39866","content":"会的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562170047,"ip_address":"","comment_id":109777,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10152048186","product_id":100031001,"comment_content":"原生与flutter混合开发会介绍吗？毕竟大多数项目都是原生的。","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456564,"discussion_content":"会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562170047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109496,"user_name":"SHERRAN要好好学习","can_delete":false,"product_type":"c1","uid":1595127,"ip_address":"","ucode":"A5820D39CF4212","user_header":"https://static001.geekbang.org/account/avatar/00/18/56/f7/712f0f64.jpg","comment_is_top":false,"comment_ctime":1562044890,"is_pvip":false,"replies":[{"id":"39703","content":"懂的基本的前端概念（视图、组件、状态、生命周期、路由）就可以上手了","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562082865,"ip_address":"","comment_id":109496,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10151979482","product_id":100031001,"comment_content":"请问网页开发者入手学习flutter有阻碍吗？我是学生，表示context啥的都不太理解。😢","like_count":2,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456440,"discussion_content":"懂的基本的前端概念（视图、组件、状态、生命周期、路由）就可以上手了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562082865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323129,"user_name":"Geek_d221c6","can_delete":false,"product_type":"c1","uid":2849949,"ip_address":"","ucode":"5BE4007EC7A5F2","user_header":"","comment_is_top":false,"comment_ctime":1637738610,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5932705906","product_id":100031001,"comment_content":"我的语言学习史: 汉语 -&gt; 英语 -&gt; C++ -&gt; Java -&gt; JavaScript -&gt; Python -&gt; Dart","like_count":1},{"had_liked":false,"id":135289,"user_name":"舒大飞","can_delete":false,"product_type":"c1","uid":1313651,"ip_address":"","ucode":"5CC2E0F8C40E38","user_header":"https://static001.geekbang.org/account/avatar/00/14/0b/73/4f1c9676.jpg","comment_is_top":false,"comment_ctime":1569118731,"is_pvip":true,"replies":[{"id":"52565","content":"网络调用的执行是由操作系统提供的另外的底层线程做的，和Dart就没关系了。event queue里只会放一个网络调用的最终执行结果（成功或失败）及响应执行结果的处理回调。<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1569582894,"ip_address":"","comment_id":135289,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864086027","product_id":100031001,"comment_content":"想请教下，看了dart的单线程执行异步任务，像future这种执行网络请求的话，直接把任务放进event queue同步执行，那么then的任务如何处理，等网络请求返回再放进event queue?整个过程是怎样的，谢谢","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468127,"discussion_content":"网络调用的执行是由操作系统提供的另外的底层线程做的，和Dart就没关系了。event queue里只会放一个网络调用的最终执行结果（成功或失败）及响应执行结果的处理回调。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569582894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123875,"user_name":"这得从我捡到一个鼠标垫开始说起","can_delete":false,"product_type":"c1","uid":1272321,"ip_address":"","ucode":"2FF4347B4E7A9B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/01/d9cb531d.jpg","comment_is_top":false,"comment_ctime":1565775026,"is_pvip":true,"replies":[{"id":"47642","content":"Widget包括了视图、布局、交互、动画等概念，嵌套组装起来会比较方便，如果一开始使用不太适应，可以借助于IDE提供的Editor UI Guides插件辅助阅读&#47;编写。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1566891713,"ip_address":"","comment_id":123875,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5860742322","product_id":100031001,"comment_content":"为什么说dart写布局可读性好 ，一层层的嵌套，怎么看都感觉阅读困难呀","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462861,"discussion_content":"Widget包括了视图、布局、交互、动画等概念，嵌套组装起来会比较方便，如果一开始使用不太适应，可以借助于IDE提供的Editor UI Guides插件辅助阅读/编写。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566891713,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109908,"user_name":"少年阿堃","can_delete":false,"product_type":"c1","uid":1231808,"ip_address":"","ucode":"0D6CE23B56B40B","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/c0/789ad2a8.jpg","comment_is_top":false,"comment_ctime":1562130711,"is_pvip":false,"replies":[{"id":"39870","content":"加油","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562170151,"ip_address":"","comment_id":109908,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857098007","product_id":100031001,"comment_content":"作为一个后端，我居然订阅了这个课程。是不是有点飘了","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456634,"discussion_content":"加油","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562170151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1602560,"avatar":"https://static001.geekbang.org/account/avatar/00/18/74/00/b211dcf6.jpg","nickname":"🎵Best达浪","note":"","ucode":"C0BF45A3CED09A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1843,"discussion_content":"觉得有点飘  后端要学好都难","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562979045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109787,"user_name":"dragon","can_delete":false,"product_type":"c1","uid":1331304,"ip_address":"","ucode":"56D741DD4C3A7E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLhYtOkRNHGxwJzHOQtUpOlOtLGtfibNa0jHibMbwJssqLLicLVjKKWEOKyUsaS0DM00INBSBp7G589w/132","comment_is_top":false,"comment_ctime":1562114496,"is_pvip":false,"replies":[{"id":"39867","content":"有的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562170070,"ip_address":"","comment_id":109787,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857081792","product_id":100031001,"comment_content":"第三方库对于flutter的支持感觉很少，这会不会影响其发展。目前的解决方案是通过调用原生实现，在后面的课程中会有这方面的介绍吗？","like_count":1,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456571,"discussion_content":"有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562170070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1199826,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIAQdjCbZN4X6cJuicGia0zGMWN22TjagIZLBNgZII09wMyVPSX0fmsicelI9nGhds1vECGkynYOnJag/132","nickname":"不拘小节","note":"","ucode":"97E987EB199A80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":842,"discussion_content":"看一下flutter-go这个demo，包含大部分情况，https://github.com/alibaba/flutter-go","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562120005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109441,"user_name":"zr","can_delete":false,"product_type":"c1","uid":1227775,"ip_address":"","ucode":"618382C0D6A9BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/bb/ff/07018e32.jpg","comment_is_top":false,"comment_ctime":1562033019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5857000315","product_id":100031001,"comment_content":"快点更新哦","like_count":1},{"had_liked":false,"id":347005,"user_name":"Geek_de47a5","can_delete":false,"product_type":"c1","uid":2551755,"ip_address":"","ucode":"F103D3AE9BBB0F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/dyMfbxmVZ1Y52KLdibTicVOjznCaSTaW8jaKjZorHLztTvltNG1hZk8Xibicuuz4vCFyoDIEvpicZBMjQKxYzh4ibVHA/132","comment_is_top":false,"comment_ctime":1653614181,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653614181","product_id":100031001,"comment_content":"这篇文章听着没明白","like_count":0},{"had_liked":false,"id":311040,"user_name":"不负","can_delete":false,"product_type":"c1","uid":1238323,"ip_address":"","ucode":"147F5860711811","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/33/ff5c52ad.jpg","comment_is_top":false,"comment_ctime":1631028596,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1631028596","product_id":100031001,"comment_content":"【Day002】这篇对Dart有个大致的认知。<br>另外，JavaScript也是单线程的，近年在异步上也做了很多弥补，Dart单线程作为一个优势，是它的 Isolate 与JavaScript中的队列和事件循环比是设计上更有优势吗？","like_count":0},{"had_liked":false,"id":310875,"user_name":"、时光偷走当初คิดถึง","can_delete":false,"product_type":"c1","uid":1491391,"ip_address":"","ucode":"D56CA34419AE45","user_header":"https://static001.geekbang.org/account/avatar/00/16/c1/bf/494d0895.jpg","comment_is_top":false,"comment_ctime":1630942113,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1630942113","product_id":100031001,"comment_content":"我感觉最难的就是布局了，布局语法什么的没有Android那么方面，也有可能是因为我还没真正体会到flutter的乐趣吧","like_count":0},{"had_liked":false,"id":243656,"user_name":"hao-kuai","can_delete":false,"product_type":"c1","uid":1272354,"ip_address":"","ucode":"DFDFDDDBA4503C","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/22/527904b2.jpg","comment_is_top":false,"comment_ctime":1598241221,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1598241221","product_id":100031001,"comment_content":"1、不需要全面学习dart语言。学习周期太长，很多特性的应用场景不一定是刚需<br>2、既然是借鉴主流编程语言语法，那么编程语言的通用语法+其特有语法应该能达到看懂、能写的程度<br>3、借助脚手架工具快速搭建工程环境，使用Dart语言和flutter组件，快速实现简单页面效果","like_count":0},{"had_liked":false,"id":194235,"user_name":"朱东东","can_delete":false,"product_type":"c1","uid":1933736,"ip_address":"","ucode":"0F93DD1D171D5D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIfKppFoLxicjtHvianrPhAOSd1RQ7FLjpDNs8CGuasR2rjoqGhTD9f6kCia9HN4QSpWt8KQM2nhLm4g/132","comment_is_top":false,"comment_ctime":1585039918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585039918","product_id":100031001,"comment_content":"开始学习了","like_count":0},{"had_liked":false,"id":171862,"user_name":"Geek_JOJO","can_delete":false,"product_type":"c1","uid":1754326,"ip_address":"","ucode":"945C38ECF443B4","user_header":"https://static001.geekbang.org/account/avatar/00/1a/c4/d6/73656a64.jpg","comment_is_top":false,"comment_ctime":1579047753,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579047753","product_id":100031001,"comment_content":"Dart的函数式编程风格很简洁，但是刚上手有些不熟悉，有的细节不太理解我，希望老师能多讲讲Dart在开发过程中常用的语法和含义","like_count":0},{"had_liked":false,"id":150265,"user_name":"MingQ","can_delete":false,"product_type":"c1","uid":1175183,"ip_address":"","ucode":"09D042703F730A","user_header":"https://static001.geekbang.org/account/avatar/00/11/ee/8f/642c5cc9.jpg","comment_is_top":false,"comment_ctime":1573487311,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573487311","product_id":100031001,"comment_content":"我们公司之前也尝试过flutter，有幸参与，其实单纯上手开发的话，还是很快的。基本两三天就可以写代码了，但是掌握高阶语法特性还是需要花很多时间，而且得有项目落地。","like_count":0},{"had_liked":false,"id":121825,"user_name":"Element","can_delete":false,"product_type":"c1","uid":1155609,"ip_address":"","ucode":"31FE7C1CB7BBE6","user_header":"https://static001.geekbang.org/account/avatar/00/11/a2/19/3f71c4e8.jpg","comment_is_top":false,"comment_ctime":1565229244,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565229244","product_id":100031001,"comment_content":"很认同作者这种先统揽大局介绍语言的方法, 很多时候都是钻进某个api死学, 不会想到抬起头从高处看看更容易得要领.","like_count":0},{"had_liked":false,"id":118429,"user_name":"Raptor","can_delete":false,"product_type":"c1","uid":1596245,"ip_address":"","ucode":"0E4A9DB54D9017","user_header":"https://static001.geekbang.org/account/avatar/00/18/5b/55/195de503.jpg","comment_is_top":false,"comment_ctime":1564364545,"is_pvip":false,"replies":[{"id":"43504","content":"看看这个issue：https:&#47;&#47;github.com&#47;flutter&#47;flutter-intellij&#47;issues&#47;2307","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1564423011,"ip_address":"","comment_id":118429,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564364545","product_id":100031001,"comment_content":"Android studio 打开项目运行提示这个错误   Error: Entrypoint isn&#39;t within the current project","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460404,"discussion_content":"看看这个issue：https://github.com/flutter/flutter-intellij/issues/2307","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564423011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114961,"user_name":"Carlo","can_delete":false,"product_type":"c1","uid":1001557,"ip_address":"","ucode":"7C3FF23B597506","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/55/48de9a24.jpg","comment_is_top":false,"comment_ctime":1563439217,"is_pvip":false,"replies":[{"id":"42012","content":"后面会简单介绍下。不过Flutter for web 目前处于内测状态，很多东西都还用不了。加上现在也还很早期，并没有什么最佳实践，所以也不太好深入","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1563468900,"ip_address":"","comment_id":114961,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563439217","product_id":100031001,"comment_content":"&quot;Dart 版本AngularDart。&quot; 我们在生产环境在用AngularDart， 简直就是一个大垃圾。 能不能介绍下Flutter for web ？","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458902,"discussion_content":"后面会简单介绍下。不过Flutter for web 目前处于内测状态，很多东西都还用不了。加上现在也还很早期，并没有什么最佳实践，所以也不太好深入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563468900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112082,"user_name":"七分呗轻唱","can_delete":false,"product_type":"c1","uid":1460664,"ip_address":"","ucode":"9170C8C9DD3468","user_header":"https://static001.geekbang.org/account/avatar/00/16/49/b8/cfebebf8.jpg","comment_is_top":false,"comment_ctime":1562665420,"is_pvip":false,"replies":[{"id":"40793","content":"有的","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562695260,"ip_address":"","comment_id":112082,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562665420","product_id":100031001,"comment_content":"课程会不会讲到对现有iOS Android 项目接入flutter ？这个比较期待","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457567,"discussion_content":"有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562695260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110806,"user_name":"Trust me ҉҉҉҉҉҉҉❀","can_delete":false,"product_type":"c1","uid":1112913,"ip_address":"","ucode":"B576CBDE262A40","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/51/870a6fcb.jpg","comment_is_top":false,"comment_ctime":1562340334,"is_pvip":false,"replies":[{"id":"40273","content":"单例和Isolate是两回事啊","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562347255,"ip_address":"","comment_id":110806,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562340334","product_id":100031001,"comment_content":"iOSer爱写单例  然而在Flutter里面  isolate  嘿嘿","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457066,"discussion_content":"单例和Isolate是两回事啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562347255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110505,"user_name":"liyuan","can_delete":false,"product_type":"c1","uid":1596209,"ip_address":"","ucode":"82829DBE2244AA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqUP1oawANUYOmFic40JrcRC4AVp0qVvuoibUFYkKDJtJNP6qXKnibB0nQ9kQibqCiakHkGoYXZbLTcibUw/132","comment_is_top":false,"comment_ctime":1562288346,"is_pvip":false,"replies":[{"id":"40283","content":"Dart和Kotlin不冲突呀。前端语言的语法和特性都是类似的，大家都是越来越像","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562348813,"ip_address":"","comment_id":110505,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562288346","product_id":100031001,"comment_content":"要是能用kotlin写flutter就好了。习惯了kotlin，感觉dart很不好用。","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456914,"discussion_content":"Dart和Kotlin不冲突呀。前端语言的语法和特性都是类似的，大家都是越来越像","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562348813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110058,"user_name":"kaixiao7","can_delete":false,"product_type":"c1","uid":1242577,"ip_address":"","ucode":"505EC4AFB5E656","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/d1/cc6f82eb.jpg","comment_is_top":false,"comment_ctime":1562162594,"is_pvip":false,"replies":[{"id":"39878","content":"最新的IDE插件可以支持”Editor UI Guides“了，一定程度上解决了可读性问题。<br>","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562171566,"ip_address":"","comment_id":110058,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562162594","product_id":100031001,"comment_content":"flutter的嵌套写法让我觉得难受，看起来不爽😕","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456702,"discussion_content":"最新的IDE插件可以支持”Editor UI Guides“了，一定程度上解决了可读性问题。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562171566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109842,"user_name":"Raptor","can_delete":false,"product_type":"c1","uid":1596245,"ip_address":"","ucode":"0E4A9DB54D9017","user_header":"https://static001.geekbang.org/account/avatar/00/18/5b/55/195de503.jpg","comment_is_top":false,"comment_ctime":1562119197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562119197","product_id":100031001,"comment_content":"学习了","like_count":0},{"had_liked":false,"id":109829,"user_name":"anynew","can_delete":false,"product_type":"c1","uid":1235807,"ip_address":"","ucode":"F8308342828D4B","user_header":"https://static001.geekbang.org/account/avatar/00/12/db/5f/1ec96fb4.jpg","comment_is_top":false,"comment_ctime":1562117847,"is_pvip":false,"replies":[{"id":"39868","content":"会在性能优化中捎带讲一些，但不会重点讲","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562170108,"ip_address":"","comment_id":109829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562117847","product_id":100031001,"comment_content":"有没有key的介绍，特别是globalkey，网上介绍的都是抄的，还是没看懂怎么理解与使用<br>","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456592,"discussion_content":"会在性能优化中捎带讲一些，但不会重点讲","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562170108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109327,"user_name":"宋锡珺","can_delete":false,"product_type":"c1","uid":1397823,"ip_address":"","ucode":"9C3700F9A3EF77","user_header":"https://static001.geekbang.org/account/avatar/00/15/54/3f/fdbdffe0.jpg","comment_is_top":false,"comment_ctime":1562004060,"is_pvip":true,"replies":[{"id":"39712","content":"看Java版本和JVM支持情况。","user_name":"作者回复","user_name_real":"土豆盒子","uid":"1088582","ctime":1562083800,"ip_address":"","comment_id":109327,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1562004060","product_id":100031001,"comment_content":"Java语言是jit还是aot呢？没太明白。","like_count":0,"discussions":[{"author":{"id":1088582,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9c/46/0b29b188.jpg","nickname":"土豆盒子","note":"","ucode":"A910F88CAC0A87","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456356,"discussion_content":"看Java版本和JVM支持情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562083800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1171449,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL40CYbBtPXNzH9iatW8pdfsGR321dgzicIujfa0fyEh0KsowmrEBsLcznZ4A0SichgECtOib3SsyU6jg/132","nickname":"豢龙氏","note":"","ucode":"7F50E0EE2CFC5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287925,"discussion_content":"Javac编译器编译成的目标代码是JVM的二进制代码，不是机器码，所以可以看作AOT。但JVM自身也有JIT，动态把JVM的二进制代码编译成机器码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593590152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":815,"discussion_content":"aot   java   1 编译 2 运行 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562076554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344488,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/e8/f726c635.jpg","nickname":"加温后的啤酒","note":"","ucode":"5F30978CDB1606","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":746,"discussion_content":"Java程序： 编译->运行、所以是AOT。 同时，JVM包含JIT，所以java程序JIT和AOT都可以支持，单单讨论语言支不支持JIT和AOT 个人感觉不太准确。不知道我这个解释对不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562034825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109282,"user_name":"liuguly","can_delete":false,"product_type":"c1","uid":1191396,"ip_address":"","ucode":"4FBCDAC867076D","user_header":"https://static001.geekbang.org/account/avatar/00/12/2d/e4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1561992752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561992752","product_id":100031001,"comment_content":"期待03篇","like_count":0}]}