{"id":439588,"title":"10 | 数据流：如何使用Vuex设计你的数据流","content":"<p>你好，我是大圣，欢迎进入课程的第10讲。</p><p>前面的基础入门篇中的几讲，都是针对Vue本身的进阶内容。通过这几讲，我们巩固和进阶了Composition API、组件化和动画等关键知识，Vue本身的知识点已经掌握得差不多了。那么从这一讲开始，我们进入课程的全家桶实战篇。</p><p>在全家桶实战篇，我们将一同学习Vue 3的生态，包括Vuex、vue-router、Vue Devtools等生态库，以及实战开发中需要用到的库。这⼀模块学完，你就能全副武装，应对复杂的项目开发也会慢慢得心应手。</p><p>今天，我先来带你认识一下Vue全家桶必备的工具：Vuex，有了这个神兵利器，复杂项目设计也会变得条理更清晰。接下来，让我们先从Vuex解决了什么问题说起。</p><h2>前端数据管理</h2><p>首先，我们需要掌握前端的数据怎么管理，现代Web应用都是由三大件构成，分别是：组件、数据和路由。关于组件化开发，在前面的<a href=\"https://time.geekbang.org/column/article/435439\">第8讲</a>中，已经有详细的讲解了。这一讲我们思考一个这样的场景，就是有一些数据组件之间需要共享的时候，应该如何实现？</p><p>解决这个问题的最常见的一种思路就是：专门定义一个全局变量，任何组件需要数据的时候都去这个全局变量中获取。一些通用的数据，比如用户登录信息，以及一个跨层级的组件通信都可以通过这个全局变量很好地实现。在下面的代码中我们使用_store这个全局变量存储数据。</p><!-- [[[read_end]]] --><pre><code class=\"language-xml\">window._store = {}\n</code></pre><p>数据存储的结构图大致如下，任何组件内部都可以通过window._store获取数据并且修改。</p><p><img src=\"https://static001.geekbang.org/resource/image/4d/4b/4de32506d33f278704d2edd7b2d8914b.jpg?wh=1920x936\" alt=\"图片\"></p><p>但这样就会产生一个问题，window._store并不是响应式的，如果在Vue项目中直接使用，那么就无法自动更新页面。所以我们需要用ref和reactive去把数据包裹成响应式数据，并且提供统一的操作方法，这其实就是数据管理框架Vuex的雏形了。</p><h2>Vuex是什么</h2><p>你现在肯定跟小圣有同样的困惑，那就是感觉Vue已经够用了，这个Vuex又是做什么的？其实，Vuex存在的意义，就是管理我们项目的数据。</p><p>我们是使用组件化机制来搭建整个项目，每个组件内部有自己的数据和模板。但是总有些数据是需要共享的，比如当前登录的用户名、权限等数据，如果都在组件内部传递，会变得非常混乱。</p><p>如果把开发的项目比作公司的话，我们项目中的各种数据就非常像办公用品。很多小公司在初创时期不需要管理太多，大家随便拿办公用品就行。但是公司大了之后，就需要一个专门的办公用品申报的流程，对数据做统一地申请和发放，这样才能方便做资产管理。<strong>Vuex就相当于我们项目中的大管家，集中式存储管理应用的所有组件的状态</strong>。</p><p>下面，我们先来上手使用一下Vuex。我们项目结构中的src/store目录，就是专门留给Vuex的，在项目的目录下，我们执行下面这个命令，进行Vuex的安装工作。</p><pre><code>npm install vuex@next\n</code></pre><p>安装完成后，我们在src/store中先新建 index.js，在下面的代码中，我们使用createStore来创建一个数据存储，我们称之为store。</p><p>store内部除了数据，还需要一个mutation配置去修改数据，你可以把这个mutation理解为数据更新的申请单，mutation内部的函数会把state作为参数，我们直接操作state.count就可以完成数据的修改。</p><pre><code class=\"language-xml\">import { createStore } from 'vuex'\n\nconst store = createStore({\n  state () {\n    return {\n      count: 666\n    }\n  },\n  mutations: {\n    add (state) {\n      state.count++\n    }\n  }\n})\n</code></pre><p>现在你会发现，我们的代码里，在Vue的组件系统之外，多了一个数据源，里面只有一个变量count，并且有一个方法可以累加这个count。然后，我们在Vue中注册这个数据源，在项目入口文件src/main.js中，使用app.use(store)进行注册，这样Vue和Vuex就连接上了。</p><p>然后，我们使用 <code>.use</code> 就可以对路由进行注册，使用 <code>.mount</code> 就可以把 Vue 这个应用挂载到页面上，代码如下。</p><pre><code class=\"language-xml\">const app = createApp(App)\napp.use(store)\n    .use(router)\n    .mount('#app')\n</code></pre><p>之后，我们在src/components文件夹下新建一个Count.vue组件，在下面的代码中，template中的代码我们很熟悉了，就是一个div渲染了count变量，并且点击的时候触发add方法。在script中，我们使用useStore去获取数据源，初始化值和修改的函数有两个变化：</p><ul>\n<li>count不是使用ref直接定义，而是使用计算属性返回了store.state.count，也就是刚才在src/store/index.js中定义的count。</li>\n<li>add函数是用来修改数据，这里我们不能直接去操作 store.state.count +=1，因为这个数据属于Vuex统一管理，所以我们要使用store.commit(‘add’)去触发Vuex中的mutation去修改数据。</li>\n</ul><pre><code class=\"language-xml\">&lt;template&gt;\n&lt;div @click=\"add\"&gt;\n    {{count}}\n&lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { computed } from 'vue'\nimport {useStore} from 'vuex'\nlet store = useStore()\nlet count = computed(()=&gt;store.state.count)\n\nfunction add(){\n    store.commit('add')\n}\n&lt;/script&gt;\n</code></pre><p>在浏览器中打开项目页面，我们就会有一个累加器的效果。相比起来之前用ref的方式，真的很简单，这时候小圣就问了我一个问题：什么时候的数据用Vuex管理，什么时候数据要放在组件内部使用ref管理呢？</p><p>答案就是，<strong>对于一个数据，如果只是组件内部使用就是用ref管理；如果我们需要跨组件，跨页面共享的时候，我们就需要把数据从Vue的组件内部抽离出来，放在Vuex中去管理</strong>。</p><p>我再结合例子具体说说：比如项目中的登录用户名，页面的右上角需要显示，有些信息弹窗也需要显示。这样的数据就需要放在Vuex中统一管理，每当需要抽离这样的数据的时候，我们都需要思考这个数据的初始化和更新逻辑。</p><p>就像下图中，项目初始化的时候没有登录状态，我们是在用户登录成功之后，才能获取用户名这个信息，去修改Vuex的数据，再通过Vuex派发到所有的组件中。</p><p><img src=\"https://static001.geekbang.org/resource/image/9f/b9/9fca00b12fb51d52bbb48277a3c4e2b9.jpg?wh=1920x1224\" alt=\"图片\"></p><h2>手写迷你Vuex</h2><p>知道了Vuex是什么，接下来我们不妨动手实现一个迷你的Vuex，这能让你看到Vuex的大致原理。</p><p>首先，我们需要创建一个变量store用来存储数据。下一步就是把这个store的数据包转成响应式的数据，并且提供给Vue组件使用。在Vue中有 <a href=\"https://v3.cn.vuejs.org/guide/component-provide-inject.html#%E5%A4%84%E7%90%86%E5%93%8D%E5%BA%94%E6%80%A7\">provide/inject</a> 这两个函数专门用来做数据共享，provide注册了数据后，所有的子组件都可以通过inject获取数据，这两个函数官方文档介绍得比较详细，我在这里就不过多解释了。</p><p>完成刚才的数据转换之后，我们直接进入到src/store文件夹下，新建gvuex.js。下面的代码中，我们使用一个Store类来管理数据，类的内部使用_state存储数据，使用mutations来存储数据修改的函数，注意这里的state已经使用reactive包裹成响应式数据了。</p><pre><code class=\"language-xml\">import { inject, reactive } from 'vue'\n\nconst STORE_KEY = '__store__'\nfunction useStore() {\n  return inject(STORE_KEY)\n}\nfunction createStore(options) {\n  return new Store(options)\n}\nclass Store {\n  constructor(options) {\n    this._state = reactive({\n      data: options.state()\n    })\n    this._mutations = options.mutations\n  }\n}\nexport { createStore, useStore }\n</code></pre><p>上面的代码还暴露了createStore去创建Store的实例，并且可以在任意组件的setup函数内，使用useStore去获取store的实例。下一步我们回到src/store/index.js中，把vuex改成 ./gvuex。</p><p>下面的代码中，我们使用createStore创建了一个store实例，并且实例内部使用state定义了count变量和修改count值的add函数。</p><pre><code>// import { createStore } from 'vuex'\nimport { createStore } from './gvuex'\nconst store = ...\nexport default store\n</code></pre><p>最终我们使用store的方式，在项目入口文件src/main.js中使用app.use(store)注册。为了让useStore能正常工作，下面的代码中，我们需要给store新增一个install方法，这个方法会在app.use函数内部执行。我们通过app.provide函数注册store给全局的组件使用。</p><pre><code class=\"language-xml\">class Store {\n  // main.js入口处app.use(store)的时候，会执行这个函数\n  install(app) {\n    app.provide(STORE_KEY, this)\n  }\n}\n</code></pre><p>下面的代码中，Store类内部变量_state存储响应式数据，读取state的时候直接获取响应式数据_state.data，并且提供了commit函数去执行用户配置好的mutations。</p><pre><code class=\"language-xml\">import { inject, reactive } from 'vue'\nconst STORE_KEY = '__store__'\nfunction useStore() {\n  return inject(STORE_KEY)\n}\nfunction createStore(options) {\n  return new Store(options)\n}\nclass Store {\n  constructor(options) {\n    this.$options = options\n    this._state = reactive({\n      data: options.state\n    })\n    this._mutations = options.mutations\n  }\n  get state() {\n    return this._state.data\n  }\n  commit = (type, payload) =&gt; {\n    const entry = this._mutations[type]\n    entry &amp;&amp; entry(this.state, payload)\n  }\n  install(app) {\n    app.provide(STORE_KEY, this)\n  }\n}\nexport { createStore, useStore }\n</code></pre><p>这样在组件内部，我们就可以使用这个迷你的Vuex去实现一个累加器了。下面的代码中，我们使用useStore获取store的实例，并且使用计算属性返回count，在修改count的时候使用store.commit(‘add’)来修改count的值。</p><pre><code class=\"language-xml\">import {useStore} from '../store/gvuex'\nlet store =useStore()\nlet count = computed(()=&gt;store.state.count)\nfunction add(){\n    store.commit('add')\n}\n\n</code></pre><p>恭喜你，这样借助vue的插件机制和reactive响应式功能，我们只用30行代码，就实现了一个最迷你的数据管理工具，也就是一个迷你的Vuex实现，下面我们再结合例子，正式介绍一下Vuex看一看Vuex具体怎么用？</p><h2>Vuex实战</h2><p>从上面的例子你可以立即看出，Vuex就是一个公用版本的ref，提供响应式数据给整个项目使用。现在的功能还比较简单，项目大部分情况都是像之前的清单应用一样，除了简单的数据修改，还会有一些异步任务的触发，这些场景Vuex都有专门的处理方式。</p><p>在Vuex中，你可以使用getters配置，来实现computed的功能，比如我们想显示累加器数字乘以2之后的值，那么我们就需要引入getters配置。</p><p>下面的代码中，我们实现了计算累加器数字乘以2以后的值。我们在Vuex中新增了getters配置，其实getters配置和Vue中的computed是一样的写法和功能。我们配置了doubule函数，用于显示count乘以2的计算结果。</p><pre><code class=\"language-xml\">import { createStore } from 'vuex'\nconst store = createStore({\n  state () {\n    return {\n      count: 666\n    }\n  },\n  getters:{\n    double(state){\n          return state.count*2\n      }\n  },\n  mutations: {\n    add (state) {\n      state.count++\n    }\n  }\n})\n\nexport default store\n</code></pre><p>然后，我们可以很方便地在组件中使用getters，把double处理和计算的逻辑交给Vuex。</p><pre><code class=\"language-xml\">let double = computed(()=&gt;store.getters.double)\n</code></pre><p>实际项目开发中，有很多数据我们都是从网络请求中获取到的。在Vuex中，mutation的设计就是用来实现同步地修改数据。如果数据是异步修改的，我们需要一个新的配置action。现在我们模拟一个异步的场景，就是点击按钮之后的1秒，再去做数据的修改。</p><p>面对这种异步的修改需求，在Vuex中你需要新增action的配置，在action中你可以做任意的异步处理。这里我们使用setTimeout来模拟延时，然后在action内部调用mutation就可以了。</p><p>听起来是不是很绕？不过你不用担心，下面的代码就很清晰地演示了这个过程。</p><p>首先，我们在createStore的配置中，新增了actions配置，这个配置中所有的函数，可以通过解构获得commit函数。内部的异步任务完成后，就随时可以调用commit来执行mutations去更新数据。</p><pre><code class=\"language-xml\">const store = createStore({\n  state () {\n    return {\n      count: 666\n    }\n  },\n  ...\n  actions:{\n      asyncAdd({commit}){\n          setTimeout(()=&gt;{\n            commit('add')\n          },1000)\n      }\n  }\n})\n\n</code></pre><p><strong>action并不是直接修改数据，而是通过mutations去修改，这是我提醒你需要注意的</strong>。actions的调用方式是使用store.dispatch，在下面的代码中你可以看到这样的变化效果：页面中新增了一个asyncAdd的按钮，点击后会延迟一秒做累加。</p><pre><code class=\"language-xml\">function asyncAdd(){\n    store.dispatch('asyncAdd')\n}\n</code></pre><p>代码执行的效果如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/b4/d07df967ed262e3fd02751fdc55171b4.gif?wh=435x239\" alt=\"图片\"></p><p>Vuex在整体上的逻辑如下图所示，从宏观来说，Vue的组件负责渲染页面，组件中用到跨页面的数据，就是用state来存储，但是Vue不能直接修改state，而是要通过actions/mutations去做数据的修改。</p><p><img src=\"https://static001.geekbang.org/resource/image/85/28/851478d3f2b0393474de6e5b3b355a28.png?wh=1280x866\" alt=\"\"></p><p>下面这个图也是Vuex官方的结构图，很好地拆解了Vuex在Vue全家桶中的定位，我们项目中也会用Vuex来管理所有的跨组件的数据，并且我们也会在Vuex内部根据功能模块去做拆分，会把用户、权限等不同模块的组件分开去管理。</p><p><img src=\"https://static001.geekbang.org/resource/image/23/7a/237557819e2148ac022305eaf86c0b7a.png?wh=701x551\" alt=\"图片\"></p><p>由于Vuex所有的数据修改都是通过mutations来完成的，因而我们可以很方便地监控到数据的动态变化，后面我们可以借助官方的调试工具，非常方便地去调试项目中的数据变化。</p><p>回到正在做的这个项目中，有大量的数据交互需求、用户的登录状态、登录的有效期、布局的设置，不同用户还会有不同的菜单权限等。</p><p>不过面对眼花缭乱的交互需求，你不能自乱阵脚。总体来说，<strong>我们在决定一个数据是否用Vuex来管理的时候，核心就是要思考清楚，这个数据是否有共享给其他页面或者是其他组件的需要</strong>。如果需要，就放置在Vuex中管理；如果不需要，就应该放在组件内部使用ref或者reactive去管理。</p><h2>下一代Vuex</h2><p>Vuex由于在API的设计上，对TypeScript的类型推导的支持比较复杂，用起来很是痛苦。因为我们的项目一直用的都是JavaScript，你可能感触并不深，但对于使用TypeScript的用户来说，Vuex的这种问题是很明显的。</p><p>为了解决Vuex的这个问题，Vuex的作者最近发布了一个新的作品叫Pinia，并将其称之为下一代的Vuex。Pinia的API的设计非常接近Vuex5的提案，首先，Pinia不需要Vuex自定义复杂的类型去支持TypeScript，天生对类型推断就非常友好，并且对Vue Devtool的支持也非常好，是一个很有潜力的状态管理框架。</p><h2>总结</h2><p>今天的学习内容并不难，主要是引入了一个新的框架Vuex和数据管理的概念，让我们一起来回顾一下。</p><p>首先，我们从前端数据管理概念开始讲起。每个组件内部有自己的数据和模板，那共享的数据怎么科学管理呢？这就需要Vuex出马了。</p><p>简单来说，Vuex是一个状态和数据管理的框架，负责管理项目中多个组件和多个页面共享的数据。在开发项目的时候，我们就会把数据分成两个部分，一种数据是在某个组件内部使用，我们使用ref或者reactive定义即可，另外一种数据需要跨页面共享，就需要使用Vuex来进行管理。</p><p>之后，我们还讲到了Vuex带来了几个新的概念，我们使用state定义数据，使用mutation定义修改数据的逻辑，并且在组件中使用commit去调用mutations。在此基础之上，还可以用getters去实现Vuex世界的计算属性，使用action来去定义异步任务，并且在内部调用mutation去同步数据。</p><p>Vuex的出现，让我们整个项目中的数据流动变得非常自然。数据流向组件，但组件不能直接修改数据，而是要通过mutation提出申请，mutation去修改数据，形成了一个圆环。这种方式对于我们项目的开发、维护和调试都是有很大的帮助。之后，我们一起手写了一个迷你的Vuex，通过实战巩固前面的学习。</p><p>最后，我还简单介绍了一下Pinia这个框架，Pinia算是下一代的Vuex，感兴趣的同学可以去Pinia的官网学习一下。</p><h2>思考题</h2><p>相信今天的课程结束后，你对Vuex会有不一样的了解，那么你的项目里哪些数据要放在Vuex中呢？</p><p>欢迎在留言区分享你的答案，并和我一起交流讨论，我们下一讲见！</p>","comments":[{"had_liked":false,"id":320523,"user_name":"ll","can_delete":false,"product_type":"c1","uid":1296458,"ip_address":"","ucode":"57C5DAC5B51036","user_header":"https://static001.geekbang.org/account/avatar/00/13/c8/4a/3a322856.jpg","comment_is_top":true,"comment_ctime":1636365608,"is_pvip":true,"replies":[{"id":"116208","content":"精品回复！！赞赞赞","user_name":"作者回复","comment_id":320523,"uid":"1003715","ip_address":"","utype":1,"ctime":1636378176,"user_name_real":"花果山大圣"}],"discussion_count":1,"race_medal":0,"score":"9.2233721716350996e+18","product_id":100094401,"comment_content":"非常棒的一节，在学习内容的过程中，我也在回顾之前学习关于 Vuex 的知识，在写miniVuex 的实现的代码后，对组件化有了新的认识，简单说下体会。<br><br> “组件化” 是解决“复杂”问题的重要思想。其实现就是一个个“组件”，即使表现方式不同，核心还是 MVX 的模型。<br><br> 这样理解，组件内的 state 就是 model，渲染出来的“图形”就是 view，而这个 X 是这 model 与 view 的“沟通方式”，它可以是 control，也可以是 view model，大概就这个意思。这里要注意，model 和 view 不应该直接沟通。<br><br>我们现在的工作就是在“搭积木”，怎么搭很重要，但是了解手中的“积木”也同样重要。<br><br>Vue2 提供的积木有 MVX(一般组件)，VX(函数式组件)，MX(vuex)；而 Vue3 通过 CompositionAPI 提供了 M，一个只有 M 的“组件”，也是Vue3灵活原因之一。<br><br>到这，我发现，其实 Vuex 也是组件，没有 View 的组件，有 Model（state），有 X（mutation，action），它的逻辑和其他组件一样，想要变更“状态”，必须通过X。就这样“管家”诞生了。<br><br>可是具体这个是怎么实现的？<br>大概说下几个API：install，provide，use 等，大圣讲的很清楚，回头多看几遍，最主要的是多写写。","like_count":31,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530028,"discussion_content":"精品回复！！赞赞赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636378176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338507,"user_name":"ooooo","can_delete":false,"product_type":"c1","uid":2944560,"ip_address":"","ucode":"1060BB503AFF41","user_header":"https://static001.geekbang.org/account/avatar/00/2c/ee/30/d3bb5205.jpg","comment_is_top":false,"comment_ctime":1647529080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87546875000","product_id":100094401,"comment_content":"1. provide 全局提供数据<br>2. inject 任意子组件中获取provide提供的数据<br>3. const STORE_KEY = &quot;__store__&quot;  这句代码规定了提供全局数据的key<br>4. useStore函数，return inject(STORE_KEY) 这里在子组件调用useStore时，通过STORE_KEY拿到key对应的value<br>5. createStore 函数 作用是实例化Store对象，把用户写的vuex的几个属性（state，actions，mutations，getters）传给Store对象<br><br>6. store对象根据options来初始化自己，<br><br>7. 初始化过程：this._state = reactive({data: options.state()}) 把用户传入的state对象变成响应式数据，并保存到内部变量_state上面<br><br>8. this._mutations = options.mutations 直接保存用户的mutations<br><br>9. get state(){returrn this._state.data} state方法返回保存在_state上面的用户的state, 使用get state(){}格式，是为了访问this.state时直接拿到返回值，而不是this.state() 才能拿到返回值<br><br>10. commit = (type, payload) =&gt; {<br>  const entry = this._mutations[type]<br>  entry &amp;&amp; entry(this.state, payload)<br>}<br>commit方法是在用户调用commit时一般会传入要触发的mutions函数名称，和新数据<br>commit函数在接收到用户传入的参数时，先判断了_mutations对象上面有用户要触发的函数，之后进行触发，传入state，和新数据提供给用户的mutations函数使用<br><br>11. 最后install函数<br>在Vue.use(store)时，会执行install函数，这时调用了app上面的provide，此时全局最顶层的app组件会提供一个key为STORE_KEY（__store__）的对象，值为this（Store对象）供任意子组件通过inject去获取顶层组件提供的store数据","like_count":20},{"had_liked":false,"id":320430,"user_name":"一个小🍎","can_delete":false,"product_type":"c1","uid":2835033,"ip_address":"","ucode":"BA868E0EDD5C58","user_header":"https://static001.geekbang.org/account/avatar/00/2b/42/59/67b7709b.jpg","comment_is_top":false,"comment_ctime":1636330508,"is_pvip":false,"replies":[{"id":"116529","content":"只学成熟的技术就可以了，不需要过于追热点，Pinia和Vuex也是有很多概念和理念是一脉相承的","user_name":"作者回复","comment_id":320430,"uid":"1003715","ip_address":"","utype":1,"ctime":1636638422,"user_name_real":"花果山大圣"}],"discussion_count":1,"race_medal":0,"score":"87535676428","product_id":100094401,"comment_content":"我Vuex4都还没学完，Pinia就出来了，学不完了。<br>（话说想请教大圣老师，在前端技术发展如此之快的情况下，我们应该如何做取舍呢？）","like_count":20,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529986,"discussion_content":"只学成熟的技术就可以了，不需要过于追热点，Pinia和Vuex也是有很多概念和理念是一脉相承的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636638422,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320457,"user_name":"乐叶","can_delete":false,"product_type":"c1","uid":2303958,"ip_address":"","ucode":"144683EE28F346","user_header":"https://static001.geekbang.org/account/avatar/00/23/27/d6/c318bd20.jpg","comment_is_top":false,"comment_ctime":1636340419,"is_pvip":false,"replies":[{"id":"116519","content":"是的是的，第一部分实战代码在这里呀，欢迎遇见bug了提pr呀<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","comment_id":320457,"uid":"1003715","ip_address":"","utype":1,"ctime":1636638092,"user_name_real":"花果山大圣"}],"discussion_count":5,"race_medal":0,"score":"66060849859","product_id":100094401,"comment_content":"  constructor(options) {<br>    this._state = reactive({<br>      &#47;&#47;  data: options.state<br>      data: options.state()<br>    })<br>    this.mutations = options.mutations<br>  }<br><br>  get state() {<br>    return this._state.data<br>  }<br><br>options.state这样写使用调试发现获取到的是函数<br>options.state()写成这样才可以正常运行","like_count":15,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529999,"discussion_content":"是的是的，第一部分实战代码在这里呀，欢迎遇见bug了提pr呀\nhttps://github.com/shengxinjing/geektime-vue-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636638092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239409,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/71/81ea2f30.jpg","nickname":"M","note":"","ucode":"72A8B00AC427E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537101,"discussion_content":"@大圣 人家说的意思是 你在文档里面改一下 别误导别人 你光粘贴git 有啥用啊 至少把代码改对啊 ","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638956758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1862545,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/6b/91/168e10a1.jpg","nickname":"bugu","note":"","ucode":"FEBF82A876C979","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412973,"discussion_content":"我也是遇到这个问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636347821,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2839891,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/55/53/b22d729e.jpg","nickname":"senduuuuuu","note":"","ucode":"FA05BA562503E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413939,"discussion_content":"的确是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636615202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1165817,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","nickname":"阿阳","note":"","ucode":"20A35FB86B1C5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413031,"discussion_content":"是的，我是遇到这样的问题，改为函数调用就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636365266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320453,"user_name":"Geek_4578dc","can_delete":false,"product_type":"c1","uid":2820898,"ip_address":"","ucode":"CC5E01CC76DF2D","user_header":"","comment_is_top":false,"comment_ctime":1636338460,"is_pvip":false,"replies":[{"id":"116526","content":"第一部分实战代码在这里呀，欢迎遇见bug了提pr呀<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","comment_id":320453,"uid":"1003715","ip_address":"","utype":1,"ctime":1636638278,"user_name_real":"花果山大圣"}],"discussion_count":1,"race_medal":0,"score":"31701109532","product_id":100094401,"comment_content":"建议大圣老师把每节的代码放出来，这样有利于阅读","like_count":7,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529996,"discussion_content":"第一部分实战代码在这里呀，欢迎遇见bug了提pr呀\nhttps://github.com/shengxinjing/geektime-vue-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636638278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322411,"user_name":"深蓝","can_delete":false,"product_type":"c1","uid":1219317,"ip_address":"","ucode":"944AE8C1F2DBC7","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/f5/71eee10b.jpg","comment_is_top":false,"comment_ctime":1637376517,"is_pvip":false,"replies":[{"id":"118403","content":"getters是vuex内部的computed，或者你也可以一把梭全部都用computed，如果vuex中有的计算结果需要多次复用，就从computed移到getter中","user_name":"作者回复","comment_id":322411,"uid":"1003715","ip_address":"","utype":1,"ctime":1639404184,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"18817245701","product_id":100094401,"comment_content":"状态管理感觉是前端代码的核心，其他所有组件，监听数据流的变化，或改变数据，然后与这个数据流相关的页面组件作出响应变化，动态菜单，导航栏，以及主页面的组件就随之改变了，整个Web服务就动起来了，最近几天vuex 看的有点晕，有个地方有点疑惑<br><br>1  vue &lt; script&gt; computed &lt;&#47;script&gt;<br>2 vuex  也有 getters <br><br>两者都是计算属性，这里绕来绕去，还是理不清这里怎么使用最好？<br><br>","like_count":4,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538416,"discussion_content":"getters是vuex内部的computed，或者你也可以一把梭全部都用computed，如果vuex中有的计算结果需要多次复用，就从computed移到getter中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639404184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320451,"user_name":"醉月","can_delete":false,"product_type":"c1","uid":1375462,"ip_address":"","ucode":"530B4412FEDBE4","user_header":"https://static001.geekbang.org/account/avatar/00/14/fc/e6/2cff4a89.jpg","comment_is_top":false,"comment_ctime":1636336993,"is_pvip":false,"replies":[{"id":"116210","content":"最后会有涉及的，毕竟是未来的vuex","user_name":"作者回复","comment_id":320451,"uid":"1003715","ip_address":"","utype":1,"ctime":1636378221,"user_name_real":"花果山大圣"}],"discussion_count":1,"race_medal":0,"score":"18816206177","product_id":100094401,"comment_content":"大圣老师Pinia会有涉及吗","like_count":4,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529995,"discussion_content":"最后会有涉及的，毕竟是未来的vuex","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636378221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324899,"user_name":"也許有一天","can_delete":false,"product_type":"c1","uid":1899883,"ip_address":"","ucode":"61D4A89C97B096","user_header":"https://static001.geekbang.org/account/avatar/00/1c/fd/6b/d91521bf.jpg","comment_is_top":false,"comment_ctime":1638709457,"is_pvip":false,"replies":[{"id":"118030","content":"rx确实是数据管理的王牌框架，上手成本也是有一些","user_name":"作者回复","comment_id":324899,"uid":"1003715","ip_address":"","utype":1,"ctime":1638881980,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"14523611345","product_id":100094401,"comment_content":"我们公司导入rxjs来取代vuex，不得不说rxjs是真的猛...","like_count":3,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536840,"discussion_content":"rx确实是数据管理的王牌框架，上手成本也是有一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638881980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320435,"user_name":"uncle 邦","can_delete":false,"product_type":"c1","uid":1996927,"ip_address":"","ucode":"ED5BF9398C1B5C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/78/7f/ef0e0ec8.jpg","comment_is_top":false,"comment_ctime":1636332422,"is_pvip":false,"replies":[{"id":"116528","content":"感谢提示这个错别字，已经提交给编辑<br>第一部分实战代码在这里呀，欢迎遇见bug了提pr呀<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","comment_id":320435,"uid":"1003715","ip_address":"","utype":1,"ctime":1636638388,"user_name_real":"花果山大圣"}],"discussion_count":1,"race_medal":0,"score":"14521234310","product_id":100094401,"comment_content":"count 不是使用 ref 直接定义，而是使用计算属性返回了 state.state.count，也就是刚才在 src&#47;store&#47;index.js 中定义的 count。这个 &quot; state.state.count&quot; 是不是要改成 “store.state.count”","like_count":3,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529988,"discussion_content":"感谢提示这个错别字，已经提交给编辑\n第一部分实战代码在这里呀，欢迎遇见bug了提pr呀\nhttps://github.com/shengxinjing/geektime-vue-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636638388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334282,"user_name":"木子初秋","can_delete":false,"product_type":"c1","uid":2893706,"ip_address":"","ucode":"6DDCB55232E1B3","user_header":"https://static001.geekbang.org/account/avatar/00/2c/27/8a/d65e34c4.jpg","comment_is_top":false,"comment_ctime":1644848121,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10234782713","product_id":100094401,"comment_content":"再次更详细的认识了Vuex，并点出了vue3+TS推荐使用的pinia，感觉很棒。弱弱问一句我觉得是不是需要讲讲vuex中模块的使用，实际项目开发中，我遇到过Vuex中store文件夹下有很多modules，直接注册在store下的index.ts文件中，感觉可以细讲一下这种开发思路，再次细分数据。","like_count":2,"discussions":[{"author":{"id":2546490,"avatar":"https://static001.geekbang.org/account/avatar/00/26/db/3a/58a1da4f.jpg","nickname":"王帅兵","note":"","ucode":"5353D7E86962EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566950,"discussion_content":"感觉应该讲的，还有那些个辅助函数，命名空间，文中的除了手写vuex，其他的真的只是介绍而已","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650804573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327166,"user_name":"rookie","can_delete":false,"product_type":"c1","uid":1225665,"ip_address":"","ucode":"4428BC9BAC684D","user_header":"https://static001.geekbang.org/account/avatar/00/12/b3/c1/b96b5015.jpg","comment_is_top":false,"comment_ctime":1639965967,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10229900559","product_id":100094401,"comment_content":"1.跨组件传值或者共享时用vuex<br>2.用户信息、权限信息、公共数据...<br>3.vuex 数据持久 vuex-persistedstate<br>4.pinia框架","like_count":2},{"had_liked":false,"id":321990,"user_name":"JIo","can_delete":false,"product_type":"c1","uid":2826376,"ip_address":"","ucode":"7CD752E2420010","user_header":"https://static001.geekbang.org/account/avatar/00/2b/20/88/42d3b1fb.jpg","comment_is_top":false,"comment_ctime":1637128758,"is_pvip":false,"replies":[{"id":"116989","content":"是呀，问题就是这里只有文字和音频  囧  望理解","user_name":"作者回复","comment_id":321990,"uid":"1003715","ip_address":"","utype":1,"ctime":1637242376,"user_name_real":"编辑"}],"discussion_count":3,"race_medal":0,"score":"10227063350","product_id":100094401,"comment_content":"真心觉得这种设计到多段代码的课程应该出视频课 而不是音频课 各种中英文错综穿插 代码还需要截图在旁边才能听讲 效果真的不如视频来的快。。。","like_count":2,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531152,"discussion_content":"是呀，问题就是这里只有文字和音频  囧  望理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637242376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2816342,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/f9/56/806ccdde.jpg","nickname":"龍","note":"","ucode":"F246210F19B83E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540979,"discussion_content":"视频课就不是这个价了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640224541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2709927,"avatar":"https://static001.geekbang.org/account/avatar/00/29/59/a7/9a086b7e.jpg","nickname":"我的世界很小","note":"","ucode":"7AA0DA80B29FC3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534627,"discussion_content":"我每次都是下了源码 对着音频和源码一期敲一遍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638243554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321447,"user_name":"陈豆","can_delete":false,"product_type":"c1","uid":2258618,"ip_address":"","ucode":"7E2A0766B035C7","user_header":"https://static001.geekbang.org/account/avatar/00/22/76/ba/2373075b.jpg","comment_is_top":false,"comment_ctime":1636880845,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10226815437","product_id":100094401,"comment_content":"写个小型的vuex中，参考mutations实现了actions，想请教一下怎么实现getters","like_count":2,"discussions":[{"author":{"id":1497275,"avatar":"https://static001.geekbang.org/account/avatar/00/16/d8/bb/99bfdeea.jpg","nickname":"莫凡莫烦","note":"","ucode":"6E8F7FE6F5C739","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561528,"discussion_content":"constructor(options) {\n    ...\n    this._getters = options.getters;\n  }\n\nget getters() {\n    const gettersKeys = Object.keys(this._getters);\n    const gettersMap = {};\n    gettersKeys.forEach((keys) =&gt; {\n      gettersMap[keys] = this._getters[keys](this.state);\n    });\n\n    return gettersMap;\n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649662790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343184,"user_name":"一路向北","can_delete":false,"product_type":"c1","uid":2625465,"ip_address":"","ucode":"9968CFE0456C0F","user_header":"https://static001.geekbang.org/account/avatar/00/28/0f/b9/f81a4436.jpg","comment_is_top":false,"comment_ctime":1650696982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5945664278","product_id":100094401,"comment_content":"大圣，你在封minivuex的时候读取的state本身就是reactive之后的响应式数据，为什么`let count = computed(()=&gt;store.state.count)`使用的时候还需要用computed？","like_count":1},{"had_liked":false,"id":340379,"user_name":"YelLow","can_delete":false,"product_type":"c1","uid":2959886,"ip_address":"","ucode":"32CD8AFF44D7BC","user_header":"https://static001.geekbang.org/account/avatar/00/2d/2a/0e/74093a3a.jpg","comment_is_top":false,"comment_ctime":1648785847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5943753143","product_id":100094401,"comment_content":" 想提问一下，用vuex可以做项目的缓存吗？<br>通常页面在初始化的时候需要请求数据，根据获取的数据去渲染页面。如果我们用vuex在用户第一次进入页面时请求到的数据存入vuex中，那么用户第二次进入页面时就可以先根据vuex的数据渲染页面。其中如果数据的时效性比较高可以在用户进入页面后再请求一次后台数据，并更新页面，因为此时vuex中有数据了，所以用户在进入页面时就不用等到请求到后台数据后才显示页面，可以先根据vuex中的数据渲染页面。同时如果用户的某些操作更改了页面的数据，我们也可以把用户更改的数据存入vuex中，这样就确保了vuex中的数据是相对比较新的","like_count":1},{"had_liked":false,"id":330859,"user_name":"Mercurywithu","can_delete":false,"product_type":"c1","uid":2522310,"ip_address":"","ucode":"863928FDC6BA4B","user_header":"https://static001.geekbang.org/account/avatar/00/26/7c/c6/dd01049e.jpg","comment_is_top":false,"comment_ctime":1642230081,"is_pvip":false,"replies":[{"id":"120835","content":"对，这个是vue内部插件的书写方法，可以看下use函数的源码<br><br>https:&#47;&#47;github.com&#47;vuejs&#47;vue-next&#47;blob&#47;master&#47;packages&#47;runtime-core&#47;src&#47;apiCreateApp.ts#L219","user_name":"作者回复","comment_id":330859,"uid":"1003715","ip_address":"","utype":1,"ctime":1642338260,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5937197377","product_id":100094401,"comment_content":"请问下大圣老师。install 方法为什么会在main.js入口处app.use(store)的时候，执行这个函数调用。是内置的api么、","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546536,"discussion_content":"对，这个是vue内部插件的书写方法，可以看下use函数的源码\n\nhttps://github.com/vuejs/vue-next/blob/master/packages/runtime-core/src/apiCreateApp.ts#L219","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642338260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328664,"user_name":"乔帆 Kayla","can_delete":false,"product_type":"c1","uid":1883514,"ip_address":"","ucode":"81944832230BC4","user_header":"https://static001.geekbang.org/account/avatar/00/1c/bd/7a/37df606b.jpg","comment_is_top":false,"comment_ctime":1640830152,"is_pvip":false,"replies":[{"id":"119787","content":"这个没有，只是用__开头来避免和重复，这里可以使用新的数据结构Sybmol去优化","user_name":"作者回复","comment_id":328664,"uid":"1003715","ip_address":"","utype":1,"ctime":1640909343,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5935797448","product_id":100094401,"comment_content":"STORE_KEY 的值定为 __store__ , 有什么特殊含义或特殊处理吗?","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542935,"discussion_content":"这个没有，只是用__开头来避免和重复，这里可以使用新的数据结构Sybmol去优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640909343,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327609,"user_name":"xiaxiaxiaxia","can_delete":false,"product_type":"c1","uid":2873593,"ip_address":"","ucode":"4B20C71983D227","user_header":"","comment_is_top":false,"comment_ctime":1640187195,"is_pvip":false,"replies":[{"id":"119276","content":"你好，非常抱歉对你造成困扰，是哪一部分你觉得不太友好呢？我后面可以加上一些","user_name":"作者回复","comment_id":327609,"uid":"1003715","ip_address":"","utype":1,"ctime":1640229173,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5935154491","product_id":100094401,"comment_content":"为什么在代码示例里总是省略那么多你觉得我们都会懂的代码呢。。。。对新手一点也不友好。。。","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540999,"discussion_content":"你好，非常抱歉对你造成困扰，是哪一部分你觉得不太友好呢？我后面可以加上一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640229173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326732,"user_name":"小灰","can_delete":false,"product_type":"c1","uid":1637092,"ip_address":"","ucode":"EB5A344C534453","user_header":"https://static001.geekbang.org/account/avatar/00/18/fa/e4/0b55683f.jpg","comment_is_top":false,"comment_ctime":1639648143,"is_pvip":false,"replies":[{"id":"120872","content":"看这里 https:&#47;&#47;next.vuex.vuejs.org&#47;zh&#47;guide&#47;modules.html","user_name":"作者回复","comment_id":326732,"uid":"1003715","ip_address":"","utype":1,"ctime":1642342775,"user_name_real":"作者"}],"discussion_count":1,"race_medal":0,"score":"5934615439","product_id":100094401,"comment_content":"大圣老师   请教下vuex的模块化   ","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546583,"discussion_content":"看这里 https://next.vuex.vuejs.org/zh/guide/modules.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642342775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325123,"user_name":"KLonILo","can_delete":false,"product_type":"c1","uid":1711330,"ip_address":"","ucode":"C5874B2E6F7653","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1c/e2/8048fff4.jpg","comment_is_top":false,"comment_ctime":1638836824,"is_pvip":false,"replies":[{"id":"118325","content":"vuex有一个持久化存储的插件persistedstate可以直接存储在localstorage中","user_name":"作者回复","comment_id":325123,"uid":"1003715","ip_address":"","utype":1,"ctime":1639398152,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5933804120","product_id":100094401,"comment_content":"盛哥，最近刚好碰到一个用户信息存储的问题，我们是多页面，vuex的话刷新就没了，所以是否将用户名同时存储本地来结合使用呢？或者你有没有比较好的方案提点提点，感恩~","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538312,"discussion_content":"vuex有一个持久化存储的插件persistedstate可以直接存储在localstorage中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639398152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323420,"user_name":"深蓝","can_delete":false,"product_type":"c1","uid":1219317,"ip_address":"","ucode":"944AE8C1F2DBC7","user_header":"https://static001.geekbang.org/account/avatar/00/12/9a/f5/71eee10b.jpg","comment_is_top":false,"comment_ctime":1637896109,"is_pvip":false,"replies":[{"id":"117368","content":"$就是为了区分出这是插件定义的内容，算是一个约定俗成的最佳实践<br>name是普通变量<br>_name是内部变量<br>$name是第三方插件 or 我们自己注册的公用数据","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637932622,"ip_address":"","comment_id":323420,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5932863405","product_id":100094401,"comment_content":"在看GitHub 其他开源项目代码，使用vuex 创建好store 引用的时候经常看到$store 一直不太理解这的$的含义？","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533676,"discussion_content":"$就是为了区分出这是插件定义的内容，算是一个约定俗成的最佳实践\nname是普通变量\n_name是内部变量\n$name是第三方插件 or 我们自己注册的公用数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637932622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322717,"user_name":"韩仕杰","can_delete":false,"product_type":"c1","uid":1522060,"ip_address":"","ucode":"A61DF19B802724","user_header":"https://static001.geekbang.org/account/avatar/00/17/39/8c/3be6991a.jpg","comment_is_top":false,"comment_ctime":1637564342,"is_pvip":false,"replies":[{"id":"117375","content":"vuex对ts稍微不太有好，pinia更适合ts项目，也是vuex的未来","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637932908,"ip_address":"","comment_id":322717,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5932531638","product_id":100094401,"comment_content":"老师，vue3中，尤大不推荐用vuex来做状态管理，您对这方面怎么看呢？","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533684,"discussion_content":"vuex对ts稍微不太有好，pinia更适合ts项目，也是vuex的未来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637932908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322176,"user_name":"葱味黑咖啡","can_delete":false,"product_type":"c1","uid":2063970,"ip_address":"","ucode":"9BF75E8CCF8E0B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/8YX35AFKL60uUNM5YGloEx8uDbv0VGB5VddYvqKDgPRiauyW1ggJIs9p6B7ad3AricFMZAp8ahAqP4FmzaTP1few/132","comment_is_top":false,"comment_ctime":1637222777,"is_pvip":true,"replies":[{"id":"116986","content":"持久化独立成专门的插件了 vuex-persistedstate","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637241840,"ip_address":"","comment_id":322176,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5932190073","product_id":100094401,"comment_content":" 第一次使用vuex是在vue2时，用来存储登录的用户数据，但vuex是没有持久化数据的，所以还得配合着localstorage和sessionstorage来用，比较好奇为什么vuex不提供数据持久化的实现？","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531148,"discussion_content":"持久化独立成专门的插件了 vuex-persistedstate","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637241840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321603,"user_name":"轻飘飘过","can_delete":false,"product_type":"c1","uid":1347071,"ip_address":"","ucode":"68F26121369330","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/ff/986ffb41.jpg","comment_is_top":false,"comment_ctime":1636963694,"is_pvip":false,"replies":[{"id":"118387","content":"1. 感谢提醒，后面会有vuex源码的解读<br>2. 使用app.use注册主要的目的就是希望能够提供一个全局的store&#47;组件","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1639402233,"ip_address":"","comment_id":321603,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5931930990","product_id":100094401,"comment_content":"1. 看provide和inject那地方mini-vuex的封装有点懵，说“provide 注册了数据后，所有的子组件都可以通过 inject 获取数据”，但是mini-vuex只是封装了函数并不是组件，后来看官方文档才知道这个在调用use的时候进行注入了全局组件上了。要是大圣老师再写详细点就好了。<br>2. 有个疑问，使用app.use(store)进行注入vuex，为啥不封装成vueuse模块，在app.ts中用composition Api引入呢？","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538395,"discussion_content":"1. 感谢提醒，后面会有vuex源码的解读\n2. 使用app.use注册主要的目的就是希望能够提供一个全局的store/组件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639402233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321345,"user_name":"碎竹落棋","can_delete":false,"product_type":"c1","uid":2827040,"ip_address":"","ucode":"6064F35EC5A33F","user_header":"https://static001.geekbang.org/account/avatar/00/2b/23/20/5fd6ed6f.jpg","comment_is_top":false,"comment_ctime":1636804143,"is_pvip":false,"replies":[{"id":"116997","content":"因为getter需要随着状态的变化去更新视图，这就是computed的用武之地了","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637243360,"ip_address":"","comment_id":321345,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5931771439","product_id":100094401,"comment_content":"github源码中，this.getters[name] = computed(() =&gt; fn(this.state))，为什么需要用computed去包住呢？","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531162,"discussion_content":"因为getter需要随着状态的变化去更新视图，这就是computed的用武之地了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637243360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320858,"user_name":"Ty丶汤圆圆","can_delete":false,"product_type":"c1","uid":2087697,"ip_address":"","ucode":"DD89BE64338506","user_header":"","comment_is_top":false,"comment_ctime":1636532792,"is_pvip":false,"replies":[{"id":"118391","content":"storage的问题就在于可能和后端数据库的状态不同步...","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1639402578,"ip_address":"","comment_id":320858,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5931500088","product_id":100094401,"comment_content":"想问下大圣啊，因为vuex有刷新的问题，所以项目里通常把 vuex 和 Storage 结合在一起做数据持久化，但是用多了就会产生为什么不直接用 Storage 存取数据的疑问。封装后存取数据也一样很方便嘛，还是说仅仅是因为 vuex 有响应式功能呢。希望大圣帮忙解答下，谢谢~","like_count":1,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538399,"discussion_content":"storage的问题就在于可能和后端数据库的状态不同步...","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639402578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1098584,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/58/ba171e09.jpg","nickname":"小胖","note":"","ucode":"B1C0EFDD821630","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":414719,"discussion_content":"说下我的理解(瞎猜)：\n1. localStorage还是有大小限制了，5M，这个大小你说够也够，说不够也不够。\n2. localStorage还是有兼容问题的(不支持IE8)，vuex好像是没有这个限制的，vue2的忘记是不是支持IE8了。\n3. 只有一些特定的场景，我们才需要把数据存储在本地，用户信息这些我们更多是倾向于用户第刷新一次就向后端拿一次新的，而不是使用本地数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636872850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2063970,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/8YX35AFKL60uUNM5YGloEx8uDbv0VGB5VddYvqKDgPRiauyW1ggJIs9p6B7ad3AricFMZAp8ahAqP4FmzaTP1few/132","nickname":"葱味黑咖啡","note":"","ucode":"9BF75E8CCF8E0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1098584,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/58/ba171e09.jpg","nickname":"小胖","note":"","ucode":"B1C0EFDD821630","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531082,"discussion_content":"如果是必须结合浏览器storage做持久化数据的，localstorage就决定了数据大小上限，vuex做不做限制已经无所谓了。至于刷新一次就拿一次数据不太认同，用户数据的更新频率一般是很低的，如果能只拿一次就可以减少多次请求的开销。况且除了用户数据外，假如还想要存入其他相对静态的数据呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637223562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":414719,"ip_address":""},"score":531082,"extra":"{\"user_type\":1}"},{"author":{"id":1098584,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c3/58/ba171e09.jpg","nickname":"小胖","note":"","ucode":"B1C0EFDD821630","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2063970,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/8YX35AFKL60uUNM5YGloEx8uDbv0VGB5VddYvqKDgPRiauyW1ggJIs9p6B7ad3AricFMZAp8ahAqP4FmzaTP1few/132","nickname":"葱味黑咖啡","note":"","ucode":"9BF75E8CCF8E0B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":531090,"discussion_content":"对于静态数据，用本地存储没有问题，但上面的问题是不使用Vuex直接使用localstorage，并没有说是“静态数据”直接使用localstorage。\n对于，用户数据不会变动会少的问题，也要看产品类型。同时，就算产品类型用户信息变动会很小，难道刷新你不去重新取数据么，直接用本地数据？\n或者还先接口请求下后端数据有没有变，有变就拿新的，没变就拿本地的，那为何不直接拿一次新的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637225001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531082,"ip_address":""},"score":531090,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":320444,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1239362,"ip_address":"","ucode":"1B5EF54A2A56F8","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/42/1de79e71.jpg","comment_is_top":false,"comment_ctime":1636334658,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5931301954","product_id":100094401,"comment_content":"打卡<br>1. 登录的用户信息，权限信息，字典信息<br>2. 全局共享的数据","like_count":1},{"had_liked":false,"id":360698,"user_name":"浣花公子","can_delete":false,"product_type":"c1","uid":3204086,"ip_address":"吉林","ucode":"2C88563566FF0B","user_header":"https://static001.geekbang.org/account/avatar/00/30/e3/f6/4a873881.jpg","comment_is_top":false,"comment_ctime":1666766420,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666766420","product_id":100094401,"comment_content":"provide 全局提供数据<br>inject 任意子组件中获取provide提供的数据<br>感觉就是 react 里的 上下文 useContext","like_count":0},{"had_liked":false,"id":351566,"user_name":"一中心","can_delete":false,"product_type":"c1","uid":1063514,"ip_address":"","ucode":"0678061709E709","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDXstrzRuSBz119U4W1MSk3LVj2Jia5XzKEUZsuRNRzs00geIquOyFsuhORibPMB4Ec2Dp6Zecpogg/132","comment_is_top":false,"comment_ctime":1657936497,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657936497","product_id":100094401,"comment_content":"gitlab地址我怎么找不到了","like_count":0},{"had_liked":false,"id":349788,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1656328108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656328108","product_id":100094401,"comment_content":"第一个例子报错了，大家是如何折腾过去的。 <br>最烦这种，例子不给全，一抄全是坑的东西。<br>UncaughtTypeError: Cannot read property &#39;state&#39; of undefined","like_count":0},{"had_liked":false,"id":349031,"user_name":"李宗豪","can_delete":false,"product_type":"c1","uid":2975725,"ip_address":"","ucode":"05723CB1F02F3B","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEK2nhcF9TqzhWX9FVA3OcrSsQpB0ucicISapYWvRzemJxvL5jAar1qAhLmuA3FicZ1sNhZmyoq3ODvA/132","comment_is_top":false,"comment_ctime":1655653573,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1655653573","product_id":100094401,"comment_content":"vue3不用ts用js做demo吗？","like_count":0},{"had_liked":false,"id":347469,"user_name":"Totoro","can_delete":false,"product_type":"c1","uid":2936272,"ip_address":"","ucode":"78C45824B7C0BE","user_header":"https://static001.geekbang.org/account/avatar/00/2c/cd/d0/7431a18a.jpg","comment_is_top":false,"comment_ctime":1654062582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654062582","product_id":100094401,"comment_content":"在提供get方法和commit的那段代码 data: options.state() 没加上 &quot;()&quot;调用, 会拿不到数据","like_count":0},{"had_liked":false,"id":346462,"user_name":"Spike Jim.Fun","can_delete":false,"product_type":"c1","uid":1300707,"ip_address":"","ucode":"C956A19146E1DA","user_header":"https://static001.geekbang.org/account/avatar/00/13/d8/e3/987c9195.jpg","comment_is_top":false,"comment_ctime":1653151858,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653151858","product_id":100094401,"comment_content":"&#47;&#47; let double = computed(() =&gt; store.getters.double)<br>这里的double 没有必要再包裹一遍computed，可以直接使用：<br>let double = store.getters.double","like_count":0},{"had_liked":false,"id":343689,"user_name":"云中歌","can_delete":false,"product_type":"c1","uid":1806446,"ip_address":"","ucode":"F2F0AED74159D2","user_header":"https://static001.geekbang.org/account/avatar/00/1b/90/6e/d729672d.jpg","comment_is_top":false,"comment_ctime":1650983413,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650983413","product_id":100094401,"comment_content":"没太看明白，为什么要单独搞一个actions，既然都是调用的mutation，为什么这部分不交给业务自己做还灵活一些","like_count":0},{"had_liked":false,"id":342573,"user_name":"LINEQ","can_delete":false,"product_type":"c1","uid":2924165,"ip_address":"","ucode":"43F969C38B40FE","user_header":"https://static001.geekbang.org/account/avatar/00/2c/9e/85/2c61e700.jpg","comment_is_top":false,"comment_ctime":1650349821,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650349821","product_id":100094401,"comment_content":"不看评论区都不知道怎么排错😂","like_count":0},{"had_liked":false,"id":339297,"user_name":"稳与静","can_delete":false,"product_type":"c1","uid":2934922,"ip_address":"","ucode":"30B049C1341E13","user_header":"https://static001.geekbang.org/account/avatar/00/2c/c8/8a/a8338fbe.jpg","comment_is_top":false,"comment_ctime":1648026168,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648026168","product_id":100094401,"comment_content":"大圣老师，你好，你在上边提到了vuex中的actions配置项是支持异步逻辑的，所以我们可以通过axios 请求  请求数据库中的一些数据，我想问我们是不是需要将进行axios请求的方法在项目初始化的时候放到App.vue组件的onmounted（）生命周期函数中，这样在挂载的时候才能请求到数据。","like_count":0},{"had_liked":false,"id":339246,"user_name":"稳与静","can_delete":false,"product_type":"c1","uid":2934922,"ip_address":"","ucode":"30B049C1341E13","user_header":"https://static001.geekbang.org/account/avatar/00/2c/c8/8a/a8338fbe.jpg","comment_is_top":false,"comment_ctime":1648006032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648006032","product_id":100094401,"comment_content":"第一部分vuex的index.js文件不对吧，我们把对象没有store对象都没有暴露出去，如何在main.js文件中注册?","like_count":0},{"had_liked":false,"id":334307,"user_name":"叁木同学-TM","can_delete":false,"product_type":"c1","uid":1376768,"ip_address":"","ucode":"821FF531D6F18B","user_header":"https://static001.geekbang.org/account/avatar/00/15/02/00/e99cbf75.jpg","comment_is_top":false,"comment_ctime":1644857924,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1644857924","product_id":100094401,"comment_content":"大圣老师，我按照文章的代码敲下来，页面报TypeError: Cannot read properties of undefined (reading &#39;state&#39;)这个错，报错的地方在count.vue文件的store.state.count,这是什么原因呢","like_count":0,"discussions":[{"author":{"id":2967711,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/48/9f/d850ec1a.jpg","nickname":"轩子","note":"","ucode":"24A6CC61C1F4E2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572145,"discussion_content":"我刚开始把store和router写在同一个use中报这错，改成下边这种就好了\ncreateApp(App)\n.use(router)\n.use(store)\n.mount(&#34;#app&#34;);","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652620086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333721,"user_name":"李锦伦","can_delete":false,"product_type":"c1","uid":2814182,"ip_address":"","ucode":"9583D304D6D777","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f0/e6/a7b1abe5.jpg","comment_is_top":false,"comment_ctime":1644484827,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1644484827","product_id":100094401,"comment_content":"  Object.keys(options.getters).forEach(name =&gt; {<br>      const fn = options.getters[name]<br>      this.getters[name] = computed(() =&gt; fn(this.state))<br>    })<br>传入到fn里的 this.state 的指向是那个state","like_count":0,"discussions":[{"author":{"id":1242602,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/ea/5f046856.jpg","nickname":"Dale","note":"","ucode":"AD19A33FE5EEDF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555507,"discussion_content":"getters 整个改成一个 computed 得到的响应式对象就行了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646933268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332744,"user_name":"西红柿炒番茄","can_delete":false,"product_type":"c1","uid":2045741,"ip_address":"","ucode":"384828B4ABEDF3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/37/2d/df408cde.jpg","comment_is_top":false,"comment_ctime":1643537951,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1643537951","product_id":100094401,"comment_content":"老师您好，在不谈论可维护性的情况下。不通过mutation，直接修改state应该也会触发视图的重新渲染吧。","like_count":0},{"had_liked":false,"id":331396,"user_name":"Geek_30ee3b","can_delete":false,"product_type":"c1","uid":2829632,"ip_address":"","ucode":"116959550659F9","user_header":"","comment_is_top":false,"comment_ctime":1642572517,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642572517","product_id":100094401,"comment_content":"minivuex 牛 学到了","like_count":0},{"had_liked":false,"id":330420,"user_name":"Q","can_delete":false,"product_type":"c1","uid":1412736,"ip_address":"","ucode":"10A972D7A85627","user_header":"https://static001.geekbang.org/account/avatar/00/15/8e/80/2ad9e9f5.jpg","comment_is_top":false,"comment_ctime":1641973564,"is_pvip":false,"replies":[{"id":"120841","content":"useStore需要在setup函数内部 或者script setup内使用，你可以对比一下课的代码","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1642338450,"ip_address":"","comment_id":330420,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641973564","product_id":100094401,"comment_content":"老师,为什么我在组件内import { useStore } from &#39;vuex&#39;之后在下面获取不到store的实例,并且总是给我[Vue warn]: inject() can only be used inside setup() or functional components这个警告,我在挂载store的地方实际上是可以获取到store的实例的","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546543,"discussion_content":"useStore需要在setup函数内部 或者script setup内使用，你可以对比一下课的代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642338451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329435,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1656956,"ip_address":"","ucode":"3A0940EBF94577","user_header":"https://static001.geekbang.org/account/avatar/00/19/48/7c/2aaf50e5.jpg","comment_is_top":false,"comment_ctime":1641350344,"is_pvip":false,"replies":[{"id":"120854","content":"代码在这里 <br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course&#47;blob&#47;main&#47;mini-vuex-router&#47;src&#47;store&#47;gvuex.js","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1642339826,"ip_address":"","comment_id":329435,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1641350344","product_id":100094401,"comment_content":"这章的代码github上没有啊","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546559,"discussion_content":"代码在这里 \nhttps://github.com/shengxinjing/geektime-vue-course/blob/main/mini-vuex-router/src/store/gvuex.js","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642339826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323517,"user_name":"solomon","can_delete":false,"product_type":"c1","uid":2545770,"ip_address":"","ucode":"EDCB23F1977E10","user_header":"https://static001.geekbang.org/account/avatar/00/26/d8/6a/38e21f41.jpg","comment_is_top":false,"comment_ctime":1637942986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637942986","product_id":100094401,"comment_content":"vue3更适合用pinia:  https:&#47;&#47;juejin.cn&#47;post&#47;7030999394518302727","like_count":0},{"had_liked":false,"id":323300,"user_name":"朗","can_delete":false,"product_type":"c1","uid":2563876,"ip_address":"","ucode":"3E9B825DFC6178","user_header":"https://static001.geekbang.org/account/avatar/00/27/1f/24/24f15e57.jpg","comment_is_top":false,"comment_ctime":1637826213,"is_pvip":false,"replies":[{"id":"117370","content":"这是class语法里的getter语法，读取state的时候执行get state这个函数","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637932702,"ip_address":"","comment_id":323300,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637826213","product_id":100094401,"comment_content":"class Store {<br>    constructor(opts) {<br>        this.$options = opts<br>        this._state = reactive({<br>            data: opts.state()<br>        })<br><br>        this._mutations = opts.mutations<br><br>    }<br><br>    get state() {<br>        return this._state.data<br>    }<br><br>    commit = (type, payload) =&gt; {<br>        const entry = this._mutations[type]<br><br>        return entry &amp;&amp; entry(this.state, payload)<br>    }<br><br>    install(app) {<br>        app.provide(STORE_KEY, this)<br>    }<br>}<br><br>export { useStore, createStore }<br><br>问下 return entry &amp;&amp; entry(this.state, payload)  中的this.state参数，是个方法，但这里没有调用，是怎么获取这个方法里return的this._state.data呢","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533678,"discussion_content":"这是class语法里的getter语法，读取state的时候执行get state这个函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637932702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323084,"user_name":"一块小砖头","can_delete":false,"product_type":"c1","uid":1848314,"ip_address":"","ucode":"4FA84F57FDEC18","user_header":"","comment_is_top":false,"comment_ctime":1637723187,"is_pvip":false,"replies":[{"id":"117371","content":"你需要export default一下store","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637932728,"ip_address":"","comment_id":323084,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637723187","product_id":100094401,"comment_content":"The requested module &#39;&#47;src&#47;store&#47;gvuex.js?t=1637723171450&#39; does not provide an export named &#39;default&#39;     有人遇到了这个问题么？","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533679,"discussion_content":"你需要export default一下store","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637932728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321722,"user_name":"百事可乐","can_delete":false,"product_type":"c1","uid":2815755,"ip_address":"","ucode":"7D7561B5306066","user_header":"https://static001.geekbang.org/account/avatar/00/2a/f7/0b/b01f1d68.jpg","comment_is_top":false,"comment_ctime":1637025455,"is_pvip":false,"replies":[{"id":"116994","content":"options.state()是ok的","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1637242811,"ip_address":"","comment_id":321722,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1637025455","product_id":100094401,"comment_content":"constructor （）{<br><br> this.$options = options;<br>        this._state = reactive({<br>            data: options.state()     &#47;&#47; 这里文章这里最后改成  options.state  好像不对吧<br>        })<br>        this._mutations = options.mutations<br>}","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531158,"discussion_content":"options.state()是ok的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637242811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321033,"user_name":"瓦力","can_delete":false,"product_type":"c1","uid":1169104,"ip_address":"","ucode":"130655441C68CB","user_header":"https://static001.geekbang.org/account/avatar/00/11/d6/d0/288c673c.jpg","comment_is_top":false,"comment_ctime":1636626276,"is_pvip":false,"replies":[{"id":"116494","content":"其实都是数据管理的逻辑  通用的 嘿嘿","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637406,"ip_address":"","comment_id":321033,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636626276","product_id":100094401,"comment_content":"感觉vuex的很大部分逻辑来自于redux，概念基本相同：store、state、action、reducer(mutation)、middleware(commit)，UI与逻辑分离，action触发state改变，并且state是immutable的。","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530192,"discussion_content":"其实都是数据管理的逻辑  通用的 嘿嘿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320699,"user_name":"无双","can_delete":false,"product_type":"c1","uid":1238757,"ip_address":"","ucode":"405779043D091E","user_header":"https://static001.geekbang.org/account/avatar/00/12/e6/e5/e3daa1a7.jpg","comment_is_top":false,"comment_ctime":1636459719,"is_pvip":false,"replies":[{"id":"118392","content":"vuex有持久化插件可以考虑使用vuex-persistedstate","user_name":"作者回复","user_name_real":"编辑","uid":"1003715","ctime":1639402745,"ip_address":"","comment_id":320699,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636459719","product_id":100094401,"comment_content":"大圣老师,请问vuex如何处理刷新丢失数据的问题，我自己的处理方式是把Storage封装到vuex中，但感觉不是很好。","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538400,"discussion_content":"vuex有持久化插件可以考虑使用vuex-persistedstate","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639402745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320544,"user_name":"拼搏、进取","can_delete":false,"product_type":"c1","uid":2818717,"ip_address":"","ucode":"C8BB52028C1B5E","user_header":"https://static001.geekbang.org/account/avatar/00/2b/02/9d/566b9065.jpg","comment_is_top":false,"comment_ctime":1636373979,"is_pvip":false,"replies":[{"id":"116514","content":"第一部分的演示代码在这里了，欢迎发现bug提pr<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636637987,"ip_address":"","comment_id":320544,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636373979","product_id":100094401,"comment_content":"getters:{ double(state){ return state.count*2 } }, 这个getters如何实现的呢","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530039,"discussion_content":"第一部分的演示代码在这里了，欢迎发现bug提pr\nhttps://github.com/shengxinjing/geektime-vue-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636637987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320537,"user_name":"Victor","can_delete":false,"product_type":"c1","uid":1321640,"ip_address":"","ucode":"1E8234654B926F","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/a8/b101c645.jpg","comment_is_top":false,"comment_ctime":1636371430,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636371430","product_id":100094401,"comment_content":"vuex是为了解决跨组件和跨页面的大量数据共享的问题，相比较也能够解决此问题的localstorage来说，vuex 管理的数据支持响应式，提供了统一的更新和获取数据的方式。<br>所以，像用户登录信息，状态信息等都很适合。","like_count":0},{"had_liked":false,"id":320522,"user_name":"阿阳","can_delete":false,"product_type":"c1","uid":1165817,"ip_address":"","ucode":"20A35FB86B1C5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/f9/39492855.jpg","comment_is_top":false,"comment_ctime":1636365150,"is_pvip":false,"replies":[{"id":"116209","content":"mini版本的时候五把state设置为对象了","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636378194,"ip_address":"","comment_id":320522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636365150","product_id":100094401,"comment_content":"在实现mini版的vuex时，以下代码this._state = reactive({ data: options.state })，这里是不是应该是options.state()，是一个函数调用。因为在创建store时，state已经写成了一个函数了。","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530027,"discussion_content":"mini版本的时候五把state设置为对象了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636378194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320464,"user_name":"1023","can_delete":false,"product_type":"c1","uid":2817114,"ip_address":"","ucode":"5EE74BC138E4B3","user_header":"https://static001.geekbang.org/account/avatar/00/2a/fc/5a/3d4cb5ab.jpg","comment_is_top":false,"comment_ctime":1636343257,"is_pvip":false,"replies":[{"id":"116518","content":"第一部分实战代码在这里呀，欢迎遇见bug了提pr呀<br>https:&#47;&#47;github.com&#47;shengxinjing&#47;geektime-vue-course","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636638084,"ip_address":"","comment_id":320464,"utype":1}],"discussion_count":7,"race_medal":0,"score":"1636343257","product_id":100094401,"comment_content":"第一个示例报错，获取不到store是什么原因呢","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530002,"discussion_content":"第一部分实战代码在这里呀，欢迎遇见bug了提pr呀\nhttps://github.com/shengxinjing/geektime-vue-course","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636638084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1883514,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/bd/7a/37df606b.jpg","nickname":"乔帆 Kayla","note":"","ucode":"81944832230BC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542492,"discussion_content":"store/index.js  中加 export { store }\n\nmain.js 中加  import { store } from &#39;./store/index&#39;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640767870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2817114,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/fc/5a/3d4cb5ab.jpg","nickname":"1023","note":"","ucode":"5EE74BC138E4B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413292,"discussion_content":"破案了，我之前是写在vite构建的项目中的，获取不到store，vue3 cli 构建的项目中可以正常获取。改到怀疑自己............................","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636439730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1133376,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4b/40/abfc81f4.jpg","nickname":"belboard","note":"","ucode":"E1696E94A6A3AC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2817114,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/fc/5a/3d4cb5ab.jpg","nickname":"1023","note":"","ucode":"5EE74BC138E4B3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531931,"discussion_content":"我也遇到和你一样的问题，后来发现没有暴露store，加上export default store即可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637473831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413292,"ip_address":""},"score":531931,"extra":"{\"user_type\":1}"},{"author":{"id":1305516,"avatar":"https://static001.geekbang.org/account/avatar/00/13/eb/ac/d31b15d8.jpg","nickname":"Mr.Zhu ℡¹⁵¹⁵⁶⁴⁶⁰³⁰⁶","note":"","ucode":"CE0E6BDFB6B598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1133376,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4b/40/abfc81f4.jpg","nickname":"belboard","note":"","ucode":"E1696E94A6A3AC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536690,"discussion_content":"这个鸟项目 写代码只写一半 剩下一两句 都要你自己找问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638845872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531931,"ip_address":""},"score":536690,"extra":""}]},{"author":{"id":1618815,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b3/7f/e3b0e8c1.jpg","nickname":"Range","note":"","ucode":"1AECD8E9AF6CC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413027,"discussion_content":"main.js   加上   import store from &#39;./store/index&#39;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636362381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2817114,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/fc/5a/3d4cb5ab.jpg","nickname":"1023","note":"","ucode":"5EE74BC138E4B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1618815,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b3/7f/e3b0e8c1.jpg","nickname":"Range","note":"","ucode":"1AECD8E9AF6CC4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413249,"discussion_content":"加了，也导出了，就是获取不到，很奇怪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636424450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413027,"ip_address":""},"score":413249,"extra":""}]}]},{"had_liked":false,"id":320428,"user_name":"海阔天空","can_delete":false,"product_type":"c1","uid":1327016,"ip_address":"","ucode":"16C87A0052A08B","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/a8/8da58e53.jpg","comment_is_top":false,"comment_ctime":1636329408,"is_pvip":false,"replies":[{"id":"116530","content":"cool","user_name":"作者回复","user_name_real":"花果山大圣","uid":"1003715","ctime":1636638427,"ip_address":"","comment_id":320428,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636329408","product_id":100094401,"comment_content":"vuex使用场景一般是需要共享的数据。1，对于不同页面之间，如用户信息等。2，对于复杂功能的页面间不同组件间的数据共享。如果不需要共享状态的组件，数据就不需要存储刀vuex中了。","like_count":0,"discussions":[{"author":{"id":1003715,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/50/c3/0aa50246.jpg","nickname":"花果山大圣","note":"","ucode":"25C0A36D628037","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529985,"discussion_content":"cool","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636638427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320421,"user_name":"JayMe_DotDot","can_delete":false,"product_type":"c1","uid":1902591,"ip_address":"","ucode":"813CB9AF5744BE","user_header":"https://static001.geekbang.org/account/avatar/00/1d/07/ff/3b508125.jpg","comment_is_top":false,"comment_ctime":1636304674,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1636304674","product_id":100094401,"comment_content":"没接触过 Vuex，听了老师讲的，感觉 Vuex 最大的特点是：1、可以统一组织和管理跨组件数据、组件之间的数据交流；2、因为数据组织在一起，方便去检查和监控。<br><br>放在 Vuex 中的数据：1、登录信息；2、权限信息；3、我咋感觉只要不是一次性使用的数据、和其他组件及后端有交互的数据，都要放到 Vuex 中😂","like_count":0,"discussions":[{"author":{"id":2832259,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epmBmNzSU9po7PX7NapoPlIPoRWOUUAiaQ1RvOnqmMZkFLnVTKiafHEMzwiamEqWyDCYWcvpYunAJ5Kg/132","nickname":"aehyok","note":"","ucode":"5170D8FC3143D6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412916,"discussion_content":"实践一下，并结合业务场景，可能你会慢慢总结出使用场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636332930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}