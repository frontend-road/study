{"id":179373,"title":"37 | 计数系统设计（一）：面对海量数据的计数器要如何做？","content":"<p>你好，我是唐扬。</p><p>从今天开始，我们正式进入最后的实战篇。在之前的课程中，我分别从数据库、缓存、消息队列和分布式服务化的角度，带你了解了面对高并发的时候要如何保证系统的高性能、高可用和高可扩展。课程中虽然有大量的例子辅助你理解理论知识，但是没有一个完整的实例帮你把知识串起来。</p><p>所以，为了将我们提及的知识落地，在实战篇中，我会以微博为背景，用两个完整的案例带你从实践的角度应对高并发大流量的冲击，期望给你一个更加具体的感性认识，为你在实现类似系统的时候提供一些思路。今天我要讲的第一个案例是如何设计一个支持高并发大存储量的计数系统。</p><p><strong>来看这样一个场景：</strong> 在地铁上，你也许会经常刷微博、点赞热搜，如果有抽奖活动，再转发一波，而这些与微博息息相关的数据，其实就是微博场景下的计数数据，细说起来，它主要有几类：</p><ol>\n<li>微博的评论数、点赞数、转发数、浏览数、表态数等等；</li>\n<li>用户的粉丝数、关注数、发布微博数、私信数等等。</li>\n</ol><p>微博维度的计数代表了这条微博受欢迎的程度，用户维度的数据（尤其是粉丝数），代表了这个用户的影响力，因此大家会普遍看重这些计数信息。并且在很多场景下，我们都需要查询计数数据（比如首页信息流页面、个人主页面），计数数据访问量巨大，所以需要设计计数系统维护它。</p><!-- [[[read_end]]] --><p>但在设计计数系统时，不少人会出现性能不高、存储成本很大的问题，比如，把计数与微博数据存储在一起，这样每次更新计数的时候都需要锁住这一行记录，降低了写入的并发。在我看来，之所以出现这些问题，还是因为你对计数系统的设计和优化不甚了解，所以要想解决痛点，你有必要形成完备的设计方案。</p><h2>计数在业务上的特点</h2><p>首先，你要了解这些计数在业务上的特点是什么，这样才能针对特点设计出合理的方案。在我看来，主要有这样几个特点。</p><ul>\n<li>数据量巨大。据我所知，微博系统中微博条目的数量早已经超过了千亿级别，仅仅计算微博的转发、评论、点赞、浏览等核心计数，其数据量级就已经在几千亿的级别。更何况微博条目的数量还在不断高速地增长，并且随着微博业务越来越复杂，微博维度的计数种类也可能会持续扩展（比如说增加了表态数），因此，仅仅是微博维度上的计数量级就已经过了万亿级别。除此之外，微博的用户量级已经超过了10亿，用户维度的计数量级相比微博维度来说虽然相差很大，但是也达到了百亿级别。那么如何存储这些过万亿级别的数字，对我们来说就是一大挑战。</li>\n<li>访问量大，对于性能的要求高。微博的日活用户超过2亿，月活用户接近5亿，核心服务（比如首页信息流）访问量级达到每秒几十万次，计数系统的访问量级也超过了每秒百万级别，而且在性能方面，它要求要毫秒级别返回结果。</li>\n<li>最后，对于可用性、数字的准确性要求高。一般来讲，用户对于计数数字是非常敏感的，比如你直播了好几个月，才涨了1000个粉，突然有一天粉丝数少了几百个，那么你是不是会琢磨哪里出现问题，或者打电话投诉直播平台？</li>\n</ul><p>那么，面临着高并发、大数据量、数据强一致要求的挑战，微博的计数系统是如何设计和演进的呢？你又能从中借鉴什么经验呢？</p><h2>支撑高并发的计数系统要如何设计</h2><p>刚开始设计计数系统的时候，微博的流量还没有现在这么夸张，我们本着KISS（Keep It Simple and Stupid）原则，尽量将系统设计得简单易维护，所以，我们使用MySQL存储计数的数据，因为它是我们最熟悉的，团队在运维上经验也会比较丰富。举个具体的例子。</p><p>假如要存储微博维度（微博的计数，转发数、点赞数等等）的数据，你可以这么设计表结构：以微博ID为主键，转发数、评论数、点赞数和浏览数分别为单独一列，这样在获取计数时用一个SQL语句就搞定了。</p><pre><code>select repost_count, comment_count, praise_count, view_count from t_weibo_count where weibo_id = ?\n</code></pre><p>在数据量级和访问量级都不大的情况下，这种方式最简单，所以如果你的系统量级不大，你可以直接采用这种方式来实现。</p><p>后来，随着微博的不断壮大，之前的计数系统面临了很多的问题和挑战。</p><p>比如微博用户量和发布的微博量增加迅猛，计数存储数据量级也飞速增长，而MySQL数据库单表的存储量级达到几千万的时候，性能上就会有损耗。所以我们考虑使用分库分表的方式分散数据量，提升读取计数的性能。</p><p>我们用“weibo_id”作为分区键，在选择分库分表的方式时，考虑了下面两种：</p><ul>\n<li>一种方式是选择一种哈希算法对weibo_id计算哈希值，然后根据这个哈希值计算出需要存储到哪一个库哪一张表中，具体的方式你可以回顾一下第9讲数据库分库分表的内容；</li>\n<li>另一种方式是按照weibo_id生成的时间来做分库分表，我们在第10讲谈到发号器的时候曾经提到，ID的生成最好带有业务意义的字段，比如生成ID的时间戳。所以在分库分表的时候，可以先依据发号器的算法反解出时间戳，然后按照时间戳来做分库分表，比如，一天一张表或者一个月一张表等等。</li>\n</ul><p>因为越是最近发布的微博，计数数据的访问量就越大，所以虽然我考虑了两种方案，但是按照时间来分库分表会造成数据访问的不均匀，最后用了哈希的方式来做分库分表。</p><p><img src=\"https://static001.geekbang.org/resource/image/50/9c/508201de80dd909d8b7dff1d34be9f9c.jpg?wh=1142*306\" alt=\"\"></p><p>与此同时，计数的访问量级也有质的飞跃。在微博最初的版本中，首页信息流里面是不展示计数数据的，那么使用MySQL也可以承受当时读取计数的访问量。但是后来在首页信息流中也要展示转发、评论和点赞等计数数据了。而信息流的访问量巨大，仅仅靠数据库已经完全不能承担如此高的并发量了。于是我们考虑使用Redis来加速读请求，通过部署多个从节点来提升可用性和性能，并且通过Hash的方式对数据做分片，也基本上可以保证计数的读取性能。然而，这种数据库+缓存的方式有一个弊端：无法保证数据的一致性，比如，如果数据库写入成功而缓存更新失败，就会导致数据的不一致，影响计数的准确性。所以，我们完全抛弃了MySQL，全面使用Redis来作为计数的存储组件。</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/62/7c8ed7992ec206671a18b8d537eaef62.jpg?wh=1142*599\" alt=\"\"></p><p>除了考虑计数的读取性能之外，由于热门微博的计数变化频率相当高，也需要考虑如何提升计数的写入性能。比如，每次在转发一条微博的时候，都需要增加这条微博的转发数，那么如果明星发布结婚、离婚的微博，瞬时就可能会产生几万甚至几十万的转发。如果是你的话，要如何降低写压力呢？</p><p>你可能已经想到用消息队列来削峰填谷了，也就是说，我们在转发微博的时候向消息队列写入一条消息，然后在消息处理程序中给这条微博的转发计数加1。<strong>这里需要注意的一点，</strong> 我们可以通过批量处理消息的方式进一步减小Redis的写压力，比如像下面这样连续更改三次转发数（我用SQL来表示来方便你理解）：</p><pre><code>UPDATE t_weibo_count SET repost_count = repost_count + 1 WHERE weibo_id = 1; \nUPDATE t_weibo_count SET repost_count = repost_count + 1 WHERE weibo_id = 1;  \nUPDATE  t_weibo_count SET repost_count = repost_count +1 WHERE weibo_id = 1; \n</code></pre><p>这个时候，你可以把它们合并成一次更新：</p><pre><code>UPDATE t_weibo_count SET repost_count = repost_count + 3 WHERE weibo_id = 1; \n</code></pre><h2>如何降低计数系统的存储成本</h2><p>讲到这里，我其实已经告诉你一个支撑高并发查询请求的计数系统是如何实现的了。但是在微博的场景下，计数的量级是万亿的级别，这也给我们提出了更高的要求，<strong>就是如何在有限的存储成本下实现对于全量计数数据的存取。</strong></p><p>你知道，Redis是使用内存来存储信息，相比于使用磁盘存储数据的MySQL来说，存储的成本不可同日而语，比如一台服务器磁盘可以挂载到2个T，但是内存可能只有128G，这样磁盘的存储空间就是内存的16倍。而Redis基于通用性的考虑，对于内存的使用比较粗放，存在大量的指针以及额外数据结构的开销，如果要存储一个KV类型的计数信息，Key是8字节Long类型的weibo_id，Value是4字节int类型的转发数，存储在Redis中之后会占用超过70个字节的空间，空间的浪费是巨大的。<strong>如果你面临这个问题，要如何优化呢？</strong></p><p>我建议你先对原生Redis做一些改造，采用新的数据结构和数据类型来存储计数数据。我在改造时，主要涉及了两点：</p><ul>\n<li>一是原生的Redis在存储Key时是按照字符串类型来存储的，比如一个8字节的Long类型的数据，需要8（sdshdr数据结构长度）+ 19（8字节数字的长度）+1（’\\0’）=28个字节，如果我们使用Long类型来存储就只需要8个字节，会节省20个字节的空间；</li>\n<li>二是去除了原生Redis中多余的指针，如果要存储一个KV信息就只需要8（weibo_id）+4（转发数）=12个字节，相比之前有很大的改进。</li>\n</ul><p>同时，我们也会使用一个大的数组来存储计数信息，存储的位置是基于weibo_id的哈希值来计算出来的，具体的算法像下面展示的这样：</p><pre><code>插入时:\nh1 = hash1(weibo_id) //根据微博ID计算Hash\nh2 = hash2(weibo_id) //根据微博ID计算另一个Hash，用以解决前一个Hash算法带来的冲突\nfor s in 0,1000\n   pos = (h1 + h2*s) % tsize //如果发生冲突，就多算几次Hash2\n     if(isempty(pos) || isdelete(pos))\n         t[ pos ] = item  //写入数组\n\n\n查询时:\nfor s in 0,1000\n   pos = (h1 + h2*s) % tsize  //依照插入数据时候的逻辑，计算出存储在数组中的位置\n      if(!isempty(pos) &amp;&amp; t[pos]==weibo_id)\n         return t[pos]\nreturn 0 \n\n\n删除时:\ninsert(FFFF) //插入一个特殊的标\n</code></pre><p>在对原生的Redis做了改造之后，你还需要进一步考虑如何节省内存的使用。比如，微博的计数有转发数、评论数、浏览数、点赞数等等，如果每一个计数都需要存储weibo_id，那么总共就需要8（weibo_id）*4（4个微博ID）+4（转发数） + 4（评论数） + 4（点赞数） + 4（浏览数）= 48字节。但是我们可以把相同微博ID的计数存储在一起，这样就只需要记录一个微博ID，省掉了多余的三个微博ID的存储开销，存储空间就进一步减少了。</p><p>不过，即使经过上面的优化，由于计数的量级实在是太过巨大，并且还在以极快的速度增长，所以如果我们以全内存的方式来存储计数信息，就需要使用非常多的机器来支撑。</p><p>然而微博计数的数据具有明显的热点属性：越是最近的微博越是会被访问到，时间上久远的微博被访问的几率很小。所以为了尽量减少服务器的使用，我们考虑给计数服务增加SSD磁盘，然后将时间上比较久远的数据dump到磁盘上，内存中只保留最近的数据。当我们要读取冷数据的时候，使用单独的I/O线程异步地将冷数据从SSD磁盘中加载到一块儿单独的Cold  Cache中。</p><p><img src=\"https://static001.geekbang.org/resource/image/16/93/16cb144c96a0ab34214c966f686c9693.jpg?wh=1142*677\" alt=\"\"></p><p>在经过了上面这些优化之后，我们的计数服务就可以支撑高并发大数据量的考验，无论是在性能上、成本上和可用性上都能够达到业务的需求了。</p><p>总的来说，我用微博设计计数系统的例子，并不是仅仅告诉你计数系统是如何做的，而是想告诉你在做系统设计的时候需要了解自己系统目前的痛点是什么，然后再针对痛点来做细致的优化。比如，微博计数系统的痛点是存储的成本，那么我们后期做的事情很多都是围绕着如何使用有限的服务器存储全量的计数数据，即使是对开源组件（Redis）做深度的定制会带来很大的运维成本，也只能被认为是为了实现计数系统而必须要做的权衡。</p><h2>课程小结</h2><p>以上就是本节课的全部内容了。本节课我以微博为例带你了解了如何实现一套存储千亿甚至万亿数据的高并发计数系统，这里你需要了解的重点如下：</p><ol>\n<li>数据库+缓存的方案是计数系统的初级阶段，完全可以支撑中小访问量和存储量的存储服务。如果你的项目还处在初级阶段，量级还不是很大，那么你一开始可以考虑使用这种方案。</li>\n<li>通过对原生Redis组件的改造，我们可以极大地减小存储数据的内存开销。</li>\n<li>使用SSD+内存的方案可以最终解决存储计数数据的成本问题。这个方式适用于冷热数据明显的场景，你在使用时需要考虑如何将内存中的数据做换入换出。</li>\n</ol><p>其实，随着互联网技术的发展，已经有越来越多的业务场景需要使用上百G甚至几百G的内存资源来存储业务数据，但是对于性能或者延迟并没有那么高的要求，如果全部使用内存来存储无疑会带来极大的成本浪费。因此，在业界有一些开源组件也在支持使用SSD替代内存存储冷数据，比如<a href=\"https://github.com/Qihoo360/pika\">Pika</a>，<a href=\"https://github.com/ideawu/ssdb\">SSDB</a>，这两个开源组件，我建议你可以了解一下它们的实现原理，这样可以在项目中需要的时候使用。而且，在微博的计数服务中也采用了类似的思路，如果你的业务中也需要使用大量的内存，存储热点比较明显的数据，不妨也可以考虑使用类似的思路。</p><h2>一课一思</h2><p>你的系统中是否也有大量的计数类的需求呢？你是如何设计方案来存储和读取这些计数的呢？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"36 | 面试现场第三期：你要如何准备一场技术面试呢？","id":178324},"right":{"article_title":"38 | 计数系统设计（二）：50万QPS下如何设计未读数系统？","id":180211}},"comments":[{"had_liked":false,"id":162981,"user_name":"台风骆骆","can_delete":false,"product_type":"c1","uid":1170748,"ip_address":"","ucode":"891D3599644ABD","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/3c/a595eb2a.jpg","comment_is_top":false,"comment_ctime":1576637204,"is_pvip":true,"replies":[{"id":"62134","content":"👍","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576735129,"ip_address":"","comment_id":162981,"utype":1}],"discussion_count":3,"race_medal":0,"score":"242094805780","product_id":100035801,"comment_content":"总结：<br>1、一开始用mysql进行计数，后来加入了主从架构，分库分表架构。<br>2、因为计数访问量太大了，加入了缓存，但是这个会造成相应的那个缓存和数据库数据不一致，如果要保证一性的话，就需要采用内存队列，对于同一个id的数量只能用单线程进行处理，这个会造成性能问题。<br>3、后来直接抛弃了mysql，直接用redis cluster来支持计数服务,因为redis通过rdb和aof来支持持久化，可以通过设置保证至少有一台从redis机器同步了数据，从redis来做相应的那个持久化操作达到数据不丢失，因为原生的redis数据结构会占用比较多的字节，这里直接进行改造，让redis的数据结构占用内存加少。<br>4、但是redis是全内存的，随着量越来越大肯定没法支持了，这里进行改造，引入ssd，支持把冷数据放到ssd中，热数据在内存中，当要访问冷数据时利用一个线程异步把冷数据加载到一个cold cache里面去。这个有很多开源的实现，如Pika，SSDB用ssd来替代内存存储冷数据。","like_count":57,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478196,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576735129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535609,"discussion_content":"关键是，冷热数据，如何区分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638495339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2675399,"avatar":"https://static001.geekbang.org/account/avatar/00/28/d2/c7/b7f52df2.jpg","nickname":"雨里","note":"","ucode":"C475DE8B5375AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571114,"discussion_content":"最近访问就是热数据，隔的时间越远就是冷数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652074974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":535609,"ip_address":""},"score":571114,"extra":""}]}]},{"had_liked":false,"id":220231,"user_name":"小困","can_delete":false,"product_type":"c1","uid":1350019,"ip_address":"","ucode":"8F143BEC9F2A5D","user_header":"https://static001.geekbang.org/account/avatar/00/14/99/83/b5743382.jpg","comment_is_top":false,"comment_ctime":1590209883,"is_pvip":false,"replies":[{"id":"83116","content":"布隆过滤器","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591803272,"ip_address":"","comment_id":220231,"utype":1}],"discussion_count":8,"race_medal":0,"score":"57424784731","product_id":100035801,"comment_content":"微博点赞还有哥难点，就是用户只能点赞一次，这个该用什么存储结构呢，或者技术方案","like_count":14,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496096,"discussion_content":"布隆过滤器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591803272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255277,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDVXsv6JOOficLK07867AkAb21eoG5KBgYFmwhMXKJooU5B6iaIZwyDxExicokVQSiaKEwZ4qPicqVFcg/132","nickname":"拼yin世界","note":"","ucode":"9571428A12B72A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535610,"discussion_content":"看了半天，还是没有看明白，扎心了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638495502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387474,"discussion_content":"哇  老前辈了。。微博判断是否赞过数据我这边搞过。。是否赞按照布隆过滤器算，后边跟着一个较小的redis+db即可，因为每个月的量基本是可以预估出来的。按照年增长多少，平摊到月。。至于取消点赞 不用管。因为本身布隆过滤器告你么有可信，。。有的时候反而穿透redis + db。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628209801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408366,"discussion_content":"布隆过滤器，点赞，uid为3（0x11）点了后，uid为1（ox01）怎么判断？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635236141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":387474,"ip_address":""},"score":408366,"extra":""}]},{"author":{"id":1371061,"avatar":"https://static001.geekbang.org/account/avatar/00/14/eb/b5/d2e517c2.jpg","nickname":"这个名字不带色彩","note":"","ucode":"E9FE4D62835551","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358947,"discussion_content":"取消点赞怎么搞？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616077978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1092169,"avatar":"https://static001.geekbang.org/account/avatar/00/10/aa/49/51790edb.jpg","nickname":"落尘kira","note":"","ucode":"D203B519E43F85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1371061,"avatar":"https://static001.geekbang.org/account/avatar/00/14/eb/b5/d2e517c2.jpg","nickname":"这个名字不带色彩","note":"","ucode":"E9FE4D62835551","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373226,"discussion_content":"bit转number","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620654944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":358947,"ip_address":""},"score":373226,"extra":""},{"author":{"id":1308939,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f9/0b/275cb83a.jpg","nickname":"大西几คิดถึง","note":"","ucode":"A4BE6153A4DC19","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1092169,"avatar":"https://static001.geekbang.org/account/avatar/00/10/aa/49/51790edb.jpg","nickname":"落尘kira","note":"","ucode":"D203B519E43F85","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389425,"discussion_content":"能详细解释下吗\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629273900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":373226,"ip_address":""},"score":389425,"extra":""},{"author":{"id":1474954,"avatar":"https://static001.geekbang.org/account/avatar/00/16/81/8a/15a96a64.jpg","nickname":"Gatsby","note":"","ucode":"5DBFDA12556BDB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1308939,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f9/0b/275cb83a.jpg","nickname":"大西几คิดถึง","note":"","ucode":"A4BE6153A4DC19","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406653,"discussion_content":"原来只是存的是1做标识，现在存数值，重叠时++，删除时--","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634815487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":389425,"ip_address":""},"score":406653,"extra":""}]}]},{"had_liked":false,"id":168649,"user_name":"bug工程师","can_delete":false,"product_type":"c1","uid":1042743,"ip_address":"","ucode":"E143D2DD9FFC9C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e9/37/4780b70c.jpg","comment_is_top":false,"comment_ctime":1578131719,"is_pvip":false,"replies":[{"id":"66192","content":"粉丝一般只在粉丝列表中展示，现在微博只展示5000个粉丝，所以没必要缓存全量的粉丝数据。","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1578732827,"ip_address":"","comment_id":168649,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48822771975","product_id":100035801,"comment_content":"老师，关于关注关系存储，我们公司现在用户的关注列表和粉丝列表都放在redis的sortedset结构中，一个key最大能够占到2g，现在8个节点，每个节点平均已使用20g容量，redis改造的能力我们不具备，还有什么其他优化思路，能够减少存储成本，获取粉丝列表响应时间低延迟呢？","like_count":12,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480282,"discussion_content":"粉丝一般只在粉丝列表中展示，现在微博只展示5000个粉丝，所以没必要缓存全量的粉丝数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578732827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294813,"discussion_content":"从业务上规避","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596007939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1292724,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJw2X8ib9oJCfoAavUFQiaHUk6ibUahvDicstTSjmib3OzPSic4KgWx98z4fOyiaTyd9WUF0W8niaeCpMOxog/132","nickname":"Geek_zhuyu","note":"","ucode":"E27E4CC9806FF5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143418,"discussion_content":"老师，微博关注列表和粉丝列表是怎么存储的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579505637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173329,"user_name":"Geek_zhuyu","can_delete":false,"product_type":"c1","uid":1292724,"ip_address":"","ucode":"E27E4CC9806FF5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJw2X8ib9oJCfoAavUFQiaHUk6ibUahvDicstTSjmib3OzPSic4KgWx98z4fOyiaTyd9WUF0W8niaeCpMOxog/132","comment_is_top":false,"comment_ctime":1579505764,"is_pvip":false,"replies":[{"id":"67363","content":"其实你很难保证写入完全没有错误，一般是对于粉丝数比较少的用户，在获取粉丝数的时候异步从数据库校对一下数据；如果粉丝是比较多，那么差几个用户也不会感觉到😂","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1579695039,"ip_address":"","comment_id":173329,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40234211428","product_id":100035801,"comment_content":"老师，通过消息队列来计数的话，怎么保证计数的准确性，比如关注数和粉丝数这种对准确性要求比较高的","like_count":9,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482040,"discussion_content":"其实你很难保证写入完全没有错误，一般是对于粉丝数比较少的用户，在获取粉丝数的时候异步从数据库校对一下数据；如果粉丝是比较多，那么差几个用户也不会感觉到😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579695039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114352,"avatar":"https://static001.geekbang.org/account/avatar/00/11/00/f0/fe94061e.jpg","nickname":"假装在养🐷","note":"","ucode":"D0AB9CD03E0D5B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573935,"discussion_content":"技术思维和业务思维相结合，技术上不好实现的，业务上可以妥协","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653735253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164827,"user_name":"扬一场远远的风","can_delete":false,"product_type":"c1","uid":1357801,"ip_address":"","ucode":"AB47E3D2EAB8A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/b7/e9/5400cdf3.jpg","comment_is_top":false,"comment_ctime":1577096942,"is_pvip":false,"replies":[{"id":"63051","content":"KV型的redis、leveldb之类要比hbase性能好很多，hbase也比较重，要依赖hdfs","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577240406,"ip_address":"","comment_id":164827,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35936835310","product_id":100035801,"comment_content":"老师，这种海量的KV型计数，是否用 hbase存储会好简单许多？起码不用像mysql那样要在client端做分库分表。读请求依然可以走缓存。","like_count":8,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478906,"discussion_content":"KV型的redis、leveldb之类要比hbase性能好很多，hbase也比较重，要依赖hdfs","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577240406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163013,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1576640014,"is_pvip":false,"replies":[{"id":"62131","content":"其实就是redis本身需要的一些存储空间，比如刚才提到的key使用string来存储需要28个字节，redis中使用的类似哈希表的数据结构叫dictEntry，也需要24个字节，还存储一些指针之类","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576734922,"ip_address":"","comment_id":163013,"utype":1}],"discussion_count":2,"race_medal":0,"score":"35936378382","product_id":100035801,"comment_content":"【如果要存储一个 KV 类型的计数信息，Key 是 8 字节 Long 类型的 weibo_id，Value 是 4 字节 int 类型的转发数，存储在 Redis 中之后会占用超过 70 个字节的空间】这个 70 个字节是怎么算出来的，有点懵","like_count":8,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478214,"discussion_content":"其实就是redis本身需要的一些存储空间，比如刚才提到的key使用string来存储需要28个字节，redis中使用的类似哈希表的数据结构叫dictEntry，也需要24个字节，还存储一些指针之类","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576734922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009652,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","nickname":"钱","note":"","ucode":"2C92A243A463D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262345,"discussion_content":"同样有疑问，老师的回答过于笼统不细致了，8+4＝12，需要占用70，多出来的58字节具体每个自己存储的啥？为什么比实际存储的数据多这么多？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589077891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162932,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1003104,"ip_address":"","ucode":"E8F0F3B000020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","comment_is_top":false,"comment_ctime":1576632035,"is_pvip":false,"replies":[{"id":"62136","content":"redis可以做主从，然后从从库恢复数据","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576735194,"ip_address":"","comment_id":162932,"utype":1}],"discussion_count":4,"race_medal":0,"score":"31641403107","product_id":100035801,"comment_content":"通过redis存储计数的话，如果redis机器故障了怎么办呢？微博本身的信息是如何存储的呢，老师能相信讲解下吗","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478184,"discussion_content":"redis可以做主从，然后从从库恢复数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576735194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408368,"discussion_content":"丢的数据怎么办呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635236342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1474954,"avatar":"https://static001.geekbang.org/account/avatar/00/16/81/8a/15a96a64.jpg","nickname":"Gatsby","note":"","ucode":"5DBFDA12556BDB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406661,"discussion_content":"redis是写后日志，不能保证数据不丢吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634816917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047604,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","nickname":"何磊","note":"","ucode":"78934C3ED4A342","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":87771,"discussion_content":"redis是可以持久化的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576678570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162922,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1576631390,"is_pvip":false,"replies":[{"id":"62138","content":"就是需要改造一下redis，如果redis的数据写满了，就将比较旧的数据dump到磁盘上","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576735270,"ip_address":"","comment_id":162922,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27346435166","product_id":100035801,"comment_content":"老师好，想问下用redis的话该怎么用ssd配合做冷热数据存储呢，这块完全没经验，能讲讲具体的实现方案吗？","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478178,"discussion_content":"就是需要改造一下redis，如果redis的数据写满了，就将比较旧的数据dump到磁盘上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576735270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1755152,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VTPuhJb5xxuRwH1iblqrAe3De4PoETgNWibZRkLlhvszysdtpAvSPZFuYtsJfWJmoXOFFWnpR02W9NGIiammU8UPg/132","nickname":"Info_E","note":"","ucode":"97207B2CC4C776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365134,"discussion_content":"lru吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617715634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1253384,"avatar":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","nickname":"Dovelol","note":"","ucode":"9B5DDF7720F307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294951,"discussion_content":"查了一下，目前开源的实现有swapdb，pika。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596035414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294812,"discussion_content":"只是一个思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596007669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165909,"user_name":"grandcool","can_delete":false,"product_type":"c1","uid":1000037,"ip_address":"","ucode":"7545E76CE3FEFC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/65/f444ea39.jpg","comment_is_top":false,"comment_ctime":1577343927,"is_pvip":false,"replies":[{"id":"63256","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577348273,"ip_address":"","comment_id":165909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23052180407","product_id":100035801,"comment_content":"Redis为啥开始不搞long类型的key呢，是为了通用性吗","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479313,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577348273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163913,"user_name":"星空123","can_delete":false,"product_type":"c1","uid":1596920,"ip_address":"","ucode":"E998A7C585671B","user_header":"https://static001.geekbang.org/account/avatar/00/18/5d/f8/7de2c1cc.jpg","comment_is_top":false,"comment_ctime":1576825211,"is_pvip":false,"replies":[{"id":"63005","content":"多谢肯定～","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577196726,"ip_address":"","comment_id":163913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18756694395","product_id":100035801,"comment_content":"老师的课虽然代码比较少，但是说实话，实际业务场景里还是能我们不少优化的思路。","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478577,"discussion_content":"多谢肯定～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577196726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239768,"user_name":"Shine","can_delete":false,"product_type":"c1","uid":1184853,"ip_address":"","ucode":"BF3DB5ADF2B153","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ydVBBkofXDqCyP7pdwkicHZ9xtyEEuZvzrrkeWcnQjZ1ibEgG60eLotQTsKJFpWibuf6e7G9r0I1xaribUAQibPMl7g/132","comment_is_top":false,"comment_ctime":1596638100,"is_pvip":false,"replies":[{"id":"90317","content":"数据量大的情况下，计数很难百分百准确，可以看看微博的计数，很多是不准确的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1599009627,"ip_address":"","comment_id":239768,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14481539988","product_id":100035801,"comment_content":"请教一个问题，有些计数点进去是有具体数据列表的，比如评论数，计数在redis，数据在数据库，数据会不会不一致，如果引入分布式锁，会不会影响性能?","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503212,"discussion_content":"数据量大的情况下，计数很难百分百准确，可以看看微博的计数，很多是不准确的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599009627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165904,"user_name":"grandcool","can_delete":false,"product_type":"c1","uid":1000037,"ip_address":"","ucode":"7545E76CE3FEFC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/65/f444ea39.jpg","comment_is_top":false,"comment_ctime":1577343772,"is_pvip":false,"replies":[{"id":"63257","content":"类似","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577348281,"ip_address":"","comment_id":165904,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14462245660","product_id":100035801,"comment_content":"Pika是不是就是在Redis中改造了下逻辑，把旧的数据dump到SSD上了啊？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479312,"discussion_content":"类似","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577348281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221444,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1590500059,"is_pvip":false,"replies":[{"id":"83120","content":"面向C端的业务基本上不太可能select count吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591803696,"ip_address":"","comment_id":221444,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10180434651","product_id":100035801,"comment_content":"一般达到多大的数据规模，需要考虑单独提供计数器的功能呢？还是说针对某一类的计数？<br><br>我们大部分都是直接通过sql去数据库 select count，似乎目前也没什么问题","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496454,"discussion_content":"面向C端的业务基本上不太可能select count吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591803696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203039,"user_name":"tm1234","can_delete":false,"product_type":"c1","uid":1947612,"ip_address":"","ucode":"4042321C713186","user_header":"","comment_is_top":false,"comment_ctime":1586108785,"is_pvip":false,"replies":[{"id":"78251","content":"redis也是一致的呀","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587622596,"ip_address":"","comment_id":203039,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10176043377","product_id":100035801,"comment_content":"请问老师 mysql是支持强一致性的 但redis并不能，所以如果是对需要强一致性的计数场景（比如购物系统）是不是就不能放弃mysql完全使用redis呢？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490744,"discussion_content":"redis也是一致的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587622596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193473,"user_name":"SuperYue","can_delete":false,"product_type":"c1","uid":1232077,"ip_address":"","ucode":"97DEDA055C462A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","comment_is_top":false,"comment_ctime":1584899972,"is_pvip":false,"replies":[{"id":"73869","content":"是要手动补数据","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585012218,"ip_address":"","comment_id":193473,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10174834564","product_id":100035801,"comment_content":"老师 纯用redis，怎么解决事务的强一致性呢  比如转发和评论是一个事务性质的业务，转发的redis操作成功了，评论操作失败了 要手动补数据吗","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488565,"discussion_content":"是要手动补数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585012218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1947612,"avatar":"","nickname":"tm1234","note":"","ucode":"4042321C713186","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222269,"discussion_content":"请问老师 手动补数据是怎么实现的呢，是有一个专门的任务进程来做这个事情吗\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586108876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188663,"user_name":"好望角","can_delete":false,"product_type":"c1","uid":1061396,"ip_address":"","ucode":"E1B67245D054A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/32/14/5eaa10f6.jpg","comment_is_top":false,"comment_ctime":1584401895,"is_pvip":false,"replies":[{"id":"73101","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584590760,"ip_address":"","comment_id":188663,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10174336487","product_id":100035801,"comment_content":"原生redis改造是啥意思啊？改源代码嘛","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487479,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228576,"user_name":"小鱼儿吐泡泡","can_delete":false,"product_type":"c1","uid":1031710,"ip_address":"","ucode":"2B4AA532B2B066","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/1e/94886200.jpg","comment_is_top":false,"comment_ctime":1592741068,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5887708364","product_id":100035801,"comment_content":"有一个技术问题 想要请教下：<br><br>    需求：获取最近24小时内 点赞数 最多的top1000 的微博信息，更新间隔10分钟<br><br>注意：这个点赞数是24h 内的点赞数 ，如：微博a 24h之前是1000个点赞 最近24h内 是5个点赞 那么我们在计算时 需要以5 来进行计算 而非1005（1000+5）<br><br><br>我的想法是zset 保存最近24h内的微博id<br><br>然后每个微博id再维护一个zset来计数 score为时间戳 <br><br>请教下 老师 有更好的解决方案吗","like_count":1,"discussions":[{"author":{"id":1081265,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7f/b1/6418563f.jpg","nickname":"lose","note":"","ucode":"B8927A207A6B9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388872,"discussion_content":"扫描保存点赞数据的key，使用lua脚本，对每个key先removeBySocre(24小时之前的数据) 然后 zcard就可以了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629023231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215689,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1589078688,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5884045984","product_id":100035801,"comment_content":"这讲的不是一个系统完整的方案，更像是一种计数器的演进<br>1：放在MySQL中<br>2：放在MySQL＋redis中<br>3：全部放在redis中<br>4：把redis改造一下，精简存储空间，然后放在二次开发的redis中，我表示怀疑，正常来讲redis的作者应该做了这部分工作，再进行定制化可能是添加新的功能特性，如果还能精简存储空间，可以给redis提PR，否则估计不具有通用性，这里将改代码也不具体的<br>5：放到redis＋ssd中，又回到MySQL＋redis了，只是根据数据的冷热，分区域存储<br>我猜测MySQL＋redis能满足80%的需求，甚至更多，再有定制化的需求估计也有实力改一下redis的源码","like_count":1},{"had_liked":false,"id":206344,"user_name":"Geek_bd613f","can_delete":false,"product_type":"c1","uid":1343671,"ip_address":"","ucode":"69740C1D0FC15B","user_header":"","comment_is_top":false,"comment_ctime":1586844833,"is_pvip":true,"replies":[{"id":"78246","content":"没记错的话，len 和free是unsigned int，各4个字节","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587622419,"ip_address":"","comment_id":206344,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881812129","product_id":100035801,"comment_content":"老师你好，原生的 Redis 在存储 Key 时是按照字符串类型来存储的，比如一个 8 字节的 Long 类型的数据，需要 8（sdshdr 数据结构长度）+ 19（8 字节数字的长度）+1（’\\0’）=28 个字节，如果我们使用 Long 类型来存储就只需要 8 个字节，会节省 20 个字节的空间。<br><br>我查了下资料：<br><br>redis 的 key 按照字符串类型储存的时候， key 由  SDS 组成，SDS 由<br>len     字符串长度        1byt<br>alloc    分配的内存       1byt<br>flags\t\t是哪种实现    sdshdr4   8  16    1byt<br>char buf[]   字符数组用来储存    16byt<br><br>SDS 的大小是 19个字节, <br>老师你说：需要8（sdshdr数据结构长度）这个是什么意思呀？<br>是不是我 对 redis string 类型的储存实现理解有误呀，看了半天没理解这个地方。盼回复~","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491759,"discussion_content":"没记错的话，len 和free是unsigned int，各4个字节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587622419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181682,"user_name":"小洛","can_delete":false,"product_type":"c1","uid":1005062,"ip_address":"","ucode":"227EC21891012B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/06/ea49b29d.jpg","comment_is_top":false,"comment_ctime":1582615610,"is_pvip":false,"replies":[{"id":"71103","content":"1. 使用redis的话基本不会<br>2. 其实文中有讲到，主要是对redis的代码做了修改，去掉了一些不必要的数据结构，以及更改的存储结构","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583115286,"ip_address":"","comment_id":181682,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877582906","product_id":100035801,"comment_content":"两个问题咨下老师，第一个问题是相同微博id的计数数据放在一起，那在高并发更新下，会有性能问题吗，例如锁记录等，第二个问题是redis如何改造，才能不影响原本高效的查询性能，有进一步细节的分享么？谢谢老师","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485077,"discussion_content":"1. 使用redis的话基本不会\n2. 其实文中有讲到，主要是对redis的代码做了修改，去掉了一些不必要的数据结构，以及更改的存储结构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168069,"user_name":"y3","can_delete":false,"product_type":"c1","uid":1128084,"ip_address":"","ucode":"C93F8EC2AAACF6","user_header":"https://static001.geekbang.org/account/avatar/00/11/36/94/5aecb0ef.jpg","comment_is_top":false,"comment_ctime":1578010764,"is_pvip":false,"replies":[{"id":"66184","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1578727769,"ip_address":"","comment_id":168069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872978060","product_id":100035801,"comment_content":"请问老师，本文中提到对原生redis组件进行改造，是指的在redis源码上进行改造和定制吗？🤔️😄","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480125,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578727769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167198,"user_name":"梅小西","can_delete":false,"product_type":"c1","uid":1118196,"ip_address":"","ucode":"F55CC7763DF440","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/f4/026bddc6.jpg","comment_is_top":false,"comment_ctime":1577714464,"is_pvip":false,"replies":[{"id":"65169","content":"是这样的，这种方法是为了解决hash冲突的问题，也就是多个weibo_id有可能算出同一个哈希值。所以在存储信息的时候，需要也要存储微博的id，这样才能确定这个位置上到底存储的是哪一个微博ID","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577956186,"ip_address":"","comment_id":167198,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5872681760","product_id":100035801,"comment_content":"老师，有个地方没看懂。存数据的时候，我的理解是通过一定的hash把weiboid的位置找到，然后在数组响应的位置存入点赞数。但是在取数据的时候，你加了一个 t[pos]==weibo_id 。你这个t[pos]不是存的点赞数么，怎么又跟weibo_id来判断相不相等呢","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479777,"discussion_content":"是这样的，这种方法是为了解决hash冲突的问题，也就是多个weibo_id有可能算出同一个哈希值。所以在存储信息的时候，需要也要存储微博的id，这样才能确定这个位置上到底存储的是哪一个微博ID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577956186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1118196,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0f/f4/026bddc6.jpg","nickname":"梅小西","note":"","ucode":"F55CC7763DF440","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":191031,"discussion_content":"那老师这个大数组也是用redis做的吗？list？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582985301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163496,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1576731705,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5871699001","product_id":100035801,"comment_content":"redis改造这个还是有点难，redis加SSD做冷热数据分离，这个值得借鉴。","like_count":1},{"had_liked":false,"id":162904,"user_name":"程序水果宝","can_delete":false,"product_type":"c1","uid":1371633,"ip_address":"","ucode":"1700DDFE073A56","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","comment_is_top":false,"comment_ctime":1576630229,"is_pvip":false,"replies":[{"id":"62139","content":"这还好吧，hash计算基本上微秒级别吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576735295,"ip_address":"","comment_id":162904,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5871597525","product_id":100035801,"comment_content":"通过hash来分表，那每次查询的时候也要计算hash值才能知道去查哪张表，性能不会有影响吗？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478173,"discussion_content":"这还好吧，hash计算基本上微秒级别吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576735295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022247,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","nickname":"阿卡牛","note":"","ucode":"0BC43A904C3199","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":88743,"discussion_content":"相对于分表后带来的IO提升，这点CPU性能损失是完全值得的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576729054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350748,"user_name":"geek_arong2048","can_delete":false,"product_type":"c1","uid":1518310,"ip_address":"","ucode":"AB575BE100E4A9","user_header":"https://static001.geekbang.org/account/avatar/00/17/2a/e6/c788257f.jpg","comment_is_top":false,"comment_ctime":1657160691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657160691","product_id":100035801,"comment_content":"redis可以使用tikv进行替换，tikv基于rocksdb，会将数据存储在磁盘中","like_count":0},{"had_liked":false,"id":342846,"user_name":"码哥字节","can_delete":false,"product_type":"c1","uid":1572356,"ip_address":"","ucode":"362103AD52C8E0","user_header":"https://static001.geekbang.org/account/avatar/00/17/fe/04/bb427e47.jpg","comment_is_top":false,"comment_ctime":1650505709,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650505709","product_id":100035801,"comment_content":"HyperLogLog","like_count":0},{"had_liked":false,"id":310657,"user_name":"皇家救星","can_delete":false,"product_type":"c1","uid":1326106,"ip_address":"","ucode":"89F1274A3835FE","user_header":"https://static001.geekbang.org/account/avatar/00/14/3c/1a/1806ef25.jpg","comment_is_top":false,"comment_ctime":1630825992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630825992","product_id":100035801,"comment_content":"我们碰到的场景，计数要汇总，不知道怎么减少锁冲突。例如消费限额，要求客户有客户个人限额，系统还有多级的总限额（例如市级总限额，省级总限额，全国总限额），现在用户消费一次就要更改多条记录，累计已用限额，锁冲突比较严重。","like_count":0},{"had_liked":false,"id":310371,"user_name":"小胡","can_delete":false,"product_type":"c1","uid":2397964,"ip_address":"","ucode":"1E0DD4138E9D0E","user_header":"","comment_is_top":false,"comment_ctime":1630633916,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630633916","product_id":100035801,"comment_content":"最好能把计数系统整体的架构图或者说整体的流程图画一下就好了","like_count":0},{"had_liked":false,"id":310370,"user_name":"小胡","can_delete":false,"product_type":"c1","uid":2397964,"ip_address":"","ucode":"1E0DD4138E9D0E","user_header":"","comment_is_top":false,"comment_ctime":1630633844,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630633844","product_id":100035801,"comment_content":"时间久远的数据是如何写到磁盘的？异步写吗？","like_count":0},{"had_liked":false,"id":299997,"user_name":"莺歌蕾西","can_delete":false,"product_type":"c1","uid":1263009,"ip_address":"","ucode":"445AE78CF5C86B","user_header":"https://static001.geekbang.org/account/avatar/00/13/45/a1/d97c3e23.jpg","comment_is_top":false,"comment_ctime":1624950686,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1624950686","product_id":100035801,"comment_content":"文章中还提到因为考虑到数据不一致的问题，微博放弃了数据库+缓存的存储方式，针对评论数据，不仅有评论数量还有评论的详情列表，这样是不是也会导致外显的评论数与评论列表页的数量不一致？作者是怎样避免的？","like_count":0,"discussions":[{"author":{"id":2756576,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/e0/b53a7701.jpg","nickname":"骑车上天空","note":"","ucode":"364365E2721122","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583575,"discussion_content":"这种不一致业务上能接受吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660210509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299995,"user_name":"莺歌蕾西","can_delete":false,"product_type":"c1","uid":1263009,"ip_address":"","ucode":"445AE78CF5C86B","user_header":"https://static001.geekbang.org/account/avatar/00/13/45/a1/d97c3e23.jpg","comment_is_top":false,"comment_ctime":1624950386,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1624950386","product_id":100035801,"comment_content":"有个疑问想请教下作者，用于存储评论数、点赞数、转发数的数组是序列化之后存储到redis的吗？为什么不直接使用hash存储？","like_count":0},{"had_liked":false,"id":293527,"user_name":"牛味浓龙魏流","can_delete":false,"product_type":"c1","uid":1605322,"ip_address":"","ucode":"FB58F144635B2A","user_header":"https://static001.geekbang.org/account/avatar/00/18/7e/ca/0689da8f.jpg","comment_is_top":false,"comment_ctime":1621418812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621418812","product_id":100035801,"comment_content":"一直以来都被告诫不要把redis当做数据库来用，这篇文章又颠覆了我的认知","like_count":0},{"had_liked":false,"id":286667,"user_name":"沙漠之鹰","can_delete":false,"product_type":"c1","uid":1222887,"ip_address":"","ucode":"9FB290B874317F","user_header":"https://static001.geekbang.org/account/avatar/00/12/a8/e7/b86938a1.jpg","comment_is_top":false,"comment_ctime":1617466763,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617466763","product_id":100035801,"comment_content":"如果要统计月&#47;季度点赞&#47;分享趋势，是否要记录用户点赞事件了。这种需求如何保证高并发呢","like_count":0},{"had_liked":false,"id":264553,"user_name":"Geek_9c3134","can_delete":false,"product_type":"c1","uid":1141689,"ip_address":"","ucode":"479BC6B4CF22FA","user_header":"https://static001.geekbang.org/account/avatar/00/11/6b/b9/9b0630b1.jpg","comment_is_top":false,"comment_ctime":1606524346,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606524346","product_id":100035801,"comment_content":"老师  把相同微博 ID 的计数存储在一起  怎么做加减操作  是要自己加减完在设置吗","like_count":0},{"had_liked":false,"id":251527,"user_name":"请叫我和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1601644346,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1601644346","product_id":100035801,"comment_content":"把老的数据放在SSD磁盘上，如果考虑到SSD磁盘挂掉了，又如何做容灾兜底？","like_count":0},{"had_liked":false,"id":226110,"user_name":"daydaynobug","can_delete":false,"product_type":"c1","uid":1336773,"ip_address":"","ucode":"C6923405EB62BA","user_header":"https://static001.geekbang.org/account/avatar/00/14/65/c5/97003360.jpg","comment_is_top":false,"comment_ctime":1591953212,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591953212","product_id":100035801,"comment_content":"8位数字的长度为19指的是取值范围为19位，所以转成字符串占19字节吗","like_count":0},{"had_liked":false,"id":225109,"user_name":"小洛","can_delete":false,"product_type":"c1","uid":1005062,"ip_address":"","ucode":"227EC21891012B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/06/ea49b29d.jpg","comment_is_top":false,"comment_ctime":1591660553,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591660553","product_id":100035801,"comment_content":"有个问题请教下老师，如果Redis数据过期了，然后这时候很多请求来了，发现redis没数据了，是去ssd加载数据吗？高并发请求下，性能会有问题吗？","like_count":0,"discussions":[{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331480,"discussion_content":"这种情况指的就是缓存雪崩，流量全部到db层高并发下必然会出现瓶颈。\n考虑解决方案的话一般需要关注以下几点：\n1.设置key的过期时间增加随机数，让过期时间在一定周期内均匀分布\n2.DB层读请求限流，让一部分请求快速失败\n3.业务层限流\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606881685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":212459,"user_name":"高峰","can_delete":false,"product_type":"c1","uid":1046111,"ip_address":"","ucode":"2DFE77FE4970B8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/5f/85e82813.jpg","comment_is_top":false,"comment_ctime":1588127931,"is_pvip":false,"replies":[{"id":"83124","content":"业务场景不同吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591803919,"ip_address":"","comment_id":212459,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1588127931","product_id":100035801,"comment_content":"老师，可以不可以用 hyperloglog 用来计数 是不是消耗更小？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493510,"discussion_content":"业务场景不同吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591803919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099053,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c5/2d/1eebfc3c.jpg","nickname":"GaGi","note":"","ucode":"CC8D22E1DD8CA2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284788,"discussion_content":"hyperloglog统计uv用，有误差率，数据越大，数据误差就越明显","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592638552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168697,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1578142736,"is_pvip":false,"replies":[{"id":"66190","content":"类似吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1578731355,"ip_address":"","comment_id":168697,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578142736","product_id":100035801,"comment_content":"打卡。老师，你后面说的需要一个大数组来存储，是不是之前提到的布隆过滤器那种方式？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480302,"discussion_content":"类似吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578731355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167269,"user_name":"jun.hai","can_delete":false,"product_type":"c1","uid":1702947,"ip_address":"","ucode":"9740C5118DE6DC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epx1w8VkC30tcu4GlOCkUZB7picI2xesBBZF3rGWVPp9tHZfJdkc5iaqhSg7LOsvtefiajkM1YPno2JA/132","comment_is_top":false,"comment_ctime":1577754546,"is_pvip":false,"replies":[{"id":"65117","content":"这个主要是参考redis的实现","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577935635,"ip_address":"","comment_id":167269,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577754546","product_id":100035801,"comment_content":"老师，您好，对redis深度改造这块儿没太懂，如：“Key 是 8 字节 Long 类型的 weibo_id，Value 是 4 字节 int 类型的转发数，存储在 Redis 中之后会占用超过 70 个字节的空间”这块儿是怎么计算出来的？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479802,"discussion_content":"这个主要是参考redis的实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577935635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165474,"user_name":"xiaobao","can_delete":false,"product_type":"c1","uid":1249482,"ip_address":"","ucode":"0D39ADE07C9BC4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJV0t7NEwlq7iahuSyncBGYBffJOKTOZnqXnhorp47wGQdXLWj7pIoicIUtEgESIhIOHp5MrEYdyCvg/132","comment_is_top":false,"comment_ctime":1577242221,"is_pvip":false,"replies":[{"id":"63155","content":"就是要改一下redis的实现，原生的kv的key是string，现在改成long","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577275870,"ip_address":"","comment_id":165474,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577242221","product_id":100035801,"comment_content":"老师您好 “一是原生的 Redis 在存储 Key 时是按照字符串类型来存储的，比如一个 8 字节的 Long 类型的数据，需要 8（sdshdr 数据结构长度）+ 19（8 字节数字的长度）+1（’\\0’）=28 个字节，如果我们使用 Long 类型来存储就只需要 8 个字节，会节省 20 个字节的空间” long类型存储的话不也是 k-v结构吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479176,"discussion_content":"就是要改一下redis的实现，原生的kv的key是string，现在改成long","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577275870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163499,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1576731859,"is_pvip":false,"replies":[{"id":"62140","content":"不需要实时比对~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576735664,"ip_address":"","comment_id":163499,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576731859","product_id":100035801,"comment_content":"计数系统如何和业务系统保持一致性？不会少计数，需要核对数据吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478417,"discussion_content":"不需要实时比对~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576735664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162995,"user_name":"单行道","can_delete":false,"product_type":"c1","uid":1168105,"ip_address":"","ucode":"4EB42149B476FF","user_header":"https://static001.geekbang.org/account/avatar/00/11/d2/e9/c7a80d9f.jpg","comment_is_top":false,"comment_ctime":1576638594,"is_pvip":false,"replies":[{"id":"62132","content":"这个应该没有办法用计数器解决，计数器只能记录一个人获赞数是多少？<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576734993,"ip_address":"","comment_id":162995,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576638594","product_id":100035801,"comment_content":"计数器只存id的情况下，如果有按人维度查询的需求怎么办，比如查一定时间获赞数最多的人？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478205,"discussion_content":"这个应该没有办法用计数器解决，计数器只能记录一个人获赞数是多少？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576734993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162982,"user_name":"台风骆骆","can_delete":false,"product_type":"c1","uid":1170748,"ip_address":"","ucode":"891D3599644ABD","user_header":"https://static001.geekbang.org/account/avatar/00/11/dd/3c/a595eb2a.jpg","comment_is_top":false,"comment_ctime":1576637388,"is_pvip":true,"replies":[{"id":"62133","content":"谢谢~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576735115,"ip_address":"","comment_id":162982,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1576637388","product_id":100035801,"comment_content":"老师，请以后多出些专栏，每次看你的专栏都有火花出来","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478197,"discussion_content":"谢谢~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576735115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1413499,"avatar":"https://static001.geekbang.org/account/avatar/00/15/91/7b/2dd4d0c1.jpg","nickname":"大鸡腿🍗","note":"","ucode":"38AF8AE00F6166","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":87554,"discussion_content":"我想知道火花在哪里，提出你的见解才能有火花","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576672953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}