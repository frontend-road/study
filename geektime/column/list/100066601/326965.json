{"id":326965,"title":"08 | 算法全景图：AI产品经理必须要懂的算法有哪些？","content":"<p>你好，我是海丰。</p><p>从今天开始，我们正式进入算法技术能力篇的学习。在正式开始学习之前，我想先给你讲一个我亲身经历过的小故事。</p><p>我最开始做 AI 项目的时候，碰到过一个预测员工离职可能性的产品需求。当时，因为我对算法技术不熟悉，所以我只告诉算法工程师，我们要做一个预测员工离职的模型。因此，算法同学按照自己的理解，把它做成了一个预测员工可能离职的排序，而不是离职的概率。</p><p>很显然，这个模型和业务方的原始诉求是有出入的。但是，当我去说服算法工程师修改模型的时候，却被他说“你自己先搞清楚算法能做什么、不能做什么，再来和我谈”。后来我才知道，他的模型是按照回归的方式做的，得到的结果是未来预计离职的天数，最后自然是按照天数来做排序。</p><p>这件事也让我下定决定去学习算法技术，不说要学得多么精通，至少要知道常用算法的实现逻辑和应用场景，这也是我在算法技术能力篇要给你讲的。<strong>这样一来，当你和算法同学协作的时候，能够减少很多沟通成本，知道如何给算法工程师提需求，能和他们同频沟通，就算是要对模型结果进行争执，也能更有底气</strong>。</p><h2>机器学习分类</h2><p>这节课，我会先带你从宏观上了解目前机器学习的三大类应用场景，分别是分类问题、回归问题、聚类问题，以及怎么用相关算法来处理这些问题，最后帮你梳理一张 AI 产品经理需要掌握的算法技术全景图。这样，我们后面再去学习具体的算法，就能有一个更清晰的学习路径了。</p><!-- [[[read_end]]] --><p>这里，我先把分类、聚类和回归问题的定义总结在了下面的表格里，你可以先看看，对它们有个整体印象。</p><p><img src=\"https://static001.geekbang.org/resource/image/fb/1c/fb4850b6c2274528b9fd5f46cdd5ac1c.jpeg?wh=1920*1000\" alt=\"\"></p><p>有了印象之后，我们再结合具体的例子，来讲讲这些场景问题是怎么用相关算法解决的。</p><h2>处理分类问题的算法</h2><p>在实际工作中，我们遇到最多的问题就是分类问题，分类问题经常出现在分类判断、标签预测、行为预测这些场景中。</p><p>比如说，你现在是一个电商产品经理，有商城全部用户的历史行为数据，以及用户A、B、C、D的性别数据，希望预测商城其他用户的性别，可能是用户E。</p><p><img src=\"https://static001.geekbang.org/resource/image/f1/fa/f1d5e84a17d5514fd8ae6e1a394579fa.jpeg?wh=1920*1000\" alt=\"\"></p><p>这就是一个很经典的分类问题，这个问题的预测结果就是男性或者女性。<strong>像这种判断一个事情的结果是“男/女”、“是/否”、“1/0”的问题就是二分类问题。</strong></p><p>不过，如果我把已知条件变换一下：你现在有商城全部用户的历史行为数据，以及用户A、B、C、D的婚姻状况数据，希望预测商城其他用户的婚姻状况。这个时候，预测的结果就是未婚、已婚或者是离异了，<strong>像这种预测结果是多种情况的，就是多分类问题。</strong></p><p>那分类问题怎么解决呢？我们再回到刚才这个例子中。结合上面的表格，我们可以看到，已知性别的用户会呈现出来一种规律，就是女性浏览美妆品类次数远高于浏览数码类页面次数，而男性会呈现出相反的趋势。</p><p><img src=\"https://static001.geekbang.org/resource/image/dd/4e/dd9debecd79391f544cfb86e9e88874e.png?wh=1640*986\" alt=\"\"></p><p>我们可以把性别和浏览页面次数呈现到一个图里，然后将用户浏览美妆品类页面，数码品类页面次数录入。这个时候，你会发现用户 E 和用户 A、C 离得很近，从数学的角度来看，距离越近就越相似，所以我们大概率认为 E 的性别应该和 A、C 一样，是女性。这就是分类问题的解决过程。</p><p>在机器学习的场景中，分类算法解决分类问题也是利用相似的原理，可用的算法非常多，常见的有逻辑回归、朴素贝叶斯、决策树、随机森林、K 近邻、支持向量机，以及神经网络等等。</p><p>总的来说，使用分类算法解决问题，我们必须要有已知的训练数据，才能对未知数据进行预测。当已知信息缺失的时候，我们又该怎么办呢？这个时候，我们要么考虑通过人工打标来处理数据，要么考虑使用<strong>聚类算法</strong>。这就是我接下来要讲的聚类问题的处理逻辑了。</p><h2>处理聚类问题的算法</h2><p>在机器学习中，我们经常需要给一些数据量很大，用户属性很多的用户数据进行分组，但往往很难下手。</p><p>我还是代入一个例子来给你讲讲，假设，你现在是一个客服系统负责人，为了减轻人工客服的压力，想把一部分常见的问题交给机器人来回复。解决这件事情的前提，就是我们要对用户咨询的商品问题先进行分组，找到用户最关心的那些问题。</p><p>这种需要根据用户的特点或行为数据，对用户进行分组，让组内数据尽可能相似的的问题，就属于聚类问题，用一个词概括它的特点就是 “物以类聚”。常见的聚类算法有层次聚类、原型聚类（K-means）、密度聚类（DBSCAN）。</p><p>那聚类问题该怎么解决呢？我们接着刚才的例子来说，假设我们现在有5条如下的咨询：</p><ul>\n<li>小爱同学和小爱音响有什么区别 ？</li>\n<li>小爱同学和小爱音响都是小米的吗 ？</li>\n<li>小米的蓝牙耳机怎么连接 ？</li>\n<li>华为路由器和小米路由器哪个可以在校园网内使用 ？</li>\n<li>一定要小米路由器才能用吗 ？</li>\n</ul><p>如果我们把每句话都看成单独的小组，这一共就是5个小组，那我们的目标就是把相似的问题合并成一个小组。最简单的办法，就是找出每个小组中的名词，把“各句中包含的名词一致的数量”看作“相似度”。这样一来，相同名词数量最多的两个句子就是最相似的。</p><p>按照这个思路，我把这 5 个句子中含有的名词都整理到了下面的表中，并用 “O” 进行了标记。</p><p><img src=\"https://static001.geekbang.org/resource/image/fc/6a/fc781d43b735fdbb955069de0f9acc6a.jpeg?wh=1920*990\" alt=\"\"></p><p>这样，我们就能算出每一个句子和其他4句之间的相似度了。</p><ul>\n<li>“句子 1”和“句子 2、3、4、5”的相似度分别是 2、0、0、0。</li>\n<li>“句子 2”和“句子 3、4、5”的相似度是 1、0、0。</li>\n<li>“句子 3”和“句子 4、5”的相似度是 0、0。</li>\n<li>“句子 4”和“句子 5”的相似度是 1。</li>\n</ul><p>这样，我们也就能得出：最相似的小组是相似度为 2 的“句子 1”和“句子 2”，我们把这两个句子合并之后，5 个小组就变成了 4 个小组：</p><ul>\n<li>“小组 1”：“句子 1”和“句子 2”</li>\n<li>“小组 2”：“句子 3”</li>\n<li>“小组 3”：“句子 4”</li>\n<li>“小组 4”：“句子 5”</li>\n</ul><p>然后，我们再按照上面同样的方式把新生成的各小组进行聚类，就又会得到两个相似度为 1 的小组：</p><ul>\n<li>“小组 5”：“句子 1” 、“句子 2”和“句子 3”</li>\n<li>“小组 6”：“句子 4”和“句子 5”</li>\n</ul><p>就这样，当我们把所有相似的句子聚类到一起，就完成了聚类的过程。其实，聚类算法的原理很简单，就是根据样本之间的距离把距离相近的聚在一起。刚才，我是通过句子中的名词是否相同来衡量距离的，那在实际应用场景里，衡量样本之间距离关系的方法会更复杂，可能会用语义相似度、情感相似度等等。</p><p>同时，这个聚类的过程可以表示成带有层次的树形结构图，这就是层次聚类算法的原理也是它名字的由来。这种聚类方式可以是“自底向上”的聚合策略，也可以是“自顶向下”的分拆策略 。</p><p><img src=\"https://static001.geekbang.org/resource/image/96/0b/966ef77dfce7d98778d41aebe8eb900b.jpeg?wh=1920*951\" alt=\"\" title=\"层次聚类\"></p><p>总之，聚类算法解决问题的核心思想就是“<strong>物以类聚，人以群分</strong>”，所以，聚类分析较为重要的一个应用就是用户画像。</p><p>我们刚才说了，分类问题和聚类问题的差异在于分类问题需要根据已知的数据去学习，然后为新的数据进行预测，而聚类分析直接在已有数据中发现联系。但它们还存在着一个共同点，那就是它们都输出的是 “0” 或 “1” 这种<strong>离散型的标签</strong>。</p><p>离散型的标签指的就是非连续的一个个单独的标签。比如说，一个人的年收入可能是从几万到几千万这样的连续性值，但是如果我们将年收入的具体数值转化成低收入、中等收入、高收入、超高收入这些档，每一个档就是一个离散型的标签。</p><p>但有时候，我们在项目中确实需要预测一个具体的连续性数值，比如酒店的价格或股票的价格。遇到这类问题我们该怎么办呢？这个时候，我们就可以通过解决回归问题的算法来实现了。</p><h2>处理回归问题的算法</h2><p>在实际工作中，我们也经常会遇到回归问题，比如需要预测某个商品未来的销量，预测某只股票未来的价格等等。</p><p>下面我就通过一个预测销量调整库存的例子，来讲讲回归算法中线性回归的解题过程。</p><p>有这样的一个场景，你是一个电商产品经理，你们公司每件商品的库存都是通过预测未来产品的销量来动态调整的。这个功能的实现方式是，先根据商城 App 分析出用户的商品搜索次数，然后将每个商品的搜索次数和销量做数据分析，画出一个横轴为搜索次数，纵轴为销量的二维散点图。</p><p><img src=\"https://static001.geekbang.org/resource/image/d3/0b/d3dcf811d6198971b7ae08273e61200b.jpeg?wh=1920*1080\" alt=\"\"></p><p>我们以搜索小米路由器举例，从上图我们可以看到，相对密集的搜索次数都在1000次以下，当搜索次数超过1000次以后，散点变得稀疏起来。这样一来，我们就能根据数据拟合出一条回归直线。</p><p>这条回归直线上，因为销量和搜索次数成正比，所以它们都可以用<strong>一元回归方程来表示</strong>。如果我们假设影响销量的因素只有搜索次数这一个特征，那么在有了新产品和它的搜索次数之后，我们根据一元回归方程，就可以预测出新产品的销量了。</p><p>这个时候有的同学可能想说，“用户搜索次数虽然会影响销量，但我认为用户评价和库存也会影响销量啊”。接下来，我们就一起来验证一下这个假设。我们将库存、用户评价作为影响销量的两个因素，去分析它们之间的关系。</p><p><img src=\"https://static001.geekbang.org/resource/image/60/65/60aa1785ef18bc2339aba6a01df33a65.jpeg?wh=1920*938\" alt=\"\"></p><p>如上图所示，当库存小于 40% 的时候，用户评价和销量都很低，当库存大于 80% 的时候，用户评价和销量呈线性增长。我们发现，用户评价和库存共同影响了产品销量，只有当库存大于 80% 且用户评价高于 0.6 的时候，产品才有较好的销量。因此，这三者之间的关系可以用<strong>二元回归方程</strong>进行量化。</p><p>当然，实际情况是像服务态度、物流时间、折扣力度、广告宣传、购物体验这些因素，它们也会或多或少地影响销量。我们可以把<strong>这些因素也就是n个特征，都总结到同一个回归方程中</strong>，用<strong>多元回归方程</strong>表示，具体的公式如下：</p><p>$$<br>\n\\text { 销量 }=a_{0}+a_{1} * \\text { 搜索次数 }+a_{2} * \\text { 用户评价 }+a_{3} * \\text { 库存 }+a_{4} * \\text { 折扣力度 }+\\cdots a_{n} * \\text { 广告宣传 }<br>\n$$</p><p>通过这样的方式，我们就可以轻易地预测每种产品的未来销售，进而可以动态地规划库存和物流。当然，回归算法能做的还有很多，比如预测不同促销组合产生的盈利进而确定促销活动，预测广告的投入量进而估算盈利额等等。</p><p>对于产品经理来说，我们需要清楚的知道线性回归的原理，熟悉回归算法能解决的情况，比如它适合用来预测价格、销量，这类结果是连续值的问题。</p><h2>总结</h2><p>今天，我结合三大类问题，给你讲了三大类常见算法和它们的应用场景。为了方便你的记忆，我把重点内容整理成了一张知识脑图，你可以去文稿中看一看，这里我就不重复了。</p><p><img src=\"https://static001.geekbang.org/resource/image/12/32/127e681af48b78de40422e32dcfef932.jpg?wh=7890*7036\" alt=\"\"></p><p>这里，我还想结合这三类算法，再给你举几个常见的应用场景，因为知道什么场景下使用什么算法来解决是我们最需要掌握的。</p><p>如果你希望知道你的用户会不会购买某个商品，你的用户在你们平台借款之后会不会不还钱，或者你想知道你的用户会不会购买你们平台的会员卡，这些就属于分类问题了，你们的算法工程师可能会选择逻辑回归，决策树来实现你的需求。</p><p>如果你希望知道你们平台某个商品未来的价格，预测你们小区未来某个时间点的房价，或者预测一下你的用户收入情况是多少，你们的算法工程师可能会选择使用回归算法来解决这些回归问题。</p><p>如果你想做一个用户画像体系，对用户进行分组打标签，这就属于聚类分析的领域了，你们算法工程师可以选择层次聚类，原型聚类等算法来实现你的需求。</p><p>当然，算法分类的方式不止一种，我们也可以按照建模时候有没有标签，把它们分成有监督、无监督和半监督算法。我之所以选择根据应用场景来分类，是因为你作为一个产品经理，应该关注的是，如何通过技术（算法）来解决业务场景中遇到的问题。</p><h2>课后讨论</h2><p>如果我们要做一个预测用户未来能不能复购的模型，你觉得这属于什么问题，哪种算法可以解决呢？</p><p>期待在留言区看到你的设计和思考，我们下节课见！</p>","comments":[{"had_liked":false,"id":272879,"user_name":"橙gě狸","can_delete":false,"product_type":"c1","uid":2383132,"ip_address":"","ucode":"18E16657D15D0E","user_header":"https://static001.geekbang.org/account/avatar/00/24/5d/1c/f2d45010.jpg","comment_is_top":false,"comment_ctime":1610344174,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"143344264942","product_id":100066601,"comment_content":"有两种思考角度：<br>1）仅仅分析是否会复购，进而预测与复购率相关的其他指标，那既可以是【分类问题】，也可以是【回归问题】，取决于后续用途。<br>2）从业务角度出发，肯定是希望能提高复购率，那基于这个目的，我们更加希望了解到的是，会复购的用户和不会复购的用户各自存在什么特征，这里应该用到【聚类算法】，找到会复购的用户特征是什么，并围绕着这些特征，通过运营手段让不会复购的用户逐步拥有这些特征，以提高整体复购率。","like_count":34,"discussions":[{"author":{"id":3013678,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/fc/2e/d91f37af.jpg","nickname":"Esther","note":"","ucode":"69C5D391CEEC54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575249,"discussion_content":"那其实是两个模型了吧，时间就得加上去，还是优先问业务方是判断，还是给用户画像","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654685683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270857,"user_name":"吴洋","can_delete":false,"product_type":"c1","uid":1730367,"ip_address":"","ucode":"0BF431784B5041","user_header":"https://static001.geekbang.org/account/avatar/00/1a/67/3f/72e9a6ab.jpg","comment_is_top":false,"comment_ctime":1609303635,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31674074707","product_id":100066601,"comment_content":"课后讨论<br>可以用分类问题的算法得出要么复购要么不复购<br>也可以用逻辑回归算法得出用户复购的概率","like_count":7,"discussions":[{"author":{"id":2586334,"avatar":"https://static001.geekbang.org/account/avatar/00/27/76/de/922aaaf4.jpg","nickname":"蓝白胖子","note":"","ucode":"90510453819687","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370397,"discussion_content":"有点道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619399916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270810,"user_name":"悠悠","can_delete":false,"product_type":"c1","uid":1565954,"ip_address":"","ucode":"95412C0294287B","user_header":"https://static001.geekbang.org/account/avatar/00/17/e5/02/ffc27f1b.jpg","comment_is_top":false,"comment_ctime":1609288003,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18789157187","product_id":100066601,"comment_content":"课后讨论<br>要么能复购，要么不能复购，是二分类问题。<br>逻辑回归、朴素贝叶斯，决策树，随机森林，k近邻，支持向量机，神经网络这些分类算法应该都可以用","like_count":5},{"had_liked":false,"id":338742,"user_name":"momo","can_delete":false,"product_type":"c1","uid":2877028,"ip_address":"","ucode":"1963DE54E899DB","user_header":"https://static001.geekbang.org/account/avatar/00/2b/e6/64/c26d4243.jpg","comment_is_top":false,"comment_ctime":1647697596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10237632188","product_id":100066601,"comment_content":"1、判断会不会复购，那么就是分类问题，对应的算法逻辑回归、朴素贝叶斯、决策树、随机森林、支持向量机、神经网络；<br>2、复购的前置条件，是发生过一次购买行为，所以如果为了提升复购，还需要将发生过购买行为的用户进行聚类，找出特征用户和关键行为。给运营提供参考。","like_count":3},{"had_liked":false,"id":329805,"user_name":"有机体","can_delete":false,"product_type":"c1","uid":2787003,"ip_address":"","ucode":"EA07F783DD7D56","user_header":"https://static001.geekbang.org/account/avatar/00/2a/86/bb/9956e057.jpg","comment_is_top":false,"comment_ctime":1641545582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5936512878","product_id":100066601,"comment_content":"预测用户的性别是个多分类问题^_^<br>1、男<br>2、女<br>3、男性化的女性<br>4、女性化的男性<br>5、深柜男<br>6、深柜女","like_count":1},{"had_liked":false,"id":297564,"user_name":"小赖是个憨憨🐛","can_delete":false,"product_type":"c1","uid":2653880,"ip_address":"","ucode":"3852BBFFF91FF7","user_header":"https://static001.geekbang.org/account/avatar/00/28/7e/b8/69d840ad.jpg","comment_is_top":false,"comment_ctime":1623637772,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5918605068","product_id":100066601,"comment_content":"用户评价和库存影响销量的分析图没看明白","like_count":1,"discussions":[{"author":{"id":2787003,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/86/bb/9956e057.jpg","nickname":"有机体","note":"","ucode":"EA07F783DD7D56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544993,"discussion_content":"1、先俯视分析图，不看评价坐标轴，库存百分比越低，离散点分布密度越高，说明库存越低，销量越高；2、再正视分析图，不看库存坐标轴，评价系数越低，离散点分布密度越搞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641797327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2657186,"avatar":"https://static001.geekbang.org/account/avatar/00/28/8b/a2/7115b18b.jpg","nickname":"热寂","note":"","ucode":"6274A4196A0363","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2787003,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/86/bb/9956e057.jpg","nickname":"有机体","note":"","ucode":"EA07F783DD7D56","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572881,"discussion_content":"方法有借鉴意义，可我仍然无法yy出俯视看到的现象😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653027772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":544993,"ip_address":""},"score":572881,"extra":""}]},{"author":{"id":1402435,"avatar":"https://static001.geekbang.org/account/avatar/00/15/66/43/c48c0c0e.jpg","nickname":"冯广","note":"","ucode":"B8B780C2AE34E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536378,"discussion_content":"从图上看，库存影响有限\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638774258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":273463,"user_name":"Yesss!","can_delete":false,"product_type":"c1","uid":2369631,"ip_address":"","ucode":"5358CDA01F3773","user_header":"https://static001.geekbang.org/account/avatar/00/24/28/5f/3f40169c.jpg","comment_is_top":false,"comment_ctime":1610605788,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5905573084","product_id":100066601,"comment_content":"首先，这是分类问题，用户能&#47;不能复购。这是二分类型的问题。算法同学可能会根据逻辑回归、决策树、随机森林、朴素贝叶斯、K近邻算法、支持向量机等算法来实现这个需求<br>","like_count":2},{"had_liked":false,"id":352235,"user_name":"indreax","can_delete":false,"product_type":"c1","uid":2586327,"ip_address":"","ucode":"53FA2E31DFF522","user_header":"https://static001.geekbang.org/account/avatar/00/27/76/d7/6805406f.jpg","comment_is_top":false,"comment_ctime":1658472919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658472919","product_id":100066601,"comment_content":"根据航班、日期等预测机场人流量选取那个算法比较好","like_count":0},{"had_liked":false,"id":347318,"user_name":"Jay","can_delete":false,"product_type":"c1","uid":1070670,"ip_address":"","ucode":"ED9970F7E66080","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/4e/9291fac0.jpg","comment_is_top":false,"comment_ctime":1653919434,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1653919434","product_id":100066601,"comment_content":"虽然讲的很好，但能力有限，看得不是很明白，请问老师有交流群吗","like_count":0},{"had_liked":false,"id":346341,"user_name":"热寂","can_delete":false,"product_type":"c1","uid":2657186,"ip_address":"","ucode":"6274A4196A0363","user_header":"https://static001.geekbang.org/account/avatar/00/28/8b/a2/7115b18b.jpg","comment_is_top":false,"comment_ctime":1653034633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653034633","product_id":100066601,"comment_content":"分类问题可以用的算法里面有一个“逻辑回归”，它跟回归问题这个大类有什么联系和区别？","like_count":0},{"had_liked":false,"id":346339,"user_name":"热寂","can_delete":false,"product_type":"c1","uid":2657186,"ip_address":"","ucode":"6274A4196A0363","user_header":"https://static001.geekbang.org/account/avatar/00/28/8b/a2/7115b18b.jpg","comment_is_top":false,"comment_ctime":1653034253,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653034253","product_id":100066601,"comment_content":"老师好，不太明白分类和聚类为什么对于数据量要求上会有差别","like_count":0},{"had_liked":false,"id":345129,"user_name":"Leon","can_delete":false,"product_type":"c1","uid":1474852,"ip_address":"","ucode":"BF3E4EE2D65F1A","user_header":"https://static001.geekbang.org/account/avatar/00/16/81/24/e51787f2.jpg","comment_is_top":false,"comment_ctime":1652068905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652068905","product_id":100066601,"comment_content":"对于问题：<br>1，核心是用户，特征是是否持续复购；<br>需要前提是，找到哪些用户，是会复购的——找出背后的特征值，需要分类算法；<br>找到特征后，在匹配当前用户，用回归算法，找出复购的概率。<br><br><br>这里应该用分类算法，","like_count":0},{"had_liked":false,"id":341775,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1649830193,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1649830193","product_id":100066601,"comment_content":"抄一下算法清单：<br><br>分类：K近邻算法 KNN、朴素贝叶斯 NaiveBayes, NB、决策树 Decision Tree Model, DT、随机森林 Random Forest, RF、支持向量机 SVM<br>聚类：层次聚类 Hierarchical Clustering、原型聚类 K-means、密度聚类 DBSCAN<br>回归：一元线性回归、多元线性回归<br><br>如果我关心的是自然语言处理、知识图谱、知识问答之类的应用，可能更多的偏向分类问题；如果是下棋类的智能应用呢？从名字上看，决策树和随机森林比较合适，似乎也是分类。<br><br>当然，更多的可能是多种算法的综合运用。","like_count":0},{"had_liked":false,"id":333105,"user_name":"Lucky dog","can_delete":false,"product_type":"c1","uid":1554053,"ip_address":"","ucode":"ED6FE0FFC88B74","user_header":"https://static001.geekbang.org/account/avatar/00/17/b6/85/06b93852.jpg","comment_is_top":false,"comment_ctime":1644071895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644071895","product_id":100066601,"comment_content":"要做一个预测用户未来能不能复购的模型：<br>（1）当有足够多的历史数据时，是一个多分类问题：现根据历史数据做一个模型，再将新用户放入该模型，如果该用户的特征和会复购的用户相似的话，则该用户会复购；如果该用户的特征和不会复购的用户相似，则不会复购；<br>（2）当历史数据不够多时，则是一个聚类问题：可以先定义一些会复购&#47;不会复购的用户的数据特征，再分析新用户的各项特征值，如果新用户和会复购的用户特征值相似的数量多，则属于会复购用户，否则相反。","like_count":0},{"had_liked":false,"id":328834,"user_name":"weiwei","can_delete":false,"product_type":"c1","uid":2429591,"ip_address":"","ucode":"8AF2A0BD93010C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ5sXrTGCq7nlvg8bBzjWtgFU0bXnSiangWBF6Uss3lfnyHeEaplKDBaWWZQNMvhQVxLXyrEEw7rNw/132","comment_is_top":false,"comment_ctime":1640916259,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640916259","product_id":100066601,"comment_content":"如果我们要做一个预测用户未来能不能复购的模型，你觉得这属于什么问题，哪种算法可以解决呢？<br><br>属于分类问题。可以用 贝叶斯，knn,逻辑回归，决策树，随机深林，深度学习等算法","like_count":0},{"had_liked":false,"id":311942,"user_name":"夏日🍉情缘","can_delete":false,"product_type":"c1","uid":2755497,"ip_address":"","ucode":"0BD258E390E537","user_header":"https://static001.geekbang.org/account/avatar/00/2a/0b/a9/ccacdd57.jpg","comment_is_top":false,"comment_ctime":1631540373,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631540373","product_id":100066601,"comment_content":"这个属于基本的：分类问题；当然前提是有一些基数数据：","like_count":0},{"had_liked":false,"id":309082,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1629937359,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629937359","product_id":100066601,"comment_content":"分类、聚类、回归都可以解决这个问题。<br>1、分类：通过已有数据分类出复购的特征标签组不复购的特征标签组，然后根据标签组进行预测<br>2、聚类：通过特征标签和复购标签和不复购标签之间的举例进行聚类，同样是根据聚类出标签组进行预测<br>3、回归：通过回归确定特征便签变化和复购率之间的线性关系变化趋势，通过组合多元回归进行预测，找出准确的复购率高的各特征标签指标区间。","like_count":0},{"had_liked":false,"id":297563,"user_name":"小赖是个憨憨🐛","can_delete":false,"product_type":"c1","uid":2653880,"ip_address":"","ucode":"3852BBFFF91FF7","user_header":"https://static001.geekbang.org/account/avatar/00/28/7e/b8/69d840ad.jpg","comment_is_top":false,"comment_ctime":1623637664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623637664","product_id":100066601,"comment_content":"如果是想要得出会不会复购就是分类问题<br>如果想要得到什么情况下，可以将用户从不复购改变成复购就是回归问题。","like_count":0},{"had_liked":false,"id":293891,"user_name":"Kyle","can_delete":false,"product_type":"c1","uid":1456466,"ip_address":"","ucode":"C54F9A93D9ADBB","user_header":"https://static001.geekbang.org/account/avatar/00/16/39/52/56db4c4d.jpg","comment_is_top":false,"comment_ctime":1621589438,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621589438","product_id":100066601,"comment_content":"大家都是怎么学习这些算法的呢","like_count":0},{"had_liked":false,"id":292788,"user_name":"Geek_c186b1","can_delete":false,"product_type":"c1","uid":2465472,"ip_address":"","ucode":"F57A0CEE2CAFAA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLGXoK2S3T1ibxu25bnBVekP1vNFf20hs2btxvfjFUgy9OC8lZvqlIg7S9wrRepFPeicUSuhxvhJTiaA/132","comment_is_top":false,"comment_ctime":1620978323,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620978323","product_id":100066601,"comment_content":"是否复购,我理解的是回归问题,一元线性回归,多元线性回归的算法","like_count":0},{"had_liked":false,"id":291489,"user_name":"Ted","can_delete":false,"product_type":"c1","uid":1395162,"ip_address":"","ucode":"89A8202074C0B7","user_header":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","comment_is_top":false,"comment_ctime":1620305858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620305858","product_id":100066601,"comment_content":"预测用户未来能不能复购的模型，属于分类问题。<br><br>可以选择如下算法来解决分类问题：<br>1. 逻辑回归<br>2. 朴素贝叶斯<br>3. 决策树<br>4. 随机森林<br>5. k近邻<br>6. 支持向量机SVM<br>7. 神经网络","like_count":0},{"had_liked":false,"id":291488,"user_name":"Ted","can_delete":false,"product_type":"c1","uid":1395162,"ip_address":"","ucode":"89A8202074C0B7","user_header":"https://static001.geekbang.org/account/avatar/00/15/49/da/8b4e1408.jpg","comment_is_top":false,"comment_ctime":1620305512,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620305512","product_id":100066601,"comment_content":"分类问题和聚类问题的差异在于分类问题需要根据已知的数据去学习，然后为新的数据进行预测，而聚类分析直接在已有数据中发现联系","like_count":0},{"had_liked":false,"id":291466,"user_name":"进击的土豆","can_delete":false,"product_type":"c1","uid":1948043,"ip_address":"","ucode":"52249892A6C203","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b9/8b/d0763d9a.jpg","comment_is_top":false,"comment_ctime":1620297104,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620297104","product_id":100066601,"comment_content":"老师，二元回归方程的三位图没看懂，库存、用户评价、销量散落在一个平面上吗？","like_count":0},{"had_liked":false,"id":289992,"user_name":".Jonee","can_delete":false,"product_type":"c1","uid":2582572,"ip_address":"","ucode":"CB0FD26FFB9557","user_header":"https://static001.geekbang.org/account/avatar/00/27/68/2c/c9d2ee56.jpg","comment_is_top":false,"comment_ctime":1619312105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619312105","product_id":100066601,"comment_content":"分类问题，使用回归算法","like_count":0},{"had_liked":false,"id":289923,"user_name":"Coscamy DD","can_delete":false,"product_type":"c1","uid":2574518,"ip_address":"","ucode":"4C0CC2D9661D03","user_header":"https://static001.geekbang.org/account/avatar/00/27/48/b6/820ecda0.jpg","comment_is_top":false,"comment_ctime":1619265629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619265629","product_id":100066601,"comment_content":"课后讨论：分类问题。（二分类）<br>根据已有用户数据及复购结果预测新数据的复购结果。具体算法还需要继续向下学习。","like_count":0},{"had_liked":false,"id":283031,"user_name":"Rosa rugosa","can_delete":false,"product_type":"c1","uid":1480782,"ip_address":"","ucode":"A26068A69D7E9B","user_header":"https://static001.geekbang.org/account/avatar/00/16/98/4e/f42d27e8.jpg","comment_is_top":false,"comment_ctime":1615527362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615527362","product_id":100066601,"comment_content":"分类问题，可以用回归模型计算复购率，然后定一个阈值，大于等于阈值判定为会复购，小于阈值判定为不会复购。也可以直接用分类的算法如朴素贝叶斯，K近邻，支持向量机，神经网络，决策树，随机森林，逻辑回归。","like_count":0},{"had_liked":false,"id":274935,"user_name":"BAYBREEZE","can_delete":false,"product_type":"c1","uid":2383379,"ip_address":"","ucode":"99D8A22764D439","user_header":"https://static001.geekbang.org/account/avatar/00/24/5e/13/7159baba.jpg","comment_is_top":false,"comment_ctime":1611222007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611222007","product_id":100066601,"comment_content":"二分类，支持向量机SVM算法","like_count":0},{"had_liked":false,"id":270855,"user_name":"术子米德","can_delete":false,"product_type":"c1","uid":1898023,"ip_address":"","ucode":"382EA7E2AF0B56","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","comment_is_top":false,"comment_ctime":1609303322,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1609303322","product_id":100066601,"comment_content":"🤔☕️🤔☕️🤔<br>从时间上看，根据过去预测未来，这是回归<br>从空间上看，一大堆东西里，挑选出来，这是分类，把挑选出来的类似，再组合成不同类型的组，这是聚类，<br>老师，这么理解算法应用，如何？","like_count":0,"discussions":[{"author":{"id":1756787,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ce/73/551f7b09.jpg","nickname":"roger","note":"","ucode":"9D0D9336389926","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338712,"discussion_content":"有些片面了。回归问题的参数可以和时间没有任何关系，聚类也可以和对时间序列参数进行聚类。回归是找趋“势”，聚类是找相“同”。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609343238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}