{"id":494571,"title":"开篇词｜为什么TDD是当前最具工程效能的研发流程？","content":"<p>你好，我是徐昊，欢迎和我一起学习测试驱动开发（Test-Driven Development，TDD）。</p><p>对于测试驱动开发，稍有了解而全无实践的人，会认为是天方夜谭，甚至无法想象为什么需要这样的方式来开发：</p><ol>\n<li>为什么要开发人员来写测试？这难道不是测试人员的工作吗？难道开发写了测试，测试人员就不用再测了嘛？</li>\n<li>又要写测试，又要写生产代码，效率是不是太低了？只写生产代码效率应该更高吧？</li>\n<li>不写测试我也能写出可以工作的软件，那么写测试能给我带来什么额外的好处呢？</li>\n</ol><p>的确，从直觉上来看，测试驱动开发相当令人困惑：它将我们通常认为的辅助性工作——测试，作为程序员编码的主要驱动力；它主张通过构造一系列自动化测试（由程序员编写），为编写生产代码（Production Code）做指引；它甚至建议，如果不存在失败的测试，就不要编写生产代码。</p><p>看起来，似乎测试驱动开发有些<strong>过分强调测试</strong>对于程序员的重要性了。</p><p>那么我们就需要仔细思考，“测试”在所谓的“正常软件开发模式”中，到底发挥着怎样的作用。当明晰了测试驱动开发的这个核心逻辑之后，我们才能讨论是不是过分强调了。</p><h2>隐式程序员测试（Implicit Developer Testing）</h2><p>直觉和经验告诉我们，在所谓的“正常软件开发模式”中，貌似测试只是最后的验收步骤，程序员很少直接参与。但事实却不是这样，就算是所谓的“正常软件开发模式”，也蕴含着非常多“程序员测试”的步骤。只不过这些“程序员测试”并不表现为自动化测试，而是由“测试应用”、“跑一下”和“调试”等隐含手段体现的。</p><!-- [[[read_end]]] --><h3>“测试应用”（Testing Application）</h3><p>所谓“测试应用”并不是某个技巧正式的名字，但是所有人都熟知这一技巧：</p><ul>\n<li>构造一个简单的控制台应用（Console Application），并提供main入口函数（Entry point）；</li>\n<li>在main函数中，调用所编写的代码，并通过与控制台的交互（各种println、writeline之类的函数），将结果输出在控制台上；</li>\n<li>再通过观察控制台的输出，判断结果正确与否。</li>\n</ul><p>让我们看一个具体的例子。假设我们需要将某个对象存储到数据库中，以Java中的JPA（Jakarta Persistence API）为例，那么我们大概可以构造出这样的“测试应用”：</p><p><video poster=\"https://static001.geekbang.org/resource/image/37/66/37yy97d1901c8f17ed7916c7889c2566.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/37ef766d-17f911c4da9-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/d20f1f1e36bb4ad8860354e087e851d0/0c3065eaa6ac4bd4b44db81eb4cd5b5a-7e47e7a2c8eaff9a812394fcb9ed0463-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>如视频中展示的，这个测试应用符合我们对于验证测试的一切认知：有需要被测试的行为，有明确的执行结果，以及针对结果的验证。那么我们实际上可以很容易地将它改写为自动化测试：</p><p><video poster=\"https://static001.geekbang.org/resource/image/37/66/37yy97d1901c8f17ed7916c7889c2566.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/41e18d4c-17f9137c282-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/b272909927a04660a6835e2ce30018eb/552eafa1a47d4a7180a49b52939f5854-43b3ae89e2b61152f202dbd0ebe7792b-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>对比这两种做法，从意图上，我们可以粗略地认为，它们是对于同一种意图的两种不同实现：<strong>无计划的手动验证</strong>与<strong>有计划的自动化验证</strong>。所以如果你曾经使用过“测试应用”，那么你就曾经在项目中做过“程序员测试”。</p><h3>“跑一下”（Run it in a local testing environment）</h3><p>同样，“跑一下”也不是某个技巧的正式名字。从严谨的角度出发，“跑一下”甚至不能算是它真正的名字。它真正的名字应该叫“在我本地的测试环境中跑一下”。同样，所有人也都熟知这一技巧，就真的是“在我本地的测试环境中跑一下”。因为当代应用通常都在受控环境中运行（Managed Environment），所以当验证某个功能时，需要连通其所在的受控环境一起执行。</p><p>让我们再看一个具体的例子。假设我们需要实现REST API，以Java中的JAX-RS（Jakarta Restful WebService）为例，那么我们大概会这样来跑一下：</p><p><video poster=\"https://static001.geekbang.org/resource/image/37/66/37yy97d1901c8f17ed7916c7889c2566.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/54185a5e-17f91386788-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/d57d0c99da6a4a96b525bc10e178b2b5/500a1fab4b174b0ba1c1ead5a2717ea6-bcd10e82a7f3392db927d59b40bb6f22-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>如视频中展示的，无论是通过浏览器直接观测结果，还是通过Postman验证，都符合我们对于验证测试的一切认知：有需要被测试的行为，有明确的执行结果，以及针对结果的验证。那么我们实际上可以很容易地将它改写为自动化测试：</p><p><video poster=\"https://static001.geekbang.org/resource/image/37/66/37yy97d1901c8f17ed7916c7889c2566.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/3ae772e-17f92e26cb2-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/28fec0c3cbbf499d938418a3b85dd63e/3fd63948b67e43838992ba874735961d-8f3e95ffe53674f927939695950453ac-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>对比这两种做法，从意图上，我们可以粗略地认为，它们是对于同一种意图的两种不同实现：<strong>无计划的手动验证</strong>与<strong>有计划的自动化验证</strong>。所以如果你曾经也类似这样“跑过一下”你的应用，那么你就曾经在项目中做过“程序员测试”。</p><h3>“调试”（Debug）</h3><p>我想你已经发现了模式，你肯定要猜测“调试”也是一种验证测试，但并不是这样！“测试应用”和“跑一下”这两种技巧更多地关注在发现问题上，可以看作是“<strong>验证测试</strong>”。而“调试”通常发生在已经明显知道有错误的代码中，是一个定位错误的过程。让我们来看个例子：</p><p><video poster=\"https://static001.geekbang.org/resource/image/c3/a2/c3f7a5d53abb98f63d4e37c24ed023a2.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/5dec9b94-17f915536cd-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/b011a62c47c14999a4648ab6d3b232bb/eee0d795834b4a6b9c6feb266a6bb64f-78f74cf02b1576351b1232c36964b3b2-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>如视频中展示的，“调试”是一种启发式过程（Heuristic Procedure），更像是探索测试（Exploratory Testing），根据出现的错误寻找可能出现错误的位置，然后设置断点，判断该断点处的状态是否正确。</p><p>除了调试之外，我们还可以将代码划分成更小的单元，逐一排查以定位错误。那么我们就可以将对于某段代码的调试过程，转化成对于一组更小粒度单元的验证测试：</p><p><video poster=\"https://static001.geekbang.org/resource/image/37/66/37yy97d1901c8f17ed7916c7889c2566.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/316fb09c-17f91553119-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/24421650f696469aa5a668a1db1c4b36/f8e701525fdd4243b6350deeb78b2d36-d53b2ab57c5790651c09577b29ceeb26-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>在软件开发中，一直都存在<strong>验证性测试</strong>和<strong>定位性测试</strong>两种测试。这也很好理解，我们既要知道代码有没有错误，还要知道当错误发生时，错误发生在哪里。</p><p>从定位性测试的角度出发，对比这两种做法，从意图上，我们可以粗略地认为，它们是对于同一种意图的两种不同实现：<strong>手动的启发式定位</strong>与<strong>有计划的逐模块自动化排查</strong>。所以如果你曾经也类似这样“调试”过你的应用，那么你就曾经在项目中做过“程序员定位测试”。</p><h2>测试驱动开发的核心逻辑</h2><p>除去我们讨论的三种，在所谓的“正常软件开发模式”中，还存在很多其他常用的手段，也都可以看作是自发性的“程序员测试”。任何有过严肃编程经验的从业者，都能根据自己过往的经历，回想起这些年所做过的“程序员测试”。</p><p>我们构造软件的过程，就是通过一系列验证测试（测试应用、跑一下等），证明我们在朝着正确的方向前进；如果验证的过程中发现出了错误，那么再通过一系列定位测试（调试等），找到问题的根源，加以改进。</p><p>如此往复，直到完成全部功能（如下图所示）。</p><p><img src=\"https://static001.geekbang.org/resource/image/69/c8/694afff749bdf5ec2c18277eb10b20c8.jpg?wh=6473x2482\" alt=\"\"></p><p>现在让我们回到最初的问题：测试驱动开发过分强调测试对于程序员的重要性了吗？答案是：并没有！</p><p>验证测试与定位测试，本身就贯穿了整个软件构造的过程。<strong>测试构成了整个开发流程的骨架，功能开发可以看作填充在测试与测试之间的血肉</strong>。这就是测试驱动开发的核心逻辑：以测试作为切入点，可以提纲挈领地帮助我们把握整个研发的过程。</p><p>一个个测试就像一个个里程碑点（Milestone），规划着研发活动的进度。围绕这些里程碑点，我们就可以持续对成本和效率进行管理和改进。<strong>也就是说，测试驱动开发将个体的开发活动，变成了工程化的研发过程。</strong>这也是为什么，三十年以来，测试驱动开发在敏捷方法族中，都扮演着工程实践基石的角色。</p><p>因为测试是如此重要，我们需要非常高效地实现它们。那么“<strong>无计划的手动验证</strong>”与“<strong>手动的启发式定位</strong>”都是无法容忍的低效手段，必须将它们替换为“<strong>有计划的自动化验证测试</strong>”和“<strong>有计划的逐模块自动化排查</strong>”。从而才有了我们熟知的测试驱动开发（红/绿/重构循环），以及令没有做过测试驱动开发的人费解的对于自动化的偏执。</p><p>到这里，我想你应该就会明白了，测试驱动开发并不是关于“怎么写测试”、“怎么消除测试人员”、“怎么让开发人员多干一份活”的编码技巧。它是以测试为里程碑点的工程化研发过程；同时，测试驱动开发将软件流程中无时无处不在的低效测试手段，以可重复的、高效的自动化测试代替，以获得更高的工程效能。</p><p>这就是隐藏在测试驱动开发反直觉的工程实践背后的核心逻辑。</p><h2>为什么要学习测试驱动开发？</h2><p>测试驱动开发最直接的收益，就是可以提高开发者的<strong>工程效能</strong>。</p><p>工程效能不仅仅是开发功能的效能，还包含发现问题、定位问题以及修复问题的效能。从理论上来说，后面三个并不是根本的复杂性问题，但在实际中却大量存在，甚至占据一半以上的有效工作时间。因而高效地完成这些非根本性问题，就可以显著地提高效率。</p><p>其中发现错误，并准确定位错误，通过发现问题的测试和定位问题的测试可以高效实现。而如果说发现问题的测试，还有后置或外包于他人的可能，那么定位问题的测试，无论如何都没有办法了。所以实际上<strong>高效能的研发过程</strong>，<strong>至少</strong>需要我们提供<strong>可工作的代码</strong>，以及一组可用于<strong>定位问题的测试</strong>。</p><p>从这个角度出发，那么测试驱动开发仍是时至今日最具有工程效能的研发流程，没有之一。</p><h2>学习测试驱动开发的难点在哪里？</h2><p>学习测试驱动开发是困难的，很多信服于测试驱动开发理念而自发实践的人也会被各种问题困扰：</p><ol>\n<li>测试从哪里来？为什么我写了很多测试，功能却没有进展？</li>\n<li>写什么样的测试既能驱动功能进展，又不会在重构中被破坏？</li>\n<li>社区里很多人都非常推崇单元测试，但我就是要测一段SQL，单元测试怎么测？</li>\n</ol><p>测试驱动开发从来都不是一种即插即用的技能，它是一种工作习惯和思维方式，背后还对深层的胜任力（Competency）——分析性思考有极高的要求。某种程度上讲，测试驱动开发有点像物理，定理写出来很简单，但需要我们<strong>在不同的场景下练习</strong>，才能应用得得心应手。</p><p>正是因为这样的特点，我们的课程以视频<strong>展示为主</strong>，文字讲解为辅。希望你能在具体的场景下，体会使用TDD和平时开发的差异。具体而言，我们的课程是这样设计的。</p><p>首先我们将从一个编码练习（Code Kata）级别的小例子入手，<strong>展示</strong>使用TDD开发的全过程。因为大多数人，对于TDD没有一个感性、直观的认识。因而在任何讲解之前，我需要让你亲眼看一看，如何通过TDD的方法实现一个非常简单的功能。</p><p>然后我们会围绕这个例子，详细讲解TDD的核心理念与方法。我们将深入讨论TDD中的测试到底是什么样的测试，TDD是如何驱动我们的开发。我们会介绍TDD的经典学派（芝加哥学派）与伦敦学派不同的切入点。</p><p>在这部分的最后，我将会总结TDD作为工程方法的核心优势在什么地方。如果你需要说服周围的同事、朋友、领导开始采用TDD方法，这将给你提供足够的弹药。</p><p>然后我们将进入实战项目环节。我将以几个技术框架为例（IoC容器、RESTful框架、DB Mapper框架等），展示如何使用TDD的方式从头来实现它们，TDD实战的细节将一览无遗。</p><p><img src=\"https://static001.geekbang.org/resource/image/03/48/03d9471cfe3c52c13b678771b1eab348.jpeg?wh=2062x1370\" alt=\"\"></p><h2>开篇寄语</h2><p>作为中国最早一批测试驱动开发的实践者，从2003年开始，我就将测试驱动开发作为主要工作方式了。</p><p>在加入Thoughtworks之后，对内对外我讲述了大量测试驱动开发的课程。曾经有一段时间，每一位新入职的Thoughtworker我都会通过6周的时间，教会他们进行测试驱动开发。</p><p>当我主持Thoughtworks委培生计划——小巨人项目（Small Giant Program）时。测试驱动开发与学习管理，是最早也是最重要的工作习惯。近年我研发的高效能工程方法SEELE（Scalable Engineering Experience for Large Enterprise）也是将测试驱动开发作为核心流程，从而简化知识传递成本并提高杠杆率。</p><p>测试驱动开发伴随了我职业生涯的每一个阶段。我相信，我掌握了测试驱动开发那天，我才成为了<strong>可靠、高效的职业程序员</strong>。如果你对程序员这个职业抱有严肃的态度，那么测试驱动开发是必须要掌握的。</p><p>最后，我也很想听听你对TDD的看法，以及实践TDD过程中的体会。欢迎你分享在留言区，我们下节课再见！</p>","neighbors":{"left":[],"right":{"article_title":"课前必读｜20年前的“老古董”技术，为什么还值得开个课？","id":495506}},"comments":[{"had_liked":false,"id":343902,"user_name":"🐑","can_delete":false,"product_type":"c1","uid":2189689,"ip_address":"","ucode":"DE34B3B14287D1","user_header":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","comment_is_top":true,"comment_ctime":1651115971,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233720385059e+18","product_id":100109401,"comment_content":"TDD专栏福利大合集：<br><br>1、打卡赢好礼（4月23日-5月10日）：正在进行中，学习专栏第1-10讲并在留言区打卡，结束后奖励；<br><br>2、代码亲手评（5月底）：预计打卡结束后启动，完成前10讲的打卡，即可提交代码练习作业，徐昊老师会亲自点评；<br><br>3、线上带你练：根据专栏更新节奏和老师时间安排确定，徐昊老师会线上带四个同学手把手地改代码，敬请期待！<br><br>具体活动介绍见 👉 http:&#47;&#47;gk.link&#47;a&#47;11jPi","like_count":0},{"had_liked":false,"id":338521,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1647537248,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"147676425312","product_id":100109401,"comment_content":"一、 告诉大家怎么2倍速观看视频（希望这个功能能得到优化）<br>鼠标点击右键-&gt;显示所有控件-&gt;竖着的三个点-&gt;播放速度-&gt;滑倒底部-&gt;2<br><br>二、 视频很精彩，非常高效的教学方式，本篇读后感：<br>1. 当有 private 方法不方便测试时，可以直接提取到一个新的类中变成 public 方法进行测试；同时也说明当前类违反了单一原则，可以及时重构<br>2. 我现在正发愁 SQL 怎么测！看来能在专栏找到答案了<br><br>三、 分享自己的 TDD 学习经历<br>1. 一次因为把赋值为 0 写成了 1 的 Bug，差点导致公司巨额损失，吓坏了，为了避免此类错误再次发生，最终的解决方案是 TDD<br>2. 凑巧学到了郑烨老师的专栏《软件设计之美》，带我看到了 TDD 如何入门：从单一原则则到各种原则可以推导出各种设计模式，符合单一原则的代码就是对测试友好的<br>3. 接着学习了郑烨老师的其他三个专栏《程序员的测试课》、《10X程序员工作法》、《代码之丑》。<br>   知道了一个方法如果行数太多很大原因是违反了单一原则：<br>   10行：郑烨老师的标准<br>   7行：《深入理解 Java 虚拟机》作者周志明老师的标准<br>4. 从郑烨老师的专栏中知道了两本神奇的书：《代码整洁之道》、《修改代码的艺术》<br>5. 阅读完《代码整洁之道》后发现还是无从进行 TDD 实践<br>6. 上网搜了一些国内外热心网友分享的 TDD 视频，开始模仿，虽然不专业，但总算实践了<br>7. 搜了一下 TDD 的书籍，买了两本：《Java 测试驱动开发》、《测试驱动开发的艺术》<br>8. 阅读完两本测试图书后知道了 Mockito，写起单元测试方便多了（渐渐理解代码需要对单元测试友好：单一原则、高内聚）<br>9.  《代码整洁之道》的作者 Bob 大叔说：重构最好的时机就是现在，但需要有单元测试做保障，工作中我也可以及时重构了<br>10. 正在阅读《修改代码的艺术》，期中 2.1 什么是单元测试中提到：<br>  单元测试运行很快。如果运行缓慢，那就不是单元测试。<br>  其他类型的测试经常会伪装成单元测试。如果出现以下情况，那么就不是单元测试：<br>  a. 测试会访问数据库<br>  b. 测试会通过网络通信<br>  c. 测试会访问系统文件<br>  d. 你需要做特定的工作配置环境来运行测试（例如编辑配置文件）<br>11. 知道了以前启动 SpringBoot 进行的测试是集成测试而不是单元测试，因为太慢了<br>12. 现在不知道数据库操作、HTTP请求、void 方法怎么进行单元测试，迷茫中<br>13. 徐昊老师、郑烨老师、Bob 大叔都在 Thoughtworks 工作过，本专栏让我久久不能平静","like_count":35,"discussions":[{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559524,"discussion_content":"是不是感觉 Thoughtworks 是比较理想的开发环境？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648805001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":1,"user_type":1,"is_pvip":true},"discussion":{"id":559576,"discussion_content":"是因为这个公司有很多超级大佬，实力深不可测！理想的开发环境是远程办公，无拘无束","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648821679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":559524,"ip_address":""},"score":559576,"extra":""}]},{"author":{"id":1389744,"avatar":"https://static001.geekbang.org/account/avatar/00/15/34/b0/8d14a2a1.jpg","nickname":"大布丁","note":"","ucode":"3C655AA79A538C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557594,"discussion_content":"可惜不能收藏评论，不然一定收藏评论！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647874139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1389744,"avatar":"https://static001.geekbang.org/account/avatar/00/15/34/b0/8d14a2a1.jpg","nickname":"大布丁","note":"","ucode":"3C655AA79A538C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557615,"discussion_content":"可以保存到自己的笔记中\n这个专栏的笔记我的记录在 https://www.wyyl1.com/post/19/dir/\n还有相关学习笔记：\n《代码整洁之道》学习笔记 https://www.wyyl1.com/post/18/01/\n《Java 测试驱动开发》学习笔记 https://www.wyyl1.com/post/18/02/\n《测试驱动开发的艺术》学习笔记 https://www.wyyl1.com/post/18/03/","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1647880936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557594,"ip_address":""},"score":557615,"extra":""},{"author":{"id":1389744,"avatar":"https://static001.geekbang.org/account/avatar/00/15/34/b0/8d14a2a1.jpg","nickname":"大布丁","note":"","ucode":"3C655AA79A538C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558264,"discussion_content":"好的，才看到了消息，感谢您的回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648180641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557615,"ip_address":""},"score":558264,"extra":""},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1389744,"avatar":"https://static001.geekbang.org/account/avatar/00/15/34/b0/8d14a2a1.jpg","nickname":"大布丁","note":"","ucode":"3C655AA79A538C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558337,"discussion_content":"不客气","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648211991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":558264,"ip_address":""},"score":558337,"extra":""}]}]},{"had_liked":false,"id":338497,"user_name":"俊伟","can_delete":false,"product_type":"c1","uid":1111175,"ip_address":"","ucode":"7905B4F25637F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/87/644c0c5d.jpg","comment_is_top":false,"comment_ctime":1647526811,"is_pvip":true,"replies":[{"id":"123719","content":"good for you","user_name":"作者回复","comment_id":338497,"uid":"2537798","ip_address":"","utype":1,"ctime":1647537438,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"48892167067","product_id":100109401,"comment_content":"之前拜读《测试驱动开发》觉得这种方法真了不起，之后在工作中也是一直坚持实践。实践TDD真的可以让开发效率变快。现在写代码，早就把Postman之类的工具抛到脑后了，完全通过单元测试来构建可靠的应用。个人感觉使用TDD是一个先慢后快的过程，开头可能会慢一点，但是越往后测试越多，代码写的越快，真的很神奇。","like_count":12,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556854,"discussion_content":"good for you","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647537438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339321,"user_name":"文经","can_delete":false,"product_type":"c1","uid":1072346,"ip_address":"","ucode":"2C059BD2A4276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/da/0a8bc27b.jpg","comment_is_top":false,"comment_ctime":1648035643,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"23122872123","product_id":100109401,"comment_content":"在直播中，老师提到Beck Kent的《测试驱动开发》看了30遍，我很好奇的是，这30遍是在几年内看完的，看到第几遍的时候有种顿悟的感觉？<br>这本书我看了3,4遍，也实现了书中的例子，尽管我也看了几本相关的书，例如《重构》、《重构与模式》、《修改代码的艺术》、《敏捷软件开发》、《程序员修炼之道》等，但是TDD一直没掌握。<br>老师回答我的问题说：“还少27遍”，期待通过这个专栏能够让TDD成为我工具箱中的一项。应该就可以不用看30遍书了😁","like_count":6},{"had_liked":false,"id":338580,"user_name":"danny","can_delete":false,"product_type":"c1","uid":2863591,"ip_address":"","ucode":"A5A20E5EF807C4","user_header":"https://static001.geekbang.org/account/avatar/00/2b/b1/e7/883f6987.jpg","comment_is_top":false,"comment_ctime":1647575825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18827445009","product_id":100109401,"comment_content":"原来CTO真的会写代码。哈哈<br><br>一提到开发质量就会想到要UT，TDD，CodeReview。谁都知道，但落地的聊聊无几。<br><br>综观有几方面的因素:<br>上层只看结果，不关心过程，要的是马上上线，但出了问题，又会马后炮，为什么不UT，不Code Review。<br><br>下层想搞，但感觉浪费时间，业务代码还来不及写。但出了问题又反思应该有更好的工作方式，可看看TDD又违背行为习惯，被业务催促下，又回到老路了<br><br>也只有像老师这种大师级别的出来做个示范，让中国程序员个个成为小巨人~","like_count":5},{"had_liked":false,"id":338918,"user_name":"CV","can_delete":false,"product_type":"c1","uid":2169837,"ip_address":"","ucode":"CBB5C73B22D3FC","user_header":"https://static001.geekbang.org/account/avatar/00/21/1b/ed/34d56ff4.jpg","comment_is_top":false,"comment_ctime":1647787513,"is_pvip":false,"replies":[{"id":"123893","content":"可从任务分解入手","user_name":"作者回复","comment_id":338918,"uid":"2537798","ip_address":"","utype":1,"ctime":1647849811,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"10237722105","product_id":100109401,"comment_content":"对于tdd的理念非常认可，但实际工作中接触的很多都是老项目，一个方法几百行起步，各种反射、静态方法，想写测试感觉都无从下手，更别说tdd落地。希望老师可以讲讲老项目如何开展测试工作","like_count":2,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557521,"discussion_content":"可从任务分解入手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647849811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338399,"user_name":"tdd学徒","can_delete":false,"product_type":"c1","uid":1724083,"ip_address":"","ucode":"CC9C3EAD1B29B4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUCiacuh59wMbq1icuB8U1T7Vpic8FjKFdanvdt9bzClBmYqFUXmtKmh2Zibn9Dic6A8pjdoBiaia1LCrnA/132","comment_is_top":false,"comment_ctime":1647484609,"is_pvip":false,"replies":[{"id":"123694","content":"嗯录音是专栏的交付形式之一，在这个专栏里，我感觉可以不用听录音，看文字和视频就够了","user_name":"编辑回复","comment_id":338399,"uid":"2189689","ip_address":"","utype":2,"ctime":1647487419,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"10237419201","product_id":100109401,"comment_content":"很硬核 还配有字幕 <br>感觉可以不用录音 文字加视频就好了","like_count":2,"discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556725,"discussion_content":"嗯录音是专栏的交付形式之一，在这个专栏里，我感觉可以不用听录音，看文字和视频就够了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647487420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441207,"avatar":"https://static001.geekbang.org/account/avatar/00/15/fd/b7/3fd3ca23.jpg","nickname":"barnett","note":"","ucode":"DDB9BC4FD34FBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562904,"discussion_content":"配合录音看文稿其实更加有助于学习，因为人在学习新知识时，输入方式越多，越有助于理解和记忆。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649906033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338346,"user_name":"Sarah","can_delete":false,"product_type":"c1","uid":2391650,"ip_address":"","ucode":"2B35D90CE51B8C","user_header":"https://static001.geekbang.org/account/avatar/00/24/7e/62/48045bee.jpg","comment_is_top":false,"comment_ctime":1647433579,"is_pvip":false,"replies":[{"id":"123677","content":"我觉得，音频都可以不用听，看文字稿➕视频就好咯","user_name":"编辑回复","comment_id":338346,"uid":"2189689","ip_address":"","utype":2,"ctime":1647434707,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"10237368171","product_id":100109401,"comment_content":"内容非常的不错，在工作中也一直在实践，并尝试跟测试用例结合，以达到减少手动测试的目的。<br>对于这个学习形式，个人认为音频加视频的形式，有点打断学习的体验了，感觉可以都用视频的形式就好，不然要一直音频和视频之间切换，体验感不佳","like_count":2,"discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556642,"discussion_content":"我觉得，音频都可以不用听，看文字稿➕视频就好咯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647434707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340960,"user_name":"奇小易","can_delete":false,"product_type":"c1","uid":1171151,"ip_address":"","ucode":"E06B4DFB5352BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/cf/ef2e0501.jpg","comment_is_top":false,"comment_ctime":1649246614,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5944213910","product_id":100109401,"comment_content":"2W2H笔记<br>Why<br>Q1：为什么要学习TDD？<br>1、提高开发者的工程效能<br>工程效能包括（在开发过程中的）<br>- 开发功能速度<br>- 定位问题速度<br>- 发现问题速度<br>- 解决问题速度<br>2、可靠、高效的职业程序员<br><br>What<br>Q1: 程序员在所谓的&quot;正常软件开发流程&quot;中，都做过哪些测试？（或&quot;程序员的测试&quot;都有哪些？）<br>a、验证性测试<br>what: 什么是验证性测试？<br>意图是为了验证代码实现是否符合功能要求。<br>故在明确的代码执行下，产生的执行结果，要验证该结果是否符合预期。<br>基于该意图所做的验证操作就是验证性测试。<br>具体例子如：（测试应用、跑一下）<br>JPA示例中存储学生对象，最终预期就是将学生对象存入数据库中。<br>验证的方法就是验证下该对象是否真的存入了数据库。<br>而具体的验证手法可以通过人工查看的方式来实现，也可以通过编写测试代码来实现。<br>how good：验证性测试下有两种实现方式，分别是无计划的人工验证和有计划的自动化验证<br>b、定位性测试<br>what: 什么是定位性测试？<br>定位的意图是发现当前代码中存在问题，要快速定位问题，再来解决问题。<br>通常定位的手段是通过人工断点、打印等技巧，逐步分析错误范围，最终定位到问题，再加以解决。<br>而也可以通过给排查内容逐个增加验证测试，保证一个个测试通过的情况下，逐步缩小问题范围，从而定位到问题，再解决。<br>具体例子如：（调试）<br>how good：定位性测试下有两种实现方式，分别是人工启发式定位和有计划逐模块自动化排查。<br><br>Q2：测试驱动开发的核心逻辑是什么？<br>构造软件的过程可以理解为，通过完成一系列的验证测试（完成需求），然后在验证过程中发现问题，再完成定位测试（解决问题），如此往复，最终直到完成全部功能。<br>在这样的过程中，测试构成了整个开发流程的骨架，功能开发可以看做是填充到测试与测试之间的血肉。<br>核心逻辑一：以测试为里程碑点的工程化研发流程（不太理解）<br>可以看出软件开发过程被分解为完成一个个测试的过程。基于这种分解，能够规划研发流程的进度。（这里不太理解）<br>核心逻辑二：可重复、高效的自动化测试代替低效的人工测试<br>可以看出，测试在软件开发过程中无处不在，如此重要的行为，需要高效实现，故需要用高效的自动化手段来代替低效的人工测试手段。<br><br>Q3: 课程包含哪些内容？<br>1、命令行参数解析的示例<br>2、测试驱动开发的核心理论和方法<br>3、能够说服他人践行TDD的理由<br>4、三个示例（ioc容器，restApi框架、db mapper框架）<br>How<br>Q1：如何学习TDD？<br>A: <br>1、多练习，在不同场景下练习","like_count":1},{"had_liked":false,"id":338508,"user_name":"Geek_fa4b49","can_delete":false,"product_type":"c1","uid":1748516,"ip_address":"","ucode":"09559B605EB8D7","user_header":"","comment_is_top":false,"comment_ctime":1647529616,"is_pvip":true,"replies":[{"id":"123720","content":"定位测试 白盒还是别做了","user_name":"作者回复","comment_id":338508,"uid":"2537798","ip_address":"","utype":1,"ctime":1647537488,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5942496912","product_id":100109401,"comment_content":"非常高兴徐老师能给大家一个如此基础又如此重要的课程，几乎所有公司都在强调单元测试的重要性，但是我看过很多代码，基本都没有单元测试，好一点的团队是刚开始有单元测试，后面就没有继续维护了。大家都这么重视单元测试，但是为什么都没有坚持下来呢？主要是单元测试成为了项目开发的累赘，没有用TDD。如果是先写代码，再写单元测试，很容易给人一种多余的感受，而且为了测试而测试，就会导致测试无群无尽，甚至连整数的边界都纠结要不要一块测试了。如果用TDD，从test case的角度去设计测试，就不会存在这样的问题。<br>文章的一个观点非常重要，我们并不是写测试想取代测试人员，而是我们换了一种高效的测试方法而已。我们让测试粒度更细，测试自动化，提高测试的效率。无论如何程序员自己的白盒测试都是要做的，那我们使用TDD这种好的工程实践方法，可以使我们变成高效可靠的程序员。","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556855,"discussion_content":"定位测试 白盒还是别做了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647537488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1032309,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c0/75/acc6ebef.jpg","nickname":"守拙","note":"","ucode":"44422C46F303EB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557210,"discussion_content":"tdd应该给自己一个更快的反馈循环，适合设计，但是并不能替代测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647698561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338397,"user_name":"爱吃彩虹糖的猫~","can_delete":false,"product_type":"c1","uid":1261108,"ip_address":"","ucode":"9EC7A8FD4B7DB1","user_header":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","comment_is_top":false,"comment_ctime":1647484450,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"5942451746","product_id":100109401,"comment_content":"文中这三段视频对比讲得很好，特别是那段FormHelper的提取，分离关注点来进一步定位问题。","like_count":1},{"had_liked":false,"id":338384,"user_name":"钱忠飞","can_delete":false,"product_type":"c1","uid":1181085,"ip_address":"","ucode":"032CC39A7510DC","user_header":"https://static001.geekbang.org/account/avatar/00/12/05/9d/a00a5622.jpg","comment_is_top":false,"comment_ctime":1647478353,"is_pvip":false,"replies":[{"id":"123698","content":"没有 有自己实现一个简单的spring的内容","user_name":"作者回复","comment_id":338384,"uid":"2537798","ip_address":"","utype":1,"ctime":1647492843,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5942445649","product_id":100109401,"comment_content":"请问课程中有springboot下tdd落地的内容吗？","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556740,"discussion_content":"没有 有自己实现一个简单的spring的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647492843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346680,"user_name":"木槿花","can_delete":false,"product_type":"c1","uid":2056833,"ip_address":"","ucode":"FDBCA340ED95A6","user_header":"https://static001.geekbang.org/account/avatar/00/1f/62/81/69b09ed8.jpg","comment_is_top":false,"comment_ctime":1653358788,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653358788","product_id":100109401,"comment_content":"在编码中，深感无计划测试的低效，也无法全部cover所有场景，要是有另外同事改了代码，可能又引入了新的bug，但是老代码很多privte方法，静态方法等，重新写测试用例难度大，时间来不及，希望能从老师的课程中寻到一些有效的方法。","like_count":0},{"had_liked":false,"id":344341,"user_name":"吕伟","can_delete":false,"product_type":"c1","uid":1110096,"ip_address":"","ucode":"A443C94A717AD0","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/50/c348c2ea.jpg","comment_is_top":false,"comment_ctime":1651481386,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651481386","product_id":100109401,"comment_content":"每次插入都不会重复的是用什么数据库中间件。<br>单元测试就怕插入脏数据后的清理","like_count":0},{"had_liked":false,"id":343748,"user_name":"enjoylearning","can_delete":false,"product_type":"c1","uid":1000237,"ip_address":"","ucode":"DCAF8538DEA277","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/2d/af86d73f.jpg","comment_is_top":false,"comment_ctime":1651036381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651036381","product_id":100109401,"comment_content":"自己做的项目一直在采用单元测试，不过还是习惯了写个方法再写测试，这也许是个习惯。先写测试再写代码试过总感觉有些别扭。","like_count":0},{"had_liked":false,"id":343256,"user_name":"不负","can_delete":false,"product_type":"c1","uid":1238323,"ip_address":"","ucode":"147F5860711811","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/33/ff5c52ad.jpg","comment_is_top":false,"comment_ctime":1650729468,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650729468","product_id":100109401,"comment_content":"1. 种草了，专栏这种形式很赞。相信我能学得会。<br>2. 之前在私人小项目中接触过别人写的测试用例，通过很开心给，报错了只能自己去调试源码，知道这种方式，写完其实挺平平无奇，一直也重视。<br>3. 老师直击核心，其实程序员完成代码一直都没离不开过 “测试”，调试更是找错必备，TDD有计划的自动验证，确实能解决很多后顾之忧。","like_count":0},{"had_liked":false,"id":343161,"user_name":"文经","can_delete":false,"product_type":"c1","uid":1072346,"ip_address":"","ucode":"2C059BD2A4276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/da/0a8bc27b.jpg","comment_is_top":false,"comment_ctime":1650684264,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650684264","product_id":100109401,"comment_content":"上个月看了《张艺谋的作业》这本书，印象很深的一点是张艺谋摄影的基本功，他拍出来的图片基本上不需要裁剪。还有他学习摄影和电影学院摄影系上学期间留下大量工整的笔记。<br>那程序员的基本功是什么？我觉得就是把代码写好。记得徐昊老师在第一次直播课中提到技术能力和工程能力的区别。我太过注重知识的学习，例如编程语言、数据结构和算法、计算机系统，甚至于设计模式和软件架构，但工程能力却很弱。<br>很有技能正如开车一样，不刻意学习和练习，并不会随着年纪变大、经验积累自然掌握。尽管已经工作快15年了，重新把这块能力拼版补上，种一个树最好的时机就是现在！","like_count":0},{"had_liked":false,"id":342345,"user_name":"AAC萧燃","can_delete":false,"product_type":"c1","uid":1179263,"ip_address":"","ucode":"08AD58702237F4","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/7f/e29f19bb.jpg","comment_is_top":false,"comment_ctime":1650203623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650203623","product_id":100109401,"comment_content":"希望第一讲的code能放出来，本人java水平入门不久，jersey的test一直过不去，视频里没有Application的代码视频，不知道怎么写","like_count":0},{"had_liked":false,"id":341051,"user_name":"小二","can_delete":false,"product_type":"c1","uid":1788551,"ip_address":"","ucode":"67A8344B6AE164","user_header":"https://static001.geekbang.org/account/avatar/00/1b/4a/87/7cd8117e.jpg","comment_is_top":false,"comment_ctime":1649314843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649314843","product_id":100109401,"comment_content":"2019年初来到深圳，公司的哥哥姐姐是从花旗银行出来创业的，他们写代码就会写测试用例（TDD），刚开始不是很理解，后来买了一本 java测试驱动的书 领会了它的思想，但是实践起来不是很顺手，碍手碍脚，所以想跟着徐昊老师再学习一下。期待自己学习有成！","like_count":0},{"had_liked":false,"id":339956,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1648510773,"is_pvip":true,"discussion_count":2,"race_medal":1,"score":"1648510773","product_id":100109401,"comment_content":"很久没有写 Java 代码，Java 已经不认识我了。<br><br>花了大概 1 个小时，实现了第一个视频里面的普通版本的 StudentRepository，提供代码给和我一样的小白参考<br><br>https:&#47;&#47;github.com&#47;escray&#47;TDDCourse&#47;tree&#47;be4fc3b7295cab9bca17928d09fe2b325e31913c&#47;StudentDemo","like_count":0,"discussions":[{"author":{"id":1803423,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/84/9f/dff4eead.jpg","nickname":"果冻","note":"","ucode":"32B36302094C08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560564,"discussion_content":"是个狠人, 也要考虑兴趣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649391431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020525,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","nickname":"escray","note":"","ucode":"1F4204930E47C4","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559528,"discussion_content":"在课前必读的留言里面给自己发了个毒誓，如果不能完成专栏学习，从此不再写代码。\n\n不提供源代码的视频课程真的是“酸爽”，我对 Java 不够熟悉，所以每个视频差不多都需要用半个小时以上的时间来复现。\n\n看到开篇词里面的第一个视频，我直接就“从入门到放弃”了，去看了后面的那个 args 的 Code Kata，然后从第5篇文章又回到了开篇词这里。\n\n花的时间并不少，但是代码还是没有完全跑通，放在这里，给其他的同学做一个参考。\n\nhttps://github.com/escray/TDDCourse/tree/ch00\n\n代码没有经过整理，如有疑问，可以留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648805717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339758,"user_name":"术子米德","can_delete":false,"product_type":"c1","uid":1898023,"ip_address":"","ucode":"382EA7E2AF0B56","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","comment_is_top":false,"comment_ctime":1648359811,"is_pvip":true,"replies":[{"id":"124177","content":"you got it","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1648390751,"ip_address":"","comment_id":339758,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648359811","product_id":100109401,"comment_content":"🤔☕️🤔☕️🤔<br>* TDD带给我的最大改变，那就是先去设定验收的形式和手段，即确定验收的边界，然后整个实现都在趋近这个边界。这种方法刚开始用，很难受，原因在于自己经验不足，不知道怎么验收自己的成果。随着经验的增加，知道如何准确验收自己的成果，就会自然而然TDD。如果是分派任务给大家，个人实践下来，TDD也是优质武器，就是在分配前，对将来交付的内容有验收的预期，会极大提高交付的质量，更不会在交付时带来惊吓级别的惊喜。<br>* 所以说，TDD在开发初级，会有难受，在开发中级，会自然形成。如果某个所谓的资深，还在说TDD的优劣势，尤其各种不对付，那么大概率他没有体验过一把交付无缺陷的代码，更大概率他卖下过巨量技术债务，要么他本人还在还债，要么已经把债务转嫁给某些无辜开发。","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558588,"discussion_content":"you got it","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648390751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339550,"user_name":"汗香","can_delete":false,"product_type":"c1","uid":1807921,"ip_address":"","ucode":"8F2C8A595F888A","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/31/91cc9c3c.jpg","comment_is_top":false,"comment_ctime":1648183369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648183369","product_id":100109401,"comment_content":"之前也多次学习过TDD，但是都由于各种原因没有落地，希望本次学习后能真正实现落地","like_count":0},{"had_liked":false,"id":339051,"user_name":"大布丁","can_delete":false,"product_type":"c1","uid":1389744,"ip_address":"","ucode":"3C655AA79A538C","user_header":"https://static001.geekbang.org/account/avatar/00/15/34/b0/8d14a2a1.jpg","comment_is_top":false,"comment_ctime":1647874154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647874154","product_id":100109401,"comment_content":"小白前来学习打卡","like_count":0},{"had_liked":false,"id":338908,"user_name":"临风","can_delete":false,"product_type":"c1","uid":1145430,"ip_address":"","ucode":"59A7F3DDD94D76","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/56/29877cb9.jpg","comment_is_top":false,"comment_ctime":1647784512,"is_pvip":true,"replies":[{"id":"123937","content":"早转测试意义不大 减少返工是目的。毕竟做的极端，可以一行代码都不写就转测试","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647921790,"ip_address":"","comment_id":338908,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1647784512","product_id":100109401,"comment_content":"工作快一年了，刚开始就知道了TDD，但是一直没有得其要领。后面也接触到了alpha测试，有了自己对开发测试的思考，但始终没有找到一个最佳实践，而自己对测试的理解也在一次次的开发中不断的变化。一开始初生牛犊不怕虎，看到质量较差的代码就想重构、重写，到后面逐渐不敢去碰了，保证自己的代码质量就行了。看着那些老代码，有种心有余而力不足的感觉。自己开发的代码一般都会有测试代码的覆盖，但并不是按照TDD的流程，交付时间又紧张，如果不写测试用例，就能更早是转测代码，有时也会怀疑自己写这些测试用例真的有意义吗，是不是只是自己的自我感动罢了？这次课程，感觉是打了瞌睡来了枕头，非常感谢老师和极客时间这个平台，希望未来自己能真正用好TDD，提高代码质量。<br>","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557667,"discussion_content":"早转测试意义不大 减少返工是目的。毕竟做的极端，可以一行代码都不写就转测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647921790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338812,"user_name":"webmin","can_delete":false,"product_type":"c1","uid":1047014,"ip_address":"","ucode":"98B0CA882454E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/e6/47742988.jpg","comment_is_top":false,"comment_ctime":1647748482,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647748482","product_id":100109401,"comment_content":"自己大多时候不会去观察自己的工作时的方法，程序化本身的作用之一就是要去减少重复劳动，在帮助别人减少不必要的劳动之前，先帮助自己减少重复劳动。<br>通过观看视屏演示，可以更好的认知到平时工作时精力都消耗在了什么地方，那些方面是可以改进的，高效的使用的时间和精力，每个人的时间都一样多，为什么有的人可以越做越快，产生飞轮效应。","like_count":0},{"had_liked":false,"id":338672,"user_name":"Alan_Hwang","can_delete":false,"product_type":"c1","uid":2050211,"ip_address":"","ucode":"D3E6632A69E43E","user_header":"https://static001.geekbang.org/account/avatar/00/1f/48/a3/92027340.jpg","comment_is_top":false,"comment_ctime":1647655308,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647655308","product_id":100109401,"comment_content":"艺术家老徐，带领我们去写有艺术范的代码，期待更新","like_count":0},{"had_liked":false,"id":338660,"user_name":"西江月","can_delete":false,"product_type":"c1","uid":2067760,"ip_address":"","ucode":"A0C21487C62BC7","user_header":"https://static001.geekbang.org/account/avatar/00/1f/8d/30/8a1e3abd.jpg","comment_is_top":false,"comment_ctime":1647650905,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1647650905","product_id":100109401,"comment_content":"怎么快速把一行代码提取成一个 Optional 变量呢？","like_count":0,"discussions":[{"author":{"id":1635917,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f6/4d/62105649.jpg","nickname":"花落星移","note":"","ucode":"506E12EBC552D6","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557189,"discussion_content":"使用idea的 postfix completion功能自定义即可","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647685603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338637,"user_name":"On","can_delete":false,"product_type":"c1","uid":1526359,"ip_address":"","ucode":"E260187B398E15","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/57/3f68946c.jpg","comment_is_top":false,"comment_ctime":1647614020,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1647614020","product_id":100109401,"comment_content":"老师，可否讲下tdd，bdd，ddd到底有什么本质的区别吗？其中tdd又有什么独一无二的优势？","like_count":0,"discussions":[{"author":{"id":1074465,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","nickname":"davix","note":"","ucode":"CBFB39BAD7938B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557248,"discussion_content":"DDD跟另兩個沒關係。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647731720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338547,"user_name":"爱乐之城","can_delete":false,"product_type":"c1","uid":1501548,"ip_address":"","ucode":"B9000E05EBDA3F","user_header":"https://static001.geekbang.org/account/avatar/00/16/e9/6c/00668d9d.jpg","comment_is_top":false,"comment_ctime":1647569736,"is_pvip":true,"replies":[{"id":"123832","content":"后面会有建议","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647769105,"ip_address":"","comment_id":338547,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647569736","product_id":100109401,"comment_content":"老师讲的这三类场景日常前端开发中也会碰到，甚至更频繁，比如页面的展示就可以算是「跑一下」验证。请问老师对于前端该写哪些范围的测试，有建议或者单独的章节来讲吗？","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557336,"discussion_content":"后面会有建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647769105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338414,"user_name":"马文龙","can_delete":false,"product_type":"c1","uid":1068432,"ip_address":"","ucode":"679B0F0AB402C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/90/25b6f544.jpg","comment_is_top":false,"comment_ctime":1647488753,"is_pvip":true,"replies":[{"id":"123696","content":"没有 需要你们自己写","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647492807,"ip_address":"","comment_id":338414,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647488753","product_id":100109401,"comment_content":"案例代码有gitee的链接地址吗  徐昊老师","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556738,"discussion_content":"没有 需要你们自己写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647492807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338350,"user_name":"鱼天翱","can_delete":false,"product_type":"c1","uid":1559732,"ip_address":"","ucode":"049689AFB3AE58","user_header":"https://static001.geekbang.org/account/avatar/00/17/cc/b4/6af738bc.jpg","comment_is_top":false,"comment_ctime":1647433848,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1647433848","product_id":100109401,"comment_content":"DDD、TDD，分属于不通阶段，老师是否可以讲讲呢？","like_count":0,"discussions":[{"author":{"id":2616320,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ec/00/4ef35023.jpg","nickname":"人二小日成","note":"","ucode":"864373DDE319F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556708,"discussion_content":"完全是两种东西，DDD用于领域建模用，是架构设计和落地实践，TDD是高效能开发编码实践","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647480707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338326,"user_name":"Emma-宋小虎","can_delete":false,"product_type":"c1","uid":2843479,"ip_address":"","ucode":"4C9530B3FB407B","user_header":"https://static001.geekbang.org/account/avatar/00/2b/63/57/ff7440ee.jpg","comment_is_top":false,"comment_ctime":1647423942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647423942","product_id":100109401,"comment_content":"期待ing☺️","like_count":0},{"had_liked":false,"id":338318,"user_name":"不是苏苏","can_delete":false,"product_type":"c1","uid":2852467,"ip_address":"","ucode":"12A62ED032F345","user_header":"https://static001.geekbang.org/account/avatar/00/2b/86/73/82fb1291.jpg","comment_is_top":false,"comment_ctime":1647422108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647422108","product_id":100109401,"comment_content":"一下更新这么多！老师和编辑也太厉害了吧！追起来追起来！！！期待老师后面的课程～","like_count":0}]}