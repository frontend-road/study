{"id":432021,"title":"08｜入口函数与包初始化：搞清Go程序的执行次序","content":"<p>你好，我是Tony Bai。</p><p>在刚开始学习Go语言的时候，我们可能经常会遇到这样一个问题：一个Go项目中有数十个Go包，每个包中又有若干常量、变量、各种函数和方法，那Go代码究竟是从哪里开始执行的呢？后续的执行顺序又是什么样的呢？</p><p>事实上，了解这门语言编写应用的执行次序，对我们写出结构合理、逻辑清晰的程序大有裨益，无论你用的是归属为哪种编程范式（Paradigm）的编程语言，过程式的、面向对象的、函数式的，或是其他编程范式的，我都建议你深入了解一下。</p><p>所以今天这节课，我就带你来了解一下Go程序的执行次序，这样在后续阅读和理解Go代码的时候，你就好比拥有了“通往宝藏的地图”，可以直接沿着Go代码执行次序这张“地图”去阅读和理解Go代码了，不会在庞大的代码库中迷失了。</p><p>Go程序由一系列Go包组成，代码的执行也是在各个包之间跳转。和其他语言一样，Go也拥有自己的用户层入口：<strong>main函数</strong>。这节课我们就从main函数入手，逐步展开，最终带你掌握Go程序的执行次序。</p><p>那么下面，我们就先来看看Go应用的入口函数。</p><h3>main.main函数：Go应用的入口函数</h3><p>Go语言中有一个特殊的函数：main包中的main函数，也就是 <strong>main.main</strong>，它是所有Go可执行程序的用户层执行逻辑的入口函数。Go程序在用户层面的执行逻辑，会在这个函数内按照它的调用顺序展开。</p><!-- [[[read_end]]] --><p>main函数的函数原型是这样的：</p><pre><code class=\"language-plain\">package main\n​\nfunc main() {\n &nbsp;  // 用户层执行逻辑\n &nbsp;  ... ...\n}\n</code></pre><p>你会发现，main函数的函数原型非常简单，没有参数也没有返回值。而且，Go语言要求：<strong>可执行程序的main包必须定义main函数，否则Go编译器会报错。</strong>在启动了多个Goroutine（Go语言的轻量级用户线程，后面我们会详细讲解）的Go应用中，main.main函数将在Go应用的主Goroutine中执行。</p><p>不过很有意思的是，在多Goroutine的Go应用中，相较于main.main作为Go应用的入口，main.main函数返回的意义其实更大，因为main函数返回就意味着整个Go程序的终结，而且你也不用管这个时候是否还有其他子Goroutine正在执行。</p><p>另外还值得我们注意的是，除了main包外，其他包也可以拥有自己的名为main的函数或方法。但按照Go的可见性规则（小写字母开头的标识符为非导出标识符），非main包中自定义的main函数仅限于包内使用，就像下面代码这样，这是一段在非main包中定义main函数的代码片段：</p><pre><code class=\"language-plain\">package pkg1\n &nbsp;\nimport \"fmt\"\n​\nfunc Main() {\n &nbsp;  main()\n}\n​\nfunc main() {\n &nbsp;  fmt.Println(\"main func for pkg1\")\n} &nbsp;\n</code></pre><p>你可以看到，这里main函数就主要是用来在包pkg1内部使用的，它是没法在包外使用的。</p><p>好，现在我们已经了解了Go应用的入口函数main.main的特性。<strong>不过对于main包的main函数来说，你还需要明确一点，就是它虽然是用户层逻辑的入口函数，但它却不一定是用户层第一个被执行的函数。</strong></p><p>这是为什么呢？这跟Go语言的另一个函数init有关。</p><h3>init函数：Go包的初始化函数</h3><p>除了前面讲过的main.main函数之外，Go语言还有一个特殊函数，它就是用于<strong>进行包初始化的init函数</strong>了。</p><p>和main.main函数一样，init函数也是一个无参数无返回值的函数：</p><pre><code class=\"language-plain\">func init() {\n &nbsp;  // 包初始化逻辑\n &nbsp;  ... ...\n}\n</code></pre><p>那我们现在回到前面这个“main函数不一定是用户层第一个被执行的函数”的问题，其实就是因为，如果main包依赖的包中定义了init函数，或者是main包自身定义了init函数，那么Go程序在这个包初始化的时候，就会自动调用它的init函数，因此这些init函数的执行就都会发生在main函数之前。</p><p>不过对于init函数来说，我们还需要注意一点，就是在Go程序中我们不能手工显式地调用init，否则就会收到编译错误，就像下面这个示例，它表示的手工显式调用init函数的错误做法：</p><pre><code class=\"language-plain\">package main\n​\nimport \"fmt\"\n​\nfunc init() {\n  fmt.Println(\"init invoked\")\n}\n​\nfunc main() {\n &nbsp; init()\n}\n</code></pre><p>这样，在构建并运行上面这些示例代码之后，Go编译器会报下面这个错误：</p><pre><code class=\"language-plain\">$go run call_init.go \n./call_init.go:10:2: undefined: init\n</code></pre><p>实际上，Go包可以拥有不止一个init函数，每个组成Go包的Go源文件中，也可以定义多个init函数。</p><p>所以说，在初始化Go包时，Go会按照一定的次序，逐一、顺序地调用这个包的init函数。一般来说，先传递给Go编译器的源文件中的init函数，会先被执行；而同一个源文件中的多个init函数，会按声明顺序依次执行。</p><p>那么，现在我们就知晓了main.main函数可能并不是第一个被执行的函数的原因了。所以，当我们要在main.main函数执行之前，执行一些函数或语句的时候，我们只需要将它放入init函数中就可以了。</p><p>了解了这两个函数的执行顺序之后，我们现在就来整体地看看，一个Go包的初始化是以何种次序和逻辑进行的。</p><h3>Go包的初始化次序</h3><p>我们从程序逻辑结构角度来看，Go包是程序逻辑封装的基本单元，每个包都可以理解为是一个“自治”的、封装良好的、对外部暴露有限接口的基本单元。一个Go程序就是由一组包组成的，程序的初始化就是这些包的初始化。每个Go包还会有自己的依赖包、常量、变量、init函数（其中main包有main函数）等。</p><p>在这里你要注意：<strong>我们在阅读和理解代码的时候，需要知道这些元素在在程序初始化过程中的初始化顺序，这样便于我们确定在某一行代码处这些元素的当前状态。</strong></p><p>下面，我们就通过一张流程图，来了解学习下Go包的初始化次序：</p><p><img src=\"https://static001.geekbang.org/resource/image/e4/0b/e4ddb702876f4f2a0880e4353a390d0b.jpg?wh=1920x1047\" alt=\"图片\" title=\"Go包的初始化次序\"></p><p>这里，我们来看看具体的初始化步骤。</p><p>首先，main包依赖pkg1和pkg4两个包，所以第一步，Go会根据包导入的顺序，先去初始化main包的第一个依赖包pkg1。</p><p>第二步，Go在进行包初始化的过程中，会采用“深度优先”的原则，递归初始化各个包的依赖包。在上图里，pkg1包依赖pkg2包，pkg2包依赖pkg3包，pkg3没有依赖包，于是Go在pkg3包中按照“常量 -&gt; 变量 -&gt; init函数”的顺序先对pkg3包进行初始化；</p><p>紧接着，在pkg3包初始化完毕后，Go会回到pkg2包并对pkg2包进行初始化，接下来再回到pkg1包并对pkg1包进行初始化。在调用完pkg1包的init函数后，Go就完成了main包的第一个依赖包pkg1的初始化。</p><p>接下来，Go会初始化main包的第二个依赖包pkg4，pkg4包的初始化过程与pkg1包类似，也是先初始化它的依赖包pkg5，然后再初始化自身；</p><p>然后，当Go初始化完pkg4包后也就完成了对main包所有依赖包的初始化，接下来初始化main包自身。</p><p>最后，在main包中，Go同样会按照“常量 -&gt; 变量 -&gt; init函数”的顺序进行初始化，执行完这些初始化工作后才正式进入程序的入口函数main函数。</p><p>现在，我们可以通过一段代码示例来验证一下Go程序启动后，Go包的初始化次序是否是正确的，示例程序的结构如下：</p><pre><code class=\"language-plain\">prog-init-order\n├── go.mod\n├── main.go\n├── pkg1\n│&nbsp;&nbsp; └── pkg1.go\n├── pkg2\n│&nbsp;&nbsp; └── pkg2.go\n└── pkg3\n &nbsp;  └── pkg3.go\n</code></pre><p>我们设定的各个包的依赖关系如下：</p><ul>\n<li>main包依赖pkg1包和pkg2包；</li>\n<li>pkg1包和pkg2包都依赖pkg3包。</li>\n</ul><p>这里我只列出了main包的代码，pkg1、pkg2和pkg3包的代码与main包都是类似的，你可以自己尝试去列一下。</p><pre><code class=\"language-plain\">package main\n​\nimport (\n &nbsp;  \"fmt\"\n​\n &nbsp;  _ \"github.com/bigwhite/prog-init-order/pkg1\"\n &nbsp;  _ \"github.com/bigwhite/prog-init-order/pkg2\"\n)\n​\nvar (\n &nbsp;  _  = constInitCheck()\n &nbsp;  v1 = variableInit(\"v1\")\n &nbsp;  v2 = variableInit(\"v2\")\n)\n​\nconst (\n &nbsp;  c1 = \"c1\"\n &nbsp;  c2 = \"c2\"\n)\n​\nfunc constInitCheck() string {\n &nbsp;  if c1 != \"\" {\n &nbsp; &nbsp; &nbsp;  fmt.Println(\"main: const c1 has been initialized\")\n &nbsp;  }\n &nbsp;  if c2 != \"\" {\n &nbsp; &nbsp; &nbsp;  fmt.Println(\"main: const c2 has been initialized\")\n &nbsp;  }\n &nbsp;  return \"\"\n}\n​\nfunc variableInit(name string) string {\n &nbsp;  fmt.Printf(\"main: var %s has been initialized\\n\", name)\n &nbsp;  return name\n}\n​\nfunc init() {\n &nbsp;  fmt.Println(\"main: first init func invoked\")\n}\n​\nfunc init() {\n &nbsp;  fmt.Println(\"main: second init func invoked\")\n}\n​\nfunc main() {\n &nbsp;  // do nothing\n}\n</code></pre><p>我们可以看到，在main包中其实并没有使用pkg1和pkg2中的函数或方法，而是直接通过空导入的方式“触发”pkg1包和pkg2包的初始化（pkg2包也是通过空导入的方式依赖pkg3包的），下面是这个程序的运行结果：</p><pre><code class=\"language-plain\">$go run main.go\npkg3: const c has been initialized\npkg3: var v has been initialized\npkg3: init func invoked\npkg1: const c has been initialized\npkg1: var v has been initialized\npkg1: init func invoked\npkg2: const c has been initialized\npkg2: var v has been initialized\npkg2: init func invoked\nmain: const c1 has been initialized\nmain: const c2 has been initialized\nmain: var v1 has been initialized\nmain: var v2 has been initialized\nmain: first init func invoked\nmain: second init func invoked\n</code></pre><p>你看，正如我们预期的那样，Go运行时是按照“pkg3 -&gt; pkg1 -&gt; pkg2 -&gt; main”的顺序，来对Go程序的各个包进行初始化的，而在包内，则是以“常量 -&gt; 变量 -&gt; init函数”的顺序进行初始化。此外，main包的两个init函数，会按照在源文件main.go中的出现次序进行调用。</p><p>还有一点，pkg1包和pkg2包都依赖pkg3包，但根据Go语言规范，一个被多个包依赖的包仅会初始化一次，因此这里的pkg3包仅会被初始化了一次。</p><p>所以简而言之，记住Go包的初始化次序并不难，你只需要记住这三点就可以了：</p><ul>\n<li>依赖包按“深度优先”的次序进行初始化；</li>\n<li>每个包内按以“常量 -&gt; 变量 -&gt; init函数”的顺序进行初始化；</li>\n<li>包内的多个init函数按出现次序进行自动调用。</li>\n</ul><p>到这里，我们已经知道了Go程序中包的初始化次序，也了解了每个包中常量、变量以及init函数的运行次序，以及init函数作为包初始化函数的一些特性。</p><p>搞完了这些最主线的内容之后，不知你有没有发现，我们好像还忘记了一件事：我们好像忘记分析init函数的用途了？别急，我们现在就把这落下的功课补上，看看作为Go包初始化函数的init函数，在日常Go语言开发中怎么来使用呢？</p><h3>init函数的用途</h3><p>其实，init函数的这些常用用途，与init函数在Go包初始化过程中的次序密不可分。我们前面讲过，Go包初始化时，init函数的初始化次序在变量之后，这给了开发人员在init函数中对包级变量进行进一步检查与操作的机会。</p><p><strong>这里我们先来看init函数的第一个常用用途：重置包级变量值</strong>。</p><p>init函数就好比Go包真正投入使用之前唯一的“质检员”，负责对包内部以及暴露到外部的包级数据（主要是包级变量）的初始状态进行检查。在Go标准库中，我们能发现很多init函数被用于检查包级变量的初始状态的例子，标准库flag包对init函数的使用就是其中的一个，这里我们简单来分析一下。</p><p>flag包定义了一个导出的包级变量CommandLine，如果用户没有通过flag.NewFlagSet创建新的代表命令行标志集合的实例，那么CommandLine就会作为flag包各种导出函数背后，默认的代表命令行标志集合的实例。</p><p>而在flag包初始化的时候，由于init函数初始化次序在包级变量之后，因此包级变量CommandLine会在init函数之前被初始化了，你可以看一下下面的代码：</p><pre><code class=\"language-plain\">var CommandLine = NewFlagSet(os.Args[0], ExitOnError)\n\nfunc NewFlagSet(name string, errorHandling ErrorHandling) *FlagSet {\n    f := &amp;FlagSet{\n        name:          name,\n        errorHandling: errorHandling,\n    }\n    f.Usage = f.defaultUsage\n    return f\n}\n\nfunc (f *FlagSet) defaultUsage() {\n    if f.name == \"\" {\n        fmt.Fprintf(f.Output(), \"Usage:\\n\")\n    } else {\n        fmt.Fprintf(f.Output(), \"Usage of %s:\\n\", f.name)\n    }\n    f.PrintDefaults()\n}\n</code></pre><p>我们可以看到，在通过NewFlagSet创建CommandLine变量绑定的FlagSet类型实例时，CommandLine的Usage字段被赋值为defaultUsage。</p><p>也就是说，如果保持现状，那么使用flag包默认CommandLine的用户就无法自定义usage的输出了。于是，flag包在init函数中重置了CommandLine的Usage字段：</p><pre><code class=\"language-plain\">func init() {\n    CommandLine.Usage = commandLineUsage // 重置CommandLine的Usage字段\n}\n\nfunc commandLineUsage() {\n    Usage()\n}\n\nvar Usage = func() {\n    fmt.Fprintf(CommandLine.Output(), \"Usage of %s:\\n\", os.Args[0])\n    PrintDefaults()\n}\n</code></pre><p>这个时候我们会发现，CommandLine的Usage字段，设置为了一个flag包内的未导出函数commandLineUsage，后者则直接使用了flag包的另外一个导出包变量Usage。这样，就可以通过init函数，将CommandLine与包变量Usage关联在一起了。</p><p>然后，当用户将自定义的usage赋值给了flag.Usage后，就相当于改变了默认代表命令行标志集合的CommandLine变量的Usage。这样当flag包完成初始化后，CommandLine变量便处于一个合理可用的状态了。</p><p><strong>init函数的第二个常用用途，是实现对包级变量的复杂初始化。</strong></p><p>有些包级变量需要一个比较复杂的初始化过程，有些时候，使用它的类型零值（每个Go类型都具有一个零值定义）或通过简单初始化表达式不能满足业务逻辑要求，而init函数则非常适合完成此项工作，标准库http包中就有这样一个典型示例：</p><pre><code class=\"language-plain\">var (\n    http2VerboseLogs    bool // 初始化时默认值为false\n    http2logFrameWrites bool // 初始化时默认值为false\n    http2logFrameReads  bool // 初始化时默认值为false\n    http2inTests        bool // 初始化时默认值为false\n)\n\nfunc init() {\n    e := os.Getenv(\"GODEBUG\")\n    if strings.Contains(e, \"http2debug=1\") {\n        http2VerboseLogs = true // 在init中对http2VerboseLogs的值进行重置\n    }\n    if strings.Contains(e, \"http2debug=2\") {\n        http2VerboseLogs = true // 在init中对http2VerboseLogs的值进行重置\n        http2logFrameWrites = true // 在init中对http2logFrameWrites的值进行重置\n        http2logFrameReads = true // 在init中对http2logFrameReads的值进行重置\n    }\n}\n</code></pre><p>我们可以看到，标准库http包定义了一系列布尔类型的特性开关变量，它们默认处于关闭状态（即值为false），但我们可以通过GODEBUG环境变量的值，开启相关特性开关。</p><p>可是这样一来，简单地将这些变量初始化为类型零值，就不能满足要求了，所以http包在init函数中，就根据环境变量GODEBUG的值，对这些包级开关变量进行了复杂的初始化，从而保证了这些开关变量在http包完成初始化后，可以处于合理状态。</p><p><strong>说完了这个，我们现在来讲init函数的第三个常用用途：在init函数中实现“注册模式”。</strong></p><p>为了让你更好地理解，首先我们来看一段使用lib/pq包访问PostgreSQL数据库的代码示例：</p><pre><code class=\"language-plain\">import (\n    \"database/sql\"\n    _ \"github.com/lib/pq\"\n)\n\nfunc main() {\n    db, err := sql.Open(\"postgres\", \"user=pqgotest dbname=pqgotest sslmode=verify-full\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    \n    age := 21\n    rows, err := db.Query(\"SELECT name FROM users WHERE age = $1\", age)\n    ...\n}\n</code></pre><p>其实，这是一段“神奇”的代码，你可以看到示例代码是以空导入的方式导入lib/pq包的，main函数中没有使用pq包的任何变量、函数或方法，这样就实现了对PostgreSQL数据库的访问。而这一切的奥秘，全在pq包的init函数中：</p><pre><code class=\"language-plain\">func init() {\n    sql.Register(\"postgres\", &amp;Driver{})\n}\n</code></pre><p>这个奥秘就在，我们其实是利用了用空导入的方式导入lib/pq包时产生的一个“副作用”，也就是lib/pq包作为main包的依赖包，它的init函数会在pq包初始化的时候得以执行。</p><p>从上面代码中，我们可以看到在pq包的init函数中，pq包将自己实现的sql驱动注册到了sql包中。这样只要应用层代码在Open数据库的时候，传入驱动的名字（这里是“postgres”)，那么通过sql.Open函数，返回的数据库实例句柄对数据库进行的操作，实际上调用的都是pq包中相应的驱动实现。</p><p>实际上，这种<strong>通过在init函数中注册自己的实现的模式，就有效降低了Go包对外的直接暴露</strong>，尤其是包级变量的暴露，从而避免了外部通过包级变量对包状态的改动。</p><p>另外，从标准库database/sql包的角度来看，这种“注册模式”实质是一种工厂设计模式的实现，sql.Open函数就是这个模式中的工厂方法，它根据外部传入的驱动名称“生产”出不同类别的数据库实例句柄。</p><p>这种“注册模式”在标准库的其他包中也有广泛应用，比如说，使用标准库image包获取各种格式图片的宽和高：</p><pre><code class=\"language-plain\">package main\n\nimport (\n    \"fmt\"\n    \"image\"\n    _ \"image/gif\" // 以空导入方式注入gif图片格式驱动\n    _ \"image/jpeg\" // 以空导入方式注入jpeg图片格式驱动\n    _ \"image/png\" // 以空导入方式注入png图片格式驱动\n    \"os\"\n)\n\nfunc main() {\n    // 支持png, jpeg, gif\n    width, height, err := imageSize(os.Args[1]) // 获取传入的图片文件的宽与高\n    if err != nil {\n        fmt.Println(\"get image size error:\", err)\n        return\n    }\n    fmt.Printf(\"image size: [%d, %d]\\n\", width, height)\n}\n\nfunc imageSize(imageFile string) (int, int, error) {\n    f, _ := os.Open(imageFile) // 打开图文文件\n    defer f.Close()\n\n    img, _, err := image.Decode(f) // 对文件进行解码，得到图片实例\n    if err != nil {\n        return 0, 0, err\n    }\n\n    b := img.Bounds() // 返回图片区域\n    return b.Max.X, b.Max.Y, nil\n}\n</code></pre><p>你可以看到，上面这个示例程序支持png、jpeg、gif三种格式的图片，而达成这一目标的原因，正是image/png、image/jpeg和image/gif包都在各自的init函数中，将自己“注册”到image的支持格式列表中了，你可以看看下面这个代码：</p><pre><code class=\"language-plain\">// $GOROOT/src/image/png/reader.go\nfunc init() {\n    image.RegisterFormat(\"png\", pngHeader, Decode, DecodeConfig)\n}\n\n// $GOROOT/src/image/jpeg/reader.go\nfunc init() {\n    image.RegisterFormat(\"jpeg\", \"\\xff\\xd8\", Decode, DecodeConfig)\n}\n\n// $GOROOT/src/image/gif/reader.go\nfunc init() {\n    image.RegisterFormat(\"gif\", \"GIF8?a\", Decode, DecodeConfig)\n}  \n</code></pre><p>那么，现在我们了解了init函数的常见用途。init函数之所以可以胜任这些工作，恰恰是因为它在Go应用初始化次序中的特殊“位次”，也就是main函数之前，常量和变量初始化之后。</p><h3>小结</h3><p>好了，我们今天这一节课就到这里了。</p><p>在这一节课中，我们一起了解了Go应用的用户层入口函数main.main、包初始化函数init，还有Go程序包的初始化次序和包内各种语法元素的初始化次序。</p><p>其中，你需要重点关注init函数具备的几种行为特征：</p><ul>\n<li>执行顺位排在包内其他语法元素的后面；</li>\n<li>每个init函数在整个Go程序生命周期内仅会被执行一次；</li>\n<li>init函数是顺序执行的，只有当一个init函数执行完毕后，才会去执行下一个init函数。</li>\n</ul><p>基于上面这些特征，init函数十分适合做一些包级数据初始化工作以及包级数据初始状态的检查工作，我们也通过实例讲解了init函数的这些常见用途。</p><p>最后，大多Go程序都是并发程序，程序会启动多个Goroutine并发执行程序逻辑，这里你一定要注意主Goroutine的优雅退出，也就是主Goroutine要根据实际情况来决定，是否要等待其他子Goroutine做完清理收尾工作退出后再行退出。</p><h3>思考题</h3><p>今天我给你留了一个思考题：当init函数在检查包数据初始状态时遇到失败或错误的情况，我们该如何处理呢？欢迎在留言区留下你的答案。</p><p>感谢你和我一起学习，也欢迎你把这门课分享给更多对Go语言感兴趣的朋友。我是Tony Bai，我们下节课见。</p>","comments":[{"had_liked":false,"id":318876,"user_name":"andox","can_delete":false,"product_type":"c1","uid":1312987,"ip_address":"","ucode":"28C037A0F82E7D","user_header":"","comment_is_top":false,"comment_ctime":1635472189,"is_pvip":false,"replies":[{"id":115659,"content":"手动点赞！","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598042,"ip_address":"","comment_id":318876,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"分情况而定\n1. 初始化失败的是必要的数据 panic处理 结束进程\n1. 初始化失败的是对业务没影响，可成功可失败的 输出warn或error日志 方便定位","like_count":104},{"had_liked":false,"id":321749,"user_name":"多选参数","can_delete":false,"product_type":"c1","uid":1248326,"ip_address":"","ucode":"B2294D80AB075F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","comment_is_top":false,"comment_ctime":1637029894,"is_pvip":false,"replies":[{"id":117133,"content":"问题很好。实测情况是go会先按文件传入顺序，分别初始化常量与变量，然后在分别调用各个文件中的init函数。比如说如果一个pkg1有两个文件file1.go和file2.go，那么初始化顺序是：file1中的常量 -&amp;gt; file1中的变量 -&amp;gt; file2中常量 -&amp;gt; file2中变量 -&amp;gt; file1中init函数 -&amp;gt; file2中init函数。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637554998,"ip_address":"","comment_id":321749,"utype":1}],"discussion_count":13,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"同一个包内有多个源文件的话，这个包是将所有源文件的常量、变量、init() 函数汇集到一起，然后常量-变量-init() 这样的顺序进行初始化，而不是每个源文件走一遍常量-变量-init() 这样的顺序，是嘛？老师","like_count":56,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529411,"discussion_content":"手动点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2445017,"avatar":"https://static001.geekbang.org/account/avatar/00/25/4e/d9/a559e58c.jpg","nickname":"郭橙輝-","note":"","ucode":"2B61A22448E5DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636389,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1706068035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318965,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1635492758,"is_pvip":false,"replies":[{"id":115663,"content":"go不允许循环依赖。编译器会检测并报错。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598326,"ip_address":"","comment_id":318965,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"go 循环依赖是怎么处理的？","like_count":27,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529446,"discussion_content":"go不允许循环依赖。编译器会检测并报错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566723,"discussion_content":"编写的时候循环依赖没有问题，比如写代码导入的时候 A 导入 B , B 到导入 A。再当你要编译 go build 、执行 go run 的时候, 编译器报错信息会告诉你哪个地方循环导入了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650733710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318824,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1635439435,"is_pvip":false,"replies":[{"id":115657,"content":"手动点赞！","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635597943,"ip_address":"","comment_id":318824,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"简单做个笔记：\n- Go 包的初始化次序：\n1）依赖包按“深度优先”的次序进行初始化；\n2）每个包内按以“常量 -&gt; 变量 -&gt; init 函数”（main.main 函数前）的顺序进行初始化；\n3）包内的多个 init 函数按出现次序进行自动调用。\n- init 函数常见用途：\n1）重置包级变量值；\n2）实现对包级变量的复杂初始化；\n3）在 init 函数中实现“注册模式”（工厂设计模式）- 空导入。\n- init 函数具备的几种行为特征（init 函数十分适合做一些包级数据初始化工作以及包级数据初始状态的检查工作）：\n1）执行顺位排在包内其他语法元素的后面；\n2）每个 init 函数在整个 Go 程序生命周期内仅会被执行一次；\n3）init 函数是顺序执行的，只有当一个 init 函数执行完毕后，才会去执行下一个 init 函数。\n","like_count":25,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529389,"discussion_content":"手动点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635597943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111176,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/88/133bc14b.jpg","nickname":"c340","note":"","ucode":"D64CC3DDD09A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582635,"discussion_content":"有点自动注入的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659571044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343265,"user_name":"谢小路","can_delete":false,"product_type":"c1","uid":1035064,"ip_address":"","ucode":"C9FE2EB10DC105","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","comment_is_top":false,"comment_ctime":1650734205,"is_pvip":false,"replies":[{"id":125435,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651010426,"ip_address":"","comment_id":343265,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"初始化 init 函数先于 main 函数执行，项目中如非必要，禁止隐式的 init 初始化，协作人员多了，各种千奇百怪的问题都可能导致程序执行失败。转而使用显式的初始化，直接在 main 函数中调用对应的初始化方法。","like_count":10,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567814,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651010426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576386,"discussion_content":"这个时候的init方法是否还能定义为 init(){xxx} ?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655494909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319099,"user_name":"python玩家一枚","can_delete":false,"product_type":"c1","uid":1709839,"ip_address":"","ucode":"6D9C988960BFE5","user_header":"https://static001.geekbang.org/account/avatar/00/1a/17/0f/2a35eb18.jpg","comment_is_top":false,"comment_ctime":1635583675,"is_pvip":false,"replies":[{"id":115668,"content":"正确✅","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598857,"ip_address":"","comment_id":319099,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"init失败的话，我感觉一般init中要完成的内容好像都偏向资源属性，如果有必然能成功的默认属性则走默认值并警告，如果是必要资源则不成功会影响后续的运行，这时候应该要直接严重错误告警并终止程序吧","like_count":8,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529498,"discussion_content":"正确✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2445017,"avatar":"https://static001.geekbang.org/account/avatar/00/25/4e/d9/a559e58c.jpg","nickname":"郭橙輝-","note":"","ucode":"2B61A22448E5DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636388,"discussion_content":"感觉可以直接panic","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1706068019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319759,"user_name":"布凡","can_delete":false,"product_type":"c1","uid":1202465,"ip_address":"","ucode":"346FCD332F8BFA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","comment_is_top":false,"comment_ctime":1635931374,"is_pvip":false,"replies":[{"id":116236,"content":"gopath模式下肯定不行。go module模式下，检查一下go.mod中module path是否是github.com&#47;bigwhite&#47;prog-init-order?","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636420609,"ip_address":"","comment_id":319759,"utype":1}],"discussion_count":8,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"\nprog-init-order\n├── go.mod\n├── main.go\n├── pkg1\n│   └── pkg1.go\n├── pkg2\n│   └── pkg2.go\n└── pkg3\n    └── pkg3.go\n\n    怎样在main.go中引用包\n    _ &quot;github.com&#47;bigwhite&#47;prog-init-order&#47;pkg1&quot;\n     _ &quot;github.com&#47;bigwhite&#47;prog-init-order&#47;pkg2&quot; 有什么特殊的操作吗？因为我在vscode上事件的时候会提示\n“could not import xxx(cannot find package &quot;xxx&quot; in any of C:&#47;Program File\\Go(from $GOROOT)  ……(from $GOPATH))”\n意思是GOPATH中找不这个包，就算我将项目变成了一个Go Module 也依然找不到，是我那里理解的有问题吗？还请老师解惑，main中 import是怎样引用到自己的pkg包中的方法呢？","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529762,"discussion_content":"gopath模式下肯定不行。go module模式下，检查一下go.mod中module path是否是github.com/bigwhite/prog-init-order?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636420609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","nickname":"布凡","note":"","ucode":"346FCD332F8BFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411807,"discussion_content":"1 import 过程理解：\n\n首先明确 GOROOT 和 GOPATH 绝对路径，通过命令行go env即可查看。\n包依赖引用的寻找过程：举例*.go文件中 import &#34;custompkg&#34;会查找如下路径：\n\n<GOROOT>/src/custompkg 表示from $GOROOT;\n<GOPATH>/src/custompkg 表示from $GOPATH;\n<GOPATH>/src/<projectName>/vendor/custompkg 表示 vendor tree，如果没有用GOVENDER，参考GOMOD;\n<GOPATH>/src/<projectName>/src/custompkg 表示from $GOPATH;\n然后理解了本地找不到 package 的原因，（需要将自己的项目文件放到<GOPATH>对应的src目录下面）\n——————分割线————\n但是奇怪的是我从网上拉下来的老师的代码，虽然不在<GOPATH>对应的src目录下面，但是通过build 命令也能够成功，这是什么原因呢?","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636009262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2323716,"avatar":"https://static001.geekbang.org/account/avatar/00/23/75/04/d26cd437.jpg","nickname":"lemon","note":"","ucode":"47626025C55E5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1202465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","nickname":"布凡","note":"","ucode":"346FCD332F8BFA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531503,"discussion_content":"开启了go module模式，项目文件不用非得在src下面，我感觉可能是因为你的go mod init+module路径这里，module路径写的不对，可以像老师说的一样检查一下go.mod中module path是否是github.com/bigwhite/prog-init-order...不是的话可以删掉go.mod再执行一下go mod init github.com/bigwhite/prog-init-order","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637325580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411807,"ip_address":"","group_id":0},"score":531503,"extra":"{\"user_type\":1}"}]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576385,"discussion_content":"我就是被这个问题劝退了一周多。。。看大家评论五花八门就知道这个问题并不简单。。。看了作者的好几个module教程也不是很清楚这个问题的答案。 看似replace能解决？ 但是相对路径也经常失效，而且版本号也很奇怪。 似乎可以随意指定版本号，然后replace相对路径，找到pkg1？ 但如果pkg1有自己的mod文件，那又是什么情况？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655494784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1494493,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cd/dd/0a980b3d.jpg","nickname":"刘勇","note":"","ucode":"5D877BB0B56BBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571674,"discussion_content":"可以看下pkg1.go的第一句，是不是package pkg1，还有就是pkg1不要做go mod init，如果做了go mod init就不再支持相对路径，需要在go.mod中使用replace =&gt; 指明相对路径。希望可以帮到你！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652342371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2840264,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/AczWVI3PwIDzemyUQVm05XCo5Do7iagdoxqKvUADmwibXwa0wP4TeFwIqj6KOTvYdtlBHeoia3PbPnm6QHgQzX2Lw/132","nickname":"Geek_0da9d5","note":"","ucode":"F26D0F4B386104","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541633,"discussion_content":"我理解同学即使利用go moudle的模式也找不到的原因应该是老师在github上面bigwhite 中没有prog-init-order这个资源，所以即使你用mod模式也down不下来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640492339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609350,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2rRMjRdMelicUoU5yXibENlYapdvPUCibOk8bGicyFoIW7IMxMqhicgelVphEmWFpMucVXjQjv5pdu6RgDkNiav0qUcw/132","nickname":"holly","note":"","ucode":"9D57569ED81CBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413668,"discussion_content":"你可以再看下老师前面课程讲的go module的构建模式。\n我是导入本地的包，目录结构如下：\n.\n├── go.mod*\n├── main.go*\n├── pkg1/\n├── pkg2/\n└── pkg3/\ngo mod init prog-init-order\ngo run main.go\n输出结果：\npkg3: c3 has been initilized\npakg3:var %s has been initilized\n v3\ninit func invoked\npakg1: c1 has been initilized\npkg1:var %s has been initilized\n v1\ninit func invoked\nmain: c1 has been initilized\nmanin: c2 has been initilized\nmain: var %s has been initilized\n v1\nmain: var %s has been initilized\n v2\nmain: first init func invoked\nmain: second init func invoked\nmain: const c1 has been initialized\n我的main包导入的内容：\nimport (\n\t&#34;fmt&#34;\n\n\t_ &#34;prog-init-order/pkg1&#34;\n)\n我的go.mod 内容\nmodule prog-init-order\n\ngo 1.17\n供参考。\n不知为何，我的格式化输出没有替换为变量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636538284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188486,"avatar":"https://static001.geekbang.org/account/avatar/00/12/22/86/3fe860c9.jpg","nickname":"邰洋一","note":"","ucode":"148DA7C913B28B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412111,"discussion_content":"采用go module构建，可以在任何位置运行，不用指定位置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636079311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319049,"user_name":"进化菌","can_delete":false,"product_type":"c1","uid":1276861,"ip_address":"","ucode":"B30A5F78BB4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/bd/ccb37425.jpg","comment_is_top":false,"comment_ctime":1635526567,"is_pvip":true,"replies":[{"id":115667,"content":"init函数没有返回值，异常是通过panic机制传导的，通常导致程序退出。当 init 函数在检查包数据初始状态时遇到失败或错误的情况，通过panic退出是一个多数的选择。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598834,"ip_address":"","comment_id":319049,"utype":1}],"discussion_count":1,"race_medal":4,"score":2,"product_id":100093501,"comment_content":"真棒，相当于了解go代码的执行生命周期。\n当 init 函数在检查包数据初始状态时遇到失败或错误的情况，我们该如何处理呢？直接返回异常吗？在go里面，异常一般会当成第二个返回值吧。","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529762,"discussion_content":"gopath模式下肯定不行。go module模式下，检查一下go.mod中module path是否是github.com/bigwhite/prog-init-order?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636420609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1202465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","nickname":"布凡","note":"","ucode":"346FCD332F8BFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411807,"discussion_content":"1 import 过程理解：\n\n首先明确 GOROOT 和 GOPATH 绝对路径，通过命令行go env即可查看。\n包依赖引用的寻找过程：举例*.go文件中 import &#34;custompkg&#34;会查找如下路径：\n\n<GOROOT>/src/custompkg 表示from $GOROOT;\n<GOPATH>/src/custompkg 表示from $GOPATH;\n<GOPATH>/src/<projectName>/vendor/custompkg 表示 vendor tree，如果没有用GOVENDER，参考GOMOD;\n<GOPATH>/src/<projectName>/src/custompkg 表示from $GOPATH;\n然后理解了本地找不到 package 的原因，（需要将自己的项目文件放到<GOPATH>对应的src目录下面）\n——————分割线————\n但是奇怪的是我从网上拉下来的老师的代码，虽然不在<GOPATH>对应的src目录下面，但是通过build 命令也能够成功，这是什么原因呢?","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636009262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2323716,"avatar":"https://static001.geekbang.org/account/avatar/00/23/75/04/d26cd437.jpg","nickname":"lemon","note":"","ucode":"47626025C55E5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1202465,"avatar":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","nickname":"布凡","note":"","ucode":"346FCD332F8BFA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531503,"discussion_content":"开启了go module模式，项目文件不用非得在src下面，我感觉可能是因为你的go mod init+module路径这里，module路径写的不对，可以像老师说的一样检查一下go.mod中module path是否是github.com/bigwhite/prog-init-order...不是的话可以删掉go.mod再执行一下go mod init github.com/bigwhite/prog-init-order","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637325580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":411807,"ip_address":"","group_id":0},"score":531503,"extra":"{\"user_type\":1}"}]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576385,"discussion_content":"我就是被这个问题劝退了一周多。。。看大家评论五花八门就知道这个问题并不简单。。。看了作者的好几个module教程也不是很清楚这个问题的答案。 看似replace能解决？ 但是相对路径也经常失效，而且版本号也很奇怪。 似乎可以随意指定版本号，然后replace相对路径，找到pkg1？ 但如果pkg1有自己的mod文件，那又是什么情况？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655494784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1494493,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cd/dd/0a980b3d.jpg","nickname":"刘勇","note":"","ucode":"5D877BB0B56BBE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571674,"discussion_content":"可以看下pkg1.go的第一句，是不是package pkg1，还有就是pkg1不要做go mod init，如果做了go mod init就不再支持相对路径，需要在go.mod中使用replace =&gt; 指明相对路径。希望可以帮到你！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652342371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2840264,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/AczWVI3PwIDzemyUQVm05XCo5Do7iagdoxqKvUADmwibXwa0wP4TeFwIqj6KOTvYdtlBHeoia3PbPnm6QHgQzX2Lw/132","nickname":"Geek_0da9d5","note":"","ucode":"F26D0F4B386104","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541633,"discussion_content":"我理解同学即使利用go moudle的模式也找不到的原因应该是老师在github上面bigwhite 中没有prog-init-order这个资源，所以即使你用mod模式也down不下来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640492339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609350,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2rRMjRdMelicUoU5yXibENlYapdvPUCibOk8bGicyFoIW7IMxMqhicgelVphEmWFpMucVXjQjv5pdu6RgDkNiav0qUcw/132","nickname":"holly","note":"","ucode":"9D57569ED81CBA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413668,"discussion_content":"你可以再看下老师前面课程讲的go module的构建模式。\n我是导入本地的包，目录结构如下：\n.\n├── go.mod*\n├── main.go*\n├── pkg1/\n├── pkg2/\n└── pkg3/\ngo mod init prog-init-order\ngo run main.go\n输出结果：\npkg3: c3 has been initilized\npakg3:var %s has been initilized\n v3\ninit func invoked\npakg1: c1 has been initilized\npkg1:var %s has been initilized\n v1\ninit func invoked\nmain: c1 has been initilized\nmanin: c2 has been initilized\nmain: var %s has been initilized\n v1\nmain: var %s has been initilized\n v2\nmain: first init func invoked\nmain: second init func invoked\nmain: const c1 has been initialized\n我的main包导入的内容：\nimport (\n\t&#34;fmt&#34;\n\n\t_ &#34;prog-init-order/pkg1&#34;\n)\n我的go.mod 内容\nmodule prog-init-order\n\ngo 1.17\n供参考。\n不知为何，我的格式化输出没有替换为变量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636538284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188486,"avatar":"https://static001.geekbang.org/account/avatar/00/12/22/86/3fe860c9.jpg","nickname":"邰洋一","note":"","ucode":"148DA7C913B28B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412111,"discussion_content":"采用go module构建，可以在任何位置运行，不用指定位置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636079311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357596,"user_name":"CLMOOK🐾","can_delete":false,"product_type":"c1","uid":1321526,"ip_address":"北京","ucode":"F6C75A32A59A34","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/36/c5d1a120.jpg","comment_is_top":false,"comment_ctime":1663464983,"is_pvip":false,"replies":[{"id":130231,"content":"1. init函数不是普通函数，就和main函数一样，编译器会有特殊关照，一个包里有多个init不会出现“init已定义”的编译错误。\n2. 至于允许存在多个init，这个没有标准答案。日常实践中，我会将不同类型的初始化操作放在不同init（初始化的“内聚”），同一包内的不同文件的内的初始化，都放在各自文件中，这样代码可读性好一些。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1663640886,"ip_address":"北京","comment_id":357596,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师好，有个小疑问，为啥init()允许在一个源文件中有多个，与其他func一样不允许同名不是简单点？go这么设计的出发点是什么？\n谢谢","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529475,"discussion_content":"init函数没有返回值，异常是通过panic机制传导的，通常导致程序退出。当 init 函数在检查包数据初始状态时遇到失败或错误的情况，通过panic退出是一个多数的选择。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319054,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1635528493,"is_pvip":false,"replies":[{"id":115669,"content":"1. 不可以。main包中定义的main函数也仅能在main包内使用\n2. 好建议。\n3. 如果标准库中有合适的例子，我会尽量用标准库的。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635599050,"ip_address":"","comment_id":319054,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"\nTony Bai 老师中这一讲很精彩，受益良多。\n\n另外有几个问题，麻烦抽空解答一下：\n\n1. 文中说：“非 main 包中自定义的 main 函数仅限于包内使用？”  那我是否可以理解为：main包中定义的 main函数，包外可以使用？\n\n2. 感觉这个课程应该弄个 GitHub 仓库，提交一些本课程中的代码 ？ 便于以后进行代码的学习和复习使用?\n\nps: 老师结合标准库源码来讲代码的使用方法非常棒，个人感觉比举例 用类似阿猫、 阿狗之类的代码更利于上手学习。","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588270,"discussion_content":"1. init函数不是普通函数，就和main函数一样，编译器会有特殊关照，一个包里有多个init不会出现“init已定义”的编译错误。\n2. 至于允许存在多个init，这个没有标准答案。日常实践中，我会将不同类型的初始化操作放在不同init（初始化的“内聚”），同一包内的不同文件的内的初始化，都放在各自文件中，这样代码可读性好一些。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1663640886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318876,"user_name":"andox","can_delete":false,"product_type":"c1","uid":1312987,"ip_address":"","ucode":"28C037A0F82E7D","user_header":"","comment_is_top":false,"comment_ctime":1635472189,"is_pvip":false,"replies":[{"id":115659,"content":"手动点赞！","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598042,"ip_address":"","comment_id":318876,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"分情况而定\n1. 初始化失败的是必要的数据 panic处理 结束进程\n1. 初始化失败的是对业务没影响，可成功可失败的 输出warn或error日志 方便定位","like_count":104,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529411,"discussion_content":"手动点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2445017,"avatar":"https://static001.geekbang.org/account/avatar/00/25/4e/d9/a559e58c.jpg","nickname":"郭橙輝-","note":"","ucode":"2B61A22448E5DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636389,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1706068035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321749,"user_name":"多选参数","can_delete":false,"product_type":"c1","uid":1248326,"ip_address":"","ucode":"B2294D80AB075F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","comment_is_top":false,"comment_ctime":1637029894,"is_pvip":false,"replies":[{"id":117133,"content":"问题很好。实测情况是go会先按文件传入顺序，分别初始化常量与变量，然后在分别调用各个文件中的init函数。比如说如果一个pkg1有两个文件file1.go和file2.go，那么初始化顺序是：file1中的常量 -&amp;gt; file1中的变量 -&amp;gt; file2中常量 -&amp;gt; file2中变量 -&amp;gt; file1中init函数 -&amp;gt; file2中init函数。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637554998,"ip_address":"","comment_id":321749,"utype":1}],"discussion_count":13,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"同一个包内有多个源文件的话，这个包是将所有源文件的常量、变量、init() 函数汇集到一起，然后常量-变量-init() 这样的顺序进行初始化，而不是每个源文件走一遍常量-变量-init() 这样的顺序，是嘛？老师","like_count":56,"discussions":[{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580333,"discussion_content":"我实验了一下  这个同一个文件夹下面一个包里面的不同文件的载入顺序是按照文件名字大小载入的、确切的说是 先载入  test2.go  再载入test3.go、如果把它tset2.go名字换成test5.go  把test3.go名字换成test4.go  ...那么载入顺序是 test4.go/test5.go  与包内内容没关系与名字有关","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1658108992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552553,"discussion_content":"文章中的输出结果，应该可以说明问题：\n\n$go run main.go\npkg3: const c has been initialized\npkg3: var v has been initialized\npkg3: init func invoked\npkg1: const c has been initialized\npkg1: var v has been initialized\npkg1: init func invoked\npkg2: const c has been initialized\npkg2: var v has been initialized\npkg2: init func invoked\nmain: const c1 has been initialized\nmain: const c2 has been initialized\nmain: var v1 has been initialized\nmain: var v2 has been initialized\nmain: first init func invoked\nmain: second init func invoked\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1645510888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1045910,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f5/96/0cf9f3c7.jpg","nickname":"Aeins","note":"","ucode":"D5BF220767541D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573379,"discussion_content":"不可以，问题是同一个包多个源文件.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653383813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552553,"ip_address":"","group_id":0},"score":573379,"extra":""},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576384,"discussion_content":"这个输出跟这个问题没啥关系。。。这个输出是一个文件里面的导入包情况。 这个问题是同一个包下的多个文件的导入初始化顺序。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655494419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552553,"ip_address":"","group_id":0},"score":576384,"extra":""}]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532201,"discussion_content":"问题很好。实测情况是go会先按文件传入顺序，分别初始化常量与变量，然后在分别调用各个文件中的init函数。比如说如果一个pkg1有两个文件file1.go和file2.go，那么初始化顺序是：file1中的常量 -&amp;gt; file1中的变量 -&amp;gt; file2中常量 -&amp;gt; file2中变量 -&amp;gt; file1中init函数 -&amp;gt; file2中init函数。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1637554998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":6,"child_discussions":[{"author":{"id":2994187,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/b0/0b/3af76905.jpg","nickname":"核桃壳君主","note":"","ucode":"6A93ADA3666CE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":573435,"discussion_content":"一个包内不允许存在同名函数，但是允许存在多个init，是因为init不允许被显式调用的原因吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653409193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":532201,"ip_address":"","group_id":0},"score":573435,"extra":""},{"author":{"id":1031680,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/pESfAX6YVRnVg3HpOX44bTa64bHTbhsnlHJqqDjicBeELxCs5rwwIXibFibd0fua3VyVExypnqnfgTSUp8WoYmc9g/132","nickname":"白小白","note":"","ucode":"2CCB878DA2E93D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":582228,"discussion_content":"有没有这样一种情况：假如file1种的某个func中的参数依赖file2种的常量，此时加载顺序会怎么样？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659324036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":532201,"ip_address":"广东","group_id":0},"score":582228,"extra":""},{"author":{"id":1802350,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/80/6e/94987c2a.jpg","nickname":"XLQ","note":"","ucode":"7CEBC4DC1F34C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1031680,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/pESfAX6YVRnVg3HpOX44bTa64bHTbhsnlHJqqDjicBeELxCs5rwwIXibFibd0fua3VyVExypnqnfgTSUp8WoYmc9g/132","nickname":"白小白","note":"","ucode":"2CCB878DA2E93D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588934,"discussion_content":"这种依赖关系应该不影响初始化过程，因为初始化过程不涉及具体的func。对于file1.go和file2.go，以及上面有同学验证了初始化文件是按照文件名来的，所以是先初始化file1.go中的常量和变量 然后初始化file2.go中的常量和变量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664239612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":582228,"ip_address":"湖北","group_id":0},"score":588934,"extra":""}]},{"author":{"id":1111176,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/88/133bc14b.jpg","nickname":"c340","note":"","ucode":"D64CC3DDD09A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582633,"discussion_content":"包内init顺序，mark","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659570873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/d3/241d0b84.jpg","nickname":"upup","note":"","ucode":"25DB114677EF58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573608,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653544385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318965,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1635492758,"is_pvip":false,"replies":[{"id":115663,"content":"go不允许循环依赖。编译器会检测并报错。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598326,"ip_address":"","comment_id":318965,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"go 循环依赖是怎么处理的？","like_count":27,"discussions":[{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580333,"discussion_content":"我实验了一下  这个同一个文件夹下面一个包里面的不同文件的载入顺序是按照文件名字大小载入的、确切的说是 先载入  test2.go  再载入test3.go、如果把它tset2.go名字换成test5.go  把test3.go名字换成test4.go  ...那么载入顺序是 test4.go/test5.go  与包内内容没关系与名字有关","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1658108992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552553,"discussion_content":"文章中的输出结果，应该可以说明问题：\n\n$go run main.go\npkg3: const c has been initialized\npkg3: var v has been initialized\npkg3: init func invoked\npkg1: const c has been initialized\npkg1: var v has been initialized\npkg1: init func invoked\npkg2: const c has been initialized\npkg2: var v has been initialized\npkg2: init func invoked\nmain: const c1 has been initialized\nmain: const c2 has been initialized\nmain: var v1 has been initialized\nmain: var v2 has been initialized\nmain: first init func invoked\nmain: second init func invoked\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1645510888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1045910,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f5/96/0cf9f3c7.jpg","nickname":"Aeins","note":"","ucode":"D5BF220767541D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573379,"discussion_content":"不可以，问题是同一个包多个源文件.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653383813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552553,"ip_address":"","group_id":0},"score":573379,"extra":""},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576384,"discussion_content":"这个输出跟这个问题没啥关系。。。这个输出是一个文件里面的导入包情况。 这个问题是同一个包下的多个文件的导入初始化顺序。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655494419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":552553,"ip_address":"","group_id":0},"score":576384,"extra":""}]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532201,"discussion_content":"问题很好。实测情况是go会先按文件传入顺序，分别初始化常量与变量，然后在分别调用各个文件中的init函数。比如说如果一个pkg1有两个文件file1.go和file2.go，那么初始化顺序是：file1中的常量 -&amp;gt; file1中的变量 -&amp;gt; file2中常量 -&amp;gt; file2中变量 -&amp;gt; file1中init函数 -&amp;gt; file2中init函数。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1637554998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":6,"child_discussions":[{"author":{"id":2994187,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/b0/0b/3af76905.jpg","nickname":"核桃壳君主","note":"","ucode":"6A93ADA3666CE2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":573435,"discussion_content":"一个包内不允许存在同名函数，但是允许存在多个init，是因为init不允许被显式调用的原因吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653409193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":532201,"ip_address":"","group_id":0},"score":573435,"extra":""},{"author":{"id":1031680,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/pESfAX6YVRnVg3HpOX44bTa64bHTbhsnlHJqqDjicBeELxCs5rwwIXibFibd0fua3VyVExypnqnfgTSUp8WoYmc9g/132","nickname":"白小白","note":"","ucode":"2CCB878DA2E93D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":582228,"discussion_content":"有没有这样一种情况：假如file1种的某个func中的参数依赖file2种的常量，此时加载顺序会怎么样？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659324036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":532201,"ip_address":"广东","group_id":0},"score":582228,"extra":""},{"author":{"id":1802350,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/80/6e/94987c2a.jpg","nickname":"XLQ","note":"","ucode":"7CEBC4DC1F34C3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1031680,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/pESfAX6YVRnVg3HpOX44bTa64bHTbhsnlHJqqDjicBeELxCs5rwwIXibFibd0fua3VyVExypnqnfgTSUp8WoYmc9g/132","nickname":"白小白","note":"","ucode":"2CCB878DA2E93D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588934,"discussion_content":"这种依赖关系应该不影响初始化过程，因为初始化过程不涉及具体的func。对于file1.go和file2.go，以及上面有同学验证了初始化文件是按照文件名来的，所以是先初始化file1.go中的常量和变量 然后初始化file2.go中的常量和变量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664239612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":582228,"ip_address":"湖北","group_id":0},"score":588934,"extra":""}]},{"author":{"id":1111176,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/88/133bc14b.jpg","nickname":"c340","note":"","ucode":"D64CC3DDD09A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582633,"discussion_content":"包内init顺序，mark","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1659570873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/d3/241d0b84.jpg","nickname":"upup","note":"","ucode":"25DB114677EF58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573608,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653544385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318824,"user_name":"Calvin","can_delete":false,"product_type":"c1","uid":1603004,"ip_address":"","ucode":"0EEF5B207623B5","user_header":"https://static001.geekbang.org/account/avatar/00/18/75/bc/89d88775.jpg","comment_is_top":false,"comment_ctime":1635439435,"is_pvip":false,"replies":[{"id":115657,"content":"手动点赞！","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635597943,"ip_address":"","comment_id":318824,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"简单做个笔记：\n- Go 包的初始化次序：\n1）依赖包按“深度优先”的次序进行初始化；\n2）每个包内按以“常量 -&gt; 变量 -&gt; init 函数”（main.main 函数前）的顺序进行初始化；\n3）包内的多个 init 函数按出现次序进行自动调用。\n- init 函数常见用途：\n1）重置包级变量值；\n2）实现对包级变量的复杂初始化；\n3）在 init 函数中实现“注册模式”（工厂设计模式）- 空导入。\n- init 函数具备的几种行为特征（init 函数十分适合做一些包级数据初始化工作以及包级数据初始状态的检查工作）：\n1）执行顺位排在包内其他语法元素的后面；\n2）每个 init 函数在整个 Go 程序生命周期内仅会被执行一次；\n3）init 函数是顺序执行的，只有当一个 init 函数执行完毕后，才会去执行下一个 init 函数。\n","like_count":25,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529446,"discussion_content":"go不允许循环依赖。编译器会检测并报错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566723,"discussion_content":"编写的时候循环依赖没有问题，比如写代码导入的时候 A 导入 B , B 到导入 A。再当你要编译 go build 、执行 go run 的时候, 编译器报错信息会告诉你哪个地方循环导入了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650733710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343265,"user_name":"谢小路","can_delete":false,"product_type":"c1","uid":1035064,"ip_address":"","ucode":"C9FE2EB10DC105","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","comment_is_top":false,"comment_ctime":1650734205,"is_pvip":false,"replies":[{"id":125435,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651010426,"ip_address":"","comment_id":343265,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"初始化 init 函数先于 main 函数执行，项目中如非必要，禁止隐式的 init 初始化，协作人员多了，各种千奇百怪的问题都可能导致程序执行失败。转而使用显式的初始化，直接在 main 函数中调用对应的初始化方法。","like_count":10,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529389,"discussion_content":"手动点赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635597943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111176,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f4/88/133bc14b.jpg","nickname":"c340","note":"","ucode":"D64CC3DDD09A0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582635,"discussion_content":"有点自动注入的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659571044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319099,"user_name":"python玩家一枚","can_delete":false,"product_type":"c1","uid":1709839,"ip_address":"","ucode":"6D9C988960BFE5","user_header":"https://static001.geekbang.org/account/avatar/00/1a/17/0f/2a35eb18.jpg","comment_is_top":false,"comment_ctime":1635583675,"is_pvip":false,"replies":[{"id":115668,"content":"正确✅","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598857,"ip_address":"","comment_id":319099,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"init失败的话，我感觉一般init中要完成的内容好像都偏向资源属性，如果有必然能成功的默认属性则走默认值并警告，如果是必要资源则不成功会影响后续的运行，这时候应该要直接严重错误告警并终止程序吧","like_count":8,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567814,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651010426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576386,"discussion_content":"这个时候的init方法是否还能定义为 init(){xxx} ?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655494909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319759,"user_name":"布凡","can_delete":false,"product_type":"c1","uid":1202465,"ip_address":"","ucode":"346FCD332F8BFA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","comment_is_top":false,"comment_ctime":1635931374,"is_pvip":false,"replies":[{"id":116236,"content":"gopath模式下肯定不行。go module模式下，检查一下go.mod中module path是否是github.com&#47;bigwhite&#47;prog-init-order?","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636420609,"ip_address":"","comment_id":319759,"utype":1}],"discussion_count":8,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"\nprog-init-order\n├── go.mod\n├── main.go\n├── pkg1\n│   └── pkg1.go\n├── pkg2\n│   └── pkg2.go\n└── pkg3\n    └── pkg3.go\n\n    怎样在main.go中引用包\n    _ &quot;github.com&#47;bigwhite&#47;prog-init-order&#47;pkg1&quot;\n     _ &quot;github.com&#47;bigwhite&#47;prog-init-order&#47;pkg2&quot; 有什么特殊的操作吗？因为我在vscode上事件的时候会提示\n“could not import xxx(cannot find package &quot;xxx&quot; in any of C:&#47;Program File\\Go(from $GOROOT)  ……(from $GOPATH))”\n意思是GOPATH中找不这个包，就算我将项目变成了一个Go Module 也依然找不到，是我那里理解的有问题吗？还请老师解惑，main中 import是怎样引用到自己的pkg包中的方法呢？","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529498,"discussion_content":"正确✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2445017,"avatar":"https://static001.geekbang.org/account/avatar/00/25/4e/d9/a559e58c.jpg","nickname":"郭橙輝-","note":"","ucode":"2B61A22448E5DD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636388,"discussion_content":"感觉可以直接panic","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1706068019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319049,"user_name":"进化菌","can_delete":false,"product_type":"c1","uid":1276861,"ip_address":"","ucode":"B30A5F78BB4171","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/bd/ccb37425.jpg","comment_is_top":false,"comment_ctime":1635526567,"is_pvip":true,"replies":[{"id":115667,"content":"init函数没有返回值，异常是通过panic机制传导的，通常导致程序退出。当 init 函数在检查包数据初始状态时遇到失败或错误的情况，通过panic退出是一个多数的选择。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598834,"ip_address":"","comment_id":319049,"utype":1}],"discussion_count":1,"race_medal":4,"score":2,"product_id":100093501,"comment_content":"真棒，相当于了解go代码的执行生命周期。\n当 init 函数在检查包数据初始状态时遇到失败或错误的情况，我们该如何处理呢？直接返回异常吗？在go里面，异常一般会当成第二个返回值吧。","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529475,"discussion_content":"init函数没有返回值，异常是通过panic机制传导的，通常导致程序退出。当 init 函数在检查包数据初始状态时遇到失败或错误的情况，通过panic退出是一个多数的选择。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357596,"user_name":"CLMOOK🐾","can_delete":false,"product_type":"c1","uid":1321526,"ip_address":"北京","ucode":"F6C75A32A59A34","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/36/c5d1a120.jpg","comment_is_top":false,"comment_ctime":1663464983,"is_pvip":false,"replies":[{"id":130231,"content":"1. init函数不是普通函数，就和main函数一样，编译器会有特殊关照，一个包里有多个init不会出现“init已定义”的编译错误。\n2. 至于允许存在多个init，这个没有标准答案。日常实践中，我会将不同类型的初始化操作放在不同init（初始化的“内聚”），同一包内的不同文件的内的初始化，都放在各自文件中，这样代码可读性好一些。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1663640886,"ip_address":"北京","comment_id":357596,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师好，有个小疑问，为啥init()允许在一个源文件中有多个，与其他func一样不允许同名不是简单点？go这么设计的出发点是什么？\n谢谢","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588270,"discussion_content":"1. init函数不是普通函数，就和main函数一样，编译器会有特殊关照，一个包里有多个init不会出现“init已定义”的编译错误。\n2. 至于允许存在多个init，这个没有标准答案。日常实践中，我会将不同类型的初始化操作放在不同init（初始化的“内聚”），同一包内的不同文件的内的初始化，都放在各自文件中，这样代码可读性好一些。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1663640886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319054,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1635528493,"is_pvip":false,"replies":[{"id":115669,"content":"1. 不可以。main包中定义的main函数也仅能在main包内使用\n2. 好建议。\n3. 如果标准库中有合适的例子，我会尽量用标准库的。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635599050,"ip_address":"","comment_id":319054,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"\nTony Bai 老师中这一讲很精彩，受益良多。\n\n另外有几个问题，麻烦抽空解答一下：\n\n1. 文中说：“非 main 包中自定义的 main 函数仅限于包内使用？”  那我是否可以理解为：main包中定义的 main函数，包外可以使用？\n\n2. 感觉这个课程应该弄个 GitHub 仓库，提交一些本课程中的代码 ？ 便于以后进行代码的学习和复习使用?\n\nps: 老师结合标准库源码来讲代码的使用方法非常棒，个人感觉比举例 用类似阿猫、 阿狗之类的代码更利于上手学习。","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529477,"discussion_content":"1. 不可以。main包中定义的main函数也仅能在main包内使用\n2. 好建议。\n3. 如果标准库中有合适的例子，我会尽量用标准库的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635599050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1479120,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","nickname":"无咎","note":"","ucode":"B9759B5646F3AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":602010,"discussion_content":"举例用标准库的例子，便于读者查看和使用，但也要结合用意来选择。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675599838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318979,"user_name":"二的根比方","can_delete":false,"product_type":"c1","uid":1528825,"ip_address":"","ucode":"D0A43E08ACEFC2","user_header":"https://static001.geekbang.org/account/avatar/00/17/53/f9/8acc210d.jpg","comment_is_top":false,"comment_ctime":1635495299,"is_pvip":false,"replies":[{"id":115665,"content":"对的。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598392,"ip_address":"","comment_id":318979,"utype":1}],"discussion_count":5,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"老师，请问下“GO入口文件包名称一定要是main，func名称一定要是main，（满足2个条件）文件名或者文件夹名字不一定是main。”这样的说法对吗","like_count":4},{"had_liked":false,"id":357702,"user_name":"Min","can_delete":false,"product_type":"c1","uid":1325498,"ip_address":"北京","ucode":"068EBBA531BB21","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/ba/a2b48904.jpg","comment_is_top":false,"comment_ctime":1663573972,"is_pvip":false,"replies":[{"id":130233,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1663641052,"ip_address":"北京","comment_id":357702,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"我在本地尝试了下老师提供的 demo 可以跑过，输出结果也跟老师一样，具体操作如下\n\nmkdir initorder\ncd initorder\ngo mod init initorder\nmkdir pkg{1..3}\ntouch main.go pkg1&#47;pkg1.go pkg2&#47;pkg2.go pkg3&#47;pkg3.go\n\n代码中import部分变成了\nimport (\n\t_ &quot;initorder&#47;pkg1&quot;\n\t_ &quot;initorder&#47;pkg2&quot;\n)\n\nimport (\n\t_ &quot;initorder&#47;pkg3&quot;\n)\n\n我的Repo: https:&#47;&#47;github.com&#47;myangvgo&#47;go-first-lesson&#47;tree&#47;main&#47;initorder","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529450,"discussion_content":"对的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409904,"discussion_content":"包文件名可以和包名不同。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635527519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1528825,"avatar":"https://static001.geekbang.org/account/avatar/00/17/53/f9/8acc210d.jpg","nickname":"二的根比方","note":"","ucode":"D0A43E08ACEFC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409930,"discussion_content":"对的，后面实验了一下。看完老师的课再去练习下，看看评论区，收货很多。谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635555318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409904,"ip_address":"","group_id":0},"score":409930,"extra":""},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1528825,"avatar":"https://static001.geekbang.org/account/avatar/00/17/53/f9/8acc210d.jpg","nickname":"二的根比方","note":"","ucode":"D0A43E08ACEFC2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410007,"discussion_content":"不客气","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635568542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409930,"ip_address":"","group_id":0},"score":410007,"extra":""}]},{"author":{"id":1528825,"avatar":"https://static001.geekbang.org/account/avatar/00/17/53/f9/8acc210d.jpg","nickname":"二的根比方","note":"","ucode":"D0A43E08ACEFC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409932,"discussion_content":"请问下init的应用场景在哪个地方，或者最佳实践之类的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635555597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355233,"user_name":"戒酒的李白","can_delete":false,"product_type":"c1","uid":2166073,"ip_address":"北京","ucode":"744E1A22761647","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","comment_is_top":false,"comment_ctime":1661216726,"is_pvip":false,"replies":[{"id":129278,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1661304524,"ip_address":"北京","comment_id":355233,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"init类似于java类中的静态代码块， 只要这个类被import了，哪怕没有显式的使用，也会调用其中的代码逻辑","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588272,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663641053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350624,"user_name":"zzy","can_delete":false,"product_type":"c1","uid":1805408,"ip_address":"","ucode":"3D7EC623EB8204","user_header":"https://static001.geekbang.org/account/avatar/00/1b/8c/60/58b6c39e.jpg","comment_is_top":false,"comment_ctime":1657068277,"is_pvip":false,"replies":[{"id":127551,"content":"好问题！\n\ngo保证在程序的初始化过程中每个包仅会初始化一次。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1657092089,"ip_address":"","comment_id":350624,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"文章后面提到了gorouting，想问下如果多个gorouting都依赖pkgA,那么pkgA的初始化是否会存在并发问题，那go是怎么解决这问题的?","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585039,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661304524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349850,"user_name":"Return12321","can_delete":false,"product_type":"c1","uid":1134694,"ip_address":"","ucode":"F7A3C5ED02E1D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/66/047ee060.jpg","comment_is_top":false,"comment_ctime":1656384094,"is_pvip":false,"replies":[{"id":127368,"content":"python是动态语言，可以逐行脚本执行。这个静态语言不行。不过你可以针对某个go包写test用例，来验证函数功能是否符合你的预期。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1656541507,"ip_address":"","comment_id":349850,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"python中存在if __name__=__main__来调试当前文件的函数功能，go包里面非main包即使定义了main函数也是不能进行当前文件调试使用的吧？这个可以如何解决啊？","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578921,"discussion_content":"好问题！\n\ngo保证在程序的初始化过程中每个包仅会初始化一次。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1657092089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":584909,"discussion_content":"go是咋保证的，加锁吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661217822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":578921,"ip_address":"上海","group_id":0},"score":584909,"extra":""}]},{"author":{"id":1479120,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","nickname":"无咎","note":"","ucode":"B9759B5646F3AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":602011,"discussion_content":"推测实现是Go Runtime有计数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675599987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341233,"user_name":"侯塞丶雷丨","can_delete":false,"product_type":"c1","uid":2855089,"ip_address":"","ucode":"716FBD55156B4C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/90/b1/5bce7bc3.jpg","comment_is_top":false,"comment_ctime":1649438387,"is_pvip":false,"replies":[{"id":124914,"content":"CommandLine作为the default set of command-line flags，我想flag包作者是不希望用户直接使用CommandLine的。当初作者为何不将CommandLine改为非导出标识符就不得而知了。可能是考虑到向后兼容。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1649916736,"ip_address":"","comment_id":341233,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"不太理解第一个作用，在init函数中对CommandLine.Usage进行重新赋值，和手动的对flag.CommandLine.Usage赋值不是一样的么？","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578134,"discussion_content":"python是动态语言，可以逐行脚本执行。这个静态语言不行。不过你可以针对某个go包写test用例，来验证函数功能是否符合你的预期。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656541507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320894,"user_name":"LiWZ","can_delete":false,"product_type":"c1","uid":2175116,"ip_address":"","ucode":"18406E7E3BA475","user_header":"https://static001.geekbang.org/account/avatar/00/21/30/8c/6c86eaac.jpg","comment_is_top":false,"comment_ctime":1636545478,"is_pvip":false,"replies":[{"id":116752,"content":"不少。文中提到过：在初始化该Go包时，Go会按照一定的次序，逐一、顺序地调用该包的init函数。一般来说，先传递给Go编译器的源文件中的init函数，会先被执行；\n而同一个源文件中的多个init函数，会按声明顺序依次执行。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636928690,"ip_address":"","comment_id":320894,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"是不是少了一种情况，同一个包内有多个源文件，初始化顺序是怎么样的呢？","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562968,"discussion_content":"CommandLine作为the default set of command-line flags，我想flag包作者是不希望用户直接使用CommandLine的。当初作者为何不将CommandLine改为非导出标识符就不得而知了。可能是考虑到向后兼容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649916736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318896,"user_name":"liaomars","can_delete":false,"product_type":"c1","uid":2104856,"ip_address":"","ucode":"4FCA97EE9FB57D","user_header":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","comment_is_top":false,"comment_ctime":1635475423,"is_pvip":false,"replies":[{"id":115660,"content":"记录错误日志并退出是目前选择最多的方案。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598182,"ip_address":"","comment_id":318896,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"Q：当 init 函数在检查包数据初始状态时遇到失败或错误的情况，我们该如何处理呢\nA：目前是Go小白，因为在init里面执行的是一些初始化的操作，为后面的代码做铺垫用的，现在初始化错误或失败那肯定会影响后面的代码运行，所以我觉得应该是中止代码的执行。","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530157,"discussion_content":"不少。文中提到过：在初始化该Go包时，Go会按照一定的次序，逐一、顺序地调用该包的init函数。一般来说，先传递给Go编译器的源文件中的init函数，会先被执行；\n而同一个源文件中的多个init函数，会按声明顺序依次执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636928690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576388,"discussion_content":"看到两种说法：\n1. 对同一个package中不同文件是按文件名字符串比较“从小到大”顺序调用各文件中的init()函数。\n2. 同一个包中多个init函数的执行顺序go语言没有明确的定义\n\n所以bai老师你说的一定的次序是什么？ 是没有定义？或者不太好说清楚？\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655495229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571912,"discussion_content":"Tony Bai\n作者\n\n问题很好。实测情况是go会先按文件传入顺序，分别初始化常量与变量，然后在分别调用各个文件中的init函数。比如说如果一个pkg1有两个文件file1.go和file2.go，那么初始化顺序是：file1中的常量 -&gt; file1中的变量 -&gt; file2中常量 -&gt; file2中变量 -&gt; file1中init函数 -&gt; file2中init函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652488211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369347,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"广东","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1677453611,"is_pvip":false,"replies":[{"id":134614,"content":"fmt代表的是fmt包的导入路径，但不是递归导入下面所有的子目录哦。\n\nimage那个例子，要导入的是ping、jpg等包，所以用import &quot;image&#47;png&quot;，不能认为导入“image&quot;后，png等子目录就自动导入了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1677495122,"ip_address":"北京","comment_id":369347,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"白老师，我记得 04 讲里面说过「import “fmt” 一行中“fmt”代表的是包的导入路径（Import），它表示的是标准库下的 fmt 目录，整个 import 声明语句的含义是导入标准库 fmt 目录下的包；」，那这里为什么要对 image 下的子目录进行导入呢，上面的 &quot;image&quot; 导入语句不是已经把 image 目录下的包导入进去了吗？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606921,"discussion_content":"fmt代表的是fmt包的导入路径，但不是递归导入下面所有的子目录哦。\n\nimage那个例子，要导入的是ping、jpg等包，所以用import &#34;image/png&#34;，不能认为导入“image&#34;后，png等子目录就自动导入了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677495122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364265,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"辽宁","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1670741190,"is_pvip":false,"replies":[{"id":132423,"content":"可执行程序的入口必须是main包的main函数。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1670852654,"ip_address":"辽宁","comment_id":364265,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"程序入口必须是 main 包的 main 函数？不是 main 包也可以吧","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":606921,"discussion_content":"fmt代表的是fmt包的导入路径，但不是递归导入下面所有的子目录哦。\n\nimage那个例子，要导入的是ping、jpg等包，所以用import &#34;image/png&#34;，不能认为导入“image&#34;后，png等子目录就自动导入了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677495122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318979,"user_name":"二的根比方","can_delete":false,"product_type":"c1","uid":1528825,"ip_address":"","ucode":"D0A43E08ACEFC2","user_header":"https://static001.geekbang.org/account/avatar/00/17/53/f9/8acc210d.jpg","comment_is_top":false,"comment_ctime":1635495299,"is_pvip":false,"replies":[{"id":115665,"content":"对的。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598392,"ip_address":"","comment_id":318979,"utype":1}],"discussion_count":5,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"老师，请问下“GO入口文件包名称一定要是main，func名称一定要是main，（满足2个条件）文件名或者文件夹名字不一定是main。”这样的说法对吗","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529450,"discussion_content":"对的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409904,"discussion_content":"包文件名可以和包名不同。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635527519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1528825,"avatar":"https://static001.geekbang.org/account/avatar/00/17/53/f9/8acc210d.jpg","nickname":"二的根比方","note":"","ucode":"D0A43E08ACEFC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409930,"discussion_content":"对的，后面实验了一下。看完老师的课再去练习下，看看评论区，收货很多。谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635555318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409904,"ip_address":"","group_id":0},"score":409930,"extra":""},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1528825,"avatar":"https://static001.geekbang.org/account/avatar/00/17/53/f9/8acc210d.jpg","nickname":"二的根比方","note":"","ucode":"D0A43E08ACEFC2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410007,"discussion_content":"不客气","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635568542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409930,"ip_address":"","group_id":0},"score":410007,"extra":""}]},{"author":{"id":1528825,"avatar":"https://static001.geekbang.org/account/avatar/00/17/53/f9/8acc210d.jpg","nickname":"二的根比方","note":"","ucode":"D0A43E08ACEFC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409932,"discussion_content":"请问下init的应用场景在哪个地方，或者最佳实践之类的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635555597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357702,"user_name":"Min","can_delete":false,"product_type":"c1","uid":1325498,"ip_address":"北京","ucode":"068EBBA531BB21","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/ba/a2b48904.jpg","comment_is_top":false,"comment_ctime":1663573972,"is_pvip":false,"replies":[{"id":130233,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1663641052,"ip_address":"北京","comment_id":357702,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"我在本地尝试了下老师提供的 demo 可以跑过，输出结果也跟老师一样，具体操作如下\n\nmkdir initorder\ncd initorder\ngo mod init initorder\nmkdir pkg{1..3}\ntouch main.go pkg1&#47;pkg1.go pkg2&#47;pkg2.go pkg3&#47;pkg3.go\n\n代码中import部分变成了\nimport (\n\t_ &quot;initorder&#47;pkg1&quot;\n\t_ &quot;initorder&#47;pkg2&quot;\n)\n\nimport (\n\t_ &quot;initorder&#47;pkg3&quot;\n)\n\n我的Repo: https:&#47;&#47;github.com&#47;myangvgo&#47;go-first-lesson&#47;tree&#47;main&#47;initorder","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588272,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663641053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355233,"user_name":"戒酒的李白","can_delete":false,"product_type":"c1","uid":2166073,"ip_address":"北京","ucode":"744E1A22761647","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","comment_is_top":false,"comment_ctime":1661216726,"is_pvip":false,"replies":[{"id":129278,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1661304524,"ip_address":"北京","comment_id":355233,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"init类似于java类中的静态代码块， 只要这个类被import了，哪怕没有显式的使用，也会调用其中的代码逻辑","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585039,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661304524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350624,"user_name":"zzy","can_delete":false,"product_type":"c1","uid":1805408,"ip_address":"","ucode":"3D7EC623EB8204","user_header":"https://static001.geekbang.org/account/avatar/00/1b/8c/60/58b6c39e.jpg","comment_is_top":false,"comment_ctime":1657068277,"is_pvip":false,"replies":[{"id":127551,"content":"好问题！\n\ngo保证在程序的初始化过程中每个包仅会初始化一次。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1657092089,"ip_address":"","comment_id":350624,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"文章后面提到了gorouting，想问下如果多个gorouting都依赖pkgA,那么pkgA的初始化是否会存在并发问题，那go是怎么解决这问题的?","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578921,"discussion_content":"好问题！\n\ngo保证在程序的初始化过程中每个包仅会初始化一次。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1657092089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":584909,"discussion_content":"go是咋保证的，加锁吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661217822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":578921,"ip_address":"上海","group_id":0},"score":584909,"extra":""}]},{"author":{"id":1479120,"avatar":"https://static001.geekbang.org/account/avatar/00/16/91/d0/35bc62b1.jpg","nickname":"无咎","note":"","ucode":"B9759B5646F3AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":602011,"discussion_content":"推测实现是Go Runtime有计数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675599987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349850,"user_name":"Return12321","can_delete":false,"product_type":"c1","uid":1134694,"ip_address":"","ucode":"F7A3C5ED02E1D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/66/047ee060.jpg","comment_is_top":false,"comment_ctime":1656384094,"is_pvip":false,"replies":[{"id":127368,"content":"python是动态语言，可以逐行脚本执行。这个静态语言不行。不过你可以针对某个go包写test用例，来验证函数功能是否符合你的预期。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1656541507,"ip_address":"","comment_id":349850,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"python中存在if __name__=__main__来调试当前文件的函数功能，go包里面非main包即使定义了main函数也是不能进行当前文件调试使用的吧？这个可以如何解决啊？","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578134,"discussion_content":"python是动态语言，可以逐行脚本执行。这个静态语言不行。不过你可以针对某个go包写test用例，来验证函数功能是否符合你的预期。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656541507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341233,"user_name":"侯塞丶雷丨","can_delete":false,"product_type":"c1","uid":2855089,"ip_address":"","ucode":"716FBD55156B4C","user_header":"https://static001.geekbang.org/account/avatar/00/2b/90/b1/5bce7bc3.jpg","comment_is_top":false,"comment_ctime":1649438387,"is_pvip":false,"replies":[{"id":124914,"content":"CommandLine作为the default set of command-line flags，我想flag包作者是不希望用户直接使用CommandLine的。当初作者为何不将CommandLine改为非导出标识符就不得而知了。可能是考虑到向后兼容。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1649916736,"ip_address":"","comment_id":341233,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"不太理解第一个作用，在init函数中对CommandLine.Usage进行重新赋值，和手动的对flag.CommandLine.Usage赋值不是一样的么？","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562968,"discussion_content":"CommandLine作为the default set of command-line flags，我想flag包作者是不希望用户直接使用CommandLine的。当初作者为何不将CommandLine改为非导出标识符就不得而知了。可能是考虑到向后兼容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649916736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320894,"user_name":"LiWZ","can_delete":false,"product_type":"c1","uid":2175116,"ip_address":"","ucode":"18406E7E3BA475","user_header":"https://static001.geekbang.org/account/avatar/00/21/30/8c/6c86eaac.jpg","comment_is_top":false,"comment_ctime":1636545478,"is_pvip":false,"replies":[{"id":116752,"content":"不少。文中提到过：在初始化该Go包时，Go会按照一定的次序，逐一、顺序地调用该包的init函数。一般来说，先传递给Go编译器的源文件中的init函数，会先被执行；\n而同一个源文件中的多个init函数，会按声明顺序依次执行。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636928690,"ip_address":"","comment_id":320894,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"是不是少了一种情况，同一个包内有多个源文件，初始化顺序是怎么样的呢？","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530157,"discussion_content":"不少。文中提到过：在初始化该Go包时，Go会按照一定的次序，逐一、顺序地调用该包的init函数。一般来说，先传递给Go编译器的源文件中的init函数，会先被执行；\n而同一个源文件中的多个init函数，会按声明顺序依次执行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636928690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576388,"discussion_content":"看到两种说法：\n1. 对同一个package中不同文件是按文件名字符串比较“从小到大”顺序调用各文件中的init()函数。\n2. 同一个包中多个init函数的执行顺序go语言没有明确的定义\n\n所以bai老师你说的一定的次序是什么？ 是没有定义？或者不太好说清楚？\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655495229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571912,"discussion_content":"Tony Bai\n作者\n\n问题很好。实测情况是go会先按文件传入顺序，分别初始化常量与变量，然后在分别调用各个文件中的init函数。比如说如果一个pkg1有两个文件file1.go和file2.go，那么初始化顺序是：file1中的常量 -&gt; file1中的变量 -&gt; file2中常量 -&gt; file2中变量 -&gt; file1中init函数 -&gt; file2中init函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652488211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318896,"user_name":"liaomars","can_delete":false,"product_type":"c1","uid":2104856,"ip_address":"","ucode":"4FCA97EE9FB57D","user_header":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","comment_is_top":false,"comment_ctime":1635475423,"is_pvip":false,"replies":[{"id":115660,"content":"记录错误日志并退出是目前选择最多的方案。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598182,"ip_address":"","comment_id":318896,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"Q：当 init 函数在检查包数据初始状态时遇到失败或错误的情况，我们该如何处理呢\nA：目前是Go小白，因为在init里面执行的是一些初始化的操作，为后面的代码做铺垫用的，现在初始化错误或失败那肯定会影响后面的代码运行，所以我觉得应该是中止代码的执行。","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529418,"discussion_content":"记录错误日志并退出是目前选择最多的方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369347,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"广东","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1677453611,"is_pvip":false,"replies":[{"id":134614,"content":"fmt代表的是fmt包的导入路径，但不是递归导入下面所有的子目录哦。\n\nimage那个例子，要导入的是ping、jpg等包，所以用import &quot;image&#47;png&quot;，不能认为导入“image&quot;后，png等子目录就自动导入了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1677495122,"ip_address":"北京","comment_id":369347,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"白老师，我记得 04 讲里面说过「import “fmt” 一行中“fmt”代表的是包的导入路径（Import），它表示的是标准库下的 fmt 目录，整个 import 声明语句的含义是导入标准库 fmt 目录下的包；」，那这里为什么要对 image 下的子目录进行导入呢，上面的 &quot;image&quot; 导入语句不是已经把 image 目录下的包导入进去了吗？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529418,"discussion_content":"记录错误日志并退出是目前选择最多的方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364265,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"辽宁","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1670741190,"is_pvip":false,"replies":[{"id":132423,"content":"可执行程序的入口必须是main包的main函数。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1670852654,"ip_address":"辽宁","comment_id":364265,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"程序入口必须是 main 包的 main 函数？不是 main 包也可以吧","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596285,"discussion_content":"可执行程序的入口必须是main包的main函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670852654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359840,"user_name":"左耳朵东","can_delete":false,"product_type":"c1","uid":1160678,"ip_address":"辽宁","ucode":"60134ACF12BB52","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","comment_is_top":false,"comment_ctime":1665972306,"is_pvip":false,"replies":[{"id":130905,"content":"NewFlagSet方法创建一个新的FlagSet实例，该实例有自己的Usage，而commandLineUsage是一个包级变量。将一个包级变量赋值给f.Usage并不合理。我们使用NewFlagSet方法不一定创建顶层command的flagset，还可能是sub command的flagset。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1666016158,"ip_address":"辽宁","comment_id":359840,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"init 方法用途那里，在 NewFlagSet() 方法里直接用 f.Usage=commandLineUsage() 不是更直接吗？","like_count":2},{"had_liked":false,"id":345697,"user_name":"脸上笑嘻嘻","can_delete":false,"product_type":"c1","uid":2571209,"ip_address":"","ucode":"595EB6A85FB8F1","user_header":"https://static001.geekbang.org/account/avatar/00/27/3b/c9/a9c43750.jpg","comment_is_top":false,"comment_ctime":1652515835,"is_pvip":false,"replies":[{"id":126230,"content":"别急，那些在基础篇。入门篇就是为了让你能快速上手！至于语法可以先不那么懂😁。不过从08开始，你至少应该知道一个go程序的基本结构以及入口函数与执行次序了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1652690532,"ip_address":"","comment_id":345697,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"学到这里，我还不清楚go的数据类型、语法什么的 = =","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590700,"discussion_content":"NewFlagSet方法创建一个新的FlagSet实例，该实例有自己的Usage，而commandLineUsage是一个包级变量。将一个包级变量赋值给f.Usage并不合理。我们使用NewFlagSet方法不一定创建顶层command的flagset，还可能是sub command的flagset。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666016158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453001,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqT9A3iaTfERufLictBib6nvmVvfFlEyZRSHiaGfz4yNmBK0hibZUiciahMOJdE8QZV65GxDJ1DlXWkePllw/132","nickname":"xiaotuanyu","note":"","ucode":"CE254B914AE921","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591973,"discussion_content":"老师，麻烦跟您再请教。我跟左耳朵东一样的疑问。根据您的回复，若将包级变量commandLineUsage赋值给f.Usage不合理，鉴于CommandLine本身就是f（通过NewFlagSet将f返回给CommandLine），那么是不是在init()函数中，将commandLineUsage赋值给CommandLine.Usage也同样是不合理的？因为f赋值给CommandLine并没有改变它是FlagSet一个实例这个性质本身。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1666970168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334787,"user_name":"风铃","can_delete":false,"product_type":"c1","uid":2633228,"ip_address":"","ucode":"999A26CC937C78","user_header":"https://static001.geekbang.org/account/avatar/00/28/2e/0c/b6180a5f.jpg","comment_is_top":false,"comment_ctime":1645110265,"is_pvip":false,"replies":[{"id":122598,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1645597781,"ip_address":"","comment_id":334787,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"init包大多数是在做一些检测的事项，这里就要满足一些必要条件和非必要，必要条件一般是直接panic退出程序，非必要的就是一些提示语句！","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572281,"discussion_content":"别急，那些在基础篇。入门篇就是为了让你能快速上手！至于语法可以先不那么懂😁。不过从08开始，你至少应该知道一个go程序的基本结构以及入口函数与执行次序了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652690532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331183,"user_name":"Niverkk","can_delete":false,"product_type":"c1","uid":2179875,"ip_address":"","ucode":"F9220C10107E44","user_header":"https://static001.geekbang.org/account/avatar/00/21/43/23/d98fb8f7.jpg","comment_is_top":false,"comment_ctime":1642476719,"is_pvip":false,"replies":[{"id":121006,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1642488460,"ip_address":"","comment_id":331183,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"直接复制的代码 碰到invalid character in identifier，需要删除零宽空格","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546991,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642488460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329352,"user_name":"独钓寒江","can_delete":false,"product_type":"c1","uid":2812836,"ip_address":"","ucode":"53C15891B7E800","user_header":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","comment_is_top":false,"comment_ctime":1641298374,"is_pvip":false,"replies":[{"id":120463,"content":"没特别介绍。包导入应该是在第4讲 讲解go程序结构时说明的。空导入只是包导入的一个特例，这一节是第一次提到空导入。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1642029218,"ip_address":"","comment_id":329352,"utype":1}],"discussion_count":3,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"弱弱地问一句，空导入是在之前哪一课介绍过？没有印象啊","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546991,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642488460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389400,"user_name":"冷雨","can_delete":false,"product_type":"c1","uid":2392672,"ip_address":"日本","ucode":"8FAFA424D21587","user_header":"https://static001.geekbang.org/account/avatar/00/24/82/60/a89da78f.jpg","comment_is_top":false,"comment_ctime":1712435189,"is_pvip":false,"replies":[{"id":141672,"content":"你用的是什么版本的Go？如果是Go 1.21及以后，那么包初始化的顺序算法发生了变化，具体可以看：https:&#47;&#47;tonybai.com&#47;2023&#47;08&#47;20&#47;some-changes-in-go-1-21","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1712565308,"ip_address":"北京","comment_id":389400,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"在main.go里 我定义import的顺序如下\nimport (\n  &quot;fmt&quot;\n  &quot;pkg3&quot;\n  &quot;pkg2&quot;\n  &quot;pkg1&quot;\n)\n\n实际运行看到的结果 是先执行pkg1的const-&gt;var-&gt;init, 然后pkg2, 然后pkg3\n不管我在main的import里 怎样转换顺序 实际的执行顺序依然是pkg1 -&gt; pkg2 -&gt; pkg3, 这是为何？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545655,"discussion_content":"没特别介绍。包导入应该是在第4讲 讲解go程序结构时说明的。空导入只是包导入的一个特例，这一节是第一次提到空导入。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642029218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2812836,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","nickname":"独钓寒江","note":"","ucode":"53C15891B7E800","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":546195,"discussion_content":"谢谢老师的回复。建议没介绍过的概念最好提前介绍一下，突然看到感觉困惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642221719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545655,"ip_address":"","group_id":0},"score":546195,"extra":""},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2812836,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","nickname":"独钓寒江","note":"","ucode":"53C15891B7E800","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576387,"discussion_content":"导入了不用，就会报错，但是又想要包的init初始化后的效果，于是提供了一个空导入？ ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655495046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":546195,"ip_address":"","group_id":0},"score":576387,"extra":""}]}]},{"had_liked":false,"id":389017,"user_name":"Liu","can_delete":false,"product_type":"c1","uid":1132456,"ip_address":"山东","ucode":"A5EF65CCF53578","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a8/ec330e70.jpg","comment_is_top":false,"comment_ctime":1711382314,"is_pvip":false,"replies":[{"id":141583,"content":"这个Go 1.22开始的确有变化。变化的原因是blank变量的初始化顺序被放到v1和v2后面了。这个官方go语言规范中的描述没有考虑到包级变量初始化依赖常量的情况，后续我提一个issue，咨询一下为何会变化。\n\n\n-------\n\n恭喜你！你发现了Go 1.22中的一个小“bug&quot; - https:&#47;&#47;github.com&#47;golang&#47;go&#47;issues&#47;66575  \n\n这个等后续go官方处理吧！\n","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1711617701,"ip_address":"北京","comment_id":389017,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"第一个prog-init-order这个例子没人用go 1.22测试吗  我代码改成const (\n\tc1 = &quot;c1&quot;\n\tc2 = &quot;c2&quot;\n)\n\nvar (\n\t_  = constInitCheck()\n\tv1 = variableInit(&quot;v1&quot;)\n\tv2 = variableInit(&quot;v2&quot;)\n)  先声明常量再声明变量才能得到老师的输出  我按照老师代码运行输出的是先打印的变量然后常量 希望看到能解答一下啊","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641367,"discussion_content":"你用的是什么版本的Go？如果是Go 1.21及以后，那么包初始化的顺序算法发生了变化，具体可以看：https://tonybai.com/2023/08/20/some-changes-in-go-1-21","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712565308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375910,"user_name":"三味","can_delete":false,"product_type":"c1","uid":1362403,"ip_address":"北京","ucode":"A580F715D1CC96","user_header":"https://static001.geekbang.org/account/avatar/00/14/c9/e3/28c16afa.jpg","comment_is_top":false,"comment_ctime":1686122727,"is_pvip":false,"replies":[{"id":137205,"content":"看了这位同学的“长篇”回复，说明这位同学真的是结合自己的情况用心学了。\n\n我能说的是：\n1. 整个专栏的所有文章，极客时间都有专门的编辑老师负责文字上的校对和润色。\n2. 这位小伙伴没有任何后端语言的开发经验，那么如果仅指望通过这一门专栏就掌握go语言，那我得感觉还不够。专栏不完全等于教程，在有限的篇幅中，我只能拎出一些重点。虽然名为第一课，但依然建议那些零Go基础的小伙伴结合go官方的文档或是像《Go程序设计语言》这样的course书籍一起学习。这样效果会更好。\n3. 任何新知识&#47;技能的学习都不是一蹴而就的，总体来说是一个“螺旋上升”的过程，建议保持一些耐心，减少一些焦躁。可以想想当初你学习c++时情况。go相对于c++还是要简单很多很多的。c++都能搞定，相信go也不在话下。给自己一些时间。\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1686513132,"ip_address":"辽宁","comment_id":375910,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"看到这一节让我越来越焦躁。\n本来我看到课程题目是Go语言第一课，想着做个go的入门买下了课程。\n然而没有任何go语言经验，甚至没有任何后端经验，再进一步没有任何web经验的我来说，too naive了。（我本身是图形学方向）\n很多语句我并不能很顺利的理解是什么意思。有些语句感觉反复在说一个东西，不够精炼；有些语句我根本不明白是讲什么。\n看文字真的比看代码还累。比如这句：“flag 包定义了一个导出的包级变量 CommandLine，如果用户没有通过 flag.NewFlagSet 创建新的代表命令行标志集合的实例，那么 CommandLine 就会作为 flag 包各种导出函数背后，默认的代表命令行标志集合的实例。”\n我真是费了好大劲才理解这句话是想表达什么。\n而且由于没有任何go的经验，（虽然我又回头简单学习了一下go的语法），我在观看go代码的时候，总是不由自主的对没有提前声明的函数感到焦躁。可能是因为C&#47;C++的编程经验吧。在看代码的时候，总是会首先感到不知所措，然后才意识到，代码中使用的一些方法都在下面有定义。\n如此，课程可能并不适合我。然而已经买了，没办法退了，硬着头皮继续学吧。\n我不知道还会迷茫多久。目前位置，我还是不理解一个init函数为什么要解释这么多东西。\n本章我感觉最重要的就是初始化顺序：\n1.依赖包按“深度优先”的次序进行初始化；\n2.每个包内按以“常量 -&gt; 变量 -&gt; init 函数”的顺序进行初始化；\n3.包内的多个 init 函数按出现次序进行自动调用。\n上面三条是原文摘抄。后面的例子我是真有点懵逼了。不知道是否应该深究一下到底为啥。例子比这几句话还难懂。。。\n主要是第一个例子，第二个倒是很容易想到，第三个也能感受到Go的巧妙。但是第一个例子，我实在是不知道想干啥。。。\n老师的技术水平没啥说的，但是这语言传授功底，我觉得还略逊其他课程的老师。\n说起来，极客时间不应该给配相应的责任编辑么？负责勘误、校对、修改一些文法错误，让文章更容易读？将近2万人学习的课程，极客时间也有责任承担文字课程的（视频课程也应该包括吧）文笔润色吧。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640577,"discussion_content":"这个Go 1.22开始的确有变化。变化的原因是blank变量的初始化顺序被放到v1和v2后面了。这个官方go语言规范中的描述没有考虑到包级变量初始化依赖常量的情况，后续我提一个issue，咨询一下为何会变化。\n\n\n-------\n\n恭喜你！你发现了Go 1.22中的一个小“bug\" - https://github.com/golang/go/issues/66575  \n\n这个等后续go官方处理吧！\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1711617701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368322,"user_name":"那年双手插兜","can_delete":false,"product_type":"c1","uid":1088426,"ip_address":"广东","ucode":"53BA31418C2584","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/aa/e25fd166.jpg","comment_is_top":false,"comment_ctime":1676196045,"is_pvip":true,"replies":[{"id":134168,"content":"过奖了:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1676293627,"ip_address":"辽宁","comment_id":368322,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"看到第8课，实在太赞了，怎么可以讲得很细致很通俗易懂。另外还买了一套Go语言精进之路支持一下，语言功底这么强的老师不多见。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620753,"discussion_content":"看了这位同学的“长篇”回复，说明这位同学真的是结合自己的情况用心学了。\n\n我能说的是：\n1. 整个专栏的所有文章，极客时间都有专门的编辑老师负责文字上的校对和润色。\n2. 这位小伙伴没有任何后端语言的开发经验，那么如果仅指望通过这一门专栏就掌握go语言，那我得感觉还不够。专栏不完全等于教程，在有限的篇幅中，我只能拎出一些重点。虽然名为第一课，但依然建议那些零Go基础的小伙伴结合go官方的文档或是像《Go程序设计语言》这样的course书籍一起学习。这样效果会更好。\n3. 任何新知识/技能的学习都不是一蹴而就的，总体来说是一个“螺旋上升”的过程，建议保持一些耐心，减少一些焦躁。可以想想当初你学习c++时情况。go相对于c++还是要简单很多很多的。c++都能搞定，相信go也不在话下。给自己一些时间。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1686513132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360825,"user_name":"xiaotuanyu","can_delete":false,"product_type":"c1","uid":1453001,"ip_address":"北京","ucode":"CE254B914AE921","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqT9A3iaTfERufLictBib6nvmVvfFlEyZRSHiaGfz4yNmBK0hibZUiciahMOJdE8QZV65GxDJ1DlXWkePllw/132","comment_is_top":false,"comment_ctime":1666879832,"is_pvip":false,"replies":[{"id":131278,"content":"可以理解为goroutine协程里执行的那个main函数。主goroutine也是go runtime启动的。main函数只是用户层面的入口函数。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1666934598,"ip_address":"北京","comment_id":360825,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"在启动了多个 Goroutine（Go 语言的轻量级用户线程，后面我们会详细讲解）的 Go 应用中，main.main 函数将在 Go 应用的主 Goroutine 中执行。\n\n老师，请问这里要怎么理解。这里说的main函数，是启动goroutine的函数，还是goroutine协程里的main函数？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":603788,"discussion_content":"过奖了:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676293627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359840,"user_name":"左耳朵东","can_delete":false,"product_type":"c1","uid":1160678,"ip_address":"辽宁","ucode":"60134ACF12BB52","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","comment_is_top":false,"comment_ctime":1665972306,"is_pvip":false,"replies":[{"id":130905,"content":"NewFlagSet方法创建一个新的FlagSet实例，该实例有自己的Usage，而commandLineUsage是一个包级变量。将一个包级变量赋值给f.Usage并不合理。我们使用NewFlagSet方法不一定创建顶层command的flagset，还可能是sub command的flagset。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1666016158,"ip_address":"辽宁","comment_id":359840,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"init 方法用途那里，在 NewFlagSet() 方法里直接用 f.Usage=commandLineUsage() 不是更直接吗？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590700,"discussion_content":"NewFlagSet方法创建一个新的FlagSet实例，该实例有自己的Usage，而commandLineUsage是一个包级变量。将一个包级变量赋值给f.Usage并不合理。我们使用NewFlagSet方法不一定创建顶层command的flagset，还可能是sub command的flagset。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666016158,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453001,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqT9A3iaTfERufLictBib6nvmVvfFlEyZRSHiaGfz4yNmBK0hibZUiciahMOJdE8QZV65GxDJ1DlXWkePllw/132","nickname":"xiaotuanyu","note":"","ucode":"CE254B914AE921","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591973,"discussion_content":"老师，麻烦跟您再请教。我跟左耳朵东一样的疑问。根据您的回复，若将包级变量commandLineUsage赋值给f.Usage不合理，鉴于CommandLine本身就是f（通过NewFlagSet将f返回给CommandLine），那么是不是在init()函数中，将commandLineUsage赋值给CommandLine.Usage也同样是不合理的？因为f赋值给CommandLine并没有改变它是FlagSet一个实例这个性质本身。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1666970168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345697,"user_name":"脸上笑嘻嘻","can_delete":false,"product_type":"c1","uid":2571209,"ip_address":"","ucode":"595EB6A85FB8F1","user_header":"https://static001.geekbang.org/account/avatar/00/27/3b/c9/a9c43750.jpg","comment_is_top":false,"comment_ctime":1652515835,"is_pvip":false,"replies":[{"id":126230,"content":"别急，那些在基础篇。入门篇就是为了让你能快速上手！至于语法可以先不那么懂😁。不过从08开始，你至少应该知道一个go程序的基本结构以及入口函数与执行次序了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1652690532,"ip_address":"","comment_id":345697,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"学到这里，我还不清楚go的数据类型、语法什么的 = =","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572281,"discussion_content":"别急，那些在基础篇。入门篇就是为了让你能快速上手！至于语法可以先不那么懂😁。不过从08开始，你至少应该知道一个go程序的基本结构以及入口函数与执行次序了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652690532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334787,"user_name":"风铃","can_delete":false,"product_type":"c1","uid":2633228,"ip_address":"","ucode":"999A26CC937C78","user_header":"https://static001.geekbang.org/account/avatar/00/28/2e/0c/b6180a5f.jpg","comment_is_top":false,"comment_ctime":1645110265,"is_pvip":false,"replies":[{"id":122598,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1645597781,"ip_address":"","comment_id":334787,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"init包大多数是在做一些检测的事项，这里就要满足一些必要条件和非必要，必要条件一般是直接panic退出程序，非必要的就是一些提示语句！","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552802,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645597781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331183,"user_name":"Niverkk","can_delete":false,"product_type":"c1","uid":2179875,"ip_address":"","ucode":"F9220C10107E44","user_header":"https://static001.geekbang.org/account/avatar/00/21/43/23/d98fb8f7.jpg","comment_is_top":false,"comment_ctime":1642476719,"is_pvip":false,"replies":[{"id":121006,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1642488460,"ip_address":"","comment_id":331183,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"直接复制的代码 碰到invalid character in identifier，需要删除零宽空格","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552802,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645597781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329352,"user_name":"独钓寒江","can_delete":false,"product_type":"c1","uid":2812836,"ip_address":"","ucode":"53C15891B7E800","user_header":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","comment_is_top":false,"comment_ctime":1641298374,"is_pvip":false,"replies":[{"id":120463,"content":"没特别介绍。包导入应该是在第4讲 讲解go程序结构时说明的。空导入只是包导入的一个特例，这一节是第一次提到空导入。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1642029218,"ip_address":"","comment_id":329352,"utype":1}],"discussion_count":3,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"弱弱地问一句，空导入是在之前哪一课介绍过？没有印象啊","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545655,"discussion_content":"没特别介绍。包导入应该是在第4讲 讲解go程序结构时说明的。空导入只是包导入的一个特例，这一节是第一次提到空导入。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642029218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":2812836,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","nickname":"独钓寒江","note":"","ucode":"53C15891B7E800","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":546195,"discussion_content":"谢谢老师的回复。建议没介绍过的概念最好提前介绍一下，突然看到感觉困惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642221719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545655,"ip_address":"","group_id":0},"score":546195,"extra":""},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2812836,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","nickname":"独钓寒江","note":"","ucode":"53C15891B7E800","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576387,"discussion_content":"导入了不用，就会报错，但是又想要包的init初始化后的效果，于是提供了一个空导入？ ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655495046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":546195,"ip_address":"","group_id":0},"score":576387,"extra":""}]}]},{"had_liked":false,"id":389400,"user_name":"冷雨","can_delete":false,"product_type":"c1","uid":2392672,"ip_address":"日本","ucode":"8FAFA424D21587","user_header":"https://static001.geekbang.org/account/avatar/00/24/82/60/a89da78f.jpg","comment_is_top":false,"comment_ctime":1712435189,"is_pvip":false,"replies":[{"id":141672,"content":"你用的是什么版本的Go？如果是Go 1.21及以后，那么包初始化的顺序算法发生了变化，具体可以看：https:&#47;&#47;tonybai.com&#47;2023&#47;08&#47;20&#47;some-changes-in-go-1-21","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1712565308,"ip_address":"北京","comment_id":389400,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"在main.go里 我定义import的顺序如下\nimport (\n  &quot;fmt&quot;\n  &quot;pkg3&quot;\n  &quot;pkg2&quot;\n  &quot;pkg1&quot;\n)\n\n实际运行看到的结果 是先执行pkg1的const-&gt;var-&gt;init, 然后pkg2, 然后pkg3\n不管我在main的import里 怎样转换顺序 实际的执行顺序依然是pkg1 -&gt; pkg2 -&gt; pkg3, 这是为何？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641367,"discussion_content":"你用的是什么版本的Go？如果是Go 1.21及以后，那么包初始化的顺序算法发生了变化，具体可以看：https://tonybai.com/2023/08/20/some-changes-in-go-1-21","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712565308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389017,"user_name":"Liu","can_delete":false,"product_type":"c1","uid":1132456,"ip_address":"山东","ucode":"A5EF65CCF53578","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a8/ec330e70.jpg","comment_is_top":false,"comment_ctime":1711382314,"is_pvip":false,"replies":[{"id":141583,"content":"这个Go 1.22开始的确有变化。变化的原因是blank变量的初始化顺序被放到v1和v2后面了。这个官方go语言规范中的描述没有考虑到包级变量初始化依赖常量的情况，后续我提一个issue，咨询一下为何会变化。\n\n\n-------\n\n恭喜你！你发现了Go 1.22中的一个小“bug&quot; - https:&#47;&#47;github.com&#47;golang&#47;go&#47;issues&#47;66575  \n\n这个等后续go官方处理吧！\n","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1711617701,"ip_address":"北京","comment_id":389017,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"第一个prog-init-order这个例子没人用go 1.22测试吗  我代码改成const (\n\tc1 = &quot;c1&quot;\n\tc2 = &quot;c2&quot;\n)\n\nvar (\n\t_  = constInitCheck()\n\tv1 = variableInit(&quot;v1&quot;)\n\tv2 = variableInit(&quot;v2&quot;)\n)  先声明常量再声明变量才能得到老师的输出  我按照老师代码运行输出的是先打印的变量然后常量 希望看到能解答一下啊","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640577,"discussion_content":"这个Go 1.22开始的确有变化。变化的原因是blank变量的初始化顺序被放到v1和v2后面了。这个官方go语言规范中的描述没有考虑到包级变量初始化依赖常量的情况，后续我提一个issue，咨询一下为何会变化。\n\n\n-------\n\n恭喜你！你发现了Go 1.22中的一个小“bug\" - https://github.com/golang/go/issues/66575  \n\n这个等后续go官方处理吧！\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1711617701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375910,"user_name":"三味","can_delete":false,"product_type":"c1","uid":1362403,"ip_address":"北京","ucode":"A580F715D1CC96","user_header":"https://static001.geekbang.org/account/avatar/00/14/c9/e3/28c16afa.jpg","comment_is_top":false,"comment_ctime":1686122727,"is_pvip":false,"replies":[{"id":137205,"content":"看了这位同学的“长篇”回复，说明这位同学真的是结合自己的情况用心学了。\n\n我能说的是：\n1. 整个专栏的所有文章，极客时间都有专门的编辑老师负责文字上的校对和润色。\n2. 这位小伙伴没有任何后端语言的开发经验，那么如果仅指望通过这一门专栏就掌握go语言，那我得感觉还不够。专栏不完全等于教程，在有限的篇幅中，我只能拎出一些重点。虽然名为第一课，但依然建议那些零Go基础的小伙伴结合go官方的文档或是像《Go程序设计语言》这样的course书籍一起学习。这样效果会更好。\n3. 任何新知识&#47;技能的学习都不是一蹴而就的，总体来说是一个“螺旋上升”的过程，建议保持一些耐心，减少一些焦躁。可以想想当初你学习c++时情况。go相对于c++还是要简单很多很多的。c++都能搞定，相信go也不在话下。给自己一些时间。\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1686513132,"ip_address":"辽宁","comment_id":375910,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"看到这一节让我越来越焦躁。\n本来我看到课程题目是Go语言第一课，想着做个go的入门买下了课程。\n然而没有任何go语言经验，甚至没有任何后端经验，再进一步没有任何web经验的我来说，too naive了。（我本身是图形学方向）\n很多语句我并不能很顺利的理解是什么意思。有些语句感觉反复在说一个东西，不够精炼；有些语句我根本不明白是讲什么。\n看文字真的比看代码还累。比如这句：“flag 包定义了一个导出的包级变量 CommandLine，如果用户没有通过 flag.NewFlagSet 创建新的代表命令行标志集合的实例，那么 CommandLine 就会作为 flag 包各种导出函数背后，默认的代表命令行标志集合的实例。”\n我真是费了好大劲才理解这句话是想表达什么。\n而且由于没有任何go的经验，（虽然我又回头简单学习了一下go的语法），我在观看go代码的时候，总是不由自主的对没有提前声明的函数感到焦躁。可能是因为C&#47;C++的编程经验吧。在看代码的时候，总是会首先感到不知所措，然后才意识到，代码中使用的一些方法都在下面有定义。\n如此，课程可能并不适合我。然而已经买了，没办法退了，硬着头皮继续学吧。\n我不知道还会迷茫多久。目前位置，我还是不理解一个init函数为什么要解释这么多东西。\n本章我感觉最重要的就是初始化顺序：\n1.依赖包按“深度优先”的次序进行初始化；\n2.每个包内按以“常量 -&gt; 变量 -&gt; init 函数”的顺序进行初始化；\n3.包内的多个 init 函数按出现次序进行自动调用。\n上面三条是原文摘抄。后面的例子我是真有点懵逼了。不知道是否应该深究一下到底为啥。例子比这几句话还难懂。。。\n主要是第一个例子，第二个倒是很容易想到，第三个也能感受到Go的巧妙。但是第一个例子，我实在是不知道想干啥。。。\n老师的技术水平没啥说的，但是这语言传授功底，我觉得还略逊其他课程的老师。\n说起来，极客时间不应该给配相应的责任编辑么？负责勘误、校对、修改一些文法错误，让文章更容易读？将近2万人学习的课程，极客时间也有责任承担文字课程的（视频课程也应该包括吧）文笔润色吧。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620753,"discussion_content":"看了这位同学的“长篇”回复，说明这位同学真的是结合自己的情况用心学了。\n\n我能说的是：\n1. 整个专栏的所有文章，极客时间都有专门的编辑老师负责文字上的校对和润色。\n2. 这位小伙伴没有任何后端语言的开发经验，那么如果仅指望通过这一门专栏就掌握go语言，那我得感觉还不够。专栏不完全等于教程，在有限的篇幅中，我只能拎出一些重点。虽然名为第一课，但依然建议那些零Go基础的小伙伴结合go官方的文档或是像《Go程序设计语言》这样的course书籍一起学习。这样效果会更好。\n3. 任何新知识/技能的学习都不是一蹴而就的，总体来说是一个“螺旋上升”的过程，建议保持一些耐心，减少一些焦躁。可以想想当初你学习c++时情况。go相对于c++还是要简单很多很多的。c++都能搞定，相信go也不在话下。给自己一些时间。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1686513132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368322,"user_name":"那年双手插兜","can_delete":false,"product_type":"c1","uid":1088426,"ip_address":"广东","ucode":"53BA31418C2584","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/aa/e25fd166.jpg","comment_is_top":false,"comment_ctime":1676196045,"is_pvip":true,"replies":[{"id":134168,"content":"过奖了:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1676293627,"ip_address":"辽宁","comment_id":368322,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"看到第8课，实在太赞了，怎么可以讲得很细致很通俗易懂。另外还买了一套Go语言精进之路支持一下，语言功底这么强的老师不多见。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":603788,"discussion_content":"过奖了:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676293627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360825,"user_name":"xiaotuanyu","can_delete":false,"product_type":"c1","uid":1453001,"ip_address":"北京","ucode":"CE254B914AE921","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqT9A3iaTfERufLictBib6nvmVvfFlEyZRSHiaGfz4yNmBK0hibZUiciahMOJdE8QZV65GxDJ1DlXWkePllw/132","comment_is_top":false,"comment_ctime":1666879832,"is_pvip":false,"replies":[{"id":131278,"content":"可以理解为goroutine协程里执行的那个main函数。主goroutine也是go runtime启动的。main函数只是用户层面的入口函数。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1666934598,"ip_address":"北京","comment_id":360825,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"在启动了多个 Goroutine（Go 语言的轻量级用户线程，后面我们会详细讲解）的 Go 应用中，main.main 函数将在 Go 应用的主 Goroutine 中执行。\n\n老师，请问这里要怎么理解。这里说的main函数，是启动goroutine的函数，还是goroutine协程里的main函数？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591919,"discussion_content":"可以理解为goroutine协程里执行的那个main函数。主goroutine也是go runtime启动的。main函数只是用户层面的入口函数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666934598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347721,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1654348811,"is_pvip":false,"replies":[{"id":126780,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1654482181,"ip_address":"","comment_id":347721,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"init()的两大作用\n- 对引入包的变量进行重置 （服务注入也属于此类，不过这里强调的是自我注入）\n- 对当前包的变量进行初始化","like_count":1},{"had_liked":false,"id":341490,"user_name":"mikewoo","can_delete":false,"product_type":"c1","uid":1118888,"ip_address":"","ucode":"9AE90E05048DE1","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/a8/8aaf13e0.jpg","comment_is_top":false,"comment_ctime":1649658574,"is_pvip":true,"replies":[{"id":124889,"content":"✅👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1649906384,"ip_address":"","comment_id":341490,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"当 init 函数在检查包数据初始状态时遇到失败或错误的情况，处理方式要视情况而定：\n1. 如果初始化的动作出错对业务或者程序运行有影响，就需要panic，结束运行；\n2. 如果初始化的动作出错对业务或者程序运行有特别的影响，比如只是一些告警啥的，觉着可以通过日志输出提醒信息。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574939,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654482181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340888,"user_name":"泥腿","can_delete":false,"product_type":"c1","uid":1309200,"ip_address":"","ucode":"EEEBF8ECE5AEEA","user_header":"https://static001.geekbang.org/account/avatar/00/13/fa/10/38d22c78.jpg","comment_is_top":false,"comment_ctime":1649217187,"is_pvip":false,"replies":[{"id":124700,"content":"1. 是的\n2. 没有了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1649389164,"ip_address":"","comment_id":340888,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"小结部分总结 init 特点：【执行顺位排在包内其他语法元素的后面】\n1. 这里讲的【其他语法元素】是指 “常量”和“变量”么？\n2. 还有其他元素么","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562907,"discussion_content":"✅👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649906384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339952,"user_name":"林枫","can_delete":false,"product_type":"c1","uid":1297559,"ip_address":"","ucode":"38B9CBE7F42174","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/97/ae4d1400.jpg","comment_is_top":false,"comment_ctime":1648483809,"is_pvip":false,"replies":[{"id":124394,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1648644039,"ip_address":"","comment_id":339952,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"讲的挺好！","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560555,"discussion_content":"1. 是的\n2. 没有了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649389164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337043,"user_name":"余京阳","can_delete":false,"product_type":"c1","uid":1076704,"ip_address":"","ucode":"E457BC354D5F6F","user_header":"https://static001.geekbang.org/account/avatar/00/10/6d/e0/6ccc554b.jpg","comment_is_top":false,"comment_ctime":1646564572,"is_pvip":false,"replies":[{"id":123239,"content":"💪","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646722642,"ip_address":"","comment_id":337043,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"平时写代码基本都是在力扣上傻瓜刷题，面向工程的写的特别少，go看到现在感觉有点晕头转向的，还是要反复咀嚼才能吃透","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555020,"discussion_content":"💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646722642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335412,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1645511405,"is_pvip":false,"replies":[{"id":122511,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1645538338,"ip_address":"","comment_id":335412,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"文章和评论看完～","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552645,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645538338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332411,"user_name":"Anohito","can_delete":false,"product_type":"c1","uid":2290668,"ip_address":"","ucode":"E223D8CCC205CA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIwufWp49Df9Sc09ib1d17WTbu7MiapWsVPWIKW00u77dUqlemZU5UibyGV8iaONqbtCyr4xexxRH1G7Q/132","comment_is_top":false,"comment_ctime":1643217398,"is_pvip":false,"replies":[{"id":121617,"content":"1.按import中包的出现顺序吧。\n2.编译器扫描包下的源文件时，肯定会遍历包目录下的文件，至于遍历的顺序就要看用的什么方法的，可以挖掘一下源码，估计用的也是filepath.Walk。\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643543364,"ip_address":"","comment_id":332411,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"多个包依赖的初始化顺序如何决定 go在源码中没有强制多个包import的顺序 编译器如何选择先初始化哪一个包 比如\nimport pkg1\nimport pkg2\n跟\nimport pkg2\nimport pkg1\n两个的结果是一样的吗\n\n类似的 一个包中有两个文件\nfile1.go\nfile2.go\n这两个文件被编译器处理的顺序是可以确定的吗，先处理file1.go还是file2.go？\n","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552645,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645538338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331078,"user_name":"Goopand","can_delete":false,"product_type":"c1","uid":1952388,"ip_address":"","ucode":"640D506BADB4E5","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ca/84/1aba91f4.jpg","comment_is_top":false,"comment_ctime":1642411129,"is_pvip":false,"replies":[{"id":120976,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1642458474,"ip_address":"","comment_id":331078,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"也在极客时间购买了多门课程，也包括其他Go课程，没想到Bai老师能讲得这么细致入微、深入浅出，让人每每学完一篇课程，都受益匪浅、醍醐灌顶。这些细节、解读，是在国内互联网上都很少有人提及的。再次感谢~","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546894,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642458474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318976,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1635494365,"is_pvip":false,"replies":[{"id":115664,"content":"正确✅","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598359,"ip_address":"","comment_id":318976,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"一般是根据初始化严重程度的级别来抛出不同的错误，若是较为严重的影响程序生命周期的错误，则直接抛出运行时恐慌(Panic)，如果是较低级别的错误，可以通过记录trance等提供相应错误日志","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529448,"discussion_content":"正确✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318913,"user_name":"在下宝龙、","can_delete":false,"product_type":"c1","uid":1618030,"ip_address":"","ucode":"0735B64EB61CAC","user_header":"https://static001.geekbang.org/account/avatar/00/18/b0/6e/921cb700.jpg","comment_is_top":false,"comment_ctime":1635480470,"is_pvip":false,"replies":[{"id":115662,"content":"“导入不进去”是什么意思？你做了哪些操作？能具体点么？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598271,"ip_address":"","comment_id":318913,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"我再导入自己写的pkg1的包的时候 导入不进去，本地的pkg包要用怎么办。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529448,"discussion_content":"正确✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347721,"user_name":"Geek_East","can_delete":false,"product_type":"c1","uid":1589947,"ip_address":"","ucode":"A1A7CBF9B8FB2D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXKSvfaeicog2Ficx4W3pNeA1KRLOS7iaFy2uoxCDoYpGkGnP6KPGecKia6Dr3MtCkNGpHxAzmTMd0LA/132","comment_is_top":false,"comment_ctime":1654348811,"is_pvip":false,"replies":[{"id":126780,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1654482181,"ip_address":"","comment_id":347721,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"init()的两大作用\n- 对引入包的变量进行重置 （服务注入也属于此类，不过这里强调的是自我注入）\n- 对当前包的变量进行初始化","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574939,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654482181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341490,"user_name":"mikewoo","can_delete":false,"product_type":"c1","uid":1118888,"ip_address":"","ucode":"9AE90E05048DE1","user_header":"https://static001.geekbang.org/account/avatar/00/11/12/a8/8aaf13e0.jpg","comment_is_top":false,"comment_ctime":1649658574,"is_pvip":true,"replies":[{"id":124889,"content":"✅👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1649906384,"ip_address":"","comment_id":341490,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"当 init 函数在检查包数据初始状态时遇到失败或错误的情况，处理方式要视情况而定：\n1. 如果初始化的动作出错对业务或者程序运行有影响，就需要panic，结束运行；\n2. 如果初始化的动作出错对业务或者程序运行有特别的影响，比如只是一些告警啥的，觉着可以通过日志输出提醒信息。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562907,"discussion_content":"✅👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649906384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340888,"user_name":"泥腿","can_delete":false,"product_type":"c1","uid":1309200,"ip_address":"","ucode":"EEEBF8ECE5AEEA","user_header":"https://static001.geekbang.org/account/avatar/00/13/fa/10/38d22c78.jpg","comment_is_top":false,"comment_ctime":1649217187,"is_pvip":false,"replies":[{"id":124700,"content":"1. 是的\n2. 没有了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1649389164,"ip_address":"","comment_id":340888,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"小结部分总结 init 特点：【执行顺位排在包内其他语法元素的后面】\n1. 这里讲的【其他语法元素】是指 “常量”和“变量”么？\n2. 还有其他元素么","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560555,"discussion_content":"1. 是的\n2. 没有了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649389164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339952,"user_name":"林枫","can_delete":false,"product_type":"c1","uid":1297559,"ip_address":"","ucode":"38B9CBE7F42174","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/97/ae4d1400.jpg","comment_is_top":false,"comment_ctime":1648483809,"is_pvip":false,"replies":[{"id":124394,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1648644039,"ip_address":"","comment_id":339952,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"讲的挺好！","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559197,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648644040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337043,"user_name":"余京阳","can_delete":false,"product_type":"c1","uid":1076704,"ip_address":"","ucode":"E457BC354D5F6F","user_header":"https://static001.geekbang.org/account/avatar/00/10/6d/e0/6ccc554b.jpg","comment_is_top":false,"comment_ctime":1646564572,"is_pvip":false,"replies":[{"id":123239,"content":"💪","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646722642,"ip_address":"","comment_id":337043,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"平时写代码基本都是在力扣上傻瓜刷题，面向工程的写的特别少，go看到现在感觉有点晕头转向的，还是要反复咀嚼才能吃透","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559197,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648644040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335412,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1645511405,"is_pvip":false,"replies":[{"id":122511,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1645538338,"ip_address":"","comment_id":335412,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"文章和评论看完～","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555020,"discussion_content":"💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646722642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332411,"user_name":"Anohito","can_delete":false,"product_type":"c1","uid":2290668,"ip_address":"","ucode":"E223D8CCC205CA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIwufWp49Df9Sc09ib1d17WTbu7MiapWsVPWIKW00u77dUqlemZU5UibyGV8iaONqbtCyr4xexxRH1G7Q/132","comment_is_top":false,"comment_ctime":1643217398,"is_pvip":false,"replies":[{"id":121617,"content":"1.按import中包的出现顺序吧。\n2.编译器扫描包下的源文件时，肯定会遍历包目录下的文件，至于遍历的顺序就要看用的什么方法的，可以挖掘一下源码，估计用的也是filepath.Walk。\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643543364,"ip_address":"","comment_id":332411,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"多个包依赖的初始化顺序如何决定 go在源码中没有强制多个包import的顺序 编译器如何选择先初始化哪一个包 比如\nimport pkg1\nimport pkg2\n跟\nimport pkg2\nimport pkg1\n两个的结果是一样的吗\n\n类似的 一个包中有两个文件\nfile1.go\nfile2.go\n这两个文件被编译器处理的顺序是可以确定的吗，先处理file1.go还是file2.go？\n","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549078,"discussion_content":"1.按import中包的出现顺序吧。\n2.编译器扫描包下的源文件时，肯定会遍历包目录下的文件，至于遍历的顺序就要看用的什么方法的，可以挖掘一下源码，估计用的也是filepath.Walk。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643543364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331078,"user_name":"Goopand","can_delete":false,"product_type":"c1","uid":1952388,"ip_address":"","ucode":"640D506BADB4E5","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ca/84/1aba91f4.jpg","comment_is_top":false,"comment_ctime":1642411129,"is_pvip":false,"replies":[{"id":120976,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1642458474,"ip_address":"","comment_id":331078,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"也在极客时间购买了多门课程，也包括其他Go课程，没想到Bai老师能讲得这么细致入微、深入浅出，让人每每学完一篇课程，都受益匪浅、醍醐灌顶。这些细节、解读，是在国内互联网上都很少有人提及的。再次感谢~","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549078,"discussion_content":"1.按import中包的出现顺序吧。\n2.编译器扫描包下的源文件时，肯定会遍历包目录下的文件，至于遍历的顺序就要看用的什么方法的，可以挖掘一下源码，估计用的也是filepath.Walk。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643543364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318976,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1635494365,"is_pvip":false,"replies":[{"id":115664,"content":"正确✅","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598359,"ip_address":"","comment_id":318976,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"一般是根据初始化严重程度的级别来抛出不同的错误，若是较为严重的影响程序生命周期的错误，则直接抛出运行时恐慌(Panic)，如果是较低级别的错误，可以通过记录trance等提供相应错误日志","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546894,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642458474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318913,"user_name":"在下宝龙、","can_delete":false,"product_type":"c1","uid":1618030,"ip_address":"","ucode":"0735B64EB61CAC","user_header":"https://static001.geekbang.org/account/avatar/00/18/b0/6e/921cb700.jpg","comment_is_top":false,"comment_ctime":1635480470,"is_pvip":false,"replies":[{"id":115662,"content":"“导入不进去”是什么意思？你做了哪些操作？能具体点么？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598271,"ip_address":"","comment_id":318913,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"我再导入自己写的pkg1的包的时候 导入不进去，本地的pkg包要用怎么办。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529427,"discussion_content":"“导入不进去”是什么意思？你做了哪些操作？能具体点么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618030,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b0/6e/921cb700.jpg","nickname":"在下宝龙、","note":"","ucode":"0735B64EB61CAC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413616,"discussion_content":"已经自我解决啦 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636527686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318900,"user_name":"歪文","can_delete":false,"product_type":"c1","uid":1254649,"ip_address":"","ucode":"778231BA3D00D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/f9/b213a5fa.jpg","comment_is_top":false,"comment_ctime":1635476494,"is_pvip":false,"replies":[{"id":115661,"content":"正确✅","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598209,"ip_address":"","comment_id":318900,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"当 init 函数在检查包数据初始状态时遇到失败或错误的情况，我们该如何处理呢\n1. 由于是程序启动，可以直接panic，让开发者解决问题。\n2. 如果不影响整个程序运行，打印warn警告，然后使用默认值代替，继续运行下去。","like_count":1},{"had_liked":false,"id":390400,"user_name":"人言有力","can_delete":false,"product_type":"c1","uid":1690736,"ip_address":"浙江","ucode":"3708FBBFB641FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/70/64045bc0.jpg","comment_is_top":false,"comment_ctime":1715264386,"is_pvip":false,"replies":[{"id":142038,"content":"翻翻其他小伙伴的留言，这个问题是因为Go 1.22引入的，具体可以看这个：https:&#47;&#47;github.com&#47;golang&#47;go&#47;issues&#47;66575","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1715418826,"ip_address":"北京","comment_id":390400,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"使用go v1.22.2初始化以上代码，发现变量先于常量进行了初始化？\np3: var v has been initialized\np3: const c has been initialized\np3: init func invoked\n\n源码\npackage pkg3\n\nimport (\n    &quot;fmt&quot;\n)\n\nvar (\n    _  = constInitCheck()\n    v = variableInit(&quot;v&quot;)\n)\n\nconst (\n    c = &quot;c&quot;\n)\n\nfunc constInitCheck() string {\n    if c != &quot;&quot; {\n        fmt.Println(&quot;p3: const c has been initialized&quot;)\n    }\n    return &quot;&quot;\n}\n\nfunc variableInit(name string) string {\n    fmt.Printf(&quot;p3: var %s has been initialized\\n&quot;, name)\n    return name\n}\n\nfunc init() {\n    fmt.Println(&quot;p3: init func invoked&quot;)\n}\n\nfunc main() {\n    &#47;&#47; do nothing\n}\n\n然后将const声明放在var之前，输出结果是const先完成初始化了\np3: const c has been initialized\np3: var v has been initialized\np3: init func invoked\n\n新源码：\np3: const c has been initialized\np3: var v has been initialized\np3: init func invoked\n","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529420,"discussion_content":"正确✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388729,"user_name":"CoisiniXXX_","can_delete":false,"product_type":"c1","uid":2470295,"ip_address":"浙江","ucode":"BE0D9279D09C5D","user_header":"https://static001.geekbang.org/account/avatar/00/25/b1/97/b6e16d12.jpg","comment_is_top":false,"comment_ctime":1710777671,"is_pvip":false,"replies":[{"id":141530,"content":"上述指出的变量都是包的全局变量！其他函数内的局部变量在函数执行时才会被初始化。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1711075099,"ip_address":"北京","comment_id":388729,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"每个包内按以“常量 -&gt; 变量 -&gt; init 函数”的顺序进行初始化；\n那如果包内除了init函数还包含其他函数，其他函数内定义的局部变量会进行初始化吗？还是上述指出的变量都是包的全局变量？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640022,"discussion_content":"上述指出的变量都是包的全局变量！其他函数内的局部变量在函数执行时才会被初始化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1711075099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388503,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"北京","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1710300293,"is_pvip":false,"replies":[{"id":141476,"content":"这里只是举个例子，说明main.main的特殊性。至于在非main包中定义main在实际编码中毫无意义。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1710461958,"ip_address":"广东","comment_id":388503,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"非main包的main方法存在的目的是什么呢？解决依赖入口的问题？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640022,"discussion_content":"上述指出的变量都是包的全局变量！其他函数内的局部变量在函数执行时才会被初始化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1711075099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384152,"user_name":"撇撇","can_delete":false,"product_type":"c1","uid":1010786,"ip_address":"广东","ucode":"938305F9F3F19C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/62/cbb91635.jpg","comment_is_top":false,"comment_ctime":1700407633,"is_pvip":false,"replies":[{"id":140166,"content":"这个问题，我没看懂:)。能再描述一下么？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1700553511,"ip_address":"北京","comment_id":384152,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"有个疑问，既然需要在init函数中去充值包级别变量，那是否可以直接包级别变量的初始化方法就改成想要的方法呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632188,"discussion_content":"这个问题，我没看懂:)。能再描述一下么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700553511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382165,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1628602,"ip_address":"天津","ucode":"B6F2C8D99916AF","user_header":"https://static001.geekbang.org/account/avatar/00/18/d9/ba/306ca85a.jpg","comment_is_top":false,"comment_ctime":1696820269,"is_pvip":false,"replies":[{"id":139237,"content":"init无法返回错误码，它是一个不带返回值的函数。并且init执行于main之前，main无法判断init的执行情况。通常这种情况会记录日志，并退出程序。也有直接使用panic的，结果都是一样的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1696976332,"ip_address":"辽宁","comment_id":382165,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"当 init 函数在检查包数据初始状态时遇到失败或错误的情况，我们该如何处理呢？\n1.记录日志log\n2.返回错误码，main函数判断是否继续\n3.panic感觉不妥","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629348,"discussion_content":"init无法返回错误码，它是一个不带返回值的函数。并且init执行于main之前，main无法判断init的执行情况。通常这种情况会记录日志，并退出程序。也有直接使用panic的，结果都是一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696976332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376243,"user_name":"2018","can_delete":false,"product_type":"c1","uid":1107371,"ip_address":"浙江","ucode":"4C2CD47AD70177","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/ab/6fab2492.jpg","comment_is_top":false,"comment_ctime":1686581667,"is_pvip":true,"replies":[{"id":137234,"content":"我看你的输出中不是有这些pkg的init函数执行的输出么, pkg1, pkg2, pkg3的init执行都有：\n\npkg3: var v has been initializedpkg3: init function invoked\npkg1: const c has been initialized\npkg1: var v has been initializedpkg1: init func invoked\npkg2: const c has been initialized\npkg2: var v has been initializedpkg2: init func invoked\n\n只是跑到一行里去了:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1686643004,"ip_address":"北京","comment_id":376243,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"pkg3: const c has been initialized\npkg3: var v has been initializedpkg3: init function invoked\npkg1: const c has been initialized\npkg1: var v has been initializedpkg1: init func invoked\npkg2: const c has been initialized\npkg2: var v has been initializedpkg2: init func invoked\nmain: const c1 has been initialized\nmain: const c2 has been initialized\nmain: var v1 has been initialized\nmain: var v2 has been initialized\nmain: first init func invoked\nmain: second init func invoked\n按照教程，不知道为啥pkg相关的init 函数都没有执行，求解惑","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620883,"discussion_content":"我看你的输出中不是有这些pkg的init函数执行的输出么, pkg1, pkg2, pkg3的init执行都有：\n\npkg3: var v has been initializedpkg3: init function invoked\npkg1: const c has been initialized\npkg1: var v has been initializedpkg1: init func invoked\npkg2: const c has been initialized\npkg2: var v has been initializedpkg2: init func invoked\n\n只是跑到一行里去了:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686643004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320089,"user_name":"邰洋一","can_delete":false,"product_type":"c1","uid":1188486,"ip_address":"","ucode":"148DA7C913B28B","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/86/3fe860c9.jpg","comment_is_top":false,"comment_ctime":1636079634,"is_pvip":false,"replies":[{"id":116245,"content":"目前比较大的实战项目，源码放在了github上供大家下载，参见09讲。一些代码片段还没有。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422211,"ip_address":"","comment_id":320089,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师，好\n现在文章越往后看，跟之前的知识点串联起来，感觉瞬间就通了，很赞很赞！\n另外，代码是否可进行版本管理，比如，github&#47;gitee上，然后针对每一课建立对应的分支，文章及代码对应自己的分支，这样的话，个人感觉学习起来会顺利很多","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529867,"discussion_content":"目前比较大的实战项目，源码放在了github上供大家下载，参见09讲。一些代码片段还没有。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319729,"user_name":"布凡","can_delete":false,"product_type":"c1","uid":1202465,"ip_address":"","ucode":"346FCD332F8BFA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","comment_is_top":false,"comment_ctime":1635924392,"is_pvip":false,"replies":[{"id":115934,"content":"虽多，但我几乎都完整贴出来了。目前只有实战小项目有完整源码放在仓库里，见09讲。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635947759,"ip_address":"","comment_id":319729,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师，今天代码有点多，请问有放到网上托管吗？地址是多少呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529867,"discussion_content":"目前比较大的实战项目，源码放在了github上供大家下载，参见09讲。一些代码片段还没有。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319122,"user_name":"无名无姓","can_delete":false,"product_type":"c1","uid":2621412,"ip_address":"","ucode":"487BD5AA2CD305","user_header":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","comment_is_top":false,"comment_ctime":1635597106,"is_pvip":false,"replies":[{"id":115931,"content":"实战讲解中对应的项目会有具体的仓库，见第09讲。但一些代码片段没有放在仓库里。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635947402,"ip_address":"","comment_id":319122,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"能否可以建立一个git仓库，把文中代码放进去","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529744,"discussion_content":"虽多，但我几乎都完整贴出来了。目前只有实战小项目有完整源码放在仓库里，见09讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635947759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318900,"user_name":"歪文","can_delete":false,"product_type":"c1","uid":1254649,"ip_address":"","ucode":"778231BA3D00D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/f9/b213a5fa.jpg","comment_is_top":false,"comment_ctime":1635476494,"is_pvip":false,"replies":[{"id":115661,"content":"正确✅","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598209,"ip_address":"","comment_id":318900,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"当 init 函数在检查包数据初始状态时遇到失败或错误的情况，我们该如何处理呢\n1. 由于是程序启动，可以直接panic，让开发者解决问题。\n2. 如果不影响整个程序运行，打印warn警告，然后使用默认值代替，继续运行下去。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529420,"discussion_content":"正确✅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390400,"user_name":"人言有力","can_delete":false,"product_type":"c1","uid":1690736,"ip_address":"浙江","ucode":"3708FBBFB641FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/70/64045bc0.jpg","comment_is_top":false,"comment_ctime":1715264386,"is_pvip":false,"replies":[{"id":142038,"content":"翻翻其他小伙伴的留言，这个问题是因为Go 1.22引入的，具体可以看这个：https:&#47;&#47;github.com&#47;golang&#47;go&#47;issues&#47;66575","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1715418826,"ip_address":"北京","comment_id":390400,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"使用go v1.22.2初始化以上代码，发现变量先于常量进行了初始化？\np3: var v has been initialized\np3: const c has been initialized\np3: init func invoked\n\n源码\npackage pkg3\n\nimport (\n    &quot;fmt&quot;\n)\n\nvar (\n    _  = constInitCheck()\n    v = variableInit(&quot;v&quot;)\n)\n\nconst (\n    c = &quot;c&quot;\n)\n\nfunc constInitCheck() string {\n    if c != &quot;&quot; {\n        fmt.Println(&quot;p3: const c has been initialized&quot;)\n    }\n    return &quot;&quot;\n}\n\nfunc variableInit(name string) string {\n    fmt.Printf(&quot;p3: var %s has been initialized\\n&quot;, name)\n    return name\n}\n\nfunc init() {\n    fmt.Println(&quot;p3: init func invoked&quot;)\n}\n\nfunc main() {\n    &#47;&#47; do nothing\n}\n\n然后将const声明放在var之前，输出结果是const先完成初始化了\np3: const c has been initialized\np3: var v has been initialized\np3: init func invoked\n\n新源码：\np3: const c has been initialized\np3: var v has been initialized\np3: init func invoked\n","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644676,"discussion_content":"翻翻其他小伙伴的留言，这个问题是因为Go 1.22引入的，具体可以看这个：https://github.com/golang/go/issues/66575","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1715418826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388729,"user_name":"CoisiniXXX_","can_delete":false,"product_type":"c1","uid":2470295,"ip_address":"浙江","ucode":"BE0D9279D09C5D","user_header":"https://static001.geekbang.org/account/avatar/00/25/b1/97/b6e16d12.jpg","comment_is_top":false,"comment_ctime":1710777671,"is_pvip":false,"replies":[{"id":141530,"content":"上述指出的变量都是包的全局变量！其他函数内的局部变量在函数执行时才会被初始化。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1711075099,"ip_address":"北京","comment_id":388729,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"每个包内按以“常量 -&gt; 变量 -&gt; init 函数”的顺序进行初始化；\n那如果包内除了init函数还包含其他函数，其他函数内定义的局部变量会进行初始化吗？还是上述指出的变量都是包的全局变量？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644676,"discussion_content":"翻翻其他小伙伴的留言，这个问题是因为Go 1.22引入的，具体可以看这个：https://github.com/golang/go/issues/66575","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1715418826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388503,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"北京","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1710300293,"is_pvip":false,"replies":[{"id":141476,"content":"这里只是举个例子，说明main.main的特殊性。至于在非main包中定义main在实际编码中毫无意义。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1710461958,"ip_address":"广东","comment_id":388503,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"非main包的main方法存在的目的是什么呢？解决依赖入口的问题？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639295,"discussion_content":"这里只是举个例子，说明main.main的特殊性。至于在非main包中定义main在实际编码中毫无意义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710461959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384152,"user_name":"撇撇","can_delete":false,"product_type":"c1","uid":1010786,"ip_address":"广东","ucode":"938305F9F3F19C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6c/62/cbb91635.jpg","comment_is_top":false,"comment_ctime":1700407633,"is_pvip":false,"replies":[{"id":140166,"content":"这个问题，我没看懂:)。能再描述一下么？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1700553511,"ip_address":"北京","comment_id":384152,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"有个疑问，既然需要在init函数中去充值包级别变量，那是否可以直接包级别变量的初始化方法就改成想要的方法呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":639295,"discussion_content":"这里只是举个例子，说明main.main的特殊性。至于在非main包中定义main在实际编码中毫无意义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1710461959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382165,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1628602,"ip_address":"天津","ucode":"B6F2C8D99916AF","user_header":"https://static001.geekbang.org/account/avatar/00/18/d9/ba/306ca85a.jpg","comment_is_top":false,"comment_ctime":1696820269,"is_pvip":false,"replies":[{"id":139237,"content":"init无法返回错误码，它是一个不带返回值的函数。并且init执行于main之前，main无法判断init的执行情况。通常这种情况会记录日志，并退出程序。也有直接使用panic的，结果都是一样的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1696976332,"ip_address":"辽宁","comment_id":382165,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"当 init 函数在检查包数据初始状态时遇到失败或错误的情况，我们该如何处理呢？\n1.记录日志log\n2.返回错误码，main函数判断是否继续\n3.panic感觉不妥","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632188,"discussion_content":"这个问题，我没看懂:)。能再描述一下么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700553511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376243,"user_name":"2018","can_delete":false,"product_type":"c1","uid":1107371,"ip_address":"浙江","ucode":"4C2CD47AD70177","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/ab/6fab2492.jpg","comment_is_top":false,"comment_ctime":1686581667,"is_pvip":true,"replies":[{"id":137234,"content":"我看你的输出中不是有这些pkg的init函数执行的输出么, pkg1, pkg2, pkg3的init执行都有：\n\npkg3: var v has been initializedpkg3: init function invoked\npkg1: const c has been initialized\npkg1: var v has been initializedpkg1: init func invoked\npkg2: const c has been initialized\npkg2: var v has been initializedpkg2: init func invoked\n\n只是跑到一行里去了:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1686643004,"ip_address":"北京","comment_id":376243,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"pkg3: const c has been initialized\npkg3: var v has been initializedpkg3: init function invoked\npkg1: const c has been initialized\npkg1: var v has been initializedpkg1: init func invoked\npkg2: const c has been initialized\npkg2: var v has been initializedpkg2: init func invoked\nmain: const c1 has been initialized\nmain: const c2 has been initialized\nmain: var v1 has been initialized\nmain: var v2 has been initialized\nmain: first init func invoked\nmain: second init func invoked\n按照教程，不知道为啥pkg相关的init 函数都没有执行，求解惑","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629348,"discussion_content":"init无法返回错误码，它是一个不带返回值的函数。并且init执行于main之前，main无法判断init的执行情况。通常这种情况会记录日志，并退出程序。也有直接使用panic的，结果都是一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696976332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320089,"user_name":"邰洋一","can_delete":false,"product_type":"c1","uid":1188486,"ip_address":"","ucode":"148DA7C913B28B","user_header":"https://static001.geekbang.org/account/avatar/00/12/22/86/3fe860c9.jpg","comment_is_top":false,"comment_ctime":1636079634,"is_pvip":false,"replies":[{"id":116245,"content":"目前比较大的实战项目，源码放在了github上供大家下载，参见09讲。一些代码片段还没有。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422211,"ip_address":"","comment_id":320089,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师，好\n现在文章越往后看，跟之前的知识点串联起来，感觉瞬间就通了，很赞很赞！\n另外，代码是否可进行版本管理，比如，github&#47;gitee上，然后针对每一课建立对应的分支，文章及代码对应自己的分支，这样的话，个人感觉学习起来会顺利很多","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620883,"discussion_content":"我看你的输出中不是有这些pkg的init函数执行的输出么, pkg1, pkg2, pkg3的init执行都有：\n\npkg3: var v has been initializedpkg3: init function invoked\npkg1: const c has been initialized\npkg1: var v has been initializedpkg1: init func invoked\npkg2: const c has been initialized\npkg2: var v has been initializedpkg2: init func invoked\n\n只是跑到一行里去了:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686643004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319729,"user_name":"布凡","can_delete":false,"product_type":"c1","uid":1202465,"ip_address":"","ucode":"346FCD332F8BFA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","comment_is_top":false,"comment_ctime":1635924392,"is_pvip":false,"replies":[{"id":115934,"content":"虽多，但我几乎都完整贴出来了。目前只有实战小项目有完整源码放在仓库里，见09讲。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635947759,"ip_address":"","comment_id":319729,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师，今天代码有点多，请问有放到网上托管吗？地址是多少呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529744,"discussion_content":"虽多，但我几乎都完整贴出来了。目前只有实战小项目有完整源码放在仓库里，见09讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635947759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319122,"user_name":"无名无姓","can_delete":false,"product_type":"c1","uid":2621412,"ip_address":"","ucode":"487BD5AA2CD305","user_header":"https://static001.geekbang.org/account/avatar/00/27/ff/e4/927547a9.jpg","comment_is_top":false,"comment_ctime":1635597106,"is_pvip":false,"replies":[{"id":115931,"content":"实战讲解中对应的项目会有具体的仓库，见第09讲。但一些代码片段没有放在仓库里。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635947402,"ip_address":"","comment_id":319122,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"能否可以建立一个git仓库，把文中代码放进去","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529508,"discussion_content":"实战讲解中对应的项目会有具体的仓库，见第09讲。但一些代码片段没有放在仓库里。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635947402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319038,"user_name":"陈东","can_delete":false,"product_type":"c1","uid":2213995,"ip_address":"","ucode":"FCDE6D237CC621","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Ge7uhlEVxicQT73YuomDPrVKI8UmhqxKWrhtO5GMNlFjrHWfd3HAjgaSribR4Pzorw8yalYGYqJI4VPvUyPzicSKg/132","comment_is_top":false,"comment_ctime":1635519991,"is_pvip":true,"replies":[{"id":115666,"content":"能在细化一下么，比如举一个例子？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598762,"ip_address":"","comment_id":319038,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"用大小写Main或main管理,这样好用,还是多建立文件夹管理main包好用?","like_count":0},{"had_liked":false,"id":319251,"user_name":"Geek_278b9a","can_delete":false,"product_type":"c1","uid":2823271,"ip_address":"","ucode":"F8292291DE7EEB","user_header":"","comment_is_top":false,"comment_ctime":1635699843,"is_pvip":false,"replies":null,"discussion_count":8,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"关于init函数第一个作用的举例，没有看懂描述的逻辑","like_count":11,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529468,"discussion_content":"能在细化一下么，比如举一个例子？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319012,"user_name":"TonyGao","can_delete":false,"product_type":"c1","uid":2827964,"ip_address":"","ucode":"75E9F13CB7C66D","user_header":"https://static001.geekbang.org/account/avatar/00/2b/26/bc/a73e4275.jpg","comment_is_top":false,"comment_ctime":1635506681,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"init可以把成功或失败写入一个包全局变量，这样包内的方法可以根据这个全局变量来灵活根据业务处理。","like_count":5},{"had_liked":false,"id":318956,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1635490284,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"init一般都是初始化一些东西，如果失败，可能会影响实际的运行，因此我们目前的操作，就是记录Error日志，然后os.Exit(-1)。\n另外麻烦老师看一下我第6讲留言的问题，谢谢老师","like_count":4},{"had_liked":false,"id":364271,"user_name":"浩仔是程序员","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"广东","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1670745454,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"一开始有个疑问不是引用和空引用都会执行init函数吗？空引用这里是程序只需要引用包的init方法，而不需要其他的，go语言中引入了不使用是不可以的","like_count":1},{"had_liked":false,"id":318862,"user_name":"我爱北京天安门","can_delete":false,"product_type":"c1","uid":1201215,"ip_address":"","ucode":"1B36604F96EF89","user_header":"https://static001.geekbang.org/account/avatar/00/12/54/3f/46c3060a.jpg","comment_is_top":false,"comment_ctime":1635470375,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"一口气看完落下的三篇，很好的课程，期待后面","like_count":1},{"had_liked":false,"id":321785,"user_name":"芝士烤松饼","can_delete":false,"product_type":"c1","uid":1187083,"ip_address":"","ucode":"AE262751C50CDD","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/0b/5f353b88.jpg","comment_is_top":false,"comment_ctime":1637046769,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"思考题：根据发生错误的类别决定，如果是不可恢复的错误，panic 推出进程；如果是可以恢复的错误，则输出日志或其他告警处理。不过似乎日常业务代码中放到 init 函数中执行的似乎都是关键逻辑，大部分都是必须要成功的操作","like_count":0},{"had_liked":false,"id":319101,"user_name":"依韵","can_delete":false,"product_type":"c1","uid":1153762,"ip_address":"","ucode":"02F5BED8BE0F6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/e2/271e0caf.jpg","comment_is_top":false,"comment_ctime":1635584182,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"依赖：\n依赖包按“深度优先”的次序进行初始化；\n每个包内按以“常量 -&gt; 变量 -&gt; init 函数”的顺序进行初始化；\n包内的多个 init 函数按出现次序进行自动调用。\n\n除 main 之外还有一个特殊的函数 —— init\n它可用来：\n1. 重置、设置包级别的变量值，比如实现对包级变量的复杂初始化，\n2. 实现“注册模式”","like_count":0},{"had_liked":false,"id":319048,"user_name":"Witt","can_delete":false,"product_type":"c1","uid":1005864,"ip_address":"","ucode":"19C8BCA266130A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/28/943709cb.jpg","comment_is_top":false,"comment_ctime":1635524591,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"init 都失败了，接下来行为都不可控了，应该是要 panic ","like_count":0},{"had_liked":false,"id":319013,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1635507711,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"原来main不是第一执行的！","like_count":0,"discussions":[{"author":{"id":2323716,"avatar":"https://static001.geekbang.org/account/avatar/00/23/75/04/d26cd437.jpg","nickname":"lemon","note":"","ucode":"47626025C55E5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531496,"discussion_content":"感觉是这样：CommandLine变量的Usage字段是func类型，如果没有init函数，CommandLine在初始化时，Usage会被初始化为defaultUsage这个默认的func，而init函数逻辑里，将Usage替换为commandLineUsage这个func，等之后调用到CommandLine.Usage的时候会去调用commandLineUsage，而commandLineUsage调用的是Usage这个包变量【包变量Usage也是func类型，后面加括号：Usage()就代表调用该func】，而Usage这个包变量是可以之后修改的，比如flag.Usage=用户自定义的usage函数，这样下来，就完成了调用CommandLine.Usage时实际上会调用 用户自定义的usage函数 这个逻辑...不知道理解的对不对","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1637325267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":1,"child_discussions":[{"author":{"id":1203078,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5b/86/dba8214e.jpg","nickname":"星期三。","note":"","ucode":"EF3C461AB5399D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2323716,"avatar":"https://static001.geekbang.org/account/avatar/00/23/75/04/d26cd437.jpg","nickname":"lemon","note":"","ucode":"47626025C55E5E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545499,"discussion_content":"老师想表述的意识是这样子的，但是按照当前这个例子，因为CommandLine是可导出的，因此flag.CommandLine.Usage直接就可以完成自定义。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641977250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531496,"ip_address":"","group_id":0},"score":545499,"extra":""}]},{"author":{"id":1160678,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","nickname":"左耳朵东","note":"","ucode":"60134ACF12BB52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552611,"discussion_content":"我也觉得flag.CommandLine.Usage直接就可以完成自定义，为什么要走init绕那么大弯","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1645524718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2242904,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHxTg3tYriaCXiccCf7xUl9QHibAhCMBKQ2oCicvgcuHCo4ULSguISXeHzxM9a8fFD7icfy3OgXibvUNxw/132","nickname":"Geek_9dbc25","note":"","ucode":"6CB31893173165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411697,"discussion_content":"原来不止我一个没看懂 -，-#","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635986666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1505143,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f7/77/06463645.jpg","nickname":"ChanYu","note":"","ucode":"7976678C62959F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607097,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677600776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9f/a1/d75219ee.jpg","nickname":"po","note":"","ucode":"7DB36C278F34D7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590074,"discussion_content":"哈哈哈哈，原来我不是一个人没看懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665502178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589753,"discussion_content":"我也没看懂第一个init 的作用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665299735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1300707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d8/e3/987c9195.jpg","nickname":"Spike Jim.Fun","note":"","ucode":"C956A19146E1DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560260,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649240432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319038,"user_name":"陈东","can_delete":false,"product_type":"c1","uid":2213995,"ip_address":"","ucode":"FCDE6D237CC621","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Ge7uhlEVxicQT73YuomDPrVKI8UmhqxKWrhtO5GMNlFjrHWfd3HAjgaSribR4Pzorw8yalYGYqJI4VPvUyPzicSKg/132","comment_is_top":false,"comment_ctime":1635519991,"is_pvip":true,"replies":[{"id":115666,"content":"能在细化一下么，比如举一个例子？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635598762,"ip_address":"","comment_id":319038,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"用大小写Main或main管理,这样好用,还是多建立文件夹管理main包好用?","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529468,"discussion_content":"能在细化一下么，比如举一个例子？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635598762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319251,"user_name":"Geek_278b9a","can_delete":false,"product_type":"c1","uid":2823271,"ip_address":"","ucode":"F8292291DE7EEB","user_header":"","comment_is_top":false,"comment_ctime":1635699843,"is_pvip":false,"replies":null,"discussion_count":8,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"关于init函数第一个作用的举例，没有看懂描述的逻辑","like_count":11,"discussions":[{"author":{"id":2323716,"avatar":"https://static001.geekbang.org/account/avatar/00/23/75/04/d26cd437.jpg","nickname":"lemon","note":"","ucode":"47626025C55E5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531496,"discussion_content":"感觉是这样：CommandLine变量的Usage字段是func类型，如果没有init函数，CommandLine在初始化时，Usage会被初始化为defaultUsage这个默认的func，而init函数逻辑里，将Usage替换为commandLineUsage这个func，等之后调用到CommandLine.Usage的时候会去调用commandLineUsage，而commandLineUsage调用的是Usage这个包变量【包变量Usage也是func类型，后面加括号：Usage()就代表调用该func】，而Usage这个包变量是可以之后修改的，比如flag.Usage=用户自定义的usage函数，这样下来，就完成了调用CommandLine.Usage时实际上会调用 用户自定义的usage函数 这个逻辑...不知道理解的对不对","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1637325267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":1,"child_discussions":[{"author":{"id":1203078,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5b/86/dba8214e.jpg","nickname":"星期三。","note":"","ucode":"EF3C461AB5399D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2323716,"avatar":"https://static001.geekbang.org/account/avatar/00/23/75/04/d26cd437.jpg","nickname":"lemon","note":"","ucode":"47626025C55E5E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545499,"discussion_content":"老师想表述的意识是这样子的，但是按照当前这个例子，因为CommandLine是可导出的，因此flag.CommandLine.Usage直接就可以完成自定义。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641977250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":531496,"ip_address":"","group_id":0},"score":545499,"extra":""}]},{"author":{"id":1160678,"avatar":"https://static001.geekbang.org/account/avatar/00/11/b5/e6/c67f12bd.jpg","nickname":"左耳朵东","note":"","ucode":"60134ACF12BB52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552611,"discussion_content":"我也觉得flag.CommandLine.Usage直接就可以完成自定义，为什么要走init绕那么大弯","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1645524718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2242904,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHxTg3tYriaCXiccCf7xUl9QHibAhCMBKQ2oCicvgcuHCo4ULSguISXeHzxM9a8fFD7icfy3OgXibvUNxw/132","nickname":"Geek_9dbc25","note":"","ucode":"6CB31893173165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411697,"discussion_content":"原来不止我一个没看懂 -，-#","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635986666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1505143,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f7/77/06463645.jpg","nickname":"ChanYu","note":"","ucode":"7976678C62959F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607097,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677600776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1023905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/9f/a1/d75219ee.jpg","nickname":"po","note":"","ucode":"7DB36C278F34D7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590074,"discussion_content":"哈哈哈哈，原来我不是一个人没看懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665502178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589753,"discussion_content":"我也没看懂第一个init 的作用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665299735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1300707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d8/e3/987c9195.jpg","nickname":"Spike Jim.Fun","note":"","ucode":"C956A19146E1DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560260,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649240432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319012,"user_name":"TonyGao","can_delete":false,"product_type":"c1","uid":2827964,"ip_address":"","ucode":"75E9F13CB7C66D","user_header":"https://static001.geekbang.org/account/avatar/00/2b/26/bc/a73e4275.jpg","comment_is_top":false,"comment_ctime":1635506681,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"init可以把成功或失败写入一个包全局变量，这样包内的方法可以根据这个全局变量来灵活根据业务处理。","like_count":5},{"had_liked":false,"id":318956,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1635490284,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"init一般都是初始化一些东西，如果失败，可能会影响实际的运行，因此我们目前的操作，就是记录Error日志，然后os.Exit(-1)。\n另外麻烦老师看一下我第6讲留言的问题，谢谢老师","like_count":4},{"had_liked":false,"id":364271,"user_name":"浩仔是程序员","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"广东","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1670745454,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"一开始有个疑问不是引用和空引用都会执行init函数吗？空引用这里是程序只需要引用包的init方法，而不需要其他的，go语言中引入了不使用是不可以的","like_count":1},{"had_liked":false,"id":318862,"user_name":"我爱北京天安门","can_delete":false,"product_type":"c1","uid":1201215,"ip_address":"","ucode":"1B36604F96EF89","user_header":"https://static001.geekbang.org/account/avatar/00/12/54/3f/46c3060a.jpg","comment_is_top":false,"comment_ctime":1635470375,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"一口气看完落下的三篇，很好的课程，期待后面","like_count":1},{"had_liked":false,"id":321785,"user_name":"芝士烤松饼","can_delete":false,"product_type":"c1","uid":1187083,"ip_address":"","ucode":"AE262751C50CDD","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/0b/5f353b88.jpg","comment_is_top":false,"comment_ctime":1637046769,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"思考题：根据发生错误的类别决定，如果是不可恢复的错误，panic 推出进程；如果是可以恢复的错误，则输出日志或其他告警处理。不过似乎日常业务代码中放到 init 函数中执行的似乎都是关键逻辑，大部分都是必须要成功的操作","like_count":0},{"had_liked":false,"id":319101,"user_name":"依韵","can_delete":false,"product_type":"c1","uid":1153762,"ip_address":"","ucode":"02F5BED8BE0F6E","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/e2/271e0caf.jpg","comment_is_top":false,"comment_ctime":1635584182,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"依赖：\n依赖包按“深度优先”的次序进行初始化；\n每个包内按以“常量 -&gt; 变量 -&gt; init 函数”的顺序进行初始化；\n包内的多个 init 函数按出现次序进行自动调用。\n\n除 main 之外还有一个特殊的函数 —— init\n它可用来：\n1. 重置、设置包级别的变量值，比如实现对包级变量的复杂初始化，\n2. 实现“注册模式”","like_count":0},{"had_liked":false,"id":319048,"user_name":"Witt","can_delete":false,"product_type":"c1","uid":1005864,"ip_address":"","ucode":"19C8BCA266130A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/28/943709cb.jpg","comment_is_top":false,"comment_ctime":1635524591,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"init 都失败了，接下来行为都不可控了，应该是要 panic ","like_count":0},{"had_liked":false,"id":319013,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1635507711,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"原来main不是第一执行的！","like_count":0}]}