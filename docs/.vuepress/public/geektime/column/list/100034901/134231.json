{"id":134231,"title":"08 | 智能心跳机制：解决网络的不确定性","content":"<p>你好，我是袁武林。</p><p>在前面的章节里，我讲到了在即时消息场景中非常重要的两个特性：“可靠投递”和“实时性”。</p><p>为了让消息能更加实时、可靠、快速地触达到接收方，大部分IM系统会通过“长连接”的方式来建立收发双方的通信通道，这些基于TCP长连接的通信协议，在用户上线连接时，会在服务端维护好连接到服务器的用户设备和具体TCP连接的映射关系，通过这种方式服务端也能通过这个映射关系随时找到对应在线的用户的客户端，而且这个长连接一旦建立，就一直存在，除非网络被中断。</p><p>因为“长连接”方式相比“短连接轮询”，不仅能节约不必要的资源开销，最重要的是能够通过“服务端推送”，提供更加实时的消息下发。</p><p>同样，对于发送方来说，如果发送消息也能通过“长连接”通道把消息给到IM服务端，相对于短连接方式，也能省略TCP握手和TLS握手的几个RTT的时间开销，在用户体验和实时性上也会更好。</p><h2>为什么需要心跳机制</h2><p>“长连接”方式给我们带来了众多好处，那么要让消息通过“长连接”实现可靠投递，最重要的环节就在于如何维护好这个“长连接”。</p><p>由于这个“长连接”底层使用的TCP连接并不是一个真正存在的物理连接，实际上只是一个无感知的虚拟连接，中间链路的断开连接的两端不会感知到，因此维护好这个“长连接”一个关键的问题在于能够让这个“长连接”能够在中间链路出现问题时，让连接的两端能快速得到通知，然后通过“重连”来重新建立新的可用连接，从而让我们这个“长连接”一直保持“高可用”状态。</p><!-- [[[read_end]]] --><p>这个能够“快速”“不间断”识别连接可用性的机制，被称为“心跳机制”。“心跳机制”通过持续地往连接上发送“模拟数据”来试探连接的可用性，同时也让我们的连接在没有真正业务数据收发的时候，也持续有数据流通，而不会被中间的网络运营商以为连接已经没有在使用而把连接切断。</p><p>下面，我会从两个方面带你详细了解一下心跳机制在长连接维护中的必要性。</p><h3>降低服务端连接维护的开销</h3><p>首先，心跳机制可以让IM服务端能尽快感知到连接的变化，从而尽早清理服务端维护连接使用的资源。</p><p>对于大部分即时通讯场景，消息收发双方经常处于移动网络环境中，手机信号强弱变化及中间路由故障等，都可能导致“长连接”实际处于不可用状态。</p><p>比如：用户拿着手机进电梯了，手机网络信号忽然完全没了，长连接此时已经不可用，但IM服务端无法感知到这个“连接不可用”的情况；另外，假如我们上网的路由器忽然掉线了，之前App和IM服务端建立的长连接，此时实际也处于不可用状态，但是客户端和IM服务器也都无法感知。</p><p>我在前面讲过，之所以能够实现消息的“服务端推送”，是因为我们针对每一台上线的设备，都会在IM服务端维护相应的“用户设备”和“网络连接”这么一个映射关系，除此之外，很多时候为了节省网络开销，还会在服务端临时缓存一些没必要每次请求都携带的客户端的信息（比如：app版本号、操作系统、网络状态等），这样客户端一旦建好长连后，只需要首次携带这些信息，后续请求可以不用再携带，而是使用IM服务端缓存的这些信息。另外，在很多IM的实现上，还会在服务端维护一些“用户在线状态”和“所有在线设备”这些信息，便于业务使用。</p><p>如果IM服务端无法感知到这些连接的异常情况，会导致的一个问题是：IM服务端可能维护了大量“无效的连接”，从而导致严重的连接句柄的资源浪费；同时也会缓存了大量实际上已经没有用了的“映射关系”“设备信息”“在线状态”等信息，也是对资源的浪费；另外，IM服务端在往“无效长连接”推送消息，以及后续的重试推送都会降低服务的整体性能。</p><h3>支持客户端断线重连</h3><p>通过“心跳”快速识别连接的可用性，除了可以降低服务端的资源开销，也被用于支撑客户端的断开重连机制。</p><p>对于客户端发出心跳包，如果在一定的超时时间内（考虑到网络传输具有一定的延迟性，这个超时时间至少要大于一个心跳的间隔），比如连续两次发送心跳包，都没有收到IM服务端的响应，那么客户端可以认为和服务端的长连接不可用，这时客户端可以断线重连。</p><p>导致服务端没有响应的原因可能是和服务端的网络在中间环节被断开，也可能是服务器负载过高无法响应心跳包，不管什么情况，这种场景下断线重连是很有必要的，它能够让客户端快速自动维护连接的可用性。</p><h3>连接保活</h3><p>维护一条“高可用”的长连接，还有一个重要的任务就是<strong>尽量让建立的长连接存活时间更长</strong>。</p><p>这里你可能会问：难道在用户网络和中间路由网络都正常的情况下，长连接还可能会被杀死？</p><p>答案是：确实会。</p><p>探究这个原因的话，我可能要从IPv4说起。由于IPv4的公网IP的资源有限性（约43亿个），为了节省公网IP的使用，通过移动运营商上网的手机实际上只是分配了一个运营商内网的IP。</p><p>在访问Internet时，运营商网关通过一个“外网IP和端口”到“内网IP和端口”的双向映射表，来让实际使用内网IP的手机能和外网互通，这个网络地址的转换过程叫做NAT（Network Address Translation）。</p><p>NAT本身的实现机制并没有什么不妥，问题在于很多运营商为了节省资源和降低自身网关的压力，对于一段时间没有数据收发的连接，运营商会将它们从NAT映射表中清除掉，而且这个清除动作也不会被手机端和IM服务端感知到。</p><p>这样的话，如果没有了NAT映射关系，长连接上的消息收发都无法正常进行。而且多长时间会从NAT映射表清除，每个地方的运营商也是不尽相同，从几分钟到几小时都有。假设用户有几分钟没有收发消息，可能这个长连接就已经处于不可用状态了。</p><p>那么，如果我们的客户端能在没有消息收发的空闲时间给服务端发送一些信令，就能避免长连接被运营商NAT干掉了，这些“信令”一般就是通过心跳包来实现。</p><h2>心跳检测的几种实现方式</h2><p>介绍完了心跳机制的重要性，我们来学习一下如何去实现心跳检测。目前业界有三种常用的实现方法：TCP Keepalive、应用层心跳及智能心跳。下面我们分别来看一看。</p><h3>TCP Keepalive</h3><p>TCP的Keepalive作为操作系统的TCP/IP协议栈实现的一部分，对于本机的TCP连接，会在连接空闲期按一定的频次，自动发送不携带数据的探测报文，来探测对方是否存活。操作系统默认是关闭这个特性的，需要由应用层来开启。</p><p>默认的三个配置项：心跳周期是2小时，失败后再重试9次，超时时间75s。三个配置项均可以调整。</p><p>这样来看，TCP的Keepalive作为系统层TCP/IP协议栈的已有实现，不需要其他开发工作量，用来作为连接存活与否的探测机制是非常方便的；上层应用只需要处理探测后的连接异常情况即可，而且心跳包不携带数据，带宽资源的浪费也是最少的。</p><p>由于易用性好、网络消耗小等优势，TCP Keepalive在很多IM系统中被开启使用，之前抓包就发现，WhatsApps使用空闲期10秒间隔的TCP Keepalive来进行存活探测。</p><p>虽然拥有众多优势，但TCP Keepalive本身还是存在一些缺陷的，比如心跳间隔灵活性较差，一台服务器某一时间只能调整为固定间隔的心跳；另外TCP Keepalive虽然能够用于连接层存活的探测，但并不代表真正的应用层处于可用状态。</p><p>我举一个例子，比如IM系统出现代码死锁、阻塞的情况下，实际上已经无法处理业务请求了，但此时连接层TCP Keepalive的探针不需要应用层参与，仍然能够在内核层正常响应。这种情况就会导致探测的误判，让已失去业务处理能力的机器不能被及时发现。</p><h3>应用层心跳</h3><p>为了解决TCP Keepalive存在的一些不足的问题，很多IM服务使用应用层心跳来提升探测的灵活性和准确性。<strong>应用层心跳实际上就是客户端每隔一定时间间隔，向IM服务端发送一个业务层的数据包告知自身存活。</strong></p><p>如果IM服务端在一定时间内没有收到心跳包，就认定客户端由于某种原因连接不可达了，此时就会从IM服务端把这个连接断开，同时清除相应分配的其他资源。</p><p>应用层心跳和TCP Keepalive心跳相比，由于不属于TCP/IP协议栈的实现，因此会有一些额外的数据传输开销，但是大部分应用层心跳的设计上心跳包都尽量精简，一般就几个字节，比如有些应用层心跳包只是一个空包用于保活，有的心跳包只是携带了心跳间隔，用于客户端调整下一次的心跳，所以额外的数据开销都非常小。</p><p>应用层心跳相比TCP Keepalive，由于需要在应用层进行发送和接收的处理，因此更能反映应用的可用性，而不是仅仅代表网络可用。</p><p>而且应用层心跳可以根据实际网络的情况，来灵活设置心跳间隔，对于国内运营商NAT超时混乱的实际情况下，灵活可设置的心跳间隔在节省网络流量和保活层面优势更明显。</p><p>目前大部分IM都采用了应用层心跳方案来解决连接保活和可用性探测的问题。比如之前抓包中发现WhatApps的应用层心跳间隔有30秒和1分钟，微信的应用层心跳间隔大部分情况是4分半钟，目前微博长连接采用的是2分钟的心跳间隔。</p><p>每种IM客户端发送心跳策略也都不一样，最简单的就是按照固定频率发送心跳包，不管连接是否处于空闲状态。之前抓手机QQ的包，就发现App大概按照45s的频率固定发心跳；还有稍微复杂的策略是客户端在发送数据空闲后才发送心跳包，这种相比较对流量节省更好，但实现上略微复杂一些。</p><p>下面是一个典型的应用层心跳的客户端和服务端的处理流程图，从图中可以看出客户端和服务端，各自通过心跳机制来实现“断线重连”和“资源清理”。</p><p><img src=\"https://static001.geekbang.org/resource/image/bc/01/bcb269cadc8b781b56c35071e316e301.png?wh=2276*2412\" alt=\"\"></p><p>需要注意的是：对于客户端来说，判断连接是否空闲的时间是既定的心跳间隔时间，而对于服务端来说，考虑到网络数据传输有一定的延迟，因此判断连接是否空闲的超时时间需要大于心跳间隔时间，这样能避免由于网络传输延迟导致连接可用性的误判。</p><h3>智能心跳</h3><p>在国内移动网络场景下，各个地方运营商在不同的网络类型下NAT超时的时间差异性很大。采用固定频率的应用层心跳在实现上虽然相对较为简单，但为了避免NAT超时，只能将心跳间隔设置为小于所有网络环境下NAT超时的最短时间，虽然也能解决问题，但对于设备CPU、电量、网络流量的资源无法做到最大程度的节约。</p><p>为了优化这个现象，很多即时通讯场景会采用“智能心跳”的方案，来平衡“NAT超时”和“设备资源节约”。所谓智能心跳，就是让心跳间隔能够根据网络环境来自动调整，通过不断自动调整心跳间隔的方式，逐步逼近NAT超时临界点，在保证NAT不超时的情况下尽量节约设备资源。据说微信就采用了智能心跳方案来优化心跳间隔。</p><p>不过从个人角度看，随着目前移动资费的大幅降低，手机端硬件设备条件也越来越好，智能心跳对于设备资源的节约效果有限。而且智能心跳方案在确认NAT超时临界点的过程中，需要不断尝试，可能也会从一定程度上降低“超时确认阶段”连接的可用性，因此，我建议你可以根据自身业务场景的需要，来权衡必要性。</p><h2>小结</h2><p>简单回顾一下今天的内容：为了保证消息下发的实时性，很多即时通讯场景使用“长连接”来降低每次建立连接消耗的时间，同时避免了“短连接轮询”带来的不必要的资源浪费。</p><p>但是，由于移动网络环境错综复杂，网络状态变化、中间链路断开、运营商NAT超时都可能导致这个“长连接”处于不可用状态，而且收发双发无法感知到。</p><p>通过客户端和IM服务端建立的“心跳机制”可以快速自动识别连接是否可用，同时避免运营商NAT超时被断开的情况。“心跳机制”解决了以下三方面的问题：</p><ul>\n<li><strong>降低服务端连接维护无效连接的开销。</strong></li>\n<li><strong>支持客户端快速识别无效连接，自动断线重连。</strong></li>\n<li><strong>连接保活，避免被运营商NAT超时断开。</strong></li>\n</ul><p>心跳探测的实现业界大部分综合采用以下两种方式：</p><ul>\n<li><strong>TCP Keepalive。</strong>操作系统TCP/IP协议栈自带，无需二次开发，使用简单，不携带数据网络流量消耗少。但存在灵活性不够和无法判断应用层是否可用的缺陷。</li>\n<li><strong>应用层心跳。</strong>应用自己实现心跳机制，需要一定的代码开发量，网络流量消耗稍微多一点，但心跳间隔的灵活性好，配合智能心跳机制，可以做到“保证NAT不超时的情况下最大化节约设备资源消耗”，同时也能更精确反馈应用层的真实可用性。</li>\n</ul><p>最后给大家留一道思考题：</p><p><strong>心跳机制中可以结合TCP的keepalive和应用层心跳来一起使用吗？</strong></p><p>以上就是今天课程的内容，欢迎你给我留言，我们可以在留言区一起讨论。感谢你的收听，我们下期再见。</p>","comments":[{"had_liked":false,"id":133272,"user_name":"王棕生","can_delete":false,"product_type":"c1","uid":1337944,"ip_address":"","ucode":"901BD0447A871E","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","comment_is_top":false,"comment_ctime":1568472887,"is_pvip":false,"replies":[{"id":"51300","content":"是的👍","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568628352,"ip_address":"","comment_id":133272,"utype":1}],"discussion_count":2,"race_medal":0,"score":"186252066615","product_id":100034901,"comment_content":"解答问题：如果从实现功能角度看，传输层和应用层的心跳机制没有结合的必要，因为传输层的心跳探测连接可用性，应用层的心跳机制也可以完成探测; 但从debug角度看，应用层的心跳探测机制无法定位是网络的问题还是系统的问题，此时由传输层辅助就非常好，但实现会相对复杂！","like_count":42,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467329,"discussion_content":"是的👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568628352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2349972,"avatar":"https://static001.geekbang.org/account/avatar/00/23/db/94/b8a2c768.jpg","nickname":"张宇迪","note":"","ucode":"A13903B84CE5C6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375514,"discussion_content":"好列害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621700174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133030,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1568329507,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"96057610019","product_id":100034901,"comment_content":"tcp keepalive解决网络可用性，应用层keepalive解决网络和服务可用性，应用层无法区别网络还是服务问题，加上tcp心跳包可以进一步区分，有助于客户端做动态调整","like_count":23},{"had_liked":false,"id":144343,"user_name":"rfyiamcool","can_delete":false,"product_type":"c1","uid":1118627,"ip_address":"","ucode":"65FCBF05B13893","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/a3/7a2405ca.jpg","comment_is_top":false,"comment_ctime":1571900317,"is_pvip":true,"replies":[{"id":"55749","content":"其实就是下一次动态调整的心跳间隔是：当前已经确认的安全的心跳间隔最大值 和 已经确认的心跳探测过大的最小值 的中间均值。比如上一次心跳间隔是4分钟，而且连续N次都成功ack了，那么当前已经确认的安全的心跳间隔是4分钟，假设已经确认10分钟时心跳间隔过大了，那么下一次调整的心跳就是 4 + 10 &#47; 2 = 7分钟。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571987870,"ip_address":"","comment_id":144343,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40226605981","product_id":100034901,"comment_content":"能简单说下 二分法来进行心跳探测 的逻辑么？ ","like_count":10,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471895,"discussion_content":"其实就是下一次动态调整的心跳间隔是：当前已经确认的安全的心跳间隔最大值 和 已经确认的心跳探测过大的最小值 的中间均值。比如上一次心跳间隔是4分钟，而且连续N次都成功ack了，那么当前已经确认的安全的心跳间隔是4分钟，假设已经确认10分钟时心跳间隔过大了，那么下一次调整的心跳就是 4 + 10 / 2 = 7分钟。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571987870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1118627,"avatar":"https://static001.geekbang.org/account/avatar/00/11/11/a3/7a2405ca.jpg","nickname":"rfyiamcool","note":"","ucode":"65FCBF05B13893","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41176,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572361758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134928,"user_name":"隰有荷","can_delete":false,"product_type":"c1","uid":1357944,"ip_address":"","ucode":"2BE9A32AB28963","user_header":"https://static001.geekbang.org/account/avatar/00/14/b8/78/2828195b.jpg","comment_is_top":false,"comment_ctime":1568957669,"is_pvip":false,"replies":[{"id":"51779","content":"tcp的keepalive开启比较简单，比如netty下可以通过如下代码开启：<br><br>ServerBootstrap bootstrap = new ServerBootstrap();<br>bootstrap.childOption(ChannelOption.SO_KEEPALIVE, true);<br><br>另外tcp keepalive的心跳间隔的配置也需要修改一下系统的&#47;etc&#47;sysctl.conf，类似下面：<br><br>net.ipv4.tcp_keepalive_time=120<br>net.ipv4.tcp_keepalive_intvl=30<br>net.ipv4.tcp_keepalive_probes=3","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568967196,"ip_address":"","comment_id":134928,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40223663333","product_id":100034901,"comment_content":"看了老师的讲解，在理论上是明白了，但是具体实践上该如何操作？比如：tcp的keepalive该如何通过具体的代码语言去实现。这些具体操作性的知识，不知道本课程后面是否有涉及到？","like_count":9,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467961,"discussion_content":"tcp的keepalive开启比较简单，比如netty下可以通过如下代码开启：\n\nServerBootstrap bootstrap = new ServerBootstrap();\nbootstrap.childOption(ChannelOption.SO_KEEPALIVE, true);\n\n另外tcp keepalive的心跳间隔的配置也需要修改一下系统的/etc/sysctl.conf，类似下面：\n\nnet.ipv4.tcp_keepalive_time=120\nnet.ipv4.tcp_keepalive_intvl=30\nnet.ipv4.tcp_keepalive_probes=3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568967196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133019,"user_name":"newzai","can_delete":false,"product_type":"c1","uid":1102367,"ip_address":"","ucode":"D5E34D427D65FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/d2/1f/2ef2514b.jpg","comment_is_top":false,"comment_ctime":1568314425,"is_pvip":false,"replies":[{"id":"51288","content":"比较常见的有二分法。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568623045,"ip_address":"","comment_id":133019,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23043150905","product_id":100034901,"comment_content":"智能心跳，采用什么算法逼近或者选择心跳周期？如何感知当前的心跳周期是否太小？因为一旦太大就会导致连接断开","like_count":5,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467220,"discussion_content":"比较常见的有二分法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568623045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133594,"user_name":"dongdong","can_delete":false,"product_type":"c1","uid":1305580,"ip_address":"","ucode":"25CB9FC6AE7737","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/UqxY58hlwdaypDeLwsjSBfBe2Q7YhZyJniaPEf7Ws7tneSzgQ6js6Uh0KT5FjCBIRUCGyVZ0zsvBUPVz2bK2YWQ/132","comment_is_top":false,"comment_ctime":1568617015,"is_pvip":false,"replies":[{"id":"51307","content":"心跳间隔是多少？外网的中间路由环节和运营商网络都可能在 一个连接一段时间没有数据传输的时候 从NAT表删除这个连接的映射。所以心跳间隔最好不要大于5分钟。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568629369,"ip_address":"","comment_id":133594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14453518903","product_id":100034901,"comment_content":"请问老师，我这里使用应用层发心跳包，很奇怪在内网测试环境，网页一直不操作都不会断线，但在外网同套代码，不操作1，2个小时后，网页的长链接就会断线，WS脚本重连也连不上，但只要重新刷新页面就可以连上了，这是什么原因？","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467440,"discussion_content":"心跳间隔是多少？外网的中间路由环节和运营商网络都可能在 一个连接一段时间没有数据传输的时候 从NAT表删除这个连接的映射。所以心跳间隔最好不要大于5分钟。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568629369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133058,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1568341400,"is_pvip":false,"replies":[{"id":"51291","content":"会双推，走APNs不会直接落地app的db，苹果会根据应用在前台还是在后台来决定要不要展示APNs走通知栏的消息。现在也有很多应用支持应用在前台时也展示通知栏的消息，看具体需求。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568623699,"ip_address":"","comment_id":133058,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14453243288","product_id":100034901,"comment_content":"服务端在进行推送时候，假设判断用户连接有效，即用户在线，此时推送是同时推与客户端应用保持的长连接和apns等多条通道吗？然后在客户端去重？还是每次只会选择一条通道？","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467243,"discussion_content":"会双推，走APNs不会直接落地app的db，苹果会根据应用在前台还是在后台来决定要不要展示APNs走通知栏的消息。现在也有很多应用支持应用在前台时也展示通知栏的消息，看具体需求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568623699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142203,"user_name":"Geek_e7834d","can_delete":false,"product_type":"c1","uid":1530493,"ip_address":"","ucode":"ABAF1B1B7E6490","user_header":"","comment_is_top":false,"comment_ctime":1571311024,"is_pvip":false,"replies":[{"id":"54997","content":"具体是哪个图呀，理解不太对，心跳和推送是独立的，并不会在推送的时候进行检测，一般会由独立的定时器来根据一定时间内socket中是否有数据收发来定时触发的。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571404223,"ip_address":"","comment_id":142203,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161245616","product_id":100034901,"comment_content":"看流程图，服务器检查心跳并不是定时的， 而只是推送的时候检测？","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471028,"discussion_content":"具体是哪个图呀，理解不太对，心跳和推送是独立的，并不会在推送的时候进行检测，一般会由独立的定时器来根据一定时间内socket中是否有数据收发来定时触发的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571404223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133703,"user_name":"花指令","can_delete":false,"product_type":"c1","uid":1110252,"ip_address":"","ucode":"E0C92F7AAC2585","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/ec/5e147cbf.jpg","comment_is_top":false,"comment_ctime":1568639100,"is_pvip":false,"replies":[{"id":"51486","content":"因为tcp本身是一个虚拟连接，中间链路断开的话另一端是感知不到的，另外，移动运营商的NAT会对一段时间没有数据传输的连接切断，所以对于维护高可用的一条长连接心跳是必不可少的。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568805793,"ip_address":"","comment_id":133703,"utype":1}],"discussion_count":4,"race_medal":0,"score":"10158573692","product_id":100034901,"comment_content":"老师好，我用go的tcpsocket，有一端异常退出时，另一端会触发掉线通知。所以我不明白的是，socket是不是不需要心跳？还是是因为我是在局域网测试，和公网情况不一样？","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467478,"discussion_content":"因为tcp本身是一个虚拟连接，中间链路断开的话另一端是感知不到的，另外，移动运营商的NAT会对一段时间没有数据传输的连接切断，所以对于维护高可用的一条长连接心跳是必不可少的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568805793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237556,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/34/0c2c1200.jpg","nickname":"L","note":"","ucode":"0BDC32D02DB267","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65558,"discussion_content":"websocket就是这样，之前公司的产品就是基于ws的，亲测web端的IM如果关闭浏览器页面的话另一端可以马上知道，如果直接断开wifi或者拔掉网线就不行了，另一端没反应。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1575012054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237556,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/34/0c2c1200.jpg","nickname":"L","note":"","ucode":"0BDC32D02DB267","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65556,"discussion_content":"异常分多钟，如果是进程死掉，另一端一般能知道，如果是设备掉电，网线断开，路由器断网，这些异常的话，另一端是不能立即感知到的，","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1575011941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1110252,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/ec/5e147cbf.jpg","nickname":"花指令","note":"","ucode":"E0C92F7AAC2585","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237556,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/34/0c2c1200.jpg","nickname":"L","note":"","ucode":"0BDC32D02DB267","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":69397,"discussion_content":"明白了，感谢解答～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575285604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":65556,"ip_address":""},"score":69397,"extra":""}]}]},{"had_liked":false,"id":133261,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1568469794,"is_pvip":false,"replies":[{"id":"51299","content":"一种方式是客户端采用固定timer来定时发送心跳包，也可以在客户端没有消息收发后的一段时间才可以发送心跳包，这样能节约一些流量。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568628335,"ip_address":"","comment_id":133261,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10158404386","product_id":100034901,"comment_content":"老师 客户端或服务端心跳实现是在客户端维持一个轮训服务吗？这样会不会有浪费客户端资源的问题，有没有什么好方法解决轮训定时器这种资源浪费问题","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467321,"discussion_content":"一种方式是客户端采用固定timer来定时发送心跳包，也可以在客户端没有消息收发后的一段时间才可以发送心跳包，这样能节约一些流量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568628335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133174,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1568431819,"is_pvip":true,"replies":[{"id":"51297","content":"服务端不知道客户端的固定连接地址呀，所以重连一般都是由客户端发起。服务端一般不需要发送心跳，是由客户端来发送心跳，服务端一段时间没有收到客户端的心跳包的时候就可以判断连接异常，主动断开等客户端重连上线就可以了。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568628234,"ip_address":"","comment_id":133174,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10158366411","product_id":100034901,"comment_content":"我看上图 心跳处理流程，只有客户端当判断连接无效的时候才会进行 连接重连，重连的这个动作服务端不会进行吗？ 如果这样的话服务端还要发送心跳消息进行心跳检测做什么呢？服务端是不是可以这样处理，当一段时间没有收到客户端的心跳包的时候就判断与该客户端的心跳连接断开了，直接释放对应的资源不就可以了吗？","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467280,"discussion_content":"服务端不知道客户端的固定连接地址呀，所以重连一般都是由客户端发起。服务端一般不需要发送心跳，是由客户端来发送心跳，服务端一段时间没有收到客户端的心跳包的时候就可以判断连接异常，主动断开等客户端重连上线就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568628234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197684,"user_name":"0xTang","can_delete":false,"product_type":"c1","uid":1019659,"ip_address":"","ucode":"82F5282EF3044B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/0b/a438de52.jpg","comment_is_top":false,"comment_ctime":1585391937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880359233","product_id":100034901,"comment_content":"心跳一般只需端到服，这样端检测超时可以发起重连。","like_count":1},{"had_liked":false,"id":184841,"user_name":"Geek_a2849d","can_delete":false,"product_type":"c1","uid":1183791,"ip_address":"","ucode":"B2EE30752C836E","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/2f/cdd0b5d1.jpg","comment_is_top":false,"comment_ctime":1583416851,"is_pvip":false,"replies":[{"id":"72293","content":"这个最好双端抓包来分析一下，看下最终的断线是哪一边主动发起的，比如安卓息屏或者切后台之类的是否有断连的操作。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584085695,"ip_address":"","comment_id":184841,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878384147","product_id":100034901,"comment_content":"老师您好，希望您能帮我解答下，公司开发的移动端IM，服务端设置心跳超时时间120秒，客户端30秒发送心跳包，但是安卓端还是会频繁掉线，有的时候停留在app聊天页面也会断线，请问下这个是什么原因呢？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486143,"discussion_content":"这个最好双端抓包来分析一下，看下最终的断线是哪一边主动发起的，比如安卓息屏或者切后台之类的是否有断连的操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584085695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146434,"user_name":"wuhaka","can_delete":false,"product_type":"c1","uid":1717134,"ip_address":"","ucode":"7628FE50C69F4C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKRn8Mcfib1laX6wddDlKRaSH8BjJESVNt1RD6iay3icbcyCcZib214Q93A8vZI9zarcuBianLUe06bwoQ/132","comment_is_top":false,"comment_ctime":1572521928,"is_pvip":false,"replies":[{"id":"57185","content":"是个好想法，不过QUIC之所以能够实现抽象的connection id应该也是得益于底层依赖的UDP是无状态传输协议，基于TCP之上要解决连接迁移的问题估计会很难。要是你有一些思路咱们可以继续探讨一下。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573030483,"ip_address":"","comment_id":146434,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867489224","product_id":100034901,"comment_content":"老师您好，您这节只讲了tcp的心跳机制，我觉得可以采用类似QUIC协议，自定义connection id判断逻辑连接状态，无需通过通信五元组来判断是否为同一连接，这样可以避免各种NAT设备，或nginx代理等出现的映射失效问题，在复杂网络环境中不用在频繁断线重连节省开销","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472858,"discussion_content":"是个好想法，不过QUIC之所以能够实现抽象的connection id应该也是得益于底层依赖的UDP是无状态传输协议，基于TCP之上要解决连接迁移的问题估计会很难。要是你有一些思路咱们可以继续探讨一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573030483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144179,"user_name":"Csquare","can_delete":false,"product_type":"c1","uid":1137203,"ip_address":"","ucode":"23CAC353A82D1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/33/9a66d0b8.jpg","comment_is_top":false,"comment_ctime":1571876171,"is_pvip":false,"replies":[{"id":"55748","content":"在线状态可以在用户完成上线操作后记录到uid维度的存储里供使用。保活机制不一定能保证用户一直在线，只是能降低运营商NAT超时导致连接被强制中断的概率，同时通过心跳保活还能及时发现连接是否可用，从而快速进行重连，来提升连接的可用性。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571986694,"ip_address":"","comment_id":144179,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866843467","product_id":100034901,"comment_content":"如果用了长连接，怎么支持显示用户在线状态的功能了，保活机制会让用户一直在线吧？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471838,"discussion_content":"在线状态可以在用户完成上线操作后记录到uid维度的存储里供使用。保活机制不一定能保证用户一直在线，只是能降低运营商NAT超时导致连接被强制中断的概率，同时通过心跳保活还能及时发现连接是否可用，从而快速进行重连，来提升连接的可用性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571986694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133317,"user_name":"Geek_e986e3","can_delete":false,"product_type":"c1","uid":1642716,"ip_address":"","ucode":"EF53D2DEA59A8F","user_header":"","comment_is_top":false,"comment_ctime":1568514291,"is_pvip":false,"replies":[{"id":"51301","content":"一般可以采用二分法来进行心跳探测。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568628680,"ip_address":"","comment_id":133317,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5863481587","product_id":100034901,"comment_content":"智能心跳的算法是咋样的","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467345,"discussion_content":"一般可以采用二分法来进行心跳探测。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568628680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334330,"user_name":"pdf","can_delete":false,"product_type":"c1","uid":1649662,"ip_address":"","ucode":"A44250955878BB","user_header":"https://static001.geekbang.org/account/avatar/00/19/2b/fe/7925eb7e.jpg","comment_is_top":false,"comment_ctime":1644889746,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1644889746","product_id":100034901,"comment_content":"老师，各位同学<br>如果服务端检测心跳超时之前，链接处于假死状态，服务端认为该链接可用，发送push消息，此时写tcp buffer是会成功还是失败呢？","like_count":0},{"had_liked":false,"id":302891,"user_name":"极客—月","can_delete":false,"product_type":"c1","uid":1318468,"ip_address":"","ucode":"EE12EEBF242B1D","user_header":"","comment_is_top":false,"comment_ctime":1626424442,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1626424442","product_id":100034901,"comment_content":"老师，有个疑问望解答下，大量用户在心跳检测下线后，服务端应该采用怎样的方式清理用户好呢？(我们使用LRU清理，但是Go中List是非线程安全的，所以只能单线程清理，大量用户下线时，往往清理不过来)","like_count":0},{"had_liked":false,"id":219257,"user_name":"倔强小德普","can_delete":false,"product_type":"c1","uid":1180884,"ip_address":"","ucode":"4795B744BDDBDD","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/d4/7173785e.jpg","comment_is_top":false,"comment_ctime":1589977799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589977799","product_id":100034901,"comment_content":"客户端是发送心跳包检测 长链状态的。服务端一般通过什么机制，来识别长链是否健康。根据最后一次消息的时间吗 ","like_count":0},{"had_liked":false,"id":207606,"user_name":"lin yu","can_delete":false,"product_type":"c1","uid":1126028,"ip_address":"","ucode":"3F2E0AF47750FE","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/8c/75936ae2.jpg","comment_is_top":false,"comment_ctime":1587117201,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587117201","product_id":100034901,"comment_content":"看着是很明白了，但是写不出来，应用层心跳怎么通过具体代码实现","like_count":0,"discussions":[{"author":{"id":1763335,"avatar":"","nickname":"Geek_373e87","note":"","ucode":"9DBAD30E4ED24A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276846,"discussion_content":"netty可以用idelstatehandler\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590940661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204764,"user_name":"tm1234","can_delete":false,"product_type":"c1","uid":1947612,"ip_address":"","ucode":"4042321C713186","user_header":"","comment_is_top":false,"comment_ctime":1586452093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586452093","product_id":100034901,"comment_content":"请问老师 如果IM需要显示用户在线&#47;idle&#47;路线 状态，在keep alive的情况下，服务端是怎么发现用户离线了呢？用户在线是可以通过用户上线时注册发现，但是由于一直keep alive，是不是就没法检测到用户实际已经下线了呢？","like_count":0},{"had_liked":false,"id":182082,"user_name":"一个工匠","can_delete":false,"product_type":"c1","uid":1038449,"ip_address":"","ucode":"2168BA6F926074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/71/d6f79534.jpg","comment_is_top":false,"comment_ctime":1582705353,"is_pvip":true,"replies":[{"id":"72290","content":"心跳主要解决的就是机器断电、网线拔出、防火墙这些导致的断线情况。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584085200,"ip_address":"","comment_id":182082,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582705353","product_id":100034901,"comment_content":"防火墙也是心跳设计中需要考虑的一个重要因素。","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485219,"discussion_content":"心跳主要解决的就是机器断电、网线拔出、防火墙这些导致的断线情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584085200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180339,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1582259997,"is_pvip":false,"replies":[{"id":"72288","content":"比如你家里上网的路由器网络故障之类的。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584084584,"ip_address":"","comment_id":180339,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582259997","product_id":100034901,"comment_content":"中间链路出问题会导致服务端客户端链接假死，那老师中间链路出问题一般是什么情况，比如断网是吧","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484616,"discussion_content":"比如你家里上网的路由器网络故障之类的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584084584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133588,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1568615655,"is_pvip":false,"replies":[{"id":"51306","content":"结合使用是没问题的，tcp keepalive和应用层心跳配合使用，当出现消息收发问题的时候，能够协助我们发现是网络层问题还是应用层问题。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568629251,"ip_address":"","comment_id":133588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568615655","product_id":100034901,"comment_content":"         我觉得可以：毕竟不是完全基于同一层；TCP Keepalive是基于传输层，应用层心跳是基于应用层的，关键在于如何合理组合使用，中间如何去处理。<br>       昨天某个完课的课程老师告诉我一定要注意知识的关联性：这门课程看了一遍其实是反向再来看的-觉得自己当时没注意一些知识，根据七层网络协议各层分别相互交付而言我认为是可以的；其实关键问题就在于TCP Keepalive的部分事情如何和应用层心跳合理结合-这才是问题处理的难点。<br>      这个就像早期我们做软件直接CS或BS架构：现在数据系统层往往会多一个No sql DB，用的合理是能解决很多问题-关键难点就在如何合理使用；这是我的个人理解。任何架构做不好完美，不过使用合理可以增强效果&#47;正确率。<br>","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467437,"discussion_content":"结合使用是没问题的，tcp keepalive和应用层心跳配合使用，当出现消息收发问题的时候，能够协助我们发现是网络层问题还是应用层问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568629251,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133117,"user_name":"lorancechen","can_delete":false,"product_type":"c1","uid":1114303,"ip_address":"","ucode":"2A16CFA4726AE7","user_header":"https://static001.geekbang.org/account/avatar/00/11/00/bf/a44cde46.jpg","comment_is_top":false,"comment_ctime":1568365862,"is_pvip":false,"replies":[{"id":"51294","content":"是指客户端发送心跳包的间隔。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568624012,"ip_address":"","comment_id":133117,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568365862","product_id":100034901,"comment_content":"文章中指出的心跳监测的时间间隔是发送","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467257,"discussion_content":"是指客户端发送心跳包的间隔。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568624012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":133065,"user_name":"卫江","can_delete":false,"product_type":"c1","uid":1101226,"ip_address":"","ucode":"DE2F7A6916F1A9","user_header":"https://static001.geekbang.org/account/avatar/00/10/cd/aa/33d48789.jpg","comment_is_top":false,"comment_ctime":1568343961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568343961","product_id":100034901,"comment_content":"问题：心跳机制是不是可以结合tcp的keepalive和应用层的心跳协议？当然可以，不过只使用应用层的心跳协议就可以了，因为一旦应用层的心跳出现问题意味着连接出问题或服务处理不过来，不论什么问题，它更能反应应用真实的整体情况，比如负载均衡与后端服务器之间的应用心跳就能更客观的反应应用情况而便于进一步处理，比如摘除这个后端服务器并报警，而如果只是使用tcp的keepalive的反应的问题就比较片面，只是针对于网络的，而不能反应应用整体的情况，而如果应用整体出问题，连接没有问题也没有什么意义。不过从实现角度来说，tcp的keepalive和使用tcp的应用心跳一起使用并不会增加应用处理网络事件的复杂度，因为基于tcp，我们都是通过read和write来获取连接状态的，所以一起开启也无所谓。","like_count":0},{"had_liked":false,"id":133029,"user_name":"钢","can_delete":false,"product_type":"c1","uid":1106184,"ip_address":"","ucode":"A49848BF63A579","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/08/3dc76043.jpg","comment_is_top":false,"comment_ctime":1568328970,"is_pvip":false,"replies":[{"id":"51289","content":"心跳包的设计貌似没有固定的设计规范，目的就是尽量精简，比如只包括通用Header的空包，或者body内容是当前心跳间隔（智能心跳可能需要用到）。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568623213,"ip_address":"","comment_id":133029,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568328970","product_id":100034901,"comment_content":"老师，有没有应用层心跳包的设计规范及要求的文章推荐的","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467225,"discussion_content":"心跳包的设计貌似没有固定的设计规范，目的就是尽量精简，比如只包括通用Header的空包，或者body内容是当前心跳间隔（智能心跳可能需要用到）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568623213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}