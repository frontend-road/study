{"id":760752,"title":"17｜软件设计能力：工程师的核心竞争壁垒","content":"<p>你好，我是李云。这一讲我们来聊一聊工程师的竞争壁垒。</p><p>从我们进入职场开始，职业安全就是一个让人敏感的关注焦点。比如，35岁年龄焦虑就是一个老生常谈的话题，时不时撩动着人的神经。可年龄焦虑还没解决，人工智能焦虑又来了，以ChatGPT为代表的人工智能技术在2023年取得突破性进展的同时，程序员要失业了的声音尘嚣甚上。</p><p>当然，每个人都会被社会淘汰，只是时间早晚的问题。担心职业安全的同时，我们不禁要问，如何构建自己在职场的竞争壁垒，让自己被社会淘汰得慢点呢？</p><p>为了避免讨论时太发散，我得提醒下，这一讲是从专业技能的维度去展开的，毕竟个人的职业竞争壁垒是一个多维度且相当复杂的话题。另外，专业技能是靠手艺吃饭的工程师最关心的方向。</p><p>依我看，有这么两大原因导致了工程师的职业安全焦虑。第一，年轻的工程师每年一批批进入职场，我们拿什么来与精力旺盛、学习能力强的他们竞争。第二，人工智能这类新技术的出现，我们应如何看待和应对。</p><p>不过啊，这两个都是外因，咱也控制不了，没有办法消除它们来解决自己的职业安全焦虑问题。是的，个人的职场竞争壁垒一定是从内因下手才对，构建一种能力让我们能应对外因的到来。</p><h2>竞争壁垒在哪</h2><p>既然竞争壁垒是一种能力，那这种能力一定是行业所需才行，否则就会出现一拳打在棉花上的感觉。那工程师在行业最稀缺的是什么能力呢？注意我加上了“最”这个字，因为“最”才意味着更有价值和更持久。</p><!-- [[[read_end]]] --><p>16讲咱们聊到布鲁克斯的一个观点，他指出软件开发活动由根本任务和次要任务组成。进一步我总结为，根本任务是“软件设计”，次要任务是“编码”，所以我们会有“<strong>软件开发 =k × 软件设计 + 编码</strong>”这个公式，其中k是远大于1的系数，以便体现软件设计是根本任务。如果从能力视角来解读这个公式，那么我们可以得出，软件设计能力才是行业最稀缺的能力。换句话说，<strong>软件设计能力是工程师的核心竞争壁垒</strong>。</p><p>你想啊，软件开发活动的关键是要解决现实问题，这就需要我们根据纷繁复杂的现象和需求，通过抽象和洞察化繁为简。</p><p>先来说说抽象能力。抽象动作的背后，需要咱有良好的概念能力才行。说到概念能力，估计你想到了16讲中所聊到的，它也是工程师软件设计能力背后所需要的核心能力。</p><p><strong>软件设计能力之所以能成为工程师的竞争壁垒，是因为背后所需的概念能力需要花很多时间来培养，无法速成</strong>。因为它不仅涉及到信息和知识的累积，还包括对这些知识的深入理解和应用能力。概念能力涵盖了从基础概念到复杂问题的抽象和概括，以及在不同情境中灵活运用这些概念的能力。</p><p>为了帮助你理解为何概念能力无法速成，我总结了以下三条。</p><ol>\n<li>对复杂概念和系统的深刻理解需要时间。我们需要在实践中反复应用这些概念，从而深化理解。</li>\n<li>经验积累需要时间。概念能力往往与个人的经验紧密相关，通过经历不同的项目、挑战和失败，我们才能更好地理解和应用抽象概念。</li>\n<li>思维模式的转变需要时间。发展概念能力，通常需要我们改变和扩展现有的思维模式，这种转变并非一蹴而就，而是随着时间和经验的积累逐渐完成的。</li>\n</ol><p>说完抽象能力，接下来咱来说一说洞察能力，或简称为洞察力。洞察力通常指对现象或问题深刻而敏锐的理解，它涉及快速准确地捕捉到核心问题或隐藏的模式，并能理解背后的深层含义。洞察力是概念能力的一部分，但更侧重于直觉。</p><p>就概念能力和洞察力，我简单总结一下。概念能力是一种更广泛的认知能力，涵盖了从现象抽象和形成概念的能力；而洞察力则是在此基础上，对特定情境的深入理解和感知。两者共同作用，使个体能够有效地理解和处理复杂的问题，最后做出有洞察力的行为，比如决策、表达观点等。</p><p>你可能意识到了，作为一名软件工程师，我们在职业生涯中除了要锻炼自己的概念能力，还得进一步培养自己的洞察力。还有啊，洞察的对象不只是针对产品需求的代码实现，更有用户的需要和行业发展背后的规律等。<strong>无论是做技术还是技术管理，洞察力是高级职位所必须掌握的能力</strong>。</p><p>为了让你对洞察力有更具体的认识，就软件设计我想和你分享我的两个洞察。</p><p>第一个洞察是，<strong>越复杂的软件，对工程师软件设计能力的要求就越高</strong>。因此，我鼓励你抓住机会，参与更大规模软件项目的开发工作。或者，在已参与的软件项目中，承担更大范围的软件维护和迭代演进责任。这些机会都能很好地锻炼咱驾驭复杂软件的能力，锻炼个体的软件设计能力。</p><p>第二个洞察是，<strong>规模越大的软件，软件设计质量对整个软件产品质量的贡献也越大</strong>。下图示例说明了我的这一洞察。</p><p><img src=\"https://static001.geekbang.org/resource/image/14/16/146e73b86b7666a835fda90a95aebc16.jpg?wh=4000x2251\" alt=\"\"></p><p>这个洞察能很好地解释为何有些软件再怎么修补，它的产品质量水平都无法提高，因为只要软件设计的质量没有提高，再怎么“贴狗皮膏药”也于事无补。对于那些有一定规模和历史的软件来说，要改变软件设计可不是一件小事，那可以复杂到对整个软件的重新开发。</p><p>好，现在咱知道了竞争壁垒是什么，那针对开始提出的两个职业安全问题，我们如何化解呢？</p><h2>化解职业安全焦虑</h2><p>我们先来聊第一个职业安全焦虑。年轻的工程师进入职场有一个成长过程，这一点我们初入职场时也经历过了。由于他们的概念能力不如我们，所以没有办法应对复杂任务，需要我们这些有经验的人，运用自己的概念能力，将复杂任务分解成小的任务，再将小任务分派并指导他们完成。</p><p>我得提醒一下，此时<strong>我们与年轻工程师的关系不是竞争而是共赢</strong>。换句话说，我们的立场应是用好他们精力旺盛、学习能力强的特点，一起干出更大的成绩，借事修人，共同成长。你想啊，我们刚入职场时，是不是也希望身边有经验的人也这样待咱呢？</p><p>当我们错误地用竞争关系取代共赢，来定义咱与年轻工程师的关系时，很可能就会以提防的心态与他们共事，这其实并不利于发挥集体的力量，最终是双输。还记得11讲中谈到的“知识因分享而增值，因封闭而贬值”这个观点吗？</p><p>你可能发现了，应对这个焦虑的办法，是假设你有良好的软件设计能力。或者你可以认为，这就以终为始地告诉了你，个人的专业技能发展，需要一直重视软件设计能力的培养。如果不这样，那一批批年轻人进到职场，就确实会让人很慌。</p><p>接下来，我们来聊第二个职业安全焦虑。也就是，人工智能这样新技术的出现，会取代程序员吗？</p><p>我的观点是，人工智能目前没有办法取代具有良好软件设计能力的程序员。因为它没有人类所特有的工作、生活经历，很难锻炼出解决现实问题的概念能力和洞察力，只能解决软件开发活动中的次要任务，即一定程度地解决编码问题。换句话说，边边角角的编码工作人工智能是可以胜任的。</p><p>如果哪一天人工智能真解决了开发活动中的根本任务，那样的话，布鲁克斯所预言的“没有银弹”也就走到了终点。在我看来，人工智能要真正全面取代程序员，那时的一个前提条件是，人类可以轻松且无缝地将自己的工作与生活经历传递给人工智能。换句话说，脑机结合技术已完全攻克并普及。</p><p>你可能会说，现在的人工智能也一定程度能解决软件设计问题啊？即使是，我们别忘了，软件设计是需要不断演进的，我们教人工智能如何演进软件设计，现在看来是一个成本非常高的事。</p><p>应对人工智能所带来的焦虑，我们依然要注意自己的格局。<strong>学会用好人工智能这个助手，而不是将它当作是自己的竞争者</strong>。前者让人工作起来更轻松，后者却只能以失败告终。</p><p>哦，前面提到了年龄焦虑这个问题，但并没有正面回答，可能会让你觉得这一讲缺了点什么。我认为，<strong>年龄焦虑的背后是对成长慢的焦虑</strong>。这与工程师忽视软件设计能力的培养和持续专业化是一回事。</p><h2>总结时刻</h2><p>现在让我们梳理一下这讲所学的主要内容。这一讲我们从每位工程师都关心的职业安全聊起，探索了个人专业技能的核心竞争壁垒，从打造核心竞争壁垒的视角来化解对职业安全的焦虑。</p><p>软件设计能力之所以能成为工程师的核心竞争壁垒，原因在于背后所需要的概念能力和洞察力是无法速成的，需要花很长的时间去实践、积累、试错才能掌握。此外，软件行业的两个特征，也导致了软件设计能力能成为工程师的核心竞争壁垒。一个是，越复杂的软件对工程师软件设计能力的要求就越高；另一个是，规模越大的软件，软件设计质量对整个软件产品质量的贡献也越大。</p><p>基于我对工程师核心竞争壁垒的认识，化解职业安全焦虑的关键在于，工程师应持续提升自己的软件设计能力。当我们有了良好的软件设计能力，就能建立起职业安全的护城河。</p><p>最后，再和你唠叨几句心里话。我这么强调软件设计的重要性，花这么大的篇幅来讲软件设计，是因为我看到在行业中真正理解软件设计的人非常少，可以说80%的人根本就没有好好思考过这件事。我以前面试软件开发专家时会问候选人一个问题，“什么是软件设计”。就这一个问题，10个人中有8个会被Pass掉。</p><p>太多太多的人会写代码，但思考太少了。真正会关注软件设计的人，就会从美学上看待这份职业。这确实是更高的要求，但也正因如此才能真正构建起工程师的职业壁垒。我们需要真正从软件设计层面来学习和成长，不然很多都是花架子，也确实不会有多大的竞争力。这就好比武功的招式学了很多，可内功没有上去，招式再多也白练。</p><p>好了，最后的最后，还是老规矩，我想请你思考，你会如何定义“软件设计”这个概念呢？期待你留言与我分享交流。</p><p>我们下一讲见。</p>","neighbors":{"left":{"article_title":"16｜一切皆概念：程序的“好”是指什么？","id":760361},"right":{"article_title":"18｜单测与重构：怎样提高代码的质量？","id":760759}},"comments":[{"had_liked":false,"id":389907,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"美国","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1713848533,"is_pvip":false,"replies":[{"id":141846,"content":"你好，\n\n哇，写了这么多。从你的字里行间，我能感受到你对这个职业的热爱，太好了。\n\n我也觉得你的定义一点都不简单，也就是“简单不简单”。你的定义中，很重要的强调了落地问题，也就是软件设计不能飘在空中，这一点我与你的想法完全是一样的。另外，我注意到你还用了“稳定”、“流程”这样的字眼，前者给我的感觉是一种细致，后者给我的感觉是机制化，这些都是很好的思考。\n\n祝你早日成为自己认可的、有品味的程序员！:-)","user_name":"作者回复","user_name_real":"编辑","uid":1267721,"ctime":1713862610,"ip_address":"浙江","comment_id":389907,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100755801,"comment_content":"老师说的很好，我也说说自己的理解，还望老师指正。\n\n用一句话来定义软件设计——对需要的场景，制定一套易于理解且稳定的流程或方法。\n\n你可能会说，你说的是不是太简单了，我觉得要做到一点都不简单。这里的重点在于 “需要的场景” 和 “易于理解且稳定”。场景越大，你需要考虑的情况就越多，也越复杂，就像文章中说的，规模越大的项目就越考验设计能力。并且你还要能保证第二点，你设计出来的东西可以很轻易的交给别人，并且别人不需要有过多的经验就可以实现，维护并且拓展。这需要日积月累的经验，之前踩过的坑，碰过的壁，犯过的错都会帮助你设计出更完善的系统，当然还需要你学习解决问题的方法，行业的最佳实践等等，这才能让你设计出来的东西更简单且实用。\n\n那些好的，且历经岁月依然被广泛使用的软件或标准，是不是都很好地做到了这两点？这里举些例子：\n\n- TCP&#47;IP 协议\n- Unix 系统\n- AWS 里的 Java API 接口\n\n想要做好软件设计，需要心中有追求，不能带着完成任务的心态去设计，写程序。要时时刻刻都想着怎样才能把自己负责的部分做到不会出错，又怎样才能让他人非常容易地就理解自己设计出来的东西。并且还要时不时地回过头去想想那些前人总结出来的最佳实践，比如设计模式、编程范式、设计原则等等，不断尝试新的领域，不断经历，不断踩坑，不断犯错，又不断回过头去反思这些方法，你的软件设计能力就会逐步提高了。\n\nLinus 说过，这世界程序员之所有高下之分，最大的区别就是程序员的 “品味” 不一样。是的，软件设计就是程序员的品味，争取做一个有品味的程序员：）","like_count":5,"discussions":[{"author":{"id":1267721,"avatar":"https://static001.geekbang.org/account/avatar/00/13/58/09/e4f65502.jpg","nickname":"至简李云","note":"","ucode":"8AFB5805B72ED0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642848,"discussion_content":"你好，\n\n哇，写了这么多。从你的字里行间，我能感受到你对这个职业的热爱，太好了。\n\n我也觉得你的定义一点都不简单，也就是“简单不简单”。你的定义中，很重要的强调了落地问题，也就是软件设计不能飘在空中，这一点我与你的想法完全是一样的。另外，我注意到你还用了“稳定”、“流程”这样的字眼，前者给我的感觉是一种细致，后者给我的感觉是机制化，这些都是很好的思考。\n\n祝你早日成为自己认可的、有品味的程序员！:-)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713862610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389799,"user_name":"到不了的塔","can_delete":false,"product_type":"c1","uid":1258362,"ip_address":"上海","ucode":"0F5BE3CB58DE31","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/7a/ac307bfc.jpg","comment_is_top":false,"comment_ctime":1713495049,"is_pvip":false,"replies":[{"id":141835,"content":"你好，\n\n微服务化就要用到软件设计能力才行，特别是要用到领域驱动开发DDD，这个方法论本质就是将业务与技术糅合在一起的，需要有很好的软件设计能力才行。\n\n当然，当采用DDD完成了服务的切拆分后，如果我们聚焦于单个微服务上，可能因为服务的功能足够内聚和简单，以为不需要软件设计能力了。\n\n其实，不只是针对微服务这事，任何一个软件行业都存在类似的现象。那些做服务切拆分的人，大多是经验丰富的人，而我们每位工程师都应想着成为那样的人才好，这样发展空间才会更大，才能真正构建竞争的壁垒。\n\n总之，我建议咱需要紧盯自己如何成为切拆分服务的人，而不是只盯着实现单个微服务的人。","user_name":"作者回复","user_name_real":"编辑","uid":1267721,"ctime":1713756805,"ip_address":"浙江","comment_id":389799,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100755801,"comment_content":"李老师，你好，\n随着微服务的流行， 服务的规模和复杂度都大大降低，这是不是也意味着对软件设计质量的要求也越来越低。如果行业对软件设计质量的要求降低，那软件工程师的竞争壁垒又在哪呢？","like_count":2,"discussions":[{"author":{"id":1267721,"avatar":"https://static001.geekbang.org/account/avatar/00/13/58/09/e4f65502.jpg","nickname":"至简李云","note":"","ucode":"8AFB5805B72ED0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642692,"discussion_content":"你好，\n\n微服务化就要用到软件设计能力才行，特别是要用到领域驱动开发DDD，这个方法论本质就是将业务与技术糅合在一起的，需要有很好的软件设计能力才行。\n\n当然，当采用DDD完成了服务的切拆分后，如果我们聚焦于单个微服务上，可能因为服务的功能足够内聚和简单，以为不需要软件设计能力了。\n\n其实，不只是针对微服务这事，任何一个软件行业都存在类似的现象。那些做服务切拆分的人，大多是经验丰富的人，而我们每位工程师都应想着成为那样的人才好，这样发展空间才会更大，才能真正构建竞争的壁垒。\n\n总之，我建议咱需要紧盯自己如何成为切拆分服务的人，而不是只盯着实现单个微服务的人。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713756805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390025,"user_name":"极客001","can_delete":false,"product_type":"c1","uid":3868250,"ip_address":"北京","ucode":"B956B93CE8291D","user_header":"https://static001.geekbang.org/account/avatar/00/3b/06/5a/31102459.jpg","comment_is_top":false,"comment_ctime":1714126121,"is_pvip":false,"replies":[{"id":141900,"content":"你好，\n\n不知你是否注意到“软件设计”与“软件开发”的区别呢？我理解前者是后者的一部分，而你的表达更说是在讲软件开发呢？！\n\n再试试聚焦于软件设计？","user_name":"作者回复","user_name_real":"编辑","uid":1267721,"ctime":1714293597,"ip_address":"浙江","comment_id":390025,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100755801,"comment_content":"老师您好，我觉得的软件设计是在明确用户需求的前提下对用户需求进行归纳总结，然后确定整体技术架构，最后通过代码一步一步进行功能实现，最终形成一个完整的系统。在系统流程设计中，要站在客户角度进行思考，在满足需求的前提下尽可能将系统的操作设计的简单明了，让用户有一个好的体验，真正便利于客户的工作生活，真正做到科技改变生活。","like_count":1,"discussions":[{"author":{"id":1267721,"avatar":"https://static001.geekbang.org/account/avatar/00/13/58/09/e4f65502.jpg","nickname":"至简李云","note":"","ucode":"8AFB5805B72ED0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":643404,"discussion_content":"你好，\n\n不知你是否注意到“软件设计”与“软件开发”的区别呢？我理解前者是后者的一部分，而你的表达更说是在讲软件开发呢？！\n\n再试试聚焦于软件设计？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1714293597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389882,"user_name":"FireMo","can_delete":false,"product_type":"c1","uid":2760281,"ip_address":"山东","ucode":"A841A8EF7EAB69","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erGtWFlVOyWYpUTArqFylhe763oQKZHjtCHT95pMa8GgHrO91f8iahkkGQXjnFHopSyfpbKpNvK58Q/132","comment_is_top":false,"comment_ctime":1713772000,"is_pvip":false,"replies":[{"id":141847,"content":"你好，\n\n在你分享中，最打动我的是“美学”两个字。是否有这一追求，能很好地区分普通工程师和优秀工程师。这种追求可能会让人觉得有点虚，但只要工程师能基于自己的思考和实践将之给做实了，我相信那就能显著地区分普通和优秀了。\n\n加油！","user_name":"作者回复","user_name_real":"编辑","uid":1267721,"ctime":1713862895,"ip_address":"浙江","comment_id":389882,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100755801,"comment_content":"软件设计，目的是设计出一个符合业务需求的软件，首先是从业务需求出发，要充分理解需求，然后抽象出概念，基于概念确定功能点，将一个或几个功能组合成模块，从面向对象的角度在模块内部实现高内聚，模块之间的通信实现低耦合；各个模块之间相互隔离。一定要从美学角度出发，设计出让别人看一眼就能懂的软件，后续才能写出让别人一眼就能看懂的代码。","like_count":1,"discussions":[{"author":{"id":1267721,"avatar":"https://static001.geekbang.org/account/avatar/00/13/58/09/e4f65502.jpg","nickname":"至简李云","note":"","ucode":"8AFB5805B72ED0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642849,"discussion_content":"你好，\n\n在你分享中，最打动我的是“美学”两个字。是否有这一追求，能很好地区分普通工程师和优秀工程师。这种追求可能会让人觉得有点虚，但只要工程师能基于自己的思考和实践将之给做实了，我相信那就能显著地区分普通和优秀了。\n\n加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713862895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389790,"user_name":"卢泽华","can_delete":false,"product_type":"c1","uid":3601772,"ip_address":"陕西","ucode":"210E4F2B3C3B47","user_header":"https://static001.geekbang.org/account/avatar/00/36/f5/6c/7722854c.jpg","comment_is_top":false,"comment_ctime":1713452854,"is_pvip":false,"replies":[{"id":141824,"content":"你好，\n\n蛮生动的理解。如果让你用一句话来表达（比如，50个字内），你又会如何组织呢？我相信这个任务给到你，你得再对自己的理解做梳理和抽象才行，这也话也算是一次设计任务吧。","user_name":"作者回复","user_name_real":"编辑","uid":1267721,"ctime":1713496094,"ip_address":"浙江","comment_id":389790,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100755801,"comment_content":"我理解的软件设计就是 给软件里面某些元素（服务、组件、模块、对象、函数）分配职责，也就是这些元素要干什么，然后这些元素如何配合。也就是概念及其关系。软件要应对复杂度和需求的变化，所以就需要对软件元素进行抽象。关键在于如何抽象，抽到哪个层次上，比如把变化原因一样的对象放在一起（单一职责），把变化频率一样的放在一起(也就是分层)。面向对象建模里面也就是名词和动词，有哪些对象（名词），这些对象的职责是什么（动词）。","like_count":1,"discussions":[{"author":{"id":1267721,"avatar":"https://static001.geekbang.org/account/avatar/00/13/58/09/e4f65502.jpg","nickname":"至简李云","note":"","ucode":"8AFB5805B72ED0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642358,"discussion_content":"你好，\n\n蛮生动的理解。如果让你用一句话来表达（比如，50个字内），你又会如何组织呢？我相信这个任务给到你，你得再对自己的理解做梳理和抽象才行，这也话也算是一次设计任务吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713496094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389755,"user_name":"SMTCode","can_delete":false,"product_type":"c1","uid":1109038,"ip_address":"辽宁","ucode":"0D837A753E4FAB","user_header":"https://static001.geekbang.org/account/avatar/00/10/ec/2e/49d13bd2.jpg","comment_is_top":false,"comment_ctime":1713393380,"is_pvip":false,"replies":[{"id":141820,"content":"你好，\n\n你的这个理解给我最大的感受是非常接地气，如果用团队效能动力模型来说，就是你有很好的业务技能，这是非常难得的。\n\n就软件设计这个概念，我觉得你还可以更聚焦于自己的工作过程中，哪个过程你是真正在做软件设计，放到那个场景你在思考什么、纠结什么，将这种感觉给表达出来，可能就对了。\n\n当然了，每个人对于软件设计的理解是不同的，这并没有标准答案。无论如何，我期待你在未来能更多地关注这个问题，我相信当有一天你看清楚了，有自己的见解了，那能力也一定得到了很大的增加。\n\n我们一起加油！","user_name":"作者回复","user_name_real":"编辑","uid":1267721,"ctime":1713436438,"ip_address":"浙江","comment_id":389755,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100755801,"comment_content":"我理解的软件设计是：通过理解项目或产品的需求，对需求进行抽象，选择合适的技术，然后进行拆分，先通过最小原型去验证与需求的契合度和设计的合理性，然后再同过不断迭代，完善项目机能，同时还要考虑如何进行测试和确保质量的方式，在合适的时间对小部分代码进行再拆分和重构，让代码有一个易维护、可扩展的基础底座。","like_count":1,"discussions":[{"author":{"id":1267721,"avatar":"https://static001.geekbang.org/account/avatar/00/13/58/09/e4f65502.jpg","nickname":"至简李云","note":"","ucode":"8AFB5805B72ED0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":642249,"discussion_content":"你好，\n\n你的这个理解给我最大的感受是非常接地气，如果用团队效能动力模型来说，就是你有很好的业务技能，这是非常难得的。\n\n就软件设计这个概念，我觉得你还可以更聚焦于自己的工作过程中，哪个过程你是真正在做软件设计，放到那个场景你在思考什么、纠结什么，将这种感觉给表达出来，可能就对了。\n\n当然了，每个人对于软件设计的理解是不同的，这并没有标准答案。无论如何，我期待你在未来能更多地关注这个问题，我相信当有一天你看清楚了，有自己的见解了，那能力也一定得到了很大的增加。\n\n我们一起加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1713436438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390468,"user_name":"java小霸王","can_delete":false,"product_type":"c1","uid":1168540,"ip_address":"广东","ucode":"7094BCD9F25E1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/d4/9c/030e80d3.jpg","comment_is_top":false,"comment_ctime":1715401925,"is_pvip":false,"replies":[{"id":142044,"content":"你好，\n\n虽说你的表达很简单，但还是很好地抓住了重点。如果让我帮助完善的话，你的“识别出元素”我理解为是概念的塑造。","user_name":"作者回复","user_name_real":"编辑","uid":1267721,"ctime":1715494609,"ip_address":"美国","comment_id":390468,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100755801,"comment_content":"软件设计：识别出元素，以及元素之间的关系","like_count":0,"discussions":[{"author":{"id":1267721,"avatar":"https://static001.geekbang.org/account/avatar/00/13/58/09/e4f65502.jpg","nickname":"至简李云","note":"","ucode":"8AFB5805B72ED0","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644760,"discussion_content":"你好，\n\n虽说你的表达很简单，但还是很好地抓住了重点。如果让我帮助完善的话，你的“识别出元素”我理解为是概念的塑造。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715494610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"美国","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]}]}