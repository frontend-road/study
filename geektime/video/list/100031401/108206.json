{"id":108206,"title":"19 | 如何实现基于Feign的强类型接口？","content":"<ul>\n<li>\n<p>代码：<a href=\"https://gitee.com/geektime-geekbang/staffjoy\">https://gitee.com/geektime-geekbang/staffjoy</a></p>\n</li>\n<li>\n<p>课件：<a href=\"https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ\">https://pan.baidu.com/s/1Q7eP3yZ1Vm8J2nhle5RzTQ</a> 提取码: 1aeh</p>\n</li>\n</ul>","comments":[{"had_liked":false,"id":125137,"user_name":"JerryMen","can_delete":false,"product_type":"c3","uid":1508783,"ip_address":"","ucode":"4C8EB4A26E6441","user_header":"https://static001.geekbang.org/account/avatar/00/17/05/af/57a300fb.jpg","comment_is_top":false,"comment_ctime":1566097568,"is_pvip":false,"replies":[{"id":45978,"content":"嗯，原来我认为如果Response用组合方式，由于Java范型的类型擦除问题，Feign会有反序列化问题，后来有学员提出新版的Feign可以正常反序列化组合方式的Response。\n\n后续会开发一个新项目，接口采用组合方式，作为本课程补充，会把项目地址贴在本课程下方评论区。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1566134696,"ip_address":"","comment_id":125137,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师，组合大于继承，baseResponse 定义成Response泛型对象不是更好么？里面塞一个&lt;T&gt; data属性，这样不用定义那么多Response了","like_count":17,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463450,"discussion_content":"嗯，原来我认为如果Response用组合方式，由于Java范型的类型擦除问题，Feign会有反序列化问题，后来有学员提出新版的Feign可以正常反序列化组合方式的Response。\n\n后续会开发一个新项目，接口采用组合方式，作为本课程补充，会把项目地址贴在本课程下方评论区。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566134696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2007101,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a0/3d/b6379573.jpg","nickname":"Zicheng","note":"","ucode":"3B27E44A98FF99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370843,"discussion_content":"请问老师 补充项目的地址在哪里啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619551267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115328,"user_name":"大老李","can_delete":false,"product_type":"c3","uid":1001670,"ip_address":"","ucode":"AE7487EB3A3302","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/c6/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1563534347,"is_pvip":false,"replies":[{"id":42221,"content":"你好，如果说绝对性能，可能feign的确没有dubbo高，但是这个只有在通讯层是瓶颈时才有意义，大部分web应用的瓶颈大都在数据访问层，而不在通讯层。国外Netflix最高峰要承载全美1&#47;3的流量，但是它的微服务通讯层是采用feign的，也没有性能问题一说。另外feign可以灵活装配，使用也简单，社区活跃支持好，这些都是它的亮点，dubbo使用门槛要高一点。当然，这两者没有绝对好坏，都用大规模成功应用场景，没有谁更好一说。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563619140,"ip_address":"","comment_id":115328,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"你好，一般来说，spring feign不是一直被诟病性能差么？用dubbo会不会更好一些","like_count":12,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459056,"discussion_content":"你好，如果说绝对性能，可能feign的确没有dubbo高，但是这个只有在通讯层是瓶颈时才有意义，大部分web应用的瓶颈大都在数据访问层，而不在通讯层。国外Netflix最高峰要承载全美1/3的流量，但是它的微服务通讯层是采用feign的，也没有性能问题一说。另外feign可以灵活装配，使用也简单，社区活跃支持好，这些都是它的亮点，dubbo使用门槛要高一点。当然，这两者没有绝对好坏，都用大规模成功应用场景，没有谁更好一说。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563619140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061306,"avatar":"https://static001.geekbang.org/account/avatar/00/10/31/ba/35b3b16c.jpg","nickname":"Marsman","note":"","ucode":"A108E7A0A59FAC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5418,"discussion_content":"不知道这样理解对不对，奈飞的流量虽大，但大部分是视频数据流，信令（API）流跟他的视频流比起来可能只占小部分；对比中小公司足够了，但对比Google，Facebook和BAT，API的量级应该还是差不少，所以他们在RPC调用的时候更愿意用二进制协议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566259140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115290,"user_name":"永旭","can_delete":false,"product_type":"c3","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1563525099,"is_pvip":false,"replies":[{"id":42222,"content":"你好，用Instant比较简单，它是一个确定的UTC时间点(自1970零点过去的时间，精确到纳秒）。这个时间可以统一用于业务计算，存储和数据交换。具体展示的时候，可以转换成有时区的和带格式的时间。(An Instant is a moment on the timeline in UTC, a count of nanoseconds since the epoch of the first moment of 1970 UTC. Since most of your business logic, data storage, and data exchange should be in UTC, this is a handy class to be used often.)\n\nstackflow上有个贴，讲java时间类的差异和用法，配图，可以参考：\nhttps:&#47;&#47;stackoverflow.com&#47;questions&#47;32437550&#47;whats-the-difference-between-instant-and-localdatetime\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563620696,"ip_address":"","comment_id":115290,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"老师, 你好.\n实际项目中DTO中包含日期格式字段,导致传输格式不对, 或 时区问题. 在这次项目中用了 Instant 类型的日期, 之前没用过. 此项目是怎么规避这些问题呢 ?","like_count":5,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459043,"discussion_content":"你好，用Instant比较简单，它是一个确定的UTC时间点(自1970零点过去的时间，精确到纳秒）。这个时间可以统一用于业务计算，存储和数据交换。具体展示的时候，可以转换成有时区的和带格式的时间。(An Instant is a moment on the timeline in UTC, a count of nanoseconds since the epoch of the first moment of 1970 UTC. Since most of your business logic, data storage, and data exchange should be in UTC, this is a handy class to be used often.)\n\nstackflow上有个贴，讲java时间类的差异和用法，配图，可以参考：\nhttps://stackoverflow.com/questions/32437550/whats-the-difference-between-instant-and-localdatetime\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563620696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137694,"user_name":"Geek_548191","can_delete":false,"product_type":"c3","uid":1588971,"ip_address":"","ucode":"A3819F21FCC4FA","user_header":"https://static001.geekbang.org/account/avatar/00/18/3e/eb/40278b94.jpg","comment_is_top":false,"comment_ctime":1569824847,"is_pvip":false,"replies":[{"id":52950,"content":"谢谢支持！加油！","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1569848539,"ip_address":"","comment_id":137694,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"先看了20讲再过来的，波波老师讲课循序渐进，条理清晰，干货很多，感谢！准备先学完这个课程，有需要再去学160讲。感谢！","like_count":4,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469215,"discussion_content":"谢谢支持！加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569848539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":243087,"user_name":"半","can_delete":false,"product_type":"c3","uid":2132571,"ip_address":"","ucode":"722F79561AD14F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1R7lHGBvwPTVfb3BAQrPXynPGSG6S20lAfBmTxicV328DkXknmnibiaDicCM5icZwMEic0Yn8Ylwe86jjj34gG6licpcg/132","comment_is_top":false,"comment_ctime":1597945043,"is_pvip":false,"replies":[{"id":89706,"content":"嗯，可以考虑进一步包装简化，通过引入超类或者AOP等方式。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1598106720,"ip_address":"","comment_id":243087,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"代码里面每次rpc调用就有一个try catch，代码风格是不是略有欠佳？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504175,"discussion_content":"嗯，可以考虑进一步包装简化，通过引入超类或者AOP等方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598106720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141818,"user_name":"庄建斌","can_delete":false,"product_type":"c3","uid":1658940,"ip_address":"","ucode":"123711F25EE828","user_header":"https://static001.geekbang.org/account/avatar/00/19/50/3c/46bb2fe4.jpg","comment_is_top":false,"comment_ctime":1571230901,"is_pvip":false,"replies":[{"id":54869,"content":"你好，你启用SpringSecurity以后，一些REST API端点的访问会提示未授权，也就是401错误。建议不要用SpringSecurity，如果确实要用，建议在SpringSecurity的安全配置中，将相关REST API排除(permitAll，不要认证即可访问)，关于如何配置可以看SpringSecurity文档。\n\n注意，SpringSecurity是单块应用时代的产物，严格讲SpringSecurity安全框架并不适合微服务场景，我们的Staffjoy是微服务应用，有自己的安全处理机制和框架，一般不建议不要混用，除非你非常清除各自的工作原理。\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1571317129,"ip_address":"","comment_id":141818,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"请问老师。我根据您的项目源码，在采用feign进行服务间调用的时候，如果没有SpringSecurity对Resource进行保护的时候，能够正常使用feignClient进行访问。但一但开启SpringSecurityOauth2.0对Resource进行保护之后，FeignClient进行服务调用，总是会报FeignException，为401。我在网上找解决办法，一直没有找到，请问您有什么好的解决办法么？一方面对资源进行保护，还能实现服务间的通信？","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470896,"discussion_content":"你好，你启用SpringSecurity以后，一些REST API端点的访问会提示未授权，也就是401错误。建议不要用SpringSecurity，如果确实要用，建议在SpringSecurity的安全配置中，将相关REST API排除(permitAll，不要认证即可访问)，关于如何配置可以看SpringSecurity文档。\n\n注意，SpringSecurity是单块应用时代的产物，严格讲SpringSecurity安全框架并不适合微服务场景，我们的Staffjoy是微服务应用，有自己的安全处理机制和框架，一般不建议不要混用，除非你非常清除各自的工作原理。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571317129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115500,"user_name":"WL","can_delete":false,"product_type":"c3","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1563606860,"is_pvip":false,"replies":[{"id":42217,"content":"1. 通过契约生成客户端的做法有很多，可以生成接口+DTO，然后采用动态代理拼装出客户端，我记得以前的jax-ws就是这样生成的；也可以直接生成客户端实现代码+DTO方式，swagger生成的客户端很多采用这种方式。具体可以尝试下grpc的代码生成(https:&#47;&#47;grpc.io&#47;)，或者swagger代码生成(https:&#47;&#47;editor.swagger.io&#47;)，看看它们生成的客户端&#47;服务端长啥样。\n2. Dubbo是强类型RPC风格框架，但是它没有契约支持，也没有代码生成，它通过代码库分享实现强类型客户端+服务器端，而且它仅限于Java语言。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563618261,"ip_address":"","comment_id":115500,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"请问一下老师两个问题\n1. 强类型的RPC接口是怎么通过契约自动生成服务器端和客户端的, 是采用创建动态代理对象的方式吗?\n2. Dubbo是不是就属于强类型的RPC端口.","like_count":2,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459132,"discussion_content":"1. 通过契约生成客户端的做法有很多，可以生成接口+DTO，然后采用动态代理拼装出客户端，我记得以前的jax-ws就是这样生成的；也可以直接生成客户端实现代码+DTO方式，swagger生成的客户端很多采用这种方式。具体可以尝试下grpc的代码生成(https://grpc.io/)，或者swagger代码生成(https://editor.swagger.io/)，看看它们生成的客户端/服务端长啥样。\n2. Dubbo是强类型RPC风格框架，但是它没有契约支持，也没有代码生成，它通过代码库分享实现强类型客户端+服务器端，而且它仅限于Java语言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563618261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":275492,"user_name":"Thomas Yang","can_delete":false,"product_type":"c3","uid":1612933,"ip_address":"","ucode":"29249144F708D7","user_header":"","comment_is_top":false,"comment_ctime":1611561259,"is_pvip":false,"replies":[{"id":100287,"content":"我在项目中采用的是payload中稍带错误码的方式，你说的不通过payload稍带，也可以通过http response code等来表达错误信息(然后客户端捕获异常)。\n\n两种实现方式都可以，各有利弊。\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1611849260,"ip_address":"","comment_id":275492,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师请教一下，基于全部是java的微服务架构下内部服务间通信不能过定义保含ResultCode的Response对象来通信而是完全按java的源生数据结构如List&lt;Account&gt;通信，然后通过异常去处理调用方通过Feign捕获自定义异常的ResultCode信息来判断错误类型，这样是不是更简洁一些呢？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514373,"discussion_content":"我在项目中采用的是payload中稍带错误码的方式，你说的不通过payload稍带，也可以通过http response code等来表达错误信息(然后客户端捕获异常)。\n\n两种实现方式都可以，各有利弊。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611849260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257955,"user_name":"龙彦极客","can_delete":false,"product_type":"c3","uid":2272998,"ip_address":"","ucode":"20D380C00D8B05","user_header":"https://static001.geekbang.org/account/avatar/00/22/ae/e6/0c41e48d.jpg","comment_is_top":false,"comment_ctime":1604222434,"is_pvip":false,"replies":[{"id":93911,"content":"feign可以不用ribbon负载的，参考这里：\nhttps:&#47;&#47;stackoverflow.com&#47;questions&#47;27620338&#47;spring-cloud-how-to-use-feign-without-ribbon\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1604244484,"ip_address":"","comment_id":257955,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"波波老师好，\n用openfeign原理上是在springcloud体系中底层ribbon来做的负载均衡，是需要Eureka注册中心配合使用；\n但既然要用k8s来部署微应用，是打算拿掉Eureka，直接使用k8s的svc。\n还能够使用feign能使用k8s的svc吗？\n是不是我feign这块理解有所欠缺，\n这个问题也一直困扰我，拿掉feign，直接写restTeamplte又比较累。","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508507,"discussion_content":"feign可以不用ribbon负载的，参考这里：\nhttps://stackoverflow.com/questions/27620338/spring-cloud-how-to-use-feign-without-ribbon\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604244484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2272998,"avatar":"https://static001.geekbang.org/account/avatar/00/22/ae/e6/0c41e48d.jpg","nickname":"龙彦极客","note":"","ucode":"20D380C00D8B05","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320152,"discussion_content":"非常感谢波波老师，思维局限了哈哈！一直盯着一处","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604276635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151931,"user_name":"wind","can_delete":false,"product_type":"c3","uid":1507189,"ip_address":"","ucode":"5EC77AEB18130E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ff/75/9c1b2ece.jpg","comment_is_top":false,"comment_ctime":1573816684,"is_pvip":false,"replies":[{"id":58426,"content":"谢谢支持！加油！","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1573826160,"ip_address":"","comment_id":151931,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100031401,"comment_content":"不禁点个赞。干货满满","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474660,"discussion_content":"谢谢支持！加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573826160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126117,"user_name":"james","can_delete":false,"product_type":"c3","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1566315556,"is_pvip":false,"replies":[{"id":46758,"content":"你很细心，接口调用确实有冗余代码，可以进一步封装。一种方法是通过feign截获机制，预先把http异常和response失败场景统一封装处理掉，这样业务代码直接取值即可。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1566388511,"ip_address":"","comment_id":126117,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师, 调用 fiegn 的一个方法需要先判断有无http错误, 然后判断是否出异常, 然后才是正常业务逻辑, 这部分应该是可以封装一下, 改为一行代码的吧","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463838,"discussion_content":"你很细心，接口调用确实有冗余代码，可以进一步封装。一种方法是通过feign截获机制，预先把http异常和response失败场景统一封装处理掉，这样业务代码直接取值即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566388511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114824,"user_name":"John","can_delete":false,"product_type":"c3","uid":1020861,"ip_address":"","ucode":"E4ADF8488953FB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/bd/f3977ebb.jpg","comment_is_top":false,"comment_ctime":1563412729,"is_pvip":false,"replies":[{"id":41971,"content":"你好，本课程主要关于微服务开发和云原生架构(也包括SpringBoot框架和K8s容器云的应用)。这里提到的代码生成，主要是基于服务契约IDL或者Swagger生成服务接口，这种做法开发服务比较规范，也可以提升研发效率。你讲的代码生成更偏应用脚手架的生成，这个属于另外一个应用开发领域，用好这些应用开发脚手架生成器，的确可以提升开发效率，业界也非常流行。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563455518,"ip_address":"","comment_id":114824,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"看到feigh想到了代碼生成器swagger的code generator 波波能不能以後講一講常用的code generator比如yeoman mustache handlerbars jhipster等等 因為我們很大部分前端和後端的code的pattern都是一致的 所以善用code generator可以節省很多開發時間 大家同意麼","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458829,"discussion_content":"你好，本课程主要关于微服务开发和云原生架构(也包括SpringBoot框架和K8s容器云的应用)。这里提到的代码生成，主要是基于服务契约IDL或者Swagger生成服务接口，这种做法开发服务比较规范，也可以提升研发效率。你讲的代码生成更偏应用脚手架的生成，这个属于另外一个应用开发领域，用好这些应用开发脚手架生成器，的确可以提升开发效率，业界也非常流行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563455518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114687,"user_name":"而立斋","can_delete":false,"product_type":"c3","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1563364368,"is_pvip":false,"replies":[{"id":41852,"content":"dto一般就是控制器层输入输出用，你指哪里需要复用的场景？","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563367198,"ip_address":"","comment_id":114687,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"dto会被复用的话，再往上提一层？","like_count":1,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458777,"discussion_content":"dto一般就是控制器层输入输出用，你指哪里需要复用的场景？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563367198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244825,"user_name":"💢 星星💢","can_delete":false,"product_type":"c3","uid":1254392,"ip_address":"","ucode":"A402B765222C35","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/f8/24fcccea.jpg","comment_is_top":false,"comment_ctime":1598691984,"is_pvip":false,"replies":[{"id":90183,"content":"FeignClient的动态代理，是Spring会在运行期动态注入的。具体你要看Spring处理@FeignClient注解的相关源代码。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1598880555,"ip_address":"","comment_id":244825,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师问个基础的问题。代码有点看不懂，FeignClient代理的实现类在哪里哇，还有实现的原理是什么？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504710,"discussion_content":"FeignClient的动态代理，是Spring会在运行期动态注入的。具体你要看Spring处理@FeignClient注解的相关源代码。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598880555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227448,"user_name":"Geek_da9deb","can_delete":false,"product_type":"c3","uid":1317517,"ip_address":"","ucode":"724968A3A34334","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOVESb7PSBa7SHZX3PEvrt0iaSDnUaSCMqfdIl3icT4o1SJbSDh8S3hqmJKrx0V3pgDWPcp1icxeXog/132","comment_is_top":false,"comment_ctime":1592381740,"is_pvip":false,"replies":[{"id":83975,"content":"课程项目采用的方式是强类型接口，第三个字段必须有明确的类型。\n\n为了实现你的需求，建议考虑一些弱类型的协议和框架，例如jsonrpc\nhttps:&#47;&#47;www.jsonrpc.org&#47;\n","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1592498338,"ip_address":"","comment_id":227448,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"老师，您好！我想请教下：\n假如:一个SPA应用，调用了&#47;v1&#47;account&#47;create,那么这个接口返回的数据格式是:{code:,message:,account:{}}。现在很多项目返回给客户端的数据格式都是统一的，例如：{code:,message:,data:}，data的内容根据接口不同而不同。这个项目中的每个接口返回的数据格式，除了code、message统一，第三个字段都不一样。假如我要为一个SPA应用提供接口，返回固定格式的数据，应该怎么做呀？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498643,"discussion_content":"课程项目采用的方式是强类型接口，第三个字段必须有明确的类型。\n\n为了实现你的需求，建议考虑一些弱类型的协议和框架，例如jsonrpc\nhttps://www.jsonrpc.org/\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592498338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178591,"user_name":"Geek_1380b5","can_delete":false,"product_type":"c3","uid":1816251,"ip_address":"","ucode":"7FBB913427682C","user_header":"","comment_is_top":false,"comment_ctime":1581752960,"is_pvip":false,"replies":[{"id":69346,"content":"早期Spring中的Feign版本有这个问题，不能正常反序列化Response中的范型对象，因为java的范型擦除。新版Spring Feign已经解决这个问题，可以反射出java字节码中保留的范型的具体类型信息，所以可以正常反序列化。有兴趣可以用早期和新版的Spring Feign做一个简单的实验验证这个问题。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1581784499,"ip_address":"","comment_id":178591,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"用了泛型后反序列化能出现啥问题能演示一下吗？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483889,"discussion_content":"早期Spring中的Feign版本有这个问题，不能正常反序列化Response中的范型对象，因为java的范型擦除。新版Spring Feign已经解决这个问题，可以反射出java字节码中保留的范型的具体类型信息，所以可以正常反序列化。有兴趣可以用早期和新版的Spring Feign做一个简单的实验验证这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581784499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175406,"user_name":"吾有良策，要起风了","can_delete":false,"product_type":"c3","uid":1111223,"ip_address":"","ucode":"396A2261E8600B","user_header":"https://static001.geekbang.org/account/avatar/00/10/f4/b7/2459fc8d.jpg","comment_is_top":false,"comment_ctime":1580710989,"is_pvip":false,"replies":[{"id":68193,"content":"你的具体问题是？","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1580732694,"ip_address":"","comment_id":175406,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"读资料，不如分享资料链接。","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482719,"discussion_content":"你的具体问题是？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580732694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175017,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c3","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1580527734,"is_pvip":false,"replies":[{"id":68187,"content":"都可以，只是设计风格(design style)而已，实际使用中保持一致性即可。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1580730743,"ip_address":"","comment_id":175017,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"的确，陈皓老师建议使用httpcode","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482595,"discussion_content":"都可以，只是设计风格(design style)而已，实际使用中保持一致性即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580730743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141822,"user_name":"庄建斌","can_delete":false,"product_type":"c3","uid":1658940,"ip_address":"","ucode":"123711F25EE828","user_header":"https://static001.geekbang.org/account/avatar/00/19/50/3c/46bb2fe4.jpg","comment_is_top":false,"comment_ctime":1571231322,"is_pvip":false,"replies":[{"id":54870,"content":"这个和网关关系不大，是启用SpringSecurity后端点需要认证造成。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1571317323,"ip_address":"","comment_id":141822,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"忘记说，用的网关是用的SpringCloudZuul","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470899,"discussion_content":"这个和网关关系不大，是启用SpringSecurity后端点需要认证造成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571317323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126122,"user_name":"james","can_delete":false,"product_type":"c3","uid":1049208,"ip_address":"","ucode":"5701899403917C","user_header":"https://static001.geekbang.org/account/avatar/00/10/02/78/23c56bce.jpg","comment_is_top":false,"comment_ctime":1566316528,"is_pvip":false,"replies":[{"id":46760,"content":"嗯，这是一种优化，controller和client都实现一个接口，代码层强接口契约方式。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1566388833,"ip_address":"","comment_id":126122,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100031401,"comment_content":"为什么 xx-svc 中的 controller 不继承 xx-api 中的 client 接口呢? 这样就做到一致性了啊\n","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463839,"discussion_content":"嗯，这是一种优化，controller和client都实现一个接口，代码层强接口契约方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566388833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115958,"avatar":"https://static001.geekbang.org/account/avatar/00/11/07/36/d677e741.jpg","nickname":"黑山老妖","note":"","ucode":"A1659F99C5BE1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":58319,"discussion_content":" xx-svc 中的 controller 继承 xx-api 中的 client 接口呢，是否更好，还是没有必要。感觉都有优缺点。但是spring还是会找到接口的实现类，一个接口可能在不同的controller中。哪种更好？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574667966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116678,"user_name":"zero","can_delete":false,"product_type":"c3","uid":1299615,"ip_address":"","ucode":"528DD5C8399AEC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKlwpFM3tkeG15YqyJTYWkfqkdmro9POq6SicYm57TaEFDOUZCXjoe0Z0Iz6UibGQqic3icJRsHdFzibtw/132","comment_is_top":false,"comment_ctime":1563889116,"is_pvip":true,"replies":[{"id":42815,"content":"Staffjoy项目的Controller层很少有try catch，Service层应该还是有不少try catch然后再往外抛的情况。这个和全局异常处理不矛盾，可以在Service等下层对异常进行预处理(因为异常处理的一个原则是就近处理)，然后再往上层抛，最终由统一异常捕获和处理。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563972106,"ip_address":"","comment_id":116678,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100031401,"comment_content":"老师，请教个问题。\n前面的章节中有讲到全局异常处理，而本节在controller中还是出现了try catch语句。这块为啥不用全局异常处理呢？","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459634,"discussion_content":"Staffjoy项目的Controller层很少有try catch，Service层应该还是有不少try catch然后再往外抛的情况。这个和全局异常处理不矛盾，可以在Service等下层对异常进行预处理(因为异常处理的一个原则是就近处理)，然后再往上层抛，最终由统一异常捕获和处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563972106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115350,"user_name":"箭飞天","can_delete":false,"product_type":"c3","uid":1108080,"ip_address":"","ucode":"B3735758CBC533","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/70/95f17940.jpg","comment_is_top":false,"comment_ctime":1563538909,"is_pvip":false,"replies":[{"id":42219,"content":"你好，经过和学员交流，强类型接口也可以基于BaseResponse&lt;T&gt;方式实现，这样确实可以减少派生Response数量，后面我会开发一个新项目，采用这种方式实现，供大家参考。当然，目前的做法也是OK的，虽然派生的Response多一些，但是只要规范，也挺好，而且比较整齐直观。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563618678,"ip_address":"","comment_id":115350,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100031401,"comment_content":"老师 你好\n接口返回数据为什么不考虑泛型？BaseResponse&lt;T&gt;, 这样各种派生的Response就不存在了","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459067,"discussion_content":"你好，经过和学员交流，强类型接口也可以基于BaseResponse&amp;lt;T&amp;gt;方式实现，这样确实可以减少派生Response数量，后面我会开发一个新项目，采用这种方式实现，供大家参考。当然，目前的做法也是OK的，虽然派生的Response多一些，但是只要规范，也挺好，而且比较整齐直观。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563618678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115348,"user_name":"箭飞天","can_delete":false,"product_type":"c3","uid":1108080,"ip_address":"","ucode":"B3735758CBC533","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/70/95f17940.jpg","comment_is_top":false,"comment_ctime":1563538770,"is_pvip":false,"replies":[{"id":42220,"content":"你好，经过和学员交流，强类型接口也可以基于BaseResponse&lt;T&gt;方式实现，这样确实可以减少派生Response数量，后面我会开发一个新项目，采用这种方式实现，供大家参考。当然，目前的做法也是OK的，虽然派生的Response多一些，但是只要规范，也挺好，而且比较整齐直观。","user_name":"作者回复","user_name_real":"杨波","uid":1030344,"ctime":1563618706,"ip_address":"","comment_id":115348,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100031401,"comment_content":"老师 你好\n接口返回数据为什么不考虑泛型？BaseResponse&lt;T&gt;, 这样各种派生的Response就不存在了","like_count":0,"discussions":[{"author":{"id":1030344,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b8/c8/c94d38a7.jpg","nickname":"杨波","note":"","ucode":"FA3418BB703BCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459065,"discussion_content":"你好，经过和学员交流，强类型接口也可以基于BaseResponse&amp;lt;T&amp;gt;方式实现，这样确实可以减少派生Response数量，后面我会开发一个新项目，采用这种方式实现，供大家参考。当然，目前的做法也是OK的，虽然派生的Response多一些，但是只要规范，也挺好，而且比较整齐直观。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563618706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188332,"user_name":"钱","can_delete":false,"product_type":"c3","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1584341639,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100031401,"comment_content":"Spring Feign 强弱类型都可以","like_count":1},{"had_liked":false,"id":308432,"user_name":"tank","can_delete":false,"product_type":"c3","uid":2153670,"ip_address":"","ucode":"3E93D49318215A","user_header":"https://static001.geekbang.org/account/avatar/00/20/dc/c6/241e81ec.jpg","comment_is_top":false,"comment_ctime":1629618788,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100031401,"comment_content":"波波老师， resetTemplate + k8s service 去掉对feign的依赖是否更好，restTemplate可以 做一下封装就好了直接获取返回的数据是不是更合适，如无必要，无序依赖，那些个什么安全token是否istio直接来处理就好了","like_count":0}]}