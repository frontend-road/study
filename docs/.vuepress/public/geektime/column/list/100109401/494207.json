{"id":494207,"title":"01｜TDD演示（1）：任务分解法与整体工作流程","content":"<p>你好，我是徐昊。今天我们来聊聊测试驱动开发（Test-Driven Development，TDD）。</p><p>测试驱动开发，顾名思义，就是将软件需求转化为一组自动化测试，然后再根据测试描绘的场景，逐步实现软件功能的开发方法。</p><p>在正式开始学习TDD之前，我想通过四节课的时间，来演示如何通过TDD的方式完成一段完整的功能，让你对TDD的做法有个感性的认识。毕竟，我想很多人对TDD心存质疑，最主要还是因为不光没吃过猪肉，其实也没见过猪跑吧。</p><h2>TDD的基本原则</h2><p>为了让我的演示更有针对性，有些基本原则你需要先了解一下。TDD的创始人Kent Beck，在他的传世大作 <em><em>Test-Driven Development by Example</em></em> 的开篇中给出了TDD的基本原则：</p><ol>\n<li>当且仅当存在失败的自动化测试时，才开始编写生产代码；</li>\n<li>消除重复。</li>\n</ol><p>不过在今时今日，我认为第二条应该改为“消除坏味道（Bad Smell）”。毕竟重复仅仅是一种坏味道，还有很多不是重复的坏味道。</p><p>那么根据TDD的基本原则，Kent Beck将开发工作分成了三步，也就是后世广为流传的测试驱动开发咒语——红/绿/重构（Red/Green/Refactoring）：</p><ol>\n<li>红：编写一个失败的小测试，甚至可以是无法编译的测试；</li>\n<li>绿：让这个测试快速通过，甚至不惜犯下任何罪恶；</li>\n<li>重构：消除上一步中产生的所有重复（坏味道）。</li>\n</ol><!-- [[[read_end]]] --><p>然而红/绿/重构循环仅仅关注单个测试这个层面，它没有回答测试从何而来。于是很多尝试采用TDD的人都卡在了第零步：我该写哪些测试？于是在2006年前后我总结了<strong>任务分解法</strong>，将任务列表作为TDD的核心要素。</p><p>任务分解法的步骤如下：</p><ol>\n<li>大致构思软件被使用的方式，把握对外接口的方向；</li>\n<li>大致构思功能的实现方式，划分所需的组件（Component）以及组件间的关系（所谓的架构）。当然，如果没思路，也可以不划分；</li>\n<li>根据需求的功能描述拆分功能点，功能点要考虑正确路径（Happy Path）和边界条件（Sad Path）；</li>\n<li>依照组件以及组件间的关系，将功能拆分到对应组件；</li>\n<li>针对拆分的结果编写测试，进入红/绿/重构循环。</li>\n</ol><p>那么TDD的整体工作流程如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/1f/bf/1f67315c9b8db5649d4216a5c9f3b4bf.jpg?wh=7802x4308\" alt=\"\"></p><p>请花几分钟仔细记忆这个流程，它将会在后续所有示例题目中反复出现。</p><h2>命令行参数解析</h2><p>接下来，我会通过TDD来实现命令行参数解析的功能。这个练习源自Robert C. Martin的*<em>Clean Code</em>*第十四章的一个例子。需求描述如下：</p><blockquote>\n<p>我们中的大多数人都不得不时不时地解析一下命令行参数。如果我们没有一个方便的工具，那么我们就简单地处理一下传入main函数的字符串数组。有很多开源工具可以完成这个任务，但它们可能并不能完全满足我们的要求。所以我们再写一个吧。<br>\n<strong>　</strong><br>\n传递给程序的参数由标志和值组成。标志应该是一个字符，前面有一个减号。每个标志都应该有零个或多个与之相关的值。例如：<br>\n<strong>　</strong><br>\n-l -p 8080 -d /usr/logs<br>\n<strong>　</strong><br>\n“l”（日志）没有相关的值，它是一个布尔标志，如果存在则为true，不存在则为false。“p”（端口）有一个整数值，“d”（目录）有一个字符串值。标志后面如果存在多个值，则该标志表示一个列表：<br>\n<strong>　</strong><br>\n-g this is a list -d 1 2 -3 5<br>\n<strong>　</strong><br>\n\"g\"表示一个字符串列表[“this”, “is”, “a”, “list”]，“d\"标志表示一个整数列表[1, 2, -3, 5]。<br>\n<strong>　</strong><br>\n如果参数中没有指定某个标志，那么解析器应该指定一个默认值。例如，false代表布尔值，0代表数字，”\"代表字符串，[]代表列表。如果给出的参数与模式不匹配，重要的是给出一个好的错误信息，准确地解释什么是错误的。<br>\n<strong>　</strong><br>\n确保你的代码是可扩展的，即如何增加新的数值类型是直接和明显的。</p>\n</blockquote><p>那么接下来，就让我们结合任务分解法使用TDD来完成这个需求。</p><h3>API构思与组件划分</h3><p>首先我们需要考虑，别人将以何种方式使用这段代码，也就是这段代码的整体对外接口部分。我们可以通过写测试的方式，来感受API的友好程度。</p><p><video poster=\"https://static001.geekbang.org/resource/image/ab/5b/ab606f3c046150a90b26678bb598ee5b.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/46c08d6d-17f90caf5dc-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/4e6602d54447415d9537063fcbac8306/38b3c51cea5642c5bb21150b04b50bba-90f924fb712fb3e3f32b0c4f4e178c2b-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>在确定了API的形式之后，我们需要大致构思如何实现这个功能：</p><p><video poster=\"https://static001.geekbang.org/resource/image/ab/5b/ab606f3c046150a90b26678bb598ee5b.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/e7e4234-17f90caf383-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/867664ac3f7c485995f3d2b45d15145f/0a117251c9384e1181137a3fc9f4efe2-558919006462f63d2792f5ea02b213f3-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><h3>功能分解与任务列表</h3><p>在API与实现方式有了方向之后，我们就可以根据需求的描述对功能进行分解了。这里可以先不求全面，有个大致的范围即可：</p><p><video poster=\"https://static001.geekbang.org/resource/image/ab/5b/ab606f3c046150a90b26678bb598ee5b.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/1a0dc09f-17f90d7c38a-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/c424859d5fa548b7885373a32c1f17f9/f79e815ee8da4a689be6ba16bfac8113-1390b2f68abb0228bb763a3bd1c5c323-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><h3>红/绿循环</h3><p>那么先让我们选择最简单的任务，并通过红绿循环实现它。注意其中绿的环节中，我们是如何“不惜犯下任何罪恶”的！</p><p><video poster=\"https://static001.geekbang.org/resource/image/ab/5b/ab606f3c046150a90b26678bb598ee5b.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/561df3f4-17f90fd3cdf-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/191d1d5a5ebe41a7b9b9e72f357d2204/c56851bd58994f5f816b962e7cd8a4a8-b90d60c69a69bf4beee1fa1b531aee39-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>之后的两个任务，也要以同样的方式进行：</p><p><video poster=\"https://static001.geekbang.org/resource/image/ab/5b/ab606f3c046150a90b26678bb598ee5b.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/60d63a77-17f91011cc7-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/dcec4527c0314f33bcced1f6a6b5c60a/d707e7e6a6294a188bcd7a2aaf933f59-b24373efb9ba9efd0b08c7e293376391-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>到此为止，我们已经完成题目中要求的第一个功能点了：</p><p><video poster=\"https://static001.geekbang.org/resource/image/ab/5b/ab606f3c046150a90b26678bb598ee5b.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/28952f4d-17f910f9265-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/aab94c700a0644178ad54045f967be83/e9cc3bc49128479089e75a37b21b2b0c-ca32f84d435f6f6855930945c05d94c9-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><h2>小结</h2><p>至此为止，我们实现了第一个主要功能：支持由三个不同类型组合而成的命令行参数的解析。</p><p>可以看到，我们在进入TDD的红/绿/重构循环之前做了许多准备工作。我们先花费2～3分钟设计了API，2～3分钟构思了实现策略，然后在任务分解上花费了更多的时间，差不多有5分钟。到目前为止，编码的时间大约是15分钟。</p><p>这并不像很多原教旨主义TDD实践者所推崇的那样，完全依赖重构而不去做设计。然而以我二十年来实践TDD的经验来看，<strong>理解需求，并通过测试构成高效的节奏，是有效实施TDD的前提。特别是在有其他团队成员的情况下（结对或项目组），更需要如此</strong>。希望你能从今天起，更加注重“TDD的准备工作”。</p><p>下节课，我们将在这段代码的基础上开始重构，然后再逐步完成后续的开发。</p><h2>思考题</h2><p>如果在思考实现策略的时候，我们选择了其他的实现方式，那么任务分解会有什么不同？</p><p>如果你在学习过程中还有什么问题或想法，欢迎加入<a href=\"https://jinshuju.net/f/zvOavT\">读者交流群</a>。最后，也欢迎把你学习这节课的代码与体会分享在留言区，我们下节课再见！</p>","neighbors":{"left":{"article_title":"课前必读｜20年前的“老古董”技术，为什么还值得开个课？","id":495506},"right":{"article_title":"02｜TDD演示（2）：识别坏味道与代码重构","id":494212}},"comments":[{"had_liked":false,"id":338661,"user_name":"Gojustforfun","can_delete":false,"product_type":"c1","uid":1187021,"ip_address":"","ucode":"7513A40F27344F","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","comment_is_top":true,"comment_ctime":1647651072,"is_pvip":true,"replies":[{"id":"123831","content":"good job","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647768734,"ip_address":"","comment_id":338661,"utype":1}],"discussion_count":2,"race_medal":0,"score":"9.2233721115168993e+18","product_id":100109401,"comment_content":"Go语言实现:<br>https:&#47;&#47;github.com&#47;longyue0521&#47;TDD-In-Go&#47;tree&#47;args<br>提交历史记录:<br>https:&#47;&#47;github.com&#47;longyue0521&#47;TDD-In-Go&#47;commits&#47;args<br>(用vscode对比提交记录看更方便)<br>1. TDD其实是三项已有技术的重组 —— 先大概设计,再落地测试,再重构出最终代码<br>1) 设计能力:软件设计原则&#47;思想&#47;模式<br>2) 测试能力:测试技术&#47;方法&#47;工具<br>3) 重构能力:代码坏味道,重构方法&#47;工具<br><br>2. 需求拆分一般有两种方式<br>1) 任务列表 —— 从无到有实现各个功能点,从内到外,比如实现Option和ListOption等<br>2) 测试列表 —— 通过所有测试即表示实现功能,Outside-in,从外部API一点一点向内推<br>希望老师多提供案例,带领大家多多练习以提升需求拆分这项能力——解决测试从哪来的问题<br><br>3. 为什么一定要先看到红灯?<br>1) 测试的正确性如何保证?你不可能再为测试写测试,你需要看到测试以你预期的方式失败!<br>2) 如果你没看到红灯,要么测试有问题,要么代码已提前实现(推荐把代码改错,强制看到红灯)<br>3) 红灯表示“缺少功能&#47;实现错误”,“以终为始”失败测试就是那个“终”帮助确定产品代码缺少当前失败测试所捕获的“功能”.<br>4) 此阶段的目标:确定“终”后需努力不落空!<br>   <br>4. 为什么一定要快速看到绿灯?<br>1) 关注点分离,“终”已经由失败的测试确定,代码只要通过“终”即可.<br>2) 代码硬编码,僵化,设计不好等问题,要么是“终”不够多,要么是重构阶段的锅<br>3) 此阶段的目标:用尽可能简洁的代码使当前所有测试通过!<br><br>5. 为什么一定要重构?<br>1) 好的代码使重构出来的,这里指的是代码的实现,API一般是提前构思好的,偶有部分返工.<br>2) 识别代码坏味道,熟练运用重构方法&#47;技巧&#47;工具及软件设计思想&#47;原则&#47;模式等驱动出最终产品代码和测试代码<br>3) 强调:测试代码也需要重构!<br>4) 每次重构都要运行所有测试,确保绿灯!一旦红灯,回退到绿灯再重构!<br>5) 此阶段的目标:弥补为了快速看到绿灯所犯的过错!<br><br>实践TDD就像玩游戏,进入下一个关卡(红灯&#47;绿灯&#47;重构)前先保存进度(git),挂了就重来!","like_count":18,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557334,"discussion_content":"good job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647768734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187021,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","nickname":"Gojustforfun","note":"","ucode":"7513A40F27344F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558377,"discussion_content":"第一周Go演示git提交记录:\nhttps://github.com/longyue0521/TDD-In-Go/commits/args\n\n这次我利用Github上提交记录按天分隔的特性使提交记录更好找.\nCommits on Mar 25, 2022之前的内容与本篇文章对应,采用baby step每步都有提交记录可以对比学习.\n如果觉得本项目对你有帮助,欢迎留言、star","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648263610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339122,"user_name":"🐑","can_delete":false,"product_type":"c1","uid":2189689,"ip_address":"","ucode":"DE34B3B14287D1","user_header":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","comment_is_top":true,"comment_ctime":1647932892,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"9.2233720599775007e+18","product_id":100109401,"comment_content":"大家好～我是TDD这门课的编辑辰洋～<br><br>🎐我来友情提示一下下～<br><br>01-04是视频演示，好对TDD有个感性的认识。<br><br>05-10是对演示的复盘，同时也会讲解TDD的相关知识点。比如测试的基本结构，TDD中的测试是啥～<br><br>所以，如果你在01-04的操作卡壳了，可以从05开始学，看看5-10，这才是重点哇！看完再回头去看01-04～","like_count":4,"discussions":[{"author":{"id":1002113,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/81/abb7bfe3.jpg","nickname":"吴鹏","note":"","ucode":"EB7A78CD198E33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560286,"discussion_content":"手机版无法横屏观看，比较难受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649251823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":1002113,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/81/abb7bfe3.jpg","nickname":"吴鹏","note":"","ucode":"EB7A78CD198E33","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568110,"discussion_content":"正在修复中，下一版发布就可以横屏啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651067066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":560286,"ip_address":""},"score":568110,"extra":""}]}]},{"had_liked":false,"id":338620,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":true,"comment_ctime":1647603743,"is_pvip":false,"replies":[{"id":"123777","content":"项目二 更复杂的例子","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647612392,"ip_address":"","comment_id":338620,"utype":1}],"discussion_count":1,"race_medal":0,"score":"9.2233720427972997e+18","product_id":100109401,"comment_content":"总结<br>1.分离关注点，实现的时候只关注一个原子功能点的实现，不关心重构。（不纠结坏味道）<br>2.重构的时只看红绿过不过，不关心功能实现。（不需要顾虑是否改坏了）<br><br>疑问：<br>1.当前例子可以拆分成一个个原子功能，彼此没依赖。但有些时候功能与功能间是会嵌套的，该把他们拆开还是合并成一个去看？拆分原子功能（测试列表）的粒度是个难点。<br>2.实际工作中，我们伴随的可能是大量需要mock的接口，又该如何平衡？","like_count":2,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557027,"discussion_content":"项目二 更复杂的例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647612392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343905,"user_name":"🐑","can_delete":false,"product_type":"c1","uid":2189689,"ip_address":"","ucode":"DE34B3B14287D1","user_header":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","comment_is_top":true,"comment_ctime":1651116004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"9.2233720385059e+18","product_id":100109401,"comment_content":"TDD专栏福利大合集：<br><br>1、打卡赢好礼（4月23日-5月10日）：正在进行中，学习专栏第1-10讲并在留言区打卡，结束后奖励；<br><br>2、代码亲手评（5月底）：预计打卡结束后启动，完成前10讲的打卡，即可提交代码练习作业，徐昊老师会亲自点评；<br><br>3、线上带你练：根据专栏更新节奏和老师时间安排确定，徐昊老师会线上带四个同学手把手地改代码，敬请期待！<br><br>具体活动介绍见 👉 http:&#47;&#47;gk.link&#47;a&#47;11jPi","like_count":0},{"had_liked":false,"id":338910,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1647785749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23122622229","product_id":100109401,"comment_content":"第一课笔记与源码都在这里 https:&#47;&#47;www.wyyl1.com&#47;post&#47;19&#47;01&#47;<br>附相关学习笔记：<br>《代码整洁之道》学习笔记 https:&#47;&#47;www.wyyl1.com&#47;post&#47;18&#47;01&#47;<br>《Java 测试驱动开发》学习笔记 https:&#47;&#47;www.wyyl1.com&#47;post&#47;18&#47;02&#47;<br>《测试驱动开发的艺术》学习笔记 https:&#47;&#47;www.wyyl1.com&#47;post&#47;18&#47;03&#47;","like_count":6},{"had_liked":false,"id":338334,"user_name":"邓志国","can_delete":false,"product_type":"c1","uid":1043844,"ip_address":"","ucode":"380AE67ED7B9D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/84/0b8e2d25.jpg","comment_is_top":false,"comment_ctime":1647425913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23122262393","product_id":100109401,"comment_content":"以前我也是不做设计，依赖重构。以后可以尝试下做一下。另外用注释拆解任务这个不错","like_count":5},{"had_liked":false,"id":339842,"user_name":"大布丁","can_delete":false,"product_type":"c1","uid":1389744,"ip_address":"","ucode":"3C655AA79A538C","user_header":"https://static001.geekbang.org/account/avatar/00/15/34/b0/8d14a2a1.jpg","comment_is_top":false,"comment_ctime":1648434515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14533336403","product_id":100109401,"comment_content":"对 java 不是特别熟练的新人像我一样学习TDD，可能有很多困惑<br>建议可以先跟着 Learn Go with tests 敲代码过一遍流程：<br>https:&#47;&#47;studygolang.gitbook.io&#47;learn-go-with-tests<br>这样不仅能学习go语言，对于TDD的操作也会有一些了解，内心的不适应也会消散很多！<br>","like_count":3},{"had_liked":false,"id":343100,"user_name":"李圣悦","can_delete":false,"product_type":"c1","uid":1638427,"ip_address":"","ucode":"C1786C98824E50","user_header":"https://static001.geekbang.org/account/avatar/00/19/00/1b/eee13196.jpg","comment_is_top":false,"comment_ctime":1650626803,"is_pvip":false,"replies":[{"id":"125323","content":"建模 分成根据数据进行操作 和按照实际情况生产数据两部分","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1650709119,"ip_address":"","comment_id":343100,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10240561395","product_id":100109401,"comment_content":"java不太懂，tdd有不好的地方吗？往自己做的项目上套，大多业务相关的需要复杂环境，简单的获取cpu占用率，这种的如何自动化验证结果正确？如果更加复杂无法简单构造环境的呢？","like_count":2,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566515,"discussion_content":"建模 分成根据数据进行操作 和按照实际情况生产数据两部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650709120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339360,"user_name":"文经","can_delete":false,"product_type":"c1","uid":1072346,"ip_address":"","ucode":"2C059BD2A4276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/5c/da/0a8bc27b.jpg","comment_is_top":false,"comment_ctime":1648044055,"is_pvip":true,"replies":[{"id":"124057","content":"可以找找其他资料","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1648051598,"ip_address":"","comment_id":339360,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5943011351","product_id":100109401,"comment_content":"徐老师，我对Java不了解，通过注解编写测试用例隐藏了太多实现的细节，也多细节没看懂。能不能加个餐，介绍一下Java 通过注解编写的原理。","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558039,"discussion_content":"可以找找其他资料","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648051599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338355,"user_name":"阿崔cxr","can_delete":false,"product_type":"c1","uid":1177565,"ip_address":"","ucode":"26E2C7D96306A4","user_header":"https://static001.geekbang.org/account/avatar/00/11/f7/dd/c85f2065.jpg","comment_is_top":false,"comment_ctime":1647436282,"is_pvip":false,"replies":[{"id":"123678","content":"任务划分巧妙的话 可以避免triangel，不然重组测试的时候还麻烦","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647446753,"ip_address":"","comment_id":338355,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5942403578","product_id":100109401,"comment_content":"红 &#47; 绿循环这一集里<br>我看是先写了一个伪实现，然后通过取反的测试来驱动出真正的实现<br>我自己的做法是按照 TPP 的步骤，一开始也是伪实现，不过因为我知道他是错误的，所以直接在这一个测试的基础上就直接把代码实现成正确的了， 没有做取反的测试。<br>","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556677,"discussion_content":"任务划分巧妙的话 可以避免triangel，不然重组测试的时候还麻烦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647446753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448198,"avatar":"https://static001.geekbang.org/account/avatar/00/16/19/06/fc2f127b.jpg","nickname":"秋晓浦","note":"","ucode":"7B98E05B472990","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556695,"discussion_content":"能出个js 实现吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647476945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349913,"user_name":"Geek_a03aa5","can_delete":false,"product_type":"c1","uid":2831425,"ip_address":"","ucode":"700D44BF7AC3D2","user_header":"","comment_is_top":false,"comment_ctime":1656423125,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656423125","product_id":100109401,"comment_content":"这是我见过的最合理地使用 Idea 中“TODO 高亮”跟“创建缺失类”的演示。","like_count":0},{"had_liked":false,"id":349695,"user_name":"Geek__ILoveStudyAndWork","can_delete":false,"product_type":"c1","uid":1453131,"ip_address":"","ucode":"47FFA5F59019CA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/4wiaKDwz4YI8B68hLd7qSa6SrIOqkBo67Y7gcIFevGHgaAKzbK5PoXcIJJhrmkzKyWvWOkYcMs66iav5EVbHZ9ag/132","comment_is_top":false,"comment_ctime":1656233163,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1656233163","product_id":100109401,"comment_content":"对record类型比较生疏的同学可以参考一下实现：<br>Java8版本：https:&#47;&#47;github.com&#47;ILoveStudyAndWork&#47;geek-tdd-args-java8<br>以免一时间面对较多的新事物而引起恐慌和畏难情绪 ","like_count":1},{"had_liked":false,"id":346791,"user_name":"冯俊晨","can_delete":false,"product_type":"c1","uid":1804532,"ip_address":"","ucode":"EFD31527D9BD4F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/88/f4/58a37635.jpg","comment_is_top":false,"comment_ctime":1653440834,"is_pvip":false,"replies":[{"id":"126713","content":"加油！从0摸索，不容易👍","user_name":"编辑回复","user_name_real":"编辑","uid":"2189689","ctime":1654182367,"ip_address":"","comment_id":346791,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1653440834","product_id":100109401,"comment_content":"作为Java小白，从0摸索配置。<br>Idea IntelliJ -&gt; 创建新项目-&gt; Java &#47; Grovy &#47; Kotlin -&gt; start with sample code；等待编译完成，就形成了第一个视频里代码框架","like_count":0,"discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574624,"discussion_content":"加油！从0摸索，不容易👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654182367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345011,"user_name":"Objective","can_delete":false,"product_type":"c1","uid":1543641,"ip_address":"","ucode":"408FA90F62353E","user_header":"","comment_is_top":false,"comment_ctime":1651932477,"is_pvip":false,"replies":[{"id":"126094","content":"good job！","user_name":"编辑回复","user_name_real":"编辑","uid":"2189689","ctime":1652276093,"ip_address":"","comment_id":345011,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1651932477","product_id":100109401,"comment_content":"TDD PHP DEMO: https:&#47;&#47;github.com&#47;r3nyou&#47;tdd-php-demo","like_count":0,"discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571577,"discussion_content":"good job！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652276093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344293,"user_name":"爱吃彩虹糖的猫~","can_delete":false,"product_type":"c1","uid":1261108,"ip_address":"","ucode":"9EC7A8FD4B7DB1","user_header":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","comment_is_top":false,"comment_ctime":1651427707,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1651427707","product_id":100109401,"comment_content":"看完直呼精彩，上车，并附上自己Java的代码实现：https:&#47;&#47;github.com&#47;pengjunzhen&#47;my-geektime-tdd。<br>看了置顶的 Gojustforfun的提交记录，我觉得下一次也可以参考类似的提交~","like_count":0},{"had_liked":false,"id":343845,"user_name":"不负","can_delete":false,"product_type":"c1","uid":1238323,"ip_address":"","ucode":"147F5860711811","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/33/ff5c52ad.jpg","comment_is_top":false,"comment_ctime":1651075188,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651075188","product_id":100109401,"comment_content":"好家伙，感性认知有点懵逼，get标注类型结构，跟着老师一步一步来吧（1. API接口设计 2. 想想实现方式）","like_count":0},{"had_liked":false,"id":343844,"user_name":"不负","can_delete":false,"product_type":"c1","uid":1238323,"ip_address":"","ucode":"147F5860711811","user_header":"https://static001.geekbang.org/account/avatar/00/12/e5/33/ff5c52ad.jpg","comment_is_top":false,"comment_ctime":1651075165,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651075165","product_id":100109401,"comment_content":"好家伙，感性认知有点懵逼，get标注类型结构，跟着老师一步一步来吧（1. API接口设计 2. 想想实现方式）","like_count":0},{"had_liked":false,"id":341929,"user_name":"NierDaye","can_delete":false,"product_type":"c1","uid":1393961,"ip_address":"","ucode":"BC2E5739529CCE","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/29/2478f7d0.jpg","comment_is_top":false,"comment_ctime":1649922858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649922858","product_id":100109401,"comment_content":"<br>    @Test<br>    public void shouldParseMixedParasOfDifferentTypes() {<br>        ParaParser parser = ParaParser.instance(asList(<br>                new BoolParaDef(&quot;b&quot;),<br>                new IntArrayParaDef(&quot;ia&quot;),<br>                new StringArrayParaDef(&quot;sa&quot;),<br>                new IntParaDef(&quot;i&quot;),<br>                new StringParaDef(&quot;s&quot;)<br>        ));<br><br>        Paras paras = parser<br>                .parse(&quot;-b -ia 1 2 -sa a b -i 123 -s abc&quot;);<br><br>        assertThat(paras.getValueOf(&quot;b&quot;), is(true));<br>        assertThat(paras.getValueOf(&quot;ia&quot;), is(new Integer[]{1, 2}));<br>        assertThat(paras.getValueOf(&quot;sa&quot;), is(new String[]{&quot;a&quot;, &quot;b&quot;}));<br>        assertThat(paras.getValueOf(&quot;i&quot;), is(123));<br>        assertThat(paras.getValueOf(&quot;s&quot;), is(&quot;abc&quot;));<br>    }<br>","like_count":0},{"had_liked":false,"id":341886,"user_name":"吴鹏","can_delete":false,"product_type":"c1","uid":1002113,"ip_address":"","ucode":"EB7A78CD198E33","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/81/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1649903222,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649903222","product_id":100109401,"comment_content":"python语言实现：https:&#47;&#47;github.com&#47;warren-wupeng&#47;xhtdd","like_count":0},{"had_liked":false,"id":340985,"user_name":"奇小易","can_delete":false,"product_type":"c1","uid":1171151,"ip_address":"","ucode":"E06B4DFB5352BB","user_header":"https://static001.geekbang.org/account/avatar/00/11/de/cf/ef2e0501.jpg","comment_is_top":false,"comment_ctime":1649255022,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649255022","product_id":100109401,"comment_content":"2W2H笔记<br><br>what<br>Q: 什么是TDD？<br>A:<br>将软件需求转化为一组自动化测试，再基于测试描绘的场景，逐步实现软件功能的开发方法。<br><br>Q: TDD的基本原则<br>A:<br>1、当且仅当存在失败的自动化测试时，才开始编写生产代码<br>2、消除坏味道（重复等）<br><br>Q: 什么是红&#47;绿&#47;重构循环？<br>A：<br>红&#47;绿&#47;重构是基于TDD原则所衍生出的工作流程。<br>红：编写一个失败的小测试，甚至可以是无法编译的测试。<br>绿：让这个测试快速通过，甚至不惜犯下任何罪恶。<br>重构：消除上一步产生的所有坏味道（重复等）<br><br>How<br>Q: 如何进行TDD？<br>A：<br>任务分解法<br><br>Q：什么是任务分解法？<br>A：<br>1、大致构思开发的软件被使用的方式，构思对外接口（预想最终别人在使用时如何使用。）<br>2、大致构思功能的实现方式，划分所需的组件以及组件间的关系（所谓的架构，此处无思路，可不划分）。（预想大致的实现思路。）<br>3、根据需求的功能描述拆分功能点，功能点要考虑正确路径（Happy Path）和边界条件（Sad Path、Default Value）。<br>4、依照组件以及组件间的关系，将功能拆分到对应组件；（功能点应该就是任务列表的最小单位了）<br>5、针对拆分的结果编写测试，进入红&#47;绿&#47;重构循环。<br><br>例子：命令行参数解析<br>1、明确接口（明确该代码最终是如何被使用，测试代码体现）<br>2、明确具体实现策略（具体的实现思路是将标志位和相关联字符解析为数组来处理）<br>3、功能分解并确定任务列表<br>（将功能点分解到最小；<br>将该功能点的happy path、sad path、default value分解出来；<br>将这些内容转换为任务列表）<br>4、开始红&#47;绿循环，完成happy path功能开发<br><br>How good<br>TDD的准备工作很重要。<br><br>","like_count":0},{"had_liked":false,"id":340318,"user_name":"JC","can_delete":false,"product_type":"c1","uid":1097553,"ip_address":"","ucode":"A95FACC6EE9851","user_header":"https://static001.geekbang.org/account/avatar/00/10/bf/51/1791ae60.jpg","comment_is_top":false,"comment_ctime":1648737974,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648737974","product_id":100109401,"comment_content":"任务分解，用例驱动。有点 get 到感觉了，代码的具体实现不重要，所有用例都过了，说明就是正确的。","like_count":0},{"had_liked":false,"id":340258,"user_name":"陈小虎","can_delete":false,"product_type":"c1","uid":1218864,"ip_address":"","ucode":"CB8707CE7F0BB7","user_header":"https://static001.geekbang.org/account/avatar/00/12/99/30/231af749.jpg","comment_is_top":false,"comment_ctime":1648704371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648704371","product_id":100109401,"comment_content":"高效的节奏 是 TDD 能做下去的必要条件~","like_count":0},{"had_liked":false,"id":339850,"user_name":"利","can_delete":false,"product_type":"c1","uid":1537279,"ip_address":"","ucode":"3EF830E5D9DA53","user_header":"https://static001.geekbang.org/account/avatar/00/17/74/ff/a60f335b.jpg","comment_is_top":false,"comment_ctime":1648437206,"is_pvip":false,"replies":[{"id":"124245","content":"到第12讲，后面三个项目都是实战项目","user_name":"编辑回复","user_name_real":"编辑","uid":"2189689","ctime":1648440365,"ip_address":"","comment_id":339850,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1648437206","product_id":100109401,"comment_content":"能用一个项目实战的方式吗？ 比如真实的项目需求，从需求分解到任务的分解，到测试的目标， 大家都说这种参数的例子，总是有点教科书的感觉","like_count":1,"discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558723,"discussion_content":"到第12讲，后面三个项目都是实战项目","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648440365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339799,"user_name":"术子米德","can_delete":false,"product_type":"c1","uid":1898023,"ip_address":"","ucode":"382EA7E2AF0B56","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f6/27/c27599ae.jpg","comment_is_top":false,"comment_ctime":1648391140,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648391140","product_id":100109401,"comment_content":"🤔☕️🤔☕️🤔<br>* 📖：任务分解法第一步：构思使用方式，把握对外接口的方向<br>    * 🤔：遇到任务，我会先初判它是“内容型”还是“过程型”。所谓内容型，典型模型就是打开它、向它要数据或给它数据、关闭它；所谓过程型，典型模型就是连接它、递交任务描述、同步等结果或异步收结果、断开它。在这两种模型框架下，再具体化任务的过程细节，譬如画出时序图，就比较容易浮现出接口的样子。至于测试用例，从典型用法和疯子用法两个角度思考，典型容易理解，典型也最值得先满足，疯子不是要去满足，而是别被弄死，就是超过能力和范围一律拒绝，这样也比较容易浮现出测试用例的样子。<br>","like_count":0},{"had_liked":false,"id":339061,"user_name":"webmin","can_delete":false,"product_type":"c1","uid":1047014,"ip_address":"","ucode":"98B0CA882454E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/e6/47742988.jpg","comment_is_top":false,"comment_ctime":1647875427,"is_pvip":true,"replies":[{"id":"124061","content":"testability driven","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1648051667,"ip_address":"","comment_id":339061,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647875427","product_id":100109401,"comment_content":"自顶向下分解，拆解为小问题后，逐个解决掉，合起来就把大问题给解决掉了，递归不单是一种算法，也是一种解决计算问题的思维方式。<br>正确路径 主干问题，边界条件 细节问题，就像一颗树的树干、树枝和树叶的关系。<br>看了老师的演示才知道在工程实践中怎么正确的使用TDD来落地预构、实现、验证这个闭环。","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558044,"discussion_content":"testability driven","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648051667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338875,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1647768560,"is_pvip":false,"replies":[{"id":"123833","content":"纸上得来终觉浅，绝知此事要躬行。","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647779689,"ip_address":"","comment_id":338875,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1647768560","product_id":100109401,"comment_content":"两天前看完视频，感觉很容易，当自信满满的开始练习时，完全不像视频中行云流水，而是一步一个砍。最后跟着视频写代码，写到解析多参数时感觉像在 LeetCode 上做算法题。以下是解题思路（最终还是跟着老师的视频敲代码。实现第一个布尔类型的时候用 Stream 求解，结果到第二个求整数的时候发现还是 List 好用，又换了回去）<br><br>TDD 模板<br>1. API 构思与组件划分<br>   首先我们需要考虑，**别人将以何种方式使用这段代码**，也就是这段代码的整体对外接口部分。<br>   我们可以通过写测试的方式，来感受 API 的友好程度<br>2. 在确定了 API 的形式之后，我们需要大致构思如何实现这个功能<br>3. 功能分解与任务列表 ⭐️⭐️⭐️⭐️⭐️（TDD 核心之一）<br>   在 API 与实现方式有了方向之后，我们就可以根据需求的描述对功能进行分解了。<br>   这里可以先不求全面，有个大致的范围即可<br>4. 红 &#47; 绿循环<br>   那么先让我们选择最简单的任务，并通过红绿循环实现它<br><br>功能分析：解析空格分割的字符串<br>示例：-l -p 8080 -d &#47;usr&#47;logs -g this is a list -d 1 2 -3 5<br><br>功能<br>- 减号后的字符代表一个功能符号<br>- l<br>  - 功能：日志，没有相关的值<br>  - 类型：布尔<br>  - 描述：存在=true；不存在=false<br>- p<br>  - 功能：端口<br>  - 类型：整数<br>  - 描述：有一个整数值<br>- d<br>  - 功能：目录<br>  - 类型：字符串<br>  - 描述有一个字符串<br>- g<br>  - 功能：一个字符串列表<br>  - 类型：字符串<br>- d<br>  - 功能：表示一个整数列表<br>  - 类型：整数组成的字符串<br>- 如果参数中没有指定某个标志，那么解析器应该指定一个默认值<br>  - 布尔：false<br>  - 整数：0<br>  - 列表：[]<br>- 如果给出的参数与模式不匹配，给出友好提示<br>  - 简要错误信息<br>  - 告知错误原因<br><br>三种实现方式<br>1. -l -p 8080 -d &#47;usr&#47;logs 一次解析整个字符串解析（难度大）<br>2. [-l], [-p, 8080], [-d, &#47;usr&#47;logs] 按功能划分，处理特定数组（简单）💡 课程中选取了最简单的方案实现<br>3. {-l:[], -p:[8080], -d:[&#47;usr&#47;logs]} 按功能划分，从Map中取出相应的值（比数组复杂）<br><br>方式 2 具体实现<br>  单个功能<br>  布尔类型：-l<br>  单整数类型：-p 8080<br>  单个连续字符串类型：-d &#47;usr&#47;logs<br><br>  组合功能<br>  -l -p 8080 -d &#47;usr&#47;logs<br><br>  异常情况<br>  布尔类型：输入 -l a; -l 3<br>  单整数类型：输入 -p a; -p 3.14<br>  单个连续字符串类型：输入 -d a b c; -d &#47;usr&#47;logs &#47;usr&#47;logs&#47;a.log<br><br>感悟：站在使用者的角度看待自己的代码","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557372,"discussion_content":"纸上得来终觉浅，绝知此事要躬行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647779689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":557443,"discussion_content":"谢谢老师指点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647824624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":557372,"ip_address":""},"score":557443,"extra":""}]}]},{"had_liked":false,"id":338834,"user_name":"Geek_fa4b49","can_delete":false,"product_type":"c1","uid":1748516,"ip_address":"","ucode":"09559B605EB8D7","user_header":"","comment_is_top":false,"comment_ctime":1647758815,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1647758815","product_id":100109401,"comment_content":"1. 非常认同TDD前需要做简单的设计，我们不能极端：需要做简单的设计，为了构思系统的大概结构和想要的样子（输入输出）。也不能完全的把系统的所有细节都设计完成才开始写代码。<br>2. 看到老师的实现，感觉个人的经验的编码能力也非常重要，特别是使用record和option这些比较好的实践，需要平时不断的实践、总结和尝试，否则想都想不到这种实现方法。","like_count":0},{"had_liked":false,"id":338694,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1647667180,"is_pvip":true,"replies":[{"id":"123811","content":"看场景 放哪都有可能 放哪都有道理","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647673182,"ip_address":"","comment_id":338694,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647667180","product_id":100109401,"comment_content":"老师 能问问权限认证放在接口层还是应用层呀 为什么？","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557139,"discussion_content":"看场景 放哪都有可能 放哪都有道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647673183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338671,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1383148,"ip_address":"","ucode":"24401B70B6B40A","user_header":"https://static001.geekbang.org/account/avatar/00/15/1a/ec/4d272448.jpg","comment_is_top":false,"comment_ctime":1647655280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647655280","product_id":100109401,"comment_content":"感觉第0步(拆解任务) 和 第3步(重构) 挺难的.<br><br>对于前端开发UI样式该如何TDD?<br>还是TDD有它的适用范围?  (逻辑处理?)","like_count":0},{"had_liked":false,"id":338539,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1647565224,"is_pvip":false,"replies":[{"id":"123733","content":"对 tdd的核心之一","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647568298,"ip_address":"","comment_id":338539,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647565224","product_id":100109401,"comment_content":"原来需要一个 TDOD list ，不是想到什么写什么","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556896,"discussion_content":"对 tdd的核心之一","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647568298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338525,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1647538690,"is_pvip":true,"replies":[{"id":"123732","content":"可以 但没必要","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647564091,"ip_address":"","comment_id":338525,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647538690","product_id":100109401,"comment_content":"老师 DDD只能用于业务建模嘛 框架比如Spring zookeeper 能用ddd嘛","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556879,"discussion_content":"可以 但没必要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647564091,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338424,"user_name":"Yuchen","can_delete":false,"product_type":"c1","uid":1937117,"ip_address":"","ucode":"BAFE4303F97C01","user_header":"https://static001.geekbang.org/account/avatar/00/1d/8e/dd/389db865.jpg","comment_is_top":false,"comment_ctime":1647498088,"is_pvip":false,"replies":[{"id":"123700","content":"也不需要分那么细","user_name":"作者回复","user_name_real":"编辑","uid":"2537798","ctime":1647498441,"ip_address":"","comment_id":338424,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1647498088","product_id":100109401,"comment_content":"跟项目管理里面的任务管理中的任务分解到,无法分解差不多","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556746,"discussion_content":"也不需要分那么细","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647498442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338383,"user_name":"枫中的刀剑","can_delete":false,"product_type":"c1","uid":1322387,"ip_address":"","ucode":"4B086F538184AA","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/93/0f1cbf44.jpg","comment_is_top":false,"comment_ctime":1647478336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647478336","product_id":100109401,"comment_content":"本以为很熟悉args了，看完老师的视频发现还是又学到了不少，比如用注解来拆分，比如在测试里直接用注释列出TODO，自己的习惯都是另起一个文本来列表。<br>不同试实现策略，在happy path上的处理感觉都是差不多的，但是在sad path 上还是挺大差异的。 选择简单的策略，处理起来感觉要轻松一些。","like_count":0},{"had_liked":false,"id":338378,"user_name":"明星","can_delete":false,"product_type":"c1","uid":1336838,"ip_address":"","ucode":"FE7B4033DDCFEF","user_header":"https://static001.geekbang.org/account/avatar/00/14/66/06/c983b547.jpg","comment_is_top":false,"comment_ctime":1647473641,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647473641","product_id":100109401,"comment_content":"“根据需求的功能描述拆分功能点，功能点要考虑正确路径（Happy Path）和边界条件（Side Path）；”","like_count":0}]}